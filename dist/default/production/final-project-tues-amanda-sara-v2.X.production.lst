

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 13 12:19:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    98                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    99                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112  0000                     
   113                           ; Version 2.20
   114                           ; Generated 05/05/2020 GMT
   115                           ; 
   116                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F67K40 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	idataBANK1
   149  006380                     __pidataBANK1:
   150                           	callstack 0
   151                           
   152                           ;initializer for stoa@F1163
   153  006380  28                 	db	40
   154  006381  6E                 	db	110
   155  006382  75                 	db	117
   156  006383  6C                 	db	108
   157  006384  6C                 	db	108
   158  006385  29                 	db	41
   159  006386  00                 	db	0
   160                           
   161                           	psect	nvCOMRAM
   162  000054                     __pnvCOMRAM:
   163                           	callstack 0
   164  000054                     _interrupts_upperbound:
   165                           	callstack 0
   166  000054                     	ds	2
   167  0000                     _INT1PPS	set	3569
   168  0000                     _RC7PPS	set	3689
   169  0000                     _RE2PPS	set	3700
   170  0000                     _PIE4bits	set	3629
   171  0000                     _TX4REG	set	3812
   172  0000                     _RC4REG	set	3811
   173  0000                     _PIR4bits	set	3639
   174  0000                     _RC4STAbits	set	3815
   175  0000                     _SP4BRGH	set	3814
   176  0000                     _SP4BRGL	set	3813
   177  0000                     _TX4STAbits	set	3816
   178  0000                     _BAUD4CONbits	set	3817
   179  0000                     _RX4PPS	set	3605
   180  0000                     _RC0PPS	set	3682
   181  0000                     _SSP2BUF	set	3797
   182  0000                     _SSP2CON2bits	set	3802
   183  0000                     _SSP2CON2	set	3802
   184  0000                     _SSP2STAT	set	3800
   185  0000                     _RD6PPS	set	3696
   186  0000                     _RD5PPS	set	3695
   187  0000                     _SSP2CLKPPS	set	3612
   188  0000                     _SSP2DATPPS	set	3613
   189  0000                     _ANSELDbits	set	3751
   190  0000                     _SSP2ADD	set	3798
   191  0000                     _SSP2CON1bits	set	3801
   192  0000                     _ANSELFbits	set	3764
   193  0000                     _PIR0bits	set	3635
   194  0000                     _IPR0bits	set	3615
   195  0000                     _PIE0bits	set	3625
   196  0000                     _ANSELBbits	set	3738
   197  0000                     _ADPCH	set	3935
   198  0000                     _ADREFbits	set	3928
   199  0000                     _T0CON0bits	set	4053
   200  0000                     _T0CON1bits	set	4054
   201  0000                     _PWM7CONbits	set	4001
   202  0000                     _PWM6CONbits	set	4004
   203  0000                     _LATCbits	set	3963
   204  0000                     _LATEbits	set	3965
   205  0000                     _TRISEbits	set	3973
   206  0000                     _T2PR	set	4028
   207  0000                     _T2CLKCONbits	set	4031
   208  0000                     _T2HLTbits	set	4030
   209  0000                     _T2CONbits	set	4029
   210  0000                     _TRISCbits	set	3971
   211  0000                     _TRISAbits	set	3969
   212  0000                     _TRISGbits	set	3975
   213  0000                     _TRISHbits	set	3976
   214  0000                     _TRISDbits	set	3972
   215  0000                     _ADRESH	set	3940
   216  0000                     _ADCON0bits	set	3936
   217  0000                     _TRISFbits	set	3974
   218  0000                     _LATFbits	set	3966
   219  0000                     _LATAbits	set	3961
   220  0000                     _LATGbits	set	3967
   221  0000                     _LATHbits	set	3968
   222  0000                     _TMR0L	set	4051
   223  0000                     _TMR0H	set	4052
   224  0000                     _INTCONbits	set	4082
   225  0000                     _TRISBbits	set	3970
   226  0000                     _LATDbits	set	3964
   227  0000                     _PORTFbits	set	3982
   228  0000                     _LATG	set	3967
   229  0000                     _PWM7DCH	set	4000
   230  0000                     _LATE	set	3965
   231  0000                     _PWM6DCH	set	4003
   232                           
   233                           	psect	smallconst
   234  000E00                     __psmallconst:
   235                           	callstack 0
   236  000E00  00                 	db	0
   237  000E01                     STR_1:
   238                           
   239                           ; BSR set to: 14
   240  000E01  52                 	db	82	;'R'
   241  000E02  47                 	db	71	;'G'
   242  000E03  42                 	db	66	;'B'
   243  000E04  43                 	db	67	;'C'
   244  000E05  3A                 	db	58	;':'
   245  000E06  20                 	db	32
   246  000E07  25                 	db	37
   247  000E08  69                 	db	105	;'i'
   248  000E09  20                 	db	32
   249  000E0A  25                 	db	37
   250  000E0B  69                 	db	105	;'i'
   251  000E0C  20                 	db	32
   252  000E0D  25                 	db	37
   253  000E0E  69                 	db	105	;'i'
   254  000E0F  20                 	db	32
   255  000E10  25                 	db	37
   256  000E11  69                 	db	105	;'i'
   257  000E12  20                 	db	32
   258  000E13  20                 	db	32
   259  000E14  20                 	db	32
   260  000E15  20                 	db	32
   261  000E16  20                 	db	32
   262  000E17  52                 	db	82	;'R'
   263  000E18  47                 	db	71	;'G'
   264  000E19  42                 	db	66	;'B'
   265  000E1A  43                 	db	67	;'C'
   266  000E1B  5F                 	db	95	;'_'
   267  000E1C  72                 	db	114	;'r'
   268  000E1D  65                 	db	101	;'e'
   269  000E1E  6C                 	db	108	;'l'
   270  000E1F  3A                 	db	58	;':'
   271  000E20  20                 	db	32
   272  000E21  25                 	db	37
   273  000E22  2E                 	db	46
   274  000E23  33                 	db	51	;'3'
   275  000E24  66                 	db	102	;'f'
   276  000E25  20                 	db	32
   277  000E26  25                 	db	37
   278  000E27  2E                 	db	46
   279  000E28  33                 	db	51	;'3'
   280  000E29  66                 	db	102	;'f'
   281  000E2A  20                 	db	32
   282  000E2B  25                 	db	37
   283  000E2C  2E                 	db	46
   284  000E2D  33                 	db	51	;'3'
   285  000E2E  66                 	db	102	;'f'
   286  000E2F  20                 	db	32
   287  000E30  20                 	db	32
   288  000E31  20                 	db	32
   289  000E32  20                 	db	32
   290  000E33  20                 	db	32
   291  000E34  43                 	db	67	;'C'
   292  000E35  6F                 	db	111	;'o'
   293  000E36  6C                 	db	108	;'l'
   294  000E37  6F                 	db	111	;'o'
   295  000E38  75                 	db	117	;'u'
   296  000E39  72                 	db	114	;'r'
   297  000E3A  3A                 	db	58	;':'
   298  000E3B  20                 	db	32
   299  000E3C  25                 	db	37
   300  000E3D  73                 	db	115	;'s'
   301  000E3E  0A                 	db	10
   302  000E3F  0D                 	db	13
   303  000E40  00                 	db	0
   304  000E41                     STR_19:
   305                           
   306                           ; BSR set to: 14
   307  000E41  52                 	db	82	;'R'
   308  000E42  47                 	db	71	;'G'
   309  000E43  42                 	db	66	;'B'
   310  000E44  43                 	db	67	;'C'
   311  000E45  3A                 	db	58	;':'
   312  000E46  20                 	db	32
   313  000E47  25                 	db	37
   314  000E48  69                 	db	105	;'i'
   315  000E49  20                 	db	32
   316  000E4A  25                 	db	37
   317  000E4B  69                 	db	105	;'i'
   318  000E4C  20                 	db	32
   319  000E4D  25                 	db	37
   320  000E4E  69                 	db	105	;'i'
   321  000E4F  20                 	db	32
   322  000E50  25                 	db	37
   323  000E51  69                 	db	105	;'i'
   324  000E52  20                 	db	32
   325  000E53  20                 	db	32
   326  000E54  20                 	db	32
   327  000E55  20                 	db	32
   328  000E56  20                 	db	32
   329  000E57  54                 	db	84	;'T'
   330  000E58  68                 	db	104	;'h'
   331  000E59  72                 	db	114	;'r'
   332  000E5A  65                 	db	101	;'e'
   333  000E5B  73                 	db	115	;'s'
   334  000E5C  68                 	db	104	;'h'
   335  000E5D  6F                 	db	111	;'o'
   336  000E5E  6C                 	db	108	;'l'
   337  000E5F  64                 	db	100	;'d'
   338  000E60  3A                 	db	58	;':'
   339  000E61  20                 	db	32
   340  000E62  25                 	db	37
   341  000E63  69                 	db	105	;'i'
   342  000E64  20                 	db	32
   343  000E65  25                 	db	37
   344  000E66  69                 	db	105	;'i'
   345  000E67  20                 	db	32
   346  000E68  25                 	db	37
   347  000E69  69                 	db	105	;'i'
   348  000E6A  0A                 	db	10
   349  000E6B  0D                 	db	13
   350  000E6C  00                 	db	0
   351  000E6D                     STR_10:
   352                           
   353                           ; BSR set to: 14
   354  000E6D  6C                 	db	108	;'l'
   355  000E6E  69                 	db	105	;'i'
   356  000E6F  67                 	db	103	;'g'
   357  000E70  68                 	db	104	;'h'
   358  000E71  74                 	db	116	;'t'
   359  000E72  20                 	db	32
   360  000E73  62                 	db	98	;'b'
   361  000E74  6C                 	db	108	;'l'
   362  000E75  75                 	db	117	;'u'
   363  000E76  65                 	db	101	;'e'
   364  000E77  00                 	db	0
   365  000E78                     
   366                           ; BSR set to: 14
   367  000E78  75                 	db	117	;'u'
   368  000E79  6E                 	db	110	;'n'
   369  000E7A  6B                 	db	107	;'k'
   370  000E7B  6E                 	db	110	;'n'
   371  000E7C  6F                 	db	111	;'o'
   372  000E7D  77                 	db	119	;'w'
   373  000E7E  6E                 	db	110	;'n'
   374  000E7F  00                 	db	0
   375  000E80                     
   376                           ; BSR set to: 14
   377  000E80  6F                 	db	111	;'o'
   378  000E81  72                 	db	114	;'r'
   379  000E82  61                 	db	97	;'a'
   380  000E83  6E                 	db	110	;'n'
   381  000E84  67                 	db	103	;'g'
   382  000E85  65                 	db	101	;'e'
   383  000E86  00                 	db	0
   384  000E87                     
   385                           ; BSR set to: 14
   386  000E87  79                 	db	121	;'y'
   387  000E88  65                 	db	101	;'e'
   388  000E89  6C                 	db	108	;'l'
   389  000E8A  6C                 	db	108	;'l'
   390  000E8B  6F                 	db	111	;'o'
   391  000E8C  77                 	db	119	;'w'
   392  000E8D  00                 	db	0
   393  000E8E                     
   394                           ; BSR set to: 14
   395  000E8E  77                 	db	119	;'w'
   396  000E8F  68                 	db	104	;'h'
   397  000E90  69                 	db	105	;'i'
   398  000E91  74                 	db	116	;'t'
   399  000E92  65                 	db	101	;'e'
   400  000E93  00                 	db	0
   401  000E94                     
   402                           ; BSR set to: 14
   403  000E94  67                 	db	103	;'g'
   404  000E95  72                 	db	114	;'r'
   405  000E96  65                 	db	101	;'e'
   406  000E97  65                 	db	101	;'e'
   407  000E98  6E                 	db	110	;'n'
   408  000E99  00                 	db	0
   409  000E9A                     
   410                           ; BSR set to: 14
   411  000E9A  70                 	db	112	;'p'
   412  000E9B  69                 	db	105	;'i'
   413  000E9C  6E                 	db	110	;'n'
   414  000E9D  6B                 	db	107	;'k'
   415  000E9E  00                 	db	0
   416  000E9F                     STR_20:
   417                           
   418                           ; BSR set to: 14
   419  000E9F  49                 	db	73	;'I'
   420  000EA0  4E                 	db	78	;'N'
   421  000EA1  46                 	db	70	;'F'
   422  000EA2  00                 	db	0
   423  000EA3                     STR_24:
   424                           
   425                           ; BSR set to: 14
   426  000EA3  4E                 	db	78	;'N'
   427  000EA4  41                 	db	65	;'A'
   428  000EA5  4E                 	db	78	;'N'
   429  000EA6  00                 	db	0
   430  000EA7                     STR_21:
   431                           
   432                           ; BSR set to: 14
   433  000EA7  69                 	db	105	;'i'
   434  000EA8  6E                 	db	110	;'n'
   435  000EA9  66                 	db	102	;'f'
   436  000EAA  00                 	db	0
   437  000EAB                     STR_25:
   438                           
   439                           ; BSR set to: 14
   440  000EAB  6E                 	db	110	;'n'
   441  000EAC  61                 	db	97	;'a'
   442  000EAD  6E                 	db	110	;'n'
   443  000EAE  00                 	db	0
   444  000EAF                     
   445                           ; BSR set to: 14
   446  000EAF  72                 	db	114	;'r'
   447  000EB0  65                 	db	101	;'e'
   448  000EB1  64                 	db	100	;'d'
   449  000EB2  00                 	db	0
   450  000EB3                     STR_28:
   451                           
   452                           ; BSR set to: 14
   453  000EB3  6C                 	db	108	;'l'
   454  000EB4  66                 	db	102	;'f'
   455  000EB5  00                 	db	0
   456  000EB6  00                 	db	0	; dummy byte at the end
   457  0000                     
   458                           ; #config settings
   459                           
   460                           	psect	cinit
   461  005AA2                     __pcinit:
   462                           	callstack 0
   463  005AA2                     start_initialization:
   464                           	callstack 0
   465  005AA2                     __initialization:
   466                           	callstack 0
   467                           
   468                           ; Initialize objects allocated to BANK1 (7 bytes)
   469                           ; load TBLPTR registers with __pidataBANK1
   470  005AA2  0E80               	movlw	low __pidataBANK1
   471  005AA4  6EF6               	movwf	tblptrl,c
   472  005AA6  0E63               	movlw	high __pidataBANK1
   473  005AA8  6EF7               	movwf	tblptrh,c
   474  005AAA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   475  005AAC  6EF8               	movwf	tblptru,c
   476  005AAE  EE01  F0D9         	lfsr	0,__pdataBANK1
   477  005AB2  EE10 F007          	lfsr	1,7
   478  005AB6                     copy_data0:
   479  005AB6  0009               	tblrd		*+
   480  005AB8  CFF5 FFEE          	movff	tablat,postinc0
   481  005ABC  50E5               	movf	postdec1,w,c
   482  005ABE  50E1               	movf	fsr1l,w,c
   483  005AC0  E1FA               	bnz	copy_data0
   484                           
   485                           ; Clear objects allocated to BANK2 (60 bytes)
   486  005AC2  EE02  F000         	lfsr	0,__pbssBANK2
   487  005AC6  0E3C               	movlw	60
   488  005AC8                     clear_0:
   489  005AC8  6AEE               	clrf	postinc0,c
   490  005ACA  06E8               	decf	wreg,f,c
   491  005ACC  E1FD               	bnz	clear_0
   492                           
   493                           ; Clear objects allocated to BANK1 (124 bytes)
   494  005ACE  EE01  F000         	lfsr	0,__pbssBANK1
   495  005AD2  0E7C               	movlw	124
   496  005AD4                     clear_1:
   497  005AD4  6AEE               	clrf	postinc0,c
   498  005AD6  06E8               	decf	wreg,f,c
   499  005AD8  E1FD               	bnz	clear_1
   500                           
   501                           ; Clear objects allocated to BANK0 (3 bytes)
   502  005ADA  0100               	movlb	0
   503  005ADC  6BF6               	clrf	(__pbssBANK0+2)& (0+255),b
   504  005ADE  6BF5               	clrf	(__pbssBANK0+1)& (0+255),b
   505  005AE0  6BF4               	clrf	__pbssBANK0& (0+255),b
   506                           
   507                           ; Clear objects allocated to COMRAM (7 bytes)
   508  005AE2  EE00  F04D         	lfsr	0,__pbssCOMRAM
   509  005AE6  0E07               	movlw	7
   510  005AE8                     clear_2:
   511  005AE8  6AEE               	clrf	postinc0,c
   512  005AEA  06E8               	decf	wreg,f,c
   513  005AEC  E1FD               	bnz	clear_2
   514  005AEE                     end_of_initialization:
   515                           	callstack 0
   516  005AEE                     __end_of__initialization:
   517                           	callstack 0
   518  005AEE  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   519  005AF0  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   520  005AF2  0100               	movlb	0
   521  005AF4  EF95  F020         	goto	_main	;jump to C main() function
   522                           
   523                           	psect	bssCOMRAM
   524  00004D                     __pbssCOMRAM:
   525                           	callstack 0
   526  00004D                     _prec:
   527                           	callstack 0
   528  00004D                     	ds	2
   529  00004F                     _flags:
   530                           	callstack 0
   531  00004F                     	ds	2
   532  000051                     _interrupts_lowerbound:
   533                           	callstack 0
   534  000051                     	ds	2
   535  000053                     _TxBufWriteCnt:
   536                           	callstack 0
   537  000053                     	ds	1
   538                           
   539                           	psect	bssBANK0
   540  0000F4                     __pbssBANK0:
   541                           	callstack 0
   542  0000F4                     _returnhome_flag:
   543                           	callstack 0
   544  0000F4                     	ds	1
   545  0000F5                     _TxBufReadCnt:
   546                           	callstack 0
   547  0000F5                     	ds	1
   548  0000F6                     _RxBufWriteCnt:
   549                           	callstack 0
   550  0000F6                     	ds	1
   551                           
   552                           	psect	bssBANK1
   553  000100                     __pbssBANK1:
   554                           	callstack 0
   555  000100                     _EUSART4RXbuf:
   556                           	callstack 0
   557  000100                     	ds	20
   558  000114                     floorf@F527:
   559                           	callstack 0
   560  000114                     	ds	4
   561  000118                     ___fpclassifyf@F465:
   562                           	callstack 0
   563  000118                     	ds	4
   564  00011C                     _nout:
   565                           	callstack 0
   566  00011C                     	ds	2
   567  00011E                     _width:
   568                           	callstack 0
   569  00011E                     	ds	2
   570  000120                     _clear_upper:
   571                           	callstack 0
   572  000120                     	ds	2
   573  000122                     _clear_lower:
   574                           	callstack 0
   575  000122                     	ds	2
   576  000124                     _turnright_delay:
   577                           	callstack 0
   578  000124                     	ds	2
   579  000126                     _turnleft_delay:
   580                           	callstack 0
   581  000126                     	ds	2
   582  000128                     _unknowncard_flag:
   583                           	callstack 0
   584  000128                     	ds	1
   585  000129                     _colourcard_flag:
   586                           	callstack 0
   587  000129                     	ds	1
   588  00012A                     _overtime_flag:
   589                           	callstack 0
   590  00012A                     	ds	1
   591  00012B                     _RxBufReadCnt:
   592                           	callstack 0
   593  00012B                     	ds	1
   594  00012C                     _dbuf:
   595                           	callstack 0
   596  00012C                     	ds	80
   597                           
   598                           	psect	dataBANK1
   599  0001D9                     __pdataBANK1:
   600                           	callstack 0
   601  0001D9                     stoa@F1163:
   602                           	callstack 0
   603  0001D9                     	ds	7
   604                           
   605                           	psect	bssBANK2
   606  000200                     __pbssBANK2:
   607                           	callstack 0
   608  000200                     _EUSART4TXbuf:
   609                           	callstack 0
   610  000200                     	ds	60
   611                           
   612                           	psect	cstackBANK1
   613  00017C                     __pcstackBANK1:
   614                           	callstack 0
   615  00017C                     colourclick_testing@buf:
   616                           	callstack 0
   617                           
   618                           ; 40 bytes @ 0x0
   619  00017C                     	ds	40
   620  0001A4                     colourclick_testing@ambient:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x28
   624  0001A4                     	ds	2
   625  0001A6                     colourclick_testing@R:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x2A
   629  0001A6                     	ds	2
   630  0001A8                     colourclick_testing@G:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x2C
   634  0001A8                     	ds	2
   635  0001AA                     colourclick_testing@B:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x2E
   639  0001AA                     	ds	2
   640  0001AC                     colourclick_testing@C:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x30
   644  0001AC                     	ds	2
   645  0001AE                     colourclick_calibration@i:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x32
   649  0001AE                     	ds	1
   650  0001AF                     colourclick_calibration@initial:
   651                           	callstack 0
   652                           
   653                           ; 8 bytes @ 0x33
   654  0001AF                     	ds	8
   655  0001B7                     colourclick_calibration@current:
   656                           	callstack 0
   657                           
   658                           ; 8 bytes @ 0x3B
   659  0001B7                     	ds	8
   660  0001BF                     main@current:
   661                           	callstack 0
   662                           
   663                           ; 8 bytes @ 0x43
   664  0001BF                     	ds	8
   665  0001C7                     main@motorL:
   666                           	callstack 0
   667                           
   668                           ; 9 bytes @ 0x4B
   669  0001C7                     	ds	9
   670  0001D0                     main@motorR:
   671                           	callstack 0
   672                           
   673                           ; 9 bytes @ 0x54
   674  0001D0                     	ds	9
   675                           
   676                           	psect	cstackBANK0
   677  000060                     __pcstackBANK0:
   678                           	callstack 0
   679  000060                     ?_efgtoa:
   680                           	callstack 0
   681  000060                     efgtoa@fp:
   682                           	callstack 0
   683  000060                     left@delay:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x0
   687  000060                     	ds	2
   688  000062                     efgtoa@f:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x2
   692  000062                     	ds	2
   693  000064                     _left$3571:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x4
   697  000064                     	ds	2
   698  000066                     efgtoa@c:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x6
   702  000066                     	ds	1
   703  000067                     ??_efgtoa:
   704                           
   705                           ; 1 bytes @ 0x7
   706  000067                     	ds	1
   707  000068                     left@i:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x8
   711  000068                     	ds	2
   712  00006A                     turnleft@mL:
   713                           	callstack 0
   714  00006A                     turnright@mL:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xA
   718  00006A                     	ds	2
   719  00006C                     turnleft@mR:
   720                           	callstack 0
   721  00006C                     turnright@mR:
   722                           	callstack 0
   723  00006C                     _efgtoa$3128:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0xC
   727  00006C                     	ds	2
   728  00006E                     turnleft@deg:
   729                           	callstack 0
   730  00006E                     turnright@deg:
   731                           	callstack 0
   732  00006E                     _efgtoa$3129:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0xE
   736  00006E                     	ds	2
   737  000070                     ??_DCmotors_calibration:
   738  000070                     colourcards_readRGBC@abs:
   739                           	callstack 0
   740  000070                     _efgtoa$3133:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x10
   744  000070                     	ds	2
   745  000072                     colourcards_readRGBC@mL:
   746                           	callstack 0
   747  000072                     _efgtoa$3137:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x12
   751  000072                     	ds	2
   752  000074                     colourcards_readRGBC@mR:
   753                           	callstack 0
   754  000074                     _efgtoa$3138:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x14
   758  000074                     	ds	2
   759  000076                     _efgtoa$3139:
   760                           	callstack 0
   761  000076                     colourcards_readRGBC@rel:
   762                           	callstack 0
   763                           
   764                           ; 12 bytes @ 0x16
   765  000076                     	ds	2
   766  000078                     efgtoa@t:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x18
   770  000078                     	ds	2
   771  00007A                     efgtoa@pp:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x1A
   775  00007A                     	ds	2
   776  00007C                     efgtoa@ne:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1C
   780  00007C                     	ds	2
   781  00007E                     efgtoa@m:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x1E
   785  00007E                     	ds	2
   786  000080                     efgtoa@ou:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x20
   790  000080                     	ds	4
   791  000084                     efgtoa@d:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x24
   795  000084                     	ds	2
   796  000086                     efgtoa@sign:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x26
   800  000086                     	ds	2
   801  000088                     efgtoa@p:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x28
   805  000088                     	ds	2
   806  00008A                     efgtoa@w:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x2A
   810  00008A                     	ds	2
   811  00008C                     efgtoa@nmode:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x2C
   815  00008C                     	ds	1
   816  00008D                     efgtoa@mode:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x2D
   820  00008D                     	ds	1
   821  00008E                     efgtoa@h:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x2E
   825  00008E                     	ds	4
   826  000092                     efgtoa@l:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x32
   830  000092                     	ds	4
   831  000096                     efgtoa@i:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x36
   835  000096                     	ds	2
   836  000098                     efgtoa@g:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x38
   840  000098                     	ds	4
   841  00009C                     efgtoa@e:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x3C
   845  00009C                     	ds	2
   846  00009E                     efgtoa@n:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x3E
   850  00009E                     	ds	2
   851  0000A0                     efgtoa@u:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x40
   855  0000A0                     	ds	4
   856  0000A4                     ?_vfpfcnvrt:
   857                           	callstack 0
   858  0000A4                     vfpfcnvrt@fp:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x44
   862  0000A4                     	ds	2
   863  0000A6                     vfpfcnvrt@fmt:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x46
   867  0000A6                     	ds	2
   868  0000A8                     vfpfcnvrt@ap:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x48
   872  0000A8                     	ds	2
   873  0000AA                     vfpfcnvrt@ll:
   874                           	callstack 0
   875                           
   876                           ; 8 bytes @ 0x4A
   877  0000AA                     	ds	8
   878  0000B2                     vfpfcnvrt@cp:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x52
   882  0000B2                     	ds	2
   883  0000B4                     _vfpfcnvrt$3164:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x54
   887  0000B4                     	ds	2
   888  0000B6                     _vfpfcnvrt$3169:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x56
   892  0000B6                     	ds	2
   893  0000B8                     vfpfcnvrt@f:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x58
   897  0000B8                     	ds	4
   898  0000BC                     vfpfcnvrt@ct:
   899                           	callstack 0
   900                           
   901                           ; 3 bytes @ 0x5C
   902  0000BC                     	ds	3
   903  0000BF                     vfpfcnvrt@c:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x5F
   907  0000BF                     	ds	1
   908  0000C0                     ?_vfprintf:
   909                           	callstack 0
   910  0000C0                     vfprintf@fp:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x60
   914  0000C0                     	ds	2
   915  0000C2                     vfprintf@fmt:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x62
   919  0000C2                     	ds	2
   920  0000C4                     vfprintf@ap:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x64
   924  0000C4                     	ds	2
   925  0000C6                     vfprintf@cfmt:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x66
   929  0000C6                     	ds	2
   930  0000C8                     ?_sprintf:
   931                           	callstack 0
   932  0000C8                     sprintf@s:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x68
   936  0000C8                     	ds	2
   937  0000CA                     sprintf@fmt:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x6A
   941  0000CA                     	ds	24
   942  0000E2                     sprintf@ap:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x82
   946  0000E2                     	ds	2
   947  0000E4                     sprintf@f:
   948                           	callstack 0
   949                           
   950                           ; 6 bytes @ 0x84
   951  0000E4                     	ds	6
   952  0000EA                     colourclick_testing@initial:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x8A
   956  0000EA                     	ds	2
   957  0000EC                     colourclick_testing@current:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x8C
   961  0000EC                     	ds	2
   962  0000EE                     ??_colourclick_testing:
   963                           
   964                           ; 1 bytes @ 0x8E
   965  0000EE                     	ds	2
   966  0000F0                     ??_colourclick_calibration:
   967                           
   968                           ; 1 bytes @ 0x90
   969  0000F0                     	ds	2
   970  0000F2                     ??_main:
   971                           
   972                           ; 1 bytes @ 0x92
   973  0000F2                     	ds	2
   974                           
   975                           	psect	cstackCOMRAM
   976  000001                     __pcstackCOMRAM:
   977                           	callstack 0
   978  000001                     ??i2_I2C_2_Master_Idle:
   979  000001                     
   980                           ; 1 bytes @ 0x0
   981  000001                     	ds	1
   982  000002                     i2I2C_2_Master_Write@data_byte:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x1
   986  000002                     	ds	1
   987  000003                     i2colourclick_writetoaddr@value:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x2
   991  000003                     	ds	1
   992  000004                     i2colourclick_writetoaddr@address:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x3
   996  000004                     	ds	1
   997  000005                     ??i2_interrupts_colour:
   998                           
   999                           ; 1 bytes @ 0x4
  1000  000005                     	ds	1
  1001  000006                     ??_HighISR:
  1002  000006                     
  1003                           ; 1 bytes @ 0x5
  1004  000006                     	ds	1
  1005  000007                     ??_LowISR:
  1006                           
  1007                           ; 1 bytes @ 0x6
  1008  000007                     	ds	3
  1009  00000A                     ??_adjdelay:
  1010  00000A                     ??_I2C_2_Master_Idle:
  1011  00000A                     ?_strlen:
  1012                           	callstack 0
  1013  00000A                     ?___fpclassifyf:
  1014                           	callstack 0
  1015  00000A                     ?_isupper:
  1016                           	callstack 0
  1017  00000A                     ?_isdigit:
  1018                           	callstack 0
  1019  00000A                     ?_strncmp:
  1020                           	callstack 0
  1021  00000A                     ?_isspace:
  1022                           	callstack 0
  1023  00000A                     ?___wmul:
  1024                           	callstack 0
  1025  00000A                     ?___awmod:
  1026                           	callstack 0
  1027  00000A                     ?___flneg:
  1028                           	callstack 0
  1029  00000A                     ?___fltol:
  1030                           	callstack 0
  1031  00000A                     ?___xxtofl:
  1032                           	callstack 0
  1033  00000A                     ?___aodiv:
  1034                           	callstack 0
  1035  00000A                     ?___aomod:
  1036                           	callstack 0
  1037  00000A                     ADC_getval@tmpval:
  1038                           	callstack 0
  1039  00000A                     colourclickLEDs_C@tog:
  1040                           	callstack 0
  1041  00000A                     sendCharSerial4@charToSend:
  1042                           	callstack 0
  1043  00000A                     DCmotors_init@PWMperiod:
  1044                           	callstack 0
  1045  00000A                     ___wmul@multiplier:
  1046                           	callstack 0
  1047  00000A                     ___awmod@dividend:
  1048                           	callstack 0
  1049  00000A                     isdigit@c:
  1050                           	callstack 0
  1051  00000A                     isspace@c:
  1052                           	callstack 0
  1053  00000A                     isupper@c:
  1054                           	callstack 0
  1055  00000A                     fputc@c:
  1056                           	callstack 0
  1057  00000A                     strcpy@dest:
  1058                           	callstack 0
  1059  00000A                     strlen@s:
  1060                           	callstack 0
  1061  00000A                     strncmp@_l:
  1062                           	callstack 0
  1063  00000A                     ___fleq@ff1:
  1064                           	callstack 0
  1065  00000A                     ___flneg@f1:
  1066                           	callstack 0
  1067  00000A                     ___fltol@f1:
  1068                           	callstack 0
  1069  00000A                     ___xxtofl@val:
  1070                           	callstack 0
  1071  00000A                     ___fpclassifyf@x:
  1072                           	callstack 0
  1073  00000A                     ___aodiv@dividend:
  1074                           	callstack 0
  1075  00000A                     ___aomod@dividend:
  1076                           	callstack 0
  1077                           
  1078                           ; 8 bytes @ 0x9
  1079  00000A                     	ds	1
  1080  00000B                     ??_I2C_2_Master_Read:
  1081  00000B                     I2C_2_Master_Write@data_byte:
  1082                           	callstack 0
  1083  00000B                     checkbatterylevel@batterylevel:
  1084                           	callstack 0
  1085  00000B                     sendStringSerial4@string:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0xA
  1089  00000B                     	ds	1
  1090  00000C                     ??_isupper:
  1091  00000C                     ??_isdigit:
  1092  00000C                     ??_isspace:
  1093  00000C                     colourclick_writetoaddr@value:
  1094                           	callstack 0
  1095  00000C                     I2C_2_Master_Read@ack:
  1096                           	callstack 0
  1097  00000C                     adjdelay@i:
  1098                           	callstack 0
  1099  00000C                     ___wmul@multiplicand:
  1100                           	callstack 0
  1101  00000C                     ___awmod@divisor:
  1102                           	callstack 0
  1103  00000C                     fputc@fp:
  1104                           	callstack 0
  1105  00000C                     strcpy@src:
  1106                           	callstack 0
  1107  00000C                     strlen@a:
  1108                           	callstack 0
  1109  00000C                     strncmp@_r:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0xB
  1113  00000C                     	ds	1
  1114  00000D                     colourclick_writetoaddr@address:
  1115                           	callstack 0
  1116  00000D                     I2C_2_Master_Read@tmp:
  1117                           	callstack 0
  1118  00000D                     adjdelay@mode:
  1119                           	callstack 0
  1120                           
  1121                           ; 1 bytes @ 0xC
  1122  00000D                     	ds	1
  1123  00000E                     ??_colourclick_init:
  1124  00000E                     ??_interrupts_colour:
  1125  00000E                     ??_fputc:
  1126  00000E                     ??___fpclassifyf:
  1127  00000E                     ??_strcpy:
  1128  00000E                     ??___fltol:
  1129  00000E                     ??___xxtofl:
  1130  00000E                     ?_colourclick_readR:
  1131                           	callstack 0
  1132  00000E                     ?_colourclick_readG:
  1133                           	callstack 0
  1134  00000E                     ?_colourclick_readB:
  1135                           	callstack 0
  1136  00000E                     ?_colourclick_readC:
  1137                           	callstack 0
  1138  00000E                     ___awmod@counter:
  1139                           	callstack 0
  1140  00000E                     ___wmul@product:
  1141                           	callstack 0
  1142  00000E                     strncmp@n:
  1143                           	callstack 0
  1144  00000E                     ___fleq@ff2:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0xD
  1148  00000E                     	ds	1
  1149  00000F                     ___awmod@sign:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0xE
  1153  00000F                     	ds	1
  1154  000010                     ??_strncmp:
  1155  000010                     ??_colourclick_readR:
  1156  000010                     ??_colourclick_readG:
  1157  000010                     ??_colourclick_readB:
  1158  000010                     ??_colourclick_readC:
  1159  000010                     ?_tolower:
  1160                           	callstack 0
  1161  000010                     ?___awdiv:
  1162                           	callstack 0
  1163  000010                     _isspace$3237:
  1164                           	callstack 0
  1165  000010                     ___awdiv@dividend:
  1166                           	callstack 0
  1167  000010                     strcpy@s:
  1168                           	callstack 0
  1169  000010                     tolower@c:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xF
  1173  000010                     	ds	1
  1174  000011                     ?_atoi:
  1175                           	callstack 0
  1176  000011                     atoi@s:
  1177                           	callstack 0
  1178  000011                     strncmp@l:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x10
  1182  000011                     	ds	1
  1183  000012                     ??_tolower:
  1184  000012                     ??___fleq:
  1185  000012                     ___fltol@sign1:
  1186                           	callstack 0
  1187  000012                     ___xxtofl@sign:
  1188                           	callstack 0
  1189  000012                     ___awdiv@divisor:
  1190                           	callstack 0
  1191  000012                     ___fpclassifyf@e:
  1192                           	callstack 0
  1193  000012                     strcpy@d:
  1194                           	callstack 0
  1195  000012                     ___aodiv@divisor:
  1196                           	callstack 0
  1197  000012                     ___aomod@divisor:
  1198                           	callstack 0
  1199                           
  1200                           ; 8 bytes @ 0x11
  1201  000012                     	ds	1
  1202  000013                     ??_atoi:
  1203  000013                     ?_stoa:
  1204                           	callstack 0
  1205  000013                     ___fltol@exp1:
  1206                           	callstack 0
  1207  000013                     ___xxtofl@exp:
  1208                           	callstack 0
  1209  000013                     colourclick_readR@tmp:
  1210                           	callstack 0
  1211  000013                     colourclick_readG@tmp:
  1212                           	callstack 0
  1213  000013                     colourclick_readB@tmp:
  1214                           	callstack 0
  1215  000013                     colourclick_readC@tmp:
  1216                           	callstack 0
  1217  000013                     stoa@fp:
  1218                           	callstack 0
  1219  000013                     fputs@s:
  1220                           	callstack 0
  1221  000013                     strncmp@r:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x12
  1225  000013                     	ds	1
  1226  000014                     ___awdiv@counter:
  1227                           	callstack 0
  1228  000014                     ___xxtofl@arg:
  1229                           	callstack 0
  1230  000014                     ___fpclassifyf@u:
  1231                           	callstack 0
  1232                           
  1233                           ; 4 bytes @ 0x13
  1234  000014                     	ds	1
  1235  000015                     ___awdiv@sign:
  1236                           	callstack 0
  1237  000015                     colourclick_readRGBC@tmpval:
  1238                           	callstack 0
  1239  000015                     stoa@s:
  1240                           	callstack 0
  1241  000015                     fputs@fp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x14
  1245  000015                     	ds	1
  1246  000016                     ___awdiv@quotient:
  1247                           	callstack 0
  1248  000016                     _tolower$3300:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x15
  1252  000016                     	ds	1
  1253  000017                     ??_stoa:
  1254  000017                     fputs@c:
  1255                           	callstack 0
  1256  000017                     colourclick_readRGBC2@tmpval:
  1257                           	callstack 0
  1258  000017                     atoi@neg:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x16
  1262  000017                     	ds	1
  1263  000018                     ?___fldiv:
  1264                           	callstack 0
  1265  000018                     ?___flmul:
  1266                           	callstack 0
  1267  000018                     DCmotors_setPWM@m:
  1268                           	callstack 0
  1269  000018                     fputs@i:
  1270                           	callstack 0
  1271  000018                     ___fldiv@b:
  1272                           	callstack 0
  1273  000018                     ___flmul@b:
  1274                           	callstack 0
  1275  000018                     stoa@nuls:
  1276                           	callstack 0
  1277                           
  1278                           ; 7 bytes @ 0x17
  1279  000018                     	ds	1
  1280  000019                     colourclick_readRGBC2@mode:
  1281                           	callstack 0
  1282  000019                     _atoi$3206:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x18
  1286  000019                     	ds	1
  1287  00001A                     ??_colourclick_readRGBC2:
  1288  00001A                     ??_DCmotors_setPWM:
  1289  00001A                     ?_pad:
  1290                           	callstack 0
  1291  00001A                     ___aodiv@counter:
  1292                           	callstack 0
  1293  00001A                     ___aomod@counter:
  1294                           	callstack 0
  1295  00001A                     pad@fp:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x19
  1299  00001A                     	ds	1
  1300  00001B                     ___aodiv@sign:
  1301                           	callstack 0
  1302  00001B                     ___aomod@sign:
  1303                           	callstack 0
  1304  00001B                     _atoi$3208:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x1A
  1308  00001B                     	ds	1
  1309  00001C                     ?_abs:
  1310                           	callstack 0
  1311  00001C                     pad@buf:
  1312                           	callstack 0
  1313  00001C                     abs@a:
  1314                           	callstack 0
  1315  00001C                     ___fldiv@a:
  1316                           	callstack 0
  1317  00001C                     ___flmul@a:
  1318                           	callstack 0
  1319  00001C                     ___aodiv@quotient:
  1320                           	callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x1B
  1323  00001C                     	ds	1
  1324  00001D                     _atoi$3207:
  1325                           	callstack 0
  1326                           
  1327                           ; 1 bytes @ 0x1C
  1328  00001D                     	ds	1
  1329  00001E                     ??_abs:
  1330  00001E                     pad@p:
  1331                           	callstack 0
  1332  00001E                     atoi@n:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x1D
  1336  00001E                     	ds	1
  1337  00001F                     stoa@i:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x1E
  1341  00001F                     	ds	1
  1342  000020                     ??___fldiv:
  1343  000020                     ??___flmul:
  1344  000020                     ??_pad:
  1345                           
  1346                           ; 1 bytes @ 0x1F
  1347  000020                     	ds	1
  1348  000021                     DCmotors_setPWM@PWMduty:
  1349                           	callstack 0
  1350  000021                     pad@i:
  1351                           	callstack 0
  1352  000021                     stoa@w:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x20
  1356  000021                     	ds	2
  1357  000023                     forward@mL:
  1358                           	callstack 0
  1359  000023                     reverse@mL:
  1360                           	callstack 0
  1361  000023                     stop@mL:
  1362                           	callstack 0
  1363  000023                     right@mL:
  1364                           	callstack 0
  1365  000023                     pad@w:
  1366                           	callstack 0
  1367  000023                     stoa@cp:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x22
  1371  000023                     	ds	1
  1372  000024                     ___flmul@sign:
  1373                           	callstack 0
  1374  000024                     ___fldiv@rem:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x23
  1378  000024                     	ds	1
  1379  000025                     ?_dtoa:
  1380                           	callstack 0
  1381  000025                     ___flmul@aexp:
  1382                           	callstack 0
  1383  000025                     forward@mR:
  1384                           	callstack 0
  1385  000025                     reverse@mR:
  1386                           	callstack 0
  1387  000025                     stop@mR:
  1388                           	callstack 0
  1389  000025                     right@mR:
  1390                           	callstack 0
  1391  000025                     dtoa@fp:
  1392                           	callstack 0
  1393  000025                     stoa@p:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x24
  1397  000025                     	ds	1
  1398  000026                     ___flmul@grs:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x25
  1402  000026                     	ds	1
  1403  000027                     right@deg:
  1404                           	callstack 0
  1405  000027                     stoa@l:
  1406                           	callstack 0
  1407  000027                     dtoa@d:
  1408                           	callstack 0
  1409                           
  1410                           ; 8 bytes @ 0x26
  1411  000027                     	ds	1
  1412  000028                     ___fldiv@sign:
  1413                           	callstack 0
  1414                           
  1415                           ; 1 bytes @ 0x27
  1416  000028                     	ds	1
  1417  000029                     ??_right:
  1418  000029                     ___fldiv@new_exp:
  1419                           	callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x28
  1422  000029                     	ds	1
  1423  00002A                     ___flmul@bexp:
  1424                           	callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x29
  1427  00002A                     	ds	1
  1428  00002B                     right@delay:
  1429                           	callstack 0
  1430  00002B                     ___fldiv@grs:
  1431                           	callstack 0
  1432  00002B                     ___flmul@prod:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x2A
  1436  00002B                     	ds	2
  1437  00002D                     right@i:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x2C
  1441  00002D                     	ds	2
  1442  00002F                     ??_dtoa:
  1443  00002F                     ___fldiv@bexp:
  1444                           	callstack 0
  1445  00002F                     ___flmul@temp:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x2E
  1449  00002F                     	ds	1
  1450  000030                     ___fldiv@aexp:
  1451                           	callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x2F
  1454  000030                     	ds	1
  1455  000031                     ?___fladd:
  1456                           	callstack 0
  1457  000031                     ?_floorf:
  1458                           	callstack 0
  1459  000031                     colourcards_normaliseRGBC@abs:
  1460                           	callstack 0
  1461  000031                     ___flge@ff1:
  1462                           	callstack 0
  1463  000031                     ___fladd@b:
  1464                           	callstack 0
  1465  000031                     floorf@x:
  1466                           	callstack 0
  1467                           
  1468                           ; 4 bytes @ 0x30
  1469  000031                     	ds	2
  1470  000033                     colourcards_normaliseRGBC@rel:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x32
  1474  000033                     	ds	2
  1475  000035                     ??_floorf:
  1476  000035                     colourcards_normaliseRGBC@R:
  1477                           	callstack 0
  1478  000035                     ___flge@ff2:
  1479                           	callstack 0
  1480  000035                     ___fladd@a:
  1481                           	callstack 0
  1482                           
  1483                           ; 4 bytes @ 0x34
  1484  000035                     	ds	2
  1485  000037                     colourcards_normaliseRGBC@G:
  1486                           	callstack 0
  1487  000037                     _dtoa$3104:
  1488                           	callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x36
  1491  000037                     	ds	2
  1492  000039                     ??___fladd:
  1493  000039                     ??___flge:
  1494  000039                     colourcards_normaliseRGBC@B:
  1495                           	callstack 0
  1496  000039                     dtoa@p:
  1497                           	callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x38
  1500  000039                     	ds	2
  1501  00003B                     colourcards_normaliseRGBC@C:
  1502                           	callstack 0
  1503  00003B                     dtoa@w:
  1504                           	callstack 0
  1505  00003B                     floorf@m:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x3A
  1509  00003B                     	ds	2
  1510  00003D                     ___fladd@signs:
  1511                           	callstack 0
  1512  00003D                     dtoa@s:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x3C
  1516  00003D                     	ds	1
  1517  00003E                     ___fladd@aexp:
  1518                           	callstack 0
  1519                           
  1520                           ; 1 bytes @ 0x3D
  1521  00003E                     	ds	1
  1522  00003F                     ___fladd@bexp:
  1523                           	callstack 0
  1524  00003F                     floorf@e:
  1525                           	callstack 0
  1526  00003F                     dtoa@n:
  1527                           	callstack 0
  1528                           
  1529                           ; 8 bytes @ 0x3E
  1530  00003F                     	ds	1
  1531  000040                     ___fladd@grs:
  1532                           	callstack 0
  1533                           
  1534                           ; 1 bytes @ 0x3F
  1535  000040                     	ds	1
  1536  000041                     ?___flsub:
  1537                           	callstack 0
  1538  000041                     left@mL:
  1539                           	callstack 0
  1540  000041                     ___flsub@b:
  1541                           	callstack 0
  1542  000041                     floorf@u:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x40
  1546  000041                     	ds	2
  1547  000043                     left@mR:
  1548                           	callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x42
  1551  000043                     	ds	2
  1552  000045                     left@deg:
  1553                           	callstack 0
  1554  000045                     ___flsub@a:
  1555                           	callstack 0
  1556                           
  1557                           ; 4 bytes @ 0x44
  1558  000045                     	ds	2
  1559  000047                     ??_left:
  1560  000047                     dtoa@i:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x46
  1564  000047                     	ds	1
  1565  000048                     ??_colourcards_readRGBC:
  1566  000048                     DCmotors_calibration@mL:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x47
  1570  000048                     	ds	1
  1571  000049                     ??_vfpfcnvrt:
  1572                           
  1573                           ; 1 bytes @ 0x48
  1574  000049                     	ds	1
  1575  00004A                     DCmotors_calibration@mR:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x49
  1579  00004A                     	ds	3
  1580  00004D                     
  1581                           ; 1 bytes @ 0x4C
  1582 ;;
  1583 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1584 ;;
  1585 ;; *************** function _main *****************
  1586 ;; Defined at:
  1587 ;;		line 7 in file "main.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  motorR          9   84[BANK1 ] struct .
  1592 ;;  motorL          9   75[BANK1 ] struct .
  1593 ;;  current         8   67[BANK1 ] struct .
  1594 ;;  PWMperiod       1    0        unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Totals:         0       2      26       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;Total ram usage:       28 bytes
  1609 ;; Hardware stack levels required when called: 17
  1610 ;; This function calls:
  1611 ;;		_ADC_init
  1612 ;;		_DCmotors_calibration
  1613 ;;		_DCmotors_init
  1614 ;;		_USART4_init
  1615 ;;		_checkbatterylevel
  1616 ;;		_colourcards_readRGBC
  1617 ;;		_colourclickLEDs_C
  1618 ;;		_colourclick_calibration
  1619 ;;		_colourclick_init
  1620 ;;		_forward
  1621 ;;		_interrupts_init
  1622 ;;		_stop
  1623 ;; This function is called by:
  1624 ;;		Startup code after reset
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text0
  1629  00412A                     __ptext0:
  1630                           	callstack 0
  1631  00412A                     _main:
  1632                           	callstack 14
  1633  00412A                     
  1634                           ;main.c: 12:     interrupts_lowerbound = 0;
  1635  00412A  0E00               	movlw	0
  1636  00412C  6E52               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1637  00412E  0E00               	movlw	0
  1638  004130  6E51               	movwf	_interrupts_lowerbound^0,c	;volatile
  1639                           
  1640                           ;main.c: 13:     interrupts_upperbound = 32767;
  1641  004132  0E7F               	movlw	127
  1642  004134  6E55               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1643  004136  6854               	setf	_interrupts_upperbound^0,c	;volatile
  1644                           
  1645                           ;main.c: 14:     turnleft_delay = 0;
  1646  004138  0E00               	movlw	0
  1647  00413A  0101               	movlb	1	; () banked
  1648  00413C  6F27               	movwf	(_turnleft_delay+1)& (0+255),b	;volatile
  1649  00413E  0E00               	movlw	0
  1650  004140  6F26               	movwf	_turnleft_delay& (0+255),b	;volatile
  1651                           
  1652                           ;main.c: 15:     turnright_delay = 0;
  1653  004142  0E00               	movlw	0
  1654  004144  6F25               	movwf	(_turnright_delay+1)& (0+255),b	;volatile
  1655  004146  0E00               	movlw	0
  1656  004148  6F24               	movwf	_turnright_delay& (0+255),b	;volatile
  1657                           
  1658                           ;main.c: 16:     overtime_flag = 0;
  1659  00414A  0E00               	movlw	0
  1660  00414C  6F2A               	movwf	_overtime_flag& (0+255),b	;volatile
  1661                           
  1662                           ;main.c: 17:     colourcard_flag = 0;
  1663  00414E  0E00               	movlw	0
  1664  004150  6F29               	movwf	_colourcard_flag& (0+255),b	;volatile
  1665                           
  1666                           ;main.c: 18:     unknowncard_flag = 0;
  1667  004152  0E00               	movlw	0
  1668  004154  6F28               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1669                           
  1670                           ;main.c: 19:     returnhome_flag = 0;
  1671  004156  0E00               	movlw	0
  1672  004158  0100               	movlb	0	; () banked
  1673  00415A  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
  1674                           
  1675                           ;main.c: 21:     DC_motor motorL;;main.c: 22:     motorL.power=0;
  1676  00415C  0E00               	movlw	0
  1677  00415E  0101               	movlb	1	; () banked
  1678  004160  6FC7               	movwf	main@motorL& (0+255),b
  1679                           
  1680                           ;main.c: 23:     motorL.direction=1;
  1681  004162  0E01               	movlw	1
  1682  004164  6FC8               	movwf	(main@motorL+1)& (0+255),b
  1683  004166                     
  1684                           ; BSR set to: 1
  1685                           ;main.c: 24:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1686  004166  0EA3               	movlw	163
  1687  004168  6FC9               	movwf	(main@motorL+2)& (0+255),b
  1688  00416A  0E0F               	movlw	15
  1689  00416C  6FCA               	movwf	(main@motorL+3)& (0+255),b
  1690  00416E                     
  1691                           ; BSR set to: 1
  1692                           ;main.c: 25:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1693  00416E  0E7D               	movlw	125
  1694  004170  6FCB               	movwf	(main@motorL+4)& (0+255),b
  1695  004172  0E0F               	movlw	15
  1696  004174  6FCC               	movwf	(main@motorL+5)& (0+255),b
  1697                           
  1698                           ;main.c: 26:     motorL.dir_pin=4;
  1699  004176  0E04               	movlw	4
  1700  004178  6FCD               	movwf	(main@motorL+6)& (0+255),b
  1701  00417A                     
  1702                           ; BSR set to: 1
  1703                           ;main.c: 27:     motorL.PWMperiod=PWMperiod;
  1704  00417A  0E00               	movlw	0
  1705  00417C  6FCF               	movwf	(main@motorL+8)& (0+255),b
  1706  00417E  0E63               	movlw	99
  1707  004180  6FCE               	movwf	(main@motorL+7)& (0+255),b
  1708                           
  1709                           ;main.c: 29:     DC_motor motorR;;main.c: 30:     motorR.power=0;
  1710  004182  0E00               	movlw	0
  1711  004184  6FD0               	movwf	main@motorR& (0+255),b
  1712                           
  1713                           ;main.c: 31:     motorR.direction=1;
  1714  004186  0E01               	movlw	1
  1715  004188  6FD1               	movwf	(main@motorR+1)& (0+255),b
  1716  00418A                     
  1717                           ; BSR set to: 1
  1718                           ;main.c: 32:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1719  00418A  0EA0               	movlw	160
  1720  00418C  6FD2               	movwf	(main@motorR+2)& (0+255),b
  1721  00418E  0E0F               	movlw	15
  1722  004190  6FD3               	movwf	(main@motorR+3)& (0+255),b
  1723  004192                     
  1724                           ; BSR set to: 1
  1725                           ;main.c: 33:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1726  004192  0E7F               	movlw	127
  1727  004194  6FD4               	movwf	(main@motorR+4)& (0+255),b
  1728  004196  0E0F               	movlw	15
  1729  004198  6FD5               	movwf	(main@motorR+5)& (0+255),b
  1730                           
  1731                           ;main.c: 34:     motorR.dir_pin=6;
  1732  00419A  0E06               	movlw	6
  1733  00419C  6FD6               	movwf	(main@motorR+6)& (0+255),b
  1734  00419E                     
  1735                           ; BSR set to: 1
  1736                           ;main.c: 35:     motorR.PWMperiod=PWMperiod;
  1737  00419E  0E00               	movlw	0
  1738  0041A0  6FD8               	movwf	(main@motorR+8)& (0+255),b
  1739  0041A2  0E63               	movlw	99
  1740  0041A4  6FD7               	movwf	(main@motorR+7)& (0+255),b
  1741  0041A6                     
  1742                           ; BSR set to: 1
  1743                           ;main.c: 37:     ADC_init();
  1744  0041A6  EC4C  F031         	call	_ADC_init	;wreg free
  1745  0041AA                     
  1746                           ;main.c: 38:     colourclick_init();
  1747  0041AA  EC04  F030         	call	_colourclick_init	;wreg free
  1748  0041AE                     
  1749                           ;main.c: 39:     DCmotors_init(PWMperiod);
  1750  0041AE  0E63               	movlw	99
  1751  0041B0  EC96  F02E         	call	_DCmotors_init
  1752  0041B4                     
  1753                           ;main.c: 40:     USART4_init();
  1754  0041B4  EC1F  F031         	call	_USART4_init	;wreg free
  1755  0041B8                     
  1756                           ;main.c: 41:     checkbatterylevel();
  1757  0041B8  EC0F  F031         	call	_checkbatterylevel	;wreg free
  1758  0041BC                     
  1759                           ;main.c: 46:     colourclick_calibration();
  1760  0041BC  EC5B  F026         	call	_colourclick_calibration	;wreg free
  1761  0041C0                     
  1762                           ;main.c: 52:     DCmotors_calibration(&motorL, &motorR);
  1763  0041C0  0EC7               	movlw	low main@motorL
  1764  0041C2  6E48               	movwf	DCmotors_calibration@mL^0,c
  1765  0041C4  0E01               	movlw	high main@motorL
  1766  0041C6  6E49               	movwf	(DCmotors_calibration@mL+1)^0,c
  1767  0041C8  0ED0               	movlw	low main@motorR
  1768  0041CA  6E4A               	movwf	DCmotors_calibration@mR^0,c
  1769  0041CC  0E01               	movlw	high main@motorR
  1770  0041CE  6E4B               	movwf	(DCmotors_calibration@mR+1)^0,c
  1771  0041D0  ECB5  F025         	call	_DCmotors_calibration	;wreg free
  1772  0041D4                     l71:
  1773  0041D4  A48E               	btfss	142,2,c	;volatile
  1774  0041D6  EFEF  F020         	goto	u12071
  1775  0041DA  EFF1  F020         	goto	u12070
  1776  0041DE                     u12071:
  1777  0041DE  EFF8  F020         	goto	l75
  1778  0041E2                     u12070:
  1779  0041E2  B68E               	btfsc	142,3,c	;volatile
  1780  0041E4  EFF6  F020         	goto	u12081
  1781  0041E8  EFF8  F020         	goto	u12080
  1782  0041EC                     u12081:
  1783  0041EC  EFEA  F020         	goto	l71
  1784  0041F0                     u12080:
  1785  0041F0                     l75:
  1786                           
  1787                           ;main.c: 59:     LATDbits.LATD3 = 1;
  1788  0041F0  867C               	bsf	124,3,c	;volatile
  1789  0041F2                     
  1790                           ;main.c: 60:     colourclickLEDs_C(1);
  1791  0041F2  0E01               	movlw	1
  1792  0041F4  ECEE  F030         	call	_colourclickLEDs_C
  1793  0041F8                     
  1794                           ;main.c: 61:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1795  0041F8  0E52               	movlw	82
  1796  0041FA  0100               	movlb	0	; () banked
  1797  0041FC  6FF3               	movwf	(??_main+1)& (0+255),b
  1798  0041FE  0E2B               	movlw	43
  1799  004200  6FF2               	movwf	??_main& (0+255),b
  1800  004202  0E00               	movlw	0
  1801  004204                     u12507:
  1802  004204  2EE8               	decfsz	wreg,f,c
  1803  004206  D7FE               	bra	u12507
  1804  004208  2FF2               	decfsz	??_main& (0+255),f,b
  1805  00420A  D7FC               	bra	u12507
  1806  00420C  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1807  00420E  D7FA               	bra	u12507
  1808  004210  F000               	nop	
  1809  004212                     
  1810                           ;main.c: 62:     interrupts_init();
  1811  004212  ECDC  F030         	call	_interrupts_init	;wreg free
  1812  004216                     
  1813                           ;main.c: 63:     forward(&motorL, &motorR);
  1814  004216  0EC7               	movlw	low main@motorL
  1815  004218  6E23               	movwf	forward@mL^0,c
  1816  00421A  0E01               	movlw	high main@motorL
  1817  00421C  6E24               	movwf	(forward@mL+1)^0,c
  1818  00421E  0ED0               	movlw	low main@motorR
  1819  004220  6E25               	movwf	forward@mR^0,c
  1820  004222  0E01               	movlw	high main@motorR
  1821  004224  6E26               	movwf	(forward@mR+1)^0,c
  1822  004226  EC0C  F02C         	call	_forward	;wreg free
  1823  00422A                     l8998:
  1824                           
  1825                           ;main.c: 70:         if (colourcard_flag==1) {
  1826  00422A  0101               	movlb	1	; () banked
  1827  00422C  0529               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1828  00422E  A4D8               	btfss	status,2,c
  1829  004230  EF1C  F021         	goto	u12091
  1830  004234  EF1E  F021         	goto	u12090
  1831  004238                     u12091:
  1832  004238  EF15  F021         	goto	l8998
  1833  00423C                     u12090:
  1834  00423C                     
  1835                           ; BSR set to: 1
  1836                           ;main.c: 71:             stop(&motorL, &motorR);
  1837  00423C  0EC7               	movlw	low main@motorL
  1838  00423E  6E23               	movwf	stop@mL^0,c
  1839  004240  0E01               	movlw	high main@motorL
  1840  004242  6E24               	movwf	(stop@mL+1)^0,c
  1841  004244  0ED0               	movlw	low main@motorR
  1842  004246  6E25               	movwf	stop@mR^0,c
  1843  004248  0E01               	movlw	high main@motorR
  1844  00424A  6E26               	movwf	(stop@mR+1)^0,c
  1845  00424C  EC53  F02C         	call	_stop	;wreg free
  1846  004250                     
  1847                           ;main.c: 72:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1848  004250  0E52               	movlw	82
  1849  004252  0100               	movlb	0	; () banked
  1850  004254  6FF3               	movwf	(??_main+1)& (0+255),b
  1851  004256  0E2B               	movlw	43
  1852  004258  6FF2               	movwf	??_main& (0+255),b
  1853  00425A  0E00               	movlw	0
  1854  00425C                     u12517:
  1855  00425C  2EE8               	decfsz	wreg,f,c
  1856  00425E  D7FE               	bra	u12517
  1857  004260  2FF2               	decfsz	??_main& (0+255),f,b
  1858  004262  D7FC               	bra	u12517
  1859  004264  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1860  004266  D7FA               	bra	u12517
  1861  004268  F000               	nop	
  1862  00426A                     
  1863                           ;main.c: 73:             colourcards_readRGBC(&current, &motorL, &motorR);
  1864  00426A  0EBF               	movlw	low main@current
  1865  00426C  0100               	movlb	0	; () banked
  1866  00426E  6F70               	movwf	colourcards_readRGBC@abs& (0+255),b
  1867  004270  0E01               	movlw	high main@current
  1868  004272  6F71               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1869  004274  0EC7               	movlw	low main@motorL
  1870  004276  6F72               	movwf	colourcards_readRGBC@mL& (0+255),b
  1871  004278  0E01               	movlw	high main@motorL
  1872  00427A  6F73               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1873  00427C  0ED0               	movlw	low main@motorR
  1874  00427E  6F74               	movwf	colourcards_readRGBC@mR& (0+255),b
  1875  004280  0E01               	movlw	high main@motorR
  1876  004282  6F75               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1877  004284  EC89  F00D         	call	_colourcards_readRGBC	;wreg free
  1878                           
  1879                           ;main.c: 74:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1880  004288  0E52               	movlw	82
  1881  00428A  0100               	movlb	0	; () banked
  1882  00428C  6FF3               	movwf	(??_main+1)& (0+255),b
  1883  00428E  0E2B               	movlw	43
  1884  004290  6FF2               	movwf	??_main& (0+255),b
  1885  004292  0E00               	movlw	0
  1886  004294                     u12527:
  1887  004294  2EE8               	decfsz	wreg,f,c
  1888  004296  D7FE               	bra	u12527
  1889  004298  2FF2               	decfsz	??_main& (0+255),f,b
  1890  00429A  D7FC               	bra	u12527
  1891  00429C  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1892  00429E  D7FA               	bra	u12527
  1893  0042A0  F000               	nop	
  1894  0042A2                     
  1895                           ;main.c: 75:             forward(&motorL, &motorR);
  1896  0042A2  0EC7               	movlw	low main@motorL
  1897  0042A4  6E23               	movwf	forward@mL^0,c
  1898  0042A6  0E01               	movlw	high main@motorL
  1899  0042A8  6E24               	movwf	(forward@mL+1)^0,c
  1900  0042AA  0ED0               	movlw	low main@motorR
  1901  0042AC  6E25               	movwf	forward@mR^0,c
  1902  0042AE  0E01               	movlw	high main@motorR
  1903  0042B0  6E26               	movwf	(forward@mR+1)^0,c
  1904  0042B2  EC0C  F02C         	call	_forward	;wreg free
  1905  0042B6                     
  1906                           ;main.c: 77:             colourcard_flag = 0;
  1907  0042B6  0E00               	movlw	0
  1908  0042B8  0101               	movlb	1	; () banked
  1909  0042BA  6F29               	movwf	_colourcard_flag& (0+255),b	;volatile
  1910  0042BC  EF15  F021         	goto	l8998
  1911  0042C0  EF30  F000         	goto	start
  1912  0042C4                     __end_of_main:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _interrupts_init *****************
  1916 ;; Defined at:
  1917 ;;		line 15 in file "interrupts.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1935 ;;Total ram usage:        0 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 12
  1938 ;; This function calls:
  1939 ;;		_interrupts_clear
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text1
  1946  0061B8                     __ptext1:
  1947                           	callstack 0
  1948  0061B8                     _interrupts_init:
  1949                           	callstack 18
  1950  0061B8                     
  1951                           ;interrupts.c: 16:     TRISBbits.TRISB1 = 1;
  1952  0061B8  8282               	bsf	130,1,c	;volatile
  1953                           
  1954                           ;interrupts.c: 17:     ANSELBbits.ANSELB1 = 0;
  1955  0061BA  010E               	movlb	14	; () banked
  1956  0061BC  939A               	bcf	154,1,b	;volatile
  1957  0061BE                     
  1958                           ; BSR set to: 14
  1959                           ;interrupts.c: 18:     INT1PPS=0x09;
  1960  0061BE  0E09               	movlw	9
  1961  0061C0  010D               	movlb	13	; () banked
  1962  0061C2  6FF1               	movwf	241,b	;volatile
  1963  0061C4                     
  1964                           ; BSR set to: 13
  1965                           ;interrupts.c: 20:     PIE0bits.INT1IE = 1;
  1966  0061C4  010E               	movlb	14	; () banked
  1967  0061C6  8329               	bsf	41,1,b	;volatile
  1968  0061C8                     
  1969                           ; BSR set to: 14
  1970                           ;interrupts.c: 21:     PIE0bits.TMR0IE = 1;
  1971  0061C8  8B29               	bsf	41,5,b	;volatile
  1972  0061CA                     
  1973                           ; BSR set to: 14
  1974                           ;interrupts.c: 23:     IPR0bits.INT1IP = 1;
  1975  0061CA  831F               	bsf	31,1,b	;volatile
  1976  0061CC                     
  1977                           ; BSR set to: 14
  1978                           ;interrupts.c: 24:     IPR0bits.TMR0IP = 0;
  1979  0061CC  9B1F               	bcf	31,5,b	;volatile
  1980  0061CE                     
  1981                           ; BSR set to: 14
  1982                           ;interrupts.c: 26:     interrupts_clear();
  1983  0061CE  EC3F  F031         	call	_interrupts_clear	;wreg free
  1984  0061D2                     
  1985                           ;interrupts.c: 28:     INTCONbits.INT1EDG = 0;
  1986  0061D2  92F2               	bcf	242,1,c	;volatile
  1987  0061D4                     
  1988                           ;interrupts.c: 29:     INTCONbits.IPEN = 1;
  1989  0061D4  8AF2               	bsf	242,5,c	;volatile
  1990  0061D6                     
  1991                           ;interrupts.c: 30:     INTCONbits.PEIE = 1;
  1992  0061D6  8CF2               	bsf	242,6,c	;volatile
  1993  0061D8                     
  1994                           ;interrupts.c: 31:     INTCONbits.GIE = 1;
  1995  0061D8  8EF2               	bsf	242,7,c	;volatile
  1996  0061DA  0012               	return		;funcret
  1997  0061DC                     __end_of_interrupts_init:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _interrupts_clear *****************
  2001 ;; Defined at:
  2002 ;;		line 37 in file "interrupts.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 11
  2023 ;; This function calls:
  2024 ;;		_I2C_2_Master_Start
  2025 ;;		_I2C_2_Master_Stop
  2026 ;;		_I2C_2_Master_Write
  2027 ;;		_interrupts_colour
  2028 ;; This function is called by:
  2029 ;;		_interrupts_init
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text2
  2034  00627E                     __ptext2:
  2035                           	callstack 0
  2036  00627E                     _interrupts_clear:
  2037                           	callstack 18
  2038  00627E                     
  2039                           ;interrupts.c: 38:     I2C_2_Master_Start();
  2040  00627E  ECA7  F031         	call	_I2C_2_Master_Start	;wreg free
  2041                           
  2042                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2043  006282  0E52               	movlw	82
  2044  006284  EC90  F031         	call	_I2C_2_Master_Write
  2045                           
  2046                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  2047  006288  0EE6               	movlw	230
  2048  00628A  EC90  F031         	call	_I2C_2_Master_Write
  2049                           
  2050                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  2051  00628E  ECA2  F031         	call	_I2C_2_Master_Stop	;wreg free
  2052                           
  2053                           ;interrupts.c: 43:     interrupts_colour();
  2054  006292  EC0E  F02F         	call	_interrupts_colour	;wreg free
  2055  006296  0012               	return		;funcret
  2056  006298                     __end_of_interrupts_clear:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _interrupts_colour *****************
  2060 ;; Defined at:
  2061 ;;		line 49 in file "interrupts.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 10
  2082 ;; This function calls:
  2083 ;;		_colourclick_writetoaddr
  2084 ;; This function is called by:
  2085 ;;		_interrupts_clear
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text3
  2090  005E1C                     __ptext3:
  2091                           	callstack 0
  2092  005E1C                     _interrupts_colour:
  2093                           	callstack 18
  2094  005E1C                     
  2095                           ;interrupts.c: 50:     colourclick_writetoaddr(0x00, 0b10011);
  2096  005E1C  0E13               	movlw	19
  2097  005E1E  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2098  005E20  0E00               	movlw	0
  2099  005E22  ECFF  F030         	call	_colourclick_writetoaddr
  2100  005E26                     
  2101                           ;interrupts.c: 51:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2102  005E26  0E3F               	movlw	63
  2103  005E28  6E0E               	movwf	??_interrupts_colour^0,c
  2104  005E2A  0E55               	movlw	85
  2105  005E2C                     u12537:
  2106  005E2C  2EE8               	decfsz	wreg,f,c
  2107  005E2E  D7FE               	bra	u12537
  2108  005E30  2E0E               	decfsz	??_interrupts_colour^0,f,c
  2109  005E32  D7FC               	bra	u12537
  2110  005E34  F000               	nop	
  2111  005E36                     
  2112                           ;interrupts.c: 52:     colourclick_writetoaddr(0x0C, 0b0100);
  2113  005E36  0E04               	movlw	4
  2114  005E38  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2115  005E3A  0E0C               	movlw	12
  2116  005E3C  ECFF  F030         	call	_colourclick_writetoaddr
  2117  005E40                     
  2118                           ;interrupts.c: 53:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  2119  005E40  C051  F00C         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  2120  005E44  0E04               	movlw	4
  2121  005E46  ECFF  F030         	call	_colourclick_writetoaddr
  2122  005E4A                     
  2123                           ;interrupts.c: 54:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  2124  005E4A  5052               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2125  005E4C  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2126  005E4E  0E05               	movlw	5
  2127  005E50  ECFF  F030         	call	_colourclick_writetoaddr
  2128  005E54                     
  2129                           ;interrupts.c: 55:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  2130  005E54  C054  F00C         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  2131  005E58  0E06               	movlw	6
  2132  005E5A  ECFF  F030         	call	_colourclick_writetoaddr
  2133  005E5E                     
  2134                           ;interrupts.c: 56:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  2135  005E5E  5055               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2136  005E60  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2137  005E62  0E07               	movlw	7
  2138  005E64  ECFF  F030         	call	_colourclick_writetoaddr
  2139  005E68  0012               	return		;funcret
  2140  005E6A                     __end_of_interrupts_colour:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _colourclick_init *****************
  2144 ;; Defined at:
  2145 ;;		line 15 in file "colour_click.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;Total ram usage:        1 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 10
  2166 ;; This function calls:
  2167 ;;		_I2C_2_Master_Init
  2168 ;;		_colourclickLEDs_init
  2169 ;;		_colourclick_writetoaddr
  2170 ;; This function is called by:
  2171 ;;		_main
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text4
  2176  006008                     __ptext4:
  2177                           	callstack 0
  2178  006008                     _colourclick_init:
  2179                           	callstack 20
  2180  006008                     
  2181                           ;colour_click.c: 18:     I2C_2_Master_Init();
  2182  006008  EC8C  F030         	call	_I2C_2_Master_Init	;wreg free
  2183  00600C                     
  2184                           ;colour_click.c: 21:   colourclick_writetoaddr(0x00, 0x01);
  2185  00600C  0E01               	movlw	1
  2186  00600E  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2187  006010  0E00               	movlw	0
  2188  006012  ECFF  F030         	call	_colourclick_writetoaddr
  2189  006016                     
  2190                           ;colour_click.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2191  006016  0E3F               	movlw	63
  2192  006018  6E0E               	movwf	??_colourclick_init^0,c
  2193  00601A  0E55               	movlw	85
  2194  00601C                     u12547:
  2195  00601C  2EE8               	decfsz	wreg,f,c
  2196  00601E  D7FE               	bra	u12547
  2197  006020  2E0E               	decfsz	??_colourclick_init^0,f,c
  2198  006022  D7FC               	bra	u12547
  2199  006024  F000               	nop	
  2200  006026                     
  2201                           ;colour_click.c: 25:  colourclick_writetoaddr(0x00, 0x03);
  2202  006026  0E03               	movlw	3
  2203  006028  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2204  00602A  0E00               	movlw	0
  2205  00602C  ECFF  F030         	call	_colourclick_writetoaddr
  2206  006030                     
  2207                           ;colour_click.c: 28:  colourclick_writetoaddr(0x01, 0xD5);
  2208  006030  0ED5               	movlw	213
  2209  006032  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2210  006034  0E01               	movlw	1
  2211  006036  ECFF  F030         	call	_colourclick_writetoaddr
  2212  00603A                     
  2213                           ;colour_click.c: 30:     colourclickLEDs_init();
  2214  00603A  EC89  F031         	call	_colourclickLEDs_init	;wreg free
  2215  00603E  0012               	return		;funcret
  2216  006040                     __end_of_colourclick_init:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _colourclick_writetoaddr *****************
  2220 ;; Defined at:
  2221 ;;		line 39 in file "colour_click.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  address         1    wreg     unsigned char 
  2224 ;;  value           1   11[COMRAM] unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  address         1   12[COMRAM] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2236 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;Total ram usage:        2 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 9
  2243 ;; This function calls:
  2244 ;;		_I2C_2_Master_Start
  2245 ;;		_I2C_2_Master_Stop
  2246 ;;		_I2C_2_Master_Write
  2247 ;; This function is called by:
  2248 ;;		_interrupts_colour
  2249 ;;		_colourclick_init
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text5
  2254  0061FE                     __ptext5:
  2255                           	callstack 0
  2256  0061FE                     _colourclick_writetoaddr:
  2257                           	callstack 18
  2258                           
  2259                           ;incstack = 0
  2260                           ;colourclick_writetoaddr@address stored from wreg
  2261  0061FE  6E0D               	movwf	colourclick_writetoaddr@address^0,c
  2262  006200                     
  2263                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
  2264  006200  ECA7  F031         	call	_I2C_2_Master_Start	;wreg free
  2265                           
  2266                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
  2267  006204  0E52               	movlw	82
  2268  006206  EC90  F031         	call	_I2C_2_Master_Write
  2269                           
  2270                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
  2271  00620A  500D               	movf	colourclick_writetoaddr@address^0,w,c
  2272  00620C  0980               	iorlw	128
  2273  00620E  EC90  F031         	call	_I2C_2_Master_Write
  2274                           
  2275                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
  2276  006212  500C               	movf	colourclick_writetoaddr@value^0,w,c
  2277  006214  EC90  F031         	call	_I2C_2_Master_Write
  2278                           
  2279                           ;colour_click.c: 45:     I2C_2_Master_Stop();
  2280  006218  ECA2  F031         	call	_I2C_2_Master_Stop	;wreg free
  2281  00621C  0012               	return		;funcret
  2282  00621E                     __end_of_colourclick_writetoaddr:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _colourclickLEDs_init *****************
  2286 ;; Defined at:
  2287 ;;		line 49 in file "buttons_n_LEDs.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;Total ram usage:        0 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 8
  2308 ;; This function calls:
  2309 ;;		_colourclickLEDs_C
  2310 ;; This function is called by:
  2311 ;;		_colourclick_init
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text6
  2316  006312                     __ptext6:
  2317                           	callstack 0
  2318  006312                     _colourclickLEDs_init:
  2319                           	callstack 21
  2320  006312                     
  2321                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  2322  006312  9287               	bcf	135,1,c	;volatile
  2323                           
  2324                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  2325  006314  9881               	bcf	129,4,c	;volatile
  2326                           
  2327                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  2328  006316  9E86               	bcf	134,7,c	;volatile
  2329  006318                     
  2330                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  2331  006318  0E00               	movlw	0
  2332  00631A  ECEE  F030         	call	_colourclickLEDs_C
  2333  00631E  0012               	return		;funcret
  2334  006320                     __end_of_colourclickLEDs_init:
  2335                           	callstack 0
  2336                           
  2337 ;; *************** function _I2C_2_Master_Init *****************
  2338 ;; Defined at:
  2339 ;;		line 8 in file "I2C.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2357 ;;Total ram usage:        0 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 7
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_colourclick_init
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text7
  2368  006118                     __ptext7:
  2369                           	callstack 0
  2370  006118                     _I2C_2_Master_Init:
  2371                           	callstack 22
  2372  006118                     
  2373                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  2374  006118  010E               	movlb	14	; () banked
  2375  00611A  51D9               	movf	217,w,b	;volatile
  2376  00611C  0BF0               	andlw	-16
  2377  00611E  0908               	iorlw	8
  2378  006120  6FD9               	movwf	217,b	;volatile
  2379  006122                     
  2380                           ; BSR set to: 14
  2381                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  2382  006122  8BD9               	bsf	217,5,b	;volatile
  2383                           
  2384                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  2385  006124  0E9F               	movlw	159
  2386  006126  6FD6               	movwf	214,b	;volatile
  2387  006128                     
  2388                           ; BSR set to: 14
  2389                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  2390  006128  8A84               	bsf	132,5,c	;volatile
  2391  00612A                     
  2392                           ; BSR set to: 14
  2393                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  2394  00612A  8C84               	bsf	132,6,c	;volatile
  2395  00612C                     
  2396                           ; BSR set to: 14
  2397                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  2398  00612C  9BA7               	bcf	167,5,b	;volatile
  2399  00612E                     
  2400                           ; BSR set to: 14
  2401                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  2402  00612E  9DA7               	bcf	167,6,b	;volatile
  2403                           
  2404                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  2405  006130  0E1D               	movlw	29
  2406  006132  6F1D               	movwf	29,b	;volatile
  2407                           
  2408                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  2409  006134  0E1E               	movlw	30
  2410  006136  6F1C               	movwf	28,b	;volatile
  2411                           
  2412                           ;I2C.c: 22:   RD5PPS=0x1C;
  2413  006138  0E1C               	movlw	28
  2414  00613A  6F6F               	movwf	111,b	;volatile
  2415                           
  2416                           ;I2C.c: 23:   RD6PPS=0x1B;
  2417  00613C  0E1B               	movlw	27
  2418  00613E  6F70               	movwf	112,b	;volatile
  2419  006140                     
  2420                           ; BSR set to: 14
  2421  006140  0012               	return		;funcret
  2422  006142                     __end_of_I2C_2_Master_Init:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _colourclick_calibration *****************
  2426 ;; Defined at:
  2427 ;;		line 176 in file "colour_click.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  current         8   59[BANK1 ] struct .
  2432 ;;  initial         8   51[BANK1 ] struct .
  2433 ;;  i               1   50[BANK1 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;Total ram usage:       19 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 16
  2450 ;; This function calls:
  2451 ;;		_colourclickLEDs_C
  2452 ;;		_colourclick_readRGBC
  2453 ;;		_colourclick_testing
  2454 ;; This function is called by:
  2455 ;;		_main
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text8
  2460  004CB6                     __ptext8:
  2461                           	callstack 0
  2462  004CB6                     _colourclick_calibration:
  2463                           	callstack 14
  2464  004CB6                     l367:
  2465  004CB6  B48E               	btfsc	142,2,c	;volatile
  2466  004CB8  EF60  F026         	goto	u11691
  2467  004CBC  EF62  F026         	goto	u11690
  2468  004CC0                     u11691:
  2469  004CC0  EF5B  F026         	goto	l367
  2470  004CC4                     u11690:
  2471  004CC4                     
  2472                           ;colour_click.c: 179:     LATDbits.LATD3 = 1;
  2473  004CC4  867C               	bsf	124,3,c	;volatile
  2474  004CC6                     
  2475                           ;colour_click.c: 180:     colourclickLEDs_C(1);
  2476  004CC6  0E01               	movlw	1
  2477  004CC8  ECEE  F030         	call	_colourclickLEDs_C
  2478  004CCC                     
  2479                           ;colour_click.c: 181:     LATDbits.LATD7 = 1;
  2480  004CCC  8E7C               	bsf	124,7,c	;volatile
  2481  004CCE                     
  2482                           ;colour_click.c: 182:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2483  004CCE  0E52               	movlw	82
  2484  004CD0  0100               	movlb	0	; () banked
  2485  004CD2  6FF1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2486  004CD4  0E2B               	movlw	43
  2487  004CD6  6FF0               	movwf	??_colourclick_calibration& (0+255),b
  2488  004CD8  0E00               	movlw	0
  2489  004CDA                     u12557:
  2490  004CDA  2EE8               	decfsz	wreg,f,c
  2491  004CDC  D7FE               	bra	u12557
  2492  004CDE  2FF0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2493  004CE0  D7FC               	bra	u12557
  2494  004CE2  2FF1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2495  004CE4  D7FA               	bra	u12557
  2496  004CE6  F000               	nop	
  2497  004CE8                     
  2498                           ;colour_click.c: 183:     colourclick_readRGBC(&initial);
  2499  004CE8  0EAF               	movlw	low colourclick_calibration@initial
  2500  004CEA  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  2501  004CEC  0E01               	movlw	high colourclick_calibration@initial
  2502  004CEE  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2503  004CF0  EC22  F02D         	call	_colourclick_readRGBC	;wreg free
  2504  004CF4                     
  2505                           ;colour_click.c: 184:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2506  004CF4  0E52               	movlw	82
  2507  004CF6  0100               	movlb	0	; () banked
  2508  004CF8  6FF1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2509  004CFA  0E2B               	movlw	43
  2510  004CFC  6FF0               	movwf	??_colourclick_calibration& (0+255),b
  2511  004CFE  0E00               	movlw	0
  2512  004D00                     u12567:
  2513  004D00  2EE8               	decfsz	wreg,f,c
  2514  004D02  D7FE               	bra	u12567
  2515  004D04  2FF0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2516  004D06  D7FC               	bra	u12567
  2517  004D08  2FF1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2518  004D0A  D7FA               	bra	u12567
  2519  004D0C  F000               	nop	
  2520  004D0E                     
  2521                           ;colour_click.c: 185:     LATDbits.LATD7 = 0;
  2522  004D0E  9E7C               	bcf	124,7,c	;volatile
  2523  004D10                     
  2524                           ;colour_click.c: 187:     unsigned char i;;colour_click.c: 188:     RGBC_val current;;co
      +                          lour_click.c: 189:     for (i=0; i<8; i++) {
  2525  004D10  0E00               	movlw	0
  2526  004D12  0101               	movlb	1	; () banked
  2527  004D14  6FAE               	movwf	colourclick_calibration@i& (0+255),b
  2528  004D16                     l372:
  2529  004D16  B48E               	btfsc	142,2,c	;volatile
  2530  004D18  EF90  F026         	goto	u11701
  2531  004D1C  EF92  F026         	goto	u11700
  2532  004D20                     u11701:
  2533  004D20  EF8B  F026         	goto	l372
  2534  004D24                     u11700:
  2535  004D24                     
  2536                           ;colour_click.c: 191:         LATDbits.LATD7 = 1;
  2537  004D24  8E7C               	bsf	124,7,c	;volatile
  2538  004D26                     
  2539                           ;colour_click.c: 192:         colourclick_readRGBC(&current);
  2540  004D26  0EB7               	movlw	low colourclick_calibration@current
  2541  004D28  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  2542  004D2A  0E01               	movlw	high colourclick_calibration@current
  2543  004D2C  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2544  004D2E  EC22  F02D         	call	_colourclick_readRGBC	;wreg free
  2545  004D32                     
  2546                           ;colour_click.c: 193:         if ((current.C<initial.C) && (current.C>interrupts_lowerbo
      +                          und)) {
  2547  004D32  0101               	movlb	1	; () banked
  2548  004D34  51B5               	movf	(colourclick_calibration@initial+6)& (0+255),w,b
  2549  004D36  5DBD               	subwf	(colourclick_calibration@current+6)& (0+255),w,b
  2550  004D38  51B6               	movf	(colourclick_calibration@initial+7)& (0+255),w,b
  2551  004D3A  59BE               	subwfb	(colourclick_calibration@current+7)& (0+255),w,b
  2552  004D3C  B0D8               	btfsc	status,0,c
  2553  004D3E  EFA3  F026         	goto	u11711
  2554  004D42  EFA5  F026         	goto	u11710
  2555  004D46                     u11711:
  2556  004D46  EFB6  F026         	goto	l8764
  2557  004D4A                     u11710:
  2558  004D4A                     
  2559                           ; BSR set to: 1
  2560  004D4A  51BD               	movf	(colourclick_calibration@current+6)& (0+255),w,b
  2561  004D4C  5C51               	subwf	_interrupts_lowerbound^0,w,c	;volatile
  2562  004D4E  51BE               	movf	(colourclick_calibration@current+7)& (0+255),w,b
  2563  004D50  5852               	subwfb	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2564  004D52  B0D8               	btfsc	status,0,c
  2565  004D54  EFAE  F026         	goto	u11721
  2566  004D58  EFB0  F026         	goto	u11720
  2567  004D5C                     u11721:
  2568  004D5C  EFB6  F026         	goto	l8764
  2569  004D60                     u11720:
  2570  004D60                     
  2571                           ; BSR set to: 1
  2572                           ;colour_click.c: 194:             interrupts_lowerbound = current.C;
  2573  004D60  C1BD  F051         	movff	colourclick_calibration@current+6,_interrupts_lowerbound	;volatile
  2574  004D64  C1BE  F052         	movff	colourclick_calibration@current+7,_interrupts_lowerbound+1	;volatile
  2575                           
  2576                           ;colour_click.c: 195:         } else if ((current.C>initial.C) && (current.C<interrupts_
      +                          upperbound)) {
  2577  004D68  EFD0  F026         	goto	l8770
  2578  004D6C                     l8764:
  2579                           
  2580                           ; BSR set to: 1
  2581  004D6C  51BD               	movf	(colourclick_calibration@current+6)& (0+255),w,b
  2582  004D6E  5DB5               	subwf	(colourclick_calibration@initial+6)& (0+255),w,b
  2583  004D70  51BE               	movf	(colourclick_calibration@current+7)& (0+255),w,b
  2584  004D72  59B6               	subwfb	(colourclick_calibration@initial+7)& (0+255),w,b
  2585  004D74  B0D8               	btfsc	status,0,c
  2586  004D76  EFBF  F026         	goto	u11731
  2587  004D7A  EFC1  F026         	goto	u11730
  2588  004D7E                     u11731:
  2589  004D7E  EFD0  F026         	goto	l8770
  2590  004D82                     u11730:
  2591  004D82                     
  2592                           ; BSR set to: 1
  2593  004D82  5054               	movf	_interrupts_upperbound^0,w,c	;volatile
  2594  004D84  5DBD               	subwf	(colourclick_calibration@current+6)& (0+255),w,b
  2595  004D86  5055               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2596  004D88  59BE               	subwfb	(colourclick_calibration@current+7)& (0+255),w,b
  2597  004D8A  B0D8               	btfsc	status,0,c
  2598  004D8C  EFCA  F026         	goto	u11741
  2599  004D90  EFCC  F026         	goto	u11740
  2600  004D94                     u11741:
  2601  004D94  EFD0  F026         	goto	l8770
  2602  004D98                     u11740:
  2603  004D98                     
  2604                           ; BSR set to: 1
  2605                           ;colour_click.c: 196:             interrupts_upperbound = current.C;
  2606  004D98  C1BD  F054         	movff	colourclick_calibration@current+6,_interrupts_upperbound	;volatile
  2607  004D9C  C1BE  F055         	movff	colourclick_calibration@current+7,_interrupts_upperbound+1	;volatile
  2608  004DA0                     l8770:
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;colour_click.c: 198:         colourclick_testing(&initial, &current);
  2612  004DA0  0EAF               	movlw	low colourclick_calibration@initial
  2613  004DA2  0100               	movlb	0	; () banked
  2614  004DA4  6FEA               	movwf	colourclick_testing@initial& (0+255),b
  2615  004DA6  0E01               	movlw	high colourclick_calibration@initial
  2616  004DA8  6FEB               	movwf	(colourclick_testing@initial+1)& (0+255),b
  2617  004DAA  0EB7               	movlw	low colourclick_calibration@current
  2618  004DAC  6FEC               	movwf	colourclick_testing@current& (0+255),b
  2619  004DAE  0E01               	movlw	high colourclick_calibration@current
  2620  004DB0  6FED               	movwf	(colourclick_testing@current+1)& (0+255),b
  2621  004DB2  EC86  F029         	call	_colourclick_testing	;wreg free
  2622  004DB6                     
  2623                           ;colour_click.c: 199:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2624  004DB6  0E52               	movlw	82
  2625  004DB8  0100               	movlb	0	; () banked
  2626  004DBA  6FF1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2627  004DBC  0E2B               	movlw	43
  2628  004DBE  6FF0               	movwf	??_colourclick_calibration& (0+255),b
  2629  004DC0  0E00               	movlw	0
  2630  004DC2                     u12577:
  2631  004DC2  2EE8               	decfsz	wreg,f,c
  2632  004DC4  D7FE               	bra	u12577
  2633  004DC6  2FF0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2634  004DC8  D7FC               	bra	u12577
  2635  004DCA  2FF1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2636  004DCC  D7FA               	bra	u12577
  2637  004DCE  F000               	nop	
  2638  004DD0                     
  2639                           ;colour_click.c: 200:         LATDbits.LATD7 = 0;
  2640  004DD0  9E7C               	bcf	124,7,c	;volatile
  2641  004DD2                     
  2642                           ;colour_click.c: 201:     }
  2643  004DD2  0101               	movlb	1	; () banked
  2644  004DD4  2BAE               	incf	colourclick_calibration@i& (0+255),f,b
  2645  004DD6                     
  2646                           ; BSR set to: 1
  2647  004DD6  0E07               	movlw	7
  2648  004DD8  65AE               	cpfsgt	colourclick_calibration@i& (0+255),b
  2649  004DDA  EFF1  F026         	goto	u11751
  2650  004DDE  EFF3  F026         	goto	u11750
  2651  004DE2                     u11751:
  2652  004DE2  EF8B  F026         	goto	l372
  2653  004DE6                     u11750:
  2654  004DE6                     
  2655                           ; BSR set to: 1
  2656                           ;colour_click.c: 202:     LATDbits.LATD3 = 0;
  2657  004DE6  967C               	bcf	124,3,c	;volatile
  2658  004DE8                     
  2659                           ; BSR set to: 1
  2660                           ;colour_click.c: 203:     colourclickLEDs_C(0);
  2661  004DE8  0E00               	movlw	0
  2662  004DEA  ECEE  F030         	call	_colourclickLEDs_C
  2663  004DEE  0012               	return		;funcret
  2664  004DF0                     __end_of_colourclick_calibration:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _colourclick_testing *****************
  2668 ;; Defined at:
  2669 ;;		line 206 in file "colour_click.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  initial         2  138[BANK0 ] PTR struct .
  2672 ;;		 -> colourclick_calibration@initial(8), 
  2673 ;;  current         2  140[BANK0 ] PTR struct .
  2674 ;;		 -> colourclick_calibration@current(8), 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  buf            40    0[BANK1 ] unsigned char [40]
  2677 ;;  C               2   48[BANK1 ] unsigned int 
  2678 ;;  B               2   46[BANK1 ] unsigned int 
  2679 ;;  G               2   44[BANK1 ] unsigned int 
  2680 ;;  R               2   42[BANK1 ] unsigned int 
  2681 ;;  ambient         2   40[BANK1 ] unsigned int 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Totals:         0       6      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;Total ram usage:       56 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 15
  2698 ;; This function calls:
  2699 ;;		_sendStringSerial4
  2700 ;;		_sprintf
  2701 ;; This function is called by:
  2702 ;;		_colourclick_calibration
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text9
  2707  00530C                     __ptext9:
  2708                           	callstack 0
  2709  00530C                     _colourclick_testing:
  2710                           	callstack 14
  2711  00530C                     
  2712                           ;colour_click.c: 206: void colourclick_testing(RGBC_val *initial, RGBC_val *current);col
      +                          our_click.c: 207: {;colour_click.c: 208:     unsigned int ambient = initial->C;
  2713  00530C  0100               	movlb	0	; () banked
  2714  00530E  EE20 F006          	lfsr	2,6
  2715  005312  51EA               	movf	colourclick_testing@initial& (0+255),w,b
  2716  005314  26D9               	addwf	fsr2l,f,c
  2717  005316  51EB               	movf	(colourclick_testing@initial+1)& (0+255),w,b
  2718  005318  22DA               	addwfc	fsr2h,f,c
  2719  00531A  CFDE F1A4          	movff	postinc2,colourclick_testing@ambient
  2720  00531E  CFDD F1A5          	movff	postdec2,colourclick_testing@ambient+1
  2721  005322                     
  2722                           ; BSR set to: 0
  2723                           ;colour_click.c: 209:     unsigned int R = current->R;
  2724  005322  C0EC  FFD9         	movff	colourclick_testing@current,fsr2l
  2725  005326  C0ED  FFDA         	movff	colourclick_testing@current+1,fsr2h
  2726  00532A  CFDE F1A6          	movff	postinc2,colourclick_testing@R
  2727  00532E  CFDD F1A7          	movff	postdec2,colourclick_testing@R+1
  2728  005332                     
  2729                           ; BSR set to: 0
  2730                           ;colour_click.c: 210:     unsigned int G = current->G;
  2731  005332  EE20 F002          	lfsr	2,2
  2732  005336  51EC               	movf	colourclick_testing@current& (0+255),w,b
  2733  005338  26D9               	addwf	fsr2l,f,c
  2734  00533A  51ED               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2735  00533C  22DA               	addwfc	fsr2h,f,c
  2736  00533E  CFDE F1A8          	movff	postinc2,colourclick_testing@G
  2737  005342  CFDD F1A9          	movff	postdec2,colourclick_testing@G+1
  2738  005346                     
  2739                           ; BSR set to: 0
  2740                           ;colour_click.c: 211:     unsigned int B = current->B;
  2741  005346  EE20 F004          	lfsr	2,4
  2742  00534A  51EC               	movf	colourclick_testing@current& (0+255),w,b
  2743  00534C  26D9               	addwf	fsr2l,f,c
  2744  00534E  51ED               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2745  005350  22DA               	addwfc	fsr2h,f,c
  2746  005352  CFDE F1AA          	movff	postinc2,colourclick_testing@B
  2747  005356  CFDD F1AB          	movff	postdec2,colourclick_testing@B+1
  2748  00535A                     
  2749                           ; BSR set to: 0
  2750                           ;colour_click.c: 212:     unsigned int C = current->C;
  2751  00535A  EE20 F006          	lfsr	2,6
  2752  00535E  51EC               	movf	colourclick_testing@current& (0+255),w,b
  2753  005360  26D9               	addwf	fsr2l,f,c
  2754  005362  51ED               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2755  005364  22DA               	addwfc	fsr2h,f,c
  2756  005366  CFDE F1AC          	movff	postinc2,colourclick_testing@C
  2757  00536A  CFDD F1AD          	movff	postdec2,colourclick_testing@C+1
  2758  00536E                     
  2759                           ; BSR set to: 0
  2760                           ;colour_click.c: 214:     char buf[40];;colour_click.c: 215:     sprintf(buf,"RGBC: %i %
      +                          i %i %i     Threshold: %i %i %i\n\r", R, G, B, C, interrupts_lowerbound, ambient, interr
      +                          upts_upperbound);
  2761  00536E  0E7C               	movlw	low colourclick_testing@buf
  2762  005370  6FC8               	movwf	sprintf@s& (0+255),b
  2763  005372  0E01               	movlw	high colourclick_testing@buf
  2764  005374  6FC9               	movwf	(sprintf@s+1)& (0+255),b
  2765  005376  0E41               	movlw	low STR_19
  2766  005378  6FCA               	movwf	sprintf@fmt& (0+255),b
  2767  00537A  0E0E               	movlw	high STR_19
  2768  00537C  6FCB               	movwf	(sprintf@fmt+1)& (0+255),b
  2769  00537E  C1A6  F0CC         	movff	colourclick_testing@R,?_sprintf+4
  2770  005382  C1A7  F0CD         	movff	colourclick_testing@R+1,?_sprintf+5
  2771  005386  C1A8  F0CE         	movff	colourclick_testing@G,?_sprintf+6
  2772  00538A  C1A9  F0CF         	movff	colourclick_testing@G+1,?_sprintf+7
  2773  00538E  C1AA  F0D0         	movff	colourclick_testing@B,?_sprintf+8
  2774  005392  C1AB  F0D1         	movff	colourclick_testing@B+1,?_sprintf+9
  2775  005396  C1AC  F0D2         	movff	colourclick_testing@C,?_sprintf+10
  2776  00539A  C1AD  F0D3         	movff	colourclick_testing@C+1,?_sprintf+11
  2777  00539E  C051  F0D4         	movff	_interrupts_lowerbound,?_sprintf+12	;volatile
  2778  0053A2  C052  F0D5         	movff	_interrupts_lowerbound+1,?_sprintf+13	;volatile
  2779  0053A6  C1A4  F0D6         	movff	colourclick_testing@ambient,?_sprintf+14
  2780  0053AA  C1A5  F0D7         	movff	colourclick_testing@ambient+1,?_sprintf+15
  2781  0053AE  C054  F0D8         	movff	_interrupts_upperbound,?_sprintf+16	;volatile
  2782  0053B2  C055  F0D9         	movff	_interrupts_upperbound+1,?_sprintf+17	;volatile
  2783  0053B6  EC7C  F02D         	call	_sprintf	;wreg free
  2784  0053BA                     
  2785                           ;colour_click.c: 217:     sendStringSerial4(buf);
  2786  0053BA  0E7C               	movlw	low colourclick_testing@buf
  2787  0053BC  6E0B               	movwf	sendStringSerial4@string^0,c
  2788  0053BE  0E01               	movlw	high colourclick_testing@buf
  2789  0053C0  6E0C               	movwf	(sendStringSerial4@string+1)^0,c
  2790  0053C2  EC74  F030         	call	_sendStringSerial4	;wreg free
  2791  0053C6                     
  2792                           ;colour_click.c: 218:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2793  0053C6  0E29               	movlw	41
  2794  0053C8  0100               	movlb	0	; () banked
  2795  0053CA  6FEF               	movwf	(??_colourclick_testing+1)& (0+255),b
  2796  0053CC  0E96               	movlw	150
  2797  0053CE  6FEE               	movwf	??_colourclick_testing& (0+255),b
  2798  0053D0  0E7F               	movlw	127
  2799  0053D2                     u12587:
  2800  0053D2  2EE8               	decfsz	wreg,f,c
  2801  0053D4  D7FE               	bra	u12587
  2802  0053D6  2FEE               	decfsz	??_colourclick_testing& (0+255),f,b
  2803  0053D8  D7FC               	bra	u12587
  2804  0053DA  2FEF               	decfsz	(??_colourclick_testing+1)& (0+255),f,b
  2805  0053DC  D7FA               	bra	u12587
  2806  0053DE  0012               	return		;funcret
  2807  0053E0                     __end_of_colourclick_testing:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function _sprintf *****************
  2811 ;; Defined at:
  2812 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  s               2  104[BANK0 ] PTR unsigned char 
  2815 ;;		 -> colourclick_testing@buf(40), colourcards_testingRGBC@buf(30), 
  2816 ;;  fmt             2  106[BANK0 ] PTR const unsigned char 
  2817 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2818 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2819 ;;		 -> STR_3(64), STR_1(64), 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  f               6  132[BANK0 ] struct _IO_FILE
  2822 ;;  ap              2  130[BANK0 ] PTR void [1]
  2823 ;;		 -> ?_sprintf(2), 
  2824 ;;  ret             2    0        int 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  2  104[BANK0 ] int 
  2827 ;; Registers used:
  2828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2834 ;;      Params:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;Total ram usage:       34 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 14
  2841 ;; This function calls:
  2842 ;;		_vfprintf
  2843 ;; This function is called by:
  2844 ;;		_colourclick_testing
  2845 ;;		_colourcards_testingRGBC
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text10
  2850  005AF8                     __ptext10:
  2851                           	callstack 0
  2852  005AF8                     _sprintf:
  2853                           	callstack 14
  2854  005AF8  0ECC               	movlw	low (?_sprintf+4)
  2855  005AFA  0100               	movlb	0	; () banked
  2856  005AFC  6FE2               	movwf	sprintf@ap& (0+255),b
  2857  005AFE  0E00               	movlw	high (?_sprintf+4)
  2858  005B00  6FE3               	movwf	(sprintf@ap+1)& (0+255),b
  2859  005B02  C0C8  F0E4         	movff	sprintf@s,sprintf@f
  2860  005B06  C0C9  F0E5         	movff	sprintf@s+1,sprintf@f+1
  2861  005B0A                     
  2862                           ; BSR set to: 0
  2863  005B0A  0E00               	movlw	0
  2864  005B0C  6FE7               	movwf	(sprintf@f+3)& (0+255),b
  2865  005B0E  0E00               	movlw	0
  2866  005B10  6FE6               	movwf	(sprintf@f+2)& (0+255),b
  2867  005B12                     
  2868                           ; BSR set to: 0
  2869  005B12  0E00               	movlw	0
  2870  005B14  6FE9               	movwf	(sprintf@f+5)& (0+255),b
  2871  005B16  0E00               	movlw	0
  2872  005B18  6FE8               	movwf	(sprintf@f+4)& (0+255),b
  2873  005B1A                     
  2874                           ; BSR set to: 0
  2875  005B1A  0EE4               	movlw	low sprintf@f
  2876  005B1C  6FC0               	movwf	vfprintf@fp& (0+255),b
  2877  005B1E  0E00               	movlw	high sprintf@f
  2878  005B20  6FC1               	movwf	(vfprintf@fp+1)& (0+255),b
  2879  005B22  C0CA  F0C2         	movff	sprintf@fmt,vfprintf@fmt
  2880  005B26  C0CB  F0C3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2881  005B2A  0EE2               	movlw	low sprintf@ap
  2882  005B2C  6FC4               	movwf	vfprintf@ap& (0+255),b
  2883  005B2E  0E00               	movlw	high sprintf@ap
  2884  005B30  6FC5               	movwf	(vfprintf@ap+1)& (0+255),b
  2885  005B32  EC8C  F02C         	call	_vfprintf	;wreg free
  2886  005B36  0100               	movlb	0	; () banked
  2887  005B38  51E6               	movf	(sprintf@f+2)& (0+255),w,b
  2888  005B3A  25C8               	addwf	sprintf@s& (0+255),w,b
  2889  005B3C  6ED9               	movwf	fsr2l,c
  2890  005B3E  51E7               	movf	(sprintf@f+3)& (0+255),w,b
  2891  005B40  21C9               	addwfc	(sprintf@s+1)& (0+255),w,b
  2892  005B42  6EDA               	movwf	fsr2h,c
  2893  005B44  0E00               	movlw	0
  2894  005B46  6EDF               	movwf	indf2,c
  2895  005B48                     
  2896                           ; BSR set to: 0
  2897  005B48  0012               	return		;funcret
  2898  005B4A                     __end_of_sprintf:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _vfprintf *****************
  2902 ;; Defined at:
  2903 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  fp              2   96[BANK0 ] PTR struct _IO_FILE
  2906 ;;		 -> sprintf@f(6), 
  2907 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  2908 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2909 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2910 ;;		 -> STR_3(64), STR_1(64), 
  2911 ;;  ap              2  100[BANK0 ] PTR PTR void 
  2912 ;;		 -> sprintf@ap(2), 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  cfmt            2  102[BANK0 ] PTR unsigned char 
  2915 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2916 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2917 ;;		 -> STR_3(64), STR_1(64), 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  2   96[BANK0 ] int 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;Total ram usage:        8 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 13
  2934 ;; This function calls:
  2935 ;;		_vfpfcnvrt
  2936 ;; This function is called by:
  2937 ;;		_sprintf
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text11
  2942  005918                     __ptext11:
  2943                           	callstack 0
  2944  005918                     _vfprintf:
  2945                           	callstack 14
  2946  005918                     
  2947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2948  005918  C0C2  F0C6         	movff	vfprintf@fmt,vfprintf@cfmt
  2949  00591C  C0C3  F0C7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2950  005920                     
  2951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2952  005920  0E00               	movlw	0
  2953  005922  0101               	movlb	1	; () banked
  2954  005924  6F1D               	movwf	(_nout+1)& (0+255),b
  2955  005926  0E00               	movlw	0
  2956  005928  6F1C               	movwf	_nout& (0+255),b
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2959  00592A  EFAE  F02C         	goto	l8472
  2960  00592E                     l8470:
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2964  00592E  C0C0  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  2965  005932  C0C1  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2966  005936  0EC6               	movlw	low vfprintf@cfmt
  2967  005938  0100               	movlb	0	; () banked
  2968  00593A  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  2969  00593C  0E00               	movlw	high vfprintf@cfmt
  2970  00593E  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2971  005940  C0C4  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  2972  005944  C0C5  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2973  005948  EC54  F011         	call	_vfpfcnvrt	;wreg free
  2974  00594C  0100               	movlb	0	; () banked
  2975  00594E  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  2976  005950  0101               	movlb	1	; () banked
  2977  005952  271C               	addwf	_nout& (0+255),f,b
  2978  005954  0100               	movlb	0	; () banked
  2979  005956  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2980  005958  0101               	movlb	1	; () banked
  2981  00595A  231D               	addwfc	(_nout+1)& (0+255),f,b
  2982  00595C                     l8472:
  2983                           
  2984                           ; BSR set to: 1
  2985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2986  00595C  C0C6  FFF6         	movff	vfprintf@cfmt,tblptrl
  2987  005960  C0C7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2988  005964                     	if	0	;tblptru may be non-zero
  2989  005964                     	endif
  2990  005964                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2991  005964  0E00               	movlw	low (__mediumconst shr (0+16))
  2992  005966  6EF8               	movwf	tblptru,c
  2993  005968                     	endif
  2994  005968  0008               	tblrd		*
  2995  00596A  50F5               	movf	tablat,w,c
  2996  00596C  0900               	iorlw	0
  2997  00596E  A4D8               	btfss	status,2,c
  2998  005970  EFBC  F02C         	goto	u11391
  2999  005974  EFBE  F02C         	goto	u11390
  3000  005978                     u11391:
  3001  005978  EF97  F02C         	goto	l8470
  3002  00597C                     u11390:
  3003  00597C                     
  3004                           ; BSR set to: 1
  3005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3006  00597C  C11C  F0C0         	movff	_nout,?_vfprintf
  3007  005980  C11D  F0C1         	movff	_nout+1,?_vfprintf+1
  3008  005984                     
  3009                           ; BSR set to: 1
  3010  005984  0012               	return		;funcret
  3011  005986                     __end_of_vfprintf:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function _vfpfcnvrt *****************
  3015 ;; Defined at:
  3016 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  3019 ;;		 -> sprintf@f(6), 
  3020 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  3021 ;;		 -> vfprintf@cfmt(2), 
  3022 ;;  ap              2   72[BANK0 ] PTR PTR void 
  3023 ;;		 -> sprintf@ap(2), 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  ll              8   74[BANK0 ] long long 
  3026 ;;  llu             8    0        unsigned long long 
  3027 ;;  f               4   88[BANK0 ] unsigned long long 
  3028 ;;  ct              3   92[BANK0 ] unsigned char [3]
  3029 ;;  vp              3    0        PTR void 
  3030 ;;  cp              2   82[BANK0 ] PTR unsigned char 
  3031 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(5), 
  3032 ;;		 -> STR_12(7), STR_10(11), STR_8(6), STR_6(5), 
  3033 ;;		 -> STR_4(4), STR_2(7), 
  3034 ;;  i               2    0        int 
  3035 ;;  done            2    0        int 
  3036 ;;  c               1   95[BANK0 ] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2   68[BANK0 ] int 
  3039 ;; Registers used:
  3040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3046 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3049 ;;      Totals:         4      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3050 ;;Total ram usage:       32 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; Hardware stack levels required when called: 12
  3053 ;; This function calls:
  3054 ;;		_atoi
  3055 ;;		_dtoa
  3056 ;;		_efgtoa
  3057 ;;		_fputc
  3058 ;;		_isdigit
  3059 ;;		_isupper
  3060 ;;		_stoa
  3061 ;;		_strncmp
  3062 ;;		_tolower
  3063 ;; This function is called by:
  3064 ;;		_vfprintf
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text12
  3069  0022A8                     __ptext12:
  3070                           	callstack 0
  3071  0022A8                     _vfpfcnvrt:
  3072                           	callstack 14
  3073  0022A8                     
  3074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3075  0022A8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3076  0022AC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3077  0022B0  CFDE FFF6          	movff	postinc2,tblptrl
  3078  0022B4  CFDD FFF7          	movff	postdec2,tblptrh
  3079  0022B8                     	if	0	;tblptru may be non-zero
  3080  0022B8                     	endif
  3081  0022B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3082  0022B8  0E00               	movlw	low (__mediumconst shr (0+16))
  3083  0022BA  6EF8               	movwf	tblptru,c
  3084  0022BC                     	endif
  3085  0022BC  0008               	tblrd		*
  3086  0022BE  50F5               	movf	tablat,w,c
  3087  0022C0  0A25               	xorlw	37
  3088  0022C2  A4D8               	btfss	status,2,c
  3089  0022C4  EF66  F011         	goto	u11071
  3090  0022C8  EF68  F011         	goto	u11070
  3091  0022CC                     u11071:
  3092  0022CC  EF2C  F014         	goto	l8368
  3093  0022D0                     u11070:
  3094  0022D0                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3096  0022D0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3097  0022D4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3098  0022D8  2ADE               	incf	postinc2,f,c
  3099  0022DA  0E00               	movlw	0
  3100  0022DC  22DD               	addwfc	postdec2,f,c
  3101  0022DE                     
  3102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3103  0022DE  0E00               	movlw	0
  3104  0022E0  0101               	movlb	1	; () banked
  3105  0022E2  6F1F               	movwf	(_width+1)& (0+255),b
  3106  0022E4  0E00               	movlw	0
  3107  0022E6  6F1E               	movwf	_width& (0+255),b
  3108  0022E8  C11E  F04F         	movff	_width,_flags
  3109  0022EC  C11F  F050         	movff	_width+1,_flags+1
  3110  0022F0                     
  3111                           ; BSR set to: 1
  3112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3113  0022F0  684D               	setf	_prec^0,c
  3114  0022F2  684E               	setf	(_prec+1)^0,c
  3115  0022F4                     
  3116                           ; BSR set to: 1
  3117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3118  0022F4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3119  0022F8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3120  0022FC  CFDE FFF6          	movff	postinc2,tblptrl
  3121  002300  CFDD FFF7          	movff	postdec2,tblptrh
  3122  002304                     	if	0	;tblptru may be non-zero
  3123  002304                     	endif
  3124  002304                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3125  002304  0E00               	movlw	low (__mediumconst shr (0+16))
  3126  002306  6EF8               	movwf	tblptru,c
  3127  002308                     	endif
  3128  002308  0008               	tblrd		*
  3129  00230A  50F5               	movf	tablat,w,c
  3130  00230C  0A2E               	xorlw	46
  3131  00230E  A4D8               	btfss	status,2,c
  3132  002310  EF8C  F011         	goto	u11081
  3133  002314  EF8E  F011         	goto	u11080
  3134  002318                     u11081:
  3135  002318  EF10  F012         	goto	l8296
  3136  00231C                     u11080:
  3137  00231C                     
  3138                           ; BSR set to: 1
  3139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3140  00231C  0E00               	movlw	0
  3141  00231E  6E4E               	movwf	(_prec+1)^0,c
  3142  002320  0E00               	movlw	0
  3143  002322  6E4D               	movwf	_prec^0,c
  3144  002324                     
  3145                           ; BSR set to: 1
  3146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3147  002324  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3148  002328  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3149  00232C  2ADE               	incf	postinc2,f,c
  3150  00232E  0E00               	movlw	0
  3151  002330  22DD               	addwfc	postdec2,f,c
  3152  002332                     
  3153                           ; BSR set to: 1
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3155  002332  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3156  002336  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3157  00233A  CFDE FFF6          	movff	postinc2,tblptrl
  3158  00233E  CFDD FFF7          	movff	postdec2,tblptrh
  3159  002342                     	if	0	;tblptru may be non-zero
  3160  002342                     	endif
  3161  002342                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3162  002342  0E00               	movlw	low (__mediumconst shr (0+16))
  3163  002344  6EF8               	movwf	tblptru,c
  3164  002346                     	endif
  3165  002346  0008               	tblrd		*
  3166  002348  50F5               	movf	tablat,w,c
  3167  00234A  0A2A               	xorlw	42
  3168  00234C  A4D8               	btfss	status,2,c
  3169  00234E  EFAB  F011         	goto	u11091
  3170  002352  EFAD  F011         	goto	u11090
  3171  002356                     u11091:
  3172  002356  EFCA  F011         	goto	l8286
  3173  00235A                     u11090:
  3174  00235A                     
  3175                           ; BSR set to: 1
  3176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3177  00235A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3178  00235E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3179  002362  2ADE               	incf	postinc2,f,c
  3180  002364  0E00               	movlw	0
  3181  002366  22DD               	addwfc	postdec2,f,c
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3184  002368  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3185  00236C  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3186  002370  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3187  002374  0E02               	movlw	2
  3188  002376  26DE               	addwf	postinc2,f,c
  3189  002378  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3190  00237C  0E00               	movlw	0
  3191  00237E  22DD               	addwfc	postdec2,f,c
  3192  002380  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3193  002384  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3194  002388  CFDE F04D          	movff	postinc2,_prec
  3195  00238C  CFDD F04E          	movff	postdec2,_prec+1
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3198  002390  EF10  F012         	goto	l8296
  3199  002394                     l8286:
  3200                           
  3201                           ; BSR set to: 1
  3202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3203  002394  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3204  002398  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3205  00239C  CFDE F011          	movff	postinc2,atoi@s
  3206  0023A0  CFDD F012          	movff	postdec2,atoi@s+1
  3207  0023A4  ECC3  F01F         	call	_atoi	;wreg free
  3208  0023A8  C011  F04D         	movff	?_atoi,_prec
  3209  0023AC  C012  F04E         	movff	?_atoi+1,_prec+1
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3212  0023B0  EFE1  F011         	goto	l8290
  3213  0023B4                     l8288:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3217  0023B4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3218  0023B8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3219  0023BC  2ADE               	incf	postinc2,f,c
  3220  0023BE  0E00               	movlw	0
  3221  0023C0  22DD               	addwfc	postdec2,f,c
  3222  0023C2                     l8290:
  3223  0023C2  0ED0               	movlw	208
  3224  0023C4  6E49               	movwf	??_vfpfcnvrt^0,c
  3225  0023C6  0EFF               	movlw	255
  3226  0023C8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3227  0023CA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3228  0023CE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3229  0023D2  CFDE FFF6          	movff	postinc2,tblptrl
  3230  0023D6  CFDD FFF7          	movff	postdec2,tblptrh
  3231  0023DA                     	if	0	;tblptru may be non-zero
  3232  0023DA                     	endif
  3233  0023DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3234  0023DA  0E00               	movlw	low (__mediumconst shr (0+16))
  3235  0023DC  6EF8               	movwf	tblptru,c
  3236  0023DE                     	endif
  3237  0023DE  0008               	tblrd		*
  3238  0023E0  50F5               	movf	tablat,w,c
  3239  0023E2  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3240  0023E4  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3241  0023E6  5049               	movf	??_vfpfcnvrt^0,w,c
  3242  0023E8  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3243  0023EA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3244  0023EC  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3245  0023EE  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3246  0023F0  E10A               	bnz	u11100
  3247  0023F2  0E0A               	movlw	10
  3248  0023F4  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3249  0023F6  A0D8               	btfss	status,0,c
  3250  0023F8  EF00  F012         	goto	u11101
  3251  0023FC  EF03  F012         	goto	u11100
  3252  002400                     u11101:
  3253  002400  0E01               	movlw	1
  3254  002402  EF04  F012         	goto	u11110
  3255  002406                     u11100:
  3256  002406  0E00               	movlw	0
  3257  002408                     u11110:
  3258  002408  0100               	movlb	0	; () banked
  3259  00240A  6FB4               	movwf	_vfpfcnvrt$3164& (0+255),b
  3260  00240C  6BB5               	clrf	(_vfpfcnvrt$3164+1)& (0+255),b
  3261  00240E                     
  3262                           ; BSR set to: 0
  3263  00240E  51B4               	movf	_vfpfcnvrt$3164& (0+255),w,b
  3264  002410  11B5               	iorwf	(_vfpfcnvrt$3164+1)& (0+255),w,b
  3265  002412  A4D8               	btfss	status,2,c
  3266  002414  EF0E  F012         	goto	u11121
  3267  002418  EF10  F012         	goto	u11120
  3268  00241C                     u11121:
  3269  00241C  EFDA  F011         	goto	l8288
  3270  002420                     u11120:
  3271  002420                     l8296:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3274  002420  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3275  002424  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3276  002428  CFDE FFF6          	movff	postinc2,tblptrl
  3277  00242C  CFDD FFF7          	movff	postdec2,tblptrh
  3278  002430                     	if	0	;tblptru may be non-zero
  3279  002430                     	endif
  3280  002430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3281  002430  0E00               	movlw	low (__mediumconst shr (0+16))
  3282  002432  6EF8               	movwf	tblptru,c
  3283  002434                     	endif
  3284  002434  0008               	tblrd		*
  3285  002436  50F5               	movf	tablat,w,c
  3286  002438  6E10               	movwf	tolower@c^0,c
  3287  00243A  6A11               	clrf	(tolower@c+1)^0,c
  3288  00243C  ECC3  F02C         	call	_tolower	;wreg free
  3289  002440  5010               	movf	?_tolower^0,w,c
  3290  002442  0100               	movlb	0	; () banked
  3291  002444  6FBC               	movwf	vfpfcnvrt@ct& (0+255),b
  3292  002446                     
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3295  002446  51BC               	movf	vfpfcnvrt@ct& (0+255),w,b
  3296  002448  B4D8               	btfsc	status,2,c
  3297  00244A  EF29  F012         	goto	u11131
  3298  00244E  EF2B  F012         	goto	u11130
  3299  002452                     u11131:
  3300  002452  EF69  F012         	goto	l8306
  3301  002456                     u11130:
  3302  002456                     
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3305  002456  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3306  00245A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3307  00245E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3308  002462  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3309  002466  0E01               	movlw	1
  3310  002468  2649               	addwf	??_vfpfcnvrt^0,f,c
  3311  00246A  0E00               	movlw	0
  3312  00246C  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3313  00246E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3314  002472  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3315  002476                     	if	0	;tblptru may be non-zero
  3316  002476                     	endif
  3317  002476                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3318  002476  0E00               	movlw	low (__mediumconst shr (0+16))
  3319  002478  6EF8               	movwf	tblptru,c
  3320  00247A                     	endif
  3321  00247A  0008               	tblrd		*
  3322  00247C  50F5               	movf	tablat,w,c
  3323  00247E  6E10               	movwf	tolower@c^0,c
  3324  002480  6A11               	clrf	(tolower@c+1)^0,c
  3325  002482  ECC3  F02C         	call	_tolower	;wreg free
  3326  002486  5010               	movf	?_tolower^0,w,c
  3327  002488  0100               	movlb	0	; () banked
  3328  00248A  6FBD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3329  00248C                     
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3332  00248C  51BD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3333  00248E  B4D8               	btfsc	status,2,c
  3334  002490  EF4C  F012         	goto	u11141
  3335  002494  EF4E  F012         	goto	u11140
  3336  002498                     u11141:
  3337  002498  EF69  F012         	goto	l8306
  3338  00249C                     u11140:
  3339  00249C                     
  3340                           ; BSR set to: 0
  3341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3342  00249C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3343  0024A0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3344  0024A4  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3345  0024A8  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3346  0024AC  0E02               	movlw	2
  3347  0024AE  2649               	addwf	??_vfpfcnvrt^0,f,c
  3348  0024B0  0E00               	movlw	0
  3349  0024B2  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3350  0024B4  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3351  0024B8  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3352  0024BC                     	if	0	;tblptru may be non-zero
  3353  0024BC                     	endif
  3354  0024BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3355  0024BC  0E00               	movlw	low (__mediumconst shr (0+16))
  3356  0024BE  6EF8               	movwf	tblptru,c
  3357  0024C0                     	endif
  3358  0024C0  0008               	tblrd		*
  3359  0024C2  50F5               	movf	tablat,w,c
  3360  0024C4  6E10               	movwf	tolower@c^0,c
  3361  0024C6  6A11               	clrf	(tolower@c+1)^0,c
  3362  0024C8  ECC3  F02C         	call	_tolower	;wreg free
  3363  0024CC  5010               	movf	?_tolower^0,w,c
  3364  0024CE  0100               	movlb	0	; () banked
  3365  0024D0  6FBE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3366  0024D2                     l8306:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3370  0024D2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3371  0024D6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3372  0024DA  CFDE FFF6          	movff	postinc2,tblptrl
  3373  0024DE  CFDD FFF7          	movff	postdec2,tblptrh
  3374  0024E2                     	if	0	;tblptru may be non-zero
  3375  0024E2                     	endif
  3376  0024E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3377  0024E2  0E00               	movlw	low (__mediumconst shr (0+16))
  3378  0024E4  6EF8               	movwf	tblptru,c
  3379  0024E6                     	endif
  3380  0024E6  0008               	tblrd		*
  3381  0024E8  50F5               	movf	tablat,w,c
  3382  0024EA  0A64               	xorlw	100
  3383  0024EC  B4D8               	btfsc	status,2,c
  3384  0024EE  EF7B  F012         	goto	u11151
  3385  0024F2  EF7D  F012         	goto	u11150
  3386  0024F6                     u11151:
  3387  0024F6  EF91  F012         	goto	l8310
  3388  0024FA                     u11150:
  3389  0024FA                     
  3390                           ; BSR set to: 0
  3391  0024FA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3392  0024FE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3393  002502  CFDE FFF6          	movff	postinc2,tblptrl
  3394  002506  CFDD FFF7          	movff	postdec2,tblptrh
  3395  00250A                     	if	0	;tblptru may be non-zero
  3396  00250A                     	endif
  3397  00250A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3398  00250A  0E00               	movlw	low (__mediumconst shr (0+16))
  3399  00250C  6EF8               	movwf	tblptru,c
  3400  00250E                     	endif
  3401  00250E  0008               	tblrd		*
  3402  002510  50F5               	movf	tablat,w,c
  3403  002512  0A69               	xorlw	105
  3404  002514  A4D8               	btfss	status,2,c
  3405  002516  EF8F  F012         	goto	u11161
  3406  00251A  EF91  F012         	goto	u11160
  3407  00251E                     u11161:
  3408  00251E  EFD1  F012         	goto	l8316
  3409  002522                     u11160:
  3410  002522                     l8310:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3414  002522  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3415  002526  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3416  00252A  2ADE               	incf	postinc2,f,c
  3417  00252C  0E00               	movlw	0
  3418  00252E  22DD               	addwfc	postdec2,f,c
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3421  002530  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3422  002534  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3423  002538  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3424  00253C  0E02               	movlw	2
  3425  00253E  26DE               	addwf	postinc2,f,c
  3426  002540  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3427  002544  0E00               	movlw	0
  3428  002546  22DD               	addwfc	postdec2,f,c
  3429  002548  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3430  00254C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3431  002550  CFDE F0AA          	movff	postinc2,vfpfcnvrt@ll
  3432  002554  CFDD F0AB          	movff	postdec2,vfpfcnvrt@ll+1
  3433  002558  0E00               	movlw	0
  3434  00255A  BFAB               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3435  00255C  0EFF               	movlw	-1
  3436  00255E  6FAC               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3437  002560  6FAD               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3438  002562  6FAE               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3439  002564  6FAF               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3440  002566  6FB0               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3441  002568  6FB1               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3442  00256A                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3445  00256A  C0A4  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  3446  00256E  C0A5  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3447  002572  C0AA  F027         	movff	vfpfcnvrt@ll,dtoa@d
  3448  002576  C0AB  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3449  00257A  C0AC  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3450  00257E  C0AD  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3451  002582  C0AE  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3452  002586  C0AF  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3453  00258A  C0B0  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3454  00258E  C0B1  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3455  002592  EC8C  F01A         	call	_dtoa	;wreg free
  3456  002596  C025  F0A4         	movff	?_dtoa,?_vfpfcnvrt
  3457  00259A  C026  F0A5         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3458  00259E  EF49  F014         	goto	l1687
  3459  0025A2                     l8316:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3463  0025A2  0E66               	movlw	102
  3464  0025A4  19BC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3465  0025A6  A4D8               	btfss	status,2,c
  3466  0025A8  EFD8  F012         	goto	u11171
  3467  0025AC  EFDA  F012         	goto	u11170
  3468  0025B0                     u11171:
  3469  0025B0  EF1C  F013         	goto	l8328
  3470  0025B4                     u11170:
  3471  0025B4                     
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3474  0025B4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3475  0025B8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3476  0025BC  CFDE FFF6          	movff	postinc2,tblptrl
  3477  0025C0  CFDD FFF7          	movff	postdec2,tblptrh
  3478  0025C4                     	if	0	;tblptru may be non-zero
  3479  0025C4                     	endif
  3480  0025C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3481  0025C4  0E00               	movlw	low (__mediumconst shr (0+16))
  3482  0025C6  6EF8               	movwf	tblptru,c
  3483  0025C8                     	endif
  3484  0025C8  0008               	tblrd		*
  3485  0025CA  CFF5 F0BF          	movff	tablat,vfpfcnvrt@c
  3486  0025CE                     
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3489  0025CE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3490  0025D2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3491  0025D6  2ADE               	incf	postinc2,f,c
  3492  0025D8  0E00               	movlw	0
  3493  0025DA  22DD               	addwfc	postdec2,f,c
  3494  0025DC                     
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3497  0025DC  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3498  0025E0  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3499  0025E4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3500  0025E8  0E04               	movlw	4
  3501  0025EA  26DE               	addwf	postinc2,f,c
  3502  0025EC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3503  0025F0  0E00               	movlw	0
  3504  0025F2  22DD               	addwfc	postdec2,f,c
  3505  0025F4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3506  0025F8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3507  0025FC  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  3508  002600  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  3509  002604  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  3510  002608  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  3511  00260C                     l8324:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3515  00260C  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3516  002610  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3517  002614  C0B8  F062         	movff	vfpfcnvrt@f,efgtoa@f
  3518  002618  C0B9  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3519  00261C  C0BA  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3520  002620  C0BB  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3521  002624  C0BF  F066         	movff	vfpfcnvrt@c,efgtoa@c
  3522  002628  EC5C  F007         	call	_efgtoa	;wreg free
  3523  00262C  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  3524  002630  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3525  002634  EF49  F014         	goto	l1687
  3526  002638                     l8328:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3530  002638  0EBC               	movlw	low vfpfcnvrt@ct
  3531  00263A  6E0A               	movwf	strncmp@_l^0,c
  3532  00263C  0E00               	movlw	high vfpfcnvrt@ct
  3533  00263E  6E0B               	movwf	(strncmp@_l+1)^0,c
  3534  002640  0EB3               	movlw	low STR_28
  3535  002642  6E0C               	movwf	strncmp@_r^0,c
  3536  002644  0E0E               	movlw	high STR_28
  3537  002646  6E0D               	movwf	(strncmp@_r+1)^0,c
  3538  002648  0E00               	movlw	0
  3539  00264A  6E0F               	movwf	(strncmp@n+1)^0,c
  3540  00264C  0E02               	movlw	2
  3541  00264E  6E0E               	movwf	strncmp@n^0,c
  3542  002650  EC15  F029         	call	_strncmp	;wreg free
  3543  002654  500A               	movf	?_strncmp^0,w,c
  3544  002656  100B               	iorwf	(?_strncmp+1)^0,w,c
  3545  002658  A4D8               	btfss	status,2,c
  3546  00265A  EF31  F013         	goto	u11181
  3547  00265E  EF33  F013         	goto	u11180
  3548  002662                     u11181:
  3549  002662  EFB3  F013         	goto	l8344
  3550  002666                     u11180:
  3551  002666                     
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3553  002666  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3554  00266A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3555  00266E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3556  002672  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3557  002676  0E01               	movlw	1
  3558  002678  2649               	addwf	??_vfpfcnvrt^0,f,c
  3559  00267A  0E00               	movlw	0
  3560  00267C  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3561  00267E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3562  002682  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3563  002686                     	if	0	;tblptru may be non-zero
  3564  002686                     	endif
  3565  002686                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3566  002686  0E00               	movlw	low (__mediumconst shr (0+16))
  3567  002688  6EF8               	movwf	tblptru,c
  3568  00268A                     	endif
  3569  00268A  0008               	tblrd		*
  3570  00268C  CFF5 F0BF          	movff	tablat,vfpfcnvrt@c
  3571  002690  0EBF               	movlw	191
  3572  002692  6E49               	movwf	??_vfpfcnvrt^0,c
  3573  002694  0EFF               	movlw	255
  3574  002696  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3575  002698  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3576  00269C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3577  0026A0  CFDE FFF6          	movff	postinc2,tblptrl
  3578  0026A4  CFDD FFF7          	movff	postdec2,tblptrh
  3579  0026A8                     	if	0	;tblptru may be non-zero
  3580  0026A8                     	endif
  3581  0026A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3582  0026A8  0E00               	movlw	low (__mediumconst shr (0+16))
  3583  0026AA  6EF8               	movwf	tblptru,c
  3584  0026AC                     	endif
  3585  0026AC  0008               	tblrd		*
  3586  0026AE  50F5               	movf	tablat,w,c
  3587  0026B0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3588  0026B2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3589  0026B4  5049               	movf	??_vfpfcnvrt^0,w,c
  3590  0026B6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3591  0026B8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3592  0026BA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3593  0026BC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3594  0026BE  E10A               	bnz	u11190
  3595  0026C0  0E1A               	movlw	26
  3596  0026C2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3597  0026C4  A0D8               	btfss	status,0,c
  3598  0026C6  EF67  F013         	goto	u11191
  3599  0026CA  EF6A  F013         	goto	u11190
  3600  0026CE                     u11191:
  3601  0026CE  0E01               	movlw	1
  3602  0026D0  EF6B  F013         	goto	u11200
  3603  0026D4                     u11190:
  3604  0026D4  0E00               	movlw	0
  3605  0026D6                     u11200:
  3606  0026D6  0100               	movlb	0	; () banked
  3607  0026D8  6FB6               	movwf	_vfpfcnvrt$3169& (0+255),b
  3608  0026DA  6BB7               	clrf	(_vfpfcnvrt$3169+1)& (0+255),b
  3609  0026DC                     
  3610                           ; BSR set to: 0
  3611  0026DC  51B6               	movf	_vfpfcnvrt$3169& (0+255),w,b
  3612  0026DE  11B7               	iorwf	(_vfpfcnvrt$3169+1)& (0+255),w,b
  3613  0026E0  B4D8               	btfsc	status,2,c
  3614  0026E2  EF75  F013         	goto	u11211
  3615  0026E6  EF77  F013         	goto	u11210
  3616  0026EA                     u11211:
  3617  0026EA  EF91  F013         	goto	l8338
  3618  0026EE                     u11210:
  3619  0026EE                     
  3620                           ; BSR set to: 0
  3621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3622  0026EE  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3623  0026F2  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3624  0026F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3625  0026FA  0E04               	movlw	4
  3626  0026FC  26DE               	addwf	postinc2,f,c
  3627  0026FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3628  002702  0E00               	movlw	0
  3629  002704  22DD               	addwfc	postdec2,f,c
  3630  002706  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3631  00270A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3632  00270E  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  3633  002712  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  3634  002716  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  3635  00271A  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3638  00271E  EFA9  F013         	goto	l1695
  3639  002722                     l8338:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3643  002722  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3644  002726  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3645  00272A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3646  00272E  0E04               	movlw	4
  3647  002730  26DE               	addwf	postinc2,f,c
  3648  002732  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3649  002736  0E00               	movlw	0
  3650  002738  22DD               	addwfc	postdec2,f,c
  3651  00273A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3652  00273E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3653  002742  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  3654  002746  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  3655  00274A  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  3656  00274E  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  3657  002752                     l1695:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3661  002752  0E02               	movlw	2
  3662  002754  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3663  002758  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3664  00275C  26DE               	addwf	postinc2,f,c
  3665  00275E  0E00               	movlw	0
  3666  002760  22DD               	addwfc	postdec2,f,c
  3667  002762  EF06  F013         	goto	l8324
  3668  002766                     l8344:
  3669                           
  3670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  3671  002766  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3672  00276A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3673  00276E  CFDE FFF6          	movff	postinc2,tblptrl
  3674  002772  CFDD FFF7          	movff	postdec2,tblptrh
  3675  002776                     	if	0	;tblptru may be non-zero
  3676  002776                     	endif
  3677  002776                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3678  002776  0E00               	movlw	low (__mediumconst shr (0+16))
  3679  002778  6EF8               	movwf	tblptru,c
  3680  00277A                     	endif
  3681  00277A  0008               	tblrd		*
  3682  00277C  50F5               	movf	tablat,w,c
  3683  00277E  0A73               	xorlw	115
  3684  002780  A4D8               	btfss	status,2,c
  3685  002782  EFC5  F013         	goto	u11221
  3686  002786  EFC7  F013         	goto	u11220
  3687  00278A                     u11221:
  3688  00278A  EFF2  F013         	goto	l8352
  3689  00278E                     u11220:
  3690  00278E                     
  3691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  3692  00278E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3693  002792  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3694  002796  2ADE               	incf	postinc2,f,c
  3695  002798  0E00               	movlw	0
  3696  00279A  22DD               	addwfc	postdec2,f,c
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3699  00279C  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3700  0027A0  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3701  0027A4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3702  0027A8  0E02               	movlw	2
  3703  0027AA  26DE               	addwf	postinc2,f,c
  3704  0027AC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3705  0027B0  0E00               	movlw	0
  3706  0027B2  22DD               	addwfc	postdec2,f,c
  3707  0027B4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3708  0027B8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3709  0027BC  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  3710  0027C0  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  3711  0027C4                     
  3712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  3713  0027C4  C0A4  F013         	movff	vfpfcnvrt@fp,stoa@fp
  3714  0027C8  C0A5  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3715  0027CC  C0B2  F015         	movff	vfpfcnvrt@cp,stoa@s
  3716  0027D0  C0B3  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3717  0027D4  EC62  F021         	call	_stoa	;wreg free
  3718  0027D8  C013  F0A4         	movff	?_stoa,?_vfpfcnvrt
  3719  0027DC  C014  F0A5         	movff	?_stoa+1,?_vfpfcnvrt+1
  3720  0027E0  EF49  F014         	goto	l1687
  3721  0027E4                     l8352:
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3724  0027E4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3725  0027E8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3726  0027EC  CFDE FFF6          	movff	postinc2,tblptrl
  3727  0027F0  CFDD FFF7          	movff	postdec2,tblptrh
  3728  0027F4                     	if	0	;tblptru may be non-zero
  3729  0027F4                     	endif
  3730  0027F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3731  0027F4  0E00               	movlw	low (__mediumconst shr (0+16))
  3732  0027F6  6EF8               	movwf	tblptru,c
  3733  0027F8                     	endif
  3734  0027F8  0008               	tblrd		*
  3735  0027FA  50F5               	movf	tablat,w,c
  3736  0027FC  0A25               	xorlw	37
  3737  0027FE  A4D8               	btfss	status,2,c
  3738  002800  EF04  F014         	goto	u11231
  3739  002804  EF06  F014         	goto	u11230
  3740  002808                     u11231:
  3741  002808  EF1E  F014         	goto	l8362
  3742  00280C                     u11230:
  3743  00280C                     
  3744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3745  00280C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3746  002810  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3747  002814  2ADE               	incf	postinc2,f,c
  3748  002816  0E00               	movlw	0
  3749  002818  22DD               	addwfc	postdec2,f,c
  3750  00281A                     
  3751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3752  00281A  0E00               	movlw	0
  3753  00281C  6E0B               	movwf	(fputc@c+1)^0,c
  3754  00281E  0E25               	movlw	37
  3755  002820  6E0A               	movwf	fputc@c^0,c
  3756  002822  C0A4  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  3757  002826  C0A5  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3758  00282A  ECF0  F029         	call	_fputc	;wreg free
  3759  00282E                     l8358:
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3762  00282E  0E00               	movlw	0
  3763  002830  0100               	movlb	0	; () banked
  3764  002832  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3765  002834  0E01               	movlw	1
  3766  002836  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  3767  002838  EF49  F014         	goto	l1687
  3768  00283C                     l8362:
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3771  00283C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3772  002840  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3773  002844  2ADE               	incf	postinc2,f,c
  3774  002846  0E00               	movlw	0
  3775  002848  22DD               	addwfc	postdec2,f,c
  3776  00284A                     
  3777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3778  00284A  0E00               	movlw	0
  3779  00284C  0100               	movlb	0	; () banked
  3780  00284E  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3781  002850  0E00               	movlw	0
  3782  002852  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  3783  002854  EF49  F014         	goto	l1687
  3784  002858                     l8368:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3787  002858  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3788  00285C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3789  002860  CFDE FFF6          	movff	postinc2,tblptrl
  3790  002864  CFDD FFF7          	movff	postdec2,tblptrh
  3791  002868                     	if	0	;tblptru may be non-zero
  3792  002868                     	endif
  3793  002868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3794  002868  0E00               	movlw	low (__mediumconst shr (0+16))
  3795  00286A  6EF8               	movwf	tblptru,c
  3796  00286C                     	endif
  3797  00286C  0008               	tblrd		*
  3798  00286E  50F5               	movf	tablat,w,c
  3799  002870  6E0A               	movwf	fputc@c^0,c
  3800  002872  6A0B               	clrf	(fputc@c+1)^0,c
  3801  002874  C0A4  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  3802  002878  C0A5  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3803  00287C  ECF0  F029         	call	_fputc	;wreg free
  3804  002880                     
  3805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3806  002880  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3807  002884  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3808  002888  2ADE               	incf	postinc2,f,c
  3809  00288A  0E00               	movlw	0
  3810  00288C  22DD               	addwfc	postdec2,f,c
  3811  00288E  EF17  F014         	goto	l8358
  3812  002892                     l1687:
  3813  002892  0012               	return		;funcret
  3814  002894                     __end_of_vfpfcnvrt:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function _strncmp *****************
  3818 ;; Defined at:
  3819 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  _l              2    9[COMRAM] PTR const unsigned char 
  3822 ;;		 -> vfpfcnvrt@ct(3), 
  3823 ;;  _r              2   11[COMRAM] PTR const unsigned char 
  3824 ;;		 -> STR_30(3), 
  3825 ;;  n               2   13[COMRAM] unsigned int 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  r               2   18[COMRAM] PTR const unsigned char 
  3828 ;;		 -> STR_30(3), 
  3829 ;;  l               2   16[COMRAM] PTR const unsigned char 
  3830 ;;		 -> vfpfcnvrt@ct(3), 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2    9[COMRAM] int 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3840 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;Total ram usage:       11 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 7
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_vfpfcnvrt
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text13
  3855  00522A                     __ptext13:
  3856                           	callstack 0
  3857  00522A                     _strncmp:
  3858                           	callstack 18
  3859  00522A  C00A  F011         	movff	strncmp@_l,strncmp@l
  3860  00522E  C00B  F012         	movff	strncmp@_l+1,strncmp@l+1
  3861  005232  C00C  F013         	movff	strncmp@_r,strncmp@r
  3862  005236  C00D  F014         	movff	strncmp@_r+1,strncmp@r+1
  3863  00523A  060E               	decf	strncmp@n^0,f,c
  3864  00523C  A0D8               	btfss	status,0,c
  3865  00523E  060F               	decf	(strncmp@n+1)^0,f,c
  3866  005240  280E               	incf	strncmp@n^0,w,c
  3867  005242  E106               	bnz	u11001
  3868  005244  280F               	incf	(strncmp@n+1)^0,w,c
  3869  005246  A4D8               	btfss	status,2,c
  3870  005248  EF28  F029         	goto	u11001
  3871  00524C  EF2A  F029         	goto	u11000
  3872  005250                     u11001:
  3873  005250  EF37  F029         	goto	l8226
  3874  005254                     u11000:
  3875  005254  0E00               	movlw	0
  3876  005256  6E0B               	movwf	(?_strncmp+1)^0,c
  3877  005258  0E00               	movlw	0
  3878  00525A  6E0A               	movwf	?_strncmp^0,c
  3879  00525C  EF85  F029         	goto	l1824
  3880  005260                     l8224:
  3881  005260  4A11               	infsnz	strncmp@l^0,f,c
  3882  005262  2A12               	incf	(strncmp@l+1)^0,f,c
  3883  005264  4A13               	infsnz	strncmp@r^0,f,c
  3884  005266  2A14               	incf	(strncmp@r+1)^0,f,c
  3885  005268  060E               	decf	strncmp@n^0,f,c
  3886  00526A  A0D8               	btfss	status,0,c
  3887  00526C  060F               	decf	(strncmp@n+1)^0,f,c
  3888  00526E                     l8226:
  3889  00526E  C011  FFD9         	movff	strncmp@l,fsr2l
  3890  005272  C012  FFDA         	movff	strncmp@l+1,fsr2h
  3891  005276  50DF               	movf	indf2,w,c
  3892  005278  B4D8               	btfsc	status,2,c
  3893  00527A  EF41  F029         	goto	u11011
  3894  00527E  EF43  F029         	goto	u11010
  3895  005282                     u11011:
  3896  005282  EF72  F029         	goto	l8234
  3897  005286                     u11010:
  3898  005286  C013  FFF6         	movff	strncmp@r,tblptrl
  3899  00528A  C014  FFF7         	movff	strncmp@r+1,tblptrh
  3900  00528E                     	if	0	;tblptru may be non-zero
  3901  00528E                     	endif
  3902  00528E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3903  00528E  0E00               	movlw	low (__mediumconst shr (0+16))
  3904  005290  6EF8               	movwf	tblptru,c
  3905  005292                     	endif
  3906  005292  0008               	tblrd		*
  3907  005294  50F5               	movf	tablat,w,c
  3908  005296  0900               	iorlw	0
  3909  005298  B4D8               	btfsc	status,2,c
  3910  00529A  EF51  F029         	goto	u11021
  3911  00529E  EF53  F029         	goto	u11020
  3912  0052A2                     u11021:
  3913  0052A2  EF72  F029         	goto	l8234
  3914  0052A6                     u11020:
  3915  0052A6  500E               	movf	strncmp@n^0,w,c
  3916  0052A8  100F               	iorwf	(strncmp@n+1)^0,w,c
  3917  0052AA  B4D8               	btfsc	status,2,c
  3918  0052AC  EF5A  F029         	goto	u11031
  3919  0052B0  EF5C  F029         	goto	u11030
  3920  0052B4                     u11031:
  3921  0052B4  EF72  F029         	goto	l8234
  3922  0052B8                     u11030:
  3923  0052B8  C011  FFD9         	movff	strncmp@l,fsr2l
  3924  0052BC  C012  FFDA         	movff	strncmp@l+1,fsr2h
  3925  0052C0  50DF               	movf	indf2,w,c
  3926  0052C2  6E10               	movwf	??_strncmp^0,c
  3927  0052C4  C013  FFF6         	movff	strncmp@r,tblptrl
  3928  0052C8  C014  FFF7         	movff	strncmp@r+1,tblptrh
  3929  0052CC                     	if	0	;tblptru may be non-zero
  3930  0052CC                     	endif
  3931  0052CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3932  0052CC  0E00               	movlw	low (__mediumconst shr (0+16))
  3933  0052CE  6EF8               	movwf	tblptru,c
  3934  0052D0                     	endif
  3935  0052D0  0008               	tblrd		*
  3936  0052D2  50F5               	movf	tablat,w,c
  3937  0052D4  1810               	xorwf	??_strncmp^0,w,c
  3938  0052D6  B4D8               	btfsc	status,2,c
  3939  0052D8  EF70  F029         	goto	u11041
  3940  0052DC  EF72  F029         	goto	u11040
  3941  0052E0                     u11041:
  3942  0052E0  EF30  F029         	goto	l8224
  3943  0052E4                     u11040:
  3944  0052E4                     l8234:
  3945  0052E4  C011  FFD9         	movff	strncmp@l,fsr2l
  3946  0052E8  C012  FFDA         	movff	strncmp@l+1,fsr2h
  3947  0052EC  50DF               	movf	indf2,w,c
  3948  0052EE  6E10               	movwf	??_strncmp^0,c
  3949  0052F0  C013  FFF6         	movff	strncmp@r,tblptrl
  3950  0052F4  C014  FFF7         	movff	strncmp@r+1,tblptrh
  3951  0052F8                     	if	0	;tblptru may be non-zero
  3952  0052F8                     	endif
  3953  0052F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3954  0052F8  0E00               	movlw	low (__mediumconst shr (0+16))
  3955  0052FA  6EF8               	movwf	tblptru,c
  3956  0052FC                     	endif
  3957  0052FC  0008               	tblrd		*
  3958  0052FE  50F5               	movf	tablat,w,c
  3959  005300  5C10               	subwf	??_strncmp^0,w,c
  3960  005302  6E0A               	movwf	?_strncmp^0,c
  3961  005304  6A0B               	clrf	(?_strncmp+1)^0,c
  3962  005306  A0D8               	btfss	status,0,c
  3963  005308  060B               	decf	(?_strncmp+1)^0,f,c
  3964  00530A                     l1824:
  3965  00530A  0012               	return		;funcret
  3966  00530C                     __end_of_strncmp:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _stoa *****************
  3970 ;; Defined at:
  3971 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3974 ;;		 -> sprintf@f(6), 
  3975 ;;  s               2   20[COMRAM] PTR unsigned char 
  3976 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(5), 
  3977 ;;		 -> STR_12(7), STR_10(11), STR_8(6), STR_6(5), 
  3978 ;;		 -> STR_4(4), STR_2(7), 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  nuls            7   23[COMRAM] unsigned char [7]
  3981 ;;  l               2   38[COMRAM] int 
  3982 ;;  p               2   36[COMRAM] int 
  3983 ;;  cp              2   34[COMRAM] PTR unsigned char 
  3984 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_18(8), STR_16(6), 
  3985 ;;		 -> STR_14(5), STR_12(7), STR_10(11), STR_8(6), 
  3986 ;;		 -> STR_6(5), STR_4(4), STR_2(7), 
  3987 ;;  w               2   32[COMRAM] int 
  3988 ;;  i               2   30[COMRAM] int 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2   18[COMRAM] int 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;Total ram usage:       22 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 9
  4005 ;; This function calls:
  4006 ;;		_fputc
  4007 ;;		_strlen
  4008 ;; This function is called by:
  4009 ;;		_vfpfcnvrt
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text14
  4014  0042C4                     __ptext14:
  4015                           	callstack 0
  4016  0042C4                     _stoa:
  4017                           	callstack 16
  4018  0042C4                     
  4019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  4020  0042C4  EE21  F0D9         	lfsr	2,stoa@F1163
  4021  0042C8  EE10  F018         	lfsr	1,stoa@nuls
  4022  0042CC  0E06               	movlw	6
  4023  0042CE                     u10831:
  4024  0042CE  CFDB FFE3          	movff	plusw2,plusw1
  4025  0042D2  06E8               	decf	wreg,f,c
  4026  0042D4  E2FC               	bc	u10831
  4027  0042D6                     
  4028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  4029  0042D6  C015  F023         	movff	stoa@s,stoa@cp
  4030  0042DA  C016  F024         	movff	stoa@s+1,stoa@cp+1
  4031  0042DE                     
  4032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  4033  0042DE  5023               	movf	stoa@cp^0,w,c
  4034  0042E0  1024               	iorwf	(stoa@cp+1)^0,w,c
  4035  0042E2  A4D8               	btfss	status,2,c
  4036  0042E4  EF76  F021         	goto	u10841
  4037  0042E8  EF78  F021         	goto	u10840
  4038  0042EC                     u10841:
  4039  0042EC  EF7C  F021         	goto	l8142
  4040  0042F0                     u10840:
  4041  0042F0                     
  4042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  4043  0042F0  0E18               	movlw	low stoa@nuls
  4044  0042F2  6E23               	movwf	stoa@cp^0,c
  4045  0042F4  0E00               	movlw	high stoa@nuls
  4046  0042F6  6E24               	movwf	(stoa@cp+1)^0,c
  4047  0042F8                     l8142:
  4048                           
  4049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  4050  0042F8  C023  F00A         	movff	stoa@cp,strlen@s
  4051  0042FC  C024  F00B         	movff	stoa@cp+1,strlen@s+1
  4052  004300  ECCE  F02D         	call	_strlen	;wreg free
  4053  004304  C00A  F027         	movff	?_strlen,stoa@l
  4054  004308  C00B  F028         	movff	?_strlen+1,stoa@l+1
  4055  00430C                     
  4056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  4057  00430C  C04D  F025         	movff	_prec,stoa@p
  4058  004310  C04E  F026         	movff	_prec+1,stoa@p+1
  4059  004314                     
  4060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  4061  004314  BE26               	btfsc	(stoa@p+1)^0,7,c
  4062  004316  EF8F  F021         	goto	u10851
  4063  00431A  EF91  F021         	goto	u10850
  4064  00431E                     u10851:
  4065  00431E  EFA6  F021         	goto	l1654
  4066  004322                     u10850:
  4067  004322  5027               	movf	stoa@l^0,w,c
  4068  004324  5C25               	subwf	stoa@p^0,w,c
  4069  004326  5026               	movf	(stoa@p+1)^0,w,c
  4070  004328  0A80               	xorlw	128
  4071  00432A  6E17               	movwf	??_stoa^0,c
  4072  00432C  5028               	movf	(stoa@l+1)^0,w,c
  4073  00432E  0A80               	xorlw	128
  4074  004330  5817               	subwfb	??_stoa^0,w,c
  4075  004332  A0D8               	btfss	status,0,c
  4076  004334  EF9E  F021         	goto	u10861
  4077  004338  EFA0  F021         	goto	u10860
  4078  00433C                     u10861:
  4079  00433C  EFA2  F021         	goto	l1652
  4080  004340                     u10860:
  4081  004340  EFA6  F021         	goto	l1654
  4082  004344                     l1652:
  4083  004344  C025  F027         	movff	stoa@p,stoa@l
  4084  004348  C026  F028         	movff	stoa@p+1,stoa@l+1
  4085  00434C                     l1654:
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  4088  00434C  C027  F025         	movff	stoa@l,stoa@p
  4089  004350  C028  F026         	movff	stoa@l+1,stoa@p+1
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  4092  004354  C11E  F021         	movff	_width,stoa@w
  4093  004358  C11F  F022         	movff	_width+1,stoa@w+1
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  4096  00435C  B04F               	btfsc	_flags^0,0,c
  4097  00435E  EFB3  F021         	goto	u10871
  4098  004362  EFB5  F021         	goto	u10870
  4099  004366                     u10871:
  4100  004366  EFD2  F021         	goto	l8158
  4101  00436A                     u10870:
  4102  00436A  EFC3  F021         	goto	l8156
  4103  00436E                     l8152:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  4106  00436E  0E00               	movlw	0
  4107  004370  6E0B               	movwf	(fputc@c+1)^0,c
  4108  004372  0E20               	movlw	32
  4109  004374  6E0A               	movwf	fputc@c^0,c
  4110  004376  C013  F00C         	movff	stoa@fp,fputc@fp
  4111  00437A  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  4112  00437E  ECF0  F029         	call	_fputc	;wreg free
  4113  004382                     
  4114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  4115  004382  4A27               	infsnz	stoa@l^0,f,c
  4116  004384  2A28               	incf	(stoa@l+1)^0,f,c
  4117  004386                     l8156:
  4118                           
  4119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  4120  004386  5021               	movf	stoa@w^0,w,c
  4121  004388  5C27               	subwf	stoa@l^0,w,c
  4122  00438A  5028               	movf	(stoa@l+1)^0,w,c
  4123  00438C  0A80               	xorlw	128
  4124  00438E  6E17               	movwf	??_stoa^0,c
  4125  004390  5022               	movf	(stoa@w+1)^0,w,c
  4126  004392  0A80               	xorlw	128
  4127  004394  5817               	subwfb	??_stoa^0,w,c
  4128  004396  A0D8               	btfss	status,0,c
  4129  004398  EFD0  F021         	goto	u10881
  4130  00439C  EFD2  F021         	goto	u10880
  4131  0043A0                     u10881:
  4132  0043A0  EFB7  F021         	goto	l8152
  4133  0043A4                     u10880:
  4134  0043A4                     l8158:
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  4137  0043A4  0E00               	movlw	0
  4138  0043A6  6E20               	movwf	(stoa@i+1)^0,c
  4139  0043A8  0E00               	movlw	0
  4140  0043AA  6E1F               	movwf	stoa@i^0,c
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4143  0043AC  EFF7  F021         	goto	l8166
  4144  0043B0                     l8160:
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  4147  0043B0  C023  FFF6         	movff	stoa@cp,tblptrl
  4148  0043B4  C024  FFF7         	movff	stoa@cp+1,tblptrh
  4149  0043B8  0E00               	movlw	low (__smallconst shr (0+16))
  4150  0043BA  6EF8               	movwf	tblptru,c
  4151  0043BC  0E0D               	movlw	(high __ramtop+-1)
  4152  0043BE  64F7               	cpfsgt	tblptrh,c
  4153  0043C0  D003               	bra	u10897
  4154  0043C2  0008               	tblrd		*
  4155  0043C4  50F5               	movf	tablat,w,c
  4156  0043C6  D005               	bra	u10890
  4157  0043C8                     u10897:
  4158  0043C8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4159  0043CC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4160  0043D0  50E7               	movf	indf1,w,c
  4161  0043D2                     u10890:
  4162  0043D2  6E17               	movwf	??_stoa^0,c
  4163  0043D4  5017               	movf	??_stoa^0,w,c
  4164  0043D6  6E0A               	movwf	fputc@c^0,c
  4165  0043D8  6A0B               	clrf	(fputc@c+1)^0,c
  4166  0043DA  C013  F00C         	movff	stoa@fp,fputc@fp
  4167  0043DE  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  4168  0043E2  ECF0  F029         	call	_fputc	;wreg free
  4169  0043E6                     
  4170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  4171  0043E6  4A23               	infsnz	stoa@cp^0,f,c
  4172  0043E8  2A24               	incf	(stoa@cp+1)^0,f,c
  4173  0043EA                     
  4174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  4175  0043EA  4A1F               	infsnz	stoa@i^0,f,c
  4176  0043EC  2A20               	incf	(stoa@i+1)^0,f,c
  4177  0043EE                     l8166:
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4180  0043EE  5025               	movf	stoa@p^0,w,c
  4181  0043F0  5C1F               	subwf	stoa@i^0,w,c
  4182  0043F2  5020               	movf	(stoa@i+1)^0,w,c
  4183  0043F4  0A80               	xorlw	128
  4184  0043F6  6E17               	movwf	??_stoa^0,c
  4185  0043F8  5026               	movf	(stoa@p+1)^0,w,c
  4186  0043FA  0A80               	xorlw	128
  4187  0043FC  5817               	subwfb	??_stoa^0,w,c
  4188  0043FE  A0D8               	btfss	status,0,c
  4189  004400  EF04  F022         	goto	u10901
  4190  004404  EF06  F022         	goto	u10900
  4191  004408                     u10901:
  4192  004408  EFD8  F021         	goto	l8160
  4193  00440C                     u10900:
  4194  00440C                     
  4195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  4196  00440C  A04F               	btfss	_flags^0,0,c
  4197  00440E  EF0B  F022         	goto	u10911
  4198  004412  EF0D  F022         	goto	u10910
  4199  004416                     u10911:
  4200  004416  EF2A  F022         	goto	l1664
  4201  00441A                     u10910:
  4202  00441A  EF1B  F022         	goto	l8174
  4203  00441E                     l8170:
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  4206  00441E  0E00               	movlw	0
  4207  004420  6E0B               	movwf	(fputc@c+1)^0,c
  4208  004422  0E20               	movlw	32
  4209  004424  6E0A               	movwf	fputc@c^0,c
  4210  004426  C013  F00C         	movff	stoa@fp,fputc@fp
  4211  00442A  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  4212  00442E  ECF0  F029         	call	_fputc	;wreg free
  4213  004432                     
  4214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  4215  004432  4A27               	infsnz	stoa@l^0,f,c
  4216  004434  2A28               	incf	(stoa@l+1)^0,f,c
  4217  004436                     l8174:
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  4220  004436  5021               	movf	stoa@w^0,w,c
  4221  004438  5C27               	subwf	stoa@l^0,w,c
  4222  00443A  5028               	movf	(stoa@l+1)^0,w,c
  4223  00443C  0A80               	xorlw	128
  4224  00443E  6E17               	movwf	??_stoa^0,c
  4225  004440  5022               	movf	(stoa@w+1)^0,w,c
  4226  004442  0A80               	xorlw	128
  4227  004444  5817               	subwfb	??_stoa^0,w,c
  4228  004446  A0D8               	btfss	status,0,c
  4229  004448  EF28  F022         	goto	u10921
  4230  00444C  EF2A  F022         	goto	u10920
  4231  004450                     u10921:
  4232  004450  EF0F  F022         	goto	l8170
  4233  004454                     u10920:
  4234  004454                     l1664:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  4237  004454  C027  F013         	movff	stoa@l,?_stoa
  4238  004458  C028  F014         	movff	stoa@l+1,?_stoa+1
  4239  00445C  0012               	return		;funcret
  4240  00445E                     __end_of_stoa:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _efgtoa *****************
  4244 ;; Defined at:
  4245 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4248 ;;		 -> sprintf@f(6), 
  4249 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  4250 ;;  c               1    6[BANK0 ] unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  u               4   64[BANK0 ] unsigned char 
  4253 ;;  g               4   56[BANK0 ] unsigned char 
  4254 ;;  l               4   50[BANK0 ] unsigned char 
  4255 ;;  h               4   46[BANK0 ] unsigned char 
  4256 ;;  ou              4   32[BANK0 ] unsigned char 
  4257 ;;  n               2   62[BANK0 ] int 
  4258 ;;  e               2   60[BANK0 ] int 
  4259 ;;  i               2   54[BANK0 ] int 
  4260 ;;  w               2   42[BANK0 ] int 
  4261 ;;  p               2   40[BANK0 ] int 
  4262 ;;  sign            2   38[BANK0 ] int 
  4263 ;;  d               2   36[BANK0 ] int 
  4264 ;;  m               2   30[BANK0 ] int 
  4265 ;;  ne              2   28[BANK0 ] int 
  4266 ;;  pp              2   26[BANK0 ] int 
  4267 ;;  t               2   24[BANK0 ] int 
  4268 ;;  mode            1   45[BANK0 ] unsigned char 
  4269 ;;  nmode           1   44[BANK0 ] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    0[BANK0 ] int 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4279 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4283 ;;Total ram usage:       68 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 11
  4286 ;; This function calls:
  4287 ;;		___awdiv
  4288 ;;		___awmod
  4289 ;;		___fladd
  4290 ;;		___fldiv
  4291 ;;		___fleq
  4292 ;;		___flge
  4293 ;;		___flmul
  4294 ;;		___flneg
  4295 ;;		___flsub
  4296 ;;		___fltol
  4297 ;;		___fpclassifyf
  4298 ;;		_floorf
  4299 ;;		_isupper
  4300 ;;		_pad
  4301 ;;		_strcpy
  4302 ;;		_tolower
  4303 ;; This function is called by:
  4304 ;;		_vfpfcnvrt
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text15
  4309  000EB8                     __ptext15:
  4310                           	callstack 0
  4311  000EB8                     _efgtoa:
  4312                           	callstack 14
  4313  000EB8                     
  4314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4315  000EB8  0E00               	movlw	0
  4316  000EBA  0100               	movlb	0	; () banked
  4317  000EBC  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4318  000EBE  0E00               	movlw	0
  4319  000EC0  6F86               	movwf	efgtoa@sign& (0+255),b
  4320  000EC2                     
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4323  000EC2  C062  F098         	movff	efgtoa@f,efgtoa@g
  4324  000EC6  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  4325  000ECA  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  4326  000ECE  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  4327  000ED2                     
  4328                           ; BSR set to: 0
  4329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4330  000ED2  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4331  000ED4  EF70  F007         	goto	u10290
  4332  000ED8  EF6E  F007         	goto	u10291
  4333  000EDC                     u10291:
  4334  000EDC  EF86  F007         	goto	l7836
  4335  000EE0                     u10290:
  4336  000EE0                     
  4337                           ; BSR set to: 0
  4338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4339  000EE0  0E00               	movlw	0
  4340  000EE2  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4341  000EE4  0E01               	movlw	1
  4342  000EE6  6F86               	movwf	efgtoa@sign& (0+255),b
  4343  000EE8                     
  4344                           ; BSR set to: 0
  4345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4346  000EE8  C098  F00A         	movff	efgtoa@g,___flneg@f1
  4347  000EEC  C099  F00B         	movff	efgtoa@g+1,___flneg@f1+1
  4348  000EF0  C09A  F00C         	movff	efgtoa@g+2,___flneg@f1+2
  4349  000EF4  C09B  F00D         	movff	efgtoa@g+3,___flneg@f1+3
  4350  000EF8  EC3C  F030         	call	___flneg	;wreg free
  4351  000EFC  C00A  F098         	movff	?___flneg,efgtoa@g
  4352  000F00  C00B  F099         	movff	?___flneg+1,efgtoa@g+1
  4353  000F04  C00C  F09A         	movff	?___flneg+2,efgtoa@g+2
  4354  000F08  C00D  F09B         	movff	?___flneg+3,efgtoa@g+3
  4355  000F0C                     l7836:
  4356                           
  4357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4358  000F0C  0E00               	movlw	0
  4359  000F0E  0100               	movlb	0	; () banked
  4360  000F10  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  4361  000F12  0E00               	movlw	0
  4362  000F14  6F9E               	movwf	efgtoa@n& (0+255),b
  4363  000F16                     
  4364                           ; BSR set to: 0
  4365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4366  000F16  C11E  F08A         	movff	_width,efgtoa@w
  4367  000F1A  C11F  F08B         	movff	_width+1,efgtoa@w+1
  4368  000F1E                     
  4369                           ; BSR set to: 0
  4370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4371  000F1E  5186               	movf	efgtoa@sign& (0+255),w,b
  4372  000F20  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4373  000F22  A4D8               	btfss	status,2,c
  4374  000F24  EF96  F007         	goto	u10301
  4375  000F28  EF98  F007         	goto	u10300
  4376  000F2C                     u10301:
  4377  000F2C  EF9F  F007         	goto	l7844
  4378  000F30                     u10300:
  4379  000F30                     
  4380                           ; BSR set to: 0
  4381  000F30  A44F               	btfss	_flags^0,2,c
  4382  000F32  EF9D  F007         	goto	u10311
  4383  000F36  EF9F  F007         	goto	u10310
  4384  000F3A                     u10311:
  4385  000F3A  EFB9  F007         	goto	l7856
  4386  000F3E                     u10310:
  4387  000F3E                     l7844:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4391  000F3E  5186               	movf	efgtoa@sign& (0+255),w,b
  4392  000F40  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4393  000F42  A4D8               	btfss	status,2,c
  4394  000F44  EFA6  F007         	goto	u10321
  4395  000F48  EFA8  F007         	goto	u10320
  4396  000F4C                     u10321:
  4397  000F4C  EFAE  F007         	goto	l7848
  4398  000F50                     u10320:
  4399  000F50                     
  4400                           ; BSR set to: 0
  4401  000F50  0E00               	movlw	0
  4402  000F52  6F6D               	movwf	(_efgtoa$3128+1)& (0+255),b
  4403  000F54  0E2B               	movlw	43
  4404  000F56  6F6C               	movwf	_efgtoa$3128& (0+255),b
  4405  000F58  EFB2  F007         	goto	l7850
  4406  000F5C                     l7848:
  4407                           
  4408                           ; BSR set to: 0
  4409  000F5C  0E00               	movlw	0
  4410  000F5E  6F6D               	movwf	(_efgtoa$3128+1)& (0+255),b
  4411  000F60  0E2D               	movlw	45
  4412  000F62  6F6C               	movwf	_efgtoa$3128& (0+255),b
  4413  000F64                     l7850:
  4414                           
  4415                           ; BSR set to: 0
  4416  000F64  C06C  F12C         	movff	_efgtoa$3128,_dbuf
  4417  000F68                     
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4420  000F68  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  4421  000F6A  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  4422  000F6C                     
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4425  000F6C  078A               	decf	efgtoa@w& (0+255),f,b
  4426  000F6E  A0D8               	btfss	status,0,c
  4427  000F70  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  4428  000F72                     l7856:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4432  000F72  C098  F00A         	movff	efgtoa@g,___fpclassifyf@x
  4433  000F76  C099  F00B         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4434  000F7A  C09A  F00C         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4435  000F7E  C09B  F00D         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4436  000F82  EC96  F028         	call	___fpclassifyf	;wreg free
  4437  000F86  040A               	decf	?___fpclassifyf^0,w,c
  4438  000F88  100B               	iorwf	(?___fpclassifyf+1)^0,w,c
  4439  000F8A  A4D8               	btfss	status,2,c
  4440  000F8C  EFCA  F007         	goto	u10331
  4441  000F90  EFCC  F007         	goto	u10330
  4442  000F94                     u10331:
  4443  000F94  EF23  F008         	goto	l7874
  4444  000F98                     u10330:
  4445  000F98  0EBF               	movlw	191
  4446  000F9A  0100               	movlb	0	; () banked
  4447  000F9C  6F67               	movwf	??_efgtoa& (0+255),b
  4448  000F9E  0EFF               	movlw	255
  4449  000FA0  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4450  000FA2  5166               	movf	efgtoa@c& (0+255),w,b
  4451  000FA4  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4452  000FA6  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4453  000FA8  5167               	movf	??_efgtoa& (0+255),w,b
  4454  000FAA  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4455  000FAC  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4456  000FAE  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4457  000FB0  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4458  000FB2  E10A               	bnz	u10340
  4459  000FB4  0E1A               	movlw	26
  4460  000FB6  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4461  000FB8  A0D8               	btfss	status,0,c
  4462  000FBA  EFE1  F007         	goto	u10341
  4463  000FBE  EFE4  F007         	goto	u10340
  4464  000FC2                     u10341:
  4465  000FC2  0E01               	movlw	1
  4466  000FC4  EFE5  F007         	goto	u10350
  4467  000FC8                     u10340:
  4468  000FC8  0E00               	movlw	0
  4469  000FCA                     u10350:
  4470  000FCA  6F6E               	movwf	_efgtoa$3129& (0+255),b
  4471  000FCC  6B6F               	clrf	(_efgtoa$3129+1)& (0+255),b
  4472  000FCE                     
  4473                           ; BSR set to: 0
  4474  000FCE  516E               	movf	_efgtoa$3129& (0+255),w,b
  4475  000FD0  116F               	iorwf	(_efgtoa$3129+1)& (0+255),w,b
  4476  000FD2  B4D8               	btfsc	status,2,c
  4477  000FD4  EFEE  F007         	goto	u10361
  4478  000FD8  EFF0  F007         	goto	u10360
  4479  000FDC                     u10361:
  4480  000FDC  EFFE  F007         	goto	l7866
  4481  000FE0                     u10360:
  4482  000FE0                     
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4485  000FE0  0E2C               	movlw	low _dbuf
  4486  000FE2  259E               	addwf	efgtoa@n& (0+255),w,b
  4487  000FE4  6E0A               	movwf	strcpy@dest^0,c
  4488  000FE6  0E01               	movlw	high _dbuf
  4489  000FE8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4490  000FEA  6E0B               	movwf	(strcpy@dest+1)^0,c
  4491  000FEC  0E9F               	movlw	low STR_20
  4492  000FEE  6E0C               	movwf	strcpy@src^0,c
  4493  000FF0  0E0E               	movlw	high STR_20
  4494  000FF2  6E0D               	movwf	(strcpy@src+1)^0,c
  4495  000FF4  ECF3  F02C         	call	_strcpy	;wreg free
  4496                           
  4497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4498  000FF8  EF0A  F008         	goto	l7868
  4499  000FFC                     l7866:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4503  000FFC  0E2C               	movlw	low _dbuf
  4504  000FFE  259E               	addwf	efgtoa@n& (0+255),w,b
  4505  001000  6E0A               	movwf	strcpy@dest^0,c
  4506  001002  0E01               	movlw	high _dbuf
  4507  001004  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4508  001006  6E0B               	movwf	(strcpy@dest+1)^0,c
  4509  001008  0EA7               	movlw	low STR_21
  4510  00100A  6E0C               	movwf	strcpy@src^0,c
  4511  00100C  0E0E               	movlw	high STR_21
  4512  00100E  6E0D               	movwf	(strcpy@src+1)^0,c
  4513  001010  ECF3  F02C         	call	_strcpy	;wreg free
  4514  001014                     l7868:
  4515                           
  4516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4517  001014  0100               	movlb	0	; () banked
  4518  001016  0EFD               	movlw	253
  4519  001018  278A               	addwf	efgtoa@w& (0+255),f,b
  4520  00101A  0EFF               	movlw	255
  4521  00101C  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4522  00101E                     l7870:
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4525  00101E  C060  F01A         	movff	efgtoa@fp,pad@fp
  4526  001022  C061  F01B         	movff	efgtoa@fp+1,pad@fp+1
  4527  001026  0E2C               	movlw	low _dbuf
  4528  001028  6E1C               	movwf	pad@buf^0,c
  4529  00102A  0E01               	movlw	high _dbuf
  4530  00102C  6E1D               	movwf	(pad@buf+1)^0,c
  4531  00102E  C08A  F01E         	movff	efgtoa@w,pad@p
  4532  001032  C08B  F01F         	movff	efgtoa@w+1,pad@p+1
  4533  001036  ECB7  F02A         	call	_pad	;wreg free
  4534  00103A  C01A  F060         	movff	?_pad,?_efgtoa
  4535  00103E  C01B  F061         	movff	?_pad+1,?_efgtoa+1
  4536  001042  EF88  F00D         	goto	l1570
  4537  001046                     l7874:
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4540  001046  C098  F00A         	movff	efgtoa@g,___fpclassifyf@x
  4541  00104A  C099  F00B         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4542  00104E  C09A  F00C         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4543  001052  C09B  F00D         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4544  001056  EC96  F028         	call	___fpclassifyf	;wreg free
  4545  00105A  500A               	movf	?___fpclassifyf^0,w,c
  4546  00105C  100B               	iorwf	(?___fpclassifyf+1)^0,w,c
  4547  00105E  A4D8               	btfss	status,2,c
  4548  001060  EF34  F008         	goto	u10371
  4549  001064  EF36  F008         	goto	u10370
  4550  001068                     u10371:
  4551  001068  EF76  F008         	goto	l7892
  4552  00106C                     u10370:
  4553  00106C  0EBF               	movlw	191
  4554  00106E  0100               	movlb	0	; () banked
  4555  001070  6F67               	movwf	??_efgtoa& (0+255),b
  4556  001072  0EFF               	movlw	255
  4557  001074  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4558  001076  5166               	movf	efgtoa@c& (0+255),w,b
  4559  001078  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4560  00107A  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4561  00107C  5167               	movf	??_efgtoa& (0+255),w,b
  4562  00107E  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4563  001080  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4564  001082  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4565  001084  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4566  001086  E10A               	bnz	u10380
  4567  001088  0E1A               	movlw	26
  4568  00108A  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4569  00108C  A0D8               	btfss	status,0,c
  4570  00108E  EF4B  F008         	goto	u10381
  4571  001092  EF4E  F008         	goto	u10380
  4572  001096                     u10381:
  4573  001096  0E01               	movlw	1
  4574  001098  EF4F  F008         	goto	u10390
  4575  00109C                     u10380:
  4576  00109C  0E00               	movlw	0
  4577  00109E                     u10390:
  4578  00109E  6F70               	movwf	_efgtoa$3133& (0+255),b
  4579  0010A0  6B71               	clrf	(_efgtoa$3133+1)& (0+255),b
  4580  0010A2                     
  4581                           ; BSR set to: 0
  4582  0010A2  5170               	movf	_efgtoa$3133& (0+255),w,b
  4583  0010A4  1171               	iorwf	(_efgtoa$3133+1)& (0+255),w,b
  4584  0010A6  B4D8               	btfsc	status,2,c
  4585  0010A8  EF58  F008         	goto	u10401
  4586  0010AC  EF5A  F008         	goto	u10400
  4587  0010B0                     u10401:
  4588  0010B0  EF68  F008         	goto	l7884
  4589  0010B4                     u10400:
  4590  0010B4                     
  4591                           ; BSR set to: 0
  4592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4593  0010B4  0E2C               	movlw	low _dbuf
  4594  0010B6  259E               	addwf	efgtoa@n& (0+255),w,b
  4595  0010B8  6E0A               	movwf	strcpy@dest^0,c
  4596  0010BA  0E01               	movlw	high _dbuf
  4597  0010BC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4598  0010BE  6E0B               	movwf	(strcpy@dest+1)^0,c
  4599  0010C0  0EA3               	movlw	low STR_24
  4600  0010C2  6E0C               	movwf	strcpy@src^0,c
  4601  0010C4  0E0E               	movlw	high STR_24
  4602  0010C6  6E0D               	movwf	(strcpy@src+1)^0,c
  4603  0010C8  ECF3  F02C         	call	_strcpy	;wreg free
  4604                           
  4605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4606  0010CC  EF0A  F008         	goto	l7868
  4607  0010D0                     l7884:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4611  0010D0  0E2C               	movlw	low _dbuf
  4612  0010D2  259E               	addwf	efgtoa@n& (0+255),w,b
  4613  0010D4  6E0A               	movwf	strcpy@dest^0,c
  4614  0010D6  0E01               	movlw	high _dbuf
  4615  0010D8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4616  0010DA  6E0B               	movwf	(strcpy@dest+1)^0,c
  4617  0010DC  0EAB               	movlw	low STR_25
  4618  0010DE  6E0C               	movwf	strcpy@src^0,c
  4619  0010E0  0E0E               	movlw	high STR_25
  4620  0010E2  6E0D               	movwf	(strcpy@src+1)^0,c
  4621  0010E4  ECF3  F02C         	call	_strcpy	;wreg free
  4622  0010E8  EF0A  F008         	goto	l7868
  4623  0010EC                     l7892:
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4626  0010EC  0E00               	movlw	0
  4627  0010EE  0100               	movlb	0	; () banked
  4628  0010F0  6FA0               	movwf	efgtoa@u& (0+255),b
  4629  0010F2  0E00               	movlw	0
  4630  0010F4  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  4631  0010F6  0E80               	movlw	128
  4632  0010F8  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  4633  0010FA  0E3F               	movlw	63
  4634  0010FC  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  4635                           
  4636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4637  0010FE  0E00               	movlw	0
  4638  001100  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  4639  001102  0E00               	movlw	0
  4640  001104  6F9C               	movwf	efgtoa@e& (0+255),b
  4641  001106                     
  4642                           ; BSR set to: 0
  4643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4644  001106  C098  F00A         	movff	efgtoa@g,___fleq@ff1
  4645  00110A  C099  F00B         	movff	efgtoa@g+1,___fleq@ff1+1
  4646  00110E  C09A  F00C         	movff	efgtoa@g+2,___fleq@ff1+2
  4647  001112  C09B  F00D         	movff	efgtoa@g+3,___fleq@ff1+3
  4648  001116  0E00               	movlw	0
  4649  001118  6E0E               	movwf	___fleq@ff2^0,c
  4650  00111A  0E00               	movlw	0
  4651  00111C  6E0F               	movwf	(___fleq@ff2+1)^0,c
  4652  00111E  0E00               	movlw	0
  4653  001120  6E10               	movwf	(___fleq@ff2+2)^0,c
  4654  001122  0E00               	movlw	0
  4655  001124  6E11               	movwf	(___fleq@ff2+3)^0,c
  4656  001126  EC70  F02B         	call	___fleq	;wreg free
  4657  00112A  B0D8               	btfsc	status,0,c
  4658  00112C  EF9A  F008         	goto	u10411
  4659  001130  EF9C  F008         	goto	u10410
  4660  001134                     u10411:
  4661  001134  EF1F  F009         	goto	l7910
  4662  001138                     u10410:
  4663  001138  EFBB  F008         	goto	l7902
  4664  00113C                     l7898:
  4665                           
  4666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4667  00113C  C0A0  F018         	movff	efgtoa@u,___flmul@b
  4668  001140  C0A1  F019         	movff	efgtoa@u+1,___flmul@b+1
  4669  001144  C0A2  F01A         	movff	efgtoa@u+2,___flmul@b+2
  4670  001148  C0A3  F01B         	movff	efgtoa@u+3,___flmul@b+3
  4671  00114C  0E00               	movlw	0
  4672  00114E  6E1C               	movwf	___flmul@a^0,c
  4673  001150  0E00               	movlw	0
  4674  001152  6E1D               	movwf	(___flmul@a+1)^0,c
  4675  001154  0E20               	movlw	32
  4676  001156  6E1E               	movwf	(___flmul@a+2)^0,c
  4677  001158  0E41               	movlw	65
  4678  00115A  6E1F               	movwf	(___flmul@a+3)^0,c
  4679  00115C  ECAA  F016         	call	___flmul	;wreg free
  4680  001160  C018  F0A0         	movff	?___flmul,efgtoa@u
  4681  001164  C019  F0A1         	movff	?___flmul+1,efgtoa@u+1
  4682  001168  C01A  F0A2         	movff	?___flmul+2,efgtoa@u+2
  4683  00116C  C01B  F0A3         	movff	?___flmul+3,efgtoa@u+3
  4684  001170                     
  4685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4686  001170  0100               	movlb	0	; () banked
  4687  001172  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  4688  001174  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  4689  001176                     l7902:
  4690                           
  4691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4692  001176  C098  F031         	movff	efgtoa@g,___flge@ff1
  4693  00117A  C099  F032         	movff	efgtoa@g+1,___flge@ff1+1
  4694  00117E  C09A  F033         	movff	efgtoa@g+2,___flge@ff1+2
  4695  001182  C09B  F034         	movff	efgtoa@g+3,___flge@ff1+3
  4696  001186  0E00               	movlw	0
  4697  001188  6E1C               	movwf	___flmul@a^0,c
  4698  00118A  0E00               	movlw	0
  4699  00118C  6E1D               	movwf	(___flmul@a+1)^0,c
  4700  00118E  0E20               	movlw	32
  4701  001190  6E1E               	movwf	(___flmul@a+2)^0,c
  4702  001192  0E41               	movlw	65
  4703  001194  6E1F               	movwf	(___flmul@a+3)^0,c
  4704  001196  C0A0  F018         	movff	efgtoa@u,___flmul@b
  4705  00119A  C0A1  F019         	movff	efgtoa@u+1,___flmul@b+1
  4706  00119E  C0A2  F01A         	movff	efgtoa@u+2,___flmul@b+2
  4707  0011A2  C0A3  F01B         	movff	efgtoa@u+3,___flmul@b+3
  4708  0011A6  ECAA  F016         	call	___flmul	;wreg free
  4709  0011AA  C018  F035         	movff	?___flmul,___flge@ff2
  4710  0011AE  C019  F036         	movff	?___flmul+1,___flge@ff2+1
  4711  0011B2  C01A  F037         	movff	?___flmul+2,___flge@ff2+2
  4712  0011B6  C01B  F038         	movff	?___flmul+3,___flge@ff2+3
  4713  0011BA  EC14  F028         	call	___flge	;wreg free
  4714  0011BE  B0D8               	btfsc	status,0,c
  4715  0011C0  EFE4  F008         	goto	u10421
  4716  0011C4  EFE6  F008         	goto	u10420
  4717  0011C8                     u10421:
  4718  0011C8  EF9E  F008         	goto	l7898
  4719  0011CC                     u10420:
  4720  0011CC  EF06  F009         	goto	l7908
  4721  0011D0                     l7904:
  4722                           
  4723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4724  0011D0  C0A0  F018         	movff	efgtoa@u,___fldiv@b
  4725  0011D4  C0A1  F019         	movff	efgtoa@u+1,___fldiv@b+1
  4726  0011D8  C0A2  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  4727  0011DC  C0A3  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  4728  0011E0  0E00               	movlw	0
  4729  0011E2  6E1C               	movwf	___fldiv@a^0,c
  4730  0011E4  0E00               	movlw	0
  4731  0011E6  6E1D               	movwf	(___fldiv@a+1)^0,c
  4732  0011E8  0E20               	movlw	32
  4733  0011EA  6E1E               	movwf	(___fldiv@a+2)^0,c
  4734  0011EC  0E41               	movlw	65
  4735  0011EE  6E1F               	movwf	(___fldiv@a+3)^0,c
  4736  0011F0  ECBF  F018         	call	___fldiv	;wreg free
  4737  0011F4  C018  F0A0         	movff	?___fldiv,efgtoa@u
  4738  0011F8  C019  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  4739  0011FC  C01A  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  4740  001200  C01B  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  4741  001204                     
  4742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4743  001204  0100               	movlb	0	; () banked
  4744  001206  079C               	decf	efgtoa@e& (0+255),f,b
  4745  001208  A0D8               	btfss	status,0,c
  4746  00120A  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  4747  00120C                     l7908:
  4748                           
  4749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4750  00120C  C098  F031         	movff	efgtoa@g,___flge@ff1
  4751  001210  C099  F032         	movff	efgtoa@g+1,___flge@ff1+1
  4752  001214  C09A  F033         	movff	efgtoa@g+2,___flge@ff1+2
  4753  001218  C09B  F034         	movff	efgtoa@g+3,___flge@ff1+3
  4754  00121C  C0A0  F035         	movff	efgtoa@u,___flge@ff2
  4755  001220  C0A1  F036         	movff	efgtoa@u+1,___flge@ff2+1
  4756  001224  C0A2  F037         	movff	efgtoa@u+2,___flge@ff2+2
  4757  001228  C0A3  F038         	movff	efgtoa@u+3,___flge@ff2+3
  4758  00122C  EC14  F028         	call	___flge	;wreg free
  4759  001230  A0D8               	btfss	status,0,c
  4760  001232  EF1D  F009         	goto	u10431
  4761  001236  EF1F  F009         	goto	u10430
  4762  00123A                     u10431:
  4763  00123A  EFE8  F008         	goto	l7904
  4764  00123E                     u10430:
  4765  00123E                     l7910:
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4768  00123E  C066  F010         	movff	efgtoa@c,tolower@c
  4769  001242  6A11               	clrf	(tolower@c+1)^0,c
  4770  001244  ECC3  F02C         	call	_tolower	;wreg free
  4771  001248  5010               	movf	?_tolower^0,w,c
  4772  00124A  0100               	movlb	0	; () banked
  4773  00124C  6F8D               	movwf	efgtoa@mode& (0+255),b
  4774  00124E                     
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4777  00124E  C08D  F08C         	movff	efgtoa@mode,efgtoa@nmode
  4778  001252                     
  4779                           ; BSR set to: 0
  4780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4781  001252  0E67               	movlw	103
  4782  001254  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4783  001256  A4D8               	btfss	status,2,c
  4784  001258  EF30  F009         	goto	u10441
  4785  00125C  EF32  F009         	goto	u10440
  4786  001260                     u10441:
  4787  001260  EF58  F009         	goto	l7924
  4788  001264                     u10440:
  4789  001264                     
  4790                           ; BSR set to: 0
  4791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4792  001264  504D               	movf	_prec^0,w,c
  4793  001266  104E               	iorwf	(_prec+1)^0,w,c
  4794  001268  A4D8               	btfss	status,2,c
  4795  00126A  EF39  F009         	goto	u10451
  4796  00126E  EF3B  F009         	goto	u10450
  4797  001272                     u10451:
  4798  001272  EF3F  F009         	goto	l7920
  4799  001276                     u10450:
  4800  001276                     
  4801                           ; BSR set to: 0
  4802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4803  001276  0E00               	movlw	0
  4804  001278  6E4E               	movwf	(_prec+1)^0,c
  4805  00127A  0E01               	movlw	1
  4806  00127C  6E4D               	movwf	_prec^0,c
  4807  00127E                     l7920:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4811  00127E  BE4E               	btfsc	(_prec+1)^0,7,c
  4812  001280  EF4C  F009         	goto	u10460
  4813  001284  504E               	movf	(_prec+1)^0,w,c
  4814  001286  E106               	bnz	u10461
  4815  001288  044D               	decf	_prec^0,w,c
  4816  00128A  B0D8               	btfsc	status,0,c
  4817  00128C  EF4A  F009         	goto	u10461
  4818  001290  EF4C  F009         	goto	u10460
  4819  001294                     u10461:
  4820  001294  EF52  F009         	goto	l1588
  4821  001298                     u10460:
  4822  001298                     l7922:
  4823                           
  4824                           ; BSR set to: 0
  4825  001298  0E00               	movlw	0
  4826  00129A  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  4827  00129C  0E06               	movlw	6
  4828  00129E  6F88               	movwf	efgtoa@p& (0+255),b
  4829  0012A0  EF61  F009         	goto	l7930
  4830  0012A4                     l1588:
  4831                           
  4832                           ; BSR set to: 0
  4833  0012A4  C04D  F088         	movff	_prec,efgtoa@p
  4834  0012A8  C04E  F089         	movff	_prec+1,efgtoa@p+1
  4835  0012AC  EF61  F009         	goto	l7930
  4836  0012B0                     l7924:
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4840  0012B0  BE4E               	btfsc	(_prec+1)^0,7,c
  4841  0012B2  EF5D  F009         	goto	u10471
  4842  0012B6  EF5F  F009         	goto	u10470
  4843  0012BA                     u10471:
  4844  0012BA  EF4C  F009         	goto	l7922
  4845  0012BE                     u10470:
  4846  0012BE  EF52  F009         	goto	l1588
  4847  0012C2                     l7930:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4851  0012C2  0E67               	movlw	103
  4852  0012C4  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4853  0012C6  A4D8               	btfss	status,2,c
  4854  0012C8  EF68  F009         	goto	u10481
  4855  0012CC  EF6A  F009         	goto	u10480
  4856  0012D0                     u10481:
  4857  0012D0  EF99  F009         	goto	l7940
  4858  0012D4                     u10480:
  4859  0012D4                     
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4862  0012D4  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  4863  0012D6  EF78  F009         	goto	u10490
  4864  0012DA  0EFC               	movlw	252
  4865  0012DC  5D9C               	subwf	efgtoa@e& (0+255),w,b
  4866  0012DE  0EFF               	movlw	255
  4867  0012E0  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4868  0012E2  A0D8               	btfss	status,0,c
  4869  0012E4  EF76  F009         	goto	u10491
  4870  0012E8  EF78  F009         	goto	u10490
  4871  0012EC                     u10491:
  4872  0012EC  EF97  F009         	goto	l7938
  4873  0012F0                     u10490:
  4874  0012F0                     
  4875                           ; BSR set to: 0
  4876  0012F0  0EFF               	movlw	255
  4877  0012F2  6F67               	movwf	??_efgtoa& (0+255),b
  4878  0012F4  0EFF               	movlw	255
  4879  0012F6  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4880  0012F8  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  4881  0012FC  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  4882  001300  5167               	movf	??_efgtoa& (0+255),w,b
  4883  001302  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4884  001304  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4885  001306  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4886  001308  519C               	movf	efgtoa@e& (0+255),w,b
  4887  00130A  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4888  00130C  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4889  00130E  0A80               	xorlw	128
  4890  001310  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  4891  001312  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  4892  001314  0A80               	xorlw	128
  4893  001316  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4894  001318  A0D8               	btfss	status,0,c
  4895  00131A  EF91  F009         	goto	u10501
  4896  00131E  EF93  F009         	goto	u10500
  4897  001322                     u10501:
  4898  001322  EF97  F009         	goto	l7938
  4899  001326                     u10500:
  4900  001326                     
  4901                           ; BSR set to: 0
  4902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4903  001326  0E66               	movlw	102
  4904  001328  6F8C               	movwf	efgtoa@nmode& (0+255),b
  4905                           
  4906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4907  00132A  EF99  F009         	goto	l7940
  4908  00132E                     l7938:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4912  00132E  0E65               	movlw	101
  4913  001330  6F8C               	movwf	efgtoa@nmode& (0+255),b
  4914  001332                     l7940:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4918  001332  C088  F07E         	movff	efgtoa@p,efgtoa@m
  4919  001336  C089  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  4920  00133A                     
  4921                           ; BSR set to: 0
  4922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4923  00133A  0E67               	movlw	103
  4924  00133C  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4925  00133E  A4D8               	btfss	status,2,c
  4926  001340  EFA4  F009         	goto	u10511
  4927  001344  EFA6  F009         	goto	u10510
  4928  001348                     u10511:
  4929  001348  EFB6  F009         	goto	l7948
  4930  00134C                     u10510:
  4931  00134C                     
  4932                           ; BSR set to: 0
  4933  00134C  0E66               	movlw	102
  4934  00134E  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  4935  001350  A4D8               	btfss	status,2,c
  4936  001352  EFAD  F009         	goto	u10521
  4937  001356  EFAF  F009         	goto	u10520
  4938  00135A                     u10521:
  4939  00135A  EFB8  F009         	goto	l7950
  4940  00135E                     u10520:
  4941  00135E                     
  4942                           ; BSR set to: 0
  4943  00135E  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4944  001360  EFB6  F009         	goto	u10530
  4945  001364  EFB4  F009         	goto	u10531
  4946  001368                     u10531:
  4947  001368  EFB8  F009         	goto	l7950
  4948  00136C                     u10530:
  4949  00136C                     l7948:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4953  00136C  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  4954  00136E  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  4955  001370                     l7950:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4959  001370  0E66               	movlw	102
  4960  001372  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  4961  001374  A4D8               	btfss	status,2,c
  4962  001376  EFBF  F009         	goto	u10541
  4963  00137A  EFC1  F009         	goto	u10540
  4964  00137E                     u10541:
  4965  00137E  EFE1  F009         	goto	l7960
  4966  001382                     u10540:
  4967  001382                     
  4968                           ; BSR set to: 0
  4969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4970  001382  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4971  001384  EFC8  F009         	goto	u10550
  4972  001388  EFC6  F009         	goto	u10551
  4973  00138C                     u10551:
  4974  00138C  EFD4  F009         	goto	l7956
  4975  001390                     u10550:
  4976  001390                     
  4977                           ; BSR set to: 0
  4978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4979  001390  0E00               	movlw	0
  4980  001392  6FA0               	movwf	efgtoa@u& (0+255),b
  4981  001394  0E00               	movlw	0
  4982  001396  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  4983  001398  0E80               	movlw	128
  4984  00139A  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  4985  00139C  0E3F               	movlw	63
  4986  00139E  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  4987                           
  4988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4989  0013A0  0E00               	movlw	0
  4990  0013A2  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  4991  0013A4  0E00               	movlw	0
  4992  0013A6  6F9C               	movwf	efgtoa@e& (0+255),b
  4993  0013A8                     l7956:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4997  0013A8  0E67               	movlw	103
  4998  0013AA  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4999  0013AC  B4D8               	btfsc	status,2,c
  5000  0013AE  EFDB  F009         	goto	u10561
  5001  0013B2  EFDD  F009         	goto	u10560
  5002  0013B6                     u10561:
  5003  0013B6  EFE1  F009         	goto	l7960
  5004  0013BA                     u10560:
  5005  0013BA                     
  5006                           ; BSR set to: 0
  5007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5008  0013BA  519C               	movf	efgtoa@e& (0+255),w,b
  5009  0013BC  277E               	addwf	efgtoa@m& (0+255),f,b
  5010  0013BE  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  5011  0013C0  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5012  0013C2                     l7960:
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5016  0013C2  0E00               	movlw	0
  5017  0013C4  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5018  0013C6  0E00               	movlw	0
  5019  0013C8  6F96               	movwf	efgtoa@i& (0+255),b
  5020  0013CA                     
  5021                           ; BSR set to: 0
  5022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5023  0013CA  C098  F08E         	movff	efgtoa@g,efgtoa@h
  5024  0013CE  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  5025  0013D2  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  5026  0013D6  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  5027  0013DA                     
  5028                           ; BSR set to: 0
  5029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5030  0013DA  C0A0  F080         	movff	efgtoa@u,efgtoa@ou
  5031  0013DE  C0A1  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  5032  0013E2  C0A2  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  5033  0013E6  C0A3  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5036  0013EA  EF72  F00A         	goto	l7974
  5037  0013EE                     l7966:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5041  0013EE  C08E  F018         	movff	efgtoa@h,___fldiv@b
  5042  0013F2  C08F  F019         	movff	efgtoa@h+1,___fldiv@b+1
  5043  0013F6  C090  F01A         	movff	efgtoa@h+2,___fldiv@b+2
  5044  0013FA  C091  F01B         	movff	efgtoa@h+3,___fldiv@b+3
  5045  0013FE  C0A0  F01C         	movff	efgtoa@u,___fldiv@a
  5046  001402  C0A1  F01D         	movff	efgtoa@u+1,___fldiv@a+1
  5047  001406  C0A2  F01E         	movff	efgtoa@u+2,___fldiv@a+2
  5048  00140A  C0A3  F01F         	movff	efgtoa@u+3,___fldiv@a+3
  5049  00140E  ECBF  F018         	call	___fldiv	;wreg free
  5050  001412  C018  F031         	movff	?___fldiv,floorf@x
  5051  001416  C019  F032         	movff	?___fldiv+1,floorf@x+1
  5052  00141A  C01A  F033         	movff	?___fldiv+2,floorf@x+2
  5053  00141E  C01B  F034         	movff	?___fldiv+3,floorf@x+3
  5054  001422  ECFB  F01B         	call	_floorf	;wreg free
  5055  001426  C031  F092         	movff	?_floorf,efgtoa@l
  5056  00142A  C032  F093         	movff	?_floorf+1,efgtoa@l+1
  5057  00142E  C033  F094         	movff	?_floorf+2,efgtoa@l+2
  5058  001432  C034  F095         	movff	?_floorf+3,efgtoa@l+3
  5059                           
  5060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5061  001436  C092  F00A         	movff	efgtoa@l,___fltol@f1
  5062  00143A  C093  F00B         	movff	efgtoa@l+1,___fltol@f1+1
  5063  00143E  C094  F00C         	movff	efgtoa@l+2,___fltol@f1+2
  5064  001442  C095  F00D         	movff	efgtoa@l+3,___fltol@f1+3
  5065  001446  EC91  F027         	call	___fltol	;wreg free
  5066  00144A  C00A  F084         	movff	?___fltol,efgtoa@d
  5067  00144E  C00B  F085         	movff	?___fltol+1,efgtoa@d+1
  5068  001452                     
  5069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5070  001452  C08E  F041         	movff	efgtoa@h,___flsub@b
  5071  001456  C08F  F042         	movff	efgtoa@h+1,___flsub@b+1
  5072  00145A  C090  F043         	movff	efgtoa@h+2,___flsub@b+2
  5073  00145E  C091  F044         	movff	efgtoa@h+3,___flsub@b+3
  5074  001462  C0A0  F01C         	movff	efgtoa@u,___flmul@a
  5075  001466  C0A1  F01D         	movff	efgtoa@u+1,___flmul@a+1
  5076  00146A  C0A2  F01E         	movff	efgtoa@u+2,___flmul@a+2
  5077  00146E  C0A3  F01F         	movff	efgtoa@u+3,___flmul@a+3
  5078  001472  C092  F018         	movff	efgtoa@l,___flmul@b
  5079  001476  C093  F019         	movff	efgtoa@l+1,___flmul@b+1
  5080  00147A  C094  F01A         	movff	efgtoa@l+2,___flmul@b+2
  5081  00147E  C095  F01B         	movff	efgtoa@l+3,___flmul@b+3
  5082  001482  ECAA  F016         	call	___flmul	;wreg free
  5083  001486  C018  F045         	movff	?___flmul,___flsub@a
  5084  00148A  C019  F046         	movff	?___flmul+1,___flsub@a+1
  5085  00148E  C01A  F047         	movff	?___flmul+2,___flsub@a+2
  5086  001492  C01B  F048         	movff	?___flmul+3,___flsub@a+3
  5087  001496  EC5C  F02F         	call	___flsub	;wreg free
  5088  00149A  C041  F08E         	movff	?___flsub,efgtoa@h
  5089  00149E  C042  F08F         	movff	?___flsub+1,efgtoa@h+1
  5090  0014A2  C043  F090         	movff	?___flsub+2,efgtoa@h+2
  5091  0014A6  C044  F091         	movff	?___flsub+3,efgtoa@h+3
  5092  0014AA                     
  5093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5094  0014AA  C0A0  F018         	movff	efgtoa@u,___fldiv@b
  5095  0014AE  C0A1  F019         	movff	efgtoa@u+1,___fldiv@b+1
  5096  0014B2  C0A2  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  5097  0014B6  C0A3  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  5098  0014BA  0E00               	movlw	0
  5099  0014BC  6E1C               	movwf	___fldiv@a^0,c
  5100  0014BE  0E00               	movlw	0
  5101  0014C0  6E1D               	movwf	(___fldiv@a+1)^0,c
  5102  0014C2  0E20               	movlw	32
  5103  0014C4  6E1E               	movwf	(___fldiv@a+2)^0,c
  5104  0014C6  0E41               	movlw	65
  5105  0014C8  6E1F               	movwf	(___fldiv@a+3)^0,c
  5106  0014CA  ECBF  F018         	call	___fldiv	;wreg free
  5107  0014CE  C018  F0A0         	movff	?___fldiv,efgtoa@u
  5108  0014D2  C019  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  5109  0014D6  C01A  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  5110  0014DA  C01B  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  5111  0014DE                     
  5112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5113  0014DE  0100               	movlb	0	; () banked
  5114  0014E0  4B96               	infsnz	efgtoa@i& (0+255),f,b
  5115  0014E2  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  5116  0014E4                     l7974:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5120  0014E4  517E               	movf	efgtoa@m& (0+255),w,b
  5121  0014E6  5D96               	subwf	efgtoa@i& (0+255),w,b
  5122  0014E8  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  5123  0014EA  0A80               	xorlw	128
  5124  0014EC  6F67               	movwf	??_efgtoa& (0+255),b
  5125  0014EE  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  5126  0014F0  0A80               	xorlw	128
  5127  0014F2  5967               	subwfb	??_efgtoa& (0+255),w,b
  5128  0014F4  A0D8               	btfss	status,0,c
  5129  0014F6  EF7F  F00A         	goto	u10571
  5130  0014FA  EF81  F00A         	goto	u10570
  5131  0014FE                     u10571:
  5132  0014FE  EFF7  F009         	goto	l7966
  5133  001502                     u10570:
  5134  001502                     
  5135                           ; BSR set to: 0
  5136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5137  001502  C0A0  F018         	movff	efgtoa@u,___flmul@b
  5138  001506  C0A1  F019         	movff	efgtoa@u+1,___flmul@b+1
  5139  00150A  C0A2  F01A         	movff	efgtoa@u+2,___flmul@b+2
  5140  00150E  C0A3  F01B         	movff	efgtoa@u+3,___flmul@b+3
  5141  001512  0E00               	movlw	0
  5142  001514  6E1C               	movwf	___flmul@a^0,c
  5143  001516  0E00               	movlw	0
  5144  001518  6E1D               	movwf	(___flmul@a+1)^0,c
  5145  00151A  0EA0               	movlw	160
  5146  00151C  6E1E               	movwf	(___flmul@a+2)^0,c
  5147  00151E  0E40               	movlw	64
  5148  001520  6E1F               	movwf	(___flmul@a+3)^0,c
  5149  001522  ECAA  F016         	call	___flmul	;wreg free
  5150  001526  C018  F092         	movff	?___flmul,efgtoa@l
  5151  00152A  C019  F093         	movff	?___flmul+1,efgtoa@l+1
  5152  00152E  C01A  F094         	movff	?___flmul+2,efgtoa@l+2
  5153  001532  C01B  F095         	movff	?___flmul+3,efgtoa@l+3
  5154  001536                     
  5155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5156  001536  C08E  F031         	movff	efgtoa@h,___flge@ff1
  5157  00153A  C08F  F032         	movff	efgtoa@h+1,___flge@ff1+1
  5158  00153E  C090  F033         	movff	efgtoa@h+2,___flge@ff1+2
  5159  001542  C091  F034         	movff	efgtoa@h+3,___flge@ff1+3
  5160  001546  C092  F035         	movff	efgtoa@l,___flge@ff2
  5161  00154A  C093  F036         	movff	efgtoa@l+1,___flge@ff2+1
  5162  00154E  C094  F037         	movff	efgtoa@l+2,___flge@ff2+2
  5163  001552  C095  F038         	movff	efgtoa@l+3,___flge@ff2+3
  5164  001556  EC14  F028         	call	___flge	;wreg free
  5165  00155A  B0D8               	btfsc	status,0,c
  5166  00155C  EFB2  F00A         	goto	u10581
  5167  001560  EFB4  F00A         	goto	u10580
  5168  001564                     u10581:
  5169  001564  EFBF  F00A         	goto	l7982
  5170  001568                     u10580:
  5171  001568                     
  5172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5173  001568  0E00               	movlw	0
  5174  00156A  0100               	movlb	0	; () banked
  5175  00156C  6F92               	movwf	efgtoa@l& (0+255),b
  5176  00156E  0E00               	movlw	0
  5177  001570  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  5178  001572  0E00               	movlw	0
  5179  001574  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  5180  001576  0E00               	movlw	0
  5181  001578  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  5182                           
  5183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5184  00157A  EFE8  F00A         	goto	l7988
  5185  00157E                     l7982:
  5186                           
  5187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5188  00157E  C08E  F00A         	movff	efgtoa@h,___fleq@ff1
  5189  001582  C08F  F00B         	movff	efgtoa@h+1,___fleq@ff1+1
  5190  001586  C090  F00C         	movff	efgtoa@h+2,___fleq@ff1+2
  5191  00158A  C091  F00D         	movff	efgtoa@h+3,___fleq@ff1+3
  5192  00158E  C092  F00E         	movff	efgtoa@l,___fleq@ff2
  5193  001592  C093  F00F         	movff	efgtoa@l+1,___fleq@ff2+1
  5194  001596  C094  F010         	movff	efgtoa@l+2,___fleq@ff2+2
  5195  00159A  C095  F011         	movff	efgtoa@l+3,___fleq@ff2+3
  5196  00159E  EC70  F02B         	call	___fleq	;wreg free
  5197  0015A2  A0D8               	btfss	status,0,c
  5198  0015A4  EFD6  F00A         	goto	u10591
  5199  0015A8  EFD8  F00A         	goto	u10590
  5200  0015AC                     u10591:
  5201  0015AC  EFE8  F00A         	goto	l7988
  5202  0015B0                     u10590:
  5203  0015B0  0100               	movlb	0	; () banked
  5204  0015B2  B184               	btfsc	efgtoa@d& (0+255),0,b
  5205  0015B4  EFDE  F00A         	goto	u10601
  5206  0015B8  EFE0  F00A         	goto	u10600
  5207  0015BC                     u10601:
  5208  0015BC  EFE8  F00A         	goto	l7988
  5209  0015C0                     u10600:
  5210  0015C0                     
  5211                           ; BSR set to: 0
  5212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5213  0015C0  0E00               	movlw	0
  5214  0015C2  6F92               	movwf	efgtoa@l& (0+255),b
  5215  0015C4  0E00               	movlw	0
  5216  0015C6  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  5217  0015C8  0E00               	movlw	0
  5218  0015CA  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  5219  0015CC  0E00               	movlw	0
  5220  0015CE  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  5221  0015D0                     l7988:
  5222                           
  5223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5224  0015D0  C098  F031         	movff	efgtoa@g,___fladd@b
  5225  0015D4  C099  F032         	movff	efgtoa@g+1,___fladd@b+1
  5226  0015D8  C09A  F033         	movff	efgtoa@g+2,___fladd@b+2
  5227  0015DC  C09B  F034         	movff	efgtoa@g+3,___fladd@b+3
  5228  0015E0  C092  F035         	movff	efgtoa@l,___fladd@a
  5229  0015E4  C093  F036         	movff	efgtoa@l+1,___fladd@a+1
  5230  0015E8  C094  F037         	movff	efgtoa@l+2,___fladd@a+2
  5231  0015EC  C095  F038         	movff	efgtoa@l+3,___fladd@a+3
  5232  0015F0  EC4A  F014         	call	___fladd	;wreg free
  5233  0015F4  C031  F08E         	movff	?___fladd,efgtoa@h
  5234  0015F8  C032  F08F         	movff	?___fladd+1,efgtoa@h+1
  5235  0015FC  C033  F090         	movff	?___fladd+2,efgtoa@h+2
  5236  001600  C034  F091         	movff	?___fladd+3,efgtoa@h+3
  5237  001604                     
  5238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5239  001604  C08E  F031         	movff	efgtoa@h,___flge@ff1
  5240  001608  C08F  F032         	movff	efgtoa@h+1,___flge@ff1+1
  5241  00160C  C090  F033         	movff	efgtoa@h+2,___flge@ff1+2
  5242  001610  C091  F034         	movff	efgtoa@h+3,___flge@ff1+3
  5243  001614  0E00               	movlw	0
  5244  001616  6E1C               	movwf	___flmul@a^0,c
  5245  001618  0E00               	movlw	0
  5246  00161A  6E1D               	movwf	(___flmul@a+1)^0,c
  5247  00161C  0E20               	movlw	32
  5248  00161E  6E1E               	movwf	(___flmul@a+2)^0,c
  5249  001620  0E41               	movlw	65
  5250  001622  6E1F               	movwf	(___flmul@a+3)^0,c
  5251  001624  C080  F018         	movff	efgtoa@ou,___flmul@b
  5252  001628  C081  F019         	movff	efgtoa@ou+1,___flmul@b+1
  5253  00162C  C082  F01A         	movff	efgtoa@ou+2,___flmul@b+2
  5254  001630  C083  F01B         	movff	efgtoa@ou+3,___flmul@b+3
  5255  001634  ECAA  F016         	call	___flmul	;wreg free
  5256  001638  C018  F035         	movff	?___flmul,___flge@ff2
  5257  00163C  C019  F036         	movff	?___flmul+1,___flge@ff2+1
  5258  001640  C01A  F037         	movff	?___flmul+2,___flge@ff2+2
  5259  001644  C01B  F038         	movff	?___flmul+3,___flge@ff2+3
  5260  001648  EC14  F028         	call	___flge	;wreg free
  5261  00164C  A0D8               	btfss	status,0,c
  5262  00164E  EF2B  F00B         	goto	u10611
  5263  001652  EF2D  F00B         	goto	u10610
  5264  001656                     u10611:
  5265  001656  EF56  F00B         	goto	l8000
  5266  00165A                     u10610:
  5267  00165A                     
  5268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5269  00165A  0100               	movlb	0	; () banked
  5270  00165C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  5271  00165E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  5272  001660                     
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5275  001660  C080  F018         	movff	efgtoa@ou,___flmul@b
  5276  001664  C081  F019         	movff	efgtoa@ou+1,___flmul@b+1
  5277  001668  C082  F01A         	movff	efgtoa@ou+2,___flmul@b+2
  5278  00166C  C083  F01B         	movff	efgtoa@ou+3,___flmul@b+3
  5279  001670  0E00               	movlw	0
  5280  001672  6E1C               	movwf	___flmul@a^0,c
  5281  001674  0E00               	movlw	0
  5282  001676  6E1D               	movwf	(___flmul@a+1)^0,c
  5283  001678  0E20               	movlw	32
  5284  00167A  6E1E               	movwf	(___flmul@a+2)^0,c
  5285  00167C  0E41               	movlw	65
  5286  00167E  6E1F               	movwf	(___flmul@a+3)^0,c
  5287  001680  ECAA  F016         	call	___flmul	;wreg free
  5288  001684  C018  F080         	movff	?___flmul,efgtoa@ou
  5289  001688  C019  F081         	movff	?___flmul+1,efgtoa@ou+1
  5290  00168C  C01A  F082         	movff	?___flmul+2,efgtoa@ou+2
  5291  001690  C01B  F083         	movff	?___flmul+3,efgtoa@ou+3
  5292  001694                     
  5293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5294  001694  0E66               	movlw	102
  5295  001696  0100               	movlb	0	; () banked
  5296  001698  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  5297  00169A  A4D8               	btfss	status,2,c
  5298  00169C  EF52  F00B         	goto	u10621
  5299  0016A0  EF54  F00B         	goto	u10620
  5300  0016A4                     u10621:
  5301  0016A4  EF56  F00B         	goto	l8000
  5302  0016A8                     u10620:
  5303  0016A8                     
  5304                           ; BSR set to: 0
  5305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5306  0016A8  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  5307  0016AA  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  5308  0016AC                     l8000:
  5309                           
  5310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5311  0016AC  C080  F0A0         	movff	efgtoa@ou,efgtoa@u
  5312  0016B0  C081  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  5313  0016B4  C082  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  5314  0016B8  C083  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  5315  0016BC                     
  5316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5317  0016BC  0E65               	movlw	101
  5318  0016BE  0100               	movlb	0	; () banked
  5319  0016C0  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  5320  0016C2  B4D8               	btfsc	status,2,c
  5321  0016C4  EF66  F00B         	goto	u10631
  5322  0016C8  EF68  F00B         	goto	u10630
  5323  0016CC                     u10631:
  5324  0016CC  EF6E  F00B         	goto	l8006
  5325  0016D0                     u10630:
  5326  0016D0                     
  5327                           ; BSR set to: 0
  5328  0016D0  C09C  F07C         	movff	efgtoa@e,efgtoa@ne
  5329  0016D4  C09D  F07D         	movff	efgtoa@e+1,efgtoa@ne+1
  5330  0016D8  EF72  F00B         	goto	l1616
  5331  0016DC                     l8006:
  5332                           
  5333                           ; BSR set to: 0
  5334  0016DC  0E00               	movlw	0
  5335  0016DE  6F7D               	movwf	(efgtoa@ne+1)& (0+255),b
  5336  0016E0  0E00               	movlw	0
  5337  0016E2  6F7C               	movwf	efgtoa@ne& (0+255),b
  5338  0016E4                     l1616:
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5342  0016E4  0E00               	movlw	0
  5343  0016E6  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  5344  0016E8  0E00               	movlw	0
  5345  0016EA  6F7A               	movwf	efgtoa@pp& (0+255),b
  5346                           
  5347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5348  0016EC  0E00               	movlw	0
  5349  0016EE  6F79               	movwf	(efgtoa@t+1)& (0+255),b
  5350  0016F0  0E00               	movlw	0
  5351  0016F2  6F78               	movwf	efgtoa@t& (0+255),b
  5352                           
  5353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5354  0016F4  0E00               	movlw	0
  5355  0016F6  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5356  0016F8  0E00               	movlw	0
  5357  0016FA  6F96               	movwf	efgtoa@i& (0+255),b
  5358                           
  5359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5360  0016FC  EF6E  F00C         	goto	l8056
  5361  001700                     l8008:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5365  001700  C08E  F018         	movff	efgtoa@h,___fldiv@b
  5366  001704  C08F  F019         	movff	efgtoa@h+1,___fldiv@b+1
  5367  001708  C090  F01A         	movff	efgtoa@h+2,___fldiv@b+2
  5368  00170C  C091  F01B         	movff	efgtoa@h+3,___fldiv@b+3
  5369  001710  C0A0  F01C         	movff	efgtoa@u,___fldiv@a
  5370  001714  C0A1  F01D         	movff	efgtoa@u+1,___fldiv@a+1
  5371  001718  C0A2  F01E         	movff	efgtoa@u+2,___fldiv@a+2
  5372  00171C  C0A3  F01F         	movff	efgtoa@u+3,___fldiv@a+3
  5373  001720  ECBF  F018         	call	___fldiv	;wreg free
  5374  001724  C018  F031         	movff	?___fldiv,floorf@x
  5375  001728  C019  F032         	movff	?___fldiv+1,floorf@x+1
  5376  00172C  C01A  F033         	movff	?___fldiv+2,floorf@x+2
  5377  001730  C01B  F034         	movff	?___fldiv+3,floorf@x+3
  5378  001734  ECFB  F01B         	call	_floorf	;wreg free
  5379  001738  C031  F092         	movff	?_floorf,efgtoa@l
  5380  00173C  C032  F093         	movff	?_floorf+1,efgtoa@l+1
  5381  001740  C033  F094         	movff	?_floorf+2,efgtoa@l+2
  5382  001744  C034  F095         	movff	?_floorf+3,efgtoa@l+3
  5383                           
  5384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5385  001748  C092  F00A         	movff	efgtoa@l,___fltol@f1
  5386  00174C  C093  F00B         	movff	efgtoa@l+1,___fltol@f1+1
  5387  001750  C094  F00C         	movff	efgtoa@l+2,___fltol@f1+2
  5388  001754  C095  F00D         	movff	efgtoa@l+3,___fltol@f1+3
  5389  001758  EC91  F027         	call	___fltol	;wreg free
  5390  00175C  C00A  F084         	movff	?___fltol,efgtoa@d
  5391  001760  C00B  F085         	movff	?___fltol+1,efgtoa@d+1
  5392  001764                     
  5393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5394  001764  B84F               	btfsc	_flags^0,4,c
  5395  001766  EFB7  F00B         	goto	u10641
  5396  00176A  EFB9  F00B         	goto	u10640
  5397  00176E                     u10641:
  5398  00176E  EFD7  F00B         	goto	l8020
  5399  001772                     u10640:
  5400  001772  0100               	movlb	0	; () banked
  5401  001774  5184               	movf	efgtoa@d& (0+255),w,b
  5402  001776  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5403  001778  A4D8               	btfss	status,2,c
  5404  00177A  EFC1  F00B         	goto	u10651
  5405  00177E  EFC3  F00B         	goto	u10650
  5406  001782                     u10651:
  5407  001782  EFD7  F00B         	goto	l8020
  5408  001786                     u10650:
  5409  001786                     
  5410                           ; BSR set to: 0
  5411  001786  0E67               	movlw	103
  5412  001788  198D               	xorwf	efgtoa@mode& (0+255),w,b
  5413  00178A  A4D8               	btfss	status,2,c
  5414  00178C  EFCA  F00B         	goto	u10661
  5415  001790  EFCC  F00B         	goto	u10660
  5416  001794                     u10661:
  5417  001794  EFD7  F00B         	goto	l8020
  5418  001798                     u10660:
  5419  001798                     
  5420                           ; BSR set to: 0
  5421  001798  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5422  00179A  EFD3  F00B         	goto	u10670
  5423  00179E  EFD1  F00B         	goto	u10671
  5424  0017A2                     u10671:
  5425  0017A2  EFD7  F00B         	goto	l8020
  5426  0017A6                     u10670:
  5427  0017A6                     
  5428                           ; BSR set to: 0
  5429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5430  0017A6  4B78               	infsnz	efgtoa@t& (0+255),f,b
  5431  0017A8  2B79               	incf	(efgtoa@t+1)& (0+255),f,b
  5432                           
  5433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5434  0017AA  EF22  F00C         	goto	l8048
  5435  0017AE                     l8020:
  5436                           
  5437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5438  0017AE  0100               	movlb	0	; () banked
  5439  0017B0  517A               	movf	efgtoa@pp& (0+255),w,b
  5440  0017B2  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5441  0017B4  A4D8               	btfss	status,2,c
  5442  0017B6  EFDF  F00B         	goto	u10681
  5443  0017BA  EFE1  F00B         	goto	u10680
  5444  0017BE                     u10681:
  5445  0017BE  EF0B  F00C         	goto	l8040
  5446  0017C2                     u10680:
  5447  0017C2                     
  5448                           ; BSR set to: 0
  5449  0017C2  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5450  0017C4  EFE8  F00B         	goto	u10690
  5451  0017C8  EFE6  F00B         	goto	u10691
  5452  0017CC                     u10691:
  5453  0017CC  EF0B  F00C         	goto	l8040
  5454  0017D0                     u10690:
  5455  0017D0                     
  5456                           ; BSR set to: 0
  5457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5458  0017D0  0E2C               	movlw	low _dbuf
  5459  0017D2  259E               	addwf	efgtoa@n& (0+255),w,b
  5460  0017D4  6ED9               	movwf	fsr2l,c
  5461  0017D6  0E01               	movlw	high _dbuf
  5462  0017D8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5463  0017DA  6EDA               	movwf	fsr2h,c
  5464  0017DC  0E2E               	movlw	46
  5465  0017DE  6EDF               	movwf	indf2,c
  5466  0017E0                     
  5467                           ; BSR set to: 0
  5468  0017E0  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5469  0017E2  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5470  0017E4                     
  5471                           ; BSR set to: 0
  5472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5473  0017E4  078A               	decf	efgtoa@w& (0+255),f,b
  5474  0017E6  A0D8               	btfss	status,0,c
  5475  0017E8  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5476  0017EA                     
  5477                           ; BSR set to: 0
  5478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5479  0017EA  0E00               	movlw	0
  5480  0017EC  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  5481  0017EE  0E01               	movlw	1
  5482  0017F0  6F7A               	movwf	efgtoa@pp& (0+255),b
  5483  0017F2  EF0B  F00C         	goto	l8040
  5484  0017F6                     l8032:
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5488  0017F6  0E2C               	movlw	low _dbuf
  5489  0017F8  259E               	addwf	efgtoa@n& (0+255),w,b
  5490  0017FA  6ED9               	movwf	fsr2l,c
  5491  0017FC  0E01               	movlw	high _dbuf
  5492  0017FE  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5493  001800  6EDA               	movwf	fsr2h,c
  5494  001802  0E30               	movlw	48
  5495  001804  6EDF               	movwf	indf2,c
  5496  001806                     
  5497                           ; BSR set to: 0
  5498  001806  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5499  001808  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5500  00180A                     
  5501                           ; BSR set to: 0
  5502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5503  00180A  078A               	decf	efgtoa@w& (0+255),f,b
  5504  00180C  A0D8               	btfss	status,0,c
  5505  00180E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5506  001810                     
  5507                           ; BSR set to: 0
  5508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5509  001810  0778               	decf	efgtoa@t& (0+255),f,b
  5510  001812  A0D8               	btfss	status,0,c
  5511  001814  0779               	decf	(efgtoa@t+1)& (0+255),f,b
  5512  001816                     l8040:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5516  001816  5178               	movf	efgtoa@t& (0+255),w,b
  5517  001818  1179               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5518  00181A  A4D8               	btfss	status,2,c
  5519  00181C  EF12  F00C         	goto	u10701
  5520  001820  EF14  F00C         	goto	u10700
  5521  001824                     u10701:
  5522  001824  EFFB  F00B         	goto	l8032
  5523  001828                     u10700:
  5524  001828                     
  5525                           ; BSR set to: 0
  5526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5527  001828  0E2C               	movlw	low _dbuf
  5528  00182A  259E               	addwf	efgtoa@n& (0+255),w,b
  5529  00182C  6ED9               	movwf	fsr2l,c
  5530  00182E  0E01               	movlw	high _dbuf
  5531  001830  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5532  001832  6EDA               	movwf	fsr2h,c
  5533  001834  5184               	movf	efgtoa@d& (0+255),w,b
  5534  001836  0F30               	addlw	48
  5535  001838  6EDF               	movwf	indf2,c
  5536  00183A                     
  5537                           ; BSR set to: 0
  5538  00183A  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5539  00183C  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5540  00183E                     
  5541                           ; BSR set to: 0
  5542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5543  00183E  078A               	decf	efgtoa@w& (0+255),f,b
  5544  001840  A0D8               	btfss	status,0,c
  5545  001842  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5546  001844                     l8048:
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5550  001844  C08E  F041         	movff	efgtoa@h,___flsub@b
  5551  001848  C08F  F042         	movff	efgtoa@h+1,___flsub@b+1
  5552  00184C  C090  F043         	movff	efgtoa@h+2,___flsub@b+2
  5553  001850  C091  F044         	movff	efgtoa@h+3,___flsub@b+3
  5554  001854  C0A0  F01C         	movff	efgtoa@u,___flmul@a
  5555  001858  C0A1  F01D         	movff	efgtoa@u+1,___flmul@a+1
  5556  00185C  C0A2  F01E         	movff	efgtoa@u+2,___flmul@a+2
  5557  001860  C0A3  F01F         	movff	efgtoa@u+3,___flmul@a+3
  5558  001864  C092  F018         	movff	efgtoa@l,___flmul@b
  5559  001868  C093  F019         	movff	efgtoa@l+1,___flmul@b+1
  5560  00186C  C094  F01A         	movff	efgtoa@l+2,___flmul@b+2
  5561  001870  C095  F01B         	movff	efgtoa@l+3,___flmul@b+3
  5562  001874  ECAA  F016         	call	___flmul	;wreg free
  5563  001878  C018  F045         	movff	?___flmul,___flsub@a
  5564  00187C  C019  F046         	movff	?___flmul+1,___flsub@a+1
  5565  001880  C01A  F047         	movff	?___flmul+2,___flsub@a+2
  5566  001884  C01B  F048         	movff	?___flmul+3,___flsub@a+3
  5567  001888  EC5C  F02F         	call	___flsub	;wreg free
  5568  00188C  C041  F08E         	movff	?___flsub,efgtoa@h
  5569  001890  C042  F08F         	movff	?___flsub+1,efgtoa@h+1
  5570  001894  C043  F090         	movff	?___flsub+2,efgtoa@h+2
  5571  001898  C044  F091         	movff	?___flsub+3,efgtoa@h+3
  5572  00189C                     
  5573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5574  00189C  C0A0  F018         	movff	efgtoa@u,___fldiv@b
  5575  0018A0  C0A1  F019         	movff	efgtoa@u+1,___fldiv@b+1
  5576  0018A4  C0A2  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  5577  0018A8  C0A3  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  5578  0018AC  0E00               	movlw	0
  5579  0018AE  6E1C               	movwf	___fldiv@a^0,c
  5580  0018B0  0E00               	movlw	0
  5581  0018B2  6E1D               	movwf	(___fldiv@a+1)^0,c
  5582  0018B4  0E20               	movlw	32
  5583  0018B6  6E1E               	movwf	(___fldiv@a+2)^0,c
  5584  0018B8  0E41               	movlw	65
  5585  0018BA  6E1F               	movwf	(___fldiv@a+3)^0,c
  5586  0018BC  ECBF  F018         	call	___fldiv	;wreg free
  5587  0018C0  C018  F0A0         	movff	?___fldiv,efgtoa@u
  5588  0018C4  C019  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  5589  0018C8  C01A  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  5590  0018CC  C01B  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  5591  0018D0                     
  5592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5593  0018D0  0100               	movlb	0	; () banked
  5594  0018D2  077C               	decf	efgtoa@ne& (0+255),f,b
  5595  0018D4  A0D8               	btfss	status,0,c
  5596  0018D6  077D               	decf	(efgtoa@ne+1)& (0+255),f,b
  5597  0018D8                     
  5598                           ; BSR set to: 0
  5599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5600  0018D8  4B96               	infsnz	efgtoa@i& (0+255),f,b
  5601  0018DA  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  5602  0018DC                     l8056:
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5606  0018DC  517E               	movf	efgtoa@m& (0+255),w,b
  5607  0018DE  5D96               	subwf	efgtoa@i& (0+255),w,b
  5608  0018E0  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  5609  0018E2  0A80               	xorlw	128
  5610  0018E4  6F67               	movwf	??_efgtoa& (0+255),b
  5611  0018E6  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  5612  0018E8  0A80               	xorlw	128
  5613  0018EA  5967               	subwfb	??_efgtoa& (0+255),w,b
  5614  0018EC  B0D8               	btfsc	status,0,c
  5615  0018EE  EF7B  F00C         	goto	u10711
  5616  0018F2  EF7D  F00C         	goto	u10710
  5617  0018F6                     u10711:
  5618  0018F6  EF8B  F00C         	goto	l8060
  5619  0018FA                     u10710:
  5620  0018FA                     
  5621                           ; BSR set to: 0
  5622  0018FA  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5623  0018FC  EF89  F00C         	goto	u10721
  5624  001900  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  5625  001902  E109               	bnz	u10720
  5626  001904  0E4B               	movlw	75
  5627  001906  5D9E               	subwf	efgtoa@n& (0+255),w,b
  5628  001908  A0D8               	btfss	status,0,c
  5629  00190A  EF89  F00C         	goto	u10721
  5630  00190E  EF8B  F00C         	goto	u10720
  5631  001912                     u10721:
  5632  001912  EF80  F00B         	goto	l8008
  5633  001916                     u10720:
  5634  001916                     l8060:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5638  001916  517A               	movf	efgtoa@pp& (0+255),w,b
  5639  001918  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5640  00191A  A4D8               	btfss	status,2,c
  5641  00191C  EF92  F00C         	goto	u10731
  5642  001920  EF94  F00C         	goto	u10730
  5643  001924                     u10731:
  5644  001924  EFA5  F00C         	goto	l8068
  5645  001928                     u10730:
  5646  001928                     
  5647                           ; BSR set to: 0
  5648  001928  A84F               	btfss	_flags^0,4,c
  5649  00192A  EF99  F00C         	goto	u10741
  5650  00192E  EF9B  F00C         	goto	u10740
  5651  001932                     u10741:
  5652  001932  EFA5  F00C         	goto	l8068
  5653  001936                     u10740:
  5654  001936                     
  5655                           ; BSR set to: 0
  5656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5657  001936  0E2C               	movlw	low _dbuf
  5658  001938  259E               	addwf	efgtoa@n& (0+255),w,b
  5659  00193A  6ED9               	movwf	fsr2l,c
  5660  00193C  0E01               	movlw	high _dbuf
  5661  00193E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5662  001940  6EDA               	movwf	fsr2h,c
  5663  001942  0E2E               	movlw	46
  5664  001944  6EDF               	movwf	indf2,c
  5665  001946                     
  5666                           ; BSR set to: 0
  5667  001946  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5668  001948  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5669  00194A                     l8068:
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5673  00194A  0E2C               	movlw	low _dbuf
  5674  00194C  259E               	addwf	efgtoa@n& (0+255),w,b
  5675  00194E  6ED9               	movwf	fsr2l,c
  5676  001950  0E01               	movlw	high _dbuf
  5677  001952  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5678  001954  6EDA               	movwf	fsr2h,c
  5679  001956  0E00               	movlw	0
  5680  001958  6EDF               	movwf	indf2,c
  5681  00195A                     
  5682                           ; BSR set to: 0
  5683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5684  00195A  0E65               	movlw	101
  5685  00195C  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  5686  00195E  A4D8               	btfss	status,2,c
  5687  001960  EFB4  F00C         	goto	u10751
  5688  001964  EFB6  F00C         	goto	u10750
  5689  001968                     u10751:
  5690  001968  EF0F  F008         	goto	l7870
  5691  00196C                     u10750:
  5692  00196C                     
  5693                           ; BSR set to: 0
  5694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5695  00196C  0E00               	movlw	0
  5696  00196E  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5697  001970  0E4F               	movlw	79
  5698  001972  6F96               	movwf	efgtoa@i& (0+255),b
  5699  001974                     
  5700                           ; BSR set to: 0
  5701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5702  001974  0E2C               	movlw	low _dbuf
  5703  001976  2596               	addwf	efgtoa@i& (0+255),w,b
  5704  001978  6ED9               	movwf	fsr2l,c
  5705  00197A  0E01               	movlw	high _dbuf
  5706  00197C  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5707  00197E  6EDA               	movwf	fsr2h,c
  5708  001980  0E00               	movlw	0
  5709  001982  6EDF               	movwf	indf2,c
  5710  001984                     
  5711                           ; BSR set to: 0
  5712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5713  001984  0E00               	movlw	0
  5714  001986  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5715  001988  0E00               	movlw	0
  5716  00198A  6F86               	movwf	efgtoa@sign& (0+255),b
  5717  00198C                     
  5718                           ; BSR set to: 0
  5719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5720  00198C  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5721  00198E  EFCD  F00C         	goto	u10760
  5722  001992  EFCB  F00C         	goto	u10761
  5723  001996                     u10761:
  5724  001996  EFD5  F00C         	goto	l8084
  5725  00199A                     u10760:
  5726  00199A                     
  5727                           ; BSR set to: 0
  5728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5729  00199A  0E00               	movlw	0
  5730  00199C  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5731  00199E  0E01               	movlw	1
  5732  0019A0  6F86               	movwf	efgtoa@sign& (0+255),b
  5733  0019A2                     
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5736  0019A2  6D9C               	negf	efgtoa@e& (0+255),b
  5737  0019A4  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  5738  0019A6  B0D8               	btfsc	status,0,c
  5739  0019A8  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  5740  0019AA                     l8084:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5744  0019AA  0E00               	movlw	0
  5745  0019AC  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  5746  0019AE  0E02               	movlw	2
  5747  0019B0  6F88               	movwf	efgtoa@p& (0+255),b
  5748                           
  5749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5750  0019B2  EF06  F00D         	goto	l8096
  5751  0019B6                     l8086:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5755  0019B6  0796               	decf	efgtoa@i& (0+255),f,b
  5756  0019B8  A0D8               	btfss	status,0,c
  5757  0019BA  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5758  0019BC                     
  5759                           ; BSR set to: 0
  5760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5761  0019BC  0E2C               	movlw	low _dbuf
  5762  0019BE  2596               	addwf	efgtoa@i& (0+255),w,b
  5763  0019C0  6ED9               	movwf	fsr2l,c
  5764  0019C2  0E01               	movlw	high _dbuf
  5765  0019C4  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5766  0019C6  6EDA               	movwf	fsr2h,c
  5767  0019C8  C09C  F00A         	movff	efgtoa@e,___awmod@dividend
  5768  0019CC  C09D  F00B         	movff	efgtoa@e+1,___awmod@dividend+1
  5769  0019D0  0E00               	movlw	0
  5770  0019D2  6E0D               	movwf	(___awmod@divisor+1)^0,c
  5771  0019D4  0E0A               	movlw	10
  5772  0019D6  6E0C               	movwf	___awmod@divisor^0,c
  5773  0019D8  EC18  F02B         	call	___awmod	;wreg free
  5774  0019DC  500A               	movf	?___awmod^0,w,c
  5775  0019DE  0F30               	addlw	48
  5776  0019E0  6EDF               	movwf	indf2,c
  5777  0019E2                     
  5778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5779  0019E2  C09C  F010         	movff	efgtoa@e,___awdiv@dividend
  5780  0019E6  C09D  F011         	movff	efgtoa@e+1,___awdiv@dividend+1
  5781  0019EA  0E00               	movlw	0
  5782  0019EC  6E13               	movwf	(___awdiv@divisor+1)^0,c
  5783  0019EE  0E0A               	movlw	10
  5784  0019F0  6E12               	movwf	___awdiv@divisor^0,c
  5785  0019F2  EC55  F02A         	call	___awdiv	;wreg free
  5786  0019F6  C010  F09C         	movff	?___awdiv,efgtoa@e
  5787  0019FA  C011  F09D         	movff	?___awdiv+1,efgtoa@e+1
  5788  0019FE                     
  5789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5790  0019FE  0100               	movlb	0	; () banked
  5791  001A00  0788               	decf	efgtoa@p& (0+255),f,b
  5792  001A02  A0D8               	btfss	status,0,c
  5793  001A04  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  5794  001A06                     
  5795                           ; BSR set to: 0
  5796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5797  001A06  078A               	decf	efgtoa@w& (0+255),f,b
  5798  001A08  A0D8               	btfss	status,0,c
  5799  001A0A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5800  001A0C                     l8096:
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5804  001A0C  519C               	movf	efgtoa@e& (0+255),w,b
  5805  001A0E  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5806  001A10  A4D8               	btfss	status,2,c
  5807  001A12  EF0D  F00D         	goto	u10771
  5808  001A16  EF0F  F00D         	goto	u10770
  5809  001A1A                     u10771:
  5810  001A1A  EFDB  F00C         	goto	l8086
  5811  001A1E                     u10770:
  5812  001A1E                     
  5813                           ; BSR set to: 0
  5814  001A1E  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5815  001A20  EF1C  F00D         	goto	u10780
  5816  001A24  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  5817  001A26  E106               	bnz	u10781
  5818  001A28  0588               	decf	efgtoa@p& (0+255),w,b
  5819  001A2A  B0D8               	btfsc	status,0,c
  5820  001A2C  EF1A  F00D         	goto	u10781
  5821  001A30  EF1C  F00D         	goto	u10780
  5822  001A34                     u10781:
  5823  001A34  EFDB  F00C         	goto	l8086
  5824  001A38                     u10780:
  5825  001A38                     
  5826                           ; BSR set to: 0
  5827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5828  001A38  0796               	decf	efgtoa@i& (0+255),f,b
  5829  001A3A  A0D8               	btfss	status,0,c
  5830  001A3C  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5831  001A3E                     
  5832                           ; BSR set to: 0
  5833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5834  001A3E  5186               	movf	efgtoa@sign& (0+255),w,b
  5835  001A40  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5836  001A42  A4D8               	btfss	status,2,c
  5837  001A44  EF26  F00D         	goto	u10791
  5838  001A48  EF28  F00D         	goto	u10790
  5839  001A4C                     u10791:
  5840  001A4C  EF2E  F00D         	goto	l8106
  5841  001A50                     u10790:
  5842  001A50                     
  5843                           ; BSR set to: 0
  5844  001A50  0E00               	movlw	0
  5845  001A52  6F73               	movwf	(_efgtoa$3137+1)& (0+255),b
  5846  001A54  0E2B               	movlw	43
  5847  001A56  6F72               	movwf	_efgtoa$3137& (0+255),b
  5848  001A58  EF32  F00D         	goto	l8108
  5849  001A5C                     l8106:
  5850                           
  5851                           ; BSR set to: 0
  5852  001A5C  0E00               	movlw	0
  5853  001A5E  6F73               	movwf	(_efgtoa$3137+1)& (0+255),b
  5854  001A60  0E2D               	movlw	45
  5855  001A62  6F72               	movwf	_efgtoa$3137& (0+255),b
  5856  001A64                     l8108:
  5857                           
  5858                           ; BSR set to: 0
  5859  001A64  0E2C               	movlw	low _dbuf
  5860  001A66  2596               	addwf	efgtoa@i& (0+255),w,b
  5861  001A68  6ED9               	movwf	fsr2l,c
  5862  001A6A  0E01               	movlw	high _dbuf
  5863  001A6C  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5864  001A6E  6EDA               	movwf	fsr2h,c
  5865  001A70  C072  FFDF         	movff	_efgtoa$3137,indf2
  5866  001A74                     
  5867                           ; BSR set to: 0
  5868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5869  001A74  078A               	decf	efgtoa@w& (0+255),f,b
  5870  001A76  A0D8               	btfss	status,0,c
  5871  001A78  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5872  001A7A                     
  5873                           ; BSR set to: 0
  5874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5875  001A7A  0796               	decf	efgtoa@i& (0+255),f,b
  5876  001A7C  A0D8               	btfss	status,0,c
  5877  001A7E  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5878  001A80                     
  5879                           ; BSR set to: 0
  5880  001A80  0EBF               	movlw	191
  5881  001A82  6F67               	movwf	??_efgtoa& (0+255),b
  5882  001A84  0EFF               	movlw	255
  5883  001A86  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  5884  001A88  5166               	movf	efgtoa@c& (0+255),w,b
  5885  001A8A  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  5886  001A8C  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  5887  001A8E  5167               	movf	??_efgtoa& (0+255),w,b
  5888  001A90  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  5889  001A92  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  5890  001A94  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5891  001A96  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  5892  001A98  E10A               	bnz	u10800
  5893  001A9A  0E1A               	movlw	26
  5894  001A9C  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  5895  001A9E  A0D8               	btfss	status,0,c
  5896  001AA0  EF54  F00D         	goto	u10801
  5897  001AA4  EF57  F00D         	goto	u10800
  5898  001AA8                     u10801:
  5899  001AA8  0E01               	movlw	1
  5900  001AAA  EF58  F00D         	goto	u10810
  5901  001AAE                     u10800:
  5902  001AAE  0E00               	movlw	0
  5903  001AB0                     u10810:
  5904  001AB0  6F76               	movwf	_efgtoa$3139& (0+255),b
  5905  001AB2  6B77               	clrf	(_efgtoa$3139+1)& (0+255),b
  5906  001AB4                     
  5907                           ; BSR set to: 0
  5908  001AB4  5176               	movf	_efgtoa$3139& (0+255),w,b
  5909  001AB6  1177               	iorwf	(_efgtoa$3139+1)& (0+255),w,b
  5910  001AB8  A4D8               	btfss	status,2,c
  5911  001ABA  EF61  F00D         	goto	u10821
  5912  001ABE  EF63  F00D         	goto	u10820
  5913  001AC2                     u10821:
  5914  001AC2  EF69  F00D         	goto	l8122
  5915  001AC6                     u10820:
  5916  001AC6                     
  5917                           ; BSR set to: 0
  5918  001AC6  0E00               	movlw	0
  5919  001AC8  6F75               	movwf	(_efgtoa$3138+1)& (0+255),b
  5920  001ACA  0E65               	movlw	101
  5921  001ACC  6F74               	movwf	_efgtoa$3138& (0+255),b
  5922  001ACE  EF6D  F00D         	goto	l8124
  5923  001AD2                     l8122:
  5924                           
  5925                           ; BSR set to: 0
  5926  001AD2  0E00               	movlw	0
  5927  001AD4  6F75               	movwf	(_efgtoa$3138+1)& (0+255),b
  5928  001AD6  0E45               	movlw	69
  5929  001AD8  6F74               	movwf	_efgtoa$3138& (0+255),b
  5930  001ADA                     l8124:
  5931                           
  5932                           ; BSR set to: 0
  5933  001ADA  0E2C               	movlw	low _dbuf
  5934  001ADC  2596               	addwf	efgtoa@i& (0+255),w,b
  5935  001ADE  6ED9               	movwf	fsr2l,c
  5936  001AE0  0E01               	movlw	high _dbuf
  5937  001AE2  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5938  001AE4  6EDA               	movwf	fsr2h,c
  5939  001AE6  C074  FFDF         	movff	_efgtoa$3138,indf2
  5940  001AEA                     
  5941                           ; BSR set to: 0
  5942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5943  001AEA  078A               	decf	efgtoa@w& (0+255),f,b
  5944  001AEC  A0D8               	btfss	status,0,c
  5945  001AEE  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5946  001AF0                     
  5947                           ; BSR set to: 0
  5948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5949  001AF0  0E2C               	movlw	low _dbuf
  5950  001AF2  259E               	addwf	efgtoa@n& (0+255),w,b
  5951  001AF4  6E0A               	movwf	strcpy@dest^0,c
  5952  001AF6  0E01               	movlw	high _dbuf
  5953  001AF8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5954  001AFA  6E0B               	movwf	(strcpy@dest+1)^0,c
  5955  001AFC  0E2C               	movlw	low _dbuf
  5956  001AFE  2596               	addwf	efgtoa@i& (0+255),w,b
  5957  001B00  6E0C               	movwf	strcpy@src^0,c
  5958  001B02  0E01               	movlw	high _dbuf
  5959  001B04  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5960  001B06  6E0D               	movwf	(strcpy@src+1)^0,c
  5961  001B08  ECF3  F02C         	call	_strcpy	;wreg free
  5962  001B0C  EF0F  F008         	goto	l7870
  5963  001B10                     l1570:
  5964  001B10  0012               	return		;funcret
  5965  001B12                     __end_of_efgtoa:
  5966                           	callstack 0
  5967                           
  5968 ;; *************** function _tolower *****************
  5969 ;; Defined at:
  5970 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  c               2   15[COMRAM] int 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2   15[COMRAM] int 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5986 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;Total ram usage:        8 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 8
  5991 ;; This function calls:
  5992 ;;		_isupper
  5993 ;; This function is called by:
  5994 ;;		_efgtoa
  5995 ;;		_vfpfcnvrt
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text16
  6000  005986                     __ptext16:
  6001                           	callstack 0
  6002  005986                     _tolower:
  6003                           	callstack 17
  6004  005986  0EBF               	movlw	191
  6005  005988  6E12               	movwf	??_tolower^0,c
  6006  00598A  0EFF               	movlw	255
  6007  00598C  6E13               	movwf	(??_tolower+1)^0,c
  6008  00598E  C010  F014         	movff	tolower@c,??_tolower+2
  6009  005992  C011  F015         	movff	tolower@c+1,??_tolower+3
  6010  005996  5012               	movf	??_tolower^0,w,c
  6011  005998  2614               	addwf	(??_tolower+2)^0,f,c
  6012  00599A  5013               	movf	(??_tolower+1)^0,w,c
  6013  00599C  2215               	addwfc	(??_tolower+3)^0,f,c
  6014  00599E  5015               	movf	(??_tolower+3)^0,w,c
  6015  0059A0  E10A               	bnz	u9950
  6016  0059A2  0E1A               	movlw	26
  6017  0059A4  5C14               	subwf	(??_tolower+2)^0,w,c
  6018  0059A6  A0D8               	btfss	status,0,c
  6019  0059A8  EFD8  F02C         	goto	u9951
  6020  0059AC  EFDB  F02C         	goto	u9950
  6021  0059B0                     u9951:
  6022  0059B0  0E01               	movlw	1
  6023  0059B2  EFDC  F02C         	goto	u9960
  6024  0059B6                     u9950:
  6025  0059B6  0E00               	movlw	0
  6026  0059B8                     u9960:
  6027  0059B8  6E16               	movwf	_tolower$3300^0,c
  6028  0059BA  6A17               	clrf	(_tolower$3300+1)^0,c
  6029  0059BC  5016               	movf	_tolower$3300^0,w,c
  6030  0059BE  1017               	iorwf	(_tolower$3300+1)^0,w,c
  6031  0059C0  B4D8               	btfsc	status,2,c
  6032  0059C2  EFE5  F02C         	goto	u9971
  6033  0059C6  EFE7  F02C         	goto	u9970
  6034  0059CA                     u9971:
  6035  0059CA  EFEE  F02C         	goto	l1834
  6036  0059CE                     u9970:
  6037  0059CE  0E20               	movlw	32
  6038  0059D0  1010               	iorwf	tolower@c^0,w,c
  6039  0059D2  6E10               	movwf	?_tolower^0,c
  6040  0059D4  5011               	movf	(tolower@c+1)^0,w,c
  6041  0059D6  6E11               	movwf	(?_tolower+1)^0,c
  6042  0059D8  EFF2  F02C         	goto	l1839
  6043  0059DC                     l1834:
  6044  0059DC  C010  F010         	movff	tolower@c,?_tolower
  6045  0059E0  C011  F011         	movff	tolower@c+1,?_tolower+1
  6046  0059E4                     l1839:
  6047  0059E4  0012               	return		;funcret
  6048  0059E6                     __end_of_tolower:
  6049                           	callstack 0
  6050                           
  6051 ;; *************** function _isupper *****************
  6052 ;; Defined at:
  6053 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  c               2    9[COMRAM] int 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;		None
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  2    9[COMRAM] int 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6069 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6070 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6071 ;;Total ram usage:        6 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 7
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_efgtoa
  6078 ;;		_vfpfcnvrt
  6079 ;;		_tolower
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text17
  6084  006040                     __ptext17:
  6085                           	callstack 0
  6086  006040                     _isupper:
  6087                           	callstack 17
  6088  006040  0EBF               	movlw	191
  6089  006042  6E0C               	movwf	??_isupper^0,c
  6090  006044  0EFF               	movlw	255
  6091  006046  6E0D               	movwf	(??_isupper+1)^0,c
  6092  006048  C00A  F00E         	movff	isupper@c,??_isupper+2
  6093  00604C  C00B  F00F         	movff	isupper@c+1,??_isupper+3
  6094  006050  500C               	movf	??_isupper^0,w,c
  6095  006052  260E               	addwf	(??_isupper+2)^0,f,c
  6096  006054  500D               	movf	(??_isupper+1)^0,w,c
  6097  006056  220F               	addwfc	(??_isupper+3)^0,f,c
  6098  006058  500F               	movf	(??_isupper+3)^0,w,c
  6099  00605A  E10A               	bnz	u8960
  6100  00605C  0E1A               	movlw	26
  6101  00605E  5C0E               	subwf	(??_isupper+2)^0,w,c
  6102  006060  A0D8               	btfss	status,0,c
  6103  006062  EF35  F030         	goto	u8961
  6104  006066  EF38  F030         	goto	u8960
  6105  00606A                     u8961:
  6106  00606A  0E01               	movlw	1
  6107  00606C  EF39  F030         	goto	u8970
  6108  006070                     u8960:
  6109  006070  0E00               	movlw	0
  6110  006072                     u8970:
  6111  006072  6E0A               	movwf	?_isupper^0,c
  6112  006074  6A0B               	clrf	(?_isupper+1)^0,c
  6113  006076  0012               	return		;funcret
  6114  006078                     __end_of_isupper:
  6115                           	callstack 0
  6116                           
  6117 ;; *************** function _strcpy *****************
  6118 ;; Defined at:
  6119 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  dest            2    9[COMRAM] PTR unsigned char 
  6122 ;;		 -> dbuf(80), 
  6123 ;;  src             2   11[COMRAM] PTR const unsigned char 
  6124 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6125 ;;		 -> dbuf(80), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  d               2   17[COMRAM] PTR unsigned char 
  6128 ;;		 -> dbuf(80), 
  6129 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6130 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6131 ;;		 -> dbuf(80), 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  2    9[COMRAM] PTR unsigned char 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6142 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;Total ram usage:       10 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 7
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_efgtoa
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text18
  6156  0059E6                     __ptext18:
  6157                           	callstack 0
  6158  0059E6                     _strcpy:
  6159                           	callstack 17
  6160  0059E6  C00C  F010         	movff	strcpy@src,strcpy@s
  6161  0059EA  C00D  F011         	movff	strcpy@src+1,strcpy@s+1
  6162  0059EE  C00A  F012         	movff	strcpy@dest,strcpy@d
  6163  0059F2  C00B  F013         	movff	strcpy@dest+1,strcpy@d+1
  6164  0059F6                     l7704:
  6165  0059F6  5010               	movf	strcpy@s^0,w,c
  6166  0059F8  6E0E               	movwf	??_strcpy^0,c
  6167  0059FA  5011               	movf	(strcpy@s+1)^0,w,c
  6168  0059FC  6E0F               	movwf	(??_strcpy+1)^0,c
  6169  0059FE  4A10               	infsnz	strcpy@s^0,f,c
  6170  005A00  2A11               	incf	(strcpy@s+1)^0,f,c
  6171  005A02  C00E  FFF6         	movff	??_strcpy,tblptrl
  6172  005A06  C00F  FFF7         	movff	??_strcpy+1,tblptrh
  6173  005A0A  0E00               	movlw	low (__smallconst shr (0+16))
  6174  005A0C  6EF8               	movwf	tblptru,c
  6175  005A0E  C012  FFD9         	movff	strcpy@d,fsr2l
  6176  005A12  C013  FFDA         	movff	strcpy@d+1,fsr2h
  6177  005A16  4A12               	infsnz	strcpy@d^0,f,c
  6178  005A18  2A13               	incf	(strcpy@d+1)^0,f,c
  6179  005A1A  0E0D               	movlw	(high __ramtop+-1)
  6180  005A1C  64F7               	cpfsgt	tblptrh,c
  6181  005A1E  D003               	bra	u9937
  6182  005A20  0008               	tblrd		*
  6183  005A22  50F5               	movf	tablat,w,c
  6184  005A24  D005               	bra	u9930
  6185  005A26                     u9937:
  6186  005A26  CFF6 FFE1          	movff	tblptrl,fsr1l
  6187  005A2A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6188  005A2E  50E7               	movf	indf1,w,c
  6189  005A30                     u9930:
  6190  005A30  6EDF               	movwf	indf2,c
  6191  005A32  50DF               	movf	indf2,w,c
  6192  005A34  A4D8               	btfss	status,2,c
  6193  005A36  EF1F  F02D         	goto	u9941
  6194  005A3A  EF21  F02D         	goto	u9940
  6195  005A3E                     u9941:
  6196  005A3E  EFFB  F02C         	goto	l7704
  6197  005A42                     u9940:
  6198  005A42  0012               	return		;funcret
  6199  005A44                     __end_of_strcpy:
  6200                           	callstack 0
  6201                           
  6202 ;; *************** function _floorf *****************
  6203 ;; Defined at:
  6204 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  x               4   48[COMRAM] float 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  u               4   64[COMRAM] struct .
  6209 ;;  m               4   58[COMRAM] unsigned long 
  6210 ;;  e               2   62[COMRAM] int 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  4   48[COMRAM] float 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6221 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6224 ;;Total ram usage:       20 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 7
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_efgtoa
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text19
  6235  0037F6                     __ptext19:
  6236                           	callstack 0
  6237  0037F6                     _floorf:
  6238                           	callstack 17
  6239  0037F6  C114  F041         	movff	floorf@F527,floorf@u
  6240  0037FA  C115  F042         	movff	floorf@F527+1,floorf@u+1
  6241  0037FE  C116  F043         	movff	floorf@F527+2,floorf@u+2
  6242  003802  C117  F044         	movff	floorf@F527+3,floorf@u+3
  6243  003806  C031  F041         	movff	floorf@x,floorf@u
  6244  00380A  C032  F042         	movff	floorf@x+1,floorf@u+1
  6245  00380E  C033  F043         	movff	floorf@x+2,floorf@u+2
  6246  003812  C034  F044         	movff	floorf@x+3,floorf@u+3
  6247  003816  0E81               	movlw	129
  6248  003818  6E35               	movwf	??_floorf^0,c
  6249  00381A  0EFF               	movlw	255
  6250  00381C  6E36               	movwf	(??_floorf+1)^0,c
  6251  00381E  C041  F037         	movff	floorf@u,??_floorf+2
  6252  003822  C042  F038         	movff	floorf@u+1,??_floorf+3
  6253  003826  C043  F039         	movff	floorf@u+2,??_floorf+4
  6254  00382A  C044  F03A         	movff	floorf@u+3,??_floorf+5
  6255  00382E  0E18               	movlw	24
  6256  003830  EF1F  F01C         	goto	u9980
  6257  003834                     u9985:
  6258  003834  90D8               	bcf	status,0,c
  6259  003836  323A               	rrcf	(??_floorf+5)^0,f,c
  6260  003838  3239               	rrcf	(??_floorf+4)^0,f,c
  6261  00383A  3238               	rrcf	(??_floorf+3)^0,f,c
  6262  00383C  3237               	rrcf	(??_floorf+2)^0,f,c
  6263  00383E                     u9980:
  6264  00383E  2EE8               	decfsz	wreg,f,c
  6265  003840  EF1A  F01C         	goto	u9985
  6266  003844  5037               	movf	(??_floorf+2)^0,w,c
  6267  003846  2435               	addwf	??_floorf^0,w,c
  6268  003848  6E3F               	movwf	floorf@e^0,c
  6269  00384A  0E00               	movlw	0
  6270  00384C  2036               	addwfc	(??_floorf+1)^0,w,c
  6271  00384E  6E40               	movwf	(floorf@e+1)^0,c
  6272  003850  BE40               	btfsc	(floorf@e+1)^0,7,c
  6273  003852  EF34  F01C         	goto	u9991
  6274  003856  5040               	movf	(floorf@e+1)^0,w,c
  6275  003858  E109               	bnz	u9990
  6276  00385A  0E17               	movlw	23
  6277  00385C  5C3F               	subwf	floorf@e^0,w,c
  6278  00385E  A0D8               	btfss	status,0,c
  6279  003860  EF34  F01C         	goto	u9991
  6280  003864  EF36  F01C         	goto	u9990
  6281  003868                     u9991:
  6282  003868  EF40  F01C         	goto	l7722
  6283  00386C                     u9990:
  6284  00386C                     l7720:
  6285  00386C  C031  F031         	movff	floorf@x,?_floorf
  6286  003870  C032  F032         	movff	floorf@x+1,?_floorf+1
  6287  003874  C033  F033         	movff	floorf@x+2,?_floorf+2
  6288  003878  C034  F034         	movff	floorf@x+3,?_floorf+3
  6289  00387C  EF03  F01D         	goto	l1758
  6290  003880                     l7722:
  6291  003880  BE40               	btfsc	(floorf@e+1)^0,7,c
  6292  003882  EF45  F01C         	goto	u10001
  6293  003886  EF47  F01C         	goto	u10000
  6294  00388A                     u10001:
  6295  00388A  EFB7  F01C         	goto	l7732
  6296  00388E                     u10000:
  6297  00388E  C03F  F035         	movff	floorf@e,??_floorf
  6298  003892  0EFF               	movlw	255
  6299  003894  6E36               	movwf	(??_floorf+1)^0,c
  6300  003896  0EFF               	movlw	255
  6301  003898  6E37               	movwf	(??_floorf+2)^0,c
  6302  00389A  0E7F               	movlw	127
  6303  00389C  6E38               	movwf	(??_floorf+3)^0,c
  6304  00389E  0E00               	movlw	0
  6305  0038A0  6E39               	movwf	(??_floorf+4)^0,c
  6306  0038A2                     u10015:
  6307  0038A2  6635               	tstfsz	??_floorf^0,c
  6308  0038A4  EF56  F01C         	goto	u10016
  6309  0038A8  EF5E  F01C         	goto	u10017
  6310  0038AC                     u10016:
  6311  0038AC  3439               	rlcf	(??_floorf+4)^0,w,c
  6312  0038AE  3239               	rrcf	(??_floorf+4)^0,f,c
  6313  0038B0  3238               	rrcf	(??_floorf+3)^0,f,c
  6314  0038B2  3237               	rrcf	(??_floorf+2)^0,f,c
  6315  0038B4  3236               	rrcf	(??_floorf+1)^0,f,c
  6316  0038B6  2E35               	decfsz	??_floorf^0,f,c
  6317  0038B8  EF51  F01C         	goto	u10015
  6318  0038BC                     u10017:
  6319  0038BC  C036  F03B         	movff	??_floorf+1,floorf@m
  6320  0038C0  C037  F03C         	movff	??_floorf+2,floorf@m+1
  6321  0038C4  C038  F03D         	movff	??_floorf+3,floorf@m+2
  6322  0038C8  C039  F03E         	movff	??_floorf+4,floorf@m+3
  6323  0038CC  503B               	movf	floorf@m^0,w,c
  6324  0038CE  1441               	andwf	floorf@u^0,w,c
  6325  0038D0  6E35               	movwf	??_floorf^0,c
  6326  0038D2  503C               	movf	(floorf@m+1)^0,w,c
  6327  0038D4  1442               	andwf	(floorf@u+1)^0,w,c
  6328  0038D6  6E36               	movwf	(??_floorf+1)^0,c
  6329  0038D8  503D               	movf	(floorf@m+2)^0,w,c
  6330  0038DA  1443               	andwf	(floorf@u+2)^0,w,c
  6331  0038DC  6E37               	movwf	(??_floorf+2)^0,c
  6332  0038DE  503E               	movf	(floorf@m+3)^0,w,c
  6333  0038E0  1444               	andwf	(floorf@u+3)^0,w,c
  6334  0038E2  6E38               	movwf	(??_floorf+3)^0,c
  6335  0038E4  5035               	movf	??_floorf^0,w,c
  6336  0038E6  1036               	iorwf	(??_floorf+1)^0,w,c
  6337  0038E8  1037               	iorwf	(??_floorf+2)^0,w,c
  6338  0038EA  1038               	iorwf	(??_floorf+3)^0,w,c
  6339  0038EC  A4D8               	btfss	status,2,c
  6340  0038EE  EF7B  F01C         	goto	u10021
  6341  0038F2  EF7D  F01C         	goto	u10020
  6342  0038F6                     u10021:
  6343  0038F6  EF7F  F01C         	goto	l7728
  6344  0038FA                     u10020:
  6345  0038FA  EF36  F01C         	goto	l7720
  6346  0038FE                     l7728:
  6347  0038FE  C041  F035         	movff	floorf@u,??_floorf
  6348  003902  C042  F036         	movff	floorf@u+1,??_floorf+1
  6349  003906  C043  F037         	movff	floorf@u+2,??_floorf+2
  6350  00390A  C044  F038         	movff	floorf@u+3,??_floorf+3
  6351  00390E  0E20               	movlw	32
  6352  003910  EF8F  F01C         	goto	u10030
  6353  003914                     u10035:
  6354  003914  90D8               	bcf	status,0,c
  6355  003916  3238               	rrcf	(??_floorf+3)^0,f,c
  6356  003918  3237               	rrcf	(??_floorf+2)^0,f,c
  6357  00391A  3236               	rrcf	(??_floorf+1)^0,f,c
  6358  00391C  3235               	rrcf	??_floorf^0,f,c
  6359  00391E                     u10030:
  6360  00391E  2EE8               	decfsz	wreg,f,c
  6361  003920  EF8A  F01C         	goto	u10035
  6362  003924  5035               	movf	??_floorf^0,w,c
  6363  003926  1036               	iorwf	(??_floorf+1)^0,w,c
  6364  003928  1037               	iorwf	(??_floorf+2)^0,w,c
  6365  00392A  1038               	iorwf	(??_floorf+3)^0,w,c
  6366  00392C  B4D8               	btfsc	status,2,c
  6367  00392E  EF9B  F01C         	goto	u10041
  6368  003932  EF9D  F01C         	goto	u10040
  6369  003936                     u10041:
  6370  003936  EFA5  F01C         	goto	l1761
  6371  00393A                     u10040:
  6372  00393A  503B               	movf	floorf@m^0,w,c
  6373  00393C  2641               	addwf	floorf@u^0,f,c
  6374  00393E  503C               	movf	(floorf@m+1)^0,w,c
  6375  003940  2242               	addwfc	(floorf@u+1)^0,f,c
  6376  003942  503D               	movf	(floorf@m+2)^0,w,c
  6377  003944  2243               	addwfc	(floorf@u+2)^0,f,c
  6378  003946  503E               	movf	(floorf@m+3)^0,w,c
  6379  003948  2244               	addwfc	(floorf@u+3)^0,f,c
  6380  00394A                     l1761:
  6381  00394A  1C3B               	comf	floorf@m^0,w,c
  6382  00394C  6E35               	movwf	??_floorf^0,c
  6383  00394E  1C3C               	comf	(floorf@m+1)^0,w,c
  6384  003950  6E36               	movwf	(??_floorf+1)^0,c
  6385  003952  1C3D               	comf	(floorf@m+2)^0,w,c
  6386  003954  6E37               	movwf	(??_floorf+2)^0,c
  6387  003956  1C3E               	comf	(floorf@m+3)^0,w,c
  6388  003958  6E38               	movwf	(??_floorf+3)^0,c
  6389  00395A  5035               	movf	??_floorf^0,w,c
  6390  00395C  1641               	andwf	floorf@u^0,f,c
  6391  00395E  5036               	movf	(??_floorf+1)^0,w,c
  6392  003960  1642               	andwf	(floorf@u+1)^0,f,c
  6393  003962  5037               	movf	(??_floorf+2)^0,w,c
  6394  003964  1643               	andwf	(floorf@u+2)^0,f,c
  6395  003966  5038               	movf	(??_floorf+3)^0,w,c
  6396  003968  1644               	andwf	(floorf@u+3)^0,f,c
  6397  00396A  EFFB  F01C         	goto	l7740
  6398  00396E                     l7732:
  6399  00396E  C041  F035         	movff	floorf@u,??_floorf
  6400  003972  C042  F036         	movff	floorf@u+1,??_floorf+1
  6401  003976  C043  F037         	movff	floorf@u+2,??_floorf+2
  6402  00397A  C044  F038         	movff	floorf@u+3,??_floorf+3
  6403  00397E  0E20               	movlw	32
  6404  003980  EFC7  F01C         	goto	u10050
  6405  003984                     u10055:
  6406  003984  90D8               	bcf	status,0,c
  6407  003986  3238               	rrcf	(??_floorf+3)^0,f,c
  6408  003988  3237               	rrcf	(??_floorf+2)^0,f,c
  6409  00398A  3236               	rrcf	(??_floorf+1)^0,f,c
  6410  00398C  3235               	rrcf	??_floorf^0,f,c
  6411  00398E                     u10050:
  6412  00398E  2EE8               	decfsz	wreg,f,c
  6413  003990  EFC2  F01C         	goto	u10055
  6414  003994  5035               	movf	??_floorf^0,w,c
  6415  003996  1036               	iorwf	(??_floorf+1)^0,w,c
  6416  003998  1037               	iorwf	(??_floorf+2)^0,w,c
  6417  00399A  1038               	iorwf	(??_floorf+3)^0,w,c
  6418  00399C  A4D8               	btfss	status,2,c
  6419  00399E  EFD3  F01C         	goto	u10061
  6420  0039A2  EFD5  F01C         	goto	u10060
  6421  0039A6                     u10061:
  6422  0039A6  EFDF  F01C         	goto	l7736
  6423  0039AA                     u10060:
  6424  0039AA  0E00               	movlw	0
  6425  0039AC  6E41               	movwf	floorf@u^0,c
  6426  0039AE  0E00               	movlw	0
  6427  0039B0  6E42               	movwf	(floorf@u+1)^0,c
  6428  0039B2  0E00               	movlw	0
  6429  0039B4  6E43               	movwf	(floorf@u+2)^0,c
  6430  0039B6  0E00               	movlw	0
  6431  0039B8  6E44               	movwf	(floorf@u+3)^0,c
  6432  0039BA  EFFB  F01C         	goto	l7740
  6433  0039BE                     l7736:
  6434  0039BE  90D8               	bcf	status,0,c
  6435  0039C0  3441               	rlcf	floorf@u^0,w,c
  6436  0039C2  6E35               	movwf	??_floorf^0,c
  6437  0039C4  3442               	rlcf	(floorf@u+1)^0,w,c
  6438  0039C6  6E36               	movwf	(??_floorf+1)^0,c
  6439  0039C8  3443               	rlcf	(floorf@u+2)^0,w,c
  6440  0039CA  6E37               	movwf	(??_floorf+2)^0,c
  6441  0039CC  3444               	rlcf	(floorf@u+3)^0,w,c
  6442  0039CE  6E38               	movwf	(??_floorf+3)^0,c
  6443  0039D0  5035               	movf	??_floorf^0,w,c
  6444  0039D2  1036               	iorwf	(??_floorf+1)^0,w,c
  6445  0039D4  1037               	iorwf	(??_floorf+2)^0,w,c
  6446  0039D6  1038               	iorwf	(??_floorf+3)^0,w,c
  6447  0039D8  B4D8               	btfsc	status,2,c
  6448  0039DA  EFF1  F01C         	goto	u10071
  6449  0039DE  EFF3  F01C         	goto	u10070
  6450  0039E2                     u10071:
  6451  0039E2  EFFB  F01C         	goto	l7740
  6452  0039E6                     u10070:
  6453  0039E6  0E00               	movlw	0
  6454  0039E8  6E41               	movwf	floorf@u^0,c
  6455  0039EA  0E00               	movlw	0
  6456  0039EC  6E42               	movwf	(floorf@u+1)^0,c
  6457  0039EE  0E80               	movlw	128
  6458  0039F0  6E43               	movwf	(floorf@u+2)^0,c
  6459  0039F2  0EBF               	movlw	191
  6460  0039F4  6E44               	movwf	(floorf@u+3)^0,c
  6461  0039F6                     l7740:
  6462  0039F6  C041  F031         	movff	floorf@u,?_floorf
  6463  0039FA  C042  F032         	movff	floorf@u+1,?_floorf+1
  6464  0039FE  C043  F033         	movff	floorf@u+2,?_floorf+2
  6465  003A02  C044  F034         	movff	floorf@u+3,?_floorf+3
  6466  003A06                     l1758:
  6467  003A06  0012               	return		;funcret
  6468  003A08                     __end_of_floorf:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function ___fpclassifyf *****************
  6472 ;; Defined at:
  6473 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  x               4    9[COMRAM] float 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  u               4   19[COMRAM] struct .
  6478 ;;  e               2   17[COMRAM] int 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  2    9[COMRAM] int 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6489 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6491 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6492 ;;Total ram usage:       14 bytes
  6493 ;; Hardware stack levels used: 1
  6494 ;; Hardware stack levels required when called: 7
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_efgtoa
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text20
  6503  00512C                     __ptext20:
  6504                           	callstack 0
  6505  00512C                     ___fpclassifyf:
  6506                           	callstack 17
  6507  00512C  C118  F014         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6508  005130  C119  F015         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6509  005134  C11A  F016         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6510  005138  C11B  F017         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6511  00513C  C00A  F014         	movff	___fpclassifyf@x,___fpclassifyf@u
  6512  005140  C00B  F015         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6513  005144  C00C  F016         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6514  005148  C00D  F017         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6515  00514C  C014  F00E         	movff	___fpclassifyf@u,??___fpclassifyf
  6516  005150  C015  F00F         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6517  005154  C016  F010         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6518  005158  C017  F011         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6519  00515C  0E18               	movlw	24
  6520  00515E  EFB6  F028         	goto	u9860
  6521  005162                     u9865:
  6522  005162  90D8               	bcf	status,0,c
  6523  005164  3211               	rrcf	(??___fpclassifyf+3)^0,f,c
  6524  005166  3210               	rrcf	(??___fpclassifyf+2)^0,f,c
  6525  005168  320F               	rrcf	(??___fpclassifyf+1)^0,f,c
  6526  00516A  320E               	rrcf	??___fpclassifyf^0,f,c
  6527  00516C                     u9860:
  6528  00516C  2EE8               	decfsz	wreg,f,c
  6529  00516E  EFB1  F028         	goto	u9865
  6530  005172  500E               	movf	??___fpclassifyf^0,w,c
  6531  005174  6E12               	movwf	___fpclassifyf@e^0,c
  6532  005176  6A13               	clrf	(___fpclassifyf@e+1)^0,c
  6533  005178  5012               	movf	___fpclassifyf@e^0,w,c
  6534  00517A  1013               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6535  00517C  A4D8               	btfss	status,2,c
  6536  00517E  EFC3  F028         	goto	u9871
  6537  005182  EFC5  F028         	goto	u9870
  6538  005186                     u9871:
  6539  005186  EFE5  F028         	goto	l7692
  6540  00518A                     u9870:
  6541  00518A  90D8               	bcf	status,0,c
  6542  00518C  3414               	rlcf	___fpclassifyf@u^0,w,c
  6543  00518E  6E0E               	movwf	??___fpclassifyf^0,c
  6544  005190  3415               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6545  005192  6E0F               	movwf	(??___fpclassifyf+1)^0,c
  6546  005194  3416               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6547  005196  6E10               	movwf	(??___fpclassifyf+2)^0,c
  6548  005198  3417               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6549  00519A  6E11               	movwf	(??___fpclassifyf+3)^0,c
  6550  00519C  500E               	movf	??___fpclassifyf^0,w,c
  6551  00519E  100F               	iorwf	(??___fpclassifyf+1)^0,w,c
  6552  0051A0  1010               	iorwf	(??___fpclassifyf+2)^0,w,c
  6553  0051A2  1011               	iorwf	(??___fpclassifyf+3)^0,w,c
  6554  0051A4  A4D8               	btfss	status,2,c
  6555  0051A6  EFD7  F028         	goto	u9881
  6556  0051AA  EFD9  F028         	goto	u9880
  6557  0051AE                     u9881:
  6558  0051AE  EFDF  F028         	goto	l7688
  6559  0051B2                     u9880:
  6560  0051B2  0E00               	movlw	0
  6561  0051B4  6E0B               	movwf	(?___fpclassifyf+1)^0,c
  6562  0051B6  0E02               	movlw	2
  6563  0051B8  6E0A               	movwf	?___fpclassifyf^0,c
  6564  0051BA  EF14  F029         	goto	l1713
  6565  0051BE                     l7688:
  6566  0051BE  0E00               	movlw	0
  6567  0051C0  6E0B               	movwf	(?___fpclassifyf+1)^0,c
  6568  0051C2  0E03               	movlw	3
  6569  0051C4  6E0A               	movwf	?___fpclassifyf^0,c
  6570  0051C6  EF14  F029         	goto	l1713
  6571  0051CA                     l7692:
  6572  0051CA  2812               	incf	___fpclassifyf@e^0,w,c
  6573  0051CC  1013               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6574  0051CE  A4D8               	btfss	status,2,c
  6575  0051D0  EFEC  F028         	goto	u9891
  6576  0051D4  EFEE  F028         	goto	u9890
  6577  0051D8                     u9891:
  6578  0051D8  EF10  F029         	goto	l7698
  6579  0051DC                     u9890:
  6580  0051DC  C014  F00E         	movff	___fpclassifyf@u,??___fpclassifyf
  6581  0051E0  C015  F00F         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6582  0051E4  C016  F010         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6583  0051E8  C017  F011         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6584  0051EC  0E09               	movlw	9
  6585  0051EE                     u9905:
  6586  0051EE  90D8               	bcf	status,0,c
  6587  0051F0  360E               	rlcf	??___fpclassifyf^0,f,c
  6588  0051F2  360F               	rlcf	(??___fpclassifyf+1)^0,f,c
  6589  0051F4  3610               	rlcf	(??___fpclassifyf+2)^0,f,c
  6590  0051F6  3611               	rlcf	(??___fpclassifyf+3)^0,f,c
  6591  0051F8  2EE8               	decfsz	wreg,f,c
  6592  0051FA  EFF7  F028         	goto	u9905
  6593  0051FE  500E               	movf	??___fpclassifyf^0,w,c
  6594  005200  100F               	iorwf	(??___fpclassifyf+1)^0,w,c
  6595  005202  1010               	iorwf	(??___fpclassifyf+2)^0,w,c
  6596  005204  1011               	iorwf	(??___fpclassifyf+3)^0,w,c
  6597  005206  B4D8               	btfsc	status,2,c
  6598  005208  EF08  F029         	goto	u9911
  6599  00520C  EF0B  F029         	goto	u9910
  6600  005210                     u9911:
  6601  005210  0E01               	movlw	1
  6602  005212  EF0C  F029         	goto	u9920
  6603  005216                     u9910:
  6604  005216  0E00               	movlw	0
  6605  005218                     u9920:
  6606  005218  6E0A               	movwf	?___fpclassifyf^0,c
  6607  00521A  6A0B               	clrf	(?___fpclassifyf+1)^0,c
  6608  00521C  EF14  F029         	goto	l1713
  6609  005220                     l7698:
  6610  005220  0E00               	movlw	0
  6611  005222  6E0B               	movwf	(?___fpclassifyf+1)^0,c
  6612  005224  0E04               	movlw	4
  6613  005226  6E0A               	movwf	?___fpclassifyf^0,c
  6614  005228                     l1713:
  6615  005228  0012               	return		;funcret
  6616  00522A                     __end_of___fpclassifyf:
  6617                           	callstack 0
  6618                           
  6619 ;; *************** function ___fltol *****************
  6620 ;; Defined at:
  6621 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  f1              4    9[COMRAM] int 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  exp1            1   18[COMRAM] unsigned char 
  6626 ;;  sign1           1   17[COMRAM] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  4    9[COMRAM] long 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6639 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6640 ;;Total ram usage:       10 bytes
  6641 ;; Hardware stack levels used: 1
  6642 ;; Hardware stack levels required when called: 7
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_efgtoa
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text21
  6651  004F22                     __ptext21:
  6652                           	callstack 0
  6653  004F22                     ___fltol:
  6654                           	callstack 17
  6655  004F22  340C               	rlcf	(___fltol@f1+2)^0,w,c
  6656  004F24  340D               	rlcf	(___fltol@f1+3)^0,w,c
  6657  004F26  6E13               	movwf	___fltol@exp1^0,c
  6658  004F28  5013               	movf	___fltol@exp1^0,w,c
  6659  004F2A  A4D8               	btfss	status,2,c
  6660  004F2C  EF9A  F027         	goto	u9741
  6661  004F30  EF9C  F027         	goto	u9740
  6662  004F34                     u9741:
  6663  004F34  EFA6  F027         	goto	l7616
  6664  004F38                     u9740:
  6665  004F38                     l7612:
  6666  004F38  0E00               	movlw	0
  6667  004F3A  6E0A               	movwf	?___fltol^0,c
  6668  004F3C  0E00               	movlw	0
  6669  004F3E  6E0B               	movwf	(?___fltol+1)^0,c
  6670  004F40  0E00               	movlw	0
  6671  004F42  6E0C               	movwf	(?___fltol+2)^0,c
  6672  004F44  0E00               	movlw	0
  6673  004F46  6E0D               	movwf	(?___fltol+3)^0,c
  6674  004F48  EF13  F028         	goto	l1097
  6675  004F4C                     l7616:
  6676  004F4C  C00A  F00E         	movff	___fltol@f1,??___fltol
  6677  004F50  C00B  F00F         	movff	___fltol@f1+1,??___fltol+1
  6678  004F54  C00C  F010         	movff	___fltol@f1+2,??___fltol+2
  6679  004F58  C00D  F011         	movff	___fltol@f1+3,??___fltol+3
  6680  004F5C  0E20               	movlw	32
  6681  004F5E  EFB6  F027         	goto	u9750
  6682  004F62                     u9755:
  6683  004F62  90D8               	bcf	status,0,c
  6684  004F64  3211               	rrcf	(??___fltol+3)^0,f,c
  6685  004F66  3210               	rrcf	(??___fltol+2)^0,f,c
  6686  004F68  320F               	rrcf	(??___fltol+1)^0,f,c
  6687  004F6A  320E               	rrcf	??___fltol^0,f,c
  6688  004F6C                     u9750:
  6689  004F6C  2EE8               	decfsz	wreg,f,c
  6690  004F6E  EFB1  F027         	goto	u9755
  6691  004F72  500E               	movf	??___fltol^0,w,c
  6692  004F74  6E12               	movwf	___fltol@sign1^0,c
  6693  004F76  8E0C               	bsf	(___fltol@f1+2)^0,7,c
  6694  004F78  0EFF               	movlw	255
  6695  004F7A  160A               	andwf	___fltol@f1^0,f,c
  6696  004F7C  0EFF               	movlw	255
  6697  004F7E  160B               	andwf	(___fltol@f1+1)^0,f,c
  6698  004F80  0EFF               	movlw	255
  6699  004F82  160C               	andwf	(___fltol@f1+2)^0,f,c
  6700  004F84  0E00               	movlw	0
  6701  004F86  160D               	andwf	(___fltol@f1+3)^0,f,c
  6702  004F88  0E96               	movlw	150
  6703  004F8A  5E13               	subwf	___fltol@exp1^0,f,c
  6704  004F8C  BE13               	btfsc	___fltol@exp1^0,7,c
  6705  004F8E  EFCD  F027         	goto	u9760
  6706  004F92  EFCB  F027         	goto	u9761
  6707  004F96                     u9761:
  6708  004F96  EFE3  F027         	goto	l7636
  6709  004F9A                     u9760:
  6710  004F9A  5013               	movf	___fltol@exp1^0,w,c
  6711  004F9C  0A80               	xorlw	128
  6712  004F9E  0F97               	addlw	151
  6713  004FA0  B0D8               	btfsc	status,0,c
  6714  004FA2  EFD5  F027         	goto	u9771
  6715  004FA6  EFD7  F027         	goto	u9770
  6716  004FAA                     u9771:
  6717  004FAA  EFD9  F027         	goto	l7632
  6718  004FAE                     u9770:
  6719  004FAE  EF9C  F027         	goto	l7612
  6720  004FB2                     l7632:
  6721  004FB2  90D8               	bcf	status,0,c
  6722  004FB4  320D               	rrcf	(___fltol@f1+3)^0,f,c
  6723  004FB6  320C               	rrcf	(___fltol@f1+2)^0,f,c
  6724  004FB8  320B               	rrcf	(___fltol@f1+1)^0,f,c
  6725  004FBA  320A               	rrcf	___fltol@f1^0,f,c
  6726  004FBC  3E13               	incfsz	___fltol@exp1^0,f,c
  6727  004FBE  EFD9  F027         	goto	l7632
  6728  004FC2  EFFB  F027         	goto	l7646
  6729  004FC6                     l7636:
  6730  004FC6  0E1F               	movlw	31
  6731  004FC8  6413               	cpfsgt	___fltol@exp1^0,c
  6732  004FCA  EFE9  F027         	goto	u9781
  6733  004FCE  EFEB  F027         	goto	u9780
  6734  004FD2                     u9781:
  6735  004FD2  EFF3  F027         	goto	l7644
  6736  004FD6                     u9780:
  6737  004FD6  EF9C  F027         	goto	l7612
  6738  004FDA                     l7642:
  6739  004FDA  90D8               	bcf	status,0,c
  6740  004FDC  360A               	rlcf	___fltol@f1^0,f,c
  6741  004FDE  360B               	rlcf	(___fltol@f1+1)^0,f,c
  6742  004FE0  360C               	rlcf	(___fltol@f1+2)^0,f,c
  6743  004FE2  360D               	rlcf	(___fltol@f1+3)^0,f,c
  6744  004FE4  0613               	decf	___fltol@exp1^0,f,c
  6745  004FE6                     l7644:
  6746  004FE6  5013               	movf	___fltol@exp1^0,w,c
  6747  004FE8  A4D8               	btfss	status,2,c
  6748  004FEA  EFF9  F027         	goto	u9791
  6749  004FEE  EFFB  F027         	goto	u9790
  6750  004FF2                     u9791:
  6751  004FF2  EFED  F027         	goto	l7642
  6752  004FF6                     u9790:
  6753  004FF6                     l7646:
  6754  004FF6  5012               	movf	___fltol@sign1^0,w,c
  6755  004FF8  B4D8               	btfsc	status,2,c
  6756  004FFA  EF01  F028         	goto	u9801
  6757  004FFE  EF03  F028         	goto	u9800
  6758  005002                     u9801:
  6759  005002  EF0B  F028         	goto	l7650
  6760  005006                     u9800:
  6761  005006  1E0D               	comf	(___fltol@f1+3)^0,f,c
  6762  005008  1E0C               	comf	(___fltol@f1+2)^0,f,c
  6763  00500A  1E0B               	comf	(___fltol@f1+1)^0,f,c
  6764  00500C  6C0A               	negf	___fltol@f1^0,c
  6765  00500E  0E00               	movlw	0
  6766  005010  220B               	addwfc	(___fltol@f1+1)^0,f,c
  6767  005012  220C               	addwfc	(___fltol@f1+2)^0,f,c
  6768  005014  220D               	addwfc	(___fltol@f1+3)^0,f,c
  6769  005016                     l7650:
  6770  005016  C00A  F00A         	movff	___fltol@f1,?___fltol
  6771  00501A  C00B  F00B         	movff	___fltol@f1+1,?___fltol+1
  6772  00501E  C00C  F00C         	movff	___fltol@f1+2,?___fltol+2
  6773  005022  C00D  F00D         	movff	___fltol@f1+3,?___fltol+3
  6774  005026                     l1097:
  6775  005026  0012               	return		;funcret
  6776  005028                     __end_of___fltol:
  6777                           	callstack 0
  6778                           
  6779 ;; *************** function ___flsub *****************
  6780 ;; Defined at:
  6781 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  b               4   64[COMRAM] long 
  6784 ;;  a               4   68[COMRAM] long 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  4   64[COMRAM] long 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6796 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;Total ram usage:        8 bytes
  6801 ;; Hardware stack levels used: 1
  6802 ;; Hardware stack levels required when called: 8
  6803 ;; This function calls:
  6804 ;;		___fladd
  6805 ;; This function is called by:
  6806 ;;		_efgtoa
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text22
  6811  005EB8                     __ptext22:
  6812                           	callstack 0
  6813  005EB8                     ___flsub:
  6814                           	callstack 16
  6815  005EB8  0E00               	movlw	0
  6816  005EBA  1A45               	xorwf	___flsub@a^0,f,c
  6817  005EBC  0E00               	movlw	0
  6818  005EBE  1A46               	xorwf	(___flsub@a+1)^0,f,c
  6819  005EC0  0E00               	movlw	0
  6820  005EC2  1A47               	xorwf	(___flsub@a+2)^0,f,c
  6821  005EC4  0E80               	movlw	128
  6822  005EC6  1A48               	xorwf	(___flsub@a+3)^0,f,c
  6823  005EC8  C041  F031         	movff	___flsub@b,___fladd@b
  6824  005ECC  C042  F032         	movff	___flsub@b+1,___fladd@b+1
  6825  005ED0  C043  F033         	movff	___flsub@b+2,___fladd@b+2
  6826  005ED4  C044  F034         	movff	___flsub@b+3,___fladd@b+3
  6827  005ED8  C045  F035         	movff	___flsub@a,___fladd@a
  6828  005EDC  C046  F036         	movff	___flsub@a+1,___fladd@a+1
  6829  005EE0  C047  F037         	movff	___flsub@a+2,___fladd@a+2
  6830  005EE4  C048  F038         	movff	___flsub@a+3,___fladd@a+3
  6831  005EE8  EC4A  F014         	call	___fladd	;wreg free
  6832  005EEC  C031  F041         	movff	?___fladd,?___flsub
  6833  005EF0  C032  F042         	movff	?___fladd+1,?___flsub+1
  6834  005EF4  C033  F043         	movff	?___fladd+2,?___flsub+2
  6835  005EF8  C034  F044         	movff	?___fladd+3,?___flsub+3
  6836  005EFC  0012               	return		;funcret
  6837  005EFE                     __end_of___flsub:
  6838                           	callstack 0
  6839                           
  6840 ;; *************** function ___flneg *****************
  6841 ;; Defined at:
  6842 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  f1              4    9[COMRAM] long 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  4    9[COMRAM] long 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;Total ram usage:        4 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 7
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_efgtoa
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text23
  6871  006078                     __ptext23:
  6872                           	callstack 0
  6873  006078                     ___flneg:
  6874                           	callstack 17
  6875  006078  500A               	movf	___flneg@f1^0,w,c
  6876  00607A  100B               	iorwf	(___flneg@f1+1)^0,w,c
  6877  00607C  100C               	iorwf	(___flneg@f1+2)^0,w,c
  6878  00607E  100D               	iorwf	(___flneg@f1+3)^0,w,c
  6879  006080  B4D8               	btfsc	status,2,c
  6880  006082  EF45  F030         	goto	u9731
  6881  006086  EF47  F030         	goto	u9730
  6882  00608A                     u9731:
  6883  00608A  EF4F  F030         	goto	l7606
  6884  00608E                     u9730:
  6885  00608E  0E00               	movlw	0
  6886  006090  1A0A               	xorwf	___flneg@f1^0,f,c
  6887  006092  0E00               	movlw	0
  6888  006094  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  6889  006096  0E00               	movlw	0
  6890  006098  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  6891  00609A  0E80               	movlw	128
  6892  00609C  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  6893  00609E                     l7606:
  6894  00609E  C00A  F00A         	movff	___flneg@f1,?___flneg
  6895  0060A2  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  6896  0060A6  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  6897  0060AA  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  6898  0060AE  0012               	return		;funcret
  6899  0060B0                     __end_of___flneg:
  6900                           	callstack 0
  6901                           
  6902 ;; *************** function ___fleq *****************
  6903 ;; Defined at:
  6904 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  ff1             4    9[COMRAM] long 
  6907 ;;  ff2             4   13[COMRAM] long 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;		None               void
  6912 ;; Registers used:
  6913 ;;		wreg, status,2, status,0
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6919 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;Total ram usage:       12 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 7
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_efgtoa
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text24
  6934  0056E0                     __ptext24:
  6935                           	callstack 0
  6936  0056E0                     ___fleq:
  6937                           	callstack 17
  6938  0056E0  0E00               	movlw	0
  6939  0056E2  140A               	andwf	___fleq@ff1^0,w,c
  6940  0056E4  6E12               	movwf	??___fleq^0,c
  6941  0056E6  0E00               	movlw	0
  6942  0056E8  140B               	andwf	(___fleq@ff1+1)^0,w,c
  6943  0056EA  6E13               	movwf	(??___fleq+1)^0,c
  6944  0056EC  0E80               	movlw	128
  6945  0056EE  140C               	andwf	(___fleq@ff1+2)^0,w,c
  6946  0056F0  6E14               	movwf	(??___fleq+2)^0,c
  6947  0056F2  0E7F               	movlw	127
  6948  0056F4  140D               	andwf	(___fleq@ff1+3)^0,w,c
  6949  0056F6  6E15               	movwf	(??___fleq+3)^0,c
  6950  0056F8  5012               	movf	??___fleq^0,w,c
  6951  0056FA  1013               	iorwf	(??___fleq+1)^0,w,c
  6952  0056FC  1014               	iorwf	(??___fleq+2)^0,w,c
  6953  0056FE  1015               	iorwf	(??___fleq+3)^0,w,c
  6954  005700  A4D8               	btfss	status,2,c
  6955  005702  EF85  F02B         	goto	u9651
  6956  005706  EF87  F02B         	goto	u9650
  6957  00570A                     u9651:
  6958  00570A  EF8F  F02B         	goto	l7568
  6959  00570E                     u9650:
  6960  00570E  0E00               	movlw	0
  6961  005710  6E0A               	movwf	___fleq@ff1^0,c
  6962  005712  0E00               	movlw	0
  6963  005714  6E0B               	movwf	(___fleq@ff1+1)^0,c
  6964  005716  0E00               	movlw	0
  6965  005718  6E0C               	movwf	(___fleq@ff1+2)^0,c
  6966  00571A  0E00               	movlw	0
  6967  00571C  6E0D               	movwf	(___fleq@ff1+3)^0,c
  6968  00571E                     l7568:
  6969  00571E  0E00               	movlw	0
  6970  005720  140E               	andwf	___fleq@ff2^0,w,c
  6971  005722  6E12               	movwf	??___fleq^0,c
  6972  005724  0E00               	movlw	0
  6973  005726  140F               	andwf	(___fleq@ff2+1)^0,w,c
  6974  005728  6E13               	movwf	(??___fleq+1)^0,c
  6975  00572A  0E80               	movlw	128
  6976  00572C  1410               	andwf	(___fleq@ff2+2)^0,w,c
  6977  00572E  6E14               	movwf	(??___fleq+2)^0,c
  6978  005730  0E7F               	movlw	127
  6979  005732  1411               	andwf	(___fleq@ff2+3)^0,w,c
  6980  005734  6E15               	movwf	(??___fleq+3)^0,c
  6981  005736  5012               	movf	??___fleq^0,w,c
  6982  005738  1013               	iorwf	(??___fleq+1)^0,w,c
  6983  00573A  1014               	iorwf	(??___fleq+2)^0,w,c
  6984  00573C  1015               	iorwf	(??___fleq+3)^0,w,c
  6985  00573E  A4D8               	btfss	status,2,c
  6986  005740  EFA4  F02B         	goto	u9661
  6987  005744  EFA6  F02B         	goto	u9660
  6988  005748                     u9661:
  6989  005748  EFAE  F02B         	goto	l7572
  6990  00574C                     u9660:
  6991  00574C  0E00               	movlw	0
  6992  00574E  6E0E               	movwf	___fleq@ff2^0,c
  6993  005750  0E00               	movlw	0
  6994  005752  6E0F               	movwf	(___fleq@ff2+1)^0,c
  6995  005754  0E00               	movlw	0
  6996  005756  6E10               	movwf	(___fleq@ff2+2)^0,c
  6997  005758  0E00               	movlw	0
  6998  00575A  6E11               	movwf	(___fleq@ff2+3)^0,c
  6999  00575C                     l7572:
  7000  00575C  500E               	movf	___fleq@ff2^0,w,c
  7001  00575E  180A               	xorwf	___fleq@ff1^0,w,c
  7002  005760  E10F               	bnz	u9670
  7003  005762  500F               	movf	(___fleq@ff2+1)^0,w,c
  7004  005764  180B               	xorwf	(___fleq@ff1+1)^0,w,c
  7005  005766  E10C               	bnz	u9670
  7006  005768  5010               	movf	(___fleq@ff2+2)^0,w,c
  7007  00576A  180C               	xorwf	(___fleq@ff1+2)^0,w,c
  7008  00576C  E109               	bnz	u9670
  7009  00576E  5011               	movf	(___fleq@ff2+3)^0,w,c
  7010  005770  180D               	xorwf	(___fleq@ff1+3)^0,w,c
  7011  005772  B4D8               	btfsc	status,2,c
  7012  005774  EFBE  F02B         	goto	u9671
  7013  005778  EFC0  F02B         	goto	u9670
  7014  00577C                     u9671:
  7015  00577C  EFC3  F02B         	goto	l7576
  7016  005780                     u9670:
  7017  005780  90D8               	bcf	status,0,c
  7018  005782  EFC4  F02B         	goto	l1059
  7019  005786                     l7576:
  7020  005786  80D8               	bsf	status,0,c
  7021  005788                     l1059:
  7022  005788  0012               	return		;funcret
  7023  00578A                     __end_of___fleq:
  7024                           	callstack 0
  7025                           
  7026 ;; *************** function ___awmod *****************
  7027 ;; Defined at:
  7028 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  dividend        2    9[COMRAM] int 
  7031 ;;  divisor         2   11[COMRAM] int 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  sign            1   14[COMRAM] unsigned char 
  7034 ;;  counter         1   13[COMRAM] unsigned char 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  2    9[COMRAM] int 
  7037 ;; Registers used:
  7038 ;;		wreg, status,2, status,0
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7048 ;;Total ram usage:        6 bytes
  7049 ;; Hardware stack levels used: 1
  7050 ;; Hardware stack levels required when called: 7
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_efgtoa
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           	psect	text25
  7059  005630                     __ptext25:
  7060                           	callstack 0
  7061  005630                     ___awmod:
  7062                           	callstack 17
  7063  005630  0E00               	movlw	0
  7064  005632  6E0F               	movwf	___awmod@sign^0,c
  7065  005634  BE0B               	btfsc	(___awmod@dividend+1)^0,7,c
  7066  005636  EF21  F02B         	goto	u9590
  7067  00563A  EF1F  F02B         	goto	u9591
  7068  00563E                     u9591:
  7069  00563E  EF27  F02B         	goto	l7536
  7070  005642                     u9590:
  7071  005642  6C0A               	negf	___awmod@dividend^0,c
  7072  005644  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  7073  005646  B0D8               	btfsc	status,0,c
  7074  005648  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  7075  00564A  0E01               	movlw	1
  7076  00564C  6E0F               	movwf	___awmod@sign^0,c
  7077  00564E                     l7536:
  7078  00564E  BE0D               	btfsc	(___awmod@divisor+1)^0,7,c
  7079  005650  EF2E  F02B         	goto	u9600
  7080  005654  EF2C  F02B         	goto	u9601
  7081  005658                     u9601:
  7082  005658  EF32  F02B         	goto	l7540
  7083  00565C                     u9600:
  7084  00565C  6C0C               	negf	___awmod@divisor^0,c
  7085  00565E  1E0D               	comf	(___awmod@divisor+1)^0,f,c
  7086  005660  B0D8               	btfsc	status,0,c
  7087  005662  2A0D               	incf	(___awmod@divisor+1)^0,f,c
  7088  005664                     l7540:
  7089  005664  500C               	movf	___awmod@divisor^0,w,c
  7090  005666  100D               	iorwf	(___awmod@divisor+1)^0,w,c
  7091  005668  B4D8               	btfsc	status,2,c
  7092  00566A  EF39  F02B         	goto	u9611
  7093  00566E  EF3B  F02B         	goto	u9610
  7094  005672                     u9611:
  7095  005672  EF5F  F02B         	goto	l7556
  7096  005676                     u9610:
  7097  005676  0E01               	movlw	1
  7098  005678  6E0E               	movwf	___awmod@counter^0,c
  7099  00567A  EF43  F02B         	goto	l7546
  7100  00567E                     l7544:
  7101  00567E  90D8               	bcf	status,0,c
  7102  005680  360C               	rlcf	___awmod@divisor^0,f,c
  7103  005682  360D               	rlcf	(___awmod@divisor+1)^0,f,c
  7104  005684  2A0E               	incf	___awmod@counter^0,f,c
  7105  005686                     l7546:
  7106  005686  AE0D               	btfss	(___awmod@divisor+1)^0,7,c
  7107  005688  EF48  F02B         	goto	u9621
  7108  00568C  EF4A  F02B         	goto	u9620
  7109  005690                     u9621:
  7110  005690  EF3F  F02B         	goto	l7544
  7111  005694                     u9620:
  7112  005694                     l7548:
  7113  005694  500C               	movf	___awmod@divisor^0,w,c
  7114  005696  5C0A               	subwf	___awmod@dividend^0,w,c
  7115  005698  500D               	movf	(___awmod@divisor+1)^0,w,c
  7116  00569A  580B               	subwfb	(___awmod@dividend+1)^0,w,c
  7117  00569C  A0D8               	btfss	status,0,c
  7118  00569E  EF53  F02B         	goto	u9631
  7119  0056A2  EF55  F02B         	goto	u9630
  7120  0056A6                     u9631:
  7121  0056A6  EF59  F02B         	goto	l7552
  7122  0056AA                     u9630:
  7123  0056AA  500C               	movf	___awmod@divisor^0,w,c
  7124  0056AC  5E0A               	subwf	___awmod@dividend^0,f,c
  7125  0056AE  500D               	movf	(___awmod@divisor+1)^0,w,c
  7126  0056B0  5A0B               	subwfb	(___awmod@dividend+1)^0,f,c
  7127  0056B2                     l7552:
  7128  0056B2  90D8               	bcf	status,0,c
  7129  0056B4  320D               	rrcf	(___awmod@divisor+1)^0,f,c
  7130  0056B6  320C               	rrcf	___awmod@divisor^0,f,c
  7131  0056B8  2E0E               	decfsz	___awmod@counter^0,f,c
  7132  0056BA  EF4A  F02B         	goto	l7548
  7133  0056BE                     l7556:
  7134  0056BE  500F               	movf	___awmod@sign^0,w,c
  7135  0056C0  B4D8               	btfsc	status,2,c
  7136  0056C2  EF65  F02B         	goto	u9641
  7137  0056C6  EF67  F02B         	goto	u9640
  7138  0056CA                     u9641:
  7139  0056CA  EF6B  F02B         	goto	l7560
  7140  0056CE                     u9640:
  7141  0056CE  6C0A               	negf	___awmod@dividend^0,c
  7142  0056D0  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  7143  0056D2  B0D8               	btfsc	status,0,c
  7144  0056D4  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  7145  0056D6                     l7560:
  7146  0056D6  C00A  F00A         	movff	___awmod@dividend,?___awmod
  7147  0056DA  C00B  F00B         	movff	___awmod@dividend+1,?___awmod+1
  7148  0056DE  0012               	return		;funcret
  7149  0056E0                     __end_of___awmod:
  7150                           	callstack 0
  7151                           
  7152 ;; *************** function _dtoa *****************
  7153 ;; Defined at:
  7154 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  7157 ;;		 -> sprintf@f(6), 
  7158 ;;  d               8   38[COMRAM] long long 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  n               8   62[COMRAM] long long 
  7161 ;;  i               2   70[COMRAM] int 
  7162 ;;  s               2   60[COMRAM] int 
  7163 ;;  w               2   58[COMRAM] int 
  7164 ;;  p               2   56[COMRAM] int 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  2   36[COMRAM] int 
  7167 ;; Registers used:
  7168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7174 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7178 ;;Total ram usage:       36 bytes
  7179 ;; Hardware stack levels used: 1
  7180 ;; Hardware stack levels required when called: 11
  7181 ;; This function calls:
  7182 ;;		___aodiv
  7183 ;;		___aomod
  7184 ;;		_abs
  7185 ;;		_pad
  7186 ;; This function is called by:
  7187 ;;		_vfpfcnvrt
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text26
  7192  003518                     __ptext26:
  7193                           	callstack 0
  7194  003518                     _dtoa:
  7195                           	callstack 14
  7196  003518                     
  7197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7198  003518  C027  F03F         	movff	dtoa@d,dtoa@n
  7199  00351C  C028  F040         	movff	dtoa@d+1,dtoa@n+1
  7200  003520  C029  F041         	movff	dtoa@d+2,dtoa@n+2
  7201  003524  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
  7202  003528  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
  7203  00352C  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
  7204  003530  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
  7205  003534  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
  7206  003538                     
  7207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7208  003538  BE46               	btfsc	(dtoa@n+7)^0,7,c
  7209  00353A  EFA1  F01A         	goto	u10141
  7210  00353E  EFA4  F01A         	goto	u10140
  7211  003542                     u10141:
  7212  003542  0E01               	movlw	1
  7213  003544  EFA5  F01A         	goto	u10150
  7214  003548                     u10140:
  7215  003548  0E00               	movlw	0
  7216  00354A                     u10150:
  7217  00354A  6E3D               	movwf	dtoa@s^0,c
  7218  00354C  6A3E               	clrf	(dtoa@s+1)^0,c
  7219                           
  7220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7221  00354E  503D               	movf	dtoa@s^0,w,c
  7222  003550  103E               	iorwf	(dtoa@s+1)^0,w,c
  7223  003552  B4D8               	btfsc	status,2,c
  7224  003554  EFAE  F01A         	goto	u10161
  7225  003558  EFB0  F01A         	goto	u10160
  7226  00355C                     u10161:
  7227  00355C  EFC0  F01A         	goto	l7770
  7228  003560                     u10160:
  7229  003560                     
  7230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7231  003560  1E46               	comf	(dtoa@n+7)^0,f,c
  7232  003562  1E45               	comf	(dtoa@n+6)^0,f,c
  7233  003564  1E44               	comf	(dtoa@n+5)^0,f,c
  7234  003566  1E43               	comf	(dtoa@n+4)^0,f,c
  7235  003568  1E42               	comf	(dtoa@n+3)^0,f,c
  7236  00356A  1E41               	comf	(dtoa@n+2)^0,f,c
  7237  00356C  1E40               	comf	(dtoa@n+1)^0,f,c
  7238  00356E  6C3F               	negf	dtoa@n^0,c
  7239  003570  0E00               	movlw	0
  7240  003572  2240               	addwfc	(dtoa@n+1)^0,f,c
  7241  003574  2241               	addwfc	(dtoa@n+2)^0,f,c
  7242  003576  2242               	addwfc	(dtoa@n+3)^0,f,c
  7243  003578  2243               	addwfc	(dtoa@n+4)^0,f,c
  7244  00357A  2244               	addwfc	(dtoa@n+5)^0,f,c
  7245  00357C  2245               	addwfc	(dtoa@n+6)^0,f,c
  7246  00357E  2246               	addwfc	(dtoa@n+7)^0,f,c
  7247  003580                     l7770:
  7248                           
  7249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7250  003580  BE4E               	btfsc	(_prec+1)^0,7,c
  7251  003582  EFC5  F01A         	goto	u10171
  7252  003586  EFC7  F01A         	goto	u10170
  7253  00358A                     u10171:
  7254  00358A  EFC8  F01A         	goto	l7774
  7255  00358E                     u10170:
  7256  00358E                     
  7257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7258  00358E  924F               	bcf	_flags^0,1,c
  7259  003590                     l7774:
  7260                           
  7261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7262  003590  BE4E               	btfsc	(_prec+1)^0,7,c
  7263  003592  EFD5  F01A         	goto	u10180
  7264  003596  504E               	movf	(_prec+1)^0,w,c
  7265  003598  E106               	bnz	u10181
  7266  00359A  044D               	decf	_prec^0,w,c
  7267  00359C  B0D8               	btfsc	status,0,c
  7268  00359E  EFD3  F01A         	goto	u10181
  7269  0035A2  EFD5  F01A         	goto	u10180
  7270  0035A6                     u10181:
  7271  0035A6  EFDB  F01A         	goto	l1532
  7272  0035AA                     u10180:
  7273  0035AA  0E00               	movlw	0
  7274  0035AC  6E3A               	movwf	(dtoa@p+1)^0,c
  7275  0035AE  0E01               	movlw	1
  7276  0035B0  6E39               	movwf	dtoa@p^0,c
  7277  0035B2  EFDF  F01A         	goto	l1534
  7278  0035B6                     l1532:
  7279  0035B6  C04D  F039         	movff	_prec,dtoa@p
  7280  0035BA  C04E  F03A         	movff	_prec+1,dtoa@p+1
  7281  0035BE                     l1534:
  7282                           
  7283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7284  0035BE  C11E  F03B         	movff	_width,dtoa@w
  7285  0035C2  C11F  F03C         	movff	_width+1,dtoa@w+1
  7286  0035C6                     
  7287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7288  0035C6  503D               	movf	dtoa@s^0,w,c
  7289  0035C8  103E               	iorwf	(dtoa@s+1)^0,w,c
  7290  0035CA  A4D8               	btfss	status,2,c
  7291  0035CC  EFEA  F01A         	goto	u10191
  7292  0035D0  EFEC  F01A         	goto	u10190
  7293  0035D4                     u10191:
  7294  0035D4  EFF3  F01A         	goto	l7782
  7295  0035D8                     u10190:
  7296  0035D8  A44F               	btfss	_flags^0,2,c
  7297  0035DA  EFF1  F01A         	goto	u10201
  7298  0035DE  EFF3  F01A         	goto	u10200
  7299  0035E2                     u10201:
  7300  0035E2  EFF6  F01A         	goto	l7784
  7301  0035E6                     u10200:
  7302  0035E6                     l7782:
  7303                           
  7304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7305  0035E6  063B               	decf	dtoa@w^0,f,c
  7306  0035E8  A0D8               	btfss	status,0,c
  7307  0035EA  063C               	decf	(dtoa@w+1)^0,f,c
  7308  0035EC                     l7784:
  7309                           
  7310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7311  0035EC  0E00               	movlw	0
  7312  0035EE  6E48               	movwf	(dtoa@i+1)^0,c
  7313  0035F0  0E4F               	movlw	79
  7314  0035F2  6E47               	movwf	dtoa@i^0,c
  7315  0035F4                     
  7316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7317  0035F4  0E00               	movlw	0
  7318  0035F6  0101               	movlb	1	; () banked
  7319  0035F8  6F7B               	movwf	(_dbuf+79)& (0+255),b
  7320                           
  7321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7322  0035FA  EF7B  F01B         	goto	l7798
  7323  0035FE                     l7788:
  7324                           
  7325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7326  0035FE  0647               	decf	dtoa@i^0,f,c
  7327  003600  A0D8               	btfss	status,0,c
  7328  003602  0648               	decf	(dtoa@i+1)^0,f,c
  7329  003604                     
  7330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7331  003604  0E2C               	movlw	low _dbuf
  7332  003606  2447               	addwf	dtoa@i^0,w,c
  7333  003608  6ED9               	movwf	fsr2l,c
  7334  00360A  0E01               	movlw	high _dbuf
  7335  00360C  2048               	addwfc	(dtoa@i+1)^0,w,c
  7336  00360E  6EDA               	movwf	fsr2h,c
  7337  003610  C03F  F00A         	movff	dtoa@n,___aomod@dividend
  7338  003614  C040  F00B         	movff	dtoa@n+1,___aomod@dividend+1
  7339  003618  C041  F00C         	movff	dtoa@n+2,___aomod@dividend+2
  7340  00361C  C042  F00D         	movff	dtoa@n+3,___aomod@dividend+3
  7341  003620  C043  F00E         	movff	dtoa@n+4,___aomod@dividend+4
  7342  003624  C044  F00F         	movff	dtoa@n+5,___aomod@dividend+5
  7343  003628  C045  F010         	movff	dtoa@n+6,___aomod@dividend+6
  7344  00362C  C046  F011         	movff	dtoa@n+7,___aomod@dividend+7
  7345  003630  0E0A               	movlw	10
  7346  003632  6E12               	movwf	___aomod@divisor^0,c
  7347  003634  0E00               	movlw	0
  7348  003636  6E13               	movwf	(___aomod@divisor+1)^0,c
  7349  003638  0E00               	movlw	0
  7350  00363A  6E14               	movwf	(___aomod@divisor+2)^0,c
  7351  00363C  0E00               	movlw	0
  7352  00363E  6E15               	movwf	(___aomod@divisor+3)^0,c
  7353  003640  0E00               	movlw	0
  7354  003642  6E16               	movwf	(___aomod@divisor+4)^0,c
  7355  003644  0E00               	movlw	0
  7356  003646  6E17               	movwf	(___aomod@divisor+5)^0,c
  7357  003648  0E00               	movlw	0
  7358  00364A  6E18               	movwf	(___aomod@divisor+6)^0,c
  7359  00364C  0E00               	movlw	0
  7360  00364E  6E19               	movwf	(___aomod@divisor+7)^0,c
  7361  003650  ECAE  F023         	call	___aomod	;wreg free
  7362  003654  C00A  F02F         	movff	?___aomod,??_dtoa
  7363  003658  C00B  F030         	movff	?___aomod+1,??_dtoa+1
  7364  00365C  C00C  F031         	movff	?___aomod+2,??_dtoa+2
  7365  003660  C00D  F032         	movff	?___aomod+3,??_dtoa+3
  7366  003664  C00E  F033         	movff	?___aomod+4,??_dtoa+4
  7367  003668  C00F  F034         	movff	?___aomod+5,??_dtoa+5
  7368  00366C  C010  F035         	movff	?___aomod+6,??_dtoa+6
  7369  003670  C011  F036         	movff	?___aomod+7,??_dtoa+7
  7370  003674  C02F  F01C         	movff	??_dtoa,abs@a
  7371  003678  C031  F01D         	movff	??_dtoa+2,abs@a+1
  7372  00367C  ECE4  F02F         	call	_abs	;wreg free
  7373  003680  501C               	movf	?_abs^0,w,c
  7374  003682  0F30               	addlw	48
  7375  003684  6EDF               	movwf	indf2,c
  7376  003686                     
  7377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7378  003686  0639               	decf	dtoa@p^0,f,c
  7379  003688  A0D8               	btfss	status,0,c
  7380  00368A  063A               	decf	(dtoa@p+1)^0,f,c
  7381  00368C                     
  7382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7383  00368C  063B               	decf	dtoa@w^0,f,c
  7384  00368E  A0D8               	btfss	status,0,c
  7385  003690  063C               	decf	(dtoa@w+1)^0,f,c
  7386  003692                     
  7387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7388  003692  C03F  F00A         	movff	dtoa@n,___aodiv@dividend
  7389  003696  C040  F00B         	movff	dtoa@n+1,___aodiv@dividend+1
  7390  00369A  C041  F00C         	movff	dtoa@n+2,___aodiv@dividend+2
  7391  00369E  C042  F00D         	movff	dtoa@n+3,___aodiv@dividend+3
  7392  0036A2  C043  F00E         	movff	dtoa@n+4,___aodiv@dividend+4
  7393  0036A6  C044  F00F         	movff	dtoa@n+5,___aodiv@dividend+5
  7394  0036AA  C045  F010         	movff	dtoa@n+6,___aodiv@dividend+6
  7395  0036AE  C046  F011         	movff	dtoa@n+7,___aodiv@dividend+7
  7396  0036B2  0E0A               	movlw	10
  7397  0036B4  6E12               	movwf	___aodiv@divisor^0,c
  7398  0036B6  0E00               	movlw	0
  7399  0036B8  6E13               	movwf	(___aodiv@divisor+1)^0,c
  7400  0036BA  0E00               	movlw	0
  7401  0036BC  6E14               	movwf	(___aodiv@divisor+2)^0,c
  7402  0036BE  0E00               	movlw	0
  7403  0036C0  6E15               	movwf	(___aodiv@divisor+3)^0,c
  7404  0036C2  0E00               	movlw	0
  7405  0036C4  6E16               	movwf	(___aodiv@divisor+4)^0,c
  7406  0036C6  0E00               	movlw	0
  7407  0036C8  6E17               	movwf	(___aodiv@divisor+5)^0,c
  7408  0036CA  0E00               	movlw	0
  7409  0036CC  6E18               	movwf	(___aodiv@divisor+6)^0,c
  7410  0036CE  0E00               	movlw	0
  7411  0036D0  6E19               	movwf	(___aodiv@divisor+7)^0,c
  7412  0036D2  EC2F  F022         	call	___aodiv	;wreg free
  7413  0036D6  C00A  F03F         	movff	?___aodiv,dtoa@n
  7414  0036DA  C00B  F040         	movff	?___aodiv+1,dtoa@n+1
  7415  0036DE  C00C  F041         	movff	?___aodiv+2,dtoa@n+2
  7416  0036E2  C00D  F042         	movff	?___aodiv+3,dtoa@n+3
  7417  0036E6  C00E  F043         	movff	?___aodiv+4,dtoa@n+4
  7418  0036EA  C00F  F044         	movff	?___aodiv+5,dtoa@n+5
  7419  0036EE  C010  F045         	movff	?___aodiv+6,dtoa@n+6
  7420  0036F2  C011  F046         	movff	?___aodiv+7,dtoa@n+7
  7421  0036F6                     l7798:
  7422                           
  7423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7424  0036F6  BE48               	btfsc	(dtoa@i+1)^0,7,c
  7425  0036F8  EF86  F01B         	goto	u10211
  7426  0036FC  5048               	movf	(dtoa@i+1)^0,w,c
  7427  0036FE  E108               	bnz	u10210
  7428  003700  0447               	decf	dtoa@i^0,w,c
  7429  003702  A0D8               	btfss	status,0,c
  7430  003704  EF86  F01B         	goto	u10211
  7431  003708  EF88  F01B         	goto	u10210
  7432  00370C                     u10211:
  7433  00370C  EFB8  F01B         	goto	l7808
  7434  003710                     u10210:
  7435  003710  503F               	movf	dtoa@n^0,w,c
  7436  003712  1040               	iorwf	(dtoa@n+1)^0,w,c
  7437  003714  1041               	iorwf	(dtoa@n+2)^0,w,c
  7438  003716  1042               	iorwf	(dtoa@n+3)^0,w,c
  7439  003718  1043               	iorwf	(dtoa@n+4)^0,w,c
  7440  00371A  1044               	iorwf	(dtoa@n+5)^0,w,c
  7441  00371C  1045               	iorwf	(dtoa@n+6)^0,w,c
  7442  00371E  1046               	iorwf	(dtoa@n+7)^0,w,c
  7443  003720  A4D8               	btfss	status,2,c
  7444  003722  EF95  F01B         	goto	u10221
  7445  003726  EF97  F01B         	goto	u10220
  7446  00372A                     u10221:
  7447  00372A  EFFF  F01A         	goto	l7788
  7448  00372E                     u10220:
  7449  00372E  BE3A               	btfsc	(dtoa@p+1)^0,7,c
  7450  003730  EFA4  F01B         	goto	u10230
  7451  003734  503A               	movf	(dtoa@p+1)^0,w,c
  7452  003736  E106               	bnz	u10231
  7453  003738  0439               	decf	dtoa@p^0,w,c
  7454  00373A  B0D8               	btfsc	status,0,c
  7455  00373C  EFA2  F01B         	goto	u10231
  7456  003740  EFA4  F01B         	goto	u10230
  7457  003744                     u10231:
  7458  003744  EFFF  F01A         	goto	l7788
  7459  003748                     u10230:
  7460  003748  BE3C               	btfsc	(dtoa@w+1)^0,7,c
  7461  00374A  EFAF  F01B         	goto	u10241
  7462  00374E  503C               	movf	(dtoa@w+1)^0,w,c
  7463  003750  E108               	bnz	u10240
  7464  003752  043B               	decf	dtoa@w^0,w,c
  7465  003754  A0D8               	btfss	status,0,c
  7466  003756  EFAF  F01B         	goto	u10241
  7467  00375A  EFB1  F01B         	goto	u10240
  7468  00375E                     u10241:
  7469  00375E  EFB8  F01B         	goto	l7808
  7470  003762                     u10240:
  7471  003762  B24F               	btfsc	_flags^0,1,c
  7472  003764  EFB6  F01B         	goto	u10251
  7473  003768  EFB8  F01B         	goto	u10250
  7474  00376C                     u10251:
  7475  00376C  EFFF  F01A         	goto	l7788
  7476  003770                     u10250:
  7477  003770                     l7808:
  7478                           
  7479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7480  003770  503D               	movf	dtoa@s^0,w,c
  7481  003772  103E               	iorwf	(dtoa@s+1)^0,w,c
  7482  003774  A4D8               	btfss	status,2,c
  7483  003776  EFBF  F01B         	goto	u10261
  7484  00377A  EFC1  F01B         	goto	u10260
  7485  00377E                     u10261:
  7486  00377E  EFC8  F01B         	goto	l7812
  7487  003782                     u10260:
  7488  003782  A44F               	btfss	_flags^0,2,c
  7489  003784  EFC6  F01B         	goto	u10271
  7490  003788  EFC8  F01B         	goto	u10270
  7491  00378C                     u10271:
  7492  00378C  EFE6  F01B         	goto	l7822
  7493  003790                     u10270:
  7494  003790                     l7812:
  7495                           
  7496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7497  003790  0647               	decf	dtoa@i^0,f,c
  7498  003792  A0D8               	btfss	status,0,c
  7499  003794  0648               	decf	(dtoa@i+1)^0,f,c
  7500  003796                     
  7501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7502  003796  503D               	movf	dtoa@s^0,w,c
  7503  003798  103E               	iorwf	(dtoa@s+1)^0,w,c
  7504  00379A  A4D8               	btfss	status,2,c
  7505  00379C  EFD2  F01B         	goto	u10281
  7506  0037A0  EFD4  F01B         	goto	u10280
  7507  0037A4                     u10281:
  7508  0037A4  EFDA  F01B         	goto	l7818
  7509  0037A8                     u10280:
  7510  0037A8  0E00               	movlw	0
  7511  0037AA  6E38               	movwf	(_dtoa$3104+1)^0,c
  7512  0037AC  0E2B               	movlw	43
  7513  0037AE  6E37               	movwf	_dtoa$3104^0,c
  7514  0037B0  EFDE  F01B         	goto	l7820
  7515  0037B4                     l7818:
  7516  0037B4  0E00               	movlw	0
  7517  0037B6  6E38               	movwf	(_dtoa$3104+1)^0,c
  7518  0037B8  0E2D               	movlw	45
  7519  0037BA  6E37               	movwf	_dtoa$3104^0,c
  7520  0037BC                     l7820:
  7521  0037BC  0E2C               	movlw	low _dbuf
  7522  0037BE  2447               	addwf	dtoa@i^0,w,c
  7523  0037C0  6ED9               	movwf	fsr2l,c
  7524  0037C2  0E01               	movlw	high _dbuf
  7525  0037C4  2048               	addwfc	(dtoa@i+1)^0,w,c
  7526  0037C6  6EDA               	movwf	fsr2h,c
  7527  0037C8  C037  FFDF         	movff	_dtoa$3104,indf2
  7528  0037CC                     l7822:
  7529                           
  7530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7531  0037CC  C025  F01A         	movff	dtoa@fp,pad@fp
  7532  0037D0  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
  7533  0037D4  0E2C               	movlw	low _dbuf
  7534  0037D6  2447               	addwf	dtoa@i^0,w,c
  7535  0037D8  6E1C               	movwf	pad@buf^0,c
  7536  0037DA  0E01               	movlw	high _dbuf
  7537  0037DC  2048               	addwfc	(dtoa@i+1)^0,w,c
  7538  0037DE  6E1D               	movwf	(pad@buf+1)^0,c
  7539  0037E0  C03B  F01E         	movff	dtoa@w,pad@p
  7540  0037E4  C03C  F01F         	movff	dtoa@w+1,pad@p+1
  7541  0037E8  ECB7  F02A         	call	_pad	;wreg free
  7542  0037EC  C01A  F025         	movff	?_pad,?_dtoa
  7543  0037F0  C01B  F026         	movff	?_pad+1,?_dtoa+1
  7544  0037F4  0012               	return		;funcret
  7545  0037F6                     __end_of_dtoa:
  7546                           	callstack 0
  7547                           
  7548 ;; *************** function _pad *****************
  7549 ;; Defined at:
  7550 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  7553 ;;		 -> sprintf@f(6), 
  7554 ;;  buf             2   27[COMRAM] PTR unsigned char 
  7555 ;;		 -> dbuf(80), 
  7556 ;;  p               2   29[COMRAM] int 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  w               2   34[COMRAM] int 
  7559 ;;  i               2   32[COMRAM] int 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  2   25[COMRAM] int 
  7562 ;; Registers used:
  7563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7569 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7570 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;Total ram usage:       11 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; Hardware stack levels required when called: 10
  7576 ;; This function calls:
  7577 ;;		_fputc
  7578 ;;		_fputs
  7579 ;;		_strlen
  7580 ;; This function is called by:
  7581 ;;		_dtoa
  7582 ;;		_efgtoa
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text27
  7587  00556E                     __ptext27:
  7588                           	callstack 0
  7589  00556E                     _pad:
  7590                           	callstack 14
  7591  00556E                     
  7592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7593  00556E  A04F               	btfss	_flags^0,0,c
  7594  005570  EFBC  F02A         	goto	u9811
  7595  005574  EFBE  F02A         	goto	u9810
  7596  005578                     u9811:
  7597  005578  EFC8  F02A         	goto	l7658
  7598  00557C                     u9810:
  7599  00557C                     
  7600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7601  00557C  C01C  F013         	movff	pad@buf,fputs@s
  7602  005580  C01D  F014         	movff	pad@buf+1,fputs@s+1
  7603  005584  C01A  F015         	movff	pad@fp,fputs@fp
  7604  005588  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  7605  00558C  EC7F  F02F         	call	_fputs	;wreg free
  7606  005590                     l7658:
  7607                           
  7608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7609  005590  BE1F               	btfsc	(pad@p+1)^0,7,c
  7610  005592  EFCD  F02A         	goto	u9821
  7611  005596  EFCF  F02A         	goto	u9820
  7612  00559A                     u9821:
  7613  00559A  EFD5  F02A         	goto	l7662
  7614  00559E                     u9820:
  7615  00559E  C01E  F023         	movff	pad@p,pad@w
  7616  0055A2  C01F  F024         	movff	pad@p+1,pad@w+1
  7617  0055A6  EFD9  F02A         	goto	l1521
  7618  0055AA                     l7662:
  7619  0055AA  0E00               	movlw	0
  7620  0055AC  6E24               	movwf	(pad@w+1)^0,c
  7621  0055AE  0E00               	movlw	0
  7622  0055B0  6E23               	movwf	pad@w^0,c
  7623  0055B2                     l1521:
  7624                           
  7625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7626  0055B2  0E00               	movlw	0
  7627  0055B4  6E22               	movwf	(pad@i+1)^0,c
  7628  0055B6  0E00               	movlw	0
  7629  0055B8  6E21               	movwf	pad@i^0,c
  7630                           
  7631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7632  0055BA  EFEB  F02A         	goto	l7668
  7633  0055BE                     l7664:
  7634                           
  7635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7636  0055BE  0E00               	movlw	0
  7637  0055C0  6E0B               	movwf	(fputc@c+1)^0,c
  7638  0055C2  0E20               	movlw	32
  7639  0055C4  6E0A               	movwf	fputc@c^0,c
  7640  0055C6  C01A  F00C         	movff	pad@fp,fputc@fp
  7641  0055CA  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
  7642  0055CE  ECF0  F029         	call	_fputc	;wreg free
  7643  0055D2                     
  7644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7645  0055D2  4A21               	infsnz	pad@i^0,f,c
  7646  0055D4  2A22               	incf	(pad@i+1)^0,f,c
  7647  0055D6                     l7668:
  7648                           
  7649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7650  0055D6  5023               	movf	pad@w^0,w,c
  7651  0055D8  5C21               	subwf	pad@i^0,w,c
  7652  0055DA  5022               	movf	(pad@i+1)^0,w,c
  7653  0055DC  0A80               	xorlw	128
  7654  0055DE  6E20               	movwf	??_pad^0,c
  7655  0055E0  5024               	movf	(pad@w+1)^0,w,c
  7656  0055E2  0A80               	xorlw	128
  7657  0055E4  5820               	subwfb	??_pad^0,w,c
  7658  0055E6  A0D8               	btfss	status,0,c
  7659  0055E8  EFF8  F02A         	goto	u9831
  7660  0055EC  EFFA  F02A         	goto	u9830
  7661  0055F0                     u9831:
  7662  0055F0  EFDF  F02A         	goto	l7664
  7663  0055F4                     u9830:
  7664  0055F4                     
  7665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7666  0055F4  B04F               	btfsc	_flags^0,0,c
  7667  0055F6  EFFF  F02A         	goto	u9841
  7668  0055FA  EF01  F02B         	goto	u9840
  7669  0055FE                     u9841:
  7670  0055FE  EF0B  F02B         	goto	l7672
  7671  005602                     u9840:
  7672  005602                     
  7673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7674  005602  C01C  F013         	movff	pad@buf,fputs@s
  7675  005606  C01D  F014         	movff	pad@buf+1,fputs@s+1
  7676  00560A  C01A  F015         	movff	pad@fp,fputs@fp
  7677  00560E  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  7678  005612  EC7F  F02F         	call	_fputs	;wreg free
  7679  005616                     l7672:
  7680                           
  7681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7682  005616  C01C  F00A         	movff	pad@buf,strlen@s
  7683  00561A  C01D  F00B         	movff	pad@buf+1,strlen@s+1
  7684  00561E  ECCE  F02D         	call	_strlen	;wreg free
  7685  005622  5023               	movf	pad@w^0,w,c
  7686  005624  240A               	addwf	?_strlen^0,w,c
  7687  005626  6E1A               	movwf	?_pad^0,c
  7688  005628  5024               	movf	(pad@w+1)^0,w,c
  7689  00562A  200B               	addwfc	(?_strlen+1)^0,w,c
  7690  00562C  6E1B               	movwf	(?_pad+1)^0,c
  7691  00562E  0012               	return		;funcret
  7692  005630                     __end_of_pad:
  7693                           	callstack 0
  7694                           
  7695 ;; *************** function _strlen *****************
  7696 ;; Defined at:
  7697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7700 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  7701 ;;		 -> STR_16(6), STR_14(5), STR_12(7), STR_10(11), 
  7702 ;;		 -> STR_8(6), STR_6(5), STR_4(4), STR_2(7), 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  a               2   11[COMRAM] PTR const unsigned char 
  7705 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  7706 ;;		 -> STR_16(6), STR_14(5), STR_12(7), STR_10(11), 
  7707 ;;		 -> STR_8(6), STR_6(5), STR_4(4), STR_2(7), 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  2    9[COMRAM] unsigned int 
  7710 ;; Registers used:
  7711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7721 ;;Total ram usage:        4 bytes
  7722 ;; Hardware stack levels used: 1
  7723 ;; Hardware stack levels required when called: 7
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_pad
  7728 ;;		_stoa
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	text28
  7733  005B9C                     __ptext28:
  7734                           	callstack 0
  7735  005B9C                     _strlen:
  7736                           	callstack 17
  7737  005B9C  C00A  F00C         	movff	strlen@s,strlen@a
  7738  005BA0  C00B  F00D         	movff	strlen@s+1,strlen@a+1
  7739  005BA4  EFD6  F02D         	goto	l7114
  7740  005BA8                     l7112:
  7741  005BA8  4A0A               	infsnz	strlen@s^0,f,c
  7742  005BAA  2A0B               	incf	(strlen@s+1)^0,f,c
  7743  005BAC                     l7114:
  7744  005BAC  C00A  FFF6         	movff	strlen@s,tblptrl
  7745  005BB0  C00B  FFF7         	movff	strlen@s+1,tblptrh
  7746  005BB4  0E00               	movlw	low (__smallconst shr (0+16))
  7747  005BB6  6EF8               	movwf	tblptru,c
  7748  005BB8  0E0D               	movlw	(high __ramtop+-1)
  7749  005BBA  64F7               	cpfsgt	tblptrh,c
  7750  005BBC  D003               	bra	u8947
  7751  005BBE  0008               	tblrd		*
  7752  005BC0  50F5               	movf	tablat,w,c
  7753  005BC2  D005               	bra	u8940
  7754  005BC4                     u8947:
  7755  005BC4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7756  005BC8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7757  005BCC  50E7               	movf	indf1,w,c
  7758  005BCE                     u8940:
  7759  005BCE  0900               	iorlw	0
  7760  005BD0  A4D8               	btfss	status,2,c
  7761  005BD2  EFED  F02D         	goto	u8951
  7762  005BD6  EFEF  F02D         	goto	u8950
  7763  005BDA                     u8951:
  7764  005BDA  EFD4  F02D         	goto	l7112
  7765  005BDE                     u8950:
  7766  005BDE  500C               	movf	strlen@a^0,w,c
  7767  005BE0  5C0A               	subwf	strlen@s^0,w,c
  7768  005BE2  6E0A               	movwf	?_strlen^0,c
  7769  005BE4  500D               	movf	(strlen@a+1)^0,w,c
  7770  005BE6  580B               	subwfb	(strlen@s+1)^0,w,c
  7771  005BE8  6E0B               	movwf	(?_strlen+1)^0,c
  7772  005BEA  0012               	return		;funcret
  7773  005BEC                     __end_of_strlen:
  7774                           	callstack 0
  7775                           
  7776 ;; *************** function _fputs *****************
  7777 ;; Defined at:
  7778 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  s               2   18[COMRAM] PTR const unsigned char 
  7781 ;;		 -> dbuf(80), 
  7782 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  7783 ;;		 -> sprintf@f(6), 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  i               2   23[COMRAM] int 
  7786 ;;  c               1   22[COMRAM] unsigned char 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  2   18[COMRAM] int 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7800 ;;Total ram usage:        7 bytes
  7801 ;; Hardware stack levels used: 1
  7802 ;; Hardware stack levels required when called: 9
  7803 ;; This function calls:
  7804 ;;		_fputc
  7805 ;; This function is called by:
  7806 ;;		_pad
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text29
  7811  005EFE                     __ptext29:
  7812                           	callstack 0
  7813  005EFE                     _fputs:
  7814                           	callstack 14
  7815  005EFE  0E00               	movlw	0
  7816  005F00  6E19               	movwf	(fputs@i+1)^0,c
  7817  005F02  0E00               	movlw	0
  7818  005F04  6E18               	movwf	fputs@i^0,c
  7819  005F06  EF90  F02F         	goto	l7108
  7820  005F0A                     l7104:
  7821  005F0A  C017  F00A         	movff	fputs@c,fputc@c
  7822  005F0E  6A0B               	clrf	(fputc@c+1)^0,c
  7823  005F10  C015  F00C         	movff	fputs@fp,fputc@fp
  7824  005F14  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
  7825  005F18  ECF0  F029         	call	_fputc	;wreg free
  7826  005F1C  4A18               	infsnz	fputs@i^0,f,c
  7827  005F1E  2A19               	incf	(fputs@i+1)^0,f,c
  7828  005F20                     l7108:
  7829  005F20  5018               	movf	fputs@i^0,w,c
  7830  005F22  2413               	addwf	fputs@s^0,w,c
  7831  005F24  6ED9               	movwf	fsr2l,c
  7832  005F26  5019               	movf	(fputs@i+1)^0,w,c
  7833  005F28  2014               	addwfc	(fputs@s+1)^0,w,c
  7834  005F2A  6EDA               	movwf	fsr2h,c
  7835  005F2C  50DF               	movf	indf2,w,c
  7836  005F2E  6E17               	movwf	fputs@c^0,c
  7837  005F30  5017               	movf	fputs@c^0,w,c
  7838  005F32  A4D8               	btfss	status,2,c
  7839  005F34  EF9E  F02F         	goto	u8931
  7840  005F38  EFA0  F02F         	goto	u8930
  7841  005F3C                     u8931:
  7842  005F3C  EF85  F02F         	goto	l7104
  7843  005F40                     u8930:
  7844  005F40  0012               	return		;funcret
  7845  005F42                     __end_of_fputs:
  7846                           	callstack 0
  7847                           
  7848 ;; *************** function _fputc *****************
  7849 ;; Defined at:
  7850 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  c               2    9[COMRAM] int 
  7853 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7854 ;;		 -> sprintf@f(6), 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  2    9[COMRAM] int 
  7859 ;; Registers used:
  7860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7868 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7869 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7870 ;;Total ram usage:        9 bytes
  7871 ;; Hardware stack levels used: 1
  7872 ;; Hardware stack levels required when called: 8
  7873 ;; This function calls:
  7874 ;;		_putch
  7875 ;; This function is called by:
  7876 ;;		_pad
  7877 ;;		_stoa
  7878 ;;		_vfpfcnvrt
  7879 ;;		_fputs
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text30
  7884  0053E0                     __ptext30:
  7885                           	callstack 0
  7886  0053E0                     _fputc:
  7887                           	callstack 16
  7888  0053E0  500C               	movf	fputc@fp^0,w,c
  7889  0053E2  100D               	iorwf	(fputc@fp+1)^0,w,c
  7890  0053E4  B4D8               	btfsc	status,2,c
  7891  0053E6  EFF7  F029         	goto	u8501
  7892  0053EA  EFF9  F029         	goto	u8500
  7893  0053EE                     u8501:
  7894  0053EE  EF02  F02A         	goto	l6890
  7895  0053F2                     u8500:
  7896  0053F2  500C               	movf	fputc@fp^0,w,c
  7897  0053F4  100D               	iorwf	(fputc@fp+1)^0,w,c
  7898  0053F6  A4D8               	btfss	status,2,c
  7899  0053F8  EF00  F02A         	goto	u8511
  7900  0053FC  EF02  F02A         	goto	u8510
  7901  005400                     u8511:
  7902  005400  EF07  F02A         	goto	l6892
  7903  005404                     u8510:
  7904  005404                     l6890:
  7905  005404  500A               	movf	fputc@c^0,w,c
  7906  005406  ECC4  F031         	call	_putch
  7907  00540A  EF54  F02A         	goto	l1797
  7908  00540E                     l6892:
  7909  00540E  EE20 F004          	lfsr	2,4
  7910  005412  500C               	movf	fputc@fp^0,w,c
  7911  005414  26D9               	addwf	fsr2l,f,c
  7912  005416  500D               	movf	(fputc@fp+1)^0,w,c
  7913  005418  22DA               	addwfc	fsr2h,f,c
  7914  00541A  50DE               	movf	postinc2,w,c
  7915  00541C  10DE               	iorwf	postinc2,w,c
  7916  00541E  B4D8               	btfsc	status,2,c
  7917  005420  EF14  F02A         	goto	u8521
  7918  005424  EF16  F02A         	goto	u8520
  7919  005428                     u8521:
  7920  005428  EF31  F02A         	goto	l6896
  7921  00542C                     u8520:
  7922  00542C  EE20 F004          	lfsr	2,4
  7923  005430  500C               	movf	fputc@fp^0,w,c
  7924  005432  26D9               	addwf	fsr2l,f,c
  7925  005434  500D               	movf	(fputc@fp+1)^0,w,c
  7926  005436  22DA               	addwfc	fsr2h,f,c
  7927  005438  EE10 F002          	lfsr	1,2
  7928  00543C  500C               	movf	fputc@fp^0,w,c
  7929  00543E  26E1               	addwf	fsr1l,f,c
  7930  005440  500D               	movf	(fputc@fp+1)^0,w,c
  7931  005442  22E2               	addwfc	fsr1h,f,c
  7932  005444  50DE               	movf	postinc2,w,c
  7933  005446  5CE6               	subwf	postinc1,w,c
  7934  005448  50E6               	movf	postinc1,w,c
  7935  00544A  0A80               	xorlw	128
  7936  00544C  6E12               	movwf	(??_fputc+4)^0,c
  7937  00544E  50DE               	movf	postinc2,w,c
  7938  005450  0A80               	xorlw	128
  7939  005452  5812               	subwfb	(??_fputc+4)^0,w,c
  7940  005454  B0D8               	btfsc	status,0,c
  7941  005456  EF2F  F02A         	goto	u8531
  7942  00545A  EF31  F02A         	goto	u8530
  7943  00545E                     u8531:
  7944  00545E  EF54  F02A         	goto	l1797
  7945  005462                     u8530:
  7946  005462                     l6896:
  7947  005462  EE20 F002          	lfsr	2,2
  7948  005466  500C               	movf	fputc@fp^0,w,c
  7949  005468  26D9               	addwf	fsr2l,f,c
  7950  00546A  500D               	movf	(fputc@fp+1)^0,w,c
  7951  00546C  22DA               	addwfc	fsr2h,f,c
  7952  00546E  CFDE F00E          	movff	postinc2,??_fputc
  7953  005472  CFDD F00F          	movff	postdec2,??_fputc+1
  7954  005476  C00C  FFD9         	movff	fputc@fp,fsr2l
  7955  00547A  C00D  FFDA         	movff	fputc@fp+1,fsr2h
  7956  00547E  CFDE F010          	movff	postinc2,??_fputc+2
  7957  005482  CFDD F011          	movff	postdec2,??_fputc+3
  7958  005486  500E               	movf	??_fputc^0,w,c
  7959  005488  2410               	addwf	(??_fputc+2)^0,w,c
  7960  00548A  6ED9               	movwf	fsr2l,c
  7961  00548C  500F               	movf	(??_fputc+1)^0,w,c
  7962  00548E  2011               	addwfc	(??_fputc+3)^0,w,c
  7963  005490  6EDA               	movwf	fsr2h,c
  7964  005492  C00A  FFDF         	movff	fputc@c,indf2
  7965  005496  EE20 F002          	lfsr	2,2
  7966  00549A  500C               	movf	fputc@fp^0,w,c
  7967  00549C  26D9               	addwf	fsr2l,f,c
  7968  00549E  500D               	movf	(fputc@fp+1)^0,w,c
  7969  0054A0  22DA               	addwfc	fsr2h,f,c
  7970  0054A2  2ADE               	incf	postinc2,f,c
  7971  0054A4  0E00               	movlw	0
  7972  0054A6  22DD               	addwfc	postdec2,f,c
  7973  0054A8                     l1797:
  7974  0054A8  0012               	return		;funcret
  7975  0054AA                     __end_of_fputc:
  7976                           	callstack 0
  7977                           
  7978 ;; *************** function _putch *****************
  7979 ;; Defined at:
  7980 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  c               1    wreg     unsigned char 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  c               1    0[COMRAM] unsigned char 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		wreg
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7998 ;;Total ram usage:        0 bytes
  7999 ;; Hardware stack levels used: 1
  8000 ;; Hardware stack levels required when called: 7
  8001 ;; This function calls:
  8002 ;;		Nothing
  8003 ;; This function is called by:
  8004 ;;		_fputc
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text31
  8009  006388                     __ptext31:
  8010                           	callstack 0
  8011  006388                     _putch:
  8012                           	callstack 16
  8013  006388  0012               	return		;funcret
  8014  00638A                     __end_of_putch:
  8015                           	callstack 0
  8016                           
  8017 ;; *************** function _abs *****************
  8018 ;; Defined at:
  8019 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  a               2   27[COMRAM] int 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  2   27[COMRAM] int 
  8026 ;; Registers used:
  8027 ;;		wreg, status,2, status,0
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8037 ;;Total ram usage:        4 bytes
  8038 ;; Hardware stack levels used: 1
  8039 ;; Hardware stack levels required when called: 7
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_dtoa
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           	psect	text32
  8048  005FC8                     __ptext32:
  8049                           	callstack 0
  8050  005FC8                     _abs:
  8051                           	callstack 17
  8052  005FC8  BE1D               	btfsc	(abs@a+1)^0,7,c
  8053  005FCA  EFF1  F02F         	goto	u9850
  8054  005FCE  501D               	movf	(abs@a+1)^0,w,c
  8055  005FD0  E106               	bnz	u9851
  8056  005FD2  041C               	decf	abs@a^0,w,c
  8057  005FD4  B0D8               	btfsc	status,0,c
  8058  005FD6  EFEF  F02F         	goto	u9851
  8059  005FDA  EFF1  F02F         	goto	u9850
  8060  005FDE                     u9851:
  8061  005FDE  EFFF  F02F         	goto	l1718
  8062  005FE2                     u9850:
  8063  005FE2  C01C  F01E         	movff	abs@a,??_abs
  8064  005FE6  C01D  F01F         	movff	abs@a+1,??_abs+1
  8065  005FEA  1E1E               	comf	??_abs^0,f,c
  8066  005FEC  1E1F               	comf	(??_abs+1)^0,f,c
  8067  005FEE  4A1E               	infsnz	??_abs^0,f,c
  8068  005FF0  2A1F               	incf	(??_abs+1)^0,f,c
  8069  005FF2  C01E  F01C         	movff	??_abs,?_abs
  8070  005FF6  C01F  F01D         	movff	??_abs+1,?_abs+1
  8071  005FFA  EF03  F030         	goto	l1721
  8072  005FFE                     l1718:
  8073  005FFE  C01C  F01C         	movff	abs@a,?_abs
  8074  006002  C01D  F01D         	movff	abs@a+1,?_abs+1
  8075  006006                     l1721:
  8076  006006  0012               	return		;funcret
  8077  006008                     __end_of_abs:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function ___aomod *****************
  8081 ;; Defined at:
  8082 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  dividend        8    9[COMRAM] long long 
  8085 ;;  divisor         8   17[COMRAM] long long 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  sign            1   26[COMRAM] unsigned char 
  8088 ;;  counter         1   25[COMRAM] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  8    9[COMRAM] long long 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8098 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8102 ;;Total ram usage:       18 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 7
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		_dtoa
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           	psect	text33
  8113  00475C                     __ptext33:
  8114                           	callstack 0
  8115  00475C                     ___aomod:
  8116                           	callstack 17
  8117  00475C  0E00               	movlw	0
  8118  00475E  6E1B               	movwf	___aomod@sign^0,c
  8119  004760  BE11               	btfsc	(___aomod@dividend+7)^0,7,c
  8120  004762  EFB7  F023         	goto	u9050
  8121  004766  EFB5  F023         	goto	u9051
  8122  00476A                     u9051:
  8123  00476A  EFC9  F023         	goto	l7182
  8124  00476E                     u9050:
  8125  00476E  1E11               	comf	(___aomod@dividend+7)^0,f,c
  8126  004770  1E10               	comf	(___aomod@dividend+6)^0,f,c
  8127  004772  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  8128  004774  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  8129  004776  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  8130  004778  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  8131  00477A  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  8132  00477C  6C0A               	negf	___aomod@dividend^0,c
  8133  00477E  0E00               	movlw	0
  8134  004780  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  8135  004782  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  8136  004784  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  8137  004786  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  8138  004788  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  8139  00478A  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  8140  00478C  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  8141  00478E  0E01               	movlw	1
  8142  004790  6E1B               	movwf	___aomod@sign^0,c
  8143  004792                     l7182:
  8144  004792  BE19               	btfsc	(___aomod@divisor+7)^0,7,c
  8145  004794  EFD0  F023         	goto	u9060
  8146  004798  EFCE  F023         	goto	u9061
  8147  00479C                     u9061:
  8148  00479C  EFE0  F023         	goto	l7186
  8149  0047A0                     u9060:
  8150  0047A0  1E19               	comf	(___aomod@divisor+7)^0,f,c
  8151  0047A2  1E18               	comf	(___aomod@divisor+6)^0,f,c
  8152  0047A4  1E17               	comf	(___aomod@divisor+5)^0,f,c
  8153  0047A6  1E16               	comf	(___aomod@divisor+4)^0,f,c
  8154  0047A8  1E15               	comf	(___aomod@divisor+3)^0,f,c
  8155  0047AA  1E14               	comf	(___aomod@divisor+2)^0,f,c
  8156  0047AC  1E13               	comf	(___aomod@divisor+1)^0,f,c
  8157  0047AE  6C12               	negf	___aomod@divisor^0,c
  8158  0047B0  0E00               	movlw	0
  8159  0047B2  2213               	addwfc	(___aomod@divisor+1)^0,f,c
  8160  0047B4  2214               	addwfc	(___aomod@divisor+2)^0,f,c
  8161  0047B6  2215               	addwfc	(___aomod@divisor+3)^0,f,c
  8162  0047B8  2216               	addwfc	(___aomod@divisor+4)^0,f,c
  8163  0047BA  2217               	addwfc	(___aomod@divisor+5)^0,f,c
  8164  0047BC  2218               	addwfc	(___aomod@divisor+6)^0,f,c
  8165  0047BE  2219               	addwfc	(___aomod@divisor+7)^0,f,c
  8166  0047C0                     l7186:
  8167  0047C0  5012               	movf	___aomod@divisor^0,w,c
  8168  0047C2  1013               	iorwf	(___aomod@divisor+1)^0,w,c
  8169  0047C4  1014               	iorwf	(___aomod@divisor+2)^0,w,c
  8170  0047C6  1015               	iorwf	(___aomod@divisor+3)^0,w,c
  8171  0047C8  1016               	iorwf	(___aomod@divisor+4)^0,w,c
  8172  0047CA  1017               	iorwf	(___aomod@divisor+5)^0,w,c
  8173  0047CC  1018               	iorwf	(___aomod@divisor+6)^0,w,c
  8174  0047CE  1019               	iorwf	(___aomod@divisor+7)^0,w,c
  8175  0047D0  B4D8               	btfsc	status,2,c
  8176  0047D2  EFED  F023         	goto	u9071
  8177  0047D6  EFEF  F023         	goto	u9070
  8178  0047DA                     u9071:
  8179  0047DA  EF37  F024         	goto	l7202
  8180  0047DE                     u9070:
  8181  0047DE  0E01               	movlw	1
  8182  0047E0  6E1A               	movwf	___aomod@counter^0,c
  8183  0047E2  EFFD  F023         	goto	l7192
  8184  0047E6                     l7190:
  8185  0047E6  90D8               	bcf	status,0,c
  8186  0047E8  3612               	rlcf	___aomod@divisor^0,f,c
  8187  0047EA  3613               	rlcf	(___aomod@divisor+1)^0,f,c
  8188  0047EC  3614               	rlcf	(___aomod@divisor+2)^0,f,c
  8189  0047EE  3615               	rlcf	(___aomod@divisor+3)^0,f,c
  8190  0047F0  3616               	rlcf	(___aomod@divisor+4)^0,f,c
  8191  0047F2  3617               	rlcf	(___aomod@divisor+5)^0,f,c
  8192  0047F4  3618               	rlcf	(___aomod@divisor+6)^0,f,c
  8193  0047F6  3619               	rlcf	(___aomod@divisor+7)^0,f,c
  8194  0047F8  2A1A               	incf	___aomod@counter^0,f,c
  8195  0047FA                     l7192:
  8196  0047FA  AE19               	btfss	(___aomod@divisor+7)^0,7,c
  8197  0047FC  EF02  F024         	goto	u9081
  8198  004800  EF04  F024         	goto	u9080
  8199  004804                     u9081:
  8200  004804  EFF3  F023         	goto	l7190
  8201  004808                     u9080:
  8202  004808                     l7194:
  8203  004808  5012               	movf	___aomod@divisor^0,w,c
  8204  00480A  5C0A               	subwf	___aomod@dividend^0,w,c
  8205  00480C  5013               	movf	(___aomod@divisor+1)^0,w,c
  8206  00480E  580B               	subwfb	(___aomod@dividend+1)^0,w,c
  8207  004810  5014               	movf	(___aomod@divisor+2)^0,w,c
  8208  004812  580C               	subwfb	(___aomod@dividend+2)^0,w,c
  8209  004814  5015               	movf	(___aomod@divisor+3)^0,w,c
  8210  004816  580D               	subwfb	(___aomod@dividend+3)^0,w,c
  8211  004818  5016               	movf	(___aomod@divisor+4)^0,w,c
  8212  00481A  580E               	subwfb	(___aomod@dividend+4)^0,w,c
  8213  00481C  5017               	movf	(___aomod@divisor+5)^0,w,c
  8214  00481E  580F               	subwfb	(___aomod@dividend+5)^0,w,c
  8215  004820  5018               	movf	(___aomod@divisor+6)^0,w,c
  8216  004822  5810               	subwfb	(___aomod@dividend+6)^0,w,c
  8217  004824  5019               	movf	(___aomod@divisor+7)^0,w,c
  8218  004826  5811               	subwfb	(___aomod@dividend+7)^0,w,c
  8219  004828  A0D8               	btfss	status,0,c
  8220  00482A  EF19  F024         	goto	u9091
  8221  00482E  EF1B  F024         	goto	u9090
  8222  004832                     u9091:
  8223  004832  EF2B  F024         	goto	l7198
  8224  004836                     u9090:
  8225  004836  5012               	movf	___aomod@divisor^0,w,c
  8226  004838  5E0A               	subwf	___aomod@dividend^0,f,c
  8227  00483A  5013               	movf	(___aomod@divisor+1)^0,w,c
  8228  00483C  5A0B               	subwfb	(___aomod@dividend+1)^0,f,c
  8229  00483E  5014               	movf	(___aomod@divisor+2)^0,w,c
  8230  004840  5A0C               	subwfb	(___aomod@dividend+2)^0,f,c
  8231  004842  5015               	movf	(___aomod@divisor+3)^0,w,c
  8232  004844  5A0D               	subwfb	(___aomod@dividend+3)^0,f,c
  8233  004846  5016               	movf	(___aomod@divisor+4)^0,w,c
  8234  004848  5A0E               	subwfb	(___aomod@dividend+4)^0,f,c
  8235  00484A  5017               	movf	(___aomod@divisor+5)^0,w,c
  8236  00484C  5A0F               	subwfb	(___aomod@dividend+5)^0,f,c
  8237  00484E  5018               	movf	(___aomod@divisor+6)^0,w,c
  8238  004850  5A10               	subwfb	(___aomod@dividend+6)^0,f,c
  8239  004852  5019               	movf	(___aomod@divisor+7)^0,w,c
  8240  004854  5A11               	subwfb	(___aomod@dividend+7)^0,f,c
  8241  004856                     l7198:
  8242  004856  90D8               	bcf	status,0,c
  8243  004858  3219               	rrcf	(___aomod@divisor+7)^0,f,c
  8244  00485A  3218               	rrcf	(___aomod@divisor+6)^0,f,c
  8245  00485C  3217               	rrcf	(___aomod@divisor+5)^0,f,c
  8246  00485E  3216               	rrcf	(___aomod@divisor+4)^0,f,c
  8247  004860  3215               	rrcf	(___aomod@divisor+3)^0,f,c
  8248  004862  3214               	rrcf	(___aomod@divisor+2)^0,f,c
  8249  004864  3213               	rrcf	(___aomod@divisor+1)^0,f,c
  8250  004866  3212               	rrcf	___aomod@divisor^0,f,c
  8251  004868  2E1A               	decfsz	___aomod@counter^0,f,c
  8252  00486A  EF04  F024         	goto	l7194
  8253  00486E                     l7202:
  8254  00486E  501B               	movf	___aomod@sign^0,w,c
  8255  004870  B4D8               	btfsc	status,2,c
  8256  004872  EF3D  F024         	goto	u9101
  8257  004876  EF3F  F024         	goto	u9100
  8258  00487A                     u9101:
  8259  00487A  EF4F  F024         	goto	l7206
  8260  00487E                     u9100:
  8261  00487E  1E11               	comf	(___aomod@dividend+7)^0,f,c
  8262  004880  1E10               	comf	(___aomod@dividend+6)^0,f,c
  8263  004882  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  8264  004884  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  8265  004886  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  8266  004888  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  8267  00488A  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  8268  00488C  6C0A               	negf	___aomod@dividend^0,c
  8269  00488E  0E00               	movlw	0
  8270  004890  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  8271  004892  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  8272  004894  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  8273  004896  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  8274  004898  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  8275  00489A  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  8276  00489C  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  8277  00489E                     l7206:
  8278  00489E  C00A  F00A         	movff	___aomod@dividend,?___aomod
  8279  0048A2  C00B  F00B         	movff	___aomod@dividend+1,?___aomod+1
  8280  0048A6  C00C  F00C         	movff	___aomod@dividend+2,?___aomod+2
  8281  0048AA  C00D  F00D         	movff	___aomod@dividend+3,?___aomod+3
  8282  0048AE  C00E  F00E         	movff	___aomod@dividend+4,?___aomod+4
  8283  0048B2  C00F  F00F         	movff	___aomod@dividend+5,?___aomod+5
  8284  0048B6  C010  F010         	movff	___aomod@dividend+6,?___aomod+6
  8285  0048BA  C011  F011         	movff	___aomod@dividend+7,?___aomod+7
  8286  0048BE  0012               	return		;funcret
  8287  0048C0                     __end_of___aomod:
  8288                           	callstack 0
  8289                           
  8290 ;; *************** function ___aodiv *****************
  8291 ;; Defined at:
  8292 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  dividend        8    9[COMRAM] long long 
  8295 ;;  divisor         8   17[COMRAM] long long 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;  quotient        8   27[COMRAM] long long 
  8298 ;;  sign            1   26[COMRAM] unsigned char 
  8299 ;;  counter         1   25[COMRAM] unsigned char 
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  8    9[COMRAM] long long 
  8302 ;; Registers used:
  8303 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8309 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8310 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;Total ram usage:       26 bytes
  8314 ;; Hardware stack levels used: 1
  8315 ;; Hardware stack levels required when called: 7
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_dtoa
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text34
  8324  00445E                     __ptext34:
  8325                           	callstack 0
  8326  00445E                     ___aodiv:
  8327                           	callstack 17
  8328  00445E  0E00               	movlw	0
  8329  004460  6E1B               	movwf	___aodiv@sign^0,c
  8330  004462  BE19               	btfsc	(___aodiv@divisor+7)^0,7,c
  8331  004464  EF38  F022         	goto	u8980
  8332  004468  EF36  F022         	goto	u8981
  8333  00446C                     u8981:
  8334  00446C  EF4A  F022         	goto	l7138
  8335  004470                     u8980:
  8336  004470  1E19               	comf	(___aodiv@divisor+7)^0,f,c
  8337  004472  1E18               	comf	(___aodiv@divisor+6)^0,f,c
  8338  004474  1E17               	comf	(___aodiv@divisor+5)^0,f,c
  8339  004476  1E16               	comf	(___aodiv@divisor+4)^0,f,c
  8340  004478  1E15               	comf	(___aodiv@divisor+3)^0,f,c
  8341  00447A  1E14               	comf	(___aodiv@divisor+2)^0,f,c
  8342  00447C  1E13               	comf	(___aodiv@divisor+1)^0,f,c
  8343  00447E  6C12               	negf	___aodiv@divisor^0,c
  8344  004480  0E00               	movlw	0
  8345  004482  2213               	addwfc	(___aodiv@divisor+1)^0,f,c
  8346  004484  2214               	addwfc	(___aodiv@divisor+2)^0,f,c
  8347  004486  2215               	addwfc	(___aodiv@divisor+3)^0,f,c
  8348  004488  2216               	addwfc	(___aodiv@divisor+4)^0,f,c
  8349  00448A  2217               	addwfc	(___aodiv@divisor+5)^0,f,c
  8350  00448C  2218               	addwfc	(___aodiv@divisor+6)^0,f,c
  8351  00448E  2219               	addwfc	(___aodiv@divisor+7)^0,f,c
  8352  004490  0E01               	movlw	1
  8353  004492  6E1B               	movwf	___aodiv@sign^0,c
  8354  004494                     l7138:
  8355  004494  BE11               	btfsc	(___aodiv@dividend+7)^0,7,c
  8356  004496  EF51  F022         	goto	u8990
  8357  00449A  EF4F  F022         	goto	u8991
  8358  00449E                     u8991:
  8359  00449E  EF63  F022         	goto	l7144
  8360  0044A2                     u8990:
  8361  0044A2  1E11               	comf	(___aodiv@dividend+7)^0,f,c
  8362  0044A4  1E10               	comf	(___aodiv@dividend+6)^0,f,c
  8363  0044A6  1E0F               	comf	(___aodiv@dividend+5)^0,f,c
  8364  0044A8  1E0E               	comf	(___aodiv@dividend+4)^0,f,c
  8365  0044AA  1E0D               	comf	(___aodiv@dividend+3)^0,f,c
  8366  0044AC  1E0C               	comf	(___aodiv@dividend+2)^0,f,c
  8367  0044AE  1E0B               	comf	(___aodiv@dividend+1)^0,f,c
  8368  0044B0  6C0A               	negf	___aodiv@dividend^0,c
  8369  0044B2  0E00               	movlw	0
  8370  0044B4  220B               	addwfc	(___aodiv@dividend+1)^0,f,c
  8371  0044B6  220C               	addwfc	(___aodiv@dividend+2)^0,f,c
  8372  0044B8  220D               	addwfc	(___aodiv@dividend+3)^0,f,c
  8373  0044BA  220E               	addwfc	(___aodiv@dividend+4)^0,f,c
  8374  0044BC  220F               	addwfc	(___aodiv@dividend+5)^0,f,c
  8375  0044BE  2210               	addwfc	(___aodiv@dividend+6)^0,f,c
  8376  0044C0  2211               	addwfc	(___aodiv@dividend+7)^0,f,c
  8377  0044C2  0E01               	movlw	1
  8378  0044C4  1A1B               	xorwf	___aodiv@sign^0,f,c
  8379  0044C6                     l7144:
  8380  0044C6  EE20  F01C         	lfsr	2,___aodiv@quotient
  8381  0044CA  0E07               	movlw	7
  8382  0044CC                     u9001:
  8383  0044CC  6ADE               	clrf	postinc2,c
  8384  0044CE  06E8               	decf	wreg,f,c
  8385  0044D0  E2FD               	bc	u9001
  8386  0044D2  5012               	movf	___aodiv@divisor^0,w,c
  8387  0044D4  1013               	iorwf	(___aodiv@divisor+1)^0,w,c
  8388  0044D6  1014               	iorwf	(___aodiv@divisor+2)^0,w,c
  8389  0044D8  1015               	iorwf	(___aodiv@divisor+3)^0,w,c
  8390  0044DA  1016               	iorwf	(___aodiv@divisor+4)^0,w,c
  8391  0044DC  1017               	iorwf	(___aodiv@divisor+5)^0,w,c
  8392  0044DE  1018               	iorwf	(___aodiv@divisor+6)^0,w,c
  8393  0044E0  1019               	iorwf	(___aodiv@divisor+7)^0,w,c
  8394  0044E2  B4D8               	btfsc	status,2,c
  8395  0044E4  EF76  F022         	goto	u9011
  8396  0044E8  EF78  F022         	goto	u9010
  8397  0044EC                     u9011:
  8398  0044EC  EFCA  F022         	goto	l7166
  8399  0044F0                     u9010:
  8400  0044F0  0E01               	movlw	1
  8401  0044F2  6E1A               	movwf	___aodiv@counter^0,c
  8402  0044F4  EF86  F022         	goto	l7152
  8403  0044F8                     l7150:
  8404  0044F8  90D8               	bcf	status,0,c
  8405  0044FA  3612               	rlcf	___aodiv@divisor^0,f,c
  8406  0044FC  3613               	rlcf	(___aodiv@divisor+1)^0,f,c
  8407  0044FE  3614               	rlcf	(___aodiv@divisor+2)^0,f,c
  8408  004500  3615               	rlcf	(___aodiv@divisor+3)^0,f,c
  8409  004502  3616               	rlcf	(___aodiv@divisor+4)^0,f,c
  8410  004504  3617               	rlcf	(___aodiv@divisor+5)^0,f,c
  8411  004506  3618               	rlcf	(___aodiv@divisor+6)^0,f,c
  8412  004508  3619               	rlcf	(___aodiv@divisor+7)^0,f,c
  8413  00450A  2A1A               	incf	___aodiv@counter^0,f,c
  8414  00450C                     l7152:
  8415  00450C  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
  8416  00450E  EF8B  F022         	goto	u9021
  8417  004512  EF8D  F022         	goto	u9020
  8418  004516                     u9021:
  8419  004516  EF7C  F022         	goto	l7150
  8420  00451A                     u9020:
  8421  00451A                     l7154:
  8422  00451A  90D8               	bcf	status,0,c
  8423  00451C  361C               	rlcf	___aodiv@quotient^0,f,c
  8424  00451E  361D               	rlcf	(___aodiv@quotient+1)^0,f,c
  8425  004520  361E               	rlcf	(___aodiv@quotient+2)^0,f,c
  8426  004522  361F               	rlcf	(___aodiv@quotient+3)^0,f,c
  8427  004524  3620               	rlcf	(___aodiv@quotient+4)^0,f,c
  8428  004526  3621               	rlcf	(___aodiv@quotient+5)^0,f,c
  8429  004528  3622               	rlcf	(___aodiv@quotient+6)^0,f,c
  8430  00452A  3623               	rlcf	(___aodiv@quotient+7)^0,f,c
  8431  00452C  5012               	movf	___aodiv@divisor^0,w,c
  8432  00452E  5C0A               	subwf	___aodiv@dividend^0,w,c
  8433  004530  5013               	movf	(___aodiv@divisor+1)^0,w,c
  8434  004532  580B               	subwfb	(___aodiv@dividend+1)^0,w,c
  8435  004534  5014               	movf	(___aodiv@divisor+2)^0,w,c
  8436  004536  580C               	subwfb	(___aodiv@dividend+2)^0,w,c
  8437  004538  5015               	movf	(___aodiv@divisor+3)^0,w,c
  8438  00453A  580D               	subwfb	(___aodiv@dividend+3)^0,w,c
  8439  00453C  5016               	movf	(___aodiv@divisor+4)^0,w,c
  8440  00453E  580E               	subwfb	(___aodiv@dividend+4)^0,w,c
  8441  004540  5017               	movf	(___aodiv@divisor+5)^0,w,c
  8442  004542  580F               	subwfb	(___aodiv@dividend+5)^0,w,c
  8443  004544  5018               	movf	(___aodiv@divisor+6)^0,w,c
  8444  004546  5810               	subwfb	(___aodiv@dividend+6)^0,w,c
  8445  004548  5019               	movf	(___aodiv@divisor+7)^0,w,c
  8446  00454A  5811               	subwfb	(___aodiv@dividend+7)^0,w,c
  8447  00454C  A0D8               	btfss	status,0,c
  8448  00454E  EFAB  F022         	goto	u9031
  8449  004552  EFAD  F022         	goto	u9030
  8450  004556                     u9031:
  8451  004556  EFBE  F022         	goto	l7162
  8452  00455A                     u9030:
  8453  00455A  5012               	movf	___aodiv@divisor^0,w,c
  8454  00455C  5E0A               	subwf	___aodiv@dividend^0,f,c
  8455  00455E  5013               	movf	(___aodiv@divisor+1)^0,w,c
  8456  004560  5A0B               	subwfb	(___aodiv@dividend+1)^0,f,c
  8457  004562  5014               	movf	(___aodiv@divisor+2)^0,w,c
  8458  004564  5A0C               	subwfb	(___aodiv@dividend+2)^0,f,c
  8459  004566  5015               	movf	(___aodiv@divisor+3)^0,w,c
  8460  004568  5A0D               	subwfb	(___aodiv@dividend+3)^0,f,c
  8461  00456A  5016               	movf	(___aodiv@divisor+4)^0,w,c
  8462  00456C  5A0E               	subwfb	(___aodiv@dividend+4)^0,f,c
  8463  00456E  5017               	movf	(___aodiv@divisor+5)^0,w,c
  8464  004570  5A0F               	subwfb	(___aodiv@dividend+5)^0,f,c
  8465  004572  5018               	movf	(___aodiv@divisor+6)^0,w,c
  8466  004574  5A10               	subwfb	(___aodiv@dividend+6)^0,f,c
  8467  004576  5019               	movf	(___aodiv@divisor+7)^0,w,c
  8468  004578  5A11               	subwfb	(___aodiv@dividend+7)^0,f,c
  8469  00457A  801C               	bsf	___aodiv@quotient^0,0,c
  8470  00457C                     l7162:
  8471  00457C  90D8               	bcf	status,0,c
  8472  00457E  3219               	rrcf	(___aodiv@divisor+7)^0,f,c
  8473  004580  3218               	rrcf	(___aodiv@divisor+6)^0,f,c
  8474  004582  3217               	rrcf	(___aodiv@divisor+5)^0,f,c
  8475  004584  3216               	rrcf	(___aodiv@divisor+4)^0,f,c
  8476  004586  3215               	rrcf	(___aodiv@divisor+3)^0,f,c
  8477  004588  3214               	rrcf	(___aodiv@divisor+2)^0,f,c
  8478  00458A  3213               	rrcf	(___aodiv@divisor+1)^0,f,c
  8479  00458C  3212               	rrcf	___aodiv@divisor^0,f,c
  8480  00458E  2E1A               	decfsz	___aodiv@counter^0,f,c
  8481  004590  EF8D  F022         	goto	l7154
  8482  004594                     l7166:
  8483  004594  501B               	movf	___aodiv@sign^0,w,c
  8484  004596  B4D8               	btfsc	status,2,c
  8485  004598  EFD0  F022         	goto	u9041
  8486  00459C  EFD2  F022         	goto	u9040
  8487  0045A0                     u9041:
  8488  0045A0  EFE2  F022         	goto	l7170
  8489  0045A4                     u9040:
  8490  0045A4  1E23               	comf	(___aodiv@quotient+7)^0,f,c
  8491  0045A6  1E22               	comf	(___aodiv@quotient+6)^0,f,c
  8492  0045A8  1E21               	comf	(___aodiv@quotient+5)^0,f,c
  8493  0045AA  1E20               	comf	(___aodiv@quotient+4)^0,f,c
  8494  0045AC  1E1F               	comf	(___aodiv@quotient+3)^0,f,c
  8495  0045AE  1E1E               	comf	(___aodiv@quotient+2)^0,f,c
  8496  0045B0  1E1D               	comf	(___aodiv@quotient+1)^0,f,c
  8497  0045B2  6C1C               	negf	___aodiv@quotient^0,c
  8498  0045B4  0E00               	movlw	0
  8499  0045B6  221D               	addwfc	(___aodiv@quotient+1)^0,f,c
  8500  0045B8  221E               	addwfc	(___aodiv@quotient+2)^0,f,c
  8501  0045BA  221F               	addwfc	(___aodiv@quotient+3)^0,f,c
  8502  0045BC  2220               	addwfc	(___aodiv@quotient+4)^0,f,c
  8503  0045BE  2221               	addwfc	(___aodiv@quotient+5)^0,f,c
  8504  0045C0  2222               	addwfc	(___aodiv@quotient+6)^0,f,c
  8505  0045C2  2223               	addwfc	(___aodiv@quotient+7)^0,f,c
  8506  0045C4                     l7170:
  8507  0045C4  C01C  F00A         	movff	___aodiv@quotient,?___aodiv
  8508  0045C8  C01D  F00B         	movff	___aodiv@quotient+1,?___aodiv+1
  8509  0045CC  C01E  F00C         	movff	___aodiv@quotient+2,?___aodiv+2
  8510  0045D0  C01F  F00D         	movff	___aodiv@quotient+3,?___aodiv+3
  8511  0045D4  C020  F00E         	movff	___aodiv@quotient+4,?___aodiv+4
  8512  0045D8  C021  F00F         	movff	___aodiv@quotient+5,?___aodiv+5
  8513  0045DC  C022  F010         	movff	___aodiv@quotient+6,?___aodiv+6
  8514  0045E0  C023  F011         	movff	___aodiv@quotient+7,?___aodiv+7
  8515  0045E4  0012               	return		;funcret
  8516  0045E6                     __end_of___aodiv:
  8517                           	callstack 0
  8518                           
  8519 ;; *************** function _atoi *****************
  8520 ;; Defined at:
  8521 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8524 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  8525 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  8526 ;;		 -> STR_3(64), STR_1(64), 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  n               2   29[COMRAM] int 
  8529 ;;  neg             2   22[COMRAM] int 
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  2   16[COMRAM] int 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8540 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8541 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8542 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8543 ;;Total ram usage:       15 bytes
  8544 ;; Hardware stack levels used: 1
  8545 ;; Hardware stack levels required when called: 8
  8546 ;; This function calls:
  8547 ;;		___wmul
  8548 ;;		_isdigit
  8549 ;;		_isspace
  8550 ;; This function is called by:
  8551 ;;		_vfpfcnvrt
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text35
  8556  003F86                     __ptext35:
  8557                           	callstack 0
  8558  003F86                     _atoi:
  8559                           	callstack 17
  8560  003F86  0E00               	movlw	0
  8561  003F88  6E1F               	movwf	(atoi@n+1)^0,c
  8562  003F8A  0E00               	movlw	0
  8563  003F8C  6E1E               	movwf	atoi@n^0,c
  8564  003F8E  0E00               	movlw	0
  8565  003F90  6E18               	movwf	(atoi@neg+1)^0,c
  8566  003F92  0E00               	movlw	0
  8567  003F94  6E17               	movwf	atoi@neg^0,c
  8568  003F96  EFCF  F01F         	goto	l8180
  8569  003F9A                     l8178:
  8570  003F9A  4A11               	infsnz	atoi@s^0,f,c
  8571  003F9C  2A12               	incf	(atoi@s+1)^0,f,c
  8572  003F9E                     l8180:
  8573  003F9E  0E01               	movlw	1
  8574  003FA0  6E1D               	movwf	_atoi$3207^0,c
  8575  003FA2  C011  FFF6         	movff	atoi@s,tblptrl
  8576  003FA6  C012  FFF7         	movff	atoi@s+1,tblptrh
  8577  003FAA                     	if	0	;tblptru may be non-zero
  8578  003FAA                     	endif
  8579  003FAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8580  003FAA  0E00               	movlw	low (__mediumconst shr (0+16))
  8581  003FAC  6EF8               	movwf	tblptru,c
  8582  003FAE                     	endif
  8583  003FAE  0008               	tblrd		*
  8584  003FB0  50F5               	movf	tablat,w,c
  8585  003FB2  0A20               	xorlw	32
  8586  003FB4  B4D8               	btfsc	status,2,c
  8587  003FB6  EFDF  F01F         	goto	u10931
  8588  003FBA  EFE1  F01F         	goto	u10930
  8589  003FBE                     u10931:
  8590  003FBE  EF00  F020         	goto	l8188
  8591  003FC2                     u10930:
  8592  003FC2  0EF7               	movlw	247
  8593  003FC4  6E13               	movwf	??_atoi^0,c
  8594  003FC6  0EFF               	movlw	255
  8595  003FC8  6E14               	movwf	(??_atoi+1)^0,c
  8596  003FCA  C011  FFF6         	movff	atoi@s,tblptrl
  8597  003FCE  C012  FFF7         	movff	atoi@s+1,tblptrh
  8598  003FD2                     	if	0	;tblptru may be non-zero
  8599  003FD2                     	endif
  8600  003FD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8601  003FD2  0E00               	movlw	low (__mediumconst shr (0+16))
  8602  003FD4  6EF8               	movwf	tblptru,c
  8603  003FD6                     	endif
  8604  003FD6  0008               	tblrd		*
  8605  003FD8  50F5               	movf	tablat,w,c
  8606  003FDA  6E15               	movwf	(??_atoi+2)^0,c
  8607  003FDC  6A16               	clrf	(??_atoi+3)^0,c
  8608  003FDE  5013               	movf	??_atoi^0,w,c
  8609  003FE0  2615               	addwf	(??_atoi+2)^0,f,c
  8610  003FE2  5014               	movf	(??_atoi+1)^0,w,c
  8611  003FE4  2216               	addwfc	(??_atoi+3)^0,f,c
  8612  003FE6  5016               	movf	(??_atoi+3)^0,w,c
  8613  003FE8  E109               	bnz	u10940
  8614  003FEA  0E05               	movlw	5
  8615  003FEC  5C15               	subwf	(??_atoi+2)^0,w,c
  8616  003FEE  A0D8               	btfss	status,0,c
  8617  003FF0  EFFC  F01F         	goto	u10941
  8618  003FF4  EFFE  F01F         	goto	u10940
  8619  003FF8                     u10941:
  8620  003FF8  EF00  F020         	goto	l8188
  8621  003FFC                     u10940:
  8622  003FFC  0E00               	movlw	0
  8623  003FFE  6E1D               	movwf	_atoi$3207^0,c
  8624  004000                     l8188:
  8625  004000  C01D  F019         	movff	_atoi$3207,_atoi$3206
  8626  004004  6A1A               	clrf	(_atoi$3206+1)^0,c
  8627  004006  5019               	movf	_atoi$3206^0,w,c
  8628  004008  101A               	iorwf	(_atoi$3206+1)^0,w,c
  8629  00400A  A4D8               	btfss	status,2,c
  8630  00400C  EF0A  F020         	goto	u10951
  8631  004010  EF0C  F020         	goto	u10950
  8632  004014                     u10951:
  8633  004014  EFCD  F01F         	goto	l8178
  8634  004018                     u10950:
  8635  004018  EF16  F020         	goto	l8198
  8636  00401C                     l8194:
  8637  00401C  0E00               	movlw	0
  8638  00401E  6E18               	movwf	(atoi@neg+1)^0,c
  8639  004020  0E01               	movlw	1
  8640  004022  6E17               	movwf	atoi@neg^0,c
  8641  004024                     l8196:
  8642  004024  4A11               	infsnz	atoi@s^0,f,c
  8643  004026  2A12               	incf	(atoi@s+1)^0,f,c
  8644  004028  EF4F  F020         	goto	l8204
  8645  00402C                     l8198:
  8646  00402C  C011  FFF6         	movff	atoi@s,tblptrl
  8647  004030  C012  FFF7         	movff	atoi@s+1,tblptrh
  8648  004034                     	if	0	;tblptru may be non-zero
  8649  004034                     	endif
  8650  004034                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8651  004034  0E00               	movlw	low (__mediumconst shr (0+16))
  8652  004036  6EF8               	movwf	tblptru,c
  8653  004038                     	endif
  8654  004038  0008               	tblrd		*
  8655  00403A  50F5               	movf	tablat,w,c
  8656  00403C  6E13               	movwf	??_atoi^0,c
  8657  00403E  6A14               	clrf	(??_atoi+1)^0,c
  8658                           
  8659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8660                           ; Switch size 1, requested type "simple"
  8661                           ; Number of cases is 1, Range of values is 0 to 0
  8662                           ; switch strategies available:
  8663                           ; Name         Instructions Cycles
  8664                           ; simple_byte            4     3 (average)
  8665                           ;	Chosen strategy is simple_byte
  8666  004040  5014               	movf	(??_atoi+1)^0,w,c
  8667  004042  0A00               	xorlw	0	; case 0
  8668  004044  B4D8               	btfsc	status,2,c
  8669  004046  EF27  F020         	goto	l9164
  8670  00404A  EF4F  F020         	goto	l8204
  8671  00404E                     l9164:
  8672                           
  8673                           ; Switch size 1, requested type "simple"
  8674                           ; Number of cases is 2, Range of values is 43 to 45
  8675                           ; switch strategies available:
  8676                           ; Name         Instructions Cycles
  8677                           ; simple_byte            7     4 (average)
  8678                           ;	Chosen strategy is simple_byte
  8679  00404E  5013               	movf	??_atoi^0,w,c
  8680  004050  0A2B               	xorlw	43	; case 43
  8681  004052  B4D8               	btfsc	status,2,c
  8682  004054  EF12  F020         	goto	l8196
  8683  004058  0A06               	xorlw	6	; case 45
  8684  00405A  B4D8               	btfsc	status,2,c
  8685  00405C  EF0E  F020         	goto	l8194
  8686  004060  EF4F  F020         	goto	l8204
  8687  004064                     l8200:
  8688  004064  C01E  F00A         	movff	atoi@n,___wmul@multiplier
  8689  004068  C01F  F00B         	movff	atoi@n+1,___wmul@multiplier+1
  8690  00406C  0E00               	movlw	0
  8691  00406E  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  8692  004070  0E0A               	movlw	10
  8693  004072  6E0C               	movwf	___wmul@multiplicand^0,c
  8694  004074  ECC9  F030         	call	___wmul	;wreg free
  8695  004078  C011  FFF6         	movff	atoi@s,tblptrl
  8696  00407C  C012  FFF7         	movff	atoi@s+1,tblptrh
  8697  004080                     	if	0	;tblptru may be non-zero
  8698  004080                     	endif
  8699  004080                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8700  004080  0E00               	movlw	low (__mediumconst shr (0+16))
  8701  004082  6EF8               	movwf	tblptru,c
  8702  004084                     	endif
  8703  004084  0008               	tblrd		*
  8704  004086  50F5               	movf	tablat,w,c
  8705  004088  5E0A               	subwf	?___wmul^0,f,c
  8706  00408A  0E00               	movlw	0
  8707  00408C  5A0B               	subwfb	(?___wmul+1)^0,f,c
  8708  00408E  0E30               	movlw	48
  8709  004090  240A               	addwf	?___wmul^0,w,c
  8710  004092  6E1E               	movwf	atoi@n^0,c
  8711  004094  0E00               	movlw	0
  8712  004096  200B               	addwfc	(?___wmul+1)^0,w,c
  8713  004098  6E1F               	movwf	(atoi@n+1)^0,c
  8714  00409A  EF12  F020         	goto	l8196
  8715  00409E                     l8204:
  8716  00409E  0ED0               	movlw	208
  8717  0040A0  6E13               	movwf	??_atoi^0,c
  8718  0040A2  0EFF               	movlw	255
  8719  0040A4  6E14               	movwf	(??_atoi+1)^0,c
  8720  0040A6  C011  FFF6         	movff	atoi@s,tblptrl
  8721  0040AA  C012  FFF7         	movff	atoi@s+1,tblptrh
  8722  0040AE                     	if	0	;tblptru may be non-zero
  8723  0040AE                     	endif
  8724  0040AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8725  0040AE  0E00               	movlw	low (__mediumconst shr (0+16))
  8726  0040B0  6EF8               	movwf	tblptru,c
  8727  0040B2                     	endif
  8728  0040B2  0008               	tblrd		*
  8729  0040B4  50F5               	movf	tablat,w,c
  8730  0040B6  6E15               	movwf	(??_atoi+2)^0,c
  8731  0040B8  6A16               	clrf	(??_atoi+3)^0,c
  8732  0040BA  5013               	movf	??_atoi^0,w,c
  8733  0040BC  2615               	addwf	(??_atoi+2)^0,f,c
  8734  0040BE  5014               	movf	(??_atoi+1)^0,w,c
  8735  0040C0  2216               	addwfc	(??_atoi+3)^0,f,c
  8736  0040C2  5016               	movf	(??_atoi+3)^0,w,c
  8737  0040C4  E10A               	bnz	u10960
  8738  0040C6  0E0A               	movlw	10
  8739  0040C8  5C15               	subwf	(??_atoi+2)^0,w,c
  8740  0040CA  A0D8               	btfss	status,0,c
  8741  0040CC  EF6A  F020         	goto	u10961
  8742  0040D0  EF6D  F020         	goto	u10960
  8743  0040D4                     u10961:
  8744  0040D4  0E01               	movlw	1
  8745  0040D6  EF6E  F020         	goto	u10970
  8746  0040DA                     u10960:
  8747  0040DA  0E00               	movlw	0
  8748  0040DC                     u10970:
  8749  0040DC  6E1B               	movwf	_atoi$3208^0,c
  8750  0040DE  6A1C               	clrf	(_atoi$3208+1)^0,c
  8751  0040E0  501B               	movf	_atoi$3208^0,w,c
  8752  0040E2  101C               	iorwf	(_atoi$3208+1)^0,w,c
  8753  0040E4  A4D8               	btfss	status,2,c
  8754  0040E6  EF77  F020         	goto	u10981
  8755  0040EA  EF79  F020         	goto	u10980
  8756  0040EE                     u10981:
  8757  0040EE  EF32  F020         	goto	l8200
  8758  0040F2                     u10980:
  8759  0040F2  5017               	movf	atoi@neg^0,w,c
  8760  0040F4  1018               	iorwf	(atoi@neg+1)^0,w,c
  8761  0040F6  A4D8               	btfss	status,2,c
  8762  0040F8  EF80  F020         	goto	u10991
  8763  0040FC  EF82  F020         	goto	u10990
  8764  004100                     u10991:
  8765  004100  EF90  F020         	goto	l1749
  8766  004104                     u10990:
  8767  004104  C01E  F013         	movff	atoi@n,??_atoi
  8768  004108  C01F  F014         	movff	atoi@n+1,??_atoi+1
  8769  00410C  1E13               	comf	??_atoi^0,f,c
  8770  00410E  1E14               	comf	(??_atoi+1)^0,f,c
  8771  004110  4A13               	infsnz	??_atoi^0,f,c
  8772  004112  2A14               	incf	(??_atoi+1)^0,f,c
  8773  004114  C013  F011         	movff	??_atoi,?_atoi
  8774  004118  C014  F012         	movff	??_atoi+1,?_atoi+1
  8775  00411C  EF94  F020         	goto	l1752
  8776  004120                     l1749:
  8777  004120  C01E  F011         	movff	atoi@n,?_atoi
  8778  004124  C01F  F012         	movff	atoi@n+1,?_atoi+1
  8779  004128                     l1752:
  8780  004128  0012               	return		;funcret
  8781  00412A                     __end_of_atoi:
  8782                           	callstack 0
  8783                           
  8784 ;; *************** function _isspace *****************
  8785 ;; Defined at:
  8786 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  c               2    9[COMRAM] int 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;		None
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  2    9[COMRAM] int 
  8793 ;; Registers used:
  8794 ;;		wreg, status,2, status,0
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;Total ram usage:        7 bytes
  8805 ;; Hardware stack levels used: 1
  8806 ;; Hardware stack levels required when called: 7
  8807 ;; This function calls:
  8808 ;;		Nothing
  8809 ;; This function is called by:
  8810 ;;		_atoi
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text36
  8815  005B4A                     __ptext36:
  8816                           	callstack 0
  8817  005B4A                     _isspace:
  8818                           	callstack 17
  8819  005B4A  0E01               	movlw	1
  8820  005B4C  6E10               	movwf	_isspace$3237^0,c
  8821  005B4E  0E20               	movlw	32
  8822  005B50  180A               	xorwf	isspace@c^0,w,c
  8823  005B52  100B               	iorwf	(isspace@c+1)^0,w,c
  8824  005B54  B4D8               	btfsc	status,2,c
  8825  005B56  EFAF  F02D         	goto	u10101
  8826  005B5A  EFB1  F02D         	goto	u10100
  8827  005B5E                     u10101:
  8828  005B5E  EFCA  F02D         	goto	l7756
  8829  005B62                     u10100:
  8830  005B62  0EF7               	movlw	247
  8831  005B64  6E0C               	movwf	??_isspace^0,c
  8832  005B66  0EFF               	movlw	255
  8833  005B68  6E0D               	movwf	(??_isspace+1)^0,c
  8834  005B6A  C00A  F00E         	movff	isspace@c,??_isspace+2
  8835  005B6E  C00B  F00F         	movff	isspace@c+1,??_isspace+3
  8836  005B72  500C               	movf	??_isspace^0,w,c
  8837  005B74  260E               	addwf	(??_isspace+2)^0,f,c
  8838  005B76  500D               	movf	(??_isspace+1)^0,w,c
  8839  005B78  220F               	addwfc	(??_isspace+3)^0,f,c
  8840  005B7A  500F               	movf	(??_isspace+3)^0,w,c
  8841  005B7C  E109               	bnz	u10110
  8842  005B7E  0E05               	movlw	5
  8843  005B80  5C0E               	subwf	(??_isspace+2)^0,w,c
  8844  005B82  A0D8               	btfss	status,0,c
  8845  005B84  EFC6  F02D         	goto	u10111
  8846  005B88  EFC8  F02D         	goto	u10110
  8847  005B8C                     u10111:
  8848  005B8C  EFCA  F02D         	goto	l7756
  8849  005B90                     u10110:
  8850  005B90  0E00               	movlw	0
  8851  005B92  6E10               	movwf	_isspace$3237^0,c
  8852  005B94                     l7756:
  8853  005B94  C010  F00A         	movff	_isspace$3237,?_isspace
  8854  005B98  6A0B               	clrf	(?_isspace+1)^0,c
  8855  005B9A  0012               	return		;funcret
  8856  005B9C                     __end_of_isspace:
  8857                           	callstack 0
  8858                           
  8859 ;; *************** function _isdigit *****************
  8860 ;; Defined at:
  8861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  c               2    9[COMRAM] int 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  2    9[COMRAM] int 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, status,0
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8879 ;;Total ram usage:        6 bytes
  8880 ;; Hardware stack levels used: 1
  8881 ;; Hardware stack levels required when called: 7
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		_vfpfcnvrt
  8886 ;;		_atoi
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text37
  8891  0060B0                     __ptext37:
  8892                           	callstack 0
  8893  0060B0                     _isdigit:
  8894                           	callstack 18
  8895  0060B0  0ED0               	movlw	208
  8896  0060B2  6E0C               	movwf	??_isdigit^0,c
  8897  0060B4  0EFF               	movlw	255
  8898  0060B6  6E0D               	movwf	(??_isdigit+1)^0,c
  8899  0060B8  C00A  F00E         	movff	isdigit@c,??_isdigit+2
  8900  0060BC  C00B  F00F         	movff	isdigit@c+1,??_isdigit+3
  8901  0060C0  500C               	movf	??_isdigit^0,w,c
  8902  0060C2  260E               	addwf	(??_isdigit+2)^0,f,c
  8903  0060C4  500D               	movf	(??_isdigit+1)^0,w,c
  8904  0060C6  220F               	addwfc	(??_isdigit+3)^0,f,c
  8905  0060C8  500F               	movf	(??_isdigit+3)^0,w,c
  8906  0060CA  E10A               	bnz	u10080
  8907  0060CC  0E0A               	movlw	10
  8908  0060CE  5C0E               	subwf	(??_isdigit+2)^0,w,c
  8909  0060D0  A0D8               	btfss	status,0,c
  8910  0060D2  EF6D  F030         	goto	u10081
  8911  0060D6  EF70  F030         	goto	u10080
  8912  0060DA                     u10081:
  8913  0060DA  0E01               	movlw	1
  8914  0060DC  EF71  F030         	goto	u10090
  8915  0060E0                     u10080:
  8916  0060E0  0E00               	movlw	0
  8917  0060E2                     u10090:
  8918  0060E2  6E0A               	movwf	?_isdigit^0,c
  8919  0060E4  6A0B               	clrf	(?_isdigit+1)^0,c
  8920  0060E6  0012               	return		;funcret
  8921  0060E8                     __end_of_isdigit:
  8922                           	callstack 0
  8923                           
  8924 ;; *************** function _sendStringSerial4 *****************
  8925 ;; Defined at:
  8926 ;;		line 46 in file "serial_comm.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  string          2   10[COMRAM] PTR unsigned char 
  8929 ;;		 -> colourclick_testing@buf(40), colourcards_testingRGBC@buf(30), 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;Total ram usage:        2 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 8
  8948 ;; This function calls:
  8949 ;;		_sendCharSerial4
  8950 ;; This function is called by:
  8951 ;;		_colourclick_testing
  8952 ;;		_colourcards_testingRGBC
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text38
  8957  0060E8                     __ptext38:
  8958                           	callstack 0
  8959  0060E8                     _sendStringSerial4:
  8960                           	callstack 20
  8961  0060E8                     
  8962                           ;serial_comm.c: 48:     while (*string != 0) {
  8963  0060E8  EF7F  F030         	goto	l8510
  8964  0060EC                     l8506:
  8965                           
  8966                           ;serial_comm.c: 49:         sendCharSerial4(*string++);
  8967  0060EC  C00B  FFD9         	movff	sendStringSerial4@string,fsr2l
  8968  0060F0  C00C  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8969  0060F4  50DF               	movf	indf2,w,c
  8970  0060F6  EC66  F031         	call	_sendCharSerial4
  8971  0060FA  4A0B               	infsnz	sendStringSerial4@string^0,f,c
  8972  0060FC  2A0C               	incf	(sendStringSerial4@string+1)^0,f,c
  8973  0060FE                     l8510:
  8974                           
  8975                           ;serial_comm.c: 48:     while (*string != 0) {
  8976  0060FE  C00B  FFD9         	movff	sendStringSerial4@string,fsr2l
  8977  006102  C00C  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8978  006106  50DF               	movf	indf2,w,c
  8979  006108  A4D8               	btfss	status,2,c
  8980  00610A  EF89  F030         	goto	u11431
  8981  00610E  EF8B  F030         	goto	u11430
  8982  006112                     u11431:
  8983  006112  EF76  F030         	goto	l8506
  8984  006116                     u11430:
  8985  006116  0012               	return		;funcret
  8986  006118                     __end_of_sendStringSerial4:
  8987                           	callstack 0
  8988                           
  8989 ;; *************** function _sendCharSerial4 *****************
  8990 ;; Defined at:
  8991 ;;		line 37 in file "serial_comm.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  charToSend      1    wreg     unsigned char 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  charToSend      1    9[COMRAM] unsigned char 
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;Total ram usage:        1 bytes
  9010 ;; Hardware stack levels used: 1
  9011 ;; Hardware stack levels required when called: 7
  9012 ;; This function calls:
  9013 ;;		Nothing
  9014 ;; This function is called by:
  9015 ;;		_sendStringSerial4
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text39
  9020  0062CC                     __ptext39:
  9021                           	callstack 0
  9022  0062CC                     _sendCharSerial4:
  9023                           	callstack 20
  9024                           
  9025                           ;incstack = 0
  9026                           ;sendCharSerial4@charToSend stored from wreg
  9027  0062CC  6E0A               	movwf	sendCharSerial4@charToSend^0,c
  9028  0062CE                     l542:
  9029  0062CE  010E               	movlb	14	; () banked
  9030  0062D0  A537               	btfss	55,2,b	;volatile
  9031  0062D2  EF6D  F031         	goto	u11241
  9032  0062D6  EF6F  F031         	goto	u11240
  9033  0062DA                     u11241:
  9034  0062DA  EF67  F031         	goto	l542
  9035  0062DE                     u11240:
  9036  0062DE                     
  9037                           ; BSR set to: 14
  9038                           ;serial_comm.c: 39:     TX4REG = charToSend;
  9039  0062DE  C00A  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9040  0062E2                     
  9041                           ; BSR set to: 14
  9042  0062E2  0012               	return		;funcret
  9043  0062E4                     __end_of_sendCharSerial4:
  9044                           	callstack 0
  9045                           
  9046 ;; *************** function _colourcards_readRGBC *****************
  9047 ;; Defined at:
  9048 ;;		line 12 in file "colour_cards.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  abs             2   16[BANK0 ] PTR struct .
  9051 ;;		 -> main@current(8), 
  9052 ;;  mL              2   18[BANK0 ] PTR struct .
  9053 ;;		 -> main@motorL(9), 
  9054 ;;  mR              2   20[BANK0 ] PTR struct .
  9055 ;;		 -> main@motorR(9), 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  rel            12   22[BANK0 ] struct .
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9067 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9070 ;;      Totals:         2      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;Total ram usage:       20 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; Hardware stack levels required when called: 12
  9074 ;; This function calls:
  9075 ;;		___flge
  9076 ;;		_colourcards_normaliseRGBC
  9077 ;;		_colourclick_readRGBC
  9078 ;;		_colourclick_readRGBC2
  9079 ;;		_forward
  9080 ;;		_reverse
  9081 ;;		_stop
  9082 ;;		_turnleft
  9083 ;;		_turnright
  9084 ;; This function is called by:
  9085 ;;		_main
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text40
  9090  001B12                     __ptext40:
  9091                           	callstack 0
  9092  001B12                     _colourcards_readRGBC:
  9093                           	callstack 18
  9094  001B12                     
  9095                           ;colour_cards.c: 12: void colourcards_readRGBC(RGBC_val *abs, DC_motor *mL, DC_motor *mR
      +                          );colour_cards.c: 13: {;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  9096  001B12  010E               	movlb	14	; () banked
  9097  001B14  9329               	bcf	41,1,b	;volatile
  9098  001B16                     
  9099                           ; BSR set to: 14
  9100                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  9101  001B16  C070  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  9102  001B1A  C071  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  9103  001B1E  EC22  F02D         	call	_colourclick_readRGBC	;wreg free
  9104                           
  9105                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  9106  001B22  C070  F031         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9107  001B26  C071  F032         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9108  001B2A  0E76               	movlw	low colourcards_readRGBC@rel
  9109  001B2C  6E33               	movwf	colourcards_normaliseRGBC@rel^0,c
  9110  001B2E  0E00               	movlw	high colourcards_readRGBC@rel
  9111  001B30  6E34               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9112  001B32  ECF3  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9113  001B36                     
  9114                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  9115  001B36  0E71               	movlw	113
  9116  001B38  6E31               	movwf	___flge@ff1^0,c
  9117  001B3A  0E3D               	movlw	61
  9118  001B3C  6E32               	movwf	(___flge@ff1+1)^0,c
  9119  001B3E  0E0A               	movlw	10
  9120  001B40  6E33               	movwf	(___flge@ff1+2)^0,c
  9121  001B42  0E3F               	movlw	63
  9122  001B44  6E34               	movwf	(___flge@ff1+3)^0,c
  9123  001B46  C076  F035         	movff	colourcards_readRGBC@rel,___flge@ff2
  9124  001B4A  C077  F036         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9125  001B4E  C078  F037         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9126  001B52  C079  F038         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9127  001B56  EC14  F028         	call	___flge	;wreg free
  9128  001B5A  B0D8               	btfsc	status,0,c
  9129  001B5C  EFB2  F00D         	goto	u11821
  9130  001B60  EFB4  F00D         	goto	u11820
  9131  001B64                     u11821:
  9132  001B64  EF4A  F00E         	goto	l8860
  9133  001B68                     u11820:
  9134  001B68  C07A  F031         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  9135  001B6C  C07B  F032         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  9136  001B70  C07C  F033         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  9137  001B74  C07D  F034         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  9138  001B78  0E48               	movlw	72
  9139  001B7A  6E35               	movwf	___flge@ff2^0,c
  9140  001B7C  0EE1               	movlw	225
  9141  001B7E  6E36               	movwf	(___flge@ff2+1)^0,c
  9142  001B80  0E7A               	movlw	122
  9143  001B82  6E37               	movwf	(___flge@ff2+2)^0,c
  9144  001B84  0E3E               	movlw	62
  9145  001B86  6E38               	movwf	(___flge@ff2+3)^0,c
  9146  001B88  EC14  F028         	call	___flge	;wreg free
  9147  001B8C  B0D8               	btfsc	status,0,c
  9148  001B8E  EFCB  F00D         	goto	u11831
  9149  001B92  EFCD  F00D         	goto	u11830
  9150  001B96                     u11831:
  9151  001B96  EF4A  F00E         	goto	l8860
  9152  001B9A                     u11830:
  9153  001B9A  C07E  F031         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  9154  001B9E  C07F  F032         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  9155  001BA2  C080  F033         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  9156  001BA6  C081  F034         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  9157  001BAA  0EEC               	movlw	236
  9158  001BAC  6E35               	movwf	___flge@ff2^0,c
  9159  001BAE  0E51               	movlw	81
  9160  001BB0  6E36               	movwf	(___flge@ff2+1)^0,c
  9161  001BB2  0E38               	movlw	56
  9162  001BB4  6E37               	movwf	(___flge@ff2+2)^0,c
  9163  001BB6  0E3E               	movlw	62
  9164  001BB8  6E38               	movwf	(___flge@ff2+3)^0,c
  9165  001BBA  EC14  F028         	call	___flge	;wreg free
  9166  001BBE  B0D8               	btfsc	status,0,c
  9167  001BC0  EFE4  F00D         	goto	u11841
  9168  001BC4  EFE6  F00D         	goto	u11840
  9169  001BC8                     u11841:
  9170  001BC8  EF4A  F00E         	goto	l8860
  9171  001BCC                     u11840:
  9172  001BCC                     
  9173                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  9174  001BCC  C070  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  9175  001BD0  C071  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  9176  001BD4  0E03               	movlw	3
  9177  001BD6  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  9178  001BD8  EC60  F024         	call	_colourclick_readRGBC2	;wreg free
  9179                           
  9180                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  9181  001BDC  C070  F031         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9182  001BE0  C071  F032         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9183  001BE4  0E76               	movlw	low colourcards_readRGBC@rel
  9184  001BE6  6E33               	movwf	colourcards_normaliseRGBC@rel^0,c
  9185  001BE8  0E00               	movlw	high colourcards_readRGBC@rel
  9186  001BEA  6E34               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9187  001BEC  ECF3  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9188  001BF0                     
  9189                           ;colour_cards.c: 27:         if (rel.B<0.56) {
  9190  001BF0  C07E  F031         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  9191  001BF4  C07F  F032         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  9192  001BF8  C080  F033         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  9193  001BFC  C081  F034         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  9194  001C00  0E29               	movlw	41
  9195  001C02  6E35               	movwf	___flge@ff2^0,c
  9196  001C04  0E5C               	movlw	92
  9197  001C06  6E36               	movwf	(___flge@ff2+1)^0,c
  9198  001C08  0E0F               	movlw	15
  9199  001C0A  6E37               	movwf	(___flge@ff2+2)^0,c
  9200  001C0C  0E3F               	movlw	63
  9201  001C0E  6E38               	movwf	(___flge@ff2+3)^0,c
  9202  001C10  EC14  F028         	call	___flge	;wreg free
  9203  001C14  B0D8               	btfsc	status,0,c
  9204  001C16  EF0F  F00E         	goto	u11851
  9205  001C1A  EF11  F00E         	goto	u11850
  9206  001C1E                     u11851:
  9207  001C1E  EF2F  F00E         	goto	l8856
  9208  001C22                     u11850:
  9209  001C22                     
  9210                           ;colour_cards.c: 29:             turnright(mL, mR, 135);
  9211  001C22  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9212  001C26  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9213  001C2A  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9214  001C2E  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9215  001C32  0E00               	movlw	0
  9216  001C34  0100               	movlb	0	; () banked
  9217  001C36  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9218  001C38  0E87               	movlw	135
  9219  001C3A  6F6E               	movwf	turnright@deg& (0+255),b
  9220  001C3C  ECBE  F02E         	call	_turnright	;wreg free
  9221                           
  9222                           ;colour_cards.c: 30:             stop(mL, mR);
  9223  001C40  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9224  001C44  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9225  001C48  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9226  001C4C  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9227  001C50  EC53  F02C         	call	_stop	;wreg free
  9228  001C54                     l8854:
  9229                           
  9230                           ;colour_cards.c: 31:             unknowncard_flag = 0;
  9231  001C54  0E00               	movlw	0
  9232  001C56  0101               	movlb	1	; () banked
  9233  001C58  6F28               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9234                           
  9235                           ;colour_cards.c: 32:         } else {
  9236  001C5A  EF51  F011         	goto	l8958
  9237  001C5E                     l8856:
  9238                           
  9239                           ;colour_cards.c: 34:             turnright(mL, mR, 90);
  9240  001C5E  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9241  001C62  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9242  001C66  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9243  001C6A  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9244  001C6E  0E00               	movlw	0
  9245  001C70  0100               	movlb	0	; () banked
  9246  001C72  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9247  001C74  0E5A               	movlw	90
  9248  001C76  6F6E               	movwf	turnright@deg& (0+255),b
  9249  001C78  ECBE  F02E         	call	_turnright	;wreg free
  9250                           
  9251                           ;colour_cards.c: 35:             stop(mL, mR);
  9252  001C7C  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9253  001C80  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9254  001C84  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9255  001C88  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9256  001C8C  EC53  F02C         	call	_stop	;wreg free
  9257  001C90  EF2A  F00E         	goto	l8854
  9258  001C94                     l8860:
  9259  001C94  C076  F031         	movff	colourcards_readRGBC@rel,___flge@ff1
  9260  001C98  C077  F032         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9261  001C9C  C078  F033         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9262  001CA0  C079  F034         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9263  001CA4  0EAE               	movlw	174
  9264  001CA6  6E35               	movwf	___flge@ff2^0,c
  9265  001CA8  0E47               	movlw	71
  9266  001CAA  6E36               	movwf	(___flge@ff2+1)^0,c
  9267  001CAC  0EE1               	movlw	225
  9268  001CAE  6E37               	movwf	(___flge@ff2+2)^0,c
  9269  001CB0  0E3E               	movlw	62
  9270  001CB2  6E38               	movwf	(___flge@ff2+3)^0,c
  9271  001CB4  EC14  F028         	call	___flge	;wreg free
  9272  001CB8  B0D8               	btfsc	status,0,c
  9273  001CBA  EF61  F00E         	goto	u11861
  9274  001CBE  EF63  F00E         	goto	u11860
  9275  001CC2                     u11861:
  9276  001CC2  EF5C  F00F         	goto	l8888
  9277  001CC6                     u11860:
  9278  001CC6  0E9A               	movlw	154
  9279  001CC8  6E31               	movwf	___flge@ff1^0,c
  9280  001CCA  0E99               	movlw	153
  9281  001CCC  6E32               	movwf	(___flge@ff1+1)^0,c
  9282  001CCE  0E99               	movlw	153
  9283  001CD0  6E33               	movwf	(___flge@ff1+2)^0,c
  9284  001CD2  0E3E               	movlw	62
  9285  001CD4  6E34               	movwf	(___flge@ff1+3)^0,c
  9286  001CD6  C07A  F035         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9287  001CDA  C07B  F036         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9288  001CDE  C07C  F037         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9289  001CE2  C07D  F038         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9290  001CE6  EC14  F028         	call	___flge	;wreg free
  9291  001CEA  B0D8               	btfsc	status,0,c
  9292  001CEC  EF7A  F00E         	goto	u11871
  9293  001CF0  EF7C  F00E         	goto	u11870
  9294  001CF4                     u11871:
  9295  001CF4  EF5C  F00F         	goto	l8888
  9296  001CF8                     u11870:
  9297  001CF8  0E14               	movlw	20
  9298  001CFA  6E31               	movwf	___flge@ff1^0,c
  9299  001CFC  0EAE               	movlw	174
  9300  001CFE  6E32               	movwf	(___flge@ff1+1)^0,c
  9301  001D00  0E47               	movlw	71
  9302  001D02  6E33               	movwf	(___flge@ff1+2)^0,c
  9303  001D04  0E3E               	movlw	62
  9304  001D06  6E34               	movwf	(___flge@ff1+3)^0,c
  9305  001D08  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9306  001D0C  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9307  001D10  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9308  001D14  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9309  001D18  EC14  F028         	call	___flge	;wreg free
  9310  001D1C  B0D8               	btfsc	status,0,c
  9311  001D1E  EF93  F00E         	goto	u11881
  9312  001D22  EF95  F00E         	goto	u11880
  9313  001D26                     u11881:
  9314  001D26  EF5C  F00F         	goto	l8888
  9315  001D2A                     u11880:
  9316  001D2A                     
  9317                           ;colour_cards.c: 41:         colourclick_readRGBC2(abs, 3);
  9318  001D2A  C070  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  9319  001D2E  C071  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  9320  001D32  0E03               	movlw	3
  9321  001D34  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  9322  001D36  EC60  F024         	call	_colourclick_readRGBC2	;wreg free
  9323                           
  9324                           ;colour_cards.c: 42:         colourcards_normaliseRGBC(abs, &rel);
  9325  001D3A  C070  F031         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9326  001D3E  C071  F032         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9327  001D42  0E76               	movlw	low colourcards_readRGBC@rel
  9328  001D44  6E33               	movwf	colourcards_normaliseRGBC@rel^0,c
  9329  001D46  0E00               	movlw	high colourcards_readRGBC@rel
  9330  001D48  6E34               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9331  001D4A  ECF3  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9332  001D4E                     
  9333                           ;colour_cards.c: 43:         if ((rel.R<0.65) && (rel.B>0.67)) {
  9334  001D4E  C076  F031         	movff	colourcards_readRGBC@rel,___flge@ff1
  9335  001D52  C077  F032         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9336  001D56  C078  F033         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9337  001D5A  C079  F034         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9338  001D5E  0E66               	movlw	102
  9339  001D60  6E35               	movwf	___flge@ff2^0,c
  9340  001D62  0E66               	movlw	102
  9341  001D64  6E36               	movwf	(___flge@ff2+1)^0,c
  9342  001D66  0E26               	movlw	38
  9343  001D68  6E37               	movwf	(___flge@ff2+2)^0,c
  9344  001D6A  0E3F               	movlw	63
  9345  001D6C  6E38               	movwf	(___flge@ff2+3)^0,c
  9346  001D6E  EC14  F028         	call	___flge	;wreg free
  9347  001D72  B0D8               	btfsc	status,0,c
  9348  001D74  EFBE  F00E         	goto	u11891
  9349  001D78  EFC0  F00E         	goto	u11890
  9350  001D7C                     u11891:
  9351  001D7C  EFF4  F00E         	goto	l8876
  9352  001D80                     u11890:
  9353  001D80  0E1F               	movlw	31
  9354  001D82  6E31               	movwf	___flge@ff1^0,c
  9355  001D84  0E85               	movlw	133
  9356  001D86  6E32               	movwf	(___flge@ff1+1)^0,c
  9357  001D88  0E2B               	movlw	43
  9358  001D8A  6E33               	movwf	(___flge@ff1+2)^0,c
  9359  001D8C  0E3F               	movlw	63
  9360  001D8E  6E34               	movwf	(___flge@ff1+3)^0,c
  9361  001D90  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9362  001D94  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9363  001D98  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9364  001D9C  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9365  001DA0  EC14  F028         	call	___flge	;wreg free
  9366  001DA4  B0D8               	btfsc	status,0,c
  9367  001DA6  EFD7  F00E         	goto	u11901
  9368  001DAA  EFD9  F00E         	goto	u11900
  9369  001DAE                     u11901:
  9370  001DAE  EFF4  F00E         	goto	l8876
  9371  001DB2                     u11900:
  9372  001DB2                     
  9373                           ;colour_cards.c: 45:             turnright(mL, mR, 180);
  9374  001DB2  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9375  001DB6  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9376  001DBA  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9377  001DBE  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9378  001DC2  0E00               	movlw	0
  9379  001DC4  0100               	movlb	0	; () banked
  9380  001DC6  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9381  001DC8  0EB4               	movlw	180
  9382  001DCA  6F6E               	movwf	turnright@deg& (0+255),b
  9383  001DCC  ECBE  F02E         	call	_turnright	;wreg free
  9384                           
  9385                           ;colour_cards.c: 46:             stop(mL, mR);
  9386  001DD0  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9387  001DD4  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9388  001DD8  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9389  001DDC  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9390  001DE0  EC53  F02C         	call	_stop	;wreg free
  9391  001DE4  EF2A  F00E         	goto	l8854
  9392  001DE8                     l8876:
  9393  001DE8  C076  F031         	movff	colourcards_readRGBC@rel,___flge@ff1
  9394  001DEC  C077  F032         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9395  001DF0  C078  F033         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9396  001DF4  C079  F034         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9397  001DF8  0EEC               	movlw	236
  9398  001DFA  6E35               	movwf	___flge@ff2^0,c
  9399  001DFC  0E51               	movlw	81
  9400  001DFE  6E36               	movwf	(___flge@ff2+1)^0,c
  9401  001E00  0EB8               	movlw	184
  9402  001E02  6E37               	movwf	(___flge@ff2+2)^0,c
  9403  001E04  0E3D               	movlw	61
  9404  001E06  6E38               	movwf	(___flge@ff2+3)^0,c
  9405  001E08  EC14  F028         	call	___flge	;wreg free
  9406  001E0C  B0D8               	btfsc	status,0,c
  9407  001E0E  EF0B  F00F         	goto	u11911
  9408  001E12  EF0D  F00F         	goto	u11910
  9409  001E16                     u11911:
  9410  001E16  EF41  F00F         	goto	l8884
  9411  001E1A                     u11910:
  9412  001E1A  0E52               	movlw	82
  9413  001E1C  6E31               	movwf	___flge@ff1^0,c
  9414  001E1E  0EB8               	movlw	184
  9415  001E20  6E32               	movwf	(___flge@ff1+1)^0,c
  9416  001E22  0E1E               	movlw	30
  9417  001E24  6E33               	movwf	(___flge@ff1+2)^0,c
  9418  001E26  0E3F               	movlw	63
  9419  001E28  6E34               	movwf	(___flge@ff1+3)^0,c
  9420  001E2A  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9421  001E2E  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9422  001E32  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9423  001E36  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9424  001E3A  EC14  F028         	call	___flge	;wreg free
  9425  001E3E  B0D8               	btfsc	status,0,c
  9426  001E40  EF24  F00F         	goto	u11921
  9427  001E44  EF26  F00F         	goto	u11920
  9428  001E48                     u11921:
  9429  001E48  EF41  F00F         	goto	l8884
  9430  001E4C                     u11920:
  9431  001E4C                     
  9432                           ;colour_cards.c: 50:             turnleft(mL, mR, 90);
  9433  001E4C  C072  F06A         	movff	colourcards_readRGBC@mL,turnleft@mL
  9434  001E50  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9435  001E54  C074  F06C         	movff	colourcards_readRGBC@mR,turnleft@mR
  9436  001E58  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9437  001E5C  0E00               	movlw	0
  9438  001E5E  0100               	movlb	0	; () banked
  9439  001E60  6F6F               	movwf	(turnleft@deg+1)& (0+255),b
  9440  001E62  0E5A               	movlw	90
  9441  001E64  6F6E               	movwf	turnleft@deg& (0+255),b
  9442  001E66  ECE6  F02E         	call	_turnleft	;wreg free
  9443                           
  9444                           ;colour_cards.c: 51:             stop(mL, mR);
  9445  001E6A  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9446  001E6E  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9447  001E72  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9448  001E76  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9449  001E7A  EC53  F02C         	call	_stop	;wreg free
  9450  001E7E  EF2A  F00E         	goto	l8854
  9451  001E82                     l8884:
  9452                           
  9453                           ;colour_cards.c: 55:             turnleft(mL, mR, 135);
  9454  001E82  C072  F06A         	movff	colourcards_readRGBC@mL,turnleft@mL
  9455  001E86  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9456  001E8A  C074  F06C         	movff	colourcards_readRGBC@mR,turnleft@mR
  9457  001E8E  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9458  001E92  0E00               	movlw	0
  9459  001E94  0100               	movlb	0	; () banked
  9460  001E96  6F6F               	movwf	(turnleft@deg+1)& (0+255),b
  9461  001E98  0E87               	movlw	135
  9462  001E9A  6F6E               	movwf	turnleft@deg& (0+255),b
  9463  001E9C  ECE6  F02E         	call	_turnleft	;wreg free
  9464                           
  9465                           ;colour_cards.c: 56:             stop(mL, mR);
  9466  001EA0  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9467  001EA4  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9468  001EA8  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9469  001EAC  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9470  001EB0  EC53  F02C         	call	_stop	;wreg free
  9471  001EB4  EF2A  F00E         	goto	l8854
  9472  001EB8                     l8888:
  9473  001EB8  0E48               	movlw	72
  9474  001EBA  6E31               	movwf	___flge@ff1^0,c
  9475  001EBC  0EE1               	movlw	225
  9476  001EBE  6E32               	movwf	(___flge@ff1+1)^0,c
  9477  001EC0  0EFA               	movlw	250
  9478  001EC2  6E33               	movwf	(___flge@ff1+2)^0,c
  9479  001EC4  0E3E               	movlw	62
  9480  001EC6  6E34               	movwf	(___flge@ff1+3)^0,c
  9481  001EC8  C076  F035         	movff	colourcards_readRGBC@rel,___flge@ff2
  9482  001ECC  C077  F036         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9483  001ED0  C078  F037         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9484  001ED4  C079  F038         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9485  001ED8  EC14  F028         	call	___flge	;wreg free
  9486  001EDC  B0D8               	btfsc	status,0,c
  9487  001EDE  EF73  F00F         	goto	u11931
  9488  001EE2  EF75  F00F         	goto	u11930
  9489  001EE6                     u11931:
  9490  001EE6  EFE2  F00F         	goto	l8904
  9491  001EEA                     u11930:
  9492  001EEA  0E85               	movlw	133
  9493  001EEC  6E31               	movwf	___flge@ff1^0,c
  9494  001EEE  0EEB               	movlw	235
  9495  001EF0  6E32               	movwf	(___flge@ff1+1)^0,c
  9496  001EF2  0E91               	movlw	145
  9497  001EF4  6E33               	movwf	(___flge@ff1+2)^0,c
  9498  001EF6  0E3E               	movlw	62
  9499  001EF8  6E34               	movwf	(___flge@ff1+3)^0,c
  9500  001EFA  C07A  F035         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9501  001EFE  C07B  F036         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9502  001F02  C07C  F037         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9503  001F06  C07D  F038         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9504  001F0A  EC14  F028         	call	___flge	;wreg free
  9505  001F0E  B0D8               	btfsc	status,0,c
  9506  001F10  EF8C  F00F         	goto	u11941
  9507  001F14  EF8E  F00F         	goto	u11940
  9508  001F18                     u11941:
  9509  001F18  EFE2  F00F         	goto	l8904
  9510  001F1C                     u11940:
  9511  001F1C  0EEC               	movlw	236
  9512  001F1E  6E31               	movwf	___flge@ff1^0,c
  9513  001F20  0E51               	movlw	81
  9514  001F22  6E32               	movwf	(___flge@ff1+1)^0,c
  9515  001F24  0E38               	movlw	56
  9516  001F26  6E33               	movwf	(___flge@ff1+2)^0,c
  9517  001F28  0E3E               	movlw	62
  9518  001F2A  6E34               	movwf	(___flge@ff1+3)^0,c
  9519  001F2C  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9520  001F30  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9521  001F34  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9522  001F38  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9523  001F3C  EC14  F028         	call	___flge	;wreg free
  9524  001F40  B0D8               	btfsc	status,0,c
  9525  001F42  EFA5  F00F         	goto	u11951
  9526  001F46  EFA7  F00F         	goto	u11950
  9527  001F4A                     u11951:
  9528  001F4A  EFE2  F00F         	goto	l8904
  9529  001F4E                     u11950:
  9530  001F4E                     
  9531                           ;colour_cards.c: 63:         reverse(mL, mR);
  9532  001F4E  C072  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  9533  001F52  C073  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9534  001F56  C074  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  9535  001F5A  C075  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9536  001F5E  ECC5  F02B         	call	_reverse	;wreg free
  9537                           
  9538                           ;colour_cards.c: 64:         stop(mL, mR);
  9539  001F62  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9540  001F66  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9541  001F6A  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9542  001F6E  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9543  001F72  EC53  F02C         	call	_stop	;wreg free
  9544  001F76                     
  9545                           ;colour_cards.c: 65:         _delay((unsigned long)((100)*(64000000/4000.0)));
  9546  001F76  0E09               	movlw	9
  9547  001F78  6E49               	movwf	(??_colourcards_readRGBC+1)^0,c
  9548  001F7A  0E1E               	movlw	30
  9549  001F7C  6E48               	movwf	??_colourcards_readRGBC^0,c
  9550  001F7E  0EE4               	movlw	228
  9551  001F80                     u12597:
  9552  001F80  2EE8               	decfsz	wreg,f,c
  9553  001F82  D7FE               	bra	u12597
  9554  001F84  2E48               	decfsz	??_colourcards_readRGBC^0,f,c
  9555  001F86  D7FC               	bra	u12597
  9556  001F88  2E49               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9557  001F8A  D7FA               	bra	u12597
  9558  001F8C  D000               	nop2	
  9559  001F8E                     
  9560                           ;colour_cards.c: 66:         turnright(mL, mR, 90);
  9561  001F8E  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9562  001F92  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9563  001F96  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9564  001F9A  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9565  001F9E  0E00               	movlw	0
  9566  001FA0  0100               	movlb	0	; () banked
  9567  001FA2  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9568  001FA4  0E5A               	movlw	90
  9569  001FA6  6F6E               	movwf	turnright@deg& (0+255),b
  9570  001FA8  ECBE  F02E         	call	_turnright	;wreg free
  9571  001FAC                     l8900:
  9572                           
  9573                           ;colour_cards.c: 67:         stop(mL, mR);
  9574  001FAC  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9575  001FB0  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9576  001FB4  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9577  001FB8  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9578  001FBC  EC53  F02C         	call	_stop	;wreg free
  9579  001FC0  EF2A  F00E         	goto	l8854
  9580  001FC4                     l8904:
  9581  001FC4  0E48               	movlw	72
  9582  001FC6  6E31               	movwf	___flge@ff1^0,c
  9583  001FC8  0EE1               	movlw	225
  9584  001FCA  6E32               	movwf	(___flge@ff1+1)^0,c
  9585  001FCC  0EFA               	movlw	250
  9586  001FCE  6E33               	movwf	(___flge@ff1+2)^0,c
  9587  001FD0  0E3E               	movlw	62
  9588  001FD2  6E34               	movwf	(___flge@ff1+3)^0,c
  9589  001FD4  C076  F035         	movff	colourcards_readRGBC@rel,___flge@ff2
  9590  001FD8  C077  F036         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9591  001FDC  C078  F037         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9592  001FE0  C079  F038         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9593  001FE4  EC14  F028         	call	___flge	;wreg free
  9594  001FE8  B0D8               	btfsc	status,0,c
  9595  001FEA  EFF9  F00F         	goto	u11961
  9596  001FEE  EFFB  F00F         	goto	u11960
  9597  001FF2                     u11961:
  9598  001FF2  EF5E  F010         	goto	l8920
  9599  001FF6                     u11960:
  9600  001FF6  C07A  F031         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  9601  001FFA  C07B  F032         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  9602  001FFE  C07C  F033         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  9603  002002  C07D  F034         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  9604  002006  0ECD               	movlw	205
  9605  002008  6E35               	movwf	___flge@ff2^0,c
  9606  00200A  0ECC               	movlw	204
  9607  00200C  6E36               	movwf	(___flge@ff2+1)^0,c
  9608  00200E  0E8C               	movlw	140
  9609  002010  6E37               	movwf	(___flge@ff2+2)^0,c
  9610  002012  0E3E               	movlw	62
  9611  002014  6E38               	movwf	(___flge@ff2+3)^0,c
  9612  002016  EC14  F028         	call	___flge	;wreg free
  9613  00201A  B0D8               	btfsc	status,0,c
  9614  00201C  EF12  F010         	goto	u11971
  9615  002020  EF14  F010         	goto	u11970
  9616  002024                     u11971:
  9617  002024  EF5E  F010         	goto	l8920
  9618  002028                     u11970:
  9619  002028  0E14               	movlw	20
  9620  00202A  6E31               	movwf	___flge@ff1^0,c
  9621  00202C  0EAE               	movlw	174
  9622  00202E  6E32               	movwf	(___flge@ff1+1)^0,c
  9623  002030  0E47               	movlw	71
  9624  002032  6E33               	movwf	(___flge@ff1+2)^0,c
  9625  002034  0E3E               	movlw	62
  9626  002036  6E34               	movwf	(___flge@ff1+3)^0,c
  9627  002038  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9628  00203C  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9629  002040  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9630  002044  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9631  002048  EC14  F028         	call	___flge	;wreg free
  9632  00204C  B0D8               	btfsc	status,0,c
  9633  00204E  EF2B  F010         	goto	u11981
  9634  002052  EF2D  F010         	goto	u11980
  9635  002056                     u11981:
  9636  002056  EF5E  F010         	goto	l8920
  9637  00205A                     u11980:
  9638  00205A                     
  9639                           ;colour_cards.c: 72:         reverse(mL, mR);
  9640  00205A  C072  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  9641  00205E  C073  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9642  002062  C074  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  9643  002066  C075  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9644  00206A  ECC5  F02B         	call	_reverse	;wreg free
  9645                           
  9646                           ;colour_cards.c: 73:         stop(mL, mR);
  9647  00206E  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9648  002072  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9649  002076  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9650  00207A  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9651  00207E  EC53  F02C         	call	_stop	;wreg free
  9652  002082                     
  9653                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  9654  002082  0E09               	movlw	9
  9655  002084  6E49               	movwf	(??_colourcards_readRGBC+1)^0,c
  9656  002086  0E1E               	movlw	30
  9657  002088  6E48               	movwf	??_colourcards_readRGBC^0,c
  9658  00208A  0EE4               	movlw	228
  9659  00208C                     u12607:
  9660  00208C  2EE8               	decfsz	wreg,f,c
  9661  00208E  D7FE               	bra	u12607
  9662  002090  2E48               	decfsz	??_colourcards_readRGBC^0,f,c
  9663  002092  D7FC               	bra	u12607
  9664  002094  2E49               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9665  002096  D7FA               	bra	u12607
  9666  002098  D000               	nop2	
  9667  00209A                     
  9668                           ;colour_cards.c: 75:         turnleft(mL, mR, 90);
  9669  00209A  C072  F06A         	movff	colourcards_readRGBC@mL,turnleft@mL
  9670  00209E  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9671  0020A2  C074  F06C         	movff	colourcards_readRGBC@mR,turnleft@mR
  9672  0020A6  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9673  0020AA  0E00               	movlw	0
  9674  0020AC  0100               	movlb	0	; () banked
  9675  0020AE  6F6F               	movwf	(turnleft@deg+1)& (0+255),b
  9676  0020B0  0E5A               	movlw	90
  9677  0020B2  6F6E               	movwf	turnleft@deg& (0+255),b
  9678  0020B4  ECE6  F02E         	call	_turnleft	;wreg free
  9679  0020B8  EFD6  F00F         	goto	l8900
  9680  0020BC                     l8920:
  9681  0020BC  C076  F031         	movff	colourcards_readRGBC@rel,___flge@ff1
  9682  0020C0  C077  F032         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9683  0020C4  C078  F033         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9684  0020C8  C079  F034         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9685  0020CC  0E1F               	movlw	31
  9686  0020CE  6E35               	movwf	___flge@ff2^0,c
  9687  0020D0  0E85               	movlw	133
  9688  0020D2  6E36               	movwf	(___flge@ff2+1)^0,c
  9689  0020D4  0EEB               	movlw	235
  9690  0020D6  6E37               	movwf	(___flge@ff2+2)^0,c
  9691  0020D8  0E3E               	movlw	62
  9692  0020DA  6E38               	movwf	(___flge@ff2+3)^0,c
  9693  0020DC  EC14  F028         	call	___flge	;wreg free
  9694  0020E0  B0D8               	btfsc	status,0,c
  9695  0020E2  EF75  F010         	goto	u11991
  9696  0020E6  EF77  F010         	goto	u11990
  9697  0020EA                     u11991:
  9698  0020EA  EFCA  F010         	goto	l8932
  9699  0020EE                     u11990:
  9700  0020EE  0E3D               	movlw	61
  9701  0020F0  6E31               	movwf	___flge@ff1^0,c
  9702  0020F2  0E0A               	movlw	10
  9703  0020F4  6E32               	movwf	(___flge@ff1+1)^0,c
  9704  0020F6  0E97               	movlw	151
  9705  0020F8  6E33               	movwf	(___flge@ff1+2)^0,c
  9706  0020FA  0E3E               	movlw	62
  9707  0020FC  6E34               	movwf	(___flge@ff1+3)^0,c
  9708  0020FE  C07A  F035         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9709  002102  C07B  F036         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9710  002106  C07C  F037         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9711  00210A  C07D  F038         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9712  00210E  EC14  F028         	call	___flge	;wreg free
  9713  002112  B0D8               	btfsc	status,0,c
  9714  002114  EF8E  F010         	goto	u12001
  9715  002118  EF90  F010         	goto	u12000
  9716  00211C                     u12001:
  9717  00211C  EFCA  F010         	goto	l8932
  9718  002120                     u12000:
  9719  002120  0E3D               	movlw	61
  9720  002122  6E31               	movwf	___flge@ff1^0,c
  9721  002124  0E0A               	movlw	10
  9722  002126  6E32               	movwf	(___flge@ff1+1)^0,c
  9723  002128  0E57               	movlw	87
  9724  00212A  6E33               	movwf	(___flge@ff1+2)^0,c
  9725  00212C  0E3E               	movlw	62
  9726  00212E  6E34               	movwf	(___flge@ff1+3)^0,c
  9727  002130  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9728  002134  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9729  002138  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9730  00213C  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9731  002140  EC14  F028         	call	___flge	;wreg free
  9732  002144  B0D8               	btfsc	status,0,c
  9733  002146  EFA7  F010         	goto	u12011
  9734  00214A  EFA9  F010         	goto	u12010
  9735  00214E                     u12011:
  9736  00214E  EFCA  F010         	goto	l8932
  9737  002152                     u12010:
  9738  002152                     
  9739                           ;colour_cards.c: 81:         turnright(mL, mR, 180);
  9740  002152  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9741  002156  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9742  00215A  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9743  00215E  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9744  002162  0E00               	movlw	0
  9745  002164  0100               	movlb	0	; () banked
  9746  002166  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9747  002168  0EB4               	movlw	180
  9748  00216A  6F6E               	movwf	turnright@deg& (0+255),b
  9749  00216C  ECBE  F02E         	call	_turnright	;wreg free
  9750                           
  9751                           ;colour_cards.c: 82:         stop(mL, mR);
  9752  002170  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9753  002174  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9754  002178  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9755  00217C  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9756  002180  EC53  F02C         	call	_stop	;wreg free
  9757  002184                     
  9758                           ;colour_cards.c: 83:         unknowncard_flag = 0;
  9759  002184  0E00               	movlw	0
  9760  002186  0101               	movlb	1	; () banked
  9761  002188  6F28               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9762  00218A                     
  9763                           ; BSR set to: 1
  9764                           ;colour_cards.c: 84:         returnhome_flag = 1;
  9765  00218A  0E01               	movlw	1
  9766  00218C  0100               	movlb	0	; () banked
  9767  00218E  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
  9768                           
  9769                           ;colour_cards.c: 86:     } else {
  9770  002190  EF51  F011         	goto	l8958
  9771  002194                     l8932:
  9772                           
  9773                           ;colour_cards.c: 88:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  9774  002194  0E52               	movlw	82
  9775  002196  6E49               	movwf	(??_colourcards_readRGBC+1)^0,c
  9776  002198  0E2B               	movlw	43
  9777  00219A  6E48               	movwf	??_colourcards_readRGBC^0,c
  9778  00219C  0E00               	movlw	0
  9779  00219E                     u12617:
  9780  00219E  2EE8               	decfsz	wreg,f,c
  9781  0021A0  D7FE               	bra	u12617
  9782  0021A2  2E48               	decfsz	??_colourcards_readRGBC^0,f,c
  9783  0021A4  D7FC               	bra	u12617
  9784  0021A6  2E49               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9785  0021A8  D7FA               	bra	u12617
  9786  0021AA  D000               	nop2	
  9787  0021AC                     
  9788                           ;colour_cards.c: 89:         forward(mL, mR);
  9789  0021AC  C072  F023         	movff	colourcards_readRGBC@mL,forward@mL
  9790  0021B0  C073  F024         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  9791  0021B4  C074  F025         	movff	colourcards_readRGBC@mR,forward@mR
  9792  0021B8  C075  F026         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  9793  0021BC  EC0C  F02C         	call	_forward	;wreg free
  9794  0021C0                     
  9795                           ;colour_cards.c: 90:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9796  0021C0  0ED0               	movlw	208
  9797  0021C2  6E48               	movwf	??_colourcards_readRGBC^0,c
  9798  0021C4  0ECA               	movlw	202
  9799  0021C6                     u12627:
  9800  0021C6  2EE8               	decfsz	wreg,f,c
  9801  0021C8  D7FE               	bra	u12627
  9802  0021CA  2E48               	decfsz	??_colourcards_readRGBC^0,f,c
  9803  0021CC  D7FC               	bra	u12627
  9804                           
  9805                           ;colour_cards.c: 91:         stop(mL, mR);
  9806  0021CE  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9807  0021D2  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9808  0021D6  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9809  0021DA  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9810  0021DE  EC53  F02C         	call	_stop	;wreg free
  9811  0021E2                     
  9812                           ;colour_cards.c: 92:         colourclick_readRGBC(abs);
  9813  0021E2  C070  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  9814  0021E6  C071  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  9815  0021EA  EC22  F02D         	call	_colourclick_readRGBC	;wreg free
  9816  0021EE                     
  9817                           ;colour_cards.c: 93:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrupt
      +                          s_upperbound)) {
  9818  0021EE  0100               	movlb	0	; () banked
  9819  0021F0  EE20 F006          	lfsr	2,6
  9820  0021F4  5170               	movf	colourcards_readRGBC@abs& (0+255),w,b
  9821  0021F6  26D9               	addwf	fsr2l,f,c
  9822  0021F8  5171               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  9823  0021FA  22DA               	addwfc	fsr2h,f,c
  9824  0021FC  5051               	movf	_interrupts_lowerbound^0,w,c	;volatile
  9825  0021FE  5CDE               	subwf	postinc2,w,c
  9826  002200  5052               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  9827  002202  58DE               	subwfb	postinc2,w,c
  9828  002204  A0D8               	btfss	status,0,c
  9829  002206  EF07  F011         	goto	u12021
  9830  00220A  EF09  F011         	goto	u12020
  9831  00220E                     u12021:
  9832  00220E  EF1A  F011         	goto	l8944
  9833  002212                     u12020:
  9834  002212                     
  9835                           ; BSR set to: 0
  9836  002212  EE20 F006          	lfsr	2,6
  9837  002216  5170               	movf	colourcards_readRGBC@abs& (0+255),w,b
  9838  002218  26D9               	addwf	fsr2l,f,c
  9839  00221A  5171               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  9840  00221C  22DA               	addwfc	fsr2h,f,c
  9841  00221E  50DE               	movf	postinc2,w,c
  9842  002220  5C54               	subwf	_interrupts_upperbound^0,w,c	;volatile
  9843  002222  50DE               	movf	postinc2,w,c
  9844  002224  5855               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  9845  002226  B0D8               	btfsc	status,0,c
  9846  002228  EF18  F011         	goto	u12031
  9847  00222C  EF1A  F011         	goto	u12030
  9848  002230                     u12031:
  9849  002230  EF2A  F00E         	goto	l8854
  9850  002234                     u12030:
  9851  002234                     l8944:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;colour_cards.c: 94:             if (unknowncard_flag<3) {
  9855  002234  0E03               	movlw	3
  9856  002236  0101               	movlb	1	; () banked
  9857  002238  6128               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  9858  00223A  EF21  F011         	goto	u12041
  9859  00223E  EF23  F011         	goto	u12040
  9860  002242                     u12041:
  9861  002242  EF29  F011         	goto	l235
  9862  002246                     u12040:
  9863  002246                     
  9864                           ; BSR set to: 1
  9865                           ;colour_cards.c: 95:                 PIR0bits.INT1IF = 1;
  9866  002246  010E               	movlb	14	; () banked
  9867  002248  8333               	bsf	51,1,b	;volatile
  9868  00224A                     
  9869                           ; BSR set to: 14
  9870                           ;colour_cards.c: 96:                 unknowncard_flag++;
  9871  00224A  0101               	movlb	1	; () banked
  9872  00224C  2B28               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  9873                           
  9874                           ;colour_cards.c: 97:             } else {
  9875  00224E  EF51  F011         	goto	l8958
  9876  002252                     l235:
  9877                           
  9878                           ; BSR set to: 1
  9879                           ;colour_cards.c: 98:                 LATHbits.LATH3 = 1;
  9880  002252  8680               	bsf	128,3,c	;volatile
  9881  002254                     
  9882                           ; BSR set to: 1
  9883                           ;colour_cards.c: 99:                 turnright(mL, mR, 180);
  9884  002254  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9885  002258  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9886  00225C  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9887  002260  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9888  002264  0E00               	movlw	0
  9889  002266  0100               	movlb	0	; () banked
  9890  002268  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9891  00226A  0EB4               	movlw	180
  9892  00226C  6F6E               	movwf	turnright@deg& (0+255),b
  9893  00226E  ECBE  F02E         	call	_turnright	;wreg free
  9894                           
  9895                           ;colour_cards.c: 100:                 stop(mL, mR);
  9896  002272  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9897  002276  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9898  00227A  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9899  00227E  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9900  002282  EC53  F02C         	call	_stop	;wreg free
  9901  002286                     
  9902                           ;colour_cards.c: 101:                 returnhome_flag = !returnhome_flag;
  9903  002286  0100               	movlb	0	; () banked
  9904  002288  51F4               	movf	_returnhome_flag& (0+255),w,b	;volatile
  9905  00228A  B4D8               	btfsc	status,2,c
  9906  00228C  EF4A  F011         	goto	u12051
  9907  002290  EF4D  F011         	goto	u12050
  9908  002294                     u12051:
  9909  002294  0E01               	movlw	1
  9910  002296  EF4E  F011         	goto	u12060
  9911  00229A                     u12050:
  9912  00229A  0E00               	movlw	0
  9913  00229C                     u12060:
  9914  00229C  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
  9915  00229E  EF2A  F00E         	goto	l8854
  9916  0022A2                     l8958:
  9917                           
  9918                           ;colour_cards.c: 109:     PIE0bits.INT1IE = 1;
  9919  0022A2  010E               	movlb	14	; () banked
  9920  0022A4  8329               	bsf	41,1,b	;volatile
  9921  0022A6                     
  9922                           ; BSR set to: 14
  9923  0022A6  0012               	return		;funcret
  9924  0022A8                     __end_of_colourcards_readRGBC:
  9925                           	callstack 0
  9926                           
  9927 ;; *************** function _reverse *****************
  9928 ;; Defined at:
  9929 ;;		line 108 in file "DC_motors.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;  mL              2   34[COMRAM] PTR struct .
  9932 ;;		 -> main@motorL(9), 
  9933 ;;  mR              2   36[COMRAM] PTR struct .
  9934 ;;		 -> main@motorR(9), 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;		None
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      void 
  9939 ;; Registers used:
  9940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9949 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9950 ;;Total ram usage:        5 bytes
  9951 ;; Hardware stack levels used: 1
  9952 ;; Hardware stack levels required when called: 9
  9953 ;; This function calls:
  9954 ;;		_DCmotors_setPWM
  9955 ;; This function is called by:
  9956 ;;		_colourcards_readRGBC
  9957 ;;		_DCmotors_testing
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text41
  9962  00578A                     __ptext41:
  9963                           	callstack 0
  9964  00578A                     _reverse:
  9965                           	callstack 20
  9966  00578A                     
  9967                           ;DC_motors.c: 108: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 109: {;DC_motor
      +                          s.c: 111:     mL->direction = 0;
  9968  00578A  EE20 F001          	lfsr	2,1
  9969  00578E  5023               	movf	reverse@mL^0,w,c
  9970  005790  26D9               	addwf	fsr2l,f,c
  9971  005792  5024               	movf	(reverse@mL+1)^0,w,c
  9972  005794  22DA               	addwfc	fsr2h,f,c
  9973  005796  0E00               	movlw	0
  9974  005798  6EDF               	movwf	indf2,c
  9975                           
  9976                           ;DC_motors.c: 112:     mR->direction = 0;
  9977  00579A  EE20 F001          	lfsr	2,1
  9978  00579E  5025               	movf	reverse@mR^0,w,c
  9979  0057A0  26D9               	addwf	fsr2l,f,c
  9980  0057A2  5026               	movf	(reverse@mR+1)^0,w,c
  9981  0057A4  22DA               	addwfc	fsr2h,f,c
  9982  0057A6  0E00               	movlw	0
  9983  0057A8  6EDF               	movwf	indf2,c
  9984                           
  9985                           ;DC_motors.c: 115:     while((mL->power < 40) && (mR->power < 40)){
  9986  0057AA  EFF3  F02B         	goto	l8700
  9987  0057AE                     l8692:
  9988                           
  9989                           ;DC_motors.c: 116:         mL->power += 10;
  9990  0057AE  C023  FFD9         	movff	reverse@mL,fsr2l
  9991  0057B2  C024  FFDA         	movff	reverse@mL+1,fsr2h
  9992  0057B6  0E0A               	movlw	10
  9993  0057B8  26DF               	addwf	indf2,f,c
  9994                           
  9995                           ;DC_motors.c: 117:         mR->power += 10;
  9996  0057BA  C025  FFD9         	movff	reverse@mR,fsr2l
  9997  0057BE  C026  FFDA         	movff	reverse@mR+1,fsr2h
  9998  0057C2  0E0A               	movlw	10
  9999  0057C4  26DF               	addwf	indf2,f,c
 10000  0057C6                     
 10001                           ;DC_motors.c: 119:         DCmotors_setPWM(mL);
 10002  0057C6  C023  F018         	movff	reverse@mL,DCmotors_setPWM@m
 10003  0057CA  C024  F019         	movff	reverse@mL+1,DCmotors_setPWM@m+1
 10004  0057CE  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 10005  0057D2                     
 10006                           ;DC_motors.c: 120:         DCmotors_setPWM(mR);
 10007  0057D2  C025  F018         	movff	reverse@mR,DCmotors_setPWM@m
 10008  0057D6  C026  F019         	movff	reverse@mR+1,DCmotors_setPWM@m+1
 10009  0057DA  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 10010  0057DE                     
 10011                           ;DC_motors.c: 121:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 10012  0057DE  0EA0               	movlw	160
 10013  0057E0                     u12637:
 10014  0057E0  D000               	nop2	
 10015  0057E2  2EE8               	decfsz	wreg,f,c
 10016  0057E4  D7FD               	bra	u12637
 10017  0057E6                     l8700:
 10018                           
 10019                           ;DC_motors.c: 115:     while((mL->power < 40) && (mR->power < 40)){
 10020  0057E6  C023  FFD9         	movff	reverse@mL,fsr2l
 10021  0057EA  C024  FFDA         	movff	reverse@mL+1,fsr2h
 10022  0057EE  0E28               	movlw	40
 10023  0057F0  60DF               	cpfslt	indf2,c
 10024  0057F2  EFFD  F02B         	goto	u11671
 10025  0057F6  EFFF  F02B         	goto	u11670
 10026  0057FA                     u11671:
 10027  0057FA  EF0B  F02C         	goto	l671
 10028  0057FE                     u11670:
 10029  0057FE  C025  FFD9         	movff	reverse@mR,fsr2l
 10030  005802  C026  FFDA         	movff	reverse@mR+1,fsr2h
 10031  005806  0E27               	movlw	39
 10032  005808  64DF               	cpfsgt	indf2,c
 10033  00580A  EF09  F02C         	goto	u11681
 10034  00580E  EF0B  F02C         	goto	u11680
 10035  005812                     u11681:
 10036  005812  EFD7  F02B         	goto	l8692
 10037  005816                     u11680:
 10038  005816                     l671:
 10039  005816  0012               	return		;funcret
 10040  005818                     __end_of_reverse:
 10041                           	callstack 0
 10042                           
 10043 ;; *************** function _forward *****************
 10044 ;; Defined at:
 10045 ;;		line 88 in file "DC_motors.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  mL              2   34[COMRAM] PTR struct .
 10048 ;;		 -> main@motorL(9), 
 10049 ;;  mR              2   36[COMRAM] PTR struct .
 10050 ;;		 -> main@motorR(9), 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;		None
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10065 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10066 ;;Total ram usage:        5 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 9
 10069 ;; This function calls:
 10070 ;;		_DCmotors_setPWM
 10071 ;; This function is called by:
 10072 ;;		_main
 10073 ;;		_colourcards_readRGBC
 10074 ;;		_DCmotors_testing
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text42
 10079  005818                     __ptext42:
 10080                           	callstack 0
 10081  005818                     _forward:
 10082                           	callstack 21
 10083  005818                     
 10084                           ;DC_motors.c: 88: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 89: {;DC_motors.
      +                          c: 90:     mL->direction = 1;
 10085  005818  EE20 F001          	lfsr	2,1
 10086  00581C  5023               	movf	forward@mL^0,w,c
 10087  00581E  26D9               	addwf	fsr2l,f,c
 10088  005820  5024               	movf	(forward@mL+1)^0,w,c
 10089  005822  22DA               	addwfc	fsr2h,f,c
 10090  005824  0E01               	movlw	1
 10091  005826  6EDF               	movwf	indf2,c
 10092                           
 10093                           ;DC_motors.c: 91:     mR->direction = 1;
 10094  005828  EE20 F001          	lfsr	2,1
 10095  00582C  5025               	movf	forward@mR^0,w,c
 10096  00582E  26D9               	addwf	fsr2l,f,c
 10097  005830  5026               	movf	(forward@mR+1)^0,w,c
 10098  005832  22DA               	addwfc	fsr2h,f,c
 10099  005834  0E01               	movlw	1
 10100  005836  6EDF               	movwf	indf2,c
 10101                           
 10102                           ;DC_motors.c: 94:     while((mL->power < 20) && (mR->power < 20)){
 10103  005838  EF3A  F02C         	goto	l8594
 10104  00583C                     l8586:
 10105                           
 10106                           ;DC_motors.c: 95:         mL->power += 10;
 10107  00583C  C023  FFD9         	movff	forward@mL,fsr2l
 10108  005840  C024  FFDA         	movff	forward@mL+1,fsr2h
 10109  005844  0E0A               	movlw	10
 10110  005846  26DF               	addwf	indf2,f,c
 10111                           
 10112                           ;DC_motors.c: 96:         mR->power += 10;
 10113  005848  C025  FFD9         	movff	forward@mR,fsr2l
 10114  00584C  C026  FFDA         	movff	forward@mR+1,fsr2h
 10115  005850  0E0A               	movlw	10
 10116  005852  26DF               	addwf	indf2,f,c
 10117  005854                     
 10118                           ;DC_motors.c: 98:         DCmotors_setPWM(mL);
 10119  005854  C023  F018         	movff	forward@mL,DCmotors_setPWM@m
 10120  005858  C024  F019         	movff	forward@mL+1,DCmotors_setPWM@m+1
 10121  00585C  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 10122  005860                     
 10123                           ;DC_motors.c: 99:         DCmotors_setPWM(mR);
 10124  005860  C025  F018         	movff	forward@mR,DCmotors_setPWM@m
 10125  005864  C026  F019         	movff	forward@mR+1,DCmotors_setPWM@m+1
 10126  005868  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 10127  00586C                     
 10128                           ;DC_motors.c: 100:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 10129  00586C  0EA0               	movlw	160
 10130  00586E                     u12647:
 10131  00586E  D000               	nop2	
 10132  005870  2EE8               	decfsz	wreg,f,c
 10133  005872  D7FD               	bra	u12647
 10134  005874                     l8594:
 10135                           
 10136                           ;DC_motors.c: 94:     while((mL->power < 20) && (mR->power < 20)){
 10137  005874  C023  FFD9         	movff	forward@mL,fsr2l
 10138  005878  C024  FFDA         	movff	forward@mL+1,fsr2h
 10139  00587C  0E14               	movlw	20
 10140  00587E  60DF               	cpfslt	indf2,c
 10141  005880  EF44  F02C         	goto	u11581
 10142  005884  EF46  F02C         	goto	u11580
 10143  005888                     u11581:
 10144  005888  EF52  F02C         	goto	l663
 10145  00588C                     u11580:
 10146  00588C  C025  FFD9         	movff	forward@mR,fsr2l
 10147  005890  C026  FFDA         	movff	forward@mR+1,fsr2h
 10148  005894  0E13               	movlw	19
 10149  005896  64DF               	cpfsgt	indf2,c
 10150  005898  EF50  F02C         	goto	u11591
 10151  00589C  EF52  F02C         	goto	u11590
 10152  0058A0                     u11591:
 10153  0058A0  EF1E  F02C         	goto	l8586
 10154  0058A4                     u11590:
 10155  0058A4                     l663:
 10156  0058A4  0012               	return		;funcret
 10157  0058A6                     __end_of_forward:
 10158                           	callstack 0
 10159                           
 10160 ;; *************** function _colourclick_readRGBC2 *****************
 10161 ;; Defined at:
 10162 ;;		line 140 in file "colour_click.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  tmpval          2   22[COMRAM] PTR struct .
 10165 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
 10166 ;;  mode            1   24[COMRAM] unsigned char 
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;		None
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      void 
 10171 ;; Registers used:
 10172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/0
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10178 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10181 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10182 ;;Total ram usage:        5 bytes
 10183 ;; Hardware stack levels used: 1
 10184 ;; Hardware stack levels required when called: 11
 10185 ;; This function calls:
 10186 ;;		_colourclickLEDs_C
 10187 ;;		_colourclick_readRGBC
 10188 ;; This function is called by:
 10189 ;;		_colourcards_readRGBC
 10190 ;;		_colourcards_testingRGBC
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           	psect	text43
 10195  0048C0                     __ptext43:
 10196                           	callstack 0
 10197  0048C0                     _colourclick_readRGBC2:
 10198                           	callstack 18
 10199  0048C0                     
 10200                           ;colour_click.c: 140: void colourclick_readRGBC2(RGBC_val *tmpval, unsigned char mode);c
      +                          olour_click.c: 141: {;colour_click.c: 142:     colourclickLEDs_C(0);
 10201  0048C0  0E00               	movlw	0
 10202  0048C2  ECEE  F030         	call	_colourclickLEDs_C
 10203  0048C6                     
 10204                           ;colour_click.c: 143:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10205  0048C6  0E09               	movlw	9
 10206  0048C8  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10207  0048CA  0E1E               	movlw	30
 10208  0048CC  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10209  0048CE  0EE4               	movlw	228
 10210  0048D0                     u12657:
 10211  0048D0  2EE8               	decfsz	wreg,f,c
 10212  0048D2  D7FE               	bra	u12657
 10213  0048D4  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10214  0048D6  D7FC               	bra	u12657
 10215  0048D8  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10216  0048DA  D7FA               	bra	u12657
 10217  0048DC  D000               	nop2	
 10218  0048DE                     
 10219                           ;colour_click.c: 145:     if (mode==1) {
 10220  0048DE  0419               	decf	colourclick_readRGBC2@mode^0,w,c
 10221  0048E0  A4D8               	btfss	status,2,c
 10222  0048E2  EF75  F024         	goto	u11621
 10223  0048E6  EF77  F024         	goto	u11620
 10224  0048EA                     u11621:
 10225  0048EA  EFA5  F024         	goto	l8646
 10226  0048EE                     u11620:
 10227  0048EE                     
 10228                           ;colour_click.c: 146:         LATGbits.LATG1 = 1;
 10229  0048EE  827F               	bsf	127,1,c	;volatile
 10230  0048F0                     
 10231                           ;colour_click.c: 147:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10232  0048F0  0E52               	movlw	82
 10233  0048F2  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10234  0048F4  0E2B               	movlw	43
 10235  0048F6  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10236  0048F8  0E00               	movlw	0
 10237  0048FA                     u12667:
 10238  0048FA  2EE8               	decfsz	wreg,f,c
 10239  0048FC  D7FE               	bra	u12667
 10240  0048FE  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10241  004900  D7FC               	bra	u12667
 10242  004902  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10243  004904  D7FA               	bra	u12667
 10244  004906  D000               	nop2	
 10245  004908                     
 10246                           ;colour_click.c: 148:         colourclick_readRGBC(tmpval);
 10247  004908  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10248  00490C  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10249  004910  EC22  F02D         	call	_colourclick_readRGBC	;wreg free
 10250  004914                     
 10251                           ;colour_click.c: 149:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10252  004914  0E52               	movlw	82
 10253  004916  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10254  004918  0E2B               	movlw	43
 10255  00491A  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10256  00491C  0E00               	movlw	0
 10257  00491E                     u12677:
 10258  00491E  2EE8               	decfsz	wreg,f,c
 10259  004920  D7FE               	bra	u12677
 10260  004922  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10261  004924  D7FC               	bra	u12677
 10262  004926  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10263  004928  D7FA               	bra	u12677
 10264  00492A  D000               	nop2	
 10265  00492C                     
 10266                           ;colour_click.c: 150:         LATGbits.LATG1 = 0;
 10267  00492C  927F               	bcf	127,1,c	;volatile
 10268  00492E                     l8644:
 10269                           
 10270                           ;colour_click.c: 151:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10271  00492E  0E02               	movlw	2
 10272  004930  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10273  004932  0EA0               	movlw	160
 10274  004934  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10275  004936  0E92               	movlw	146
 10276  004938                     u12687:
 10277  004938  2EE8               	decfsz	wreg,f,c
 10278  00493A  D7FE               	bra	u12687
 10279  00493C  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10280  00493E  D7FC               	bra	u12687
 10281  004940  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10282  004942  D7FA               	bra	u12687
 10283  004944  D000               	nop2	
 10284                           
 10285                           ;colour_click.c: 152:     } else if (mode==2) {
 10286  004946  EFFB  F024         	goto	l8674
 10287  00494A                     l8646:
 10288  00494A  0E02               	movlw	2
 10289  00494C  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
 10290  00494E  A4D8               	btfss	status,2,c
 10291  004950  EFAC  F024         	goto	u11631
 10292  004954  EFAE  F024         	goto	u11630
 10293  004958                     u11631:
 10294  004958  EFD0  F024         	goto	l8660
 10295  00495C                     u11630:
 10296  00495C                     
 10297                           ;colour_click.c: 153:         LATAbits.LATA4 = 1;
 10298  00495C  8879               	bsf	121,4,c	;volatile
 10299  00495E                     
 10300                           ;colour_click.c: 154:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10301  00495E  0E52               	movlw	82
 10302  004960  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10303  004962  0E2B               	movlw	43
 10304  004964  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10305  004966  0E00               	movlw	0
 10306  004968                     u12697:
 10307  004968  2EE8               	decfsz	wreg,f,c
 10308  00496A  D7FE               	bra	u12697
 10309  00496C  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10310  00496E  D7FC               	bra	u12697
 10311  004970  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10312  004972  D7FA               	bra	u12697
 10313  004974  D000               	nop2	
 10314  004976                     
 10315                           ;colour_click.c: 155:         colourclick_readRGBC(tmpval);
 10316  004976  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10317  00497A  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10318  00497E  EC22  F02D         	call	_colourclick_readRGBC	;wreg free
 10319  004982                     
 10320                           ;colour_click.c: 156:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10321  004982  0E52               	movlw	82
 10322  004984  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10323  004986  0E2B               	movlw	43
 10324  004988  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10325  00498A  0E00               	movlw	0
 10326  00498C                     u12707:
 10327  00498C  2EE8               	decfsz	wreg,f,c
 10328  00498E  D7FE               	bra	u12707
 10329  004990  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10330  004992  D7FC               	bra	u12707
 10331  004994  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10332  004996  D7FA               	bra	u12707
 10333  004998  D000               	nop2	
 10334  00499A                     
 10335                           ;colour_click.c: 157:         LATAbits.LATA4 = 0;
 10336  00499A  9879               	bcf	121,4,c	;volatile
 10337  00499C  EF97  F024         	goto	l8644
 10338  0049A0                     l8660:
 10339  0049A0  0E03               	movlw	3
 10340  0049A2  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
 10341  0049A4  A4D8               	btfss	status,2,c
 10342  0049A6  EFD7  F024         	goto	u11641
 10343  0049AA  EFD9  F024         	goto	u11640
 10344  0049AE                     u11641:
 10345  0049AE  EFFB  F024         	goto	l8674
 10346  0049B2                     u11640:
 10347  0049B2                     
 10348                           ;colour_click.c: 160:         LATFbits.LATF7 = 1;
 10349  0049B2  8E7E               	bsf	126,7,c	;volatile
 10350  0049B4                     
 10351                           ;colour_click.c: 161:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10352  0049B4  0E52               	movlw	82
 10353  0049B6  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10354  0049B8  0E2B               	movlw	43
 10355  0049BA  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10356  0049BC  0E00               	movlw	0
 10357  0049BE                     u12717:
 10358  0049BE  2EE8               	decfsz	wreg,f,c
 10359  0049C0  D7FE               	bra	u12717
 10360  0049C2  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10361  0049C4  D7FC               	bra	u12717
 10362  0049C6  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10363  0049C8  D7FA               	bra	u12717
 10364  0049CA  D000               	nop2	
 10365  0049CC                     
 10366                           ;colour_click.c: 162:         colourclick_readRGBC(tmpval);
 10367  0049CC  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10368  0049D0  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10369  0049D4  EC22  F02D         	call	_colourclick_readRGBC	;wreg free
 10370  0049D8                     
 10371                           ;colour_click.c: 163:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10372  0049D8  0E52               	movlw	82
 10373  0049DA  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10374  0049DC  0E2B               	movlw	43
 10375  0049DE  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10376  0049E0  0E00               	movlw	0
 10377  0049E2                     u12727:
 10378  0049E2  2EE8               	decfsz	wreg,f,c
 10379  0049E4  D7FE               	bra	u12727
 10380  0049E6  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10381  0049E8  D7FC               	bra	u12727
 10382  0049EA  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10383  0049EC  D7FA               	bra	u12727
 10384  0049EE  D000               	nop2	
 10385  0049F0                     
 10386                           ;colour_click.c: 164:         LATFbits.LATF7 = 0;
 10387  0049F0  9E7E               	bcf	126,7,c	;volatile
 10388  0049F2  EF97  F024         	goto	l8644
 10389  0049F6                     l8674:
 10390                           
 10391                           ;colour_click.c: 168:     colourclickLEDs_C(1);
 10392  0049F6  0E01               	movlw	1
 10393  0049F8  ECEE  F030         	call	_colourclickLEDs_C
 10394  0049FC                     
 10395                           ;colour_click.c: 169:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10396  0049FC  0E09               	movlw	9
 10397  0049FE  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10398  004A00  0E1E               	movlw	30
 10399  004A02  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10400  004A04  0EE4               	movlw	228
 10401  004A06                     u12737:
 10402  004A06  2EE8               	decfsz	wreg,f,c
 10403  004A08  D7FE               	bra	u12737
 10404  004A0A  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10405  004A0C  D7FC               	bra	u12737
 10406  004A0E  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10407  004A10  D7FA               	bra	u12737
 10408  004A12  D000               	nop2	
 10409  004A14  0012               	return		;funcret
 10410  004A16                     __end_of_colourclick_readRGBC2:
 10411                           	callstack 0
 10412                           
 10413 ;; *************** function _colourclick_readRGBC *****************
 10414 ;; Defined at:
 10415 ;;		line 128 in file "colour_click.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;  tmpval          2   20[COMRAM] PTR struct .
 10418 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), colourcards_testingRGBC@abs(8), main@cur
      +rent(8), 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;		None
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  1    wreg      void 
 10423 ;; Registers used:
 10424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10434 ;;Total ram usage:        2 bytes
 10435 ;; Hardware stack levels used: 1
 10436 ;; Hardware stack levels required when called: 10
 10437 ;; This function calls:
 10438 ;;		_colourclick_readB
 10439 ;;		_colourclick_readC
 10440 ;;		_colourclick_readG
 10441 ;;		_colourclick_readR
 10442 ;; This function is called by:
 10443 ;;		_colourcards_readRGBC
 10444 ;;		_colourclick_readRGBC2
 10445 ;;		_colourclick_calibration
 10446 ;;		_colourcards_testingRGBC
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text44
 10451  005A44                     __ptext44:
 10452                           	callstack 0
 10453  005A44                     _colourclick_readRGBC:
 10454                           	callstack 19
 10455  005A44                     
 10456                           ;colour_click.c: 128: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 129: {
      +                          ;colour_click.c: 130:     tmpval->R = colourclick_readR();
 10457  005A44  ECF6  F02D         	call	_colourclick_readR	;wreg free
 10458  005A48  C015  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
 10459  005A4C  C016  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
 10460  005A50  C00E  FFDE         	movff	?_colourclick_readR,postinc2
 10461  005A54  C00F  FFDD         	movff	?_colourclick_readR+1,postdec2
 10462                           
 10463                           ;colour_click.c: 131:     tmpval->G = colourclick_readG();
 10464  005A58  EC1E  F02E         	call	_colourclick_readG	;wreg free
 10465  005A5C  EE20 F002          	lfsr	2,2
 10466  005A60  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
 10467  005A62  26D9               	addwf	fsr2l,f,c
 10468  005A64  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10469  005A66  22DA               	addwfc	fsr2h,f,c
 10470  005A68  C00E  FFDE         	movff	?_colourclick_readG,postinc2
 10471  005A6C  C00F  FFDD         	movff	?_colourclick_readG+1,postdec2
 10472                           
 10473                           ;colour_click.c: 132:     tmpval->B = colourclick_readB();
 10474  005A70  EC6E  F02E         	call	_colourclick_readB	;wreg free
 10475  005A74  EE20 F004          	lfsr	2,4
 10476  005A78  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
 10477  005A7A  26D9               	addwf	fsr2l,f,c
 10478  005A7C  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10479  005A7E  22DA               	addwfc	fsr2h,f,c
 10480  005A80  C00E  FFDE         	movff	?_colourclick_readB,postinc2
 10481  005A84  C00F  FFDD         	movff	?_colourclick_readB+1,postdec2
 10482                           
 10483                           ;colour_click.c: 133:     tmpval->C = colourclick_readC();
 10484  005A88  EC46  F02E         	call	_colourclick_readC	;wreg free
 10485  005A8C  EE20 F006          	lfsr	2,6
 10486  005A90  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
 10487  005A92  26D9               	addwf	fsr2l,f,c
 10488  005A94  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10489  005A96  22DA               	addwfc	fsr2h,f,c
 10490  005A98  C00E  FFDE         	movff	?_colourclick_readC,postinc2
 10491  005A9C  C00F  FFDD         	movff	?_colourclick_readC+1,postdec2
 10492  005AA0  0012               	return		;funcret
 10493  005AA2                     __end_of_colourclick_readRGBC:
 10494                           	callstack 0
 10495                           
 10496 ;; *************** function _colourclick_readR *****************
 10497 ;; Defined at:
 10498 ;;		line 53 in file "colour_click.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;		None
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;  tmp             2   18[COMRAM] unsigned int 
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  2   13[COMRAM] unsigned int 
 10505 ;; Registers used:
 10506 ;;		wreg, status,2, status,0, cstack
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/0
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10514 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10515 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10516 ;;Total ram usage:        7 bytes
 10517 ;; Hardware stack levels used: 1
 10518 ;; Hardware stack levels required when called: 9
 10519 ;; This function calls:
 10520 ;;		_I2C_2_Master_Read
 10521 ;;		_I2C_2_Master_RepStart
 10522 ;;		_I2C_2_Master_Start
 10523 ;;		_I2C_2_Master_Stop
 10524 ;;		_I2C_2_Master_Write
 10525 ;; This function is called by:
 10526 ;;		_colourclick_readRGBC
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text45
 10531  005BEC                     __ptext45:
 10532                           	callstack 0
 10533  005BEC                     _colourclick_readR:
 10534                           	callstack 19
 10535  005BEC                     
 10536                           ;colour_click.c: 55:  unsigned int tmp;;colour_click.c: 56:  I2C_2_Master_Start();
 10537  005BEC  ECA7  F031         	call	_I2C_2_Master_Start	;wreg free
 10538                           
 10539                           ;colour_click.c: 57:  I2C_2_Master_Write(0x52 | 0x00);
 10540  005BF0  0E52               	movlw	82
 10541  005BF2  EC90  F031         	call	_I2C_2_Master_Write
 10542                           
 10543                           ;colour_click.c: 58:  I2C_2_Master_Write(0xA0 | 0x16);
 10544  005BF6  0EB6               	movlw	182
 10545  005BF8  EC90  F031         	call	_I2C_2_Master_Write
 10546                           
 10547                           ;colour_click.c: 59:  I2C_2_Master_RepStart();
 10548  005BFC  ECAC  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10549                           
 10550                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x01);
 10551  005C00  0E53               	movlw	83
 10552  005C02  EC90  F031         	call	_I2C_2_Master_Write
 10553                           
 10554                           ;colour_click.c: 61:  tmp=I2C_2_Master_Read(1);
 10555  005C06  0E01               	movlw	1
 10556  005C08  ECC3  F02F         	call	_I2C_2_Master_Read
 10557  005C0C  6E10               	movwf	??_colourclick_readR^0,c
 10558  005C0E  5010               	movf	??_colourclick_readR^0,w,c
 10559  005C10  6E13               	movwf	colourclick_readR@tmp^0,c
 10560  005C12  6A14               	clrf	(colourclick_readR@tmp+1)^0,c
 10561                           
 10562                           ;colour_click.c: 62:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10563  005C14  0E00               	movlw	0
 10564  005C16  ECC3  F02F         	call	_I2C_2_Master_Read
 10565  005C1A  6E10               	movwf	??_colourclick_readR^0,c
 10566  005C1C  5010               	movf	??_colourclick_readR^0,w,c
 10567  005C1E  6E12               	movwf	(??_colourclick_readR+2)^0,c
 10568  005C20  6A11               	clrf	(??_colourclick_readR+1)^0,c
 10569  005C22  5013               	movf	colourclick_readR@tmp^0,w,c
 10570  005C24  1011               	iorwf	(??_colourclick_readR+1)^0,w,c
 10571  005C26  6E13               	movwf	colourclick_readR@tmp^0,c
 10572  005C28  5014               	movf	(colourclick_readR@tmp+1)^0,w,c
 10573  005C2A  1012               	iorwf	(??_colourclick_readR+2)^0,w,c
 10574  005C2C  6E14               	movwf	(colourclick_readR@tmp+1)^0,c
 10575                           
 10576                           ;colour_click.c: 63:  I2C_2_Master_Stop();
 10577  005C2E  ECA2  F031         	call	_I2C_2_Master_Stop	;wreg free
 10578  005C32                     
 10579                           ;colour_click.c: 64:  return tmp;
 10580  005C32  C013  F00E         	movff	colourclick_readR@tmp,?_colourclick_readR
 10581  005C36  C014  F00F         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
 10582  005C3A  0012               	return		;funcret
 10583  005C3C                     __end_of_colourclick_readR:
 10584                           	callstack 0
 10585                           
 10586 ;; *************** function _colourclick_readG *****************
 10587 ;; Defined at:
 10588 ;;		line 72 in file "colour_click.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;		None
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  tmp             2   18[COMRAM] unsigned int 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  2   13[COMRAM] unsigned int 
 10595 ;; Registers used:
 10596 ;;		wreg, status,2, status,0, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10604 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10605 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10606 ;;Total ram usage:        7 bytes
 10607 ;; Hardware stack levels used: 1
 10608 ;; Hardware stack levels required when called: 9
 10609 ;; This function calls:
 10610 ;;		_I2C_2_Master_Read
 10611 ;;		_I2C_2_Master_RepStart
 10612 ;;		_I2C_2_Master_Start
 10613 ;;		_I2C_2_Master_Stop
 10614 ;;		_I2C_2_Master_Write
 10615 ;; This function is called by:
 10616 ;;		_colourclick_readRGBC
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           	psect	text46
 10621  005C3C                     __ptext46:
 10622                           	callstack 0
 10623  005C3C                     _colourclick_readG:
 10624                           	callstack 19
 10625  005C3C                     
 10626                           ;colour_click.c: 74:  unsigned int tmp;;colour_click.c: 75:  I2C_2_Master_Start();
 10627  005C3C  ECA7  F031         	call	_I2C_2_Master_Start	;wreg free
 10628                           
 10629                           ;colour_click.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
 10630  005C40  0E52               	movlw	82
 10631  005C42  EC90  F031         	call	_I2C_2_Master_Write
 10632                           
 10633                           ;colour_click.c: 77:  I2C_2_Master_Write(0xA0 | 0x18);
 10634  005C46  0EB8               	movlw	184
 10635  005C48  EC90  F031         	call	_I2C_2_Master_Write
 10636                           
 10637                           ;colour_click.c: 78:  I2C_2_Master_RepStart();
 10638  005C4C  ECAC  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10639                           
 10640                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
 10641  005C50  0E53               	movlw	83
 10642  005C52  EC90  F031         	call	_I2C_2_Master_Write
 10643                           
 10644                           ;colour_click.c: 80:  tmp=I2C_2_Master_Read(1);
 10645  005C56  0E01               	movlw	1
 10646  005C58  ECC3  F02F         	call	_I2C_2_Master_Read
 10647  005C5C  6E10               	movwf	??_colourclick_readG^0,c
 10648  005C5E  5010               	movf	??_colourclick_readG^0,w,c
 10649  005C60  6E13               	movwf	colourclick_readG@tmp^0,c
 10650  005C62  6A14               	clrf	(colourclick_readG@tmp+1)^0,c
 10651                           
 10652                           ;colour_click.c: 81:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10653  005C64  0E00               	movlw	0
 10654  005C66  ECC3  F02F         	call	_I2C_2_Master_Read
 10655  005C6A  6E10               	movwf	??_colourclick_readG^0,c
 10656  005C6C  5010               	movf	??_colourclick_readG^0,w,c
 10657  005C6E  6E12               	movwf	(??_colourclick_readG+2)^0,c
 10658  005C70  6A11               	clrf	(??_colourclick_readG+1)^0,c
 10659  005C72  5013               	movf	colourclick_readG@tmp^0,w,c
 10660  005C74  1011               	iorwf	(??_colourclick_readG+1)^0,w,c
 10661  005C76  6E13               	movwf	colourclick_readG@tmp^0,c
 10662  005C78  5014               	movf	(colourclick_readG@tmp+1)^0,w,c
 10663  005C7A  1012               	iorwf	(??_colourclick_readG+2)^0,w,c
 10664  005C7C  6E14               	movwf	(colourclick_readG@tmp+1)^0,c
 10665                           
 10666                           ;colour_click.c: 82:  I2C_2_Master_Stop();
 10667  005C7E  ECA2  F031         	call	_I2C_2_Master_Stop	;wreg free
 10668  005C82                     
 10669                           ;colour_click.c: 83:  return tmp;
 10670  005C82  C013  F00E         	movff	colourclick_readG@tmp,?_colourclick_readG
 10671  005C86  C014  F00F         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
 10672  005C8A  0012               	return		;funcret
 10673  005C8C                     __end_of_colourclick_readG:
 10674                           	callstack 0
 10675                           
 10676 ;; *************** function _colourclick_readC *****************
 10677 ;; Defined at:
 10678 ;;		line 110 in file "colour_click.c"
 10679 ;; Parameters:    Size  Location     Type
 10680 ;;		None
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;  tmp             2   18[COMRAM] unsigned int 
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  2   13[COMRAM] unsigned int 
 10685 ;; Registers used:
 10686 ;;		wreg, status,2, status,0, cstack
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10694 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10695 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10696 ;;Total ram usage:        7 bytes
 10697 ;; Hardware stack levels used: 1
 10698 ;; Hardware stack levels required when called: 9
 10699 ;; This function calls:
 10700 ;;		_I2C_2_Master_Read
 10701 ;;		_I2C_2_Master_RepStart
 10702 ;;		_I2C_2_Master_Start
 10703 ;;		_I2C_2_Master_Stop
 10704 ;;		_I2C_2_Master_Write
 10705 ;; This function is called by:
 10706 ;;		_colourclick_readRGBC
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           	psect	text47
 10711  005C8C                     __ptext47:
 10712                           	callstack 0
 10713  005C8C                     _colourclick_readC:
 10714                           	callstack 19
 10715  005C8C                     
 10716                           ;colour_click.c: 112:  unsigned int tmp;;colour_click.c: 113:  I2C_2_Master_Start();
 10717  005C8C  ECA7  F031         	call	_I2C_2_Master_Start	;wreg free
 10718                           
 10719                           ;colour_click.c: 114:  I2C_2_Master_Write(0x52 | 0x00);
 10720  005C90  0E52               	movlw	82
 10721  005C92  EC90  F031         	call	_I2C_2_Master_Write
 10722                           
 10723                           ;colour_click.c: 115:  I2C_2_Master_Write(0xA0 | 0x14);
 10724  005C96  0EB4               	movlw	180
 10725  005C98  EC90  F031         	call	_I2C_2_Master_Write
 10726                           
 10727                           ;colour_click.c: 116:  I2C_2_Master_RepStart();
 10728  005C9C  ECAC  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10729                           
 10730                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x01);
 10731  005CA0  0E53               	movlw	83
 10732  005CA2  EC90  F031         	call	_I2C_2_Master_Write
 10733                           
 10734                           ;colour_click.c: 118:  tmp=I2C_2_Master_Read(1);
 10735  005CA6  0E01               	movlw	1
 10736  005CA8  ECC3  F02F         	call	_I2C_2_Master_Read
 10737  005CAC  6E10               	movwf	??_colourclick_readC^0,c
 10738  005CAE  5010               	movf	??_colourclick_readC^0,w,c
 10739  005CB0  6E13               	movwf	colourclick_readC@tmp^0,c
 10740  005CB2  6A14               	clrf	(colourclick_readC@tmp+1)^0,c
 10741                           
 10742                           ;colour_click.c: 119:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10743  005CB4  0E00               	movlw	0
 10744  005CB6  ECC3  F02F         	call	_I2C_2_Master_Read
 10745  005CBA  6E10               	movwf	??_colourclick_readC^0,c
 10746  005CBC  5010               	movf	??_colourclick_readC^0,w,c
 10747  005CBE  6E12               	movwf	(??_colourclick_readC+2)^0,c
 10748  005CC0  6A11               	clrf	(??_colourclick_readC+1)^0,c
 10749  005CC2  5013               	movf	colourclick_readC@tmp^0,w,c
 10750  005CC4  1011               	iorwf	(??_colourclick_readC+1)^0,w,c
 10751  005CC6  6E13               	movwf	colourclick_readC@tmp^0,c
 10752  005CC8  5014               	movf	(colourclick_readC@tmp+1)^0,w,c
 10753  005CCA  1012               	iorwf	(??_colourclick_readC+2)^0,w,c
 10754  005CCC  6E14               	movwf	(colourclick_readC@tmp+1)^0,c
 10755                           
 10756                           ;colour_click.c: 120:  I2C_2_Master_Stop();
 10757  005CCE  ECA2  F031         	call	_I2C_2_Master_Stop	;wreg free
 10758  005CD2                     
 10759                           ;colour_click.c: 121:  return tmp;
 10760  005CD2  C013  F00E         	movff	colourclick_readC@tmp,?_colourclick_readC
 10761  005CD6  C014  F00F         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
 10762  005CDA  0012               	return		;funcret
 10763  005CDC                     __end_of_colourclick_readC:
 10764                           	callstack 0
 10765                           
 10766 ;; *************** function _colourclick_readB *****************
 10767 ;; Defined at:
 10768 ;;		line 91 in file "colour_click.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;  tmp             2   18[COMRAM] unsigned int 
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  2   13[COMRAM] unsigned int 
 10775 ;; Registers used:
 10776 ;;		wreg, status,2, status,0, cstack
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10784 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10785 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10786 ;;Total ram usage:        7 bytes
 10787 ;; Hardware stack levels used: 1
 10788 ;; Hardware stack levels required when called: 9
 10789 ;; This function calls:
 10790 ;;		_I2C_2_Master_Read
 10791 ;;		_I2C_2_Master_RepStart
 10792 ;;		_I2C_2_Master_Start
 10793 ;;		_I2C_2_Master_Stop
 10794 ;;		_I2C_2_Master_Write
 10795 ;; This function is called by:
 10796 ;;		_colourclick_readRGBC
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text48
 10801  005CDC                     __ptext48:
 10802                           	callstack 0
 10803  005CDC                     _colourclick_readB:
 10804                           	callstack 19
 10805  005CDC                     
 10806                           ;colour_click.c: 93:  unsigned int tmp;;colour_click.c: 94:  I2C_2_Master_Start();
 10807  005CDC  ECA7  F031         	call	_I2C_2_Master_Start	;wreg free
 10808                           
 10809                           ;colour_click.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
 10810  005CE0  0E52               	movlw	82
 10811  005CE2  EC90  F031         	call	_I2C_2_Master_Write
 10812                           
 10813                           ;colour_click.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
 10814  005CE6  0EBA               	movlw	186
 10815  005CE8  EC90  F031         	call	_I2C_2_Master_Write
 10816                           
 10817                           ;colour_click.c: 97:  I2C_2_Master_RepStart();
 10818  005CEC  ECAC  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10819                           
 10820                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
 10821  005CF0  0E53               	movlw	83
 10822  005CF2  EC90  F031         	call	_I2C_2_Master_Write
 10823                           
 10824                           ;colour_click.c: 99:  tmp=I2C_2_Master_Read(1);
 10825  005CF6  0E01               	movlw	1
 10826  005CF8  ECC3  F02F         	call	_I2C_2_Master_Read
 10827  005CFC  6E10               	movwf	??_colourclick_readB^0,c
 10828  005CFE  5010               	movf	??_colourclick_readB^0,w,c
 10829  005D00  6E13               	movwf	colourclick_readB@tmp^0,c
 10830  005D02  6A14               	clrf	(colourclick_readB@tmp+1)^0,c
 10831                           
 10832                           ;colour_click.c: 100:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10833  005D04  0E00               	movlw	0
 10834  005D06  ECC3  F02F         	call	_I2C_2_Master_Read
 10835  005D0A  6E10               	movwf	??_colourclick_readB^0,c
 10836  005D0C  5010               	movf	??_colourclick_readB^0,w,c
 10837  005D0E  6E12               	movwf	(??_colourclick_readB+2)^0,c
 10838  005D10  6A11               	clrf	(??_colourclick_readB+1)^0,c
 10839  005D12  5013               	movf	colourclick_readB@tmp^0,w,c
 10840  005D14  1011               	iorwf	(??_colourclick_readB+1)^0,w,c
 10841  005D16  6E13               	movwf	colourclick_readB@tmp^0,c
 10842  005D18  5014               	movf	(colourclick_readB@tmp+1)^0,w,c
 10843  005D1A  1012               	iorwf	(??_colourclick_readB+2)^0,w,c
 10844  005D1C  6E14               	movwf	(colourclick_readB@tmp+1)^0,c
 10845                           
 10846                           ;colour_click.c: 101:  I2C_2_Master_Stop();
 10847  005D1E  ECA2  F031         	call	_I2C_2_Master_Stop	;wreg free
 10848  005D22                     
 10849                           ;colour_click.c: 102:  return tmp;
 10850  005D22  C013  F00E         	movff	colourclick_readB@tmp,?_colourclick_readB
 10851  005D26  C014  F00F         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
 10852  005D2A  0012               	return		;funcret
 10853  005D2C                     __end_of_colourclick_readB:
 10854                           	callstack 0
 10855                           
 10856 ;; *************** function _I2C_2_Master_Write *****************
 10857 ;; Defined at:
 10858 ;;		line 69 in file "I2C.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  data_byte       1    wreg     unsigned char 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  data_byte       1   10[COMRAM] unsigned char 
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      void 
 10865 ;; Registers used:
 10866 ;;		wreg, status,2, status,0, cstack
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10876 ;;Total ram usage:        1 bytes
 10877 ;; Hardware stack levels used: 1
 10878 ;; Hardware stack levels required when called: 8
 10879 ;; This function calls:
 10880 ;;		_I2C_2_Master_Idle
 10881 ;; This function is called by:
 10882 ;;		_interrupts_clear
 10883 ;;		_colourclick_writetoaddr
 10884 ;;		_colourclick_readR
 10885 ;;		_colourclick_readG
 10886 ;;		_colourclick_readB
 10887 ;;		_colourclick_readC
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           	psect	text49
 10892  006320                     __ptext49:
 10893                           	callstack 0
 10894  006320                     _I2C_2_Master_Write:
 10895                           	callstack 18
 10896                           
 10897                           ;incstack = 0
 10898                           ;I2C_2_Master_Write@data_byte stored from wreg
 10899  006320  6E0B               	movwf	I2C_2_Master_Write@data_byte^0,c
 10900  006322                     
 10901                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 10902  006322  ECA1  F030         	call	_I2C_2_Master_Idle	;wreg free
 10903  006326                     
 10904                           ;I2C.c: 72:   SSP2BUF = data_byte;
 10905  006326  C00B  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10906  00632A  0012               	return		;funcret
 10907  00632C                     __end_of_I2C_2_Master_Write:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _I2C_2_Master_Stop *****************
 10911 ;; Defined at:
 10912 ;;		line 59 in file "I2C.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;		None
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10930 ;;Total ram usage:        0 bytes
 10931 ;; Hardware stack levels used: 1
 10932 ;; Hardware stack levels required when called: 8
 10933 ;; This function calls:
 10934 ;;		_I2C_2_Master_Idle
 10935 ;; This function is called by:
 10936 ;;		_interrupts_clear
 10937 ;;		_colourclick_writetoaddr
 10938 ;;		_colourclick_readR
 10939 ;;		_colourclick_readG
 10940 ;;		_colourclick_readB
 10941 ;;		_colourclick_readC
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text50
 10946  006344                     __ptext50:
 10947                           	callstack 0
 10948  006344                     _I2C_2_Master_Stop:
 10949                           	callstack 18
 10950  006344                     
 10951                           ;I2C.c: 61:   I2C_2_Master_Idle();
 10952  006344  ECA1  F030         	call	_I2C_2_Master_Idle	;wreg free
 10953  006348                     
 10954                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 10955  006348  010E               	movlb	14	; () banked
 10956  00634A  85DA               	bsf	218,2,b	;volatile
 10957  00634C                     
 10958                           ; BSR set to: 14
 10959  00634C  0012               	return		;funcret
 10960  00634E                     __end_of_I2C_2_Master_Stop:
 10961                           	callstack 0
 10962                           
 10963 ;; *************** function _I2C_2_Master_Start *****************
 10964 ;; Defined at:
 10965 ;;		line 39 in file "I2C.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;		None
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;		None
 10970 ;; Return value:  Size  Location     Type
 10971 ;;                  1    wreg      void 
 10972 ;; Registers used:
 10973 ;;		wreg, status,2, status,0, cstack
 10974 ;; Tracked objects:
 10975 ;;		On entry : 0/0
 10976 ;;		On exit  : 0/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10983 ;;Total ram usage:        0 bytes
 10984 ;; Hardware stack levels used: 1
 10985 ;; Hardware stack levels required when called: 8
 10986 ;; This function calls:
 10987 ;;		_I2C_2_Master_Idle
 10988 ;; This function is called by:
 10989 ;;		_interrupts_clear
 10990 ;;		_colourclick_writetoaddr
 10991 ;;		_colourclick_readR
 10992 ;;		_colourclick_readG
 10993 ;;		_colourclick_readB
 10994 ;;		_colourclick_readC
 10995 ;; This function uses a non-reentrant model
 10996 ;;
 10997                           
 10998                           	psect	text51
 10999  00634E                     __ptext51:
 11000                           	callstack 0
 11001  00634E                     _I2C_2_Master_Start:
 11002                           	callstack 18
 11003  00634E                     
 11004                           ;I2C.c: 41:   I2C_2_Master_Idle();
 11005  00634E  ECA1  F030         	call	_I2C_2_Master_Idle	;wreg free
 11006  006352                     
 11007                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 11008  006352  010E               	movlb	14	; () banked
 11009  006354  81DA               	bsf	218,0,b	;volatile
 11010  006356                     
 11011                           ; BSR set to: 14
 11012  006356  0012               	return		;funcret
 11013  006358                     __end_of_I2C_2_Master_Start:
 11014                           	callstack 0
 11015                           
 11016 ;; *************** function _I2C_2_Master_RepStart *****************
 11017 ;; Defined at:
 11018 ;;		line 49 in file "I2C.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;		None
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;		None
 11023 ;; Return value:  Size  Location     Type
 11024 ;;                  1    wreg      void 
 11025 ;; Registers used:
 11026 ;;		wreg, status,2, status,0, cstack
 11027 ;; Tracked objects:
 11028 ;;		On entry : 0/0
 11029 ;;		On exit  : 0/0
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11036 ;;Total ram usage:        0 bytes
 11037 ;; Hardware stack levels used: 1
 11038 ;; Hardware stack levels required when called: 8
 11039 ;; This function calls:
 11040 ;;		_I2C_2_Master_Idle
 11041 ;; This function is called by:
 11042 ;;		_colourclick_readR
 11043 ;;		_colourclick_readG
 11044 ;;		_colourclick_readB
 11045 ;;		_colourclick_readC
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text52
 11050  006358                     __ptext52:
 11051                           	callstack 0
 11052  006358                     _I2C_2_Master_RepStart:
 11053                           	callstack 19
 11054  006358                     
 11055                           ;I2C.c: 51:   I2C_2_Master_Idle();
 11056  006358  ECA1  F030         	call	_I2C_2_Master_Idle	;wreg free
 11057  00635C                     
 11058                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
 11059  00635C  010E               	movlb	14	; () banked
 11060  00635E  83DA               	bsf	218,1,b	;volatile
 11061  006360                     
 11062                           ; BSR set to: 14
 11063  006360  0012               	return		;funcret
 11064  006362                     __end_of_I2C_2_Master_RepStart:
 11065                           	callstack 0
 11066                           
 11067 ;; *************** function _I2C_2_Master_Read *****************
 11068 ;; Defined at:
 11069 ;;		line 79 in file "I2C.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;  ack             1    wreg     unsigned char 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  ack             1   11[COMRAM] unsigned char 
 11074 ;;  tmp             1   12[COMRAM] unsigned char 
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  1    wreg      unsigned char 
 11077 ;; Registers used:
 11078 ;;		wreg, status,2, status,0, cstack
 11079 ;; Tracked objects:
 11080 ;;		On entry : 0/0
 11081 ;;		On exit  : 0/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11087 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11088 ;;Total ram usage:        3 bytes
 11089 ;; Hardware stack levels used: 1
 11090 ;; Hardware stack levels required when called: 8
 11091 ;; This function calls:
 11092 ;;		_I2C_2_Master_Idle
 11093 ;; This function is called by:
 11094 ;;		_colourclick_readR
 11095 ;;		_colourclick_readG
 11096 ;;		_colourclick_readB
 11097 ;;		_colourclick_readC
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text53
 11102  005F86                     __ptext53:
 11103                           	callstack 0
 11104  005F86                     _I2C_2_Master_Read:
 11105                           	callstack 19
 11106                           
 11107                           ; BSR set to: 14
 11108                           ;incstack = 0
 11109                           ;I2C_2_Master_Read@ack stored from wreg
 11110  005F86  6E0C               	movwf	I2C_2_Master_Read@ack^0,c
 11111  005F88                     
 11112                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
 11113  005F88  ECA1  F030         	call	_I2C_2_Master_Idle	;wreg free
 11114  005F8C                     
 11115                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
 11116  005F8C  010E               	movlb	14	; () banked
 11117  005F8E  87DA               	bsf	218,3,b	;volatile
 11118                           
 11119                           ;I2C.c: 84:   I2C_2_Master_Idle();
 11120  005F90  ECA1  F030         	call	_I2C_2_Master_Idle	;wreg free
 11121  005F94                     
 11122                           ;I2C.c: 85:   tmp = SSP2BUF;
 11123  005F94  CED5 F00D          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 11124                           
 11125                           ;I2C.c: 86:   I2C_2_Master_Idle();
 11126  005F98  ECA1  F030         	call	_I2C_2_Master_Idle	;wreg free
 11127  005F9C                     
 11128                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
 11129  005F9C  500C               	movf	I2C_2_Master_Read@ack^0,w,c
 11130  005F9E  B4D8               	btfsc	status,2,c
 11131  005FA0  EFD4  F02F         	goto	u11051
 11132  005FA4  EFD8  F02F         	goto	u11050
 11133  005FA8                     u11051:
 11134  005FA8  6A0B               	clrf	??_I2C_2_Master_Read^0,c
 11135  005FAA  2A0B               	incf	??_I2C_2_Master_Read^0,f,c
 11136  005FAC  EFD9  F02F         	goto	u11068
 11137  005FB0                     u11050:
 11138  005FB0  6A0B               	clrf	??_I2C_2_Master_Read^0,c
 11139  005FB2                     u11068:
 11140  005FB2  3A0B               	swapf	??_I2C_2_Master_Read^0,f,c
 11141  005FB4  460B               	rlncf	??_I2C_2_Master_Read^0,f,c
 11142  005FB6  010E               	movlb	14	; () banked
 11143  005FB8  51DA               	movf	218,w,b	;volatile
 11144  005FBA  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
 11145  005FBC  0BDF               	andlw	-33
 11146  005FBE  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
 11147  005FC0  6FDA               	movwf	218,b	;volatile
 11148  005FC2                     
 11149                           ; BSR set to: 14
 11150                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
 11151  005FC2  89DA               	bsf	218,4,b	;volatile
 11152  005FC4                     
 11153                           ; BSR set to: 14
 11154                           ;I2C.c: 89:   return tmp;
 11155  005FC4  500D               	movf	I2C_2_Master_Read@tmp^0,w,c
 11156  005FC6                     
 11157                           ; BSR set to: 14
 11158  005FC6  0012               	return		;funcret
 11159  005FC8                     __end_of_I2C_2_Master_Read:
 11160                           	callstack 0
 11161                           
 11162 ;; *************** function _I2C_2_Master_Idle *****************
 11163 ;; Defined at:
 11164 ;;		line 30 in file "I2C.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;		None
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;		None
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  1    wreg      void 
 11171 ;; Registers used:
 11172 ;;		wreg, status,2, status,0
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11182 ;;Total ram usage:        1 bytes
 11183 ;; Hardware stack levels used: 1
 11184 ;; Hardware stack levels required when called: 7
 11185 ;; This function calls:
 11186 ;;		Nothing
 11187 ;; This function is called by:
 11188 ;;		_I2C_2_Master_Start
 11189 ;;		_I2C_2_Master_RepStart
 11190 ;;		_I2C_2_Master_Stop
 11191 ;;		_I2C_2_Master_Write
 11192 ;;		_I2C_2_Master_Read
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           	psect	text54
 11197  006142                     __ptext54:
 11198                           	callstack 0
 11199  006142                     _I2C_2_Master_Idle:
 11200                           	callstack 18
 11201  006142                     l476:
 11202  006142  010E               	movlb	14	; () banked
 11203  006144  B5D8               	btfsc	216,2,b	;volatile
 11204  006146  EFA7  F030         	goto	u10121
 11205  00614A  EFA9  F030         	goto	u10120
 11206  00614E                     u10121:
 11207  00614E  EFA1  F030         	goto	l476
 11208  006152                     u10120:
 11209  006152                     
 11210                           ; BSR set to: 14
 11211  006152  CEDA F00A          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11212  006156  0E1F               	movlw	31
 11213  006158  160A               	andwf	??_I2C_2_Master_Idle^0,f,c
 11214  00615A  A4D8               	btfss	status,2,c
 11215  00615C  EFB2  F030         	goto	u10131
 11216  006160  EFB4  F030         	goto	u10130
 11217  006164                     u10131:
 11218  006164  EFA1  F030         	goto	l476
 11219  006168                     u10130:
 11220  006168                     
 11221                           ; BSR set to: 14
 11222  006168  0012               	return		;funcret
 11223  00616A                     __end_of_I2C_2_Master_Idle:
 11224                           	callstack 0
 11225                           
 11226 ;; *************** function _colourclickLEDs_C *****************
 11227 ;; Defined at:
 11228 ;;		line 84 in file "buttons_n_LEDs.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  tog             1    wreg     unsigned char 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  tog             1    9[COMRAM] unsigned char 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  1    wreg      void 
 11235 ;; Registers used:
 11236 ;;		wreg
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11246 ;;Total ram usage:        1 bytes
 11247 ;; Hardware stack levels used: 1
 11248 ;; Hardware stack levels required when called: 7
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_main
 11253 ;;		_colourclick_readRGBC2
 11254 ;;		_colourclick_calibration
 11255 ;;		_colourclickLEDs_init
 11256 ;;		_colourcards_testingRGBC
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text55
 11261  0061DC                     __ptext55:
 11262                           	callstack 0
 11263  0061DC                     _colourclickLEDs_C:
 11264                           	callstack 21
 11265                           
 11266                           ; BSR set to: 14
 11267                           ;incstack = 0
 11268                           ;colourclickLEDs_C@tog stored from wreg
 11269  0061DC  6E0A               	movwf	colourclickLEDs_C@tog^0,c
 11270  0061DE                     
 11271                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
 11272  0061DE  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
 11273  0061E0  D002               	bra	u11405
 11274  0061E2  927F               	bcf	127,1,c	;volatile
 11275  0061E4  D001               	bra	u11406
 11276  0061E6                     u11405:
 11277  0061E6  827F               	bsf	127,1,c	;volatile
 11278  0061E8                     u11406:
 11279                           
 11280                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
 11281  0061E8  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
 11282  0061EA  D002               	bra	u11415
 11283  0061EC  9879               	bcf	121,4,c	;volatile
 11284  0061EE  D001               	bra	u11416
 11285  0061F0                     u11415:
 11286  0061F0  8879               	bsf	121,4,c	;volatile
 11287  0061F2                     u11416:
 11288                           
 11289                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
 11290  0061F2  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
 11291  0061F4  D002               	bra	u11425
 11292  0061F6  9E7E               	bcf	126,7,c	;volatile
 11293  0061F8  D001               	bra	u11426
 11294  0061FA                     u11425:
 11295  0061FA  8E7E               	bsf	126,7,c	;volatile
 11296  0061FC                     u11426:
 11297  0061FC  0012               	return		;funcret
 11298  0061FE                     __end_of_colourclickLEDs_C:
 11299                           	callstack 0
 11300                           
 11301 ;; *************** function _colourcards_normaliseRGBC *****************
 11302 ;; Defined at:
 11303 ;;		line 209 in file "colour_cards.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  abs             2   48[COMRAM] PTR struct .
 11306 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
 11307 ;;  rel             2   50[COMRAM] PTR struct .
 11308 ;;		 -> colourcards_testingRGBC@rel(12), colourcards_readRGBC@rel(12), 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  C               2   58[COMRAM] unsigned int 
 11311 ;;  B               2   56[COMRAM] unsigned int 
 11312 ;;  G               2   54[COMRAM] unsigned int 
 11313 ;;  R               2   52[COMRAM] unsigned int 
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  1    wreg      void 
 11316 ;; Registers used:
 11317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11324 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;Total ram usage:       12 bytes
 11328 ;; Hardware stack levels used: 1
 11329 ;; Hardware stack levels required when called: 8
 11330 ;; This function calls:
 11331 ;;		___fldiv
 11332 ;;		___xxtofl
 11333 ;; This function is called by:
 11334 ;;		_colourcards_readRGBC
 11335 ;;		_colourcards_testingRGBC
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text56
 11340  0045E6                     __ptext56:
 11341                           	callstack 0
 11342  0045E6                     _colourcards_normaliseRGBC:
 11343                           	callstack 21
 11344  0045E6                     
 11345                           ;colour_cards.c: 209: void colourcards_normaliseRGBC(RGBC_val *abs, RGB_rel *rel);colour
      +                          _cards.c: 210: {;colour_cards.c: 211:     unsigned int R = abs->R;
 11346  0045E6  C031  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
 11347  0045EA  C032  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
 11348  0045EE  CFDE F035          	movff	postinc2,colourcards_normaliseRGBC@R
 11349  0045F2  CFDD F036          	movff	postdec2,colourcards_normaliseRGBC@R+1
 11350  0045F6                     
 11351                           ;colour_cards.c: 212:     unsigned int G = abs->G;
 11352  0045F6  EE20 F002          	lfsr	2,2
 11353  0045FA  5031               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11354  0045FC  26D9               	addwf	fsr2l,f,c
 11355  0045FE  5032               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11356  004600  22DA               	addwfc	fsr2h,f,c
 11357  004602  CFDE F037          	movff	postinc2,colourcards_normaliseRGBC@G
 11358  004606  CFDD F038          	movff	postdec2,colourcards_normaliseRGBC@G+1
 11359  00460A                     
 11360                           ;colour_cards.c: 213:     unsigned int B = abs->B;
 11361  00460A  EE20 F004          	lfsr	2,4
 11362  00460E  5031               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11363  004610  26D9               	addwf	fsr2l,f,c
 11364  004612  5032               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11365  004614  22DA               	addwfc	fsr2h,f,c
 11366  004616  CFDE F039          	movff	postinc2,colourcards_normaliseRGBC@B
 11367  00461A  CFDD F03A          	movff	postdec2,colourcards_normaliseRGBC@B+1
 11368  00461E                     
 11369                           ;colour_cards.c: 214:     unsigned int C = abs->C;
 11370  00461E  EE20 F006          	lfsr	2,6
 11371  004622  5031               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11372  004624  26D9               	addwf	fsr2l,f,c
 11373  004626  5032               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11374  004628  22DA               	addwfc	fsr2h,f,c
 11375  00462A  CFDE F03B          	movff	postinc2,colourcards_normaliseRGBC@C
 11376  00462E  CFDD F03C          	movff	postdec2,colourcards_normaliseRGBC@C+1
 11377  004632                     
 11378                           ;colour_cards.c: 216:     rel->R = (float)R/(float)C;
 11379  004632  C035  F00A         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
 11380  004636  C036  F00B         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
 11381  00463A  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11382  00463C  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11383  00463E  0E00               	movlw	0
 11384  004640  ECE9  F01E         	call	___xxtofl
 11385  004644  C00A  F018         	movff	?___xxtofl,___fldiv@b
 11386  004648  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 11387  00464C  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 11388  004650  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 11389  004654  C03B  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11390  004658  C03C  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11391  00465C  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11392  00465E  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11393  004660  0E00               	movlw	0
 11394  004662  ECE9  F01E         	call	___xxtofl
 11395  004666  C00A  F01C         	movff	?___xxtofl,___fldiv@a
 11396  00466A  C00B  F01D         	movff	?___xxtofl+1,___fldiv@a+1
 11397  00466E  C00C  F01E         	movff	?___xxtofl+2,___fldiv@a+2
 11398  004672  C00D  F01F         	movff	?___xxtofl+3,___fldiv@a+3
 11399  004676  ECBF  F018         	call	___fldiv	;wreg free
 11400  00467A  C033  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
 11401  00467E  C034  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
 11402  004682  C018  FFDE         	movff	?___fldiv,postinc2
 11403  004686  C019  FFDE         	movff	?___fldiv+1,postinc2
 11404  00468A  C01A  FFDE         	movff	?___fldiv+2,postinc2
 11405  00468E  C01B  FFDE         	movff	?___fldiv+3,postinc2
 11406  004692                     
 11407                           ;colour_cards.c: 217:     rel->G = (float)G/(float)C;
 11408  004692  C037  F00A         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
 11409  004696  C038  F00B         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
 11410  00469A  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11411  00469C  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11412  00469E  0E00               	movlw	0
 11413  0046A0  ECE9  F01E         	call	___xxtofl
 11414  0046A4  C00A  F018         	movff	?___xxtofl,___fldiv@b
 11415  0046A8  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 11416  0046AC  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 11417  0046B0  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 11418  0046B4  C03B  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11419  0046B8  C03C  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11420  0046BC  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11421  0046BE  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11422  0046C0  0E00               	movlw	0
 11423  0046C2  ECE9  F01E         	call	___xxtofl
 11424  0046C6  C00A  F01C         	movff	?___xxtofl,___fldiv@a
 11425  0046CA  C00B  F01D         	movff	?___xxtofl+1,___fldiv@a+1
 11426  0046CE  C00C  F01E         	movff	?___xxtofl+2,___fldiv@a+2
 11427  0046D2  C00D  F01F         	movff	?___xxtofl+3,___fldiv@a+3
 11428  0046D6  ECBF  F018         	call	___fldiv	;wreg free
 11429  0046DA  EE20 F004          	lfsr	2,4
 11430  0046DE  5033               	movf	colourcards_normaliseRGBC@rel^0,w,c
 11431  0046E0  26D9               	addwf	fsr2l,f,c
 11432  0046E2  5034               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
 11433  0046E4  22DA               	addwfc	fsr2h,f,c
 11434  0046E6  C018  FFDE         	movff	?___fldiv,postinc2
 11435  0046EA  C019  FFDE         	movff	?___fldiv+1,postinc2
 11436  0046EE  C01A  FFDE         	movff	?___fldiv+2,postinc2
 11437  0046F2  C01B  FFDE         	movff	?___fldiv+3,postinc2
 11438  0046F6                     
 11439                           ;colour_cards.c: 218:     rel->B = (float)B/(float)C;
 11440  0046F6  C039  F00A         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
 11441  0046FA  C03A  F00B         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
 11442  0046FE  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11443  004700  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11444  004702  0E00               	movlw	0
 11445  004704  ECE9  F01E         	call	___xxtofl
 11446  004708  C00A  F018         	movff	?___xxtofl,___fldiv@b
 11447  00470C  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 11448  004710  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 11449  004714  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 11450  004718  C03B  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11451  00471C  C03C  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11452  004720  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11453  004722  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11454  004724  0E00               	movlw	0
 11455  004726  ECE9  F01E         	call	___xxtofl
 11456  00472A  C00A  F01C         	movff	?___xxtofl,___fldiv@a
 11457  00472E  C00B  F01D         	movff	?___xxtofl+1,___fldiv@a+1
 11458  004732  C00C  F01E         	movff	?___xxtofl+2,___fldiv@a+2
 11459  004736  C00D  F01F         	movff	?___xxtofl+3,___fldiv@a+3
 11460  00473A  ECBF  F018         	call	___fldiv	;wreg free
 11461  00473E  EE20 F008          	lfsr	2,8
 11462  004742  5033               	movf	colourcards_normaliseRGBC@rel^0,w,c
 11463  004744  26D9               	addwf	fsr2l,f,c
 11464  004746  5034               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
 11465  004748  22DA               	addwfc	fsr2h,f,c
 11466  00474A  C018  FFDE         	movff	?___fldiv,postinc2
 11467  00474E  C019  FFDE         	movff	?___fldiv+1,postinc2
 11468  004752  C01A  FFDE         	movff	?___fldiv+2,postinc2
 11469  004756  C01B  FFDE         	movff	?___fldiv+3,postinc2
 11470  00475A  0012               	return		;funcret
 11471  00475C                     __end_of_colourcards_normaliseRGBC:
 11472                           	callstack 0
 11473                           
 11474 ;; *************** function ___fldiv *****************
 11475 ;; Defined at:
 11476 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  b               4   23[COMRAM] void 
 11479 ;;  a               4   27[COMRAM] void 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  grs             4   42[COMRAM] unsigned long 
 11482 ;;  rem             4   35[COMRAM] unsigned long 
 11483 ;;  new_exp         2   40[COMRAM] short 
 11484 ;;  aexp            1   47[COMRAM] unsigned char 
 11485 ;;  bexp            1   46[COMRAM] unsigned char 
 11486 ;;  sign            1   39[COMRAM] unsigned char 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  4   23[COMRAM] unsigned char 
 11489 ;; Registers used:
 11490 ;;		wreg, status,2, status,0
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11496 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11499 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11500 ;;Total ram usage:       25 bytes
 11501 ;; Hardware stack levels used: 1
 11502 ;; Hardware stack levels required when called: 7
 11503 ;; This function calls:
 11504 ;;		Nothing
 11505 ;; This function is called by:
 11506 ;;		_colourcards_normaliseRGBC
 11507 ;;		_efgtoa
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           	psect	text57
 11512  00317E                     __ptext57:
 11513                           	callstack 0
 11514  00317E                     ___fldiv:
 11515                           	callstack 17
 11516  00317E  501B               	movf	(___fldiv@b+3)^0,w,c
 11517  003180  0B80               	andlw	128
 11518  003182  6E28               	movwf	___fldiv@sign^0,c
 11519  003184  501B               	movf	(___fldiv@b+3)^0,w,c
 11520  003186  241B               	addwf	(___fldiv@b+3)^0,w,c
 11521  003188  6E2F               	movwf	___fldiv@bexp^0,c
 11522  00318A  AE1A               	btfss	(___fldiv@b+2)^0,7,c
 11523  00318C  EFCA  F018         	goto	u9111
 11524  003190  EFCC  F018         	goto	u9110
 11525  003194                     u9111:
 11526  003194  EFCD  F018         	goto	l7216
 11527  003198                     u9110:
 11528  003198  802F               	bsf	___fldiv@bexp^0,0,c
 11529  00319A                     l7216:
 11530  00319A  502F               	movf	___fldiv@bexp^0,w,c
 11531  00319C  B4D8               	btfsc	status,2,c
 11532  00319E  EFD3  F018         	goto	u9121
 11533  0031A2  EFD5  F018         	goto	u9120
 11534  0031A6                     u9121:
 11535  0031A6  EFEA  F018         	goto	l7226
 11536  0031AA                     u9120:
 11537  0031AA  282F               	incf	___fldiv@bexp^0,w,c
 11538  0031AC  A4D8               	btfss	status,2,c
 11539  0031AE  EFDB  F018         	goto	u9131
 11540  0031B2  EFDD  F018         	goto	u9130
 11541  0031B6                     u9131:
 11542  0031B6  EFE5  F018         	goto	l7222
 11543  0031BA                     u9130:
 11544  0031BA  0E00               	movlw	0
 11545  0031BC  6E18               	movwf	___fldiv@b^0,c
 11546  0031BE  0E00               	movlw	0
 11547  0031C0  6E19               	movwf	(___fldiv@b+1)^0,c
 11548  0031C2  0E00               	movlw	0
 11549  0031C4  6E1A               	movwf	(___fldiv@b+2)^0,c
 11550  0031C6  0E00               	movlw	0
 11551  0031C8  6E1B               	movwf	(___fldiv@b+3)^0,c
 11552  0031CA                     l7222:
 11553  0031CA  8E1A               	bsf	(___fldiv@b+2)^0,7,c
 11554  0031CC  0E00               	movlw	0
 11555  0031CE  6E1B               	movwf	(___fldiv@b+3)^0,c
 11556  0031D0  EFF2  F018         	goto	l7228
 11557  0031D4                     l7226:
 11558  0031D4  0E00               	movlw	0
 11559  0031D6  6E18               	movwf	___fldiv@b^0,c
 11560  0031D8  0E00               	movlw	0
 11561  0031DA  6E19               	movwf	(___fldiv@b+1)^0,c
 11562  0031DC  0E00               	movlw	0
 11563  0031DE  6E1A               	movwf	(___fldiv@b+2)^0,c
 11564  0031E0  0E00               	movlw	0
 11565  0031E2  6E1B               	movwf	(___fldiv@b+3)^0,c
 11566  0031E4                     l7228:
 11567  0031E4  501F               	movf	(___fldiv@a+3)^0,w,c
 11568  0031E6  0B80               	andlw	128
 11569  0031E8  1A28               	xorwf	___fldiv@sign^0,f,c
 11570  0031EA  501F               	movf	(___fldiv@a+3)^0,w,c
 11571  0031EC  241F               	addwf	(___fldiv@a+3)^0,w,c
 11572  0031EE  6E30               	movwf	___fldiv@aexp^0,c
 11573  0031F0  AE1E               	btfss	(___fldiv@a+2)^0,7,c
 11574  0031F2  EFFD  F018         	goto	u9141
 11575  0031F6  EFFF  F018         	goto	u9140
 11576  0031FA                     u9141:
 11577  0031FA  EF00  F019         	goto	l7236
 11578  0031FE                     u9140:
 11579  0031FE  8030               	bsf	___fldiv@aexp^0,0,c
 11580  003200                     l7236:
 11581  003200  5030               	movf	___fldiv@aexp^0,w,c
 11582  003202  B4D8               	btfsc	status,2,c
 11583  003204  EF06  F019         	goto	u9151
 11584  003208  EF08  F019         	goto	u9150
 11585  00320C                     u9151:
 11586  00320C  EF1D  F019         	goto	l7246
 11587  003210                     u9150:
 11588  003210  2830               	incf	___fldiv@aexp^0,w,c
 11589  003212  A4D8               	btfss	status,2,c
 11590  003214  EF0E  F019         	goto	u9161
 11591  003218  EF10  F019         	goto	u9160
 11592  00321C                     u9161:
 11593  00321C  EF18  F019         	goto	l7242
 11594  003220                     u9160:
 11595  003220  0E00               	movlw	0
 11596  003222  6E1C               	movwf	___fldiv@a^0,c
 11597  003224  0E00               	movlw	0
 11598  003226  6E1D               	movwf	(___fldiv@a+1)^0,c
 11599  003228  0E00               	movlw	0
 11600  00322A  6E1E               	movwf	(___fldiv@a+2)^0,c
 11601  00322C  0E00               	movlw	0
 11602  00322E  6E1F               	movwf	(___fldiv@a+3)^0,c
 11603  003230                     l7242:
 11604  003230  8E1E               	bsf	(___fldiv@a+2)^0,7,c
 11605  003232  0E00               	movlw	0
 11606  003234  6E1F               	movwf	(___fldiv@a+3)^0,c
 11607  003236  EF25  F019         	goto	l7248
 11608  00323A                     l7246:
 11609  00323A  0E00               	movlw	0
 11610  00323C  6E1C               	movwf	___fldiv@a^0,c
 11611  00323E  0E00               	movlw	0
 11612  003240  6E1D               	movwf	(___fldiv@a+1)^0,c
 11613  003242  0E00               	movlw	0
 11614  003244  6E1E               	movwf	(___fldiv@a+2)^0,c
 11615  003246  0E00               	movlw	0
 11616  003248  6E1F               	movwf	(___fldiv@a+3)^0,c
 11617  00324A                     l7248:
 11618  00324A  501C               	movf	___fldiv@a^0,w,c
 11619  00324C  101D               	iorwf	(___fldiv@a+1)^0,w,c
 11620  00324E  101E               	iorwf	(___fldiv@a+2)^0,w,c
 11621  003250  101F               	iorwf	(___fldiv@a+3)^0,w,c
 11622  003252  A4D8               	btfss	status,2,c
 11623  003254  EF2E  F019         	goto	u9171
 11624  003258  EF30  F019         	goto	u9170
 11625  00325C                     u9171:
 11626  00325C  EF48  F019         	goto	l7260
 11627  003260                     u9170:
 11628  003260  0E00               	movlw	0
 11629  003262  6E18               	movwf	___fldiv@b^0,c
 11630  003264  0E00               	movlw	0
 11631  003266  6E19               	movwf	(___fldiv@b+1)^0,c
 11632  003268  0E00               	movlw	0
 11633  00326A  6E1A               	movwf	(___fldiv@b+2)^0,c
 11634  00326C  0E00               	movlw	0
 11635  00326E  6E1B               	movwf	(___fldiv@b+3)^0,c
 11636  003270  0E80               	movlw	128
 11637  003272  121A               	iorwf	(___fldiv@b+2)^0,f,c
 11638  003274  0E7F               	movlw	127
 11639  003276  121B               	iorwf	(___fldiv@b+3)^0,f,c
 11640  003278                     l7254:
 11641  003278  5028               	movf	___fldiv@sign^0,w,c
 11642  00327A  121B               	iorwf	(___fldiv@b+3)^0,f,c
 11643  00327C  C018  F018         	movff	___fldiv@b,?___fldiv
 11644  003280  C019  F019         	movff	___fldiv@b+1,?___fldiv+1
 11645  003284  C01A  F01A         	movff	___fldiv@b+2,?___fldiv+2
 11646  003288  C01B  F01B         	movff	___fldiv@b+3,?___fldiv+3
 11647  00328C  EF8B  F01A         	goto	l1382
 11648  003290                     l7260:
 11649  003290  502F               	movf	___fldiv@bexp^0,w,c
 11650  003292  A4D8               	btfss	status,2,c
 11651  003294  EF4E  F019         	goto	u9181
 11652  003298  EF50  F019         	goto	u9180
 11653  00329C                     u9181:
 11654  00329C  EF5A  F019         	goto	l7268
 11655  0032A0                     u9180:
 11656  0032A0  0E00               	movlw	0
 11657  0032A2  6E18               	movwf	?___fldiv^0,c
 11658  0032A4  0E00               	movlw	0
 11659  0032A6  6E19               	movwf	(?___fldiv+1)^0,c
 11660  0032A8  0E00               	movlw	0
 11661  0032AA  6E1A               	movwf	(?___fldiv+2)^0,c
 11662  0032AC  0E00               	movlw	0
 11663  0032AE  6E1B               	movwf	(?___fldiv+3)^0,c
 11664  0032B0  EF8B  F01A         	goto	l1382
 11665  0032B4                     l7268:
 11666  0032B4  5030               	movf	___fldiv@aexp^0,w,c
 11667  0032B6  C02F  F020         	movff	___fldiv@bexp,??___fldiv
 11668  0032BA  6A21               	clrf	(??___fldiv+1)^0,c
 11669  0032BC  5E20               	subwf	??___fldiv^0,f,c
 11670  0032BE  0E00               	movlw	0
 11671  0032C0  5A21               	subwfb	(??___fldiv+1)^0,f,c
 11672  0032C2  0E7F               	movlw	127
 11673  0032C4  2420               	addwf	??___fldiv^0,w,c
 11674  0032C6  6E29               	movwf	___fldiv@new_exp^0,c
 11675  0032C8  0E00               	movlw	0
 11676  0032CA  2021               	addwfc	(??___fldiv+1)^0,w,c
 11677  0032CC  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 11678  0032CE  C018  F024         	movff	___fldiv@b,___fldiv@rem
 11679  0032D2  C019  F025         	movff	___fldiv@b+1,___fldiv@rem+1
 11680  0032D6  C01A  F026         	movff	___fldiv@b+2,___fldiv@rem+2
 11681  0032DA  C01B  F027         	movff	___fldiv@b+3,___fldiv@rem+3
 11682  0032DE  0E00               	movlw	0
 11683  0032E0  6E18               	movwf	___fldiv@b^0,c
 11684  0032E2  0E00               	movlw	0
 11685  0032E4  6E19               	movwf	(___fldiv@b+1)^0,c
 11686  0032E6  0E00               	movlw	0
 11687  0032E8  6E1A               	movwf	(___fldiv@b+2)^0,c
 11688  0032EA  0E00               	movlw	0
 11689  0032EC  6E1B               	movwf	(___fldiv@b+3)^0,c
 11690  0032EE  0E00               	movlw	0
 11691  0032F0  6E2B               	movwf	___fldiv@grs^0,c
 11692  0032F2  0E00               	movlw	0
 11693  0032F4  6E2C               	movwf	(___fldiv@grs+1)^0,c
 11694  0032F6  0E00               	movlw	0
 11695  0032F8  6E2D               	movwf	(___fldiv@grs+2)^0,c
 11696  0032FA  0E00               	movlw	0
 11697  0032FC  6E2E               	movwf	(___fldiv@grs+3)^0,c
 11698  0032FE  0E00               	movlw	0
 11699  003300  6E30               	movwf	___fldiv@aexp^0,c
 11700  003302  EFBB  F019         	goto	l1384
 11701  003306                     l7278:
 11702  003306  5030               	movf	___fldiv@aexp^0,w,c
 11703  003308  B4D8               	btfsc	status,2,c
 11704  00330A  EF89  F019         	goto	u9191
 11705  00330E  EF8B  F019         	goto	u9190
 11706  003312                     u9191:
 11707  003312  EFA2  F019         	goto	l7286
 11708  003316                     u9190:
 11709  003316  90D8               	bcf	status,0,c
 11710  003318  3624               	rlcf	___fldiv@rem^0,f,c
 11711  00331A  3625               	rlcf	(___fldiv@rem+1)^0,f,c
 11712  00331C  3626               	rlcf	(___fldiv@rem+2)^0,f,c
 11713  00331E  3627               	rlcf	(___fldiv@rem+3)^0,f,c
 11714  003320  90D8               	bcf	status,0,c
 11715  003322  3618               	rlcf	___fldiv@b^0,f,c
 11716  003324  3619               	rlcf	(___fldiv@b+1)^0,f,c
 11717  003326  361A               	rlcf	(___fldiv@b+2)^0,f,c
 11718  003328  361B               	rlcf	(___fldiv@b+3)^0,f,c
 11719  00332A  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 11720  00332C  EF9A  F019         	goto	u9201
 11721  003330  EF9C  F019         	goto	u9200
 11722  003334                     u9201:
 11723  003334  EF9D  F019         	goto	l1387
 11724  003338                     u9200:
 11725  003338  8018               	bsf	___fldiv@b^0,0,c
 11726  00333A                     l1387:
 11727  00333A  90D8               	bcf	status,0,c
 11728  00333C  362B               	rlcf	___fldiv@grs^0,f,c
 11729  00333E  362C               	rlcf	(___fldiv@grs+1)^0,f,c
 11730  003340  362D               	rlcf	(___fldiv@grs+2)^0,f,c
 11731  003342  362E               	rlcf	(___fldiv@grs+3)^0,f,c
 11732  003344                     l7286:
 11733  003344  501C               	movf	___fldiv@a^0,w,c
 11734  003346  5C24               	subwf	___fldiv@rem^0,w,c
 11735  003348  501D               	movf	(___fldiv@a+1)^0,w,c
 11736  00334A  5825               	subwfb	(___fldiv@rem+1)^0,w,c
 11737  00334C  501E               	movf	(___fldiv@a+2)^0,w,c
 11738  00334E  5826               	subwfb	(___fldiv@rem+2)^0,w,c
 11739  003350  501F               	movf	(___fldiv@a+3)^0,w,c
 11740  003352  5827               	subwfb	(___fldiv@rem+3)^0,w,c
 11741  003354  A0D8               	btfss	status,0,c
 11742  003356  EFAF  F019         	goto	u9211
 11743  00335A  EFB1  F019         	goto	u9210
 11744  00335E                     u9211:
 11745  00335E  EFBA  F019         	goto	l7292
 11746  003362                     u9210:
 11747  003362  8C2E               	bsf	(___fldiv@grs+3)^0,6,c
 11748  003364  501C               	movf	___fldiv@a^0,w,c
 11749  003366  5E24               	subwf	___fldiv@rem^0,f,c
 11750  003368  501D               	movf	(___fldiv@a+1)^0,w,c
 11751  00336A  5A25               	subwfb	(___fldiv@rem+1)^0,f,c
 11752  00336C  501E               	movf	(___fldiv@a+2)^0,w,c
 11753  00336E  5A26               	subwfb	(___fldiv@rem+2)^0,f,c
 11754  003370  501F               	movf	(___fldiv@a+3)^0,w,c
 11755  003372  5A27               	subwfb	(___fldiv@rem+3)^0,f,c
 11756  003374                     l7292:
 11757  003374  2A30               	incf	___fldiv@aexp^0,f,c
 11758  003376                     l1384:
 11759  003376  0E19               	movlw	25
 11760  003378  6430               	cpfsgt	___fldiv@aexp^0,c
 11761  00337A  EFC1  F019         	goto	u9221
 11762  00337E  EFC3  F019         	goto	u9220
 11763  003382                     u9221:
 11764  003382  EF83  F019         	goto	l7278
 11765  003386                     u9220:
 11766  003386  5024               	movf	___fldiv@rem^0,w,c
 11767  003388  1025               	iorwf	(___fldiv@rem+1)^0,w,c
 11768  00338A  1026               	iorwf	(___fldiv@rem+2)^0,w,c
 11769  00338C  1027               	iorwf	(___fldiv@rem+3)^0,w,c
 11770  00338E  B4D8               	btfsc	status,2,c
 11771  003390  EFCC  F019         	goto	u9231
 11772  003394  EFCE  F019         	goto	u9230
 11773  003398                     u9231:
 11774  003398  EFE6  F019         	goto	l7304
 11775  00339C                     u9230:
 11776  00339C  802B               	bsf	___fldiv@grs^0,0,c
 11777  00339E  EFE6  F019         	goto	l7304
 11778  0033A2                     l7298:
 11779  0033A2  90D8               	bcf	status,0,c
 11780  0033A4  3618               	rlcf	___fldiv@b^0,f,c
 11781  0033A6  3619               	rlcf	(___fldiv@b+1)^0,f,c
 11782  0033A8  361A               	rlcf	(___fldiv@b+2)^0,f,c
 11783  0033AA  361B               	rlcf	(___fldiv@b+3)^0,f,c
 11784  0033AC  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 11785  0033AE  EFDB  F019         	goto	u9241
 11786  0033B2  EFDD  F019         	goto	u9240
 11787  0033B6                     u9241:
 11788  0033B6  EFDE  F019         	goto	l1393
 11789  0033BA                     u9240:
 11790  0033BA  8018               	bsf	___fldiv@b^0,0,c
 11791  0033BC                     l1393:
 11792  0033BC  90D8               	bcf	status,0,c
 11793  0033BE  362B               	rlcf	___fldiv@grs^0,f,c
 11794  0033C0  362C               	rlcf	(___fldiv@grs+1)^0,f,c
 11795  0033C2  362D               	rlcf	(___fldiv@grs+2)^0,f,c
 11796  0033C4  362E               	rlcf	(___fldiv@grs+3)^0,f,c
 11797  0033C6  0629               	decf	___fldiv@new_exp^0,f,c
 11798  0033C8  A0D8               	btfss	status,0,c
 11799  0033CA  062A               	decf	(___fldiv@new_exp+1)^0,f,c
 11800  0033CC                     l7304:
 11801  0033CC  AE1A               	btfss	(___fldiv@b+2)^0,7,c
 11802  0033CE  EFEB  F019         	goto	u9251
 11803  0033D2  EFED  F019         	goto	u9250
 11804  0033D6                     u9251:
 11805  0033D6  EFD1  F019         	goto	l7298
 11806  0033DA                     u9250:
 11807  0033DA  0E00               	movlw	0
 11808  0033DC  6E30               	movwf	___fldiv@aexp^0,c
 11809  0033DE  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 11810  0033E0  EFF4  F019         	goto	u9261
 11811  0033E4  EFF6  F019         	goto	u9260
 11812  0033E8                     u9261:
 11813  0033E8  EF1A  F01A         	goto	l1395
 11814  0033EC                     u9260:
 11815  0033EC  0EFF               	movlw	255
 11816  0033EE  142B               	andwf	___fldiv@grs^0,w,c
 11817  0033F0  6E20               	movwf	??___fldiv^0,c
 11818  0033F2  0EFF               	movlw	255
 11819  0033F4  142C               	andwf	(___fldiv@grs+1)^0,w,c
 11820  0033F6  6E21               	movwf	(??___fldiv+1)^0,c
 11821  0033F8  0EFF               	movlw	255
 11822  0033FA  142D               	andwf	(___fldiv@grs+2)^0,w,c
 11823  0033FC  6E22               	movwf	(??___fldiv+2)^0,c
 11824  0033FE  0E7F               	movlw	127
 11825  003400  142E               	andwf	(___fldiv@grs+3)^0,w,c
 11826  003402  6E23               	movwf	(??___fldiv+3)^0,c
 11827  003404  5020               	movf	??___fldiv^0,w,c
 11828  003406  1021               	iorwf	(??___fldiv+1)^0,w,c
 11829  003408  1022               	iorwf	(??___fldiv+2)^0,w,c
 11830  00340A  1023               	iorwf	(??___fldiv+3)^0,w,c
 11831  00340C  B4D8               	btfsc	status,2,c
 11832  00340E  EF0B  F01A         	goto	u9271
 11833  003412  EF0D  F01A         	goto	u9270
 11834  003416                     u9271:
 11835  003416  EF11  F01A         	goto	l1396
 11836  00341A                     u9270:
 11837  00341A                     l7312:
 11838  00341A  0E01               	movlw	1
 11839  00341C  6E30               	movwf	___fldiv@aexp^0,c
 11840  00341E  EF1A  F01A         	goto	l1395
 11841  003422                     l1396:
 11842  003422  A018               	btfss	___fldiv@b^0,0,c
 11843  003424  EF16  F01A         	goto	u9281
 11844  003428  EF18  F01A         	goto	u9280
 11845  00342C                     u9281:
 11846  00342C  EF1A  F01A         	goto	l1395
 11847  003430                     u9280:
 11848  003430  EF0D  F01A         	goto	l7312
 11849  003434                     l1395:
 11850  003434  5030               	movf	___fldiv@aexp^0,w,c
 11851  003436  B4D8               	btfsc	status,2,c
 11852  003438  EF20  F01A         	goto	u9291
 11853  00343C  EF22  F01A         	goto	u9290
 11854  003440                     u9291:
 11855  003440  EF46  F01A         	goto	l7324
 11856  003444                     u9290:
 11857  003444  0E01               	movlw	1
 11858  003446  2618               	addwf	___fldiv@b^0,f,c
 11859  003448  0E00               	movlw	0
 11860  00344A  2219               	addwfc	(___fldiv@b+1)^0,f,c
 11861  00344C  221A               	addwfc	(___fldiv@b+2)^0,f,c
 11862  00344E  221B               	addwfc	(___fldiv@b+3)^0,f,c
 11863  003450  A01B               	btfss	(___fldiv@b+3)^0,0,c
 11864  003452  EF2D  F01A         	goto	u9301
 11865  003456  EF2F  F01A         	goto	u9300
 11866  00345A                     u9301:
 11867  00345A  EF46  F01A         	goto	l7324
 11868  00345E                     u9300:
 11869  00345E  C018  F020         	movff	___fldiv@b,??___fldiv
 11870  003462  C019  F021         	movff	___fldiv@b+1,??___fldiv+1
 11871  003466  C01A  F022         	movff	___fldiv@b+2,??___fldiv+2
 11872  00346A  C01B  F023         	movff	___fldiv@b+3,??___fldiv+3
 11873  00346E  3423               	rlcf	(??___fldiv+3)^0,w,c
 11874  003470  3223               	rrcf	(??___fldiv+3)^0,f,c
 11875  003472  3222               	rrcf	(??___fldiv+2)^0,f,c
 11876  003474  3221               	rrcf	(??___fldiv+1)^0,f,c
 11877  003476  3220               	rrcf	??___fldiv^0,f,c
 11878  003478  C020  F018         	movff	??___fldiv,___fldiv@b
 11879  00347C  C021  F019         	movff	??___fldiv+1,___fldiv@b+1
 11880  003480  C022  F01A         	movff	??___fldiv+2,___fldiv@b+2
 11881  003484  C023  F01B         	movff	??___fldiv+3,___fldiv@b+3
 11882  003488  4A29               	infsnz	___fldiv@new_exp^0,f,c
 11883  00348A  2A2A               	incf	(___fldiv@new_exp+1)^0,f,c
 11884  00348C                     l7324:
 11885  00348C  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11886  00348E  EF51  F01A         	goto	u9311
 11887  003492  502A               	movf	(___fldiv@new_exp+1)^0,w,c
 11888  003494  E108               	bnz	u9310
 11889  003496  2829               	incf	___fldiv@new_exp^0,w,c
 11890  003498  A0D8               	btfss	status,0,c
 11891  00349A  EF51  F01A         	goto	u9311
 11892  00349E  EF53  F01A         	goto	u9310
 11893  0034A2                     u9311:
 11894  0034A2  EF5E  F01A         	goto	l7328
 11895  0034A6                     u9310:
 11896  0034A6  0E00               	movlw	0
 11897  0034A8  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 11898  0034AA  6829               	setf	___fldiv@new_exp^0,c
 11899  0034AC  0E00               	movlw	0
 11900  0034AE  6E18               	movwf	___fldiv@b^0,c
 11901  0034B0  0E00               	movlw	0
 11902  0034B2  6E19               	movwf	(___fldiv@b+1)^0,c
 11903  0034B4  0E00               	movlw	0
 11904  0034B6  6E1A               	movwf	(___fldiv@b+2)^0,c
 11905  0034B8  0E00               	movlw	0
 11906  0034BA  6E1B               	movwf	(___fldiv@b+3)^0,c
 11907  0034BC                     l7328:
 11908  0034BC  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11909  0034BE  EF6B  F01A         	goto	u9320
 11910  0034C2  502A               	movf	(___fldiv@new_exp+1)^0,w,c
 11911  0034C4  E106               	bnz	u9321
 11912  0034C6  0429               	decf	___fldiv@new_exp^0,w,c
 11913  0034C8  B0D8               	btfsc	status,0,c
 11914  0034CA  EF69  F01A         	goto	u9321
 11915  0034CE  EF6B  F01A         	goto	u9320
 11916  0034D2                     u9321:
 11917  0034D2  EF79  F01A         	goto	l7332
 11918  0034D6                     u9320:
 11919  0034D6  0E00               	movlw	0
 11920  0034D8  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 11921  0034DA  0E00               	movlw	0
 11922  0034DC  6E29               	movwf	___fldiv@new_exp^0,c
 11923  0034DE  0E00               	movlw	0
 11924  0034E0  6E18               	movwf	___fldiv@b^0,c
 11925  0034E2  0E00               	movlw	0
 11926  0034E4  6E19               	movwf	(___fldiv@b+1)^0,c
 11927  0034E6  0E00               	movlw	0
 11928  0034E8  6E1A               	movwf	(___fldiv@b+2)^0,c
 11929  0034EA  0E00               	movlw	0
 11930  0034EC  6E1B               	movwf	(___fldiv@b+3)^0,c
 11931  0034EE  0E00               	movlw	0
 11932  0034F0  6E28               	movwf	___fldiv@sign^0,c
 11933  0034F2                     l7332:
 11934  0034F2  C029  F02F         	movff	___fldiv@new_exp,___fldiv@bexp
 11935  0034F6  A02F               	btfss	___fldiv@bexp^0,0,c
 11936  0034F8  EF80  F01A         	goto	u9331
 11937  0034FC  EF82  F01A         	goto	u9330
 11938  003500                     u9331:
 11939  003500  EF85  F01A         	goto	l7338
 11940  003504                     u9330:
 11941  003504  8E1A               	bsf	(___fldiv@b+2)^0,7,c
 11942  003506  EF86  F01A         	goto	l7340
 11943  00350A                     l7338:
 11944  00350A  9E1A               	bcf	(___fldiv@b+2)^0,7,c
 11945  00350C                     l7340:
 11946  00350C  90D8               	bcf	status,0,c
 11947  00350E  302F               	rrcf	___fldiv@bexp^0,w,c
 11948  003510  6E1B               	movwf	(___fldiv@b+3)^0,c
 11949  003512  EF3C  F019         	goto	l7254
 11950  003516                     l1382:
 11951  003516  0012               	return		;funcret
 11952  003518                     __end_of___fldiv:
 11953                           	callstack 0
 11954                           
 11955 ;; *************** function _checkbatterylevel *****************
 11956 ;; Defined at:
 11957 ;;		line 73 in file "DC_motors.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;		None
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;  batterylevel    1   10[COMRAM] unsigned char 
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11975 ;;Total ram usage:        1 bytes
 11976 ;; Hardware stack levels used: 1
 11977 ;; Hardware stack levels required when called: 8
 11978 ;; This function calls:
 11979 ;;		_ADC_getval
 11980 ;; This function is called by:
 11981 ;;		_main
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           	psect	text58
 11986  00621E                     __ptext58:
 11987                           	callstack 0
 11988  00621E                     _checkbatterylevel:
 11989                           	callstack 22
 11990  00621E                     
 11991                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
 11992  00621E  EC72  F031         	call	_ADC_getval	;wreg free
 11993  006222  6E0B               	movwf	checkbatterylevel@batterylevel^0,c
 11994  006224                     
 11995                           ;DC_motors.c: 77:     if (batterylevel<200) {
 11996  006224  0EC8               	movlw	200
 11997  006226  600B               	cpfslt	checkbatterylevel@batterylevel^0,c
 11998  006228  EF18  F031         	goto	u7571
 11999  00622C  EF1A  F031         	goto	u7570
 12000  006230                     u7571:
 12001  006230  EF1D  F031         	goto	l653
 12002  006234                     u7570:
 12003  006234                     
 12004                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
 12005  006234  8E7C               	bsf	124,7,c	;volatile
 12006                           
 12007                           ;DC_motors.c: 79:     } else {
 12008  006236  EF1E  F031         	goto	l655
 12009  00623A                     l653:
 12010                           
 12011                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
 12012  00623A  9E7C               	bcf	124,7,c	;volatile
 12013  00623C                     l655:
 12014  00623C  0012               	return		;funcret
 12015  00623E                     __end_of_checkbatterylevel:
 12016                           	callstack 0
 12017                           
 12018 ;; *************** function _ADC_getval *****************
 12019 ;; Defined at:
 12020 ;;		line 26 in file "ADC.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;		None
 12023 ;; Auto vars:     Size  Location     Type
 12024 ;;  tmpval          1    9[COMRAM] unsigned char 
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      unsigned char 
 12027 ;; Registers used:
 12028 ;;		wreg, status,2
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12038 ;;Total ram usage:        1 bytes
 12039 ;; Hardware stack levels used: 1
 12040 ;; Hardware stack levels required when called: 7
 12041 ;; This function calls:
 12042 ;;		Nothing
 12043 ;; This function is called by:
 12044 ;;		_checkbatterylevel
 12045 ;; This function uses a non-reentrant model
 12046 ;;
 12047                           
 12048                           	psect	text59
 12049  0062E4                     __ptext59:
 12050                           	callstack 0
 12051  0062E4                     _ADC_getval:
 12052                           	callstack 22
 12053  0062E4                     
 12054                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
 12055  0062E4  8060               	bsf	96,0,c	;volatile
 12056  0062E6                     l399:
 12057  0062E6  B060               	btfsc	96,0,c	;volatile
 12058  0062E8  EF78  F031         	goto	u7471
 12059  0062EC  EF7A  F031         	goto	u7470
 12060  0062F0                     u7471:
 12061  0062F0  EF73  F031         	goto	l399
 12062  0062F4                     u7470:
 12063  0062F4                     
 12064                           ;ADC.c: 31:     tmpval = ADRESH;
 12065  0062F4  CF64 F00A          	movff	3940,ADC_getval@tmpval	;volatile
 12066  0062F8                     
 12067                           ;ADC.c: 34:     return tmpval;
 12068  0062F8  500A               	movf	ADC_getval@tmpval^0,w,c
 12069  0062FA  0012               	return		;funcret
 12070  0062FC                     __end_of_ADC_getval:
 12071                           	callstack 0
 12072                           
 12073 ;; *************** function _USART4_init *****************
 12074 ;; Defined at:
 12075 ;;		line 7 in file "serial_comm.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;		None
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;		None
 12080 ;; Return value:  Size  Location     Type
 12081 ;;                  1    wreg      void 
 12082 ;; Registers used:
 12083 ;;		wreg, status,2
 12084 ;; Tracked objects:
 12085 ;;		On entry : 0/0
 12086 ;;		On exit  : 0/0
 12087 ;;		Unchanged: 0/0
 12088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12093 ;;Total ram usage:        0 bytes
 12094 ;; Hardware stack levels used: 1
 12095 ;; Hardware stack levels required when called: 7
 12096 ;; This function calls:
 12097 ;;		Nothing
 12098 ;; This function is called by:
 12099 ;;		_main
 12100 ;; This function uses a non-reentrant model
 12101 ;;
 12102                           
 12103                           	psect	text60
 12104  00623E                     __ptext60:
 12105                           	callstack 0
 12106  00623E                     _USART4_init:
 12107                           	callstack 23
 12108  00623E                     
 12109                           ;serial_comm.c: 10:     RC0PPS = 0x12;
 12110  00623E  0E12               	movlw	18
 12111  006240  010E               	movlb	14	; () banked
 12112  006242  6F62               	movwf	98,b	;volatile
 12113                           
 12114                           ;serial_comm.c: 11:     RX4PPS = 0x11;
 12115  006244  0E11               	movlw	17
 12116  006246  6F15               	movwf	21,b	;volatile
 12117  006248                     
 12118                           ; BSR set to: 14
 12119                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
 12120  006248  8283               	bsf	131,1,c	;volatile
 12121  00624A                     
 12122                           ; BSR set to: 14
 12123                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
 12124  00624A  97E9               	bcf	233,3,b	;volatile
 12125  00624C                     
 12126                           ; BSR set to: 14
 12127                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
 12128  00624C  95E8               	bcf	232,2,b	;volatile
 12129                           
 12130                           ;serial_comm.c: 16:     SP4BRGL = 51;
 12131  00624E  0E33               	movlw	51
 12132  006250  6FE5               	movwf	229,b	;volatile
 12133                           
 12134                           ;serial_comm.c: 17:     SP4BRGH = 0;
 12135  006252  0E00               	movlw	0
 12136  006254  6FE6               	movwf	230,b	;volatile
 12137  006256                     
 12138                           ; BSR set to: 14
 12139                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
 12140  006256  89E7               	bsf	231,4,b	;volatile
 12141  006258                     
 12142                           ; BSR set to: 14
 12143                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
 12144  006258  8BE8               	bsf	232,5,b	;volatile
 12145  00625A                     
 12146                           ; BSR set to: 14
 12147                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
 12148  00625A  8FE7               	bsf	231,7,b	;volatile
 12149  00625C                     
 12150                           ; BSR set to: 14
 12151  00625C  0012               	return		;funcret
 12152  00625E                     __end_of_USART4_init:
 12153                           	callstack 0
 12154                           
 12155 ;; *************** function _DCmotors_init *****************
 12156 ;; Defined at:
 12157 ;;		line 10 in file "DC_motors.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;  PWMperiod       1    wreg     unsigned char 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  PWMperiod       1    9[COMRAM] unsigned char 
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		wreg, status,2, cstack
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12175 ;;Total ram usage:        1 bytes
 12176 ;; Hardware stack levels used: 1
 12177 ;; Hardware stack levels required when called: 8
 12178 ;; This function calls:
 12179 ;;		_buggyLEDs_init
 12180 ;;		_clicker2LEDs_init
 12181 ;;		_clicker2buttons_init
 12182 ;; This function is called by:
 12183 ;;		_main
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	text61
 12188  005D2C                     __ptext61:
 12189                           	callstack 0
 12190  005D2C                     _DCmotors_init:
 12191                           	callstack 22
 12192                           
 12193                           ; BSR set to: 14
 12194                           ;incstack = 0
 12195                           ;DCmotors_init@PWMperiod stored from wreg
 12196  005D2C  6E0A               	movwf	DCmotors_init@PWMperiod^0,c
 12197  005D2E                     
 12198                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
 12199  005D2E  50BD               	movf	189,w,c	;volatile
 12200  005D30  0B8F               	andlw	-113
 12201  005D32  0940               	iorlw	64
 12202  005D34  6EBD               	movwf	189,c	;volatile
 12203                           
 12204                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
 12205  005D36  0EE0               	movlw	-32
 12206  005D38  16BE               	andwf	190,f,c	;volatile
 12207                           
 12208                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
 12209  005D3A  50BF               	movf	191,w,c	;volatile
 12210  005D3C  0BF0               	andlw	-16
 12211  005D3E  0901               	iorlw	1
 12212  005D40  6EBF               	movwf	191,c	;volatile
 12213  005D42                     
 12214                           ;DC_motors.c: 18:     T2PR=PWMperiod;
 12215  005D42  C00A  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 12216  005D46                     
 12217                           ;DC_motors.c: 19:     T2CONbits.ON=1;
 12218  005D46  8EBD               	bsf	189,7,c	;volatile
 12219  005D48                     
 12220                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
 12221  005D48  9485               	bcf	133,2,c	;volatile
 12222  005D4A                     
 12223                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
 12224  005D4A  9885               	bcf	133,4,c	;volatile
 12225  005D4C                     
 12226                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
 12227  005D4C  9E83               	bcf	131,7,c	;volatile
 12228  005D4E                     
 12229                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
 12230  005D4E  9C87               	bcf	135,6,c	;volatile
 12231  005D50                     
 12232                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
 12233  005D50  947D               	bcf	125,2,c	;volatile
 12234  005D52                     
 12235                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
 12236  005D52  987D               	bcf	125,4,c	;volatile
 12237  005D54                     
 12238                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
 12239  005D54  9E7B               	bcf	123,7,c	;volatile
 12240  005D56                     
 12241                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
 12242  005D56  9C7F               	bcf	127,6,c	;volatile
 12243                           
 12244                           ;DC_motors.c: 32:     PWM6DCH=0;
 12245  005D58  0E00               	movlw	0
 12246  005D5A  6EA3               	movwf	163,c	;volatile
 12247                           
 12248                           ;DC_motors.c: 33:     PWM7DCH=0;
 12249  005D5C  0E00               	movlw	0
 12250  005D5E  6EA0               	movwf	160,c	;volatile
 12251  005D60                     
 12252                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
 12253  005D60  8EA4               	bsf	164,7,c	;volatile
 12254  005D62                     
 12255                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
 12256  005D62  8EA1               	bsf	161,7,c	;volatile
 12257                           
 12258                           ;DC_motors.c: 38:     RE2PPS=0x0A;
 12259  005D64  0E0A               	movlw	10
 12260  005D66  010E               	movlb	14	; () banked
 12261  005D68  6F74               	movwf	116,b	;volatile
 12262                           
 12263                           ;DC_motors.c: 39:     RC7PPS=0x0B;
 12264  005D6A  0E0B               	movlw	11
 12265  005D6C  6F69               	movwf	105,b	;volatile
 12266  005D6E                     
 12267                           ; BSR set to: 14
 12268                           ;DC_motors.c: 42:     clicker2buttons_init();
 12269  005D6E  EC96  F031         	call	_clicker2buttons_init	;wreg free
 12270  005D72                     
 12271                           ;DC_motors.c: 43:     clicker2LEDs_init();
 12272  005D72  ECB1  F031         	call	_clicker2LEDs_init	;wreg free
 12273  005D76                     
 12274                           ;DC_motors.c: 44:     buggyLEDs_init();
 12275  005D76  EC7E  F031         	call	_buggyLEDs_init	;wreg free
 12276  005D7A  0012               	return		;funcret
 12277  005D7C                     __end_of_DCmotors_init:
 12278                           	callstack 0
 12279                           
 12280 ;; *************** function _clicker2buttons_init *****************
 12281 ;; Defined at:
 12282 ;;		line 7 in file "buttons_n_LEDs.c"
 12283 ;; Parameters:    Size  Location     Type
 12284 ;;		None
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;		None
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1    wreg      void 
 12289 ;; Registers used:
 12290 ;;		None
 12291 ;; Tracked objects:
 12292 ;;		On entry : 0/0
 12293 ;;		On exit  : 0/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12300 ;;Total ram usage:        0 bytes
 12301 ;; Hardware stack levels used: 1
 12302 ;; Hardware stack levels required when called: 7
 12303 ;; This function calls:
 12304 ;;		Nothing
 12305 ;; This function is called by:
 12306 ;;		_DCmotors_init
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           	psect	text62
 12311  00632C                     __ptext62:
 12312                           	callstack 0
 12313  00632C                     _clicker2buttons_init:
 12314                           	callstack 22
 12315  00632C                     
 12316                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
 12317  00632C  8486               	bsf	134,2,c	;volatile
 12318                           
 12319                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
 12320  00632E  8686               	bsf	134,3,c	;volatile
 12321                           
 12322                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
 12323  006330  010E               	movlb	14	; () banked
 12324  006332  95B4               	bcf	180,2,b	;volatile
 12325                           
 12326                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
 12327  006334  97B4               	bcf	180,3,b	;volatile
 12328  006336                     
 12329                           ; BSR set to: 14
 12330  006336  0012               	return		;funcret
 12331  006338                     __end_of_clicker2buttons_init:
 12332                           	callstack 0
 12333                           
 12334 ;; *************** function _clicker2LEDs_init *****************
 12335 ;; Defined at:
 12336 ;;		line 19 in file "buttons_n_LEDs.c"
 12337 ;; Parameters:    Size  Location     Type
 12338 ;;		None
 12339 ;; Auto vars:     Size  Location     Type
 12340 ;;		None
 12341 ;; Return value:  Size  Location     Type
 12342 ;;                  1    wreg      void 
 12343 ;; Registers used:
 12344 ;;		None
 12345 ;; Tracked objects:
 12346 ;;		On entry : 0/0
 12347 ;;		On exit  : 0/0
 12348 ;;		Unchanged: 0/0
 12349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12354 ;;Total ram usage:        0 bytes
 12355 ;; Hardware stack levels used: 1
 12356 ;; Hardware stack levels required when called: 7
 12357 ;; This function calls:
 12358 ;;		Nothing
 12359 ;; This function is called by:
 12360 ;;		_DCmotors_init
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           	psect	text63
 12365  006362                     __ptext63:
 12366                           	callstack 0
 12367  006362                     _clicker2LEDs_init:
 12368                           	callstack 22
 12369  006362                     
 12370                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
 12371  006362  9E84               	bcf	132,7,c	;volatile
 12372                           
 12373                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
 12374  006364  9688               	bcf	136,3,c	;volatile
 12375                           
 12376                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
 12377  006366  9E7C               	bcf	124,7,c	;volatile
 12378                           
 12379                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
 12380  006368  9680               	bcf	128,3,c	;volatile
 12381  00636A  0012               	return		;funcret
 12382  00636C                     __end_of_clicker2LEDs_init:
 12383                           	callstack 0
 12384                           
 12385 ;; *************** function _buggyLEDs_init *****************
 12386 ;; Defined at:
 12387 ;;		line 31 in file "buttons_n_LEDs.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;		None
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;		None
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  1    wreg      void 
 12394 ;; Registers used:
 12395 ;;		None
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/0
 12398 ;;		On exit  : 0/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12405 ;;Total ram usage:        0 bytes
 12406 ;; Hardware stack levels used: 1
 12407 ;; Hardware stack levels required when called: 7
 12408 ;; This function calls:
 12409 ;;		Nothing
 12410 ;; This function is called by:
 12411 ;;		_DCmotors_init
 12412 ;; This function uses a non-reentrant model
 12413 ;;
 12414                           
 12415                           	psect	text64
 12416  0062FC                     __ptext64:
 12417                           	callstack 0
 12418  0062FC                     _buggyLEDs_init:
 12419                           	callstack 22
 12420  0062FC                     
 12421                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
 12422  0062FC  9288               	bcf	136,1,c	;volatile
 12423                           
 12424                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
 12425  0062FE  9684               	bcf	132,3,c	;volatile
 12426                           
 12427                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
 12428  006300  9884               	bcf	132,4,c	;volatile
 12429                           
 12430                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
 12431  006302  9086               	bcf	134,0,c	;volatile
 12432                           
 12433                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
 12434  006304  9088               	bcf	136,0,c	;volatile
 12435                           
 12436                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
 12437  006306  9280               	bcf	128,1,c	;volatile
 12438                           
 12439                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
 12440  006308  967C               	bcf	124,3,c	;volatile
 12441                           
 12442                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
 12443  00630A  987C               	bcf	124,4,c	;volatile
 12444                           
 12445                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
 12446  00630C  907E               	bcf	126,0,c	;volatile
 12447                           
 12448                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
 12449  00630E  9080               	bcf	128,0,c	;volatile
 12450  006310  0012               	return		;funcret
 12451  006312                     __end_of_buggyLEDs_init:
 12452                           	callstack 0
 12453                           
 12454 ;; *************** function _DCmotors_calibration *****************
 12455 ;; Defined at:
 12456 ;;		line 243 in file "DC_motors.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;  mL              2   71[COMRAM] PTR struct .
 12459 ;;		 -> main@motorL(9), 
 12460 ;;  mR              2   73[COMRAM] PTR struct .
 12461 ;;		 -> main@motorR(9), 
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      void 
 12466 ;; Registers used:
 12467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12476 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12477 ;;Total ram usage:        6 bytes
 12478 ;; Hardware stack levels used: 1
 12479 ;; Hardware stack levels required when called: 11
 12480 ;; This function calls:
 12481 ;;		_adjdelay
 12482 ;;		_stop
 12483 ;;		_turnleft
 12484 ;;		_turnright
 12485 ;; This function is called by:
 12486 ;;		_main
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           	psect	text65
 12491  004B6A                     __ptext65:
 12492                           	callstack 0
 12493  004B6A                     _DCmotors_calibration:
 12494                           	callstack 19
 12495  004B6A                     l714:
 12496  004B6A  A48E               	btfss	142,2,c	;volatile
 12497  004B6C  EFBA  F025         	goto	u11761
 12498  004B70  EFBC  F025         	goto	u11760
 12499  004B74                     u11761:
 12500  004B74  EFC3  F025         	goto	l718
 12501  004B78                     u11760:
 12502  004B78  B68E               	btfsc	142,3,c	;volatile
 12503  004B7A  EFC1  F025         	goto	u11771
 12504  004B7E  EFC3  F025         	goto	u11770
 12505  004B82                     u11771:
 12506  004B82  EFB5  F025         	goto	l714
 12507  004B86                     u11770:
 12508  004B86                     l718:
 12509                           
 12510                           ;DC_motors.c: 246:     LATDbits.LATD3 = 1;
 12511  004B86  867C               	bsf	124,3,c	;volatile
 12512  004B88                     
 12513                           ;DC_motors.c: 247:     _delay((unsigned long)((200)*(64000000/4000.0)));
 12514  004B88  0E11               	movlw	17
 12515  004B8A  0100               	movlb	0	; () banked
 12516  004B8C  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12517  004B8E  0E3C               	movlw	60
 12518  004B90  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12519  004B92  0ECB               	movlw	203
 12520  004B94                     u12747:
 12521  004B94  2EE8               	decfsz	wreg,f,c
 12522  004B96  D7FE               	bra	u12747
 12523  004B98  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12524  004B9A  D7FC               	bra	u12747
 12525  004B9C  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12526  004B9E  D7FA               	bra	u12747
 12527  004BA0                     
 12528                           ;DC_motors.c: 248:     turnleft(mL, mR, 360);
 12529  004BA0  C048  F06A         	movff	DCmotors_calibration@mL,turnleft@mL
 12530  004BA4  C049  F06B         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
 12531  004BA8  C04A  F06C         	movff	DCmotors_calibration@mR,turnleft@mR
 12532  004BAC  C04B  F06D         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
 12533  004BB0  0E01               	movlw	1
 12534  004BB2  0100               	movlb	0	; () banked
 12535  004BB4  6F6F               	movwf	(turnleft@deg+1)& (0+255),b
 12536  004BB6  0E68               	movlw	104
 12537  004BB8  6F6E               	movwf	turnleft@deg& (0+255),b
 12538  004BBA  ECE6  F02E         	call	_turnleft	;wreg free
 12539  004BBE                     
 12540                           ;DC_motors.c: 249:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12541  004BBE  0E52               	movlw	82
 12542  004BC0  0100               	movlb	0	; () banked
 12543  004BC2  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12544  004BC4  0E2B               	movlw	43
 12545  004BC6  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12546  004BC8  0E00               	movlw	0
 12547  004BCA                     u12757:
 12548  004BCA  2EE8               	decfsz	wreg,f,c
 12549  004BCC  D7FE               	bra	u12757
 12550  004BCE  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12551  004BD0  D7FC               	bra	u12757
 12552  004BD2  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12553  004BD4  D7FA               	bra	u12757
 12554  004BD6  F000               	nop	
 12555                           
 12556                           ;DC_motors.c: 250:     stop(mL, mR);
 12557  004BD8  C048  F023         	movff	DCmotors_calibration@mL,stop@mL
 12558  004BDC  C049  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
 12559  004BE0  C04A  F025         	movff	DCmotors_calibration@mR,stop@mR
 12560  004BE4  C04B  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
 12561  004BE8  EC53  F02C         	call	_stop	;wreg free
 12562  004BEC                     l719:
 12563  004BEC  A48E               	btfss	142,2,c	;volatile
 12564  004BEE  EFFB  F025         	goto	u11781
 12565  004BF2  EFFD  F025         	goto	u11780
 12566  004BF6                     u11781:
 12567  004BF6  EF04  F026         	goto	l8794
 12568  004BFA                     u11780:
 12569  004BFA  B68E               	btfsc	142,3,c	;volatile
 12570  004BFC  EF02  F026         	goto	u11791
 12571  004C00  EF04  F026         	goto	u11790
 12572  004C04                     u11791:
 12573  004C04  EFF6  F025         	goto	l719
 12574  004C08                     u11790:
 12575  004C08                     l8794:
 12576                           
 12577                           ;DC_motors.c: 253:     adjdelay(1);
 12578  004C08  0E01               	movlw	1
 12579  004C0A  ECF8  F026         	call	_adjdelay
 12580  004C0E                     
 12581                           ;DC_motors.c: 254:     LATDbits.LATD3 = 0;
 12582  004C0E  967C               	bcf	124,3,c	;volatile
 12583  004C10                     
 12584                           ;DC_motors.c: 255:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12585  004C10  0E52               	movlw	82
 12586  004C12  0100               	movlb	0	; () banked
 12587  004C14  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12588  004C16  0E2B               	movlw	43
 12589  004C18  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12590  004C1A  0E00               	movlw	0
 12591  004C1C                     u12767:
 12592  004C1C  2EE8               	decfsz	wreg,f,c
 12593  004C1E  D7FE               	bra	u12767
 12594  004C20  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12595  004C22  D7FC               	bra	u12767
 12596  004C24  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12597  004C26  D7FA               	bra	u12767
 12598  004C28  F000               	nop	
 12599  004C2A                     
 12600                           ;DC_motors.c: 257:     LATDbits.LATD3 = 1;
 12601  004C2A  867C               	bsf	124,3,c	;volatile
 12602  004C2C                     
 12603                           ;DC_motors.c: 258:     _delay((unsigned long)((200)*(64000000/4000.0)));
 12604  004C2C  0E11               	movlw	17
 12605  004C2E  0100               	movlb	0	; () banked
 12606  004C30  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12607  004C32  0E3C               	movlw	60
 12608  004C34  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12609  004C36  0ECB               	movlw	203
 12610  004C38                     u12777:
 12611  004C38  2EE8               	decfsz	wreg,f,c
 12612  004C3A  D7FE               	bra	u12777
 12613  004C3C  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12614  004C3E  D7FC               	bra	u12777
 12615  004C40  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12616  004C42  D7FA               	bra	u12777
 12617  004C44                     
 12618                           ;DC_motors.c: 259:     turnright(mL, mR, 360);
 12619  004C44  C048  F06A         	movff	DCmotors_calibration@mL,turnright@mL
 12620  004C48  C049  F06B         	movff	DCmotors_calibration@mL+1,turnright@mL+1
 12621  004C4C  C04A  F06C         	movff	DCmotors_calibration@mR,turnright@mR
 12622  004C50  C04B  F06D         	movff	DCmotors_calibration@mR+1,turnright@mR+1
 12623  004C54  0E01               	movlw	1
 12624  004C56  0100               	movlb	0	; () banked
 12625  004C58  6F6F               	movwf	(turnright@deg+1)& (0+255),b
 12626  004C5A  0E68               	movlw	104
 12627  004C5C  6F6E               	movwf	turnright@deg& (0+255),b
 12628  004C5E  ECBE  F02E         	call	_turnright	;wreg free
 12629  004C62                     
 12630                           ;DC_motors.c: 260:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12631  004C62  0E52               	movlw	82
 12632  004C64  0100               	movlb	0	; () banked
 12633  004C66  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12634  004C68  0E2B               	movlw	43
 12635  004C6A  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12636  004C6C  0E00               	movlw	0
 12637  004C6E                     u12787:
 12638  004C6E  2EE8               	decfsz	wreg,f,c
 12639  004C70  D7FE               	bra	u12787
 12640  004C72  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12641  004C74  D7FC               	bra	u12787
 12642  004C76  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12643  004C78  D7FA               	bra	u12787
 12644  004C7A  F000               	nop	
 12645  004C7C                     
 12646                           ;DC_motors.c: 261:     stop(mL, mR);
 12647  004C7C  C048  F023         	movff	DCmotors_calibration@mL,stop@mL
 12648  004C80  C049  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
 12649  004C84  C04A  F025         	movff	DCmotors_calibration@mR,stop@mR
 12650  004C88  C04B  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
 12651  004C8C  EC53  F02C         	call	_stop	;wreg free
 12652  004C90                     l724:
 12653  004C90  A48E               	btfss	142,2,c	;volatile
 12654  004C92  EF4D  F026         	goto	u11801
 12655  004C96  EF4F  F026         	goto	u11800
 12656  004C9A                     u11801:
 12657  004C9A  EF56  F026         	goto	l8812
 12658  004C9E                     u11800:
 12659  004C9E  B68E               	btfsc	142,3,c	;volatile
 12660  004CA0  EF54  F026         	goto	u11811
 12661  004CA4  EF56  F026         	goto	u11810
 12662  004CA8                     u11811:
 12663  004CA8  EF48  F026         	goto	l724
 12664  004CAC                     u11810:
 12665  004CAC                     l8812:
 12666                           
 12667                           ;DC_motors.c: 264:     adjdelay(2);
 12668  004CAC  0E02               	movlw	2
 12669  004CAE  ECF8  F026         	call	_adjdelay
 12670  004CB2                     
 12671                           ;DC_motors.c: 265:     LATDbits.LATD3 = 0;
 12672  004CB2  967C               	bcf	124,3,c	;volatile
 12673  004CB4  0012               	return		;funcret
 12674  004CB6                     __end_of_DCmotors_calibration:
 12675                           	callstack 0
 12676                           
 12677 ;; *************** function _turnright *****************
 12678 ;; Defined at:
 12679 ;;		line 231 in file "DC_motors.c"
 12680 ;; Parameters:    Size  Location     Type
 12681 ;;  mL              2   10[BANK0 ] PTR struct .
 12682 ;;		 -> main@motorL(9), 
 12683 ;;  mR              2   12[BANK0 ] PTR struct .
 12684 ;;		 -> main@motorR(9), 
 12685 ;;  deg             2   14[BANK0 ] unsigned int 
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;		None
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  1    wreg      void 
 12690 ;; Registers used:
 12691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12697 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12700 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12701 ;;Total ram usage:        6 bytes
 12702 ;; Hardware stack levels used: 1
 12703 ;; Hardware stack levels required when called: 10
 12704 ;; This function calls:
 12705 ;;		_left
 12706 ;;		_right
 12707 ;; This function is called by:
 12708 ;;		_colourcards_readRGBC
 12709 ;;		_DCmotors_calibration
 12710 ;;		_DCmotors_testing
 12711 ;; This function uses a non-reentrant model
 12712 ;;
 12713                           
 12714                           	psect	text66
 12715  005D7C                     __ptext66:
 12716                           	callstack 0
 12717  005D7C                     _turnright:
 12718                           	callstack 19
 12719  005D7C                     
 12720                           ;DC_motors.c: 231: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 232: {;DC_motors.c: 233:     if (returnhome_flag==0) {
 12721  005D7C  0100               	movlb	0	; () banked
 12722  005D7E  51F4               	movf	_returnhome_flag& (0+255),w,b	;volatile
 12723  005D80  A4D8               	btfss	status,2,c
 12724  005D82  EFC5  F02E         	goto	u11651
 12725  005D86  EFC7  F02E         	goto	u11650
 12726  005D8A                     u11651:
 12727  005D8A  EFD7  F02E         	goto	l8682
 12728  005D8E                     u11650:
 12729  005D8E                     
 12730                           ; BSR set to: 0
 12731                           ;DC_motors.c: 234:         right(mL, mR, deg);
 12732  005D8E  C06A  F023         	movff	turnright@mL,right@mL
 12733  005D92  C06B  F024         	movff	turnright@mL+1,right@mL+1
 12734  005D96  C06C  F025         	movff	turnright@mR,right@mR
 12735  005D9A  C06D  F026         	movff	turnright@mR+1,right@mR+1
 12736  005D9E  C06E  F027         	movff	turnright@deg,right@deg
 12737  005DA2  C06F  F028         	movff	turnright@deg+1,right@deg+1
 12738  005DA6  EC0B  F025         	call	_right	;wreg free
 12739                           
 12740                           ;DC_motors.c: 235:     } else {
 12741  005DAA  EFE5  F02E         	goto	l711
 12742  005DAE                     l8682:
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;DC_motors.c: 236:         left(mL, mR, deg);
 12746  005DAE  C06A  F041         	movff	turnright@mL,left@mL
 12747  005DB2  C06B  F042         	movff	turnright@mL+1,left@mL+1
 12748  005DB6  C06C  F043         	movff	turnright@mR,left@mR
 12749  005DBA  C06D  F044         	movff	turnright@mR+1,left@mR+1
 12750  005DBE  C06E  F045         	movff	turnright@deg,left@deg
 12751  005DC2  C06F  F046         	movff	turnright@deg+1,left@deg+1
 12752  005DC6  EC04  F01D         	call	_left	;wreg free
 12753  005DCA                     l711:
 12754  005DCA  0012               	return		;funcret
 12755  005DCC                     __end_of_turnright:
 12756                           	callstack 0
 12757                           
 12758 ;; *************** function _turnleft *****************
 12759 ;; Defined at:
 12760 ;;		line 218 in file "DC_motors.c"
 12761 ;; Parameters:    Size  Location     Type
 12762 ;;  mL              2   10[BANK0 ] PTR struct .
 12763 ;;		 -> main@motorL(9), 
 12764 ;;  mR              2   12[BANK0 ] PTR struct .
 12765 ;;		 -> main@motorR(9), 
 12766 ;;  deg             2   14[BANK0 ] unsigned int 
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      void 
 12771 ;; Registers used:
 12772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12778 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12781 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12782 ;;Total ram usage:        6 bytes
 12783 ;; Hardware stack levels used: 1
 12784 ;; Hardware stack levels required when called: 10
 12785 ;; This function calls:
 12786 ;;		_left
 12787 ;;		_right
 12788 ;; This function is called by:
 12789 ;;		_colourcards_readRGBC
 12790 ;;		_DCmotors_calibration
 12791 ;;		_DCmotors_testing
 12792 ;; This function uses a non-reentrant model
 12793 ;;
 12794                           
 12795                           	psect	text67
 12796  005DCC                     __ptext67:
 12797                           	callstack 0
 12798  005DCC                     _turnleft:
 12799                           	callstack 19
 12800  005DCC                     
 12801                           ;DC_motors.c: 218: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {
 12802  005DCC  0100               	movlb	0	; () banked
 12803  005DCE  51F4               	movf	_returnhome_flag& (0+255),w,b	;volatile
 12804  005DD0  A4D8               	btfss	status,2,c
 12805  005DD2  EFED  F02E         	goto	u11661
 12806  005DD6  EFEF  F02E         	goto	u11660
 12807  005DDA                     u11661:
 12808  005DDA  EFFF  F02E         	goto	l8688
 12809  005DDE                     u11660:
 12810  005DDE                     
 12811                           ; BSR set to: 0
 12812                           ;DC_motors.c: 221:         left(mL, mR, deg);
 12813  005DDE  C06A  F041         	movff	turnleft@mL,left@mL
 12814  005DE2  C06B  F042         	movff	turnleft@mL+1,left@mL+1
 12815  005DE6  C06C  F043         	movff	turnleft@mR,left@mR
 12816  005DEA  C06D  F044         	movff	turnleft@mR+1,left@mR+1
 12817  005DEE  C06E  F045         	movff	turnleft@deg,left@deg
 12818  005DF2  C06F  F046         	movff	turnleft@deg+1,left@deg+1
 12819  005DF6  EC04  F01D         	call	_left	;wreg free
 12820                           
 12821                           ;DC_motors.c: 222:     } else {
 12822  005DFA  EF0D  F02F         	goto	l706
 12823  005DFE                     l8688:
 12824                           
 12825                           ; BSR set to: 0
 12826                           ;DC_motors.c: 223:         right(mL, mR, deg);
 12827  005DFE  C06A  F023         	movff	turnleft@mL,right@mL
 12828  005E02  C06B  F024         	movff	turnleft@mL+1,right@mL+1
 12829  005E06  C06C  F025         	movff	turnleft@mR,right@mR
 12830  005E0A  C06D  F026         	movff	turnleft@mR+1,right@mR+1
 12831  005E0E  C06E  F027         	movff	turnleft@deg,right@deg
 12832  005E12  C06F  F028         	movff	turnleft@deg+1,right@deg+1
 12833  005E16  EC0B  F025         	call	_right	;wreg free
 12834  005E1A                     l706:
 12835  005E1A  0012               	return		;funcret
 12836  005E1C                     __end_of_turnleft:
 12837                           	callstack 0
 12838                           
 12839 ;; *************** function _right *****************
 12840 ;; Defined at:
 12841 ;;		line 183 in file "DC_motors.c"
 12842 ;; Parameters:    Size  Location     Type
 12843 ;;  mL              2   34[COMRAM] PTR struct .
 12844 ;;		 -> main@motorL(9), 
 12845 ;;  mR              2   36[COMRAM] PTR struct .
 12846 ;;		 -> main@motorR(9), 
 12847 ;;  deg             2   38[COMRAM] unsigned int 
 12848 ;; Auto vars:     Size  Location     Type
 12849 ;;  i               2   44[COMRAM] unsigned int 
 12850 ;;  delay           2   42[COMRAM] unsigned int 
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  1    wreg      void 
 12853 ;; Registers used:
 12854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12860 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12861 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12863 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12864 ;;Total ram usage:       12 bytes
 12865 ;; Hardware stack levels used: 1
 12866 ;; Hardware stack levels required when called: 9
 12867 ;; This function calls:
 12868 ;;		_DCmotors_setPWM
 12869 ;; This function is called by:
 12870 ;;		_turnleft
 12871 ;;		_turnright
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           	psect	text68
 12876  004A16                     __ptext68:
 12877                           	callstack 0
 12878  004A16                     _right:
 12879                           	callstack 19
 12880  004A16                     
 12881                           ;DC_motors.c: 183: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           184: {;DC_motors.c: 186:     unsigned int delay = (8*deg) + 180 + turnright_delay;
 12882  004A16  C027  F029         	movff	right@deg,??_right
 12883  004A1A  C028  F02A         	movff	right@deg+1,??_right+1
 12884  004A1E  90D8               	bcf	status,0,c
 12885  004A20  3629               	rlcf	??_right^0,f,c
 12886  004A22  362A               	rlcf	(??_right+1)^0,f,c
 12887  004A24  90D8               	bcf	status,0,c
 12888  004A26  3629               	rlcf	??_right^0,f,c
 12889  004A28  362A               	rlcf	(??_right+1)^0,f,c
 12890  004A2A  90D8               	bcf	status,0,c
 12891  004A2C  3629               	rlcf	??_right^0,f,c
 12892  004A2E  362A               	rlcf	(??_right+1)^0,f,c
 12893  004A30  0101               	movlb	1	; () banked
 12894  004A32  5124               	movf	_turnright_delay& (0+255),w,b	;volatile
 12895  004A34  2629               	addwf	??_right^0,f,c
 12896  004A36  5125               	movf	(_turnright_delay+1)& (0+255),w,b	;volatile
 12897  004A38  222A               	addwfc	(??_right+1)^0,f,c
 12898  004A3A  0EB4               	movlw	180
 12899  004A3C  2429               	addwf	??_right^0,w,c
 12900  004A3E  6E2B               	movwf	right@delay^0,c
 12901  004A40  0E00               	movlw	0
 12902  004A42  202A               	addwfc	(??_right+1)^0,w,c
 12903  004A44  6E2C               	movwf	(right@delay+1)^0,c
 12904  004A46                     
 12905                           ; BSR set to: 1
 12906                           ;DC_motors.c: 189:     mL->direction = 1;
 12907  004A46  EE20 F001          	lfsr	2,1
 12908  004A4A  5023               	movf	right@mL^0,w,c
 12909  004A4C  26D9               	addwf	fsr2l,f,c
 12910  004A4E  5024               	movf	(right@mL+1)^0,w,c
 12911  004A50  22DA               	addwfc	fsr2h,f,c
 12912  004A52  0E01               	movlw	1
 12913  004A54  6EDF               	movwf	indf2,c
 12914  004A56                     
 12915                           ; BSR set to: 1
 12916                           ;DC_motors.c: 190:     mR->direction = 0;
 12917  004A56  EE20 F001          	lfsr	2,1
 12918  004A5A  5025               	movf	right@mR^0,w,c
 12919  004A5C  26D9               	addwf	fsr2l,f,c
 12920  004A5E  5026               	movf	(right@mR+1)^0,w,c
 12921  004A60  22DA               	addwfc	fsr2h,f,c
 12922  004A62  0E00               	movlw	0
 12923  004A64  6EDF               	movwf	indf2,c
 12924                           
 12925                           ;DC_motors.c: 193:     while((mL->power < 40) || (mR->power < 40)){
 12926  004A66  EF78  F025         	goto	l8570
 12927  004A6A                     l8554:
 12928                           
 12929                           ;DC_motors.c: 195:         LATHbits.LATH0 = !LATHbits.LATH0;
 12930  004A6A  A080               	btfss	128,0,c	;volatile
 12931  004A6C  EF3A  F025         	goto	u11511
 12932  004A70  EF3E  F025         	goto	u11510
 12933  004A74                     u11511:
 12934  004A74  6A29               	clrf	??_right^0,c
 12935  004A76  2A29               	incf	??_right^0,f,c
 12936  004A78  EF3F  F025         	goto	u11528
 12937  004A7C                     u11510:
 12938  004A7C  6A29               	clrf	??_right^0,c
 12939  004A7E                     u11528:
 12940  004A7E  5080               	movf	128,w,c	;volatile
 12941  004A80  1829               	xorwf	??_right^0,w,c
 12942  004A82  0BFE               	andlw	-2
 12943  004A84  1829               	xorwf	??_right^0,w,c
 12944  004A86  6E80               	movwf	128,c	;volatile
 12945  004A88                     
 12946                           ;DC_motors.c: 198:         if (mL->power < 40) {mL->power += 10;}
 12947  004A88  C023  FFD9         	movff	right@mL,fsr2l
 12948  004A8C  C024  FFDA         	movff	right@mL+1,fsr2h
 12949  004A90  0E28               	movlw	40
 12950  004A92  60DF               	cpfslt	indf2,c
 12951  004A94  EF4E  F025         	goto	u11531
 12952  004A98  EF50  F025         	goto	u11530
 12953  004A9C                     u11531:
 12954  004A9C  EF56  F025         	goto	l8560
 12955  004AA0                     u11530:
 12956  004AA0  C023  FFD9         	movff	right@mL,fsr2l
 12957  004AA4  C024  FFDA         	movff	right@mL+1,fsr2h
 12958  004AA8  0E0A               	movlw	10
 12959  004AAA  26DF               	addwf	indf2,f,c
 12960  004AAC                     l8560:
 12961                           
 12962                           ;DC_motors.c: 199:         if (mR->power < 40) {mR->power += 10;}
 12963  004AAC  C025  FFD9         	movff	right@mR,fsr2l
 12964  004AB0  C026  FFDA         	movff	right@mR+1,fsr2h
 12965  004AB4  0E28               	movlw	40
 12966  004AB6  60DF               	cpfslt	indf2,c
 12967  004AB8  EF60  F025         	goto	u11541
 12968  004ABC  EF62  F025         	goto	u11540
 12969  004AC0                     u11541:
 12970  004AC0  EF68  F025         	goto	l8564
 12971  004AC4                     u11540:
 12972  004AC4  C025  FFD9         	movff	right@mR,fsr2l
 12973  004AC8  C026  FFDA         	movff	right@mR+1,fsr2h
 12974  004ACC  0E0A               	movlw	10
 12975  004ACE  26DF               	addwf	indf2,f,c
 12976  004AD0                     l8564:
 12977                           
 12978                           ;DC_motors.c: 202:         DCmotors_setPWM(mL);
 12979  004AD0  C023  F018         	movff	right@mL,DCmotors_setPWM@m
 12980  004AD4  C024  F019         	movff	right@mL+1,DCmotors_setPWM@m+1
 12981  004AD8  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 12982  004ADC                     
 12983                           ;DC_motors.c: 203:         DCmotors_setPWM(mR);
 12984  004ADC  C025  F018         	movff	right@mR,DCmotors_setPWM@m
 12985  004AE0  C026  F019         	movff	right@mR+1,DCmotors_setPWM@m+1
 12986  004AE4  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 12987  004AE8                     
 12988                           ;DC_motors.c: 204:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 12989  004AE8  0EA0               	movlw	160
 12990  004AEA                     u12797:
 12991  004AEA  D000               	nop2	
 12992  004AEC  2EE8               	decfsz	wreg,f,c
 12993  004AEE  D7FD               	bra	u12797
 12994  004AF0                     l8570:
 12995                           
 12996                           ;DC_motors.c: 193:     while((mL->power < 40) || (mR->power < 40)){
 12997  004AF0  C023  FFD9         	movff	right@mL,fsr2l
 12998  004AF4  C024  FFDA         	movff	right@mL+1,fsr2h
 12999  004AF8  0E27               	movlw	39
 13000  004AFA  64DF               	cpfsgt	indf2,c
 13001  004AFC  EF82  F025         	goto	u11551
 13002  004B00  EF84  F025         	goto	u11550
 13003  004B04                     u11551:
 13004  004B04  EF35  F025         	goto	l8554
 13005  004B08                     u11550:
 13006  004B08  C025  FFD9         	movff	right@mR,fsr2l
 13007  004B0C  C026  FFDA         	movff	right@mR+1,fsr2h
 13008  004B10  0E27               	movlw	39
 13009  004B12  64DF               	cpfsgt	indf2,c
 13010  004B14  EF8E  F025         	goto	u11561
 13011  004B18  EF90  F025         	goto	u11560
 13012  004B1C                     u11561:
 13013  004B1C  EF35  F025         	goto	l8554
 13014  004B20                     u11560:
 13015  004B20                     
 13016                           ;DC_motors.c: 207:     unsigned int i;;DC_motors.c: 208:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
 13017  004B20  0E00               	movlw	0
 13018  004B22  6E2E               	movwf	(right@i+1)^0,c
 13019  004B24  0E00               	movlw	0
 13020  004B26  6E2D               	movwf	right@i^0,c
 13021  004B28  EFA0  F025         	goto	l698
 13022  004B2C                     l8576:
 13023  004B2C  0E15               	movlw	21
 13024  004B2E  6E29               	movwf	??_right^0,c
 13025  004B30  0EC6               	movlw	198
 13026  004B32                     u12807:
 13027  004B32  2EE8               	decfsz	wreg,f,c
 13028  004B34  D7FE               	bra	u12807
 13029  004B36  2E29               	decfsz	??_right^0,f,c
 13030  004B38  D7FC               	bra	u12807
 13031  004B3A  D000               	nop2	
 13032  004B3C  4A2D               	infsnz	right@i^0,f,c
 13033  004B3E  2A2E               	incf	(right@i+1)^0,f,c
 13034  004B40                     l698:
 13035  004B40  502B               	movf	right@delay^0,w,c
 13036  004B42  5C2D               	subwf	right@i^0,w,c
 13037  004B44  502C               	movf	(right@delay+1)^0,w,c
 13038  004B46  582E               	subwfb	(right@i+1)^0,w,c
 13039  004B48  A0D8               	btfss	status,0,c
 13040  004B4A  EFA9  F025         	goto	u11571
 13041  004B4E  EFAB  F025         	goto	u11570
 13042  004B52                     u11571:
 13043  004B52  EF96  F025         	goto	l8576
 13044  004B56                     u11570:
 13045  004B56                     
 13046                           ;DC_motors.c: 209:     _delay((unsigned long)((1)*(64000000/4000.0)));
 13047  004B56  0E15               	movlw	21
 13048  004B58  6E29               	movwf	??_right^0,c
 13049  004B5A  0EC6               	movlw	198
 13050  004B5C                     u12817:
 13051  004B5C  2EE8               	decfsz	wreg,f,c
 13052  004B5E  D7FE               	bra	u12817
 13053  004B60  2E29               	decfsz	??_right^0,f,c
 13054  004B62  D7FC               	bra	u12817
 13055  004B64  D000               	nop2	
 13056  004B66                     
 13057                           ;DC_motors.c: 211:     LATHbits.LATH0 = 0;
 13058  004B66  9080               	bcf	128,0,c	;volatile
 13059  004B68  0012               	return		;funcret
 13060  004B6A                     __end_of_right:
 13061                           	callstack 0
 13062                           
 13063 ;; *************** function _left *****************
 13064 ;; Defined at:
 13065 ;;		line 150 in file "DC_motors.c"
 13066 ;; Parameters:    Size  Location     Type
 13067 ;;  mL              2   64[COMRAM] PTR struct .
 13068 ;;		 -> main@motorL(9), 
 13069 ;;  mR              2   66[COMRAM] PTR struct .
 13070 ;;		 -> main@motorR(9), 
 13071 ;;  deg             2   68[COMRAM] unsigned int 
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;  delay           4    0[BANK0 ] unsigned int 
 13074 ;;  i               2    8[BANK0 ] unsigned int 
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  1    wreg      void 
 13077 ;; Registers used:
 13078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13084 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13085 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13087 ;;      Totals:         7      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13088 ;;Total ram usage:       17 bytes
 13089 ;; Hardware stack levels used: 1
 13090 ;; Hardware stack levels required when called: 9
 13091 ;; This function calls:
 13092 ;;		_DCmotors_setPWM
 13093 ;;		___fladd
 13094 ;;		___flge
 13095 ;;		___flmul
 13096 ;;		___xxtofl
 13097 ;; This function is called by:
 13098 ;;		_turnleft
 13099 ;;		_turnright
 13100 ;; This function uses a non-reentrant model
 13101 ;;
 13102                           
 13103                           	psect	text69
 13104  003A08                     __ptext69:
 13105                           	callstack 0
 13106  003A08                     _left:
 13107                           	callstack 19
 13108  003A08                     
 13109                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     double delay = (deg*12.5) - 135 + turnleft_delay;
 13110  003A08  0E00               	movlw	0
 13111  003A0A  6E35               	movwf	___fladd@a^0,c
 13112  003A0C  0E00               	movlw	0
 13113  003A0E  6E36               	movwf	(___fladd@a+1)^0,c
 13114  003A10  0E07               	movlw	7
 13115  003A12  6E37               	movwf	(___fladd@a+2)^0,c
 13116  003A14  0EC3               	movlw	195
 13117  003A16  6E38               	movwf	(___fladd@a+3)^0,c
 13118  003A18  0E00               	movlw	0
 13119  003A1A  6E1C               	movwf	___flmul@a^0,c
 13120  003A1C  0E00               	movlw	0
 13121  003A1E  6E1D               	movwf	(___flmul@a+1)^0,c
 13122  003A20  0E48               	movlw	72
 13123  003A22  6E1E               	movwf	(___flmul@a+2)^0,c
 13124  003A24  0E41               	movlw	65
 13125  003A26  6E1F               	movwf	(___flmul@a+3)^0,c
 13126  003A28  C045  F00A         	movff	left@deg,___xxtofl@val
 13127  003A2C  C046  F00B         	movff	left@deg+1,___xxtofl@val+1
 13128  003A30  6A0C               	clrf	(___xxtofl@val+2)^0,c
 13129  003A32  6A0D               	clrf	(___xxtofl@val+3)^0,c
 13130  003A34  0E00               	movlw	0
 13131  003A36  ECE9  F01E         	call	___xxtofl
 13132  003A3A  C00A  F018         	movff	?___xxtofl,___flmul@b
 13133  003A3E  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
 13134  003A42  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
 13135  003A46  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
 13136  003A4A  ECAA  F016         	call	___flmul	;wreg free
 13137  003A4E  C018  F031         	movff	?___flmul,___fladd@b
 13138  003A52  C019  F032         	movff	?___flmul+1,___fladd@b+1
 13139  003A56  C01A  F033         	movff	?___flmul+2,___fladd@b+2
 13140  003A5A  C01B  F034         	movff	?___flmul+3,___fladd@b+3
 13141  003A5E  EC4A  F014         	call	___fladd	;wreg free
 13142  003A62  C031  F064         	movff	?___fladd,_left$3571
 13143  003A66  C032  F065         	movff	?___fladd+1,_left$3571+1
 13144  003A6A  C033  F066         	movff	?___fladd+2,_left$3571+2
 13145  003A6E  C034  F067         	movff	?___fladd+3,_left$3571+3
 13146  003A72                     
 13147                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     double delay = (deg*12.5) - 135 + turnleft_delay;
 13148  003A72  C064  F031         	movff	_left$3571,___fladd@b
 13149  003A76  C065  F032         	movff	_left$3571+1,___fladd@b+1
 13150  003A7A  C066  F033         	movff	_left$3571+2,___fladd@b+2
 13151  003A7E  C067  F034         	movff	_left$3571+3,___fladd@b+3
 13152  003A82  C126  F00A         	movff	_turnleft_delay,___xxtofl@val	;volatile
 13153  003A86  C127  F00B         	movff	_turnleft_delay+1,___xxtofl@val+1	;volatile
 13154  003A8A  6A0C               	clrf	(___xxtofl@val+2)^0,c
 13155  003A8C  6A0D               	clrf	(___xxtofl@val+3)^0,c
 13156  003A8E  0E00               	movlw	0
 13157  003A90  ECE9  F01E         	call	___xxtofl
 13158  003A94  C00A  F035         	movff	?___xxtofl,___fladd@a
 13159  003A98  C00B  F036         	movff	?___xxtofl+1,___fladd@a+1
 13160  003A9C  C00C  F037         	movff	?___xxtofl+2,___fladd@a+2
 13161  003AA0  C00D  F038         	movff	?___xxtofl+3,___fladd@a+3
 13162  003AA4  EC4A  F014         	call	___fladd	;wreg free
 13163  003AA8  C031  F060         	movff	?___fladd,left@delay
 13164  003AAC  C032  F061         	movff	?___fladd+1,left@delay+1
 13165  003AB0  C033  F062         	movff	?___fladd+2,left@delay+2
 13166  003AB4  C034  F063         	movff	?___fladd+3,left@delay+3
 13167  003AB8                     
 13168                           ;DC_motors.c: 156:     mL->direction = 0;
 13169  003AB8  EE20 F001          	lfsr	2,1
 13170  003ABC  5041               	movf	left@mL^0,w,c
 13171  003ABE  26D9               	addwf	fsr2l,f,c
 13172  003AC0  5042               	movf	(left@mL+1)^0,w,c
 13173  003AC2  22DA               	addwfc	fsr2h,f,c
 13174  003AC4  0E00               	movlw	0
 13175  003AC6  6EDF               	movwf	indf2,c
 13176  003AC8                     
 13177                           ;DC_motors.c: 157:     mR->direction = 1;
 13178  003AC8  EE20 F001          	lfsr	2,1
 13179  003ACC  5043               	movf	left@mR^0,w,c
 13180  003ACE  26D9               	addwf	fsr2l,f,c
 13181  003AD0  5044               	movf	(left@mR+1)^0,w,c
 13182  003AD2  22DA               	addwfc	fsr2h,f,c
 13183  003AD4  0E01               	movlw	1
 13184  003AD6  6EDF               	movwf	indf2,c
 13185                           
 13186                           ;DC_motors.c: 160:     while((mL->power < 40) || (mR->power < 40)){
 13187  003AD8  EFB1  F01D         	goto	l8536
 13188  003ADC                     l8520:
 13189                           
 13190                           ;DC_motors.c: 162:         LATFbits.LATF0 = !LATFbits.LATF0;
 13191  003ADC  A07E               	btfss	126,0,c	;volatile
 13192  003ADE  EF73  F01D         	goto	u11441
 13193  003AE2  EF77  F01D         	goto	u11440
 13194  003AE6                     u11441:
 13195  003AE6  6A47               	clrf	??_left^0,c
 13196  003AE8  2A47               	incf	??_left^0,f,c
 13197  003AEA  EF78  F01D         	goto	u11458
 13198  003AEE                     u11440:
 13199  003AEE  6A47               	clrf	??_left^0,c
 13200  003AF0                     u11458:
 13201  003AF0  507E               	movf	126,w,c	;volatile
 13202  003AF2  1847               	xorwf	??_left^0,w,c
 13203  003AF4  0BFE               	andlw	-2
 13204  003AF6  1847               	xorwf	??_left^0,w,c
 13205  003AF8  6E7E               	movwf	126,c	;volatile
 13206  003AFA                     
 13207                           ;DC_motors.c: 165:         if (mL->power < 40) {mL->power += 10;}
 13208  003AFA  C041  FFD9         	movff	left@mL,fsr2l
 13209  003AFE  C042  FFDA         	movff	left@mL+1,fsr2h
 13210  003B02  0E28               	movlw	40
 13211  003B04  60DF               	cpfslt	indf2,c
 13212  003B06  EF87  F01D         	goto	u11461
 13213  003B0A  EF89  F01D         	goto	u11460
 13214  003B0E                     u11461:
 13215  003B0E  EF8F  F01D         	goto	l8526
 13216  003B12                     u11460:
 13217  003B12  C041  FFD9         	movff	left@mL,fsr2l
 13218  003B16  C042  FFDA         	movff	left@mL+1,fsr2h
 13219  003B1A  0E0A               	movlw	10
 13220  003B1C  26DF               	addwf	indf2,f,c
 13221  003B1E                     l8526:
 13222                           
 13223                           ;DC_motors.c: 166:         if (mR->power < 40) {mR->power += 10;}
 13224  003B1E  C043  FFD9         	movff	left@mR,fsr2l
 13225  003B22  C044  FFDA         	movff	left@mR+1,fsr2h
 13226  003B26  0E28               	movlw	40
 13227  003B28  60DF               	cpfslt	indf2,c
 13228  003B2A  EF99  F01D         	goto	u11471
 13229  003B2E  EF9B  F01D         	goto	u11470
 13230  003B32                     u11471:
 13231  003B32  EFA1  F01D         	goto	l8530
 13232  003B36                     u11470:
 13233  003B36  C043  FFD9         	movff	left@mR,fsr2l
 13234  003B3A  C044  FFDA         	movff	left@mR+1,fsr2h
 13235  003B3E  0E0A               	movlw	10
 13236  003B40  26DF               	addwf	indf2,f,c
 13237  003B42                     l8530:
 13238                           
 13239                           ;DC_motors.c: 169:         DCmotors_setPWM(mL);
 13240  003B42  C041  F018         	movff	left@mL,DCmotors_setPWM@m
 13241  003B46  C042  F019         	movff	left@mL+1,DCmotors_setPWM@m+1
 13242  003B4A  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 13243  003B4E                     
 13244                           ;DC_motors.c: 170:         DCmotors_setPWM(mR);
 13245  003B4E  C043  F018         	movff	left@mR,DCmotors_setPWM@m
 13246  003B52  C044  F019         	movff	left@mR+1,DCmotors_setPWM@m+1
 13247  003B56  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 13248  003B5A                     
 13249                           ;DC_motors.c: 171:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 13250  003B5A  0EA0               	movlw	160
 13251  003B5C                     u12827:
 13252  003B5C  D000               	nop2	
 13253  003B5E  2EE8               	decfsz	wreg,f,c
 13254  003B60  D7FD               	bra	u12827
 13255  003B62                     l8536:
 13256                           
 13257                           ;DC_motors.c: 160:     while((mL->power < 40) || (mR->power < 40)){
 13258  003B62  C041  FFD9         	movff	left@mL,fsr2l
 13259  003B66  C042  FFDA         	movff	left@mL+1,fsr2h
 13260  003B6A  0E27               	movlw	39
 13261  003B6C  64DF               	cpfsgt	indf2,c
 13262  003B6E  EFBB  F01D         	goto	u11481
 13263  003B72  EFBD  F01D         	goto	u11480
 13264  003B76                     u11481:
 13265  003B76  EF6E  F01D         	goto	l8520
 13266  003B7A                     u11480:
 13267  003B7A  C043  FFD9         	movff	left@mR,fsr2l
 13268  003B7E  C044  FFDA         	movff	left@mR+1,fsr2h
 13269  003B82  0E27               	movlw	39
 13270  003B84  64DF               	cpfsgt	indf2,c
 13271  003B86  EFC7  F01D         	goto	u11491
 13272  003B8A  EFC9  F01D         	goto	u11490
 13273  003B8E                     u11491:
 13274  003B8E  EF6E  F01D         	goto	l8520
 13275  003B92                     u11490:
 13276  003B92                     
 13277                           ;DC_motors.c: 174:     unsigned int i;;DC_motors.c: 175:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
 13278  003B92  0E00               	movlw	0
 13279  003B94  0100               	movlb	0	; () banked
 13280  003B96  6F69               	movwf	(left@i+1)& (0+255),b
 13281  003B98  0E00               	movlw	0
 13282  003B9A  6F68               	movwf	left@i& (0+255),b
 13283  003B9C  EFDB  F01D         	goto	l8546
 13284  003BA0                     l8542:
 13285  003BA0  0E15               	movlw	21
 13286  003BA2  6E47               	movwf	??_left^0,c
 13287  003BA4  0EC6               	movlw	198
 13288  003BA6                     u12837:
 13289  003BA6  2EE8               	decfsz	wreg,f,c
 13290  003BA8  D7FE               	bra	u12837
 13291  003BAA  2E47               	decfsz	??_left^0,f,c
 13292  003BAC  D7FC               	bra	u12837
 13293  003BAE  D000               	nop2	
 13294  003BB0  0100               	movlb	0	; () banked
 13295  003BB2  4B68               	infsnz	left@i& (0+255),f,b
 13296  003BB4  2B69               	incf	(left@i+1)& (0+255),f,b
 13297  003BB6                     l8546:
 13298                           
 13299                           ; BSR set to: 0
 13300  003BB6  C068  F00A         	movff	left@i,___xxtofl@val
 13301  003BBA  C069  F00B         	movff	left@i+1,___xxtofl@val+1
 13302  003BBE  6A0C               	clrf	(___xxtofl@val+2)^0,c
 13303  003BC0  6A0D               	clrf	(___xxtofl@val+3)^0,c
 13304  003BC2  0E00               	movlw	0
 13305  003BC4  ECE9  F01E         	call	___xxtofl
 13306  003BC8  C00A  F031         	movff	?___xxtofl,___flge@ff1
 13307  003BCC  C00B  F032         	movff	?___xxtofl+1,___flge@ff1+1
 13308  003BD0  C00C  F033         	movff	?___xxtofl+2,___flge@ff1+2
 13309  003BD4  C00D  F034         	movff	?___xxtofl+3,___flge@ff1+3
 13310  003BD8  C060  F035         	movff	left@delay,___flge@ff2
 13311  003BDC  C061  F036         	movff	left@delay+1,___flge@ff2+1
 13312  003BE0  C062  F037         	movff	left@delay+2,___flge@ff2+2
 13313  003BE4  C063  F038         	movff	left@delay+3,___flge@ff2+3
 13314  003BE8  EC14  F028         	call	___flge	;wreg free
 13315  003BEC  A0D8               	btfss	status,0,c
 13316  003BEE  EFFB  F01D         	goto	u11501
 13317  003BF2  EFFD  F01D         	goto	u11500
 13318  003BF6                     u11501:
 13319  003BF6  EFD0  F01D         	goto	l8542
 13320  003BFA                     u11500:
 13321  003BFA                     
 13322                           ;DC_motors.c: 177:     LATFbits.LATF0 = 0;
 13323  003BFA  907E               	bcf	126,0,c	;volatile
 13324  003BFC  0012               	return		;funcret
 13325  003BFE                     __end_of_left:
 13326                           	callstack 0
 13327                           
 13328 ;; *************** function ___xxtofl *****************
 13329 ;; Defined at:
 13330 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  sign            1    wreg     unsigned char 
 13333 ;;  val             4    9[COMRAM] long 
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;  sign            1   17[COMRAM] unsigned char 
 13336 ;;  arg             4   19[COMRAM] unsigned long 
 13337 ;;  exp             1   18[COMRAM] unsigned char 
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  4    9[COMRAM] unsigned char 
 13340 ;; Registers used:
 13341 ;;		wreg, status,2, status,0
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13348 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13349 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13350 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13351 ;;Total ram usage:       14 bytes
 13352 ;; Hardware stack levels used: 1
 13353 ;; Hardware stack levels required when called: 7
 13354 ;; This function calls:
 13355 ;;		Nothing
 13356 ;; This function is called by:
 13357 ;;		_colourcards_normaliseRGBC
 13358 ;;		_left
 13359 ;; This function uses a non-reentrant model
 13360 ;;
 13361                           
 13362                           	psect	text70
 13363  003DD2                     __ptext70:
 13364                           	callstack 0
 13365  003DD2                     ___xxtofl:
 13366                           	callstack 20
 13367                           
 13368                           ;incstack = 0
 13369                           ;___xxtofl@sign stored from wreg
 13370  003DD2  6E12               	movwf	___xxtofl@sign^0,c
 13371  003DD4  5012               	movf	___xxtofl@sign^0,w,c
 13372  003DD6  B4D8               	btfsc	status,2,c
 13373  003DD8  EFF0  F01E         	goto	u11291
 13374  003DDC  EFF2  F01E         	goto	u11290
 13375  003DE0                     u11291:
 13376  003DE0  EF14  F01F         	goto	l1455
 13377  003DE4                     u11290:
 13378  003DE4  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
 13379  003DE6  EFF9  F01E         	goto	u11300
 13380  003DEA  EFF7  F01E         	goto	u11301
 13381  003DEE                     u11301:
 13382  003DEE  EF14  F01F         	goto	l1455
 13383  003DF2                     u11300:
 13384  003DF2  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
 13385  003DF6  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
 13386  003DFA  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
 13387  003DFE  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
 13388  003E02  1E0E               	comf	??___xxtofl^0,f,c
 13389  003E04  1E0F               	comf	(??___xxtofl+1)^0,f,c
 13390  003E06  1E10               	comf	(??___xxtofl+2)^0,f,c
 13391  003E08  1E11               	comf	(??___xxtofl+3)^0,f,c
 13392  003E0A  2A0E               	incf	??___xxtofl^0,f,c
 13393  003E0C  0E00               	movlw	0
 13394  003E0E  220F               	addwfc	(??___xxtofl+1)^0,f,c
 13395  003E10  2210               	addwfc	(??___xxtofl+2)^0,f,c
 13396  003E12  2211               	addwfc	(??___xxtofl+3)^0,f,c
 13397  003E14  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
 13398  003E18  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
 13399  003E1C  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
 13400  003E20  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
 13401  003E24  EF1C  F01F         	goto	l8426
 13402  003E28                     l1455:
 13403  003E28  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
 13404  003E2C  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13405  003E30  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13406  003E34  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13407  003E38                     l8426:
 13408  003E38  500A               	movf	___xxtofl@val^0,w,c
 13409  003E3A  100B               	iorwf	(___xxtofl@val+1)^0,w,c
 13410  003E3C  100C               	iorwf	(___xxtofl@val+2)^0,w,c
 13411  003E3E  100D               	iorwf	(___xxtofl@val+3)^0,w,c
 13412  003E40  A4D8               	btfss	status,2,c
 13413  003E42  EF25  F01F         	goto	u11311
 13414  003E46  EF27  F01F         	goto	u11310
 13415  003E4A                     u11311:
 13416  003E4A  EF31  F01F         	goto	l8432
 13417  003E4E                     u11310:
 13418  003E4E  0E00               	movlw	0
 13419  003E50  6E0A               	movwf	?___xxtofl^0,c
 13420  003E52  0E00               	movlw	0
 13421  003E54  6E0B               	movwf	(?___xxtofl+1)^0,c
 13422  003E56  0E00               	movlw	0
 13423  003E58  6E0C               	movwf	(?___xxtofl+2)^0,c
 13424  003E5A  0E00               	movlw	0
 13425  003E5C  6E0D               	movwf	(?___xxtofl+3)^0,c
 13426  003E5E  EFC2  F01F         	goto	l1458
 13427  003E62                     l8432:
 13428  003E62  0E96               	movlw	150
 13429  003E64  6E13               	movwf	___xxtofl@exp^0,c
 13430  003E66  EF3B  F01F         	goto	l8436
 13431  003E6A                     l8434:
 13432  003E6A  2A13               	incf	___xxtofl@exp^0,f,c
 13433  003E6C  90D8               	bcf	status,0,c
 13434  003E6E  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
 13435  003E70  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
 13436  003E72  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
 13437  003E74  3214               	rrcf	___xxtofl@arg^0,f,c
 13438  003E76                     l8436:
 13439  003E76  0E00               	movlw	0
 13440  003E78  1414               	andwf	___xxtofl@arg^0,w,c
 13441  003E7A  6E0E               	movwf	??___xxtofl^0,c
 13442  003E7C  0E00               	movlw	0
 13443  003E7E  1415               	andwf	(___xxtofl@arg+1)^0,w,c
 13444  003E80  6E0F               	movwf	(??___xxtofl+1)^0,c
 13445  003E82  0E00               	movlw	0
 13446  003E84  1416               	andwf	(___xxtofl@arg+2)^0,w,c
 13447  003E86  6E10               	movwf	(??___xxtofl+2)^0,c
 13448  003E88  0EFE               	movlw	254
 13449  003E8A  1417               	andwf	(___xxtofl@arg+3)^0,w,c
 13450  003E8C  6E11               	movwf	(??___xxtofl+3)^0,c
 13451  003E8E  500E               	movf	??___xxtofl^0,w,c
 13452  003E90  100F               	iorwf	(??___xxtofl+1)^0,w,c
 13453  003E92  1010               	iorwf	(??___xxtofl+2)^0,w,c
 13454  003E94  1011               	iorwf	(??___xxtofl+3)^0,w,c
 13455  003E96  A4D8               	btfss	status,2,c
 13456  003E98  EF50  F01F         	goto	u11321
 13457  003E9C  EF52  F01F         	goto	u11320
 13458  003EA0                     u11321:
 13459  003EA0  EF35  F01F         	goto	l8434
 13460  003EA4                     u11320:
 13461  003EA4  EF60  F01F         	goto	l1462
 13462  003EA8                     l8438:
 13463  003EA8  2A13               	incf	___xxtofl@exp^0,f,c
 13464  003EAA  0E01               	movlw	1
 13465  003EAC  2614               	addwf	___xxtofl@arg^0,f,c
 13466  003EAE  0E00               	movlw	0
 13467  003EB0  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
 13468  003EB2  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
 13469  003EB4  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
 13470  003EB6  90D8               	bcf	status,0,c
 13471  003EB8  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
 13472  003EBA  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
 13473  003EBC  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
 13474  003EBE  3214               	rrcf	___xxtofl@arg^0,f,c
 13475  003EC0                     l1462:
 13476  003EC0  0E00               	movlw	0
 13477  003EC2  1414               	andwf	___xxtofl@arg^0,w,c
 13478  003EC4  6E0E               	movwf	??___xxtofl^0,c
 13479  003EC6  0E00               	movlw	0
 13480  003EC8  1415               	andwf	(___xxtofl@arg+1)^0,w,c
 13481  003ECA  6E0F               	movwf	(??___xxtofl+1)^0,c
 13482  003ECC  0E00               	movlw	0
 13483  003ECE  1416               	andwf	(___xxtofl@arg+2)^0,w,c
 13484  003ED0  6E10               	movwf	(??___xxtofl+2)^0,c
 13485  003ED2  0EFF               	movlw	255
 13486  003ED4  1417               	andwf	(___xxtofl@arg+3)^0,w,c
 13487  003ED6  6E11               	movwf	(??___xxtofl+3)^0,c
 13488  003ED8  500E               	movf	??___xxtofl^0,w,c
 13489  003EDA  100F               	iorwf	(??___xxtofl+1)^0,w,c
 13490  003EDC  1010               	iorwf	(??___xxtofl+2)^0,w,c
 13491  003EDE  1011               	iorwf	(??___xxtofl+3)^0,w,c
 13492  003EE0  A4D8               	btfss	status,2,c
 13493  003EE2  EF75  F01F         	goto	u11331
 13494  003EE6  EF77  F01F         	goto	u11330
 13495  003EEA                     u11331:
 13496  003EEA  EF54  F01F         	goto	l8438
 13497  003EEE                     u11330:
 13498  003EEE  EF7F  F01F         	goto	l8446
 13499  003EF2                     l8444:
 13500  003EF2  0613               	decf	___xxtofl@exp^0,f,c
 13501  003EF4  90D8               	bcf	status,0,c
 13502  003EF6  3614               	rlcf	___xxtofl@arg^0,f,c
 13503  003EF8  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
 13504  003EFA  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
 13505  003EFC  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
 13506  003EFE                     l8446:
 13507  003EFE  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
 13508  003F00  EF84  F01F         	goto	u11341
 13509  003F04  EF86  F01F         	goto	u11340
 13510  003F08                     u11341:
 13511  003F08  EF8E  F01F         	goto	l1469
 13512  003F0C                     u11340:
 13513  003F0C  0E02               	movlw	2
 13514  003F0E  6013               	cpfslt	___xxtofl@exp^0,c
 13515  003F10  EF8C  F01F         	goto	u11351
 13516  003F14  EF8E  F01F         	goto	u11350
 13517  003F18                     u11351:
 13518  003F18  EF79  F01F         	goto	l8444
 13519  003F1C                     u11350:
 13520  003F1C                     l1469:
 13521  003F1C  B013               	btfsc	___xxtofl@exp^0,0,c
 13522  003F1E  EF93  F01F         	goto	u11361
 13523  003F22  EF95  F01F         	goto	u11360
 13524  003F26                     u11361:
 13525  003F26  EF96  F01F         	goto	l8452
 13526  003F2A                     u11360:
 13527  003F2A  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
 13528  003F2C                     l8452:
 13529  003F2C  90D8               	bcf	status,0,c
 13530  003F2E  3213               	rrcf	___xxtofl@exp^0,f,c
 13531  003F30  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
 13532  003F34  6A0F               	clrf	(??___xxtofl+1)^0,c
 13533  003F36  6A10               	clrf	(??___xxtofl+2)^0,c
 13534  003F38  6A11               	clrf	(??___xxtofl+3)^0,c
 13535  003F3A  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
 13536  003F3E  6A10               	clrf	(??___xxtofl+2)^0,c
 13537  003F40  6A0F               	clrf	(??___xxtofl+1)^0,c
 13538  003F42  6A0E               	clrf	??___xxtofl^0,c
 13539  003F44  500E               	movf	??___xxtofl^0,w,c
 13540  003F46  1214               	iorwf	___xxtofl@arg^0,f,c
 13541  003F48  500F               	movf	(??___xxtofl+1)^0,w,c
 13542  003F4A  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
 13543  003F4C  5010               	movf	(??___xxtofl+2)^0,w,c
 13544  003F4E  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
 13545  003F50  5011               	movf	(??___xxtofl+3)^0,w,c
 13546  003F52  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
 13547  003F54  5012               	movf	___xxtofl@sign^0,w,c
 13548  003F56  B4D8               	btfsc	status,2,c
 13549  003F58  EFB0  F01F         	goto	u11371
 13550  003F5C  EFB2  F01F         	goto	u11370
 13551  003F60                     u11371:
 13552  003F60  EFBA  F01F         	goto	l8462
 13553  003F64                     u11370:
 13554  003F64  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
 13555  003F66  EFB9  F01F         	goto	u11380
 13556  003F6A  EFB7  F01F         	goto	u11381
 13557  003F6E                     u11381:
 13558  003F6E  EFBA  F01F         	goto	l8462
 13559  003F72                     u11380:
 13560  003F72  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
 13561  003F74                     l8462:
 13562  003F74  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
 13563  003F78  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
 13564  003F7C  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
 13565  003F80  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
 13566  003F84                     l1458:
 13567  003F84  0012               	return		;funcret
 13568  003F86                     __end_of___xxtofl:
 13569                           	callstack 0
 13570                           
 13571 ;; *************** function ___flmul *****************
 13572 ;; Defined at:
 13573 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13574 ;; Parameters:    Size  Location     Type
 13575 ;;  b               4   23[COMRAM] unsigned char 
 13576 ;;  a               4   27[COMRAM] unsigned char 
 13577 ;; Auto vars:     Size  Location     Type
 13578 ;;  prod            4   42[COMRAM] struct .
 13579 ;;  grs             4   37[COMRAM] unsigned long 
 13580 ;;  temp            2   46[COMRAM] struct .
 13581 ;;  bexp            1   41[COMRAM] unsigned char 
 13582 ;;  aexp            1   36[COMRAM] unsigned char 
 13583 ;;  sign            1   35[COMRAM] unsigned char 
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  4   23[COMRAM] unsigned char 
 13586 ;; Registers used:
 13587 ;;		wreg, status,2, status,0, prodl, prodh
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13593 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13594 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13596 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13597 ;;Total ram usage:       25 bytes
 13598 ;; Hardware stack levels used: 1
 13599 ;; Hardware stack levels required when called: 7
 13600 ;; This function calls:
 13601 ;;		Nothing
 13602 ;; This function is called by:
 13603 ;;		_left
 13604 ;;		_efgtoa
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           	psect	text71
 13609  002D54                     __ptext71:
 13610                           	callstack 0
 13611  002D54                     ___flmul:
 13612                           	callstack 17
 13613  002D54  501B               	movf	(___flmul@b+3)^0,w,c
 13614  002D56  0B80               	andlw	128
 13615  002D58  6E24               	movwf	___flmul@sign^0,c
 13616  002D5A  501B               	movf	(___flmul@b+3)^0,w,c
 13617  002D5C  241B               	addwf	(___flmul@b+3)^0,w,c
 13618  002D5E  6E2A               	movwf	___flmul@bexp^0,c
 13619  002D60  AE1A               	btfss	(___flmul@b+2)^0,7,c
 13620  002D62  EFB5  F016         	goto	u9341
 13621  002D66  EFB7  F016         	goto	u9340
 13622  002D6A                     u9341:
 13623  002D6A  EFB8  F016         	goto	l7354
 13624  002D6E                     u9340:
 13625  002D6E  802A               	bsf	___flmul@bexp^0,0,c
 13626  002D70                     l7354:
 13627  002D70  502A               	movf	___flmul@bexp^0,w,c
 13628  002D72  B4D8               	btfsc	status,2,c
 13629  002D74  EFBE  F016         	goto	u9351
 13630  002D78  EFC0  F016         	goto	u9350
 13631  002D7C                     u9351:
 13632  002D7C  EFD3  F016         	goto	l7362
 13633  002D80                     u9350:
 13634  002D80  282A               	incf	___flmul@bexp^0,w,c
 13635  002D82  A4D8               	btfss	status,2,c
 13636  002D84  EFC6  F016         	goto	u9361
 13637  002D88  EFC8  F016         	goto	u9360
 13638  002D8C                     u9361:
 13639  002D8C  EFD0  F016         	goto	l7360
 13640  002D90                     u9360:
 13641  002D90  0E00               	movlw	0
 13642  002D92  6E18               	movwf	___flmul@b^0,c
 13643  002D94  0E00               	movlw	0
 13644  002D96  6E19               	movwf	(___flmul@b+1)^0,c
 13645  002D98  0E00               	movlw	0
 13646  002D9A  6E1A               	movwf	(___flmul@b+2)^0,c
 13647  002D9C  0E00               	movlw	0
 13648  002D9E  6E1B               	movwf	(___flmul@b+3)^0,c
 13649  002DA0                     l7360:
 13650  002DA0  8E1A               	bsf	(___flmul@b+2)^0,7,c
 13651  002DA2  EFDB  F016         	goto	l7364
 13652  002DA6                     l7362:
 13653  002DA6  0E00               	movlw	0
 13654  002DA8  6E18               	movwf	___flmul@b^0,c
 13655  002DAA  0E00               	movlw	0
 13656  002DAC  6E19               	movwf	(___flmul@b+1)^0,c
 13657  002DAE  0E00               	movlw	0
 13658  002DB0  6E1A               	movwf	(___flmul@b+2)^0,c
 13659  002DB2  0E00               	movlw	0
 13660  002DB4  6E1B               	movwf	(___flmul@b+3)^0,c
 13661  002DB6                     l7364:
 13662  002DB6  501F               	movf	(___flmul@a+3)^0,w,c
 13663  002DB8  0B80               	andlw	128
 13664  002DBA  1A24               	xorwf	___flmul@sign^0,f,c
 13665  002DBC  501F               	movf	(___flmul@a+3)^0,w,c
 13666  002DBE  241F               	addwf	(___flmul@a+3)^0,w,c
 13667  002DC0  6E25               	movwf	___flmul@aexp^0,c
 13668  002DC2  AE1E               	btfss	(___flmul@a+2)^0,7,c
 13669  002DC4  EFE6  F016         	goto	u9371
 13670  002DC8  EFE8  F016         	goto	u9370
 13671  002DCC                     u9371:
 13672  002DCC  EFE9  F016         	goto	l7372
 13673  002DD0                     u9370:
 13674  002DD0  8025               	bsf	___flmul@aexp^0,0,c
 13675  002DD2                     l7372:
 13676  002DD2  5025               	movf	___flmul@aexp^0,w,c
 13677  002DD4  B4D8               	btfsc	status,2,c
 13678  002DD6  EFEF  F016         	goto	u9381
 13679  002DDA  EFF1  F016         	goto	u9380
 13680  002DDE                     u9381:
 13681  002DDE  EF04  F017         	goto	l7380
 13682  002DE2                     u9380:
 13683  002DE2  2825               	incf	___flmul@aexp^0,w,c
 13684  002DE4  A4D8               	btfss	status,2,c
 13685  002DE6  EFF7  F016         	goto	u9391
 13686  002DEA  EFF9  F016         	goto	u9390
 13687  002DEE                     u9391:
 13688  002DEE  EF01  F017         	goto	l7378
 13689  002DF2                     u9390:
 13690  002DF2  0E00               	movlw	0
 13691  002DF4  6E1C               	movwf	___flmul@a^0,c
 13692  002DF6  0E00               	movlw	0
 13693  002DF8  6E1D               	movwf	(___flmul@a+1)^0,c
 13694  002DFA  0E00               	movlw	0
 13695  002DFC  6E1E               	movwf	(___flmul@a+2)^0,c
 13696  002DFE  0E00               	movlw	0
 13697  002E00  6E1F               	movwf	(___flmul@a+3)^0,c
 13698  002E02                     l7378:
 13699  002E02  8E1E               	bsf	(___flmul@a+2)^0,7,c
 13700  002E04  EF0C  F017         	goto	l1414
 13701  002E08                     l7380:
 13702  002E08  0E00               	movlw	0
 13703  002E0A  6E1C               	movwf	___flmul@a^0,c
 13704  002E0C  0E00               	movlw	0
 13705  002E0E  6E1D               	movwf	(___flmul@a+1)^0,c
 13706  002E10  0E00               	movlw	0
 13707  002E12  6E1E               	movwf	(___flmul@a+2)^0,c
 13708  002E14  0E00               	movlw	0
 13709  002E16  6E1F               	movwf	(___flmul@a+3)^0,c
 13710  002E18                     l1414:
 13711  002E18  5025               	movf	___flmul@aexp^0,w,c
 13712  002E1A  B4D8               	btfsc	status,2,c
 13713  002E1C  EF12  F017         	goto	u9401
 13714  002E20  EF14  F017         	goto	u9400
 13715  002E24                     u9401:
 13716  002E24  EF1C  F017         	goto	l7384
 13717  002E28                     u9400:
 13718  002E28  502A               	movf	___flmul@bexp^0,w,c
 13719  002E2A  A4D8               	btfss	status,2,c
 13720  002E2C  EF1A  F017         	goto	u9411
 13721  002E30  EF1C  F017         	goto	u9410
 13722  002E34                     u9411:
 13723  002E34  EF26  F017         	goto	l7388
 13724  002E38                     u9410:
 13725  002E38                     l7384:
 13726  002E38  0E00               	movlw	0
 13727  002E3A  6E18               	movwf	?___flmul^0,c
 13728  002E3C  0E00               	movlw	0
 13729  002E3E  6E19               	movwf	(?___flmul+1)^0,c
 13730  002E40  0E00               	movlw	0
 13731  002E42  6E1A               	movwf	(?___flmul+2)^0,c
 13732  002E44  0E00               	movlw	0
 13733  002E46  6E1B               	movwf	(?___flmul+3)^0,c
 13734  002E48  EFBE  F018         	goto	l1418
 13735  002E4C                     l7388:
 13736  002E4C  501E               	movf	(___flmul@a+2)^0,w,c
 13737  002E4E  0218               	mulwf	___flmul@b^0,c
 13738  002E50  CFF3 F02F          	movff	prodl,___flmul@temp
 13739  002E54  CFF4 F030          	movff	prodh,___flmul@temp+1
 13740  002E58  502F               	movf	___flmul@temp^0,w,c
 13741  002E5A  6E26               	movwf	___flmul@grs^0,c
 13742  002E5C  6A27               	clrf	(___flmul@grs+1)^0,c
 13743  002E5E  6A28               	clrf	(___flmul@grs+2)^0,c
 13744  002E60  6A29               	clrf	(___flmul@grs+3)^0,c
 13745  002E62  5030               	movf	(___flmul@temp+1)^0,w,c
 13746  002E64  6E2B               	movwf	___flmul@prod^0,c
 13747  002E66  6A2C               	clrf	(___flmul@prod+1)^0,c
 13748  002E68  6A2D               	clrf	(___flmul@prod+2)^0,c
 13749  002E6A  6A2E               	clrf	(___flmul@prod+3)^0,c
 13750  002E6C  501D               	movf	(___flmul@a+1)^0,w,c
 13751  002E6E  0219               	mulwf	(___flmul@b+1)^0,c
 13752  002E70  CFF3 F02F          	movff	prodl,___flmul@temp
 13753  002E74  CFF4 F030          	movff	prodh,___flmul@temp+1
 13754  002E78  502F               	movf	___flmul@temp^0,w,c
 13755  002E7A  2626               	addwf	___flmul@grs^0,f,c
 13756  002E7C  0E00               	movlw	0
 13757  002E7E  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13758  002E80  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13759  002E82  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13760  002E84  5030               	movf	(___flmul@temp+1)^0,w,c
 13761  002E86  262B               	addwf	___flmul@prod^0,f,c
 13762  002E88  0E00               	movlw	0
 13763  002E8A  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13764  002E8C  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13765  002E8E  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13766  002E90  501C               	movf	___flmul@a^0,w,c
 13767  002E92  021A               	mulwf	(___flmul@b+2)^0,c
 13768  002E94  CFF3 F02F          	movff	prodl,___flmul@temp
 13769  002E98  CFF4 F030          	movff	prodh,___flmul@temp+1
 13770  002E9C  502F               	movf	___flmul@temp^0,w,c
 13771  002E9E  2626               	addwf	___flmul@grs^0,f,c
 13772  002EA0  0E00               	movlw	0
 13773  002EA2  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13774  002EA4  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13775  002EA6  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13776  002EA8  5030               	movf	(___flmul@temp+1)^0,w,c
 13777  002EAA  262B               	addwf	___flmul@prod^0,f,c
 13778  002EAC  0E00               	movlw	0
 13779  002EAE  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13780  002EB0  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13781  002EB2  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13782  002EB4  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
 13783  002EB8  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
 13784  002EBC  C026  F027         	movff	___flmul@grs,___flmul@grs+1
 13785  002EC0  6A26               	clrf	___flmul@grs^0,c
 13786  002EC2  501C               	movf	___flmul@a^0,w,c
 13787  002EC4  0219               	mulwf	(___flmul@b+1)^0,c
 13788  002EC6  CFF3 F02F          	movff	prodl,___flmul@temp
 13789  002ECA  CFF4 F030          	movff	prodh,___flmul@temp+1
 13790  002ECE  502F               	movf	___flmul@temp^0,w,c
 13791  002ED0  2626               	addwf	___flmul@grs^0,f,c
 13792  002ED2  5030               	movf	(___flmul@temp+1)^0,w,c
 13793  002ED4  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13794  002ED6  0E00               	movlw	0
 13795  002ED8  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13796  002EDA  0E00               	movlw	0
 13797  002EDC  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13798  002EDE  501D               	movf	(___flmul@a+1)^0,w,c
 13799  002EE0  0218               	mulwf	___flmul@b^0,c
 13800  002EE2  CFF3 F02F          	movff	prodl,___flmul@temp
 13801  002EE6  CFF4 F030          	movff	prodh,___flmul@temp+1
 13802  002EEA  502F               	movf	___flmul@temp^0,w,c
 13803  002EEC  2626               	addwf	___flmul@grs^0,f,c
 13804  002EEE  5030               	movf	(___flmul@temp+1)^0,w,c
 13805  002EF0  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13806  002EF2  0E00               	movlw	0
 13807  002EF4  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13808  002EF6  0E00               	movlw	0
 13809  002EF8  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13810  002EFA  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
 13811  002EFE  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
 13812  002F02  C026  F027         	movff	___flmul@grs,___flmul@grs+1
 13813  002F06  6A26               	clrf	___flmul@grs^0,c
 13814  002F08  501C               	movf	___flmul@a^0,w,c
 13815  002F0A  0218               	mulwf	___flmul@b^0,c
 13816  002F0C  CFF3 F02F          	movff	prodl,___flmul@temp
 13817  002F10  CFF4 F030          	movff	prodh,___flmul@temp+1
 13818  002F14  502F               	movf	___flmul@temp^0,w,c
 13819  002F16  2626               	addwf	___flmul@grs^0,f,c
 13820  002F18  5030               	movf	(___flmul@temp+1)^0,w,c
 13821  002F1A  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13822  002F1C  0E00               	movlw	0
 13823  002F1E  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13824  002F20  0E00               	movlw	0
 13825  002F22  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13826  002F24  501E               	movf	(___flmul@a+2)^0,w,c
 13827  002F26  0219               	mulwf	(___flmul@b+1)^0,c
 13828  002F28  CFF3 F02F          	movff	prodl,___flmul@temp
 13829  002F2C  CFF4 F030          	movff	prodh,___flmul@temp+1
 13830  002F30  502F               	movf	___flmul@temp^0,w,c
 13831  002F32  262B               	addwf	___flmul@prod^0,f,c
 13832  002F34  5030               	movf	(___flmul@temp+1)^0,w,c
 13833  002F36  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13834  002F38  0E00               	movlw	0
 13835  002F3A  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13836  002F3C  0E00               	movlw	0
 13837  002F3E  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13838  002F40  501D               	movf	(___flmul@a+1)^0,w,c
 13839  002F42  021A               	mulwf	(___flmul@b+2)^0,c
 13840  002F44  CFF3 F02F          	movff	prodl,___flmul@temp
 13841  002F48  CFF4 F030          	movff	prodh,___flmul@temp+1
 13842  002F4C  502F               	movf	___flmul@temp^0,w,c
 13843  002F4E  262B               	addwf	___flmul@prod^0,f,c
 13844  002F50  5030               	movf	(___flmul@temp+1)^0,w,c
 13845  002F52  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13846  002F54  0E00               	movlw	0
 13847  002F56  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13848  002F58  0E00               	movlw	0
 13849  002F5A  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13850  002F5C  501E               	movf	(___flmul@a+2)^0,w,c
 13851  002F5E  021A               	mulwf	(___flmul@b+2)^0,c
 13852  002F60  CFF3 F02F          	movff	prodl,___flmul@temp
 13853  002F64  CFF4 F030          	movff	prodh,___flmul@temp+1
 13854  002F68  502F               	movf	___flmul@temp^0,w,c
 13855  002F6A  6E20               	movwf	??___flmul^0,c
 13856  002F6C  5030               	movf	(___flmul@temp+1)^0,w,c
 13857  002F6E  6E21               	movwf	(??___flmul+1)^0,c
 13858  002F70  6A22               	clrf	(??___flmul+2)^0,c
 13859  002F72  6A23               	clrf	(??___flmul+3)^0,c
 13860  002F74  C022  F023         	movff	??___flmul+2,??___flmul+3
 13861  002F78  C021  F022         	movff	??___flmul+1,??___flmul+2
 13862  002F7C  C020  F021         	movff	??___flmul,??___flmul+1
 13863  002F80  6A20               	clrf	??___flmul^0,c
 13864  002F82  5020               	movf	??___flmul^0,w,c
 13865  002F84  262B               	addwf	___flmul@prod^0,f,c
 13866  002F86  5021               	movf	(??___flmul+1)^0,w,c
 13867  002F88  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13868  002F8A  5022               	movf	(??___flmul+2)^0,w,c
 13869  002F8C  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13870  002F8E  5023               	movf	(??___flmul+3)^0,w,c
 13871  002F90  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13872  002F92  C026  F020         	movff	___flmul@grs,??___flmul
 13873  002F96  C027  F021         	movff	___flmul@grs+1,??___flmul+1
 13874  002F9A  C028  F022         	movff	___flmul@grs+2,??___flmul+2
 13875  002F9E  C029  F023         	movff	___flmul@grs+3,??___flmul+3
 13876  002FA2  0E19               	movlw	25
 13877  002FA4  EFD9  F017         	goto	u9420
 13878  002FA8                     u9425:
 13879  002FA8  90D8               	bcf	status,0,c
 13880  002FAA  3223               	rrcf	(??___flmul+3)^0,f,c
 13881  002FAC  3222               	rrcf	(??___flmul+2)^0,f,c
 13882  002FAE  3221               	rrcf	(??___flmul+1)^0,f,c
 13883  002FB0  3220               	rrcf	??___flmul^0,f,c
 13884  002FB2                     u9420:
 13885  002FB2  2EE8               	decfsz	wreg,f,c
 13886  002FB4  EFD4  F017         	goto	u9425
 13887  002FB8  5020               	movf	??___flmul^0,w,c
 13888  002FBA  262B               	addwf	___flmul@prod^0,f,c
 13889  002FBC  5021               	movf	(??___flmul+1)^0,w,c
 13890  002FBE  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13891  002FC0  5022               	movf	(??___flmul+2)^0,w,c
 13892  002FC2  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13893  002FC4  5023               	movf	(??___flmul+3)^0,w,c
 13894  002FC6  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13895  002FC8  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
 13896  002FCC  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
 13897  002FD0  C026  F027         	movff	___flmul@grs,___flmul@grs+1
 13898  002FD4  6A26               	clrf	___flmul@grs^0,c
 13899  002FD6  5025               	movf	___flmul@aexp^0,w,c
 13900  002FD8  C02A  F020         	movff	___flmul@bexp,??___flmul
 13901  002FDC  6A21               	clrf	(??___flmul+1)^0,c
 13902  002FDE  2620               	addwf	??___flmul^0,f,c
 13903  002FE0  0E00               	movlw	0
 13904  002FE2  2221               	addwfc	(??___flmul+1)^0,f,c
 13905  002FE4  0E82               	movlw	130
 13906  002FE6  2420               	addwf	??___flmul^0,w,c
 13907  002FE8  6E2F               	movwf	___flmul@temp^0,c
 13908  002FEA  0EFF               	movlw	255
 13909  002FEC  2021               	addwfc	(??___flmul+1)^0,w,c
 13910  002FEE  6E30               	movwf	(___flmul@temp+1)^0,c
 13911  002FF0  EF0F  F018         	goto	l7436
 13912  002FF4                     l7430:
 13913  002FF4  90D8               	bcf	status,0,c
 13914  002FF6  362B               	rlcf	___flmul@prod^0,f,c
 13915  002FF8  362C               	rlcf	(___flmul@prod+1)^0,f,c
 13916  002FFA  362D               	rlcf	(___flmul@prod+2)^0,f,c
 13917  002FFC  362E               	rlcf	(___flmul@prod+3)^0,f,c
 13918  002FFE  AE29               	btfss	(___flmul@grs+3)^0,7,c
 13919  003000  EF04  F018         	goto	u9431
 13920  003004  EF06  F018         	goto	u9430
 13921  003008                     u9431:
 13922  003008  EF07  F018         	goto	l1421
 13923  00300C                     u9430:
 13924  00300C  802B               	bsf	___flmul@prod^0,0,c
 13925  00300E                     l1421:
 13926  00300E  90D8               	bcf	status,0,c
 13927  003010  3626               	rlcf	___flmul@grs^0,f,c
 13928  003012  3627               	rlcf	(___flmul@grs+1)^0,f,c
 13929  003014  3628               	rlcf	(___flmul@grs+2)^0,f,c
 13930  003016  3629               	rlcf	(___flmul@grs+3)^0,f,c
 13931  003018  062F               	decf	___flmul@temp^0,f,c
 13932  00301A  A0D8               	btfss	status,0,c
 13933  00301C  0630               	decf	(___flmul@temp+1)^0,f,c
 13934  00301E                     l7436:
 13935  00301E  AE2D               	btfss	(___flmul@prod+2)^0,7,c
 13936  003020  EF14  F018         	goto	u9441
 13937  003024  EF16  F018         	goto	u9440
 13938  003028                     u9441:
 13939  003028  EFFA  F017         	goto	l7430
 13940  00302C                     u9440:
 13941  00302C  0E00               	movlw	0
 13942  00302E  6E25               	movwf	___flmul@aexp^0,c
 13943  003030  AE29               	btfss	(___flmul@grs+3)^0,7,c
 13944  003032  EF1D  F018         	goto	u9451
 13945  003036  EF1F  F018         	goto	u9450
 13946  00303A                     u9451:
 13947  00303A  EF43  F018         	goto	l1423
 13948  00303E                     u9450:
 13949  00303E  0EFF               	movlw	255
 13950  003040  1426               	andwf	___flmul@grs^0,w,c
 13951  003042  6E20               	movwf	??___flmul^0,c
 13952  003044  0EFF               	movlw	255
 13953  003046  1427               	andwf	(___flmul@grs+1)^0,w,c
 13954  003048  6E21               	movwf	(??___flmul+1)^0,c
 13955  00304A  0EFF               	movlw	255
 13956  00304C  1428               	andwf	(___flmul@grs+2)^0,w,c
 13957  00304E  6E22               	movwf	(??___flmul+2)^0,c
 13958  003050  0E7F               	movlw	127
 13959  003052  1429               	andwf	(___flmul@grs+3)^0,w,c
 13960  003054  6E23               	movwf	(??___flmul+3)^0,c
 13961  003056  5020               	movf	??___flmul^0,w,c
 13962  003058  1021               	iorwf	(??___flmul+1)^0,w,c
 13963  00305A  1022               	iorwf	(??___flmul+2)^0,w,c
 13964  00305C  1023               	iorwf	(??___flmul+3)^0,w,c
 13965  00305E  B4D8               	btfsc	status,2,c
 13966  003060  EF34  F018         	goto	u9461
 13967  003064  EF36  F018         	goto	u9460
 13968  003068                     u9461:
 13969  003068  EF3A  F018         	goto	l1424
 13970  00306C                     u9460:
 13971  00306C                     l7444:
 13972  00306C  0E01               	movlw	1
 13973  00306E  6E25               	movwf	___flmul@aexp^0,c
 13974  003070  EF43  F018         	goto	l1423
 13975  003074                     l1424:
 13976  003074  A02B               	btfss	___flmul@prod^0,0,c
 13977  003076  EF3F  F018         	goto	u9471
 13978  00307A  EF41  F018         	goto	u9470
 13979  00307E                     u9471:
 13980  00307E  EF43  F018         	goto	l1423
 13981  003082                     u9470:
 13982  003082  EF36  F018         	goto	l7444
 13983  003086                     l1423:
 13984  003086  5025               	movf	___flmul@aexp^0,w,c
 13985  003088  B4D8               	btfsc	status,2,c
 13986  00308A  EF49  F018         	goto	u9481
 13987  00308E  EF4B  F018         	goto	u9480
 13988  003092                     u9481:
 13989  003092  EF6F  F018         	goto	l7456
 13990  003096                     u9480:
 13991  003096  0E01               	movlw	1
 13992  003098  262B               	addwf	___flmul@prod^0,f,c
 13993  00309A  0E00               	movlw	0
 13994  00309C  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13995  00309E  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13996  0030A0  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13997  0030A2  A02E               	btfss	(___flmul@prod+3)^0,0,c
 13998  0030A4  EF56  F018         	goto	u9491
 13999  0030A8  EF58  F018         	goto	u9490
 14000  0030AC                     u9491:
 14001  0030AC  EF6F  F018         	goto	l7456
 14002  0030B0                     u9490:
 14003  0030B0  C02B  F020         	movff	___flmul@prod,??___flmul
 14004  0030B4  C02C  F021         	movff	___flmul@prod+1,??___flmul+1
 14005  0030B8  C02D  F022         	movff	___flmul@prod+2,??___flmul+2
 14006  0030BC  C02E  F023         	movff	___flmul@prod+3,??___flmul+3
 14007  0030C0  3423               	rlcf	(??___flmul+3)^0,w,c
 14008  0030C2  3223               	rrcf	(??___flmul+3)^0,f,c
 14009  0030C4  3222               	rrcf	(??___flmul+2)^0,f,c
 14010  0030C6  3221               	rrcf	(??___flmul+1)^0,f,c
 14011  0030C8  3220               	rrcf	??___flmul^0,f,c
 14012  0030CA  C020  F02B         	movff	??___flmul,___flmul@prod
 14013  0030CE  C021  F02C         	movff	??___flmul+1,___flmul@prod+1
 14014  0030D2  C022  F02D         	movff	??___flmul+2,___flmul@prod+2
 14015  0030D6  C023  F02E         	movff	??___flmul+3,___flmul@prod+3
 14016  0030DA  4A2F               	infsnz	___flmul@temp^0,f,c
 14017  0030DC  2A30               	incf	(___flmul@temp+1)^0,f,c
 14018  0030DE                     l7456:
 14019  0030DE  BE30               	btfsc	(___flmul@temp+1)^0,7,c
 14020  0030E0  EF7A  F018         	goto	u9501
 14021  0030E4  5030               	movf	(___flmul@temp+1)^0,w,c
 14022  0030E6  E108               	bnz	u9500
 14023  0030E8  282F               	incf	___flmul@temp^0,w,c
 14024  0030EA  A0D8               	btfss	status,0,c
 14025  0030EC  EF7A  F018         	goto	u9501
 14026  0030F0  EF7C  F018         	goto	u9500
 14027  0030F4                     u9501:
 14028  0030F4  EF86  F018         	goto	l7460
 14029  0030F8                     u9500:
 14030  0030F8  0E00               	movlw	0
 14031  0030FA  6E2B               	movwf	___flmul@prod^0,c
 14032  0030FC  0E00               	movlw	0
 14033  0030FE  6E2C               	movwf	(___flmul@prod+1)^0,c
 14034  003100  0E80               	movlw	128
 14035  003102  6E2D               	movwf	(___flmul@prod+2)^0,c
 14036  003104  0E7F               	movlw	127
 14037  003106  6E2E               	movwf	(___flmul@prod+3)^0,c
 14038  003108  EFB4  F018         	goto	l7472
 14039  00310C                     l7460:
 14040  00310C  BE30               	btfsc	(___flmul@temp+1)^0,7,c
 14041  00310E  EF93  F018         	goto	u9510
 14042  003112  5030               	movf	(___flmul@temp+1)^0,w,c
 14043  003114  E106               	bnz	u9511
 14044  003116  042F               	decf	___flmul@temp^0,w,c
 14045  003118  B0D8               	btfsc	status,0,c
 14046  00311A  EF91  F018         	goto	u9511
 14047  00311E  EF93  F018         	goto	u9510
 14048  003122                     u9511:
 14049  003122  EF9F  F018         	goto	l1431
 14050  003126                     u9510:
 14051  003126  0E00               	movlw	0
 14052  003128  6E2B               	movwf	___flmul@prod^0,c
 14053  00312A  0E00               	movlw	0
 14054  00312C  6E2C               	movwf	(___flmul@prod+1)^0,c
 14055  00312E  0E00               	movlw	0
 14056  003130  6E2D               	movwf	(___flmul@prod+2)^0,c
 14057  003132  0E00               	movlw	0
 14058  003134  6E2E               	movwf	(___flmul@prod+3)^0,c
 14059  003136  0E00               	movlw	0
 14060  003138  6E24               	movwf	___flmul@sign^0,c
 14061  00313A  EFB4  F018         	goto	l7472
 14062  00313E                     l1431:
 14063  00313E  C02F  F02A         	movff	___flmul@temp,___flmul@bexp
 14064  003142  0EFF               	movlw	255
 14065  003144  162B               	andwf	___flmul@prod^0,f,c
 14066  003146  0EFF               	movlw	255
 14067  003148  162C               	andwf	(___flmul@prod+1)^0,f,c
 14068  00314A  0E7F               	movlw	127
 14069  00314C  162D               	andwf	(___flmul@prod+2)^0,f,c
 14070  00314E  0E00               	movlw	0
 14071  003150  162E               	andwf	(___flmul@prod+3)^0,f,c
 14072  003152  A02A               	btfss	___flmul@bexp^0,0,c
 14073  003154  EFAE  F018         	goto	u9521
 14074  003158  EFB0  F018         	goto	u9520
 14075  00315C                     u9521:
 14076  00315C  EFB1  F018         	goto	l7470
 14077  003160                     u9520:
 14078  003160  8E2D               	bsf	(___flmul@prod+2)^0,7,c
 14079  003162                     l7470:
 14080  003162  90D8               	bcf	status,0,c
 14081  003164  302A               	rrcf	___flmul@bexp^0,w,c
 14082  003166  6E2E               	movwf	(___flmul@prod+3)^0,c
 14083  003168                     l7472:
 14084  003168  5024               	movf	___flmul@sign^0,w,c
 14085  00316A  122E               	iorwf	(___flmul@prod+3)^0,f,c
 14086  00316C  C02B  F018         	movff	___flmul@prod,?___flmul
 14087  003170  C02C  F019         	movff	___flmul@prod+1,?___flmul+1
 14088  003174  C02D  F01A         	movff	___flmul@prod+2,?___flmul+2
 14089  003178  C02E  F01B         	movff	___flmul@prod+3,?___flmul+3
 14090  00317C                     l1418:
 14091  00317C  0012               	return		;funcret
 14092  00317E                     __end_of___flmul:
 14093                           	callstack 0
 14094                           
 14095 ;; *************** function ___flge *****************
 14096 ;; Defined at:
 14097 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;  ff1             4   48[COMRAM] unsigned char 
 14100 ;;  ff2             4   52[COMRAM] unsigned char 
 14101 ;; Auto vars:     Size  Location     Type
 14102 ;;		None
 14103 ;; Return value:  Size  Location     Type
 14104 ;;		None               void
 14105 ;; Registers used:
 14106 ;;		wreg, status,2, status,0
 14107 ;; Tracked objects:
 14108 ;;		On entry : 0/0
 14109 ;;		On exit  : 0/0
 14110 ;;		Unchanged: 0/0
 14111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14112 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14114 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14115 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14116 ;;Total ram usage:       12 bytes
 14117 ;; Hardware stack levels used: 1
 14118 ;; Hardware stack levels required when called: 7
 14119 ;; This function calls:
 14120 ;;		Nothing
 14121 ;; This function is called by:
 14122 ;;		_colourcards_readRGBC
 14123 ;;		_left
 14124 ;;		_efgtoa
 14125 ;;		_colourcards_testingRGBC
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           	psect	text72
 14130  005028                     __ptext72:
 14131                           	callstack 0
 14132  005028                     ___flge:
 14133                           	callstack 17
 14134  005028  0E00               	movlw	0
 14135  00502A  1431               	andwf	___flge@ff1^0,w,c
 14136  00502C  6E39               	movwf	??___flge^0,c
 14137  00502E  0E00               	movlw	0
 14138  005030  1432               	andwf	(___flge@ff1+1)^0,w,c
 14139  005032  6E3A               	movwf	(??___flge+1)^0,c
 14140  005034  0E80               	movlw	128
 14141  005036  1433               	andwf	(___flge@ff1+2)^0,w,c
 14142  005038  6E3B               	movwf	(??___flge+2)^0,c
 14143  00503A  0E7F               	movlw	127
 14144  00503C  1434               	andwf	(___flge@ff1+3)^0,w,c
 14145  00503E  6E3C               	movwf	(??___flge+3)^0,c
 14146  005040  5039               	movf	??___flge^0,w,c
 14147  005042  103A               	iorwf	(??___flge+1)^0,w,c
 14148  005044  103B               	iorwf	(??___flge+2)^0,w,c
 14149  005046  103C               	iorwf	(??___flge+3)^0,w,c
 14150  005048  A4D8               	btfss	status,2,c
 14151  00504A  EF29  F028         	goto	u9681
 14152  00504E  EF2B  F028         	goto	u9680
 14153  005052                     u9681:
 14154  005052  EF33  F028         	goto	l7584
 14155  005056                     u9680:
 14156  005056  0E00               	movlw	0
 14157  005058  6E31               	movwf	___flge@ff1^0,c
 14158  00505A  0E00               	movlw	0
 14159  00505C  6E32               	movwf	(___flge@ff1+1)^0,c
 14160  00505E  0E00               	movlw	0
 14161  005060  6E33               	movwf	(___flge@ff1+2)^0,c
 14162  005062  0E00               	movlw	0
 14163  005064  6E34               	movwf	(___flge@ff1+3)^0,c
 14164  005066                     l7584:
 14165  005066  0E00               	movlw	0
 14166  005068  1435               	andwf	___flge@ff2^0,w,c
 14167  00506A  6E39               	movwf	??___flge^0,c
 14168  00506C  0E00               	movlw	0
 14169  00506E  1436               	andwf	(___flge@ff2+1)^0,w,c
 14170  005070  6E3A               	movwf	(??___flge+1)^0,c
 14171  005072  0E80               	movlw	128
 14172  005074  1437               	andwf	(___flge@ff2+2)^0,w,c
 14173  005076  6E3B               	movwf	(??___flge+2)^0,c
 14174  005078  0E7F               	movlw	127
 14175  00507A  1438               	andwf	(___flge@ff2+3)^0,w,c
 14176  00507C  6E3C               	movwf	(??___flge+3)^0,c
 14177  00507E  5039               	movf	??___flge^0,w,c
 14178  005080  103A               	iorwf	(??___flge+1)^0,w,c
 14179  005082  103B               	iorwf	(??___flge+2)^0,w,c
 14180  005084  103C               	iorwf	(??___flge+3)^0,w,c
 14181  005086  A4D8               	btfss	status,2,c
 14182  005088  EF48  F028         	goto	u9691
 14183  00508C  EF4A  F028         	goto	u9690
 14184  005090                     u9691:
 14185  005090  EF52  F028         	goto	l7588
 14186  005094                     u9690:
 14187  005094  0E00               	movlw	0
 14188  005096  6E35               	movwf	___flge@ff2^0,c
 14189  005098  0E00               	movlw	0
 14190  00509A  6E36               	movwf	(___flge@ff2+1)^0,c
 14191  00509C  0E00               	movlw	0
 14192  00509E  6E37               	movwf	(___flge@ff2+2)^0,c
 14193  0050A0  0E00               	movlw	0
 14194  0050A2  6E38               	movwf	(___flge@ff2+3)^0,c
 14195  0050A4                     l7588:
 14196  0050A4  AE34               	btfss	(___flge@ff1+3)^0,7,c
 14197  0050A6  EF57  F028         	goto	u9701
 14198  0050AA  EF59  F028         	goto	u9700
 14199  0050AE                     u9701:
 14200  0050AE  EF62  F028         	goto	l7592
 14201  0050B2                     u9700:
 14202  0050B2  6C31               	negf	___flge@ff1^0,c
 14203  0050B4  1E32               	comf	(___flge@ff1+1)^0,f,c
 14204  0050B6  B0D8               	btfsc	status,0,c
 14205  0050B8  2A32               	incf	(___flge@ff1+1)^0,f,c
 14206  0050BA  1E33               	comf	(___flge@ff1+2)^0,f,c
 14207  0050BC  B0D8               	btfsc	status,0,c
 14208  0050BE  2A33               	incf	(___flge@ff1+2)^0,f,c
 14209  0050C0  0E80               	movlw	128
 14210  0050C2  5634               	subfwb	(___flge@ff1+3)^0,f,c
 14211  0050C4                     l7592:
 14212  0050C4  AE38               	btfss	(___flge@ff2+3)^0,7,c
 14213  0050C6  EF67  F028         	goto	u9711
 14214  0050CA  EF69  F028         	goto	u9710
 14215  0050CE                     u9711:
 14216  0050CE  EF72  F028         	goto	l1065
 14217  0050D2                     u9710:
 14218  0050D2  6C35               	negf	___flge@ff2^0,c
 14219  0050D4  1E36               	comf	(___flge@ff2+1)^0,f,c
 14220  0050D6  B0D8               	btfsc	status,0,c
 14221  0050D8  2A36               	incf	(___flge@ff2+1)^0,f,c
 14222  0050DA  1E37               	comf	(___flge@ff2+2)^0,f,c
 14223  0050DC  B0D8               	btfsc	status,0,c
 14224  0050DE  2A37               	incf	(___flge@ff2+2)^0,f,c
 14225  0050E0  0E80               	movlw	128
 14226  0050E2  5638               	subfwb	(___flge@ff2+3)^0,f,c
 14227  0050E4                     l1065:
 14228  0050E4  0E00               	movlw	0
 14229  0050E6  1A31               	xorwf	___flge@ff1^0,f,c
 14230  0050E8  0E00               	movlw	0
 14231  0050EA  1A32               	xorwf	(___flge@ff1+1)^0,f,c
 14232  0050EC  0E00               	movlw	0
 14233  0050EE  1A33               	xorwf	(___flge@ff1+2)^0,f,c
 14234  0050F0  0E80               	movlw	128
 14235  0050F2  1A34               	xorwf	(___flge@ff1+3)^0,f,c
 14236  0050F4  0E00               	movlw	0
 14237  0050F6  1A35               	xorwf	___flge@ff2^0,f,c
 14238  0050F8  0E00               	movlw	0
 14239  0050FA  1A36               	xorwf	(___flge@ff2+1)^0,f,c
 14240  0050FC  0E00               	movlw	0
 14241  0050FE  1A37               	xorwf	(___flge@ff2+2)^0,f,c
 14242  005100  0E80               	movlw	128
 14243  005102  1A38               	xorwf	(___flge@ff2+3)^0,f,c
 14244  005104  5035               	movf	___flge@ff2^0,w,c
 14245  005106  5C31               	subwf	___flge@ff1^0,w,c
 14246  005108  5036               	movf	(___flge@ff2+1)^0,w,c
 14247  00510A  5832               	subwfb	(___flge@ff1+1)^0,w,c
 14248  00510C  5037               	movf	(___flge@ff2+2)^0,w,c
 14249  00510E  5833               	subwfb	(___flge@ff1+2)^0,w,c
 14250  005110  5038               	movf	(___flge@ff2+3)^0,w,c
 14251  005112  5834               	subwfb	(___flge@ff1+3)^0,w,c
 14252  005114  B0D8               	btfsc	status,0,c
 14253  005116  EF8F  F028         	goto	u9721
 14254  00511A  EF91  F028         	goto	u9720
 14255  00511E                     u9721:
 14256  00511E  EF94  F028         	goto	l7598
 14257  005122                     u9720:
 14258  005122  90D8               	bcf	status,0,c
 14259  005124  EF95  F028         	goto	l1070
 14260  005128                     l7598:
 14261  005128  80D8               	bsf	status,0,c
 14262  00512A                     l1070:
 14263  00512A  0012               	return		;funcret
 14264  00512C                     __end_of___flge:
 14265                           	callstack 0
 14266                           
 14267 ;; *************** function ___fladd *****************
 14268 ;; Defined at:
 14269 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;  b               4   48[COMRAM] unsigned char 
 14272 ;;  a               4   52[COMRAM] unsigned char 
 14273 ;; Auto vars:     Size  Location     Type
 14274 ;;  grs             1   63[COMRAM] unsigned char 
 14275 ;;  bexp            1   62[COMRAM] unsigned char 
 14276 ;;  aexp            1   61[COMRAM] unsigned char 
 14277 ;;  signs           1   60[COMRAM] unsigned char 
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  4   48[COMRAM] unsigned char 
 14280 ;; Registers used:
 14281 ;;		wreg, status,2, status,0
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14288 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14290 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14291 ;;Total ram usage:       16 bytes
 14292 ;; Hardware stack levels used: 1
 14293 ;; Hardware stack levels required when called: 7
 14294 ;; This function calls:
 14295 ;;		Nothing
 14296 ;; This function is called by:
 14297 ;;		_left
 14298 ;;		___flsub
 14299 ;;		_efgtoa
 14300 ;; This function uses a non-reentrant model
 14301 ;;
 14302                           
 14303                           	psect	text73
 14304  002894                     __ptext73:
 14305                           	callstack 0
 14306  002894                     ___fladd:
 14307                           	callstack 16
 14308  002894  5034               	movf	(___fladd@b+3)^0,w,c
 14309  002896  0B80               	andlw	128
 14310  002898  6E3D               	movwf	___fladd@signs^0,c
 14311  00289A  5034               	movf	(___fladd@b+3)^0,w,c
 14312  00289C  2434               	addwf	(___fladd@b+3)^0,w,c
 14313  00289E  6E3F               	movwf	___fladd@bexp^0,c
 14314  0028A0  AE33               	btfss	(___fladd@b+2)^0,7,c
 14315  0028A2  EF55  F014         	goto	u8541
 14316  0028A6  EF57  F014         	goto	u8540
 14317  0028AA                     u8541:
 14318  0028AA  EF58  F014         	goto	l6906
 14319  0028AE                     u8540:
 14320  0028AE  803F               	bsf	___fladd@bexp^0,0,c
 14321  0028B0                     l6906:
 14322  0028B0  503F               	movf	___fladd@bexp^0,w,c
 14323  0028B2  B4D8               	btfsc	status,2,c
 14324  0028B4  EF5E  F014         	goto	u8551
 14325  0028B8  EF60  F014         	goto	u8550
 14326  0028BC                     u8551:
 14327  0028BC  EF75  F014         	goto	l6916
 14328  0028C0                     u8550:
 14329  0028C0  283F               	incf	___fladd@bexp^0,w,c
 14330  0028C2  A4D8               	btfss	status,2,c
 14331  0028C4  EF66  F014         	goto	u8561
 14332  0028C8  EF68  F014         	goto	u8560
 14333  0028CC                     u8561:
 14334  0028CC  EF70  F014         	goto	l6912
 14335  0028D0                     u8560:
 14336  0028D0  0E00               	movlw	0
 14337  0028D2  6E31               	movwf	___fladd@b^0,c
 14338  0028D4  0E00               	movlw	0
 14339  0028D6  6E32               	movwf	(___fladd@b+1)^0,c
 14340  0028D8  0E00               	movlw	0
 14341  0028DA  6E33               	movwf	(___fladd@b+2)^0,c
 14342  0028DC  0E00               	movlw	0
 14343  0028DE  6E34               	movwf	(___fladd@b+3)^0,c
 14344  0028E0                     l6912:
 14345  0028E0  8E33               	bsf	(___fladd@b+2)^0,7,c
 14346  0028E2  0E00               	movlw	0
 14347  0028E4  6E34               	movwf	(___fladd@b+3)^0,c
 14348  0028E6  EF7D  F014         	goto	l6918
 14349  0028EA                     l6916:
 14350  0028EA  0E00               	movlw	0
 14351  0028EC  6E31               	movwf	___fladd@b^0,c
 14352  0028EE  0E00               	movlw	0
 14353  0028F0  6E32               	movwf	(___fladd@b+1)^0,c
 14354  0028F2  0E00               	movlw	0
 14355  0028F4  6E33               	movwf	(___fladd@b+2)^0,c
 14356  0028F6  0E00               	movlw	0
 14357  0028F8  6E34               	movwf	(___fladd@b+3)^0,c
 14358  0028FA                     l6918:
 14359  0028FA  5038               	movf	(___fladd@a+3)^0,w,c
 14360  0028FC  0B80               	andlw	128
 14361  0028FE  6E3E               	movwf	___fladd@aexp^0,c
 14362  002900  503D               	movf	___fladd@signs^0,w,c
 14363  002902  183E               	xorwf	___fladd@aexp^0,w,c
 14364  002904  B4D8               	btfsc	status,2,c
 14365  002906  EF87  F014         	goto	u8571
 14366  00290A  EF89  F014         	goto	u8570
 14367  00290E                     u8571:
 14368  00290E  EF8A  F014         	goto	l6924
 14369  002912                     u8570:
 14370  002912  8C3D               	bsf	___fladd@signs^0,6,c
 14371  002914                     l6924:
 14372  002914  5038               	movf	(___fladd@a+3)^0,w,c
 14373  002916  2438               	addwf	(___fladd@a+3)^0,w,c
 14374  002918  6E3E               	movwf	___fladd@aexp^0,c
 14375  00291A  AE37               	btfss	(___fladd@a+2)^0,7,c
 14376  00291C  EF92  F014         	goto	u8581
 14377  002920  EF94  F014         	goto	u8580
 14378  002924                     u8581:
 14379  002924  EF95  F014         	goto	l6930
 14380  002928                     u8580:
 14381  002928  803E               	bsf	___fladd@aexp^0,0,c
 14382  00292A                     l6930:
 14383  00292A  503E               	movf	___fladd@aexp^0,w,c
 14384  00292C  B4D8               	btfsc	status,2,c
 14385  00292E  EF9B  F014         	goto	u8591
 14386  002932  EF9D  F014         	goto	u8590
 14387  002936                     u8591:
 14388  002936  EFB2  F014         	goto	l6940
 14389  00293A                     u8590:
 14390  00293A  283E               	incf	___fladd@aexp^0,w,c
 14391  00293C  A4D8               	btfss	status,2,c
 14392  00293E  EFA3  F014         	goto	u8601
 14393  002942  EFA5  F014         	goto	u8600
 14394  002946                     u8601:
 14395  002946  EFAD  F014         	goto	l6936
 14396  00294A                     u8600:
 14397  00294A  0E00               	movlw	0
 14398  00294C  6E35               	movwf	___fladd@a^0,c
 14399  00294E  0E00               	movlw	0
 14400  002950  6E36               	movwf	(___fladd@a+1)^0,c
 14401  002952  0E00               	movlw	0
 14402  002954  6E37               	movwf	(___fladd@a+2)^0,c
 14403  002956  0E00               	movlw	0
 14404  002958  6E38               	movwf	(___fladd@a+3)^0,c
 14405  00295A                     l6936:
 14406  00295A  8E37               	bsf	(___fladd@a+2)^0,7,c
 14407  00295C  0E00               	movlw	0
 14408  00295E  6E38               	movwf	(___fladd@a+3)^0,c
 14409  002960  EFBA  F014         	goto	l6942
 14410  002964                     l6940:
 14411  002964  0E00               	movlw	0
 14412  002966  6E35               	movwf	___fladd@a^0,c
 14413  002968  0E00               	movlw	0
 14414  00296A  6E36               	movwf	(___fladd@a+1)^0,c
 14415  00296C  0E00               	movlw	0
 14416  00296E  6E37               	movwf	(___fladd@a+2)^0,c
 14417  002970  0E00               	movlw	0
 14418  002972  6E38               	movwf	(___fladd@a+3)^0,c
 14419  002974                     l6942:
 14420  002974  503F               	movf	___fladd@bexp^0,w,c
 14421  002976  5C3E               	subwf	___fladd@aexp^0,w,c
 14422  002978  B0D8               	btfsc	status,0,c
 14423  00297A  EFC1  F014         	goto	u8611
 14424  00297E  EFC3  F014         	goto	u8610
 14425  002982                     u8611:
 14426  002982  EFEA  F014         	goto	l6978
 14427  002986                     u8610:
 14428  002986  AC3D               	btfss	___fladd@signs^0,6,c
 14429  002988  EFC8  F014         	goto	u8621
 14430  00298C  EFCA  F014         	goto	u8620
 14431  002990                     u8621:
 14432  002990  EFCC  F014         	goto	l6948
 14433  002994                     u8620:
 14434  002994  0E80               	movlw	128
 14435  002996  1A3D               	xorwf	___fladd@signs^0,f,c
 14436  002998                     l6948:
 14437  002998  C03F  F040         	movff	___fladd@bexp,___fladd@grs
 14438  00299C  C03E  F03F         	movff	___fladd@aexp,___fladd@bexp
 14439  0029A0  C040  F03E         	movff	___fladd@grs,___fladd@aexp
 14440  0029A4  C031  F040         	movff	___fladd@b,___fladd@grs
 14441  0029A8  C035  F031         	movff	___fladd@a,___fladd@b
 14442  0029AC  C040  F035         	movff	___fladd@grs,___fladd@a
 14443  0029B0  C032  F040         	movff	___fladd@b+1,___fladd@grs
 14444  0029B4  C036  F032         	movff	___fladd@a+1,___fladd@b+1
 14445  0029B8  C040  F036         	movff	___fladd@grs,___fladd@a+1
 14446  0029BC  C033  F040         	movff	___fladd@b+2,___fladd@grs
 14447  0029C0  C037  F033         	movff	___fladd@a+2,___fladd@b+2
 14448  0029C4  C040  F037         	movff	___fladd@grs,___fladd@a+2
 14449  0029C8  C034  F040         	movff	___fladd@b+3,___fladd@grs
 14450  0029CC  C038  F034         	movff	___fladd@a+3,___fladd@b+3
 14451  0029D0  C040  F038         	movff	___fladd@grs,___fladd@a+3
 14452  0029D4                     l6978:
 14453  0029D4  0E00               	movlw	0
 14454  0029D6  6E40               	movwf	___fladd@grs^0,c
 14455  0029D8  503F               	movf	___fladd@bexp^0,w,c
 14456  0029DA  C03E  F039         	movff	___fladd@aexp,??___fladd
 14457  0029DE  6A3A               	clrf	(??___fladd+1)^0,c
 14458  0029E0  5E39               	subwf	??___fladd^0,f,c
 14459  0029E2  0E00               	movlw	0
 14460  0029E4  5A3A               	subwfb	(??___fladd+1)^0,f,c
 14461  0029E6  BE3A               	btfsc	(??___fladd+1)^0,7,c
 14462  0029E8  EFFF  F014         	goto	u8631
 14463  0029EC  503A               	movf	(??___fladd+1)^0,w,c
 14464  0029EE  E109               	bnz	u8630
 14465  0029F0  0E1A               	movlw	26
 14466  0029F2  5C39               	subwf	??___fladd^0,w,c
 14467  0029F4  A0D8               	btfss	status,0,c
 14468  0029F6  EFFF  F014         	goto	u8631
 14469  0029FA  EF01  F015         	goto	u8630
 14470  0029FE                     u8631:
 14471  0029FE  EF38  F015         	goto	l1329
 14472  002A02                     u8630:
 14473  002A02  5031               	movf	___fladd@b^0,w,c
 14474  002A04  1032               	iorwf	(___fladd@b+1)^0,w,c
 14475  002A06  1033               	iorwf	(___fladd@b+2)^0,w,c
 14476  002A08  1034               	iorwf	(___fladd@b+3)^0,w,c
 14477  002A0A  A4D8               	btfss	status,2,c
 14478  002A0C  EF0A  F015         	goto	u8641
 14479  002A10  EF0D  F015         	goto	u8640
 14480  002A14                     u8641:
 14481  002A14  0E01               	movlw	1
 14482  002A16  EF0E  F015         	goto	u8650
 14483  002A1A                     u8640:
 14484  002A1A  0E00               	movlw	0
 14485  002A1C                     u8650:
 14486  002A1C  6E40               	movwf	___fladd@grs^0,c
 14487  002A1E  0E00               	movlw	0
 14488  002A20  6E31               	movwf	___fladd@b^0,c
 14489  002A22  0E00               	movlw	0
 14490  002A24  6E32               	movwf	(___fladd@b+1)^0,c
 14491  002A26  0E00               	movlw	0
 14492  002A28  6E33               	movwf	(___fladd@b+2)^0,c
 14493  002A2A  0E00               	movlw	0
 14494  002A2C  6E34               	movwf	(___fladd@b+3)^0,c
 14495  002A2E  C03E  F03F         	movff	___fladd@aexp,___fladd@bexp
 14496  002A32  EF41  F015         	goto	l1328
 14497  002A36                     l1330:
 14498  002A36  A040               	btfss	___fladd@grs^0,0,c
 14499  002A38  EF20  F015         	goto	u8661
 14500  002A3C  EF22  F015         	goto	u8660
 14501  002A40                     u8661:
 14502  002A40  EF28  F015         	goto	l6990
 14503  002A44                     u8660:
 14504  002A44  90D8               	bcf	status,0,c
 14505  002A46  3040               	rrcf	___fladd@grs^0,w,c
 14506  002A48  0901               	iorlw	1
 14507  002A4A  6E40               	movwf	___fladd@grs^0,c
 14508  002A4C  EF2A  F015         	goto	l6992
 14509  002A50                     l6990:
 14510  002A50  90D8               	bcf	status,0,c
 14511  002A52  3240               	rrcf	___fladd@grs^0,f,c
 14512  002A54                     l6992:
 14513  002A54  A031               	btfss	___fladd@b^0,0,c
 14514  002A56  EF2F  F015         	goto	u8671
 14515  002A5A  EF31  F015         	goto	u8670
 14516  002A5E                     u8671:
 14517  002A5E  EF32  F015         	goto	l6996
 14518  002A62                     u8670:
 14519  002A62  8E40               	bsf	___fladd@grs^0,7,c
 14520  002A64                     l6996:
 14521  002A64  3434               	rlcf	(___fladd@b+3)^0,w,c
 14522  002A66  3234               	rrcf	(___fladd@b+3)^0,f,c
 14523  002A68  3233               	rrcf	(___fladd@b+2)^0,f,c
 14524  002A6A  3232               	rrcf	(___fladd@b+1)^0,f,c
 14525  002A6C  3231               	rrcf	___fladd@b^0,f,c
 14526  002A6E  2A3F               	incf	___fladd@bexp^0,f,c
 14527  002A70                     l1329:
 14528  002A70  503E               	movf	___fladd@aexp^0,w,c
 14529  002A72  5C3F               	subwf	___fladd@bexp^0,w,c
 14530  002A74  A0D8               	btfss	status,0,c
 14531  002A76  EF3F  F015         	goto	u8681
 14532  002A7A  EF41  F015         	goto	u8680
 14533  002A7E                     u8681:
 14534  002A7E  EF1B  F015         	goto	l1330
 14535  002A82                     u8680:
 14536  002A82                     l1328:
 14537  002A82  BC3D               	btfsc	___fladd@signs^0,6,c
 14538  002A84  EF46  F015         	goto	u8691
 14539  002A88  EF48  F015         	goto	u8690
 14540  002A8C                     u8691:
 14541  002A8C  EF88  F015         	goto	l7024
 14542  002A90                     u8690:
 14543  002A90  503F               	movf	___fladd@bexp^0,w,c
 14544  002A92  A4D8               	btfss	status,2,c
 14545  002A94  EF4E  F015         	goto	u8701
 14546  002A98  EF50  F015         	goto	u8700
 14547  002A9C                     u8701:
 14548  002A9C  EF5A  F015         	goto	l7006
 14549  002AA0                     u8700:
 14550  002AA0  0E00               	movlw	0
 14551  002AA2  6E31               	movwf	?___fladd^0,c
 14552  002AA4  0E00               	movlw	0
 14553  002AA6  6E32               	movwf	(?___fladd+1)^0,c
 14554  002AA8  0E00               	movlw	0
 14555  002AAA  6E33               	movwf	(?___fladd+2)^0,c
 14556  002AAC  0E00               	movlw	0
 14557  002AAE  6E34               	movwf	(?___fladd+3)^0,c
 14558  002AB0  EFA9  F016         	goto	l1337
 14559  002AB4                     l7006:
 14560  002AB4  5035               	movf	___fladd@a^0,w,c
 14561  002AB6  2631               	addwf	___fladd@b^0,f,c
 14562  002AB8  5036               	movf	(___fladd@a+1)^0,w,c
 14563  002ABA  2232               	addwfc	(___fladd@b+1)^0,f,c
 14564  002ABC  5037               	movf	(___fladd@a+2)^0,w,c
 14565  002ABE  2233               	addwfc	(___fladd@b+2)^0,f,c
 14566  002AC0  5038               	movf	(___fladd@a+3)^0,w,c
 14567  002AC2  2234               	addwfc	(___fladd@b+3)^0,f,c
 14568  002AC4  A034               	btfss	(___fladd@b+3)^0,0,c
 14569  002AC6  EF67  F015         	goto	u8711
 14570  002ACA  EF69  F015         	goto	u8710
 14571  002ACE                     u8711:
 14572  002ACE  EF15  F016         	goto	l7060
 14573  002AD2                     u8710:
 14574  002AD2  A040               	btfss	___fladd@grs^0,0,c
 14575  002AD4  EF6E  F015         	goto	u8721
 14576  002AD8  EF70  F015         	goto	u8720
 14577  002ADC                     u8721:
 14578  002ADC  EF76  F015         	goto	l7014
 14579  002AE0                     u8720:
 14580  002AE0  90D8               	bcf	status,0,c
 14581  002AE2  3040               	rrcf	___fladd@grs^0,w,c
 14582  002AE4  0901               	iorlw	1
 14583  002AE6  6E40               	movwf	___fladd@grs^0,c
 14584  002AE8  EF78  F015         	goto	l7016
 14585  002AEC                     l7014:
 14586  002AEC  90D8               	bcf	status,0,c
 14587  002AEE  3240               	rrcf	___fladd@grs^0,f,c
 14588  002AF0                     l7016:
 14589  002AF0  A031               	btfss	___fladd@b^0,0,c
 14590  002AF2  EF7D  F015         	goto	u8731
 14591  002AF6  EF7F  F015         	goto	u8730
 14592  002AFA                     u8731:
 14593  002AFA  EF80  F015         	goto	l7020
 14594  002AFE                     u8730:
 14595  002AFE  8E40               	bsf	___fladd@grs^0,7,c
 14596  002B00                     l7020:
 14597  002B00  3434               	rlcf	(___fladd@b+3)^0,w,c
 14598  002B02  3234               	rrcf	(___fladd@b+3)^0,f,c
 14599  002B04  3233               	rrcf	(___fladd@b+2)^0,f,c
 14600  002B06  3232               	rrcf	(___fladd@b+1)^0,f,c
 14601  002B08  3231               	rrcf	___fladd@b^0,f,c
 14602  002B0A  2A3F               	incf	___fladd@bexp^0,f,c
 14603  002B0C  EF15  F016         	goto	l7060
 14604  002B10                     l7024:
 14605  002B10  5035               	movf	___fladd@a^0,w,c
 14606  002B12  5C31               	subwf	___fladd@b^0,w,c
 14607  002B14  5036               	movf	(___fladd@a+1)^0,w,c
 14608  002B16  5832               	subwfb	(___fladd@b+1)^0,w,c
 14609  002B18  5037               	movf	(___fladd@a+2)^0,w,c
 14610  002B1A  5833               	subwfb	(___fladd@b+2)^0,w,c
 14611  002B1C  5034               	movf	(___fladd@b+3)^0,w,c
 14612  002B1E  0A80               	xorlw	128
 14613  002B20  6E39               	movwf	??___fladd^0,c
 14614  002B22  5038               	movf	(___fladd@a+3)^0,w,c
 14615  002B24  0A80               	xorlw	128
 14616  002B26  5839               	subwfb	??___fladd^0,w,c
 14617  002B28  B0D8               	btfsc	status,0,c
 14618  002B2A  EF99  F015         	goto	u8741
 14619  002B2E  EF9B  F015         	goto	u8740
 14620  002B32                     u8741:
 14621  002B32  EFC6  F015         	goto	l7034
 14622  002B36                     u8740:
 14623  002B36  5031               	movf	___fladd@b^0,w,c
 14624  002B38  5C35               	subwf	___fladd@a^0,w,c
 14625  002B3A  6E39               	movwf	??___fladd^0,c
 14626  002B3C  5032               	movf	(___fladd@b+1)^0,w,c
 14627  002B3E  5836               	subwfb	(___fladd@a+1)^0,w,c
 14628  002B40  6E3A               	movwf	(??___fladd+1)^0,c
 14629  002B42  5033               	movf	(___fladd@b+2)^0,w,c
 14630  002B44  5837               	subwfb	(___fladd@a+2)^0,w,c
 14631  002B46  6E3B               	movwf	(??___fladd+2)^0,c
 14632  002B48  5034               	movf	(___fladd@b+3)^0,w,c
 14633  002B4A  5838               	subwfb	(___fladd@a+3)^0,w,c
 14634  002B4C  6E3C               	movwf	(??___fladd+3)^0,c
 14635  002B4E  0EFF               	movlw	255
 14636  002B50  2439               	addwf	??___fladd^0,w,c
 14637  002B52  6E31               	movwf	___fladd@b^0,c
 14638  002B54  0EFF               	movlw	255
 14639  002B56  203A               	addwfc	(??___fladd+1)^0,w,c
 14640  002B58  6E32               	movwf	(___fladd@b+1)^0,c
 14641  002B5A  0EFF               	movlw	255
 14642  002B5C  203B               	addwfc	(??___fladd+2)^0,w,c
 14643  002B5E  6E33               	movwf	(___fladd@b+2)^0,c
 14644  002B60  0EFF               	movlw	255
 14645  002B62  203C               	addwfc	(??___fladd+3)^0,w,c
 14646  002B64  6E34               	movwf	(___fladd@b+3)^0,c
 14647  002B66  0E80               	movlw	128
 14648  002B68  1A3D               	xorwf	___fladd@signs^0,f,c
 14649  002B6A  6C40               	negf	___fladd@grs^0,c
 14650  002B6C  5040               	movf	___fladd@grs^0,w,c
 14651  002B6E  A4D8               	btfss	status,2,c
 14652  002B70  EFBC  F015         	goto	u8751
 14653  002B74  EFBE  F015         	goto	u8750
 14654  002B78                     u8751:
 14655  002B78  EFCE  F015         	goto	l1345
 14656  002B7C                     u8750:
 14657  002B7C  0E01               	movlw	1
 14658  002B7E  2631               	addwf	___fladd@b^0,f,c
 14659  002B80  0E00               	movlw	0
 14660  002B82  2232               	addwfc	(___fladd@b+1)^0,f,c
 14661  002B84  2233               	addwfc	(___fladd@b+2)^0,f,c
 14662  002B86  2234               	addwfc	(___fladd@b+3)^0,f,c
 14663  002B88  EFCE  F015         	goto	l1345
 14664  002B8C                     l7034:
 14665  002B8C  5035               	movf	___fladd@a^0,w,c
 14666  002B8E  5E31               	subwf	___fladd@b^0,f,c
 14667  002B90  5036               	movf	(___fladd@a+1)^0,w,c
 14668  002B92  5A32               	subwfb	(___fladd@b+1)^0,f,c
 14669  002B94  5037               	movf	(___fladd@a+2)^0,w,c
 14670  002B96  5A33               	subwfb	(___fladd@b+2)^0,f,c
 14671  002B98  5038               	movf	(___fladd@a+3)^0,w,c
 14672  002B9A  5A34               	subwfb	(___fladd@b+3)^0,f,c
 14673  002B9C                     l1345:
 14674  002B9C  5031               	movf	___fladd@b^0,w,c
 14675  002B9E  1032               	iorwf	(___fladd@b+1)^0,w,c
 14676  002BA0  1033               	iorwf	(___fladd@b+2)^0,w,c
 14677  002BA2  1034               	iorwf	(___fladd@b+3)^0,w,c
 14678  002BA4  A4D8               	btfss	status,2,c
 14679  002BA6  EFD7  F015         	goto	u8761
 14680  002BAA  EFD9  F015         	goto	u8760
 14681  002BAE                     u8761:
 14682  002BAE  EF0E  F016         	goto	l7058
 14683  002BB2                     u8760:
 14684  002BB2  5040               	movf	___fladd@grs^0,w,c
 14685  002BB4  A4D8               	btfss	status,2,c
 14686  002BB6  EFDF  F015         	goto	u8771
 14687  002BBA  EFE1  F015         	goto	u8770
 14688  002BBE                     u8771:
 14689  002BBE  EF0E  F016         	goto	l7058
 14690  002BC2                     u8770:
 14691  002BC2  0E00               	movlw	0
 14692  002BC4  6E31               	movwf	?___fladd^0,c
 14693  002BC6  0E00               	movlw	0
 14694  002BC8  6E32               	movwf	(?___fladd+1)^0,c
 14695  002BCA  0E00               	movlw	0
 14696  002BCC  6E33               	movwf	(?___fladd+2)^0,c
 14697  002BCE  0E00               	movlw	0
 14698  002BD0  6E34               	movwf	(?___fladd+3)^0,c
 14699  002BD2  EFA9  F016         	goto	l1337
 14700  002BD6                     l7042:
 14701  002BD6  90D8               	bcf	status,0,c
 14702  002BD8  3631               	rlcf	___fladd@b^0,f,c
 14703  002BDA  3632               	rlcf	(___fladd@b+1)^0,f,c
 14704  002BDC  3633               	rlcf	(___fladd@b+2)^0,f,c
 14705  002BDE  3634               	rlcf	(___fladd@b+3)^0,f,c
 14706  002BE0  AE40               	btfss	___fladd@grs^0,7,c
 14707  002BE2  EFF5  F015         	goto	u8781
 14708  002BE6  EFF7  F015         	goto	u8780
 14709  002BEA                     u8781:
 14710  002BEA  EFF8  F015         	goto	l7048
 14711  002BEE                     u8780:
 14712  002BEE  8031               	bsf	___fladd@b^0,0,c
 14713  002BF0                     l7048:
 14714  002BF0  A040               	btfss	___fladd@grs^0,0,c
 14715  002BF2  EFFD  F015         	goto	u8791
 14716  002BF6  EFFF  F015         	goto	u8790
 14717  002BFA                     u8791:
 14718  002BFA  EF03  F016         	goto	l7052
 14719  002BFE                     u8790:
 14720  002BFE  80D8               	bsf	status,0,c
 14721  002C00  3640               	rlcf	___fladd@grs^0,f,c
 14722  002C02  EF05  F016         	goto	l7054
 14723  002C06                     l7052:
 14724  002C06  90D8               	bcf	status,0,c
 14725  002C08  3640               	rlcf	___fladd@grs^0,f,c
 14726  002C0A                     l7054:
 14727  002C0A  503F               	movf	___fladd@bexp^0,w,c
 14728  002C0C  B4D8               	btfsc	status,2,c
 14729  002C0E  EF0B  F016         	goto	u8801
 14730  002C12  EF0D  F016         	goto	u8800
 14731  002C16                     u8801:
 14732  002C16  EF0E  F016         	goto	l7058
 14733  002C1A                     u8800:
 14734  002C1A  063F               	decf	___fladd@bexp^0,f,c
 14735  002C1C                     l7058:
 14736  002C1C  AE33               	btfss	(___fladd@b+2)^0,7,c
 14737  002C1E  EF13  F016         	goto	u8811
 14738  002C22  EF15  F016         	goto	u8810
 14739  002C26                     u8811:
 14740  002C26  EFEB  F015         	goto	l7042
 14741  002C2A                     u8810:
 14742  002C2A                     l7060:
 14743  002C2A  0E00               	movlw	0
 14744  002C2C  6E3E               	movwf	___fladd@aexp^0,c
 14745  002C2E  AE40               	btfss	___fladd@grs^0,7,c
 14746  002C30  EF1C  F016         	goto	u8821
 14747  002C34  EF1E  F016         	goto	u8820
 14748  002C38                     u8821:
 14749  002C38  EF36  F016         	goto	l1354
 14750  002C3C                     u8820:
 14751  002C3C  C040  F039         	movff	___fladd@grs,??___fladd
 14752  002C40  0E7F               	movlw	127
 14753  002C42  1639               	andwf	??___fladd^0,f,c
 14754  002C44  B4D8               	btfsc	status,2,c
 14755  002C46  EF27  F016         	goto	u8831
 14756  002C4A  EF29  F016         	goto	u8830
 14757  002C4E                     u8831:
 14758  002C4E  EF2D  F016         	goto	l1355
 14759  002C52                     u8830:
 14760  002C52                     l7066:
 14761  002C52  0E01               	movlw	1
 14762  002C54  6E3E               	movwf	___fladd@aexp^0,c
 14763  002C56  EF36  F016         	goto	l1354
 14764  002C5A                     l1355:
 14765  002C5A  A031               	btfss	___fladd@b^0,0,c
 14766  002C5C  EF32  F016         	goto	u8841
 14767  002C60  EF34  F016         	goto	u8840
 14768  002C64                     u8841:
 14769  002C64  EF36  F016         	goto	l1354
 14770  002C68                     u8840:
 14771  002C68  EF29  F016         	goto	l7066
 14772  002C6C                     l1354:
 14773  002C6C  503E               	movf	___fladd@aexp^0,w,c
 14774  002C6E  B4D8               	btfsc	status,2,c
 14775  002C70  EF3C  F016         	goto	u8851
 14776  002C74  EF3E  F016         	goto	u8850
 14777  002C78                     u8851:
 14778  002C78  EF69  F016         	goto	l7078
 14779  002C7C                     u8850:
 14780  002C7C  0E01               	movlw	1
 14781  002C7E  2631               	addwf	___fladd@b^0,f,c
 14782  002C80  0E00               	movlw	0
 14783  002C82  2232               	addwfc	(___fladd@b+1)^0,f,c
 14784  002C84  2233               	addwfc	(___fladd@b+2)^0,f,c
 14785  002C86  2234               	addwfc	(___fladd@b+3)^0,f,c
 14786  002C88  A034               	btfss	(___fladd@b+3)^0,0,c
 14787  002C8A  EF49  F016         	goto	u8861
 14788  002C8E  EF4B  F016         	goto	u8860
 14789  002C92                     u8861:
 14790  002C92  EF69  F016         	goto	l7078
 14791  002C96                     u8860:
 14792  002C96  C031  F039         	movff	___fladd@b,??___fladd
 14793  002C9A  C032  F03A         	movff	___fladd@b+1,??___fladd+1
 14794  002C9E  C033  F03B         	movff	___fladd@b+2,??___fladd+2
 14795  002CA2  C034  F03C         	movff	___fladd@b+3,??___fladd+3
 14796  002CA6  343C               	rlcf	(??___fladd+3)^0,w,c
 14797  002CA8  323C               	rrcf	(??___fladd+3)^0,f,c
 14798  002CAA  323B               	rrcf	(??___fladd+2)^0,f,c
 14799  002CAC  323A               	rrcf	(??___fladd+1)^0,f,c
 14800  002CAE  3239               	rrcf	??___fladd^0,f,c
 14801  002CB0  C039  F031         	movff	??___fladd,___fladd@b
 14802  002CB4  C03A  F032         	movff	??___fladd+1,___fladd@b+1
 14803  002CB8  C03B  F033         	movff	??___fladd+2,___fladd@b+2
 14804  002CBC  C03C  F034         	movff	??___fladd+3,___fladd@b+3
 14805  002CC0  283F               	incf	___fladd@bexp^0,w,c
 14806  002CC2  B4D8               	btfsc	status,2,c
 14807  002CC4  EF66  F016         	goto	u8871
 14808  002CC8  EF68  F016         	goto	u8870
 14809  002CCC                     u8871:
 14810  002CCC  EF69  F016         	goto	l7078
 14811  002CD0                     u8870:
 14812  002CD0  2A3F               	incf	___fladd@bexp^0,f,c
 14813  002CD2                     l7078:
 14814  002CD2  283F               	incf	___fladd@bexp^0,w,c
 14815  002CD4  B4D8               	btfsc	status,2,c
 14816  002CD6  EF6F  F016         	goto	u8881
 14817  002CDA  EF71  F016         	goto	u8880
 14818  002CDE                     u8881:
 14819  002CDE  EF79  F016         	goto	l7082
 14820  002CE2                     u8880:
 14821  002CE2  503F               	movf	___fladd@bexp^0,w,c
 14822  002CE4  A4D8               	btfss	status,2,c
 14823  002CE6  EF77  F016         	goto	u8891
 14824  002CEA  EF79  F016         	goto	u8890
 14825  002CEE                     u8891:
 14826  002CEE  EF8B  F016         	goto	l7086
 14827  002CF2                     u8890:
 14828  002CF2                     l7082:
 14829  002CF2  0E00               	movlw	0
 14830  002CF4  6E31               	movwf	___fladd@b^0,c
 14831  002CF6  0E00               	movlw	0
 14832  002CF8  6E32               	movwf	(___fladd@b+1)^0,c
 14833  002CFA  0E00               	movlw	0
 14834  002CFC  6E33               	movwf	(___fladd@b+2)^0,c
 14835  002CFE  0E00               	movlw	0
 14836  002D00  6E34               	movwf	(___fladd@b+3)^0,c
 14837  002D02  503F               	movf	___fladd@bexp^0,w,c
 14838  002D04  A4D8               	btfss	status,2,c
 14839  002D06  EF87  F016         	goto	u8901
 14840  002D0A  EF89  F016         	goto	u8900
 14841  002D0E                     u8901:
 14842  002D0E  EF8B  F016         	goto	l7086
 14843  002D12                     u8900:
 14844  002D12  0E00               	movlw	0
 14845  002D14  6E3D               	movwf	___fladd@signs^0,c
 14846  002D16                     l7086:
 14847  002D16  A03F               	btfss	___fladd@bexp^0,0,c
 14848  002D18  EF90  F016         	goto	u8911
 14849  002D1C  EF92  F016         	goto	u8910
 14850  002D20                     u8911:
 14851  002D20  EF95  F016         	goto	l7090
 14852  002D24                     u8910:
 14853  002D24  8E33               	bsf	(___fladd@b+2)^0,7,c
 14854  002D26  EF96  F016         	goto	l7092
 14855  002D2A                     l7090:
 14856  002D2A  9E33               	bcf	(___fladd@b+2)^0,7,c
 14857  002D2C                     l7092:
 14858  002D2C  90D8               	bcf	status,0,c
 14859  002D2E  303F               	rrcf	___fladd@bexp^0,w,c
 14860  002D30  6E34               	movwf	(___fladd@b+3)^0,c
 14861  002D32  AE3D               	btfss	___fladd@signs^0,7,c
 14862  002D34  EF9E  F016         	goto	u8921
 14863  002D38  EFA0  F016         	goto	u8920
 14864  002D3C                     u8921:
 14865  002D3C  EFA1  F016         	goto	l7098
 14866  002D40                     u8920:
 14867  002D40  8E34               	bsf	(___fladd@b+3)^0,7,c
 14868  002D42                     l7098:
 14869  002D42  C031  F031         	movff	___fladd@b,?___fladd
 14870  002D46  C032  F032         	movff	___fladd@b+1,?___fladd+1
 14871  002D4A  C033  F033         	movff	___fladd@b+2,?___fladd+2
 14872  002D4E  C034  F034         	movff	___fladd@b+3,?___fladd+3
 14873  002D52                     l1337:
 14874  002D52  0012               	return		;funcret
 14875  002D54                     __end_of___fladd:
 14876                           	callstack 0
 14877                           
 14878 ;; *************** function _stop *****************
 14879 ;; Defined at:
 14880 ;;		line 129 in file "DC_motors.c"
 14881 ;; Parameters:    Size  Location     Type
 14882 ;;  mL              2   34[COMRAM] PTR struct .
 14883 ;;		 -> main@motorL(9), 
 14884 ;;  mR              2   36[COMRAM] PTR struct .
 14885 ;;		 -> main@motorR(9), 
 14886 ;; Auto vars:     Size  Location     Type
 14887 ;;		None
 14888 ;; Return value:  Size  Location     Type
 14889 ;;                  1    wreg      void 
 14890 ;; Registers used:
 14891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14892 ;; Tracked objects:
 14893 ;;		On entry : 0/0
 14894 ;;		On exit  : 0/0
 14895 ;;		Unchanged: 0/0
 14896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14900 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14901 ;;Total ram usage:        4 bytes
 14902 ;; Hardware stack levels used: 1
 14903 ;; Hardware stack levels required when called: 9
 14904 ;; This function calls:
 14905 ;;		_DCmotors_setPWM
 14906 ;; This function is called by:
 14907 ;;		_main
 14908 ;;		_colourcards_readRGBC
 14909 ;;		_DCmotors_calibration
 14910 ;;		_DCmotors_testing
 14911 ;; This function uses a non-reentrant model
 14912 ;;
 14913                           
 14914                           	psect	text74
 14915  0058A6                     __ptext74:
 14916                           	callstack 0
 14917  0058A6                     _stop:
 14918                           	callstack 21
 14919  0058A6                     
 14920                           ;DC_motors.c: 129: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 130: {;DC_motors.c
      +                          : 131:     LATDbits.LATD4 = 1;
 14921  0058A6  887C               	bsf	124,4,c	;volatile
 14922                           
 14923                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
 14924  0058A8  EF72  F02C         	goto	l8608
 14925  0058AC                     l8600:
 14926                           
 14927                           ;DC_motors.c: 135:         mL->power -= 10;
 14928  0058AC  C023  FFD9         	movff	stop@mL,fsr2l
 14929  0058B0  C024  FFDA         	movff	stop@mL+1,fsr2h
 14930  0058B4  0E0A               	movlw	10
 14931  0058B6  5EDF               	subwf	indf2,f,c
 14932                           
 14933                           ;DC_motors.c: 136:         mR->power -= 10;
 14934  0058B8  C025  FFD9         	movff	stop@mR,fsr2l
 14935  0058BC  C026  FFDA         	movff	stop@mR+1,fsr2h
 14936  0058C0  0E0A               	movlw	10
 14937  0058C2  5EDF               	subwf	indf2,f,c
 14938  0058C4                     
 14939                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
 14940  0058C4  C023  F018         	movff	stop@mL,DCmotors_setPWM@m
 14941  0058C8  C024  F019         	movff	stop@mL+1,DCmotors_setPWM@m+1
 14942  0058CC  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 14943  0058D0                     
 14944                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
 14945  0058D0  C025  F018         	movff	stop@mR,DCmotors_setPWM@m
 14946  0058D4  C026  F019         	movff	stop@mR+1,DCmotors_setPWM@m+1
 14947  0058D8  ECFF  F01D         	call	_DCmotors_setPWM	;wreg free
 14948  0058DC                     
 14949                           ;DC_motors.c: 141:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 14950  0058DC  0EA0               	movlw	160
 14951  0058DE                     u12847:
 14952  0058DE  D000               	nop2	
 14953  0058E0  2EE8               	decfsz	wreg,f,c
 14954  0058E2  D7FD               	bra	u12847
 14955  0058E4                     l8608:
 14956                           
 14957                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
 14958  0058E4  C023  FFD9         	movff	stop@mL,fsr2l
 14959  0058E8  C024  FFDA         	movff	stop@mL+1,fsr2h
 14960  0058EC  50DF               	movf	indf2,w,c
 14961  0058EE  B4D8               	btfsc	status,2,c
 14962  0058F0  EF7C  F02C         	goto	u11601
 14963  0058F4  EF7E  F02C         	goto	u11600
 14964  0058F8                     u11601:
 14965  0058F8  EF8A  F02C         	goto	l678
 14966  0058FC                     u11600:
 14967  0058FC  C025  FFD9         	movff	stop@mR,fsr2l
 14968  005900  C026  FFDA         	movff	stop@mR+1,fsr2h
 14969  005904  50DF               	movf	indf2,w,c
 14970  005906  A4D8               	btfss	status,2,c
 14971  005908  EF88  F02C         	goto	u11611
 14972  00590C  EF8A  F02C         	goto	u11610
 14973  005910                     u11611:
 14974  005910  EF56  F02C         	goto	l8600
 14975  005914                     u11610:
 14976  005914                     l678:
 14977                           
 14978                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
 14979  005914  987C               	bcf	124,4,c	;volatile
 14980  005916  0012               	return		;funcret
 14981  005918                     __end_of_stop:
 14982                           	callstack 0
 14983                           
 14984 ;; *************** function _DCmotors_setPWM *****************
 14985 ;; Defined at:
 14986 ;;		line 51 in file "DC_motors.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  m               2   23[COMRAM] PTR struct .
 14989 ;;		 -> main@motorR(9), main@motorL(9), 
 14990 ;; Auto vars:     Size  Location     Type
 14991 ;;  PWMduty         2   32[COMRAM] int 
 14992 ;; Return value:  Size  Location     Type
 14993 ;;                  1    wreg      void 
 14994 ;; Registers used:
 14995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14996 ;; Tracked objects:
 14997 ;;		On entry : 0/0
 14998 ;;		On exit  : 0/0
 14999 ;;		Unchanged: 0/0
 15000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15003 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15004 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15005 ;;Total ram usage:       11 bytes
 15006 ;; Hardware stack levels used: 1
 15007 ;; Hardware stack levels required when called: 8
 15008 ;; This function calls:
 15009 ;;		___awdiv
 15010 ;;		___wmul
 15011 ;; This function is called by:
 15012 ;;		_forward
 15013 ;;		_reverse
 15014 ;;		_stop
 15015 ;;		_left
 15016 ;;		_right
 15017 ;; This function uses a non-reentrant model
 15018 ;;
 15019                           
 15020                           	psect	text75
 15021  003BFE                     __ptext75:
 15022                           	callstack 0
 15023  003BFE                     _DCmotors_setPWM:
 15024                           	callstack 21
 15025  003BFE                     
 15026                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
 15027  003BFE  EE20 F001          	lfsr	2,1
 15028  003C02  5018               	movf	DCmotors_setPWM@m^0,w,c
 15029  003C04  26D9               	addwf	fsr2l,f,c
 15030  003C06  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15031  003C08  22DA               	addwfc	fsr2h,f,c
 15032  003C0A  50DF               	movf	indf2,w,c
 15033  003C0C  B4D8               	btfsc	status,2,c
 15034  003C0E  EF0B  F01E         	goto	u11251
 15035  003C12  EF0D  F01E         	goto	u11250
 15036  003C16                     u11251:
 15037  003C16  EF3E  F01E         	goto	l8410
 15038  003C1A                     u11250:
 15039  003C1A                     
 15040                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
 15041  003C1A  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 15042  003C1E  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 15043  003C22  50DF               	movf	indf2,w,c
 15044  003C24  6E1A               	movwf	??_DCmotors_setPWM^0,c
 15045  003C26  501A               	movf	??_DCmotors_setPWM^0,w,c
 15046  003C28  6E0A               	movwf	___wmul@multiplier^0,c
 15047  003C2A  6A0B               	clrf	(___wmul@multiplier+1)^0,c
 15048  003C2C  EE20 F007          	lfsr	2,7
 15049  003C30  5018               	movf	DCmotors_setPWM@m^0,w,c
 15050  003C32  26D9               	addwf	fsr2l,f,c
 15051  003C34  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15052  003C36  22DA               	addwfc	fsr2h,f,c
 15053  003C38  CFDE F00C          	movff	postinc2,___wmul@multiplicand
 15054  003C3C  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
 15055  003C40  ECC9  F030         	call	___wmul	;wreg free
 15056  003C44  C00A  F010         	movff	?___wmul,___awdiv@dividend
 15057  003C48  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
 15058  003C4C  0E00               	movlw	0
 15059  003C4E  6E13               	movwf	(___awdiv@divisor+1)^0,c
 15060  003C50  0E64               	movlw	100
 15061  003C52  6E12               	movwf	___awdiv@divisor^0,c
 15062  003C54  EC55  F02A         	call	___awdiv	;wreg free
 15063  003C58  EE20 F007          	lfsr	2,7
 15064  003C5C  5018               	movf	DCmotors_setPWM@m^0,w,c
 15065  003C5E  26D9               	addwf	fsr2l,f,c
 15066  003C60  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15067  003C62  22DA               	addwfc	fsr2h,f,c
 15068  003C64  CFDE F01B          	movff	postinc2,??_DCmotors_setPWM+1
 15069  003C68  CFDD F01C          	movff	postdec2,??_DCmotors_setPWM+2
 15070  003C6C  5010               	movf	?___awdiv^0,w,c
 15071  003C6E  5C1B               	subwf	(??_DCmotors_setPWM+1)^0,w,c
 15072  003C70  6E21               	movwf	DCmotors_setPWM@PWMduty^0,c
 15073  003C72  5011               	movf	(?___awdiv+1)^0,w,c
 15074  003C74  581C               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
 15075  003C76  6E22               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
 15076                           
 15077                           ;DC_motors.c: 57:  } else {
 15078  003C78  EF61  F01E         	goto	l8412
 15079  003C7C                     l8410:
 15080                           
 15081                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 15082  003C7C  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 15083  003C80  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 15084  003C84  50DF               	movf	indf2,w,c
 15085  003C86  6E1A               	movwf	??_DCmotors_setPWM^0,c
 15086  003C88  501A               	movf	??_DCmotors_setPWM^0,w,c
 15087  003C8A  6E0A               	movwf	___wmul@multiplier^0,c
 15088  003C8C  6A0B               	clrf	(___wmul@multiplier+1)^0,c
 15089  003C8E  EE20 F007          	lfsr	2,7
 15090  003C92  5018               	movf	DCmotors_setPWM@m^0,w,c
 15091  003C94  26D9               	addwf	fsr2l,f,c
 15092  003C96  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15093  003C98  22DA               	addwfc	fsr2h,f,c
 15094  003C9A  CFDE F00C          	movff	postinc2,___wmul@multiplicand
 15095  003C9E  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
 15096  003CA2  ECC9  F030         	call	___wmul	;wreg free
 15097  003CA6  C00A  F010         	movff	?___wmul,___awdiv@dividend
 15098  003CAA  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
 15099  003CAE  0E00               	movlw	0
 15100  003CB0  6E13               	movwf	(___awdiv@divisor+1)^0,c
 15101  003CB2  0E64               	movlw	100
 15102  003CB4  6E12               	movwf	___awdiv@divisor^0,c
 15103  003CB6  EC55  F02A         	call	___awdiv	;wreg free
 15104  003CBA  C010  F021         	movff	?___awdiv,DCmotors_setPWM@PWMduty
 15105  003CBE  C011  F022         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
 15106  003CC2                     l8412:
 15107                           
 15108                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
 15109  003CC2  EE20 F002          	lfsr	2,2
 15110  003CC6  5018               	movf	DCmotors_setPWM@m^0,w,c
 15111  003CC8  26D9               	addwf	fsr2l,f,c
 15112  003CCA  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15113  003CCC  22DA               	addwfc	fsr2h,f,c
 15114  003CCE  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
 15115  003CD2  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
 15116  003CD6  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15117  003CDA  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15118  003CDE  C021  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
 15119  003CE2                     
 15120                           ;DC_motors.c: 63:  if (m->direction){
 15121  003CE2  EE20 F001          	lfsr	2,1
 15122  003CE6  5018               	movf	DCmotors_setPWM@m^0,w,c
 15123  003CE8  26D9               	addwf	fsr2l,f,c
 15124  003CEA  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15125  003CEC  22DA               	addwfc	fsr2h,f,c
 15126  003CEE  50DF               	movf	indf2,w,c
 15127  003CF0  B4D8               	btfsc	status,2,c
 15128  003CF2  EF7D  F01E         	goto	u11261
 15129  003CF6  EF7F  F01E         	goto	u11260
 15130  003CFA                     u11261:
 15131  003CFA  EFB4  F01E         	goto	l8418
 15132  003CFE                     u11260:
 15133  003CFE                     
 15134                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
 15135  003CFE  EE20 F004          	lfsr	2,4
 15136  003D02  5018               	movf	DCmotors_setPWM@m^0,w,c
 15137  003D04  26D9               	addwf	fsr2l,f,c
 15138  003D06  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15139  003D08  22DA               	addwfc	fsr2h,f,c
 15140  003D0A  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
 15141  003D0E  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
 15142  003D12  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15143  003D16  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15144  003D1A  EE10 F004          	lfsr	1,4
 15145  003D1E  5018               	movf	DCmotors_setPWM@m^0,w,c
 15146  003D20  26E1               	addwf	fsr1l,f,c
 15147  003D22  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15148  003D24  22E2               	addwfc	fsr1h,f,c
 15149  003D26  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
 15150  003D2A  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
 15151  003D2E  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 15152  003D32  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 15153  003D36  50E7               	movf	indf1,w,c
 15154  003D38  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
 15155  003D3A  EE10 F006          	lfsr	1,6
 15156  003D3E  5018               	movf	DCmotors_setPWM@m^0,w,c
 15157  003D40  26E1               	addwf	fsr1l,f,c
 15158  003D42  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15159  003D44  22E2               	addwfc	fsr1h,f,c
 15160  003D46  50E7               	movf	indf1,w,c
 15161  003D48  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
 15162  003D4A  0E01               	movlw	1
 15163  003D4C  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
 15164  003D4E  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
 15165  003D50  EFAC  F01E         	goto	u11274
 15166  003D54                     u11275:
 15167  003D54  90D8               	bcf	status,0,c
 15168  003D56  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 15169  003D58                     u11274:
 15170  003D58  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 15171  003D5A  EFAA  F01E         	goto	u11275
 15172  003D5E  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
 15173  003D60  101E               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
 15174  003D62  6EDF               	movwf	indf2,c
 15175                           
 15176                           ;DC_motors.c: 65:  } else {
 15177  003D64  EFE8  F01E         	goto	l650
 15178  003D68                     l8418:
 15179                           
 15180                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
 15181  003D68  EE20 F004          	lfsr	2,4
 15182  003D6C  5018               	movf	DCmotors_setPWM@m^0,w,c
 15183  003D6E  26D9               	addwf	fsr2l,f,c
 15184  003D70  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15185  003D72  22DA               	addwfc	fsr2h,f,c
 15186  003D74  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
 15187  003D78  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
 15188  003D7C  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15189  003D80  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15190  003D84  EE10 F004          	lfsr	1,4
 15191  003D88  5018               	movf	DCmotors_setPWM@m^0,w,c
 15192  003D8A  26E1               	addwf	fsr1l,f,c
 15193  003D8C  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15194  003D8E  22E2               	addwfc	fsr1h,f,c
 15195  003D90  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
 15196  003D94  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
 15197  003D98  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 15198  003D9C  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 15199  003DA0  50E7               	movf	indf1,w,c
 15200  003DA2  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
 15201  003DA4  EE10 F006          	lfsr	1,6
 15202  003DA8  5018               	movf	DCmotors_setPWM@m^0,w,c
 15203  003DAA  26E1               	addwf	fsr1l,f,c
 15204  003DAC  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15205  003DAE  22E2               	addwfc	fsr1h,f,c
 15206  003DB0  50E7               	movf	indf1,w,c
 15207  003DB2  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
 15208  003DB4  0E01               	movlw	1
 15209  003DB6  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
 15210  003DB8  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
 15211  003DBA  EFE1  F01E         	goto	u11284
 15212  003DBE                     u11285:
 15213  003DBE  90D8               	bcf	status,0,c
 15214  003DC0  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 15215  003DC2                     u11284:
 15216  003DC2  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 15217  003DC4  EFDF  F01E         	goto	u11285
 15218  003DC8  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
 15219  003DCA  0AFF               	xorlw	255
 15220  003DCC  141E               	andwf	(??_DCmotors_setPWM+4)^0,w,c
 15221  003DCE  6EDF               	movwf	indf2,c
 15222  003DD0                     l650:
 15223  003DD0  0012               	return		;funcret
 15224  003DD2                     __end_of_DCmotors_setPWM:
 15225                           	callstack 0
 15226                           
 15227 ;; *************** function ___wmul *****************
 15228 ;; Defined at:
 15229 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;  multiplier      2    9[COMRAM] unsigned int 
 15232 ;;  multiplicand    2   11[COMRAM] unsigned int 
 15233 ;; Auto vars:     Size  Location     Type
 15234 ;;  product         2   13[COMRAM] unsigned int 
 15235 ;; Return value:  Size  Location     Type
 15236 ;;                  2    9[COMRAM] unsigned int 
 15237 ;; Registers used:
 15238 ;;		wreg, status,2, status,0, prodl, prodh
 15239 ;; Tracked objects:
 15240 ;;		On entry : 0/0
 15241 ;;		On exit  : 0/0
 15242 ;;		Unchanged: 0/0
 15243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15247 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15248 ;;Total ram usage:        6 bytes
 15249 ;; Hardware stack levels used: 1
 15250 ;; Hardware stack levels required when called: 7
 15251 ;; This function calls:
 15252 ;;		Nothing
 15253 ;; This function is called by:
 15254 ;;		_DCmotors_setPWM
 15255 ;;		_atoi
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text76
 15260  006192                     __ptext76:
 15261                           	callstack 0
 15262  006192                     ___wmul:
 15263                           	callstack 21
 15264  006192  500A               	movf	___wmul@multiplier^0,w,c
 15265  006194  020C               	mulwf	___wmul@multiplicand^0,c
 15266  006196  CFF3 F00E          	movff	prodl,___wmul@product
 15267  00619A  CFF4 F00F          	movff	prodh,___wmul@product+1
 15268  00619E  500A               	movf	___wmul@multiplier^0,w,c
 15269  0061A0  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 15270  0061A2  50F3               	movf	243,w,c
 15271  0061A4  260F               	addwf	(___wmul@product+1)^0,f,c
 15272  0061A6  500B               	movf	(___wmul@multiplier+1)^0,w,c
 15273  0061A8  020C               	mulwf	___wmul@multiplicand^0,c
 15274  0061AA  50F3               	movf	243,w,c
 15275  0061AC  260F               	addwf	(___wmul@product+1)^0,f,c
 15276  0061AE  C00E  F00A         	movff	___wmul@product,?___wmul
 15277  0061B2  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 15278  0061B6  0012               	return		;funcret
 15279  0061B8                     __end_of___wmul:
 15280                           	callstack 0
 15281                           
 15282 ;; *************** function ___awdiv *****************
 15283 ;; Defined at:
 15284 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;  dividend        2   15[COMRAM] int 
 15287 ;;  divisor         2   17[COMRAM] int 
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;  quotient        2   21[COMRAM] int 
 15290 ;;  sign            1   20[COMRAM] unsigned char 
 15291 ;;  counter         1   19[COMRAM] unsigned char 
 15292 ;; Return value:  Size  Location     Type
 15293 ;;                  2   15[COMRAM] int 
 15294 ;; Registers used:
 15295 ;;		wreg, status,2, status,0
 15296 ;; Tracked objects:
 15297 ;;		On entry : 0/0
 15298 ;;		On exit  : 0/0
 15299 ;;		Unchanged: 0/0
 15300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15302 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15304 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15305 ;;Total ram usage:        8 bytes
 15306 ;; Hardware stack levels used: 1
 15307 ;; Hardware stack levels required when called: 7
 15308 ;; This function calls:
 15309 ;;		Nothing
 15310 ;; This function is called by:
 15311 ;;		_DCmotors_setPWM
 15312 ;;		_efgtoa
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           	psect	text77
 15317  0054AA                     __ptext77:
 15318                           	callstack 0
 15319  0054AA                     ___awdiv:
 15320                           	callstack 21
 15321  0054AA  0E00               	movlw	0
 15322  0054AC  6E15               	movwf	___awdiv@sign^0,c
 15323  0054AE  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
 15324  0054B0  EF5E  F02A         	goto	u9530
 15325  0054B4  EF5C  F02A         	goto	u9531
 15326  0054B8                     u9531:
 15327  0054B8  EF64  F02A         	goto	l7492
 15328  0054BC                     u9530:
 15329  0054BC  6C12               	negf	___awdiv@divisor^0,c
 15330  0054BE  1E13               	comf	(___awdiv@divisor+1)^0,f,c
 15331  0054C0  B0D8               	btfsc	status,0,c
 15332  0054C2  2A13               	incf	(___awdiv@divisor+1)^0,f,c
 15333  0054C4  0E01               	movlw	1
 15334  0054C6  6E15               	movwf	___awdiv@sign^0,c
 15335  0054C8                     l7492:
 15336  0054C8  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
 15337  0054CA  EF6B  F02A         	goto	u9540
 15338  0054CE  EF69  F02A         	goto	u9541
 15339  0054D2                     u9541:
 15340  0054D2  EF71  F02A         	goto	l7498
 15341  0054D6                     u9540:
 15342  0054D6  6C10               	negf	___awdiv@dividend^0,c
 15343  0054D8  1E11               	comf	(___awdiv@dividend+1)^0,f,c
 15344  0054DA  B0D8               	btfsc	status,0,c
 15345  0054DC  2A11               	incf	(___awdiv@dividend+1)^0,f,c
 15346  0054DE  0E01               	movlw	1
 15347  0054E0  1A15               	xorwf	___awdiv@sign^0,f,c
 15348  0054E2                     l7498:
 15349  0054E2  0E00               	movlw	0
 15350  0054E4  6E17               	movwf	(___awdiv@quotient+1)^0,c
 15351  0054E6  0E00               	movlw	0
 15352  0054E8  6E16               	movwf	___awdiv@quotient^0,c
 15353  0054EA  5012               	movf	___awdiv@divisor^0,w,c
 15354  0054EC  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
 15355  0054EE  B4D8               	btfsc	status,2,c
 15356  0054F0  EF7C  F02A         	goto	u9551
 15357  0054F4  EF7E  F02A         	goto	u9550
 15358  0054F8                     u9551:
 15359  0054F8  EFA6  F02A         	goto	l7520
 15360  0054FC                     u9550:
 15361  0054FC  0E01               	movlw	1
 15362  0054FE  6E14               	movwf	___awdiv@counter^0,c
 15363  005500  EF86  F02A         	goto	l7506
 15364  005504                     l7504:
 15365  005504  90D8               	bcf	status,0,c
 15366  005506  3612               	rlcf	___awdiv@divisor^0,f,c
 15367  005508  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
 15368  00550A  2A14               	incf	___awdiv@counter^0,f,c
 15369  00550C                     l7506:
 15370  00550C  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
 15371  00550E  EF8B  F02A         	goto	u9561
 15372  005512  EF8D  F02A         	goto	u9560
 15373  005516                     u9561:
 15374  005516  EF82  F02A         	goto	l7504
 15375  00551A                     u9560:
 15376  00551A                     l7508:
 15377  00551A  90D8               	bcf	status,0,c
 15378  00551C  3616               	rlcf	___awdiv@quotient^0,f,c
 15379  00551E  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
 15380  005520  5012               	movf	___awdiv@divisor^0,w,c
 15381  005522  5C10               	subwf	___awdiv@dividend^0,w,c
 15382  005524  5013               	movf	(___awdiv@divisor+1)^0,w,c
 15383  005526  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
 15384  005528  A0D8               	btfss	status,0,c
 15385  00552A  EF99  F02A         	goto	u9571
 15386  00552E  EF9B  F02A         	goto	u9570
 15387  005532                     u9571:
 15388  005532  EFA0  F02A         	goto	l7516
 15389  005536                     u9570:
 15390  005536  5012               	movf	___awdiv@divisor^0,w,c
 15391  005538  5E10               	subwf	___awdiv@dividend^0,f,c
 15392  00553A  5013               	movf	(___awdiv@divisor+1)^0,w,c
 15393  00553C  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
 15394  00553E  8016               	bsf	___awdiv@quotient^0,0,c
 15395  005540                     l7516:
 15396  005540  90D8               	bcf	status,0,c
 15397  005542  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
 15398  005544  3212               	rrcf	___awdiv@divisor^0,f,c
 15399  005546  2E14               	decfsz	___awdiv@counter^0,f,c
 15400  005548  EF8D  F02A         	goto	l7508
 15401  00554C                     l7520:
 15402  00554C  5015               	movf	___awdiv@sign^0,w,c
 15403  00554E  B4D8               	btfsc	status,2,c
 15404  005550  EFAC  F02A         	goto	u9581
 15405  005554  EFAE  F02A         	goto	u9580
 15406  005558                     u9581:
 15407  005558  EFB2  F02A         	goto	l7524
 15408  00555C                     u9580:
 15409  00555C  6C16               	negf	___awdiv@quotient^0,c
 15410  00555E  1E17               	comf	(___awdiv@quotient+1)^0,f,c
 15411  005560  B0D8               	btfsc	status,0,c
 15412  005562  2A17               	incf	(___awdiv@quotient+1)^0,f,c
 15413  005564                     l7524:
 15414  005564  C016  F010         	movff	___awdiv@quotient,?___awdiv
 15415  005568  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 15416  00556C  0012               	return		;funcret
 15417  00556E                     __end_of___awdiv:
 15418                           	callstack 0
 15419                           
 15420 ;; *************** function _adjdelay *****************
 15421 ;; Defined at:
 15422 ;;		line 271 in file "DC_motors.c"
 15423 ;; Parameters:    Size  Location     Type
 15424 ;;  mode            1    wreg     unsigned char 
 15425 ;; Auto vars:     Size  Location     Type
 15426 ;;  mode            1   12[COMRAM] unsigned char 
 15427 ;;  i               1   11[COMRAM] unsigned char 
 15428 ;; Return value:  Size  Location     Type
 15429 ;;                  1    wreg      void 
 15430 ;; Registers used:
 15431 ;;		wreg, status,2, status,0
 15432 ;; Tracked objects:
 15433 ;;		On entry : 0/0
 15434 ;;		On exit  : 0/0
 15435 ;;		Unchanged: 0/0
 15436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15441 ;;Total ram usage:        4 bytes
 15442 ;; Hardware stack levels used: 1
 15443 ;; Hardware stack levels required when called: 7
 15444 ;; This function calls:
 15445 ;;		Nothing
 15446 ;; This function is called by:
 15447 ;;		_DCmotors_calibration
 15448 ;; This function uses a non-reentrant model
 15449 ;;
 15450                           
 15451                           	psect	text78
 15452  004DF0                     __ptext78:
 15453                           	callstack 0
 15454  004DF0                     _adjdelay:
 15455                           	callstack 22
 15456                           
 15457                           ;incstack = 0
 15458                           ;adjdelay@mode stored from wreg
 15459  004DF0  6E0D               	movwf	adjdelay@mode^0,c
 15460  004DF2                     
 15461                           ;DC_motors.c: 271: void adjdelay(unsigned char mode);DC_motors.c: 272: {;DC_motors.c: 27
      +                          3:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 15462  004DF2  0E52               	movlw	82
 15463  004DF4  6E0B               	movwf	(??_adjdelay+1)^0,c
 15464  004DF6  0E2B               	movlw	43
 15465  004DF8  6E0A               	movwf	??_adjdelay^0,c
 15466  004DFA  0E00               	movlw	0
 15467  004DFC                     u12857:
 15468  004DFC  2EE8               	decfsz	wreg,f,c
 15469  004DFE  D7FE               	bra	u12857
 15470  004E00  2E0A               	decfsz	??_adjdelay^0,f,c
 15471  004E02  D7FC               	bra	u12857
 15472  004E04  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
 15473  004E06  D7FA               	bra	u12857
 15474  004E08  D000               	nop2	
 15475  004E0A                     
 15476                           ;DC_motors.c: 274:     unsigned char i;;DC_motors.c: 275:     for (i=0; i<10; i++) {
 15477  004E0A  0E00               	movlw	0
 15478  004E0C  6E0C               	movwf	adjdelay@i^0,c
 15479  004E0E                     l732:
 15480                           
 15481                           ;DC_motors.c: 276:         if (!PORTFbits.RF2 && PORTFbits.RF3) {
 15482  004E0E  B48E               	btfsc	142,2,c	;volatile
 15483  004E10  EF0C  F027         	goto	u7481
 15484  004E14  EF0E  F027         	goto	u7480
 15485  004E18                     u7481:
 15486  004E18  EF42  F027         	goto	l734
 15487  004E1C                     u7480:
 15488  004E1C  A68E               	btfss	142,3,c	;volatile
 15489  004E1E  EF13  F027         	goto	u7491
 15490  004E22  EF15  F027         	goto	u7490
 15491  004E26                     u7491:
 15492  004E26  EF42  F027         	goto	l734
 15493  004E2A                     u7490:
 15494  004E2A                     
 15495                           ;DC_motors.c: 277:             LATDbits.LATD7 = 1;
 15496  004E2A  8E7C               	bsf	124,7,c	;volatile
 15497  004E2C                     
 15498                           ;DC_motors.c: 278:             if (mode==1) {turnright_delay+=5;}
 15499  004E2C  040D               	decf	adjdelay@mode^0,w,c
 15500  004E2E  A4D8               	btfss	status,2,c
 15501  004E30  EF1C  F027         	goto	u7501
 15502  004E34  EF1E  F027         	goto	u7500
 15503  004E38                     u7501:
 15504  004E38  EF25  F027         	goto	l6276
 15505  004E3C                     u7500:
 15506  004E3C  0E05               	movlw	5
 15507  004E3E  0101               	movlb	1	; () banked
 15508  004E40  2724               	addwf	_turnright_delay& (0+255),f,b	;volatile
 15509  004E42  0E00               	movlw	0
 15510  004E44  2325               	addwfc	(_turnright_delay+1)& (0+255),f,b	;volatile
 15511  004E46  EF33  F027         	goto	l6280
 15512  004E4A                     l6276:
 15513  004E4A  0E02               	movlw	2
 15514  004E4C  180D               	xorwf	adjdelay@mode^0,w,c
 15515  004E4E  A4D8               	btfss	status,2,c
 15516  004E50  EF2C  F027         	goto	u7511
 15517  004E54  EF2E  F027         	goto	u7510
 15518  004E58                     u7511:
 15519  004E58  EF33  F027         	goto	l6280
 15520  004E5C                     u7510:
 15521  004E5C  0E05               	movlw	5
 15522  004E5E  0101               	movlb	1	; () banked
 15523  004E60  2726               	addwf	_turnleft_delay& (0+255),f,b	;volatile
 15524  004E62  0E00               	movlw	0
 15525  004E64  2327               	addwfc	(_turnleft_delay+1)& (0+255),f,b	;volatile
 15526  004E66                     l6280:
 15527                           
 15528                           ;DC_motors.c: 280:             _delay((unsigned long)((800)*(64000000/4000.0)));
 15529  004E66  0E41               	movlw	65
 15530  004E68  6E0B               	movwf	(??_adjdelay+1)^0,c
 15531  004E6A  0EF0               	movlw	240
 15532  004E6C  6E0A               	movwf	??_adjdelay^0,c
 15533  004E6E  0E33               	movlw	51
 15534  004E70                     u12867:
 15535  004E70  2EE8               	decfsz	wreg,f,c
 15536  004E72  D7FE               	bra	u12867
 15537  004E74  2E0A               	decfsz	??_adjdelay^0,f,c
 15538  004E76  D7FC               	bra	u12867
 15539  004E78  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
 15540  004E7A  D7FA               	bra	u12867
 15541  004E7C  F000               	nop	
 15542  004E7E                     
 15543                           ;DC_motors.c: 281:             LATDbits.LATD7 = 0;
 15544  004E7E  9E7C               	bcf	124,7,c	;volatile
 15545                           
 15546                           ;DC_motors.c: 282:         } else if (!PORTFbits.RF3 && PORTFbits.RF2) {
 15547  004E80  EF7B  F027         	goto	l6300
 15548  004E84                     l734:
 15549  004E84  B68E               	btfsc	142,3,c	;volatile
 15550  004E86  EF47  F027         	goto	u7521
 15551  004E8A  EF49  F027         	goto	u7520
 15552  004E8E                     u7521:
 15553  004E8E  EF7B  F027         	goto	l6300
 15554  004E92                     u7520:
 15555  004E92  A48E               	btfss	142,2,c	;volatile
 15556  004E94  EF4E  F027         	goto	u7531
 15557  004E98  EF50  F027         	goto	u7530
 15558  004E9C                     u7531:
 15559  004E9C  EF7B  F027         	goto	l6300
 15560  004EA0                     u7530:
 15561  004EA0                     
 15562                           ;DC_motors.c: 283:             LATHbits.LATH3 = 1;
 15563  004EA0  8680               	bsf	128,3,c	;volatile
 15564  004EA2                     
 15565                           ;DC_motors.c: 284:             if (mode==1) {turnright_delay-=5;}
 15566  004EA2  040D               	decf	adjdelay@mode^0,w,c
 15567  004EA4  A4D8               	btfss	status,2,c
 15568  004EA6  EF57  F027         	goto	u7541
 15569  004EAA  EF59  F027         	goto	u7540
 15570  004EAE                     u7541:
 15571  004EAE  EF60  F027         	goto	l6292
 15572  004EB2                     u7540:
 15573  004EB2  0E05               	movlw	5
 15574  004EB4  0101               	movlb	1	; () banked
 15575  004EB6  5F24               	subwf	_turnright_delay& (0+255),f,b	;volatile
 15576  004EB8  0E00               	movlw	0
 15577  004EBA  5B25               	subwfb	(_turnright_delay+1)& (0+255),f,b	;volatile
 15578  004EBC  EF6E  F027         	goto	l6296
 15579  004EC0                     l6292:
 15580  004EC0  0E02               	movlw	2
 15581  004EC2  180D               	xorwf	adjdelay@mode^0,w,c
 15582  004EC4  A4D8               	btfss	status,2,c
 15583  004EC6  EF67  F027         	goto	u7551
 15584  004ECA  EF69  F027         	goto	u7550
 15585  004ECE                     u7551:
 15586  004ECE  EF6E  F027         	goto	l6296
 15587  004ED2                     u7550:
 15588  004ED2  0E05               	movlw	5
 15589  004ED4  0101               	movlb	1	; () banked
 15590  004ED6  5F26               	subwf	_turnleft_delay& (0+255),f,b	;volatile
 15591  004ED8  0E00               	movlw	0
 15592  004EDA  5B27               	subwfb	(_turnleft_delay+1)& (0+255),f,b	;volatile
 15593  004EDC                     l6296:
 15594                           
 15595                           ;DC_motors.c: 286:             _delay((unsigned long)((800)*(64000000/4000.0)));
 15596  004EDC  0E41               	movlw	65
 15597  004EDE  6E0B               	movwf	(??_adjdelay+1)^0,c
 15598  004EE0  0EF0               	movlw	240
 15599  004EE2  6E0A               	movwf	??_adjdelay^0,c
 15600  004EE4  0E33               	movlw	51
 15601  004EE6                     u12877:
 15602  004EE6  2EE8               	decfsz	wreg,f,c
 15603  004EE8  D7FE               	bra	u12877
 15604  004EEA  2E0A               	decfsz	??_adjdelay^0,f,c
 15605  004EEC  D7FC               	bra	u12877
 15606  004EEE  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
 15607  004EF0  D7FA               	bra	u12877
 15608  004EF2  F000               	nop	
 15609  004EF4                     
 15610                           ;DC_motors.c: 287:             LATHbits.LATH3 = 0;
 15611  004EF4  9680               	bcf	128,3,c	;volatile
 15612  004EF6                     l6300:
 15613                           
 15614                           ;DC_motors.c: 289:         _delay((unsigned long)((200)*(64000000/4000.0)));
 15615  004EF6  0E11               	movlw	17
 15616  004EF8  6E0B               	movwf	(??_adjdelay+1)^0,c
 15617  004EFA  0E3C               	movlw	60
 15618  004EFC  6E0A               	movwf	??_adjdelay^0,c
 15619  004EFE  0ECB               	movlw	203
 15620  004F00                     u12887:
 15621  004F00  2EE8               	decfsz	wreg,f,c
 15622  004F02  D7FE               	bra	u12887
 15623  004F04  2E0A               	decfsz	??_adjdelay^0,f,c
 15624  004F06  D7FC               	bra	u12887
 15625  004F08  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
 15626  004F0A  D7FA               	bra	u12887
 15627  004F0C  F000               	nop	
 15628  004F0E                     
 15629                           ;DC_motors.c: 290:     }
 15630  004F0E  2A0C               	incf	adjdelay@i^0,f,c
 15631  004F10  0E09               	movlw	9
 15632  004F12  640C               	cpfsgt	adjdelay@i^0,c
 15633  004F14  EF8E  F027         	goto	u7561
 15634  004F18  EF90  F027         	goto	u7560
 15635  004F1C                     u7561:
 15636  004F1C  EF07  F027         	goto	l732
 15637  004F20                     u7560:
 15638  004F20  0012               	return		;funcret
 15639  004F22                     __end_of_adjdelay:
 15640                           	callstack 0
 15641                           
 15642 ;; *************** function _ADC_init *****************
 15643 ;; Defined at:
 15644 ;;		line 8 in file "ADC.c"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;		None
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;		None
 15649 ;; Return value:  Size  Location     Type
 15650 ;;                  1    wreg      void 
 15651 ;; Registers used:
 15652 ;;		wreg, status,2
 15653 ;; Tracked objects:
 15654 ;;		On entry : 0/0
 15655 ;;		On exit  : 0/0
 15656 ;;		Unchanged: 0/0
 15657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15662 ;;Total ram usage:        0 bytes
 15663 ;; Hardware stack levels used: 1
 15664 ;; Hardware stack levels required when called: 7
 15665 ;; This function calls:
 15666 ;;		Nothing
 15667 ;; This function is called by:
 15668 ;;		_main
 15669 ;; This function uses a non-reentrant model
 15670 ;;
 15671                           
 15672                           	psect	text79
 15673  006298                     __ptext79:
 15674                           	callstack 0
 15675  006298                     _ADC_init:
 15676                           	callstack 23
 15677  006298                     
 15678                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 15679  006298  8C86               	bsf	134,6,c	;volatile
 15680                           
 15681                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 15682  00629A  010E               	movlb	14	; () banked
 15683  00629C  8DB4               	bsf	180,6,b	;volatile
 15684                           
 15685                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 15686  00629E  010F               	movlb	15	; () banked
 15687  0062A0  9958               	bcf	88,4,b	;volatile
 15688  0062A2                     
 15689                           ; BSR set to: 15
 15690                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 15691  0062A2  0EFC               	movlw	-4
 15692  0062A4  1758               	andwf	88,f,b	;volatile
 15693                           
 15694                           ;ADC.c: 16:     ADPCH=0b101110;
 15695  0062A6  0E2E               	movlw	46
 15696  0062A8  6F5F               	movwf	95,b	;volatile
 15697  0062AA                     
 15698                           ; BSR set to: 15
 15699                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 15700  0062AA  9460               	bcf	96,2,c	;volatile
 15701  0062AC                     
 15702                           ; BSR set to: 15
 15703                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 15704  0062AC  8860               	bsf	96,4,c	;volatile
 15705  0062AE                     
 15706                           ; BSR set to: 15
 15707                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 15708  0062AE  8E60               	bsf	96,7,c	;volatile
 15709  0062B0                     
 15710                           ; BSR set to: 15
 15711  0062B0  0012               	return		;funcret
 15712  0062B2                     __end_of_ADC_init:
 15713                           	callstack 0
 15714                           
 15715 ;; *************** function _LowISR *****************
 15716 ;; Defined at:
 15717 ;;		line 80 in file "interrupts.c"
 15718 ;; Parameters:    Size  Location     Type
 15719 ;;		None
 15720 ;; Auto vars:     Size  Location     Type
 15721 ;;		None
 15722 ;; Return value:  Size  Location     Type
 15723 ;;                  1    wreg      void 
 15724 ;; Registers used:
 15725 ;;		wreg, status,2
 15726 ;; Tracked objects:
 15727 ;;		On entry : 0/0
 15728 ;;		On exit  : 0/0
 15729 ;;		Unchanged: 0/0
 15730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15733 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15734 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15735 ;;Total ram usage:        3 bytes
 15736 ;; Hardware stack levels used: 1
 15737 ;; Hardware stack levels required when called: 6
 15738 ;; This function calls:
 15739 ;;		Nothing
 15740 ;; This function is called by:
 15741 ;;		Interrupt level 1
 15742 ;; This function uses a non-reentrant model
 15743 ;;
 15744                           
 15745                           	psect	intcodelo
 15746  000018                     __pintcodelo:
 15747                           	callstack 0
 15748  000018                     _LowISR:
 15749                           	callstack 14
 15750                           
 15751                           ; BSR set to: 15
 15752                           ;incstack = 0
 15753  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 15754  00001A  CFD8 F007          	movff	status,??_LowISR
 15755  00001E  CFE8 F008          	movff	wreg,??_LowISR+1
 15756  000022  CFE0 F009          	movff	bsr,??_LowISR+2
 15757  000026                     
 15758                           ;interrupts.c: 81:     if (PIR0bits.TMR0IF) {
 15759  000026  010E               	movlb	14	; () banked
 15760  000028  AB33               	btfss	51,5,b	;volatile
 15761  00002A  EF19  F000         	goto	i1u804_21
 15762  00002E  EF1B  F000         	goto	i1u804_20
 15763  000032                     i1u804_21:
 15764  000032  EF28  F000         	goto	i1l145
 15765  000036                     i1u804_20:
 15766  000036                     
 15767                           ; BSR set to: 14
 15768                           ;interrupts.c: 82:         overtime_flag = 1;
 15769  000036  0E01               	movlw	1
 15770  000038  0101               	movlb	1	; () banked
 15771  00003A  6F2A               	movwf	_overtime_flag& (0+255),b	;volatile
 15772                           
 15773                           ;interrupts.c: 83:         returnhome_flag = 1;
 15774  00003C  0E01               	movlw	1
 15775  00003E  0100               	movlb	0	; () banked
 15776  000040  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
 15777                           
 15778                           ;interrupts.c: 84:         TMR0H=0b1011;
 15779  000042  0E0B               	movlw	11
 15780  000044  6ED4               	movwf	212,c	;volatile
 15781                           
 15782                           ;interrupts.c: 85:         TMR0L=0b11011011;
 15783  000046  0EDB               	movlw	219
 15784  000048  6ED3               	movwf	211,c	;volatile
 15785  00004A                     
 15786                           ; BSR set to: 0
 15787                           ;interrupts.c: 86:         PIR0bits.TMR0IF = 0;
 15788  00004A  010E               	movlb	14	; () banked
 15789  00004C  9B33               	bcf	51,5,b	;volatile
 15790  00004E                     
 15791                           ; BSR set to: 14
 15792                           ;interrupts.c: 87:         PIE0bits.TMR0IE = 0;
 15793  00004E  9B29               	bcf	41,5,b	;volatile
 15794  000050                     i1l145:
 15795                           
 15796                           ; BSR set to: 14
 15797  000050  C009  FFE0         	movff	??_LowISR+2,bsr
 15798  000054  C008  FFE8         	movff	??_LowISR+1,wreg
 15799  000058  C007  FFD8         	movff	??_LowISR,status
 15800  00005C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 15801  00005E  0010               	retfie	
 15802  000060                     __end_of_LowISR:
 15803                           	callstack 0
 15804                           
 15805 ;; *************** function _HighISR *****************
 15806 ;; Defined at:
 15807 ;;		line 65 in file "interrupts.c"
 15808 ;; Parameters:    Size  Location     Type
 15809 ;;		None
 15810 ;; Auto vars:     Size  Location     Type
 15811 ;;		None
 15812 ;; Return value:  Size  Location     Type
 15813 ;;                  1    wreg      void 
 15814 ;; Registers used:
 15815 ;;		wreg, status,2, status,0, cstack
 15816 ;; Tracked objects:
 15817 ;;		On entry : 0/0
 15818 ;;		On exit  : 0/0
 15819 ;;		Unchanged: 0/0
 15820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15825 ;;Total ram usage:        1 bytes
 15826 ;; Hardware stack levels used: 1
 15827 ;; Hardware stack levels required when called: 5
 15828 ;; This function calls:
 15829 ;;		i2_interrupts_clear
 15830 ;; This function is called by:
 15831 ;;		Interrupt level 2
 15832 ;; This function uses a non-reentrant model
 15833 ;;
 15834                           
 15835                           	psect	intcode
 15836  000008                     __pintcode:
 15837                           	callstack 0
 15838  000008                     _HighISR:
 15839                           	callstack 14
 15840                           
 15841                           ; BSR set to: 14
 15842                           ;incstack = 0
 15843  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15844  00000A  EFA1  F02F         	goto	int_func
 15845                           
 15846                           	psect	intcode_body
 15847  005F42                     __pintcode_body:
 15848                           	callstack 14
 15849  005F42                     int_func:
 15850                           	callstack 14
 15851  005F42                     
 15852                           ;interrupts.c: 66:     if (PIR0bits.INT1IF) {
 15853  005F42  010E               	movlb	14	; () banked
 15854  005F44  A333               	btfss	51,1,b	;volatile
 15855  005F46  EFA7  F02F         	goto	i2u801_41
 15856  005F4A  EFA9  F02F         	goto	i2u801_40
 15857  005F4E                     i2u801_41:
 15858  005F4E  EFC1  F02F         	goto	i2l139
 15859  005F52                     i2u801_40:
 15860  005F52                     
 15861                           ; BSR set to: 14
 15862                           ;interrupts.c: 67:         colourcard_flag = 1;
 15863  005F52  0E01               	movlw	1
 15864  005F54  0101               	movlb	1	; () banked
 15865  005F56  6F29               	movwf	_colourcard_flag& (0+255),b	;volatile
 15866  005F58                     
 15867                           ; BSR set to: 1
 15868                           ;interrupts.c: 68:         LATDbits.LATD7 = !LATDbits.LATD7;
 15869  005F58  AE7C               	btfss	124,7,c	;volatile
 15870  005F5A  EFB1  F02F         	goto	i2u802_41
 15871  005F5E  EFB5  F02F         	goto	i2u802_40
 15872  005F62                     i2u802_41:
 15873  005F62  6A06               	clrf	??_HighISR^0,c
 15874  005F64  2A06               	incf	??_HighISR^0,f,c
 15875  005F66  EFB6  F02F         	goto	i2u803_48
 15876  005F6A                     i2u802_40:
 15877  005F6A  6A06               	clrf	??_HighISR^0,c
 15878  005F6C                     i2u803_48:
 15879  005F6C  3206               	rrcf	??_HighISR^0,f,c
 15880  005F6E  3206               	rrcf	??_HighISR^0,f,c
 15881  005F70  507C               	movf	124,w,c	;volatile
 15882  005F72  1806               	xorwf	??_HighISR^0,w,c
 15883  005F74  0B7F               	andlw	-129
 15884  005F76  1806               	xorwf	??_HighISR^0,w,c
 15885  005F78  6E7C               	movwf	124,c	;volatile
 15886  005F7A                     
 15887                           ;interrupts.c: 69:         interrupts_clear();
 15888  005F7A  EC59  F031         	call	i2_interrupts_clear	;wreg free
 15889  005F7E                     
 15890                           ;interrupts.c: 70:         PIR0bits.INT1IF = 0;
 15891  005F7E  010E               	movlb	14	; () banked
 15892  005F80  9333               	bcf	51,1,b	;volatile
 15893  005F82                     i2l139:
 15894                           
 15895                           ; BSR set to: 14
 15896  005F82  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15897  005F84  0011               	retfie		f
 15898  005F86                     __end_of_HighISR:
 15899                           	callstack 0
 15900                           
 15901 ;; *************** function i2_interrupts_clear *****************
 15902 ;; Defined at:
 15903 ;;		line 37 in file "interrupts.c"
 15904 ;; Parameters:    Size  Location     Type
 15905 ;;		None
 15906 ;; Auto vars:     Size  Location     Type
 15907 ;;		None
 15908 ;; Return value:  Size  Location     Type
 15909 ;;                  1    wreg      void 
 15910 ;; Registers used:
 15911 ;;		wreg, status,2, status,0, cstack
 15912 ;; Tracked objects:
 15913 ;;		On entry : 0/0
 15914 ;;		On exit  : 0/0
 15915 ;;		Unchanged: 0/0
 15916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15921 ;;Total ram usage:        0 bytes
 15922 ;; Hardware stack levels used: 1
 15923 ;; Hardware stack levels required when called: 4
 15924 ;; This function calls:
 15925 ;;		i2_I2C_2_Master_Start
 15926 ;;		i2_I2C_2_Master_Stop
 15927 ;;		i2_I2C_2_Master_Write
 15928 ;;		i2_interrupts_colour
 15929 ;; This function is called by:
 15930 ;;		_HighISR
 15931 ;; This function uses a non-reentrant model
 15932 ;;
 15933                           
 15934                           	psect	text82
 15935  0062B2                     __ptext82:
 15936                           	callstack 0
 15937  0062B2                     i2_interrupts_clear:
 15938                           	callstack 14
 15939  0062B2                     
 15940                           ;interrupts.c: 38:     I2C_2_Master_Start();
 15941  0062B2  ECBB  F031         	call	i2_I2C_2_Master_Start	;wreg free
 15942                           
 15943                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
 15944  0062B6  0E52               	movlw	82
 15945  0062B8  EC9C  F031         	call	i2_I2C_2_Master_Write
 15946                           
 15947                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
 15948  0062BC  0EE6               	movlw	230
 15949  0062BE  EC9C  F031         	call	i2_I2C_2_Master_Write
 15950                           
 15951                           ;interrupts.c: 41:     I2C_2_Master_Stop();
 15952  0062C2  ECB6  F031         	call	i2_I2C_2_Master_Stop	;wreg free
 15953                           
 15954                           ;interrupts.c: 43:     interrupts_colour();
 15955  0062C6  EC35  F02F         	call	i2_interrupts_colour	;wreg free
 15956  0062CA  0012               	return		;funcret
 15957  0062CC                     __end_ofi2_interrupts_clear:
 15958                           	callstack 0
 15959                           
 15960 ;; *************** function i2_interrupts_colour *****************
 15961 ;; Defined at:
 15962 ;;		line 49 in file "interrupts.c"
 15963 ;; Parameters:    Size  Location     Type
 15964 ;;		None
 15965 ;; Auto vars:     Size  Location     Type
 15966 ;;		None
 15967 ;; Return value:  Size  Location     Type
 15968 ;;                  1    wreg      void 
 15969 ;; Registers used:
 15970 ;;		wreg, status,2, status,0, cstack
 15971 ;; Tracked objects:
 15972 ;;		On entry : 0/0
 15973 ;;		On exit  : 0/0
 15974 ;;		Unchanged: 0/0
 15975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15980 ;;Total ram usage:        1 bytes
 15981 ;; Hardware stack levels used: 1
 15982 ;; Hardware stack levels required when called: 3
 15983 ;; This function calls:
 15984 ;;		i2_colourclick_writetoaddr
 15985 ;; This function is called by:
 15986 ;;		i2_interrupts_clear
 15987 ;; This function uses a non-reentrant model
 15988 ;;
 15989                           
 15990                           	psect	text83
 15991  005E6A                     __ptext83:
 15992                           	callstack 0
 15993  005E6A                     i2_interrupts_colour:
 15994                           	callstack 14
 15995  005E6A                     
 15996                           ;interrupts.c: 50:     colourclick_writetoaddr(0x00, 0b10011);
 15997  005E6A  0E13               	movlw	19
 15998  005E6C  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15999  005E6E  0E00               	movlw	0
 16000  005E70  EC2F  F031         	call	i2_colourclick_writetoaddr
 16001  005E74                     
 16002                           ;interrupts.c: 51:     _delay((unsigned long)((3)*(64000000/4000.0)));
 16003  005E74  0E3F               	movlw	63
 16004  005E76  6E05               	movwf	??i2_interrupts_colour^0,c
 16005  005E78  0E55               	movlw	85
 16006  005E7A                     i2u1289_47:
 16007  005E7A  2EE8               	decfsz	wreg,f,c
 16008  005E7C  D7FE               	bra	i2u1289_47
 16009  005E7E  2E05               	decfsz	??i2_interrupts_colour^0,f,c
 16010  005E80  D7FC               	bra	i2u1289_47
 16011  005E82  F000               	nop	
 16012  005E84                     
 16013                           ;interrupts.c: 52:     colourclick_writetoaddr(0x0C, 0b0100);
 16014  005E84  0E04               	movlw	4
 16015  005E86  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 16016  005E88  0E0C               	movlw	12
 16017  005E8A  EC2F  F031         	call	i2_colourclick_writetoaddr
 16018  005E8E                     
 16019                           ;interrupts.c: 53:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
 16020  005E8E  C051  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
 16021  005E92  0E04               	movlw	4
 16022  005E94  EC2F  F031         	call	i2_colourclick_writetoaddr
 16023  005E98                     
 16024                           ;interrupts.c: 54:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
 16025  005E98  5052               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
 16026  005E9A  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 16027  005E9C  0E05               	movlw	5
 16028  005E9E  EC2F  F031         	call	i2_colourclick_writetoaddr
 16029  005EA2                     
 16030                           ;interrupts.c: 55:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
 16031  005EA2  C054  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
 16032  005EA6  0E06               	movlw	6
 16033  005EA8  EC2F  F031         	call	i2_colourclick_writetoaddr
 16034  005EAC                     
 16035                           ;interrupts.c: 56:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
 16036  005EAC  5055               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
 16037  005EAE  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 16038  005EB0  0E07               	movlw	7
 16039  005EB2  EC2F  F031         	call	i2_colourclick_writetoaddr
 16040  005EB6  0012               	return		;funcret
 16041  005EB8                     __end_ofi2_interrupts_colour:
 16042                           	callstack 0
 16043                           
 16044 ;; *************** function i2_colourclick_writetoaddr *****************
 16045 ;; Defined at:
 16046 ;;		line 39 in file "colour_click.c"
 16047 ;; Parameters:    Size  Location     Type
 16048 ;;  address         1    wreg     unsigned char 
 16049 ;;  value           1    2[COMRAM] unsigned char 
 16050 ;; Auto vars:     Size  Location     Type
 16051 ;;  address         1    3[COMRAM] unsigned char 
 16052 ;; Return value:  Size  Location     Type
 16053 ;;                  1    wreg      void 
 16054 ;; Registers used:
 16055 ;;		wreg, status,2, status,0, cstack
 16056 ;; Tracked objects:
 16057 ;;		On entry : 0/0
 16058 ;;		On exit  : 0/0
 16059 ;;		Unchanged: 0/0
 16060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16061 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16065 ;;Total ram usage:        2 bytes
 16066 ;; Hardware stack levels used: 1
 16067 ;; Hardware stack levels required when called: 2
 16068 ;; This function calls:
 16069 ;;		i2_I2C_2_Master_Start
 16070 ;;		i2_I2C_2_Master_Stop
 16071 ;;		i2_I2C_2_Master_Write
 16072 ;; This function is called by:
 16073 ;;		i2_interrupts_colour
 16074 ;; This function uses a non-reentrant model
 16075 ;;
 16076                           
 16077                           	psect	text84
 16078  00625E                     __ptext84:
 16079                           	callstack 0
 16080  00625E                     i2_colourclick_writetoaddr:
 16081                           	callstack 14
 16082                           
 16083                           ;incstack = 0
 16084                           ;i2colourclick_writetoaddr@address stored from wreg
 16085  00625E  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
 16086  006260                     
 16087                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
 16088  006260  ECBB  F031         	call	i2_I2C_2_Master_Start	;wreg free
 16089                           
 16090                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
 16091  006264  0E52               	movlw	82
 16092  006266  EC9C  F031         	call	i2_I2C_2_Master_Write
 16093                           
 16094                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
 16095  00626A  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
 16096  00626C  0980               	iorlw	128
 16097  00626E  EC9C  F031         	call	i2_I2C_2_Master_Write
 16098                           
 16099                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
 16100  006272  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
 16101  006274  EC9C  F031         	call	i2_I2C_2_Master_Write
 16102                           
 16103                           ;colour_click.c: 45:     I2C_2_Master_Stop();
 16104  006278  ECB6  F031         	call	i2_I2C_2_Master_Stop	;wreg free
 16105  00627C  0012               	return		;funcret
 16106  00627E                     __end_ofi2_colourclick_writetoaddr:
 16107                           	callstack 0
 16108                           
 16109 ;; *************** function i2_I2C_2_Master_Write *****************
 16110 ;; Defined at:
 16111 ;;		line 69 in file "I2C.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;  data_byte       1    wreg     unsigned char 
 16114 ;; Auto vars:     Size  Location     Type
 16115 ;;  data_byte       1    1[COMRAM] unsigned char 
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  1    wreg      void 
 16118 ;; Registers used:
 16119 ;;		wreg, status,2, status,0, cstack
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16129 ;;Total ram usage:        1 bytes
 16130 ;; Hardware stack levels used: 1
 16131 ;; Hardware stack levels required when called: 1
 16132 ;; This function calls:
 16133 ;;		i2_I2C_2_Master_Idle
 16134 ;; This function is called by:
 16135 ;;		i2_interrupts_clear
 16136 ;;		i2_colourclick_writetoaddr
 16137 ;; This function uses a non-reentrant model
 16138 ;;
 16139                           
 16140                           	psect	text85
 16141  006338                     __ptext85:
 16142                           	callstack 0
 16143  006338                     i2_I2C_2_Master_Write:
 16144                           	callstack 14
 16145                           
 16146                           ;incstack = 0
 16147                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 16148  006338  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 16149  00633A                     
 16150                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 16151  00633A  ECB5  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 16152  00633E                     
 16153                           ;I2C.c: 72:   SSP2BUF = data_byte;
 16154  00633E  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 16155  006342  0012               	return		;funcret
 16156  006344                     __end_ofi2_I2C_2_Master_Write:
 16157                           	callstack 0
 16158                           
 16159 ;; *************** function i2_I2C_2_Master_Stop *****************
 16160 ;; Defined at:
 16161 ;;		line 59 in file "I2C.c"
 16162 ;; Parameters:    Size  Location     Type
 16163 ;;		None
 16164 ;; Auto vars:     Size  Location     Type
 16165 ;;		None
 16166 ;; Return value:  Size  Location     Type
 16167 ;;                  1    wreg      void 
 16168 ;; Registers used:
 16169 ;;		wreg, status,2, status,0, cstack
 16170 ;; Tracked objects:
 16171 ;;		On entry : 0/0
 16172 ;;		On exit  : 0/0
 16173 ;;		Unchanged: 0/0
 16174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16179 ;;Total ram usage:        0 bytes
 16180 ;; Hardware stack levels used: 1
 16181 ;; Hardware stack levels required when called: 1
 16182 ;; This function calls:
 16183 ;;		i2_I2C_2_Master_Idle
 16184 ;; This function is called by:
 16185 ;;		i2_interrupts_clear
 16186 ;;		i2_colourclick_writetoaddr
 16187 ;; This function uses a non-reentrant model
 16188 ;;
 16189                           
 16190                           	psect	text86
 16191  00636C                     __ptext86:
 16192                           	callstack 0
 16193  00636C                     i2_I2C_2_Master_Stop:
 16194                           	callstack 14
 16195  00636C                     
 16196                           ;I2C.c: 61:   I2C_2_Master_Idle();
 16197  00636C  ECB5  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 16198  006370                     
 16199                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 16200  006370  010E               	movlb	14	; () banked
 16201  006372  85DA               	bsf	218,2,b	;volatile
 16202  006374                     
 16203                           ; BSR set to: 14
 16204  006374  0012               	return		;funcret
 16205  006376                     __end_ofi2_I2C_2_Master_Stop:
 16206                           	callstack 0
 16207                           
 16208 ;; *************** function i2_I2C_2_Master_Start *****************
 16209 ;; Defined at:
 16210 ;;		line 39 in file "I2C.c"
 16211 ;; Parameters:    Size  Location     Type
 16212 ;;		None
 16213 ;; Auto vars:     Size  Location     Type
 16214 ;;		None
 16215 ;; Return value:  Size  Location     Type
 16216 ;;                  1    wreg      void 
 16217 ;; Registers used:
 16218 ;;		wreg, status,2, status,0, cstack
 16219 ;; Tracked objects:
 16220 ;;		On entry : 0/0
 16221 ;;		On exit  : 0/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16228 ;;Total ram usage:        0 bytes
 16229 ;; Hardware stack levels used: 1
 16230 ;; Hardware stack levels required when called: 1
 16231 ;; This function calls:
 16232 ;;		i2_I2C_2_Master_Idle
 16233 ;; This function is called by:
 16234 ;;		i2_interrupts_clear
 16235 ;;		i2_colourclick_writetoaddr
 16236 ;; This function uses a non-reentrant model
 16237 ;;
 16238                           
 16239                           	psect	text87
 16240  006376                     __ptext87:
 16241                           	callstack 0
 16242  006376                     i2_I2C_2_Master_Start:
 16243                           	callstack 14
 16244  006376                     
 16245                           ;I2C.c: 41:   I2C_2_Master_Idle();
 16246  006376  ECB5  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 16247  00637A                     
 16248                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 16249  00637A  010E               	movlb	14	; () banked
 16250  00637C  81DA               	bsf	218,0,b	;volatile
 16251  00637E                     
 16252                           ; BSR set to: 14
 16253  00637E  0012               	return		;funcret
 16254  006380                     __end_ofi2_I2C_2_Master_Start:
 16255                           	callstack 0
 16256                           
 16257 ;; *************** function i2_I2C_2_Master_Idle *****************
 16258 ;; Defined at:
 16259 ;;		line 30 in file "I2C.c"
 16260 ;; Parameters:    Size  Location     Type
 16261 ;;		None
 16262 ;; Auto vars:     Size  Location     Type
 16263 ;;		None
 16264 ;; Return value:  Size  Location     Type
 16265 ;;                  1    wreg      void 
 16266 ;; Registers used:
 16267 ;;		wreg, status,2, status,0
 16268 ;; Tracked objects:
 16269 ;;		On entry : 0/0
 16270 ;;		On exit  : 0/0
 16271 ;;		Unchanged: 0/0
 16272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16277 ;;Total ram usage:        1 bytes
 16278 ;; Hardware stack levels used: 1
 16279 ;; This function calls:
 16280 ;;		Nothing
 16281 ;; This function is called by:
 16282 ;;		i2_I2C_2_Master_Start
 16283 ;;		i2_I2C_2_Master_Stop
 16284 ;;		i2_I2C_2_Master_Write
 16285 ;; This function uses a non-reentrant model
 16286 ;;
 16287                           
 16288                           	psect	text88
 16289  00616A                     __ptext88:
 16290                           	callstack 0
 16291  00616A                     i2_I2C_2_Master_Idle:
 16292                           	callstack 14
 16293  00616A                     i2l476:
 16294  00616A  010E               	movlb	14	; () banked
 16295  00616C  B5D8               	btfsc	216,2,b	;volatile
 16296  00616E  EFBB  F030         	goto	i2u700_41
 16297  006172  EFBD  F030         	goto	i2u700_40
 16298  006176                     i2u700_41:
 16299  006176  EFB5  F030         	goto	i2l476
 16300  00617A                     i2u700_40:
 16301  00617A                     
 16302                           ; BSR set to: 14
 16303  00617A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 16304  00617E  0E1F               	movlw	31
 16305  006180  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 16306  006182  A4D8               	btfss	status,2,c
 16307  006184  EFC6  F030         	goto	i2u701_41
 16308  006188  EFC8  F030         	goto	i2u701_40
 16309  00618C                     i2u701_41:
 16310  00618C  EFB5  F030         	goto	i2l476
 16311  006190                     i2u701_40:
 16312  006190                     
 16313                           ; BSR set to: 14
 16314  006190  0012               	return		;funcret
 16315  006192                     __end_ofi2_I2C_2_Master_Idle:
 16316                           	callstack 0
 16317                           
 16318                           	psect	rparam
 16319  0000                     
 16320                           	psect	temp
 16321  000056                     btemp:
 16322                           	callstack 0
 16323  000056                     	ds	1
 16324  0000                     int$flags	set	btemp
 16325  0000                     wtemp8	set	btemp+1
 16326  0000                     ttemp5	set	btemp+1
 16327  0000                     ttemp6	set	btemp+4
 16328  0000                     ttemp7	set	btemp+8
 16329                           
 16330                           	psect	idloc
 16331                           
 16332                           ;Config register IDLOC0 @ 0x200000
 16333                           ;	unspecified, using default values
 16334  200000                     	org	2097152
 16335  200000  0FFF               	dw	4095
 16336                           
 16337                           ;Config register IDLOC1 @ 0x200002
 16338                           ;	unspecified, using default values
 16339  200002                     	org	2097154
 16340  200002  0FFF               	dw	4095
 16341                           
 16342                           ;Config register IDLOC2 @ 0x200004
 16343                           ;	unspecified, using default values
 16344  200004                     	org	2097156
 16345  200004  0FFF               	dw	4095
 16346                           
 16347                           ;Config register IDLOC3 @ 0x200006
 16348                           ;	unspecified, using default values
 16349  200006                     	org	2097158
 16350  200006  0FFF               	dw	4095
 16351                           
 16352                           ;Config register IDLOC4 @ 0x200008
 16353                           ;	unspecified, using default values
 16354  200008                     	org	2097160
 16355  200008  0FFF               	dw	4095
 16356                           
 16357                           ;Config register IDLOC5 @ 0x20000A
 16358                           ;	unspecified, using default values
 16359  20000A                     	org	2097162
 16360  20000A  0FFF               	dw	4095
 16361                           
 16362                           ;Config register IDLOC6 @ 0x20000C
 16363                           ;	unspecified, using default values
 16364  20000C                     	org	2097164
 16365  20000C  0FFF               	dw	4095
 16366                           
 16367                           ;Config register IDLOC7 @ 0x20000E
 16368                           ;	unspecified, using default values
 16369  20000E                     	org	2097166
 16370  20000E  0FFF               	dw	4095
 16371                           
 16372                           	psect	config
 16373                           
 16374                           ;Config register CONFIG1L @ 0x300000
 16375                           ;	External Oscillator mode Selection bits
 16376                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 16377                           ;	Power-up default value for COSC bits
 16378                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 16379  300000                     	org	3145728
 16380  300000  AA                 	db	170
 16381                           
 16382                           ;Config register CONFIG1H @ 0x300001
 16383                           ;	unspecified, using default values
 16384                           ;	Clock Out Enable bit
 16385                           ;	CLKOUTEN = 0x1, unprogrammed default
 16386                           ;	Clock Switch Enable bit
 16387                           ;	CSWEN = 0x1, unprogrammed default
 16388                           ;	Fail-Safe Clock Monitor Enable bit
 16389                           ;	FCMEN = 0x1, unprogrammed default
 16390  300001                     	org	3145729
 16391  300001  FF                 	db	255
 16392                           
 16393                           ;Config register CONFIG2L @ 0x300002
 16394                           ;	unspecified, using default values
 16395                           ;	Master Clear Enable bit
 16396                           ;	MCLRE = 0x1, unprogrammed default
 16397                           ;	Power-up Timer Enable bit
 16398                           ;	PWRTE = 0x1, unprogrammed default
 16399                           ;	Low-power BOR enable bit
 16400                           ;	LPBOREN = 0x1, unprogrammed default
 16401                           ;	Brown-out Reset Enable bits
 16402                           ;	BOREN = 0x3, unprogrammed default
 16403  300002                     	org	3145730
 16404  300002  FF                 	db	255
 16405                           
 16406                           ;Config register CONFIG2H @ 0x300003
 16407                           ;	unspecified, using default values
 16408                           ;	Brown Out Reset Voltage selection bits
 16409                           ;	BORV = 0x3, unprogrammed default
 16410                           ;	ZCD Disable bit
 16411                           ;	ZCD = 0x1, unprogrammed default
 16412                           ;	PPSLOCK bit One-Way Set Enable bit
 16413                           ;	PPS1WAY = 0x1, unprogrammed default
 16414                           ;	Stack Full/Underflow Reset Enable bit
 16415                           ;	STVREN = 0x1, unprogrammed default
 16416                           ;	Debugger Enable bit
 16417                           ;	DEBUG = 0x1, unprogrammed default
 16418                           ;	Extended Instruction Set Enable bit
 16419                           ;	XINST = 0x1, unprogrammed default
 16420  300003                     	org	3145731
 16421  300003  FF                 	db	255
 16422                           
 16423                           ;Config register CONFIG3L @ 0x300004
 16424                           ;	WDT Period Select bits
 16425                           ;	WDTCPS = 0x1F, unprogrammed default
 16426                           ;	WDT operating mode
 16427                           ;	WDTE = OFF, WDT Disabled
 16428  300004                     	org	3145732
 16429  300004  9F                 	db	159
 16430                           
 16431                           ;Config register CONFIG3H @ 0x300005
 16432                           ;	unspecified, using default values
 16433                           ;	WDT Window Select bits
 16434                           ;	WDTCWS = 0x7, unprogrammed default
 16435                           ;	WDT input clock selector
 16436                           ;	WDTCCS = 0x7, unprogrammed default
 16437  300005                     	org	3145733
 16438  300005  FF                 	db	255
 16439                           
 16440                           ;Config register CONFIG4L @ 0x300006
 16441                           ;	unspecified, using default values
 16442                           ;	Write Protection Block 0
 16443                           ;	WRT0 = 0x1, unprogrammed default
 16444                           ;	Write Protection Block 1
 16445                           ;	WRT1 = 0x1, unprogrammed default
 16446                           ;	Write Protection Block 2
 16447                           ;	WRT2 = 0x1, unprogrammed default
 16448                           ;	Write Protection Block 3
 16449                           ;	WRT3 = 0x1, unprogrammed default
 16450                           ;	Write Protection Block 3
 16451                           ;	WRT4 = 0x1, unprogrammed default
 16452                           ;	Write Protection Block 3
 16453                           ;	WRT5 = 0x1, unprogrammed default
 16454                           ;	Write Protection Block 3
 16455                           ;	WRT6 = 0x1, unprogrammed default
 16456                           ;	Write Protection Block 3
 16457                           ;	WRT7 = 0x1, unprogrammed default
 16458  300006                     	org	3145734
 16459  300006  FF                 	db	255
 16460                           
 16461                           ;Config register CONFIG4H @ 0x300007
 16462                           ;	unspecified, using default values
 16463                           ;	Configuration Register Write Protection bit
 16464                           ;	WRTC = 0x1, unprogrammed default
 16465                           ;	Boot Block Write Protection bit
 16466                           ;	WRTB = 0x1, unprogrammed default
 16467                           ;	Data EEPROM Write Protection bit
 16468                           ;	WRTD = 0x1, unprogrammed default
 16469                           ;	Scanner Enable bit
 16470                           ;	SCANE = 0x1, unprogrammed default
 16471                           ;	Low Voltage Programming Enable bit
 16472                           ;	LVP = 0x1, unprogrammed default
 16473  300007                     	org	3145735
 16474  300007  FF                 	db	255
 16475                           
 16476                           ;Config register CONFIG5L @ 0x300008
 16477                           ;	unspecified, using default values
 16478                           ;	UserNVM Program Memory Code Protection bit
 16479                           ;	CP = 0x1, unprogrammed default
 16480                           ;	DataNVM Memory Code Protection bit
 16481                           ;	CPD = 0x1, unprogrammed default
 16482  300008                     	org	3145736
 16483  300008  FF                 	db	255
 16484                           
 16485                           ;Config register CONFIG5H @ 0x300009
 16486                           ;	unspecified, using default values
 16487  300009                     	org	3145737
 16488  300009  FF                 	db	255
 16489                           
 16490                           ;Config register CONFIG6L @ 0x30000A
 16491                           ;	unspecified, using default values
 16492                           ;	Table Read Protection Block 0
 16493                           ;	EBTR0 = 0x1, unprogrammed default
 16494                           ;	Table Read Protection Block 1
 16495                           ;	EBTR1 = 0x1, unprogrammed default
 16496                           ;	Table Read Protection Block 2
 16497                           ;	EBTR2 = 0x1, unprogrammed default
 16498                           ;	Table Read Protection Block 3
 16499                           ;	EBTR3 = 0x1, unprogrammed default
 16500                           ;	Table Read Protection Block 4
 16501                           ;	EBTR4 = 0x1, unprogrammed default
 16502                           ;	Table Read Protection Block 5
 16503                           ;	EBTR5 = 0x1, unprogrammed default
 16504                           ;	Table Read Protection Block 6
 16505                           ;	EBTR6 = 0x1, unprogrammed default
 16506                           ;	Table Read Protection Block 7
 16507                           ;	EBTR7 = 0x1, unprogrammed default
 16508  30000A                     	org	3145738
 16509  30000A  FF                 	db	255
 16510                           
 16511                           ;Config register CONFIG6H @ 0x30000B
 16512                           ;	unspecified, using default values
 16513                           ;	Boot Block Table Read Protection bit
 16514                           ;	EBTRB = 0x1, unprogrammed default
 16515  30000B                     	org	3145739
 16516  30000B  FF                 	db	255
 16517                           tosu	equ	0xFFF
 16518                           tosh	equ	0xFFE
 16519                           tosl	equ	0xFFD
 16520                           stkptr	equ	0xFFC
 16521                           pclatu	equ	0xFFB
 16522                           pclath	equ	0xFFA
 16523                           pcl	equ	0xFF9
 16524                           tblptru	equ	0xFF8
 16525                           tblptrh	equ	0xFF7
 16526                           tblptrl	equ	0xFF6
 16527                           tablat	equ	0xFF5
 16528                           prodh	equ	0xFF4
 16529                           prodl	equ	0xFF3
 16530                           indf0	equ	0xFEF
 16531                           postinc0	equ	0xFEE
 16532                           postdec0	equ	0xFED
 16533                           preinc0	equ	0xFEC
 16534                           plusw0	equ	0xFEB
 16535                           fsr0h	equ	0xFEA
 16536                           fsr0l	equ	0xFE9
 16537                           wreg	equ	0xFE8
 16538                           indf1	equ	0xFE7
 16539                           postinc1	equ	0xFE6
 16540                           postdec1	equ	0xFE5
 16541                           preinc1	equ	0xFE4
 16542                           plusw1	equ	0xFE3
 16543                           fsr1h	equ	0xFE2
 16544                           fsr1l	equ	0xFE1
 16545                           bsr	equ	0xFE0
 16546                           indf2	equ	0xFDF
 16547                           postinc2	equ	0xFDE
 16548                           postdec2	equ	0xFDD
 16549                           preinc2	equ	0xFDC
 16550                           plusw2	equ	0xFDB
 16551                           fsr2h	equ	0xFDA
 16552                           fsr2l	equ	0xFD9
 16553                           status	equ	0xFD8

Data Sizes:
    Strings     181
    Constant    0
    Data        7
    BSS         194
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    148     151
    BANK1           256     93     224
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), 
		 -> STR_8(CODE[6]), STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), 
		 -> STR_8(CODE[6]), STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[5]), 
		 -> STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), STR_6(CODE[5]), 
		 -> STR_4(CODE[4]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[5]), 
		 -> STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), STR_6(CODE[5]), 
		 -> STR_4(CODE[4]), STR_2(CODE[7]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), 
		 -> STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), 
		 -> STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2988_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    DCmotors_calibration@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    DCmotors_calibration@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    colourclick_testing@current	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(BANK1[8]), 

    colourclick_testing@initial	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(BANK1[8]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK1[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(BANK1[8]), colourclick_calibration@initial(BANK1[8]), colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK1[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK1[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK1[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _interrupts_clear->_interrupts_colour
    _interrupts_colour->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___xxtofl
    _checkbatterylevel->_ADC_getval
    _turnright->_left
    _turnleft->_left
    _right->_DCmotors_setPWM
    _left->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colour
    i2_interrupts_colour->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourclick_calibration
    _colourclick_calibration->_colourclick_testing
    _colourclick_testing->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->_left
    _turnleft->_left

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_colourclick_calibration
    _colourclick_calibration->_colourclick_testing

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0  233962
                                            146 BANK0      2     2      0
                                             67 BANK1     26    26      0
                           _ADC_init
               _DCmotors_calibration
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
                            _forward
                    _interrupts_init
                               _stop
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     934
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     934
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _interrupts_colour
 ---------------------------------------------------------------------------------
 (3) _interrupts_colour                                    1     1      0     903
                                             13 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     996
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     903
                                             11 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      93
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             19    19      0   64186
                                            144 BANK0      2     2      0
                                             50 BANK1     17    17      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
                _colourclick_testing
 ---------------------------------------------------------------------------------
 (2) _colourclick_testing                                 56    52      4   62066
                                            138 BANK0      6     2      4
                                              0 BANK1     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    10     26   61205
                                            104 BANK0     34     8     26
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   59069
                                             96 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   58521
                                             72 COMRAM     4     4      0
                                             68 BANK0     28    22      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2732
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   40040
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             15 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             48 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     517
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4367
                                             64 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    7663
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    5397
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    2077
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             27 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              9 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              9 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1905
                                             16 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     276
                                             10 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6   91856
                                             71 COMRAM     2     2      0
                                             16 BANK0     18    12      6
                             ___flge
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    3826
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              5     1      4    4006
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2499
                                             22 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC                                 2     0      2    1500
                                             20 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (3) _colourclick_readR                                    7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readG                                    7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readC                                    7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readB                                    7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      31
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                             10 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      93
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    6044
                                             48 COMRAM    12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3263
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                             10 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              9 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_calibration                                 6     2      4   63370
                                             71 COMRAM     4     0      4
                                             16 BANK0      2     2      0
                           _adjdelay
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6   28127
                                             10 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6   27317
                                             10 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                               12     6      6    3990
                                             34 COMRAM    12     6      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                17    11      6   21251
                                             64 COMRAM     7     1      6
                                              0 BANK0     10    10      0
                    _DCmotors_setPWM
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1286
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3773
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    8366
                                             48 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3802
                                             48 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _stop                                                 4     0      4    7364
                                             34 COMRAM     4     0      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    3038
                                             23 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     802
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     865
                                             15 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _adjdelay                                             4     4      0     134
                                              9 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _LowISR                                              3     3      0       0
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             1     1      0     244
                                              5 COMRAM     1     1      0
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (13) i2_interrupts_clear                                  0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_interrupts_colour
 ---------------------------------------------------------------------------------
 (14) i2_interrupts_colour                                 1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (15) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (17) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_calibration
     _adjdelay
     _stop
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___xxtofl
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___flge
     _colourcards_normaliseRGBC
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _reverse
       _DCmotors_setPWM
     _stop
     _turnleft
     _turnright
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
     _colourclick_testing
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isdigit
             _isupper
             _stoa
               _fputc
               _strlen
             _strncmp
             _tolower
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colour
         _colourclick_writetoaddr
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colour
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      3C      10       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5D      E0       7       87.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      97       5       94.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     208       8        0.0%
DATA                 0      0     208       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 13 12:19:18 2021

      colourcards_normaliseRGBC@rel 0033         colourclick_readRGBC2@tmpval 0017  
                      ___fldiv@aexp 0030                        ___fldiv@bexp 002F  
                      ___fldiv@sign 0028                                  l71 41D4  
                                l75 41F0               __end_of_DCmotors_init 5D7C  
                      ___awdiv@sign 0015                                  bsr 000FE0  
               ___wmul@multiplicand 000C                                 l130 6296  
                               l133 5E68                                 l127 61DA  
                               l401 62F4                                 l402 62FA  
                               l235 2252                                 l341 621C  
                               l350 5D2A                                 l238 22A6  
                               l431 6336                                 l344 5C3A  
                               l440 631E                                 l353 5CDA  
                               l434 636A                                 l338 603E  
                               l347 5C8A                                 l371 4DE6  
                               l356 5AA0                                 l364 4A14  
                               l372 4D16                                 l701 4B68  
                               l437 6310                                 l533 625C  
                               l381 53DE                                 l446 61FC  
                               l542 62CE                                 l374 4D24  
                               l711 5DCA                                 l279 475A  
                               l551 6116                                 l367 4CB6  
                               l800 61B6                                 l545 62E2  
                               l369 4CC4                                 l473 6140  
                               l650 3DD0                                 l706 5E1A  
                               l714 4B6A                                 l482 6356  
                               l378 4DEE                                 l643 5D7A  
                               l491 632A                                 l396 62B0  
                               l732 4E0E                                 l724 4C90  
                               l476 6142                                 l653 623A  
                               l485 6360                                 l734 4E84  
                               l718 4B86                                 l494 5FC6  
                               l743 4F20                                 l719 4BEC  
                               l399 62E6                                 l655 623C  
                               l479 6168                                 l663 58A4  
                               l671 5816                                 l488 634C  
                               l729 4CB4                                 l690 3BFC  
                               l914 45E4                                 l678 5914  
                               l679 5916                                 l927 48BE  
                               l689 3BFA                                 l698 4B40  
                               _abs 5FC8                                 _pad 556E  
                      ___awmod@sign 000F                                 wreg 000FE8  
              ?_colourclick_testing 00EA                        ___flmul@aexp 0025  
                      ___flmul@bexp 002A                        ___flmul@sign 0024  
                      ___flmul@temp 002F               ?_colourclick_readRGBC 0015  
                      ___flmul@prod 002B                 __size_of_ADC_getval 0018  
                      ___fltol@exp1 0013                                l1031 556C  
                              ?_abs 001C                                l1044 56DE  
                              l1070 512A                                l1065 50E4  
                              l1330 2A36                                l1074 60AE  
                              l1059 5788                                l1421 300E  
                              l1414 2E18                                l1431 313E  
                              l1423 3086                                l1328 2A82  
                              l1424 3074                                l1345 2B9C  
                              l1337 2D52                                l1329 2A70  
                              l1521 55B2                                l1097 5026  
                              l1354 2C6C                                l1418 317C  
                              l1370 5EFC                                l1355 2C5A  
                              l1524 55F4                                l1532 35B6  
                              l1462 3EC0                                l1382 3516  
                              l1526 562E                                l1534 35BE  
                              l1702 597C                                l1455 3E28  
                              l1703 5984                                l1384 3376  
                              l1552 37F4                                l1616 16E4  
                              l1393 33BC                                l1721 6006  
                              l1713 5228                                l1458 3F84  
                              l1570 1B10                                l1395 3434  
                              l1387 333A                                l1396 3422  
                              l1820 5BEA                                l1652 4344  
                              l1469 3F1C                                l1805 5F40  
                              l1718 5FFE                                l1814 5A42  
                              l1654 434C                                l1478 5B48  
                              l1663 440C                                l1752 4128  
                              l1808 6388                                l1664 4454  
                              l1824 530A                                l1761 394A  
                              l1834 59DC                                l1588 12A4  
                              l1668 445C                                l1749 4120  
                              l1758 3A06                                l1782 6076  
                              l1839 59E4                                l1695 2752  
                              l1687 2892                                l7000 2A90  
                              l1768 60E6                                l1776 5B9A  
                              l7010 2AD2                                l7002 2AA0  
                              l6300 4EF6                                l7020 2B00  
                              l7012 2AE0                                l6220 6128  
                              l1797 54A8                                l6302 4F0E  
                              l7030 2B6C                                l7022 2B0A  
                              l7014 2AEC                                l7006 2AB4  
                              l7102 5EFE                                l7110 5B9C  
                              l6222 612A                                ?_pad 001A  
                              l6320 6298                                l6304 4F10  
                              l7032 2B7C                                l7016 2AF0  
                              l7008 2AC4                                l7024 2B10  
                              l7200 4868                                l7104 5F0A  
                              l7112 5BA8                                l7120 6040  
                              l8000 16AC                                l6224 612C  
                              l6216 6118                                l6322 62A2  
                              l7050 2BFE                                l7042 2BD6  
                              l7026 2B36                                l7034 2B8C  
                              l7018 2AFE                                l6250 62F8  
                              l7210 317E                                l7130 445E  
                              l7202 486E                                l7106 5F1C  
                              l7114 5BAC                                l8010 1764  
                              l8002 16BC                                l6226 612E  
                              l6218 6122                                l6324 62AA  
                              l6260 4DF2                                l7124 6192  
                              l7052 2C06                                l7044 2BE0  
                              l7036 2BB2                                l7028 2B6A  
                              l7060 2C2A                                l7300 33AC  
                              l7220 31BA                                l7212 318A  
                              l7140 44A2                                l7132 4462  
                              l7204 487E                                l7108 5F20  
                              l7116 5BDE                                l8100 1A38  
                              l8012 1772                                l8020 17AE  
                              l8004 16D0                                l6326 62AC  
                              l6270 4E2A                                l6262 4E0A  
                              l7126 61AE                                l7070 2C7C  
                              l7062 2C2E                                l7054 2C0A  
                              l7046 2BEE                                l7038 2BC2  
                              l6254 632C                                l6350 5D4A  
                              l6342 5D2E                                l7310 33EC  
                              l7302 33BA                                l7230 31EA  
                              l7222 31CA                                l7214 3198  
                              l7150 44F8                                l7142 44C2  
                              l7134 4470                                l7206 489E  
                              l8110 1A74                                l8102 1A3E  
                              l8030 17EA                                l8022 17C2  
                              l8014 1786                                l8006 16DC  
                              l6328 62AE                                l6280 4E66  
                              l6272 4E2C                                l7080 2CE2  
                              l7072 2C88                                l7064 2C3C  
                              l7056 2C1A                                l7048 2BF0  
                              l7400 2EA8                                l6256 6362  
                              l6360 5D54                                l6352 5D4C  
                              l6344 5D42                                l6248 62E4  
                              l7320 345E                                l7312 341A  
                              l7304 33CC                                l7240 3220  
                              l7232 31F0                                l7224 31CC  
                              l7216 319A                                l8200 4064  
                              l7160 457A                                l7152 450C  
                              l7144 44C6                                l7136 4490  
                              l8120 1AC6                                l8112 1A7A  
                              l8104 1A50                                l8032 17F6  
                              l8024 17D0                                l8040 1816  
                              l8016 1798                                l8008 1700  
                              l9000 423C                                l6290 4EB2  
                              l6282 4E7E                                l6274 4E3C  
                              l7090 2D2A                                l7082 2CF2  
                              l7074 2C96                                l7066 2C52  
                              l7058 2C1C                                l7410 2EEA  
                              l7402 2EB4                                l6258 62FC  
                              l6370 5D72                                l6362 5D56  
                              l6354 5D4E                                l6346 5D46  
                              l7330 34D6                                l7322 3488  
                              l7306 33DA                                l7250 3260  
                              l7242 3230                                l7234 31FE  
                              l7218 31AA                                l7226 31D4  
                              l8210 40F2                                l7170 45C4  
                              l7162 457C                                l7154 451A  
                              l7146 44D2                                l7138 4494  
                              l8122 1AD2                                l8114 1A80  
                              l8106 1A5C                                l8050 189C  
                              l8042 1828                                l8034 1806  
                              l8026 17E0                                l8018 17A6  
                              l9002 4250                                l6292 4EC0  
                              l6284 4E92                                l6276 4E4A  
                              l6268 4E1C                                l7500 54EA  
                              l7092 2D2C                                l7084 2D12  
                              l7076 2CD0                                l7420 2F4C  
                              l7412 2EFA                                l7404 2EC2  
                              l6372 5D76                                l6364 5D60  
                              l6356 5D50                                l6348 5D48  
                              l6380 624C                                l7340 350C  
                              l7332 34F2                                l7316 3444  
                              l7324 348C                                l7308 33DE  
                              l7252 3270                                l7260 3290  
                              l7244 3232                                l7236 3200  
                              l7228 31E4                                l8212 4104  
                              l8204 409E                                l7164 458E  
                              l7156 452C                                l7148 44F0  
                              l7180 478E                                l8124 1ADA  
                              l8108 1A64                                l8060 1916  
                              l8052 18D0                                l8044 183A  
                              l8036 180A                                l8028 17E4  
                              l8140 42F0                                l8220 5254  
                              l8300 2456                                l9004 426A  
                              l6294 4ED2                                l6286 4EA0  
                              l6278 4E5C                                l7510 5520  
                              l7502 54FC                                l7094 2D32  
                              l7086 2D16                                l7078 2CD2  
                              l7430 2FF4                                l7422 2F68  
                              l7414 2F14                                l7406 2ECE  
                              l7350 2D60                                l6366 5D62  
                              l6358 5D52                                l6382 6256  
                              l6374 623E                                l6390 6224  
                              l7334 34F6                                l7326 34A6  
                              l7318 3450                                l7270 32CE  
                              l7262 32A0                                l7254 3278  
                              l7238 3210                                l7246 323A  
                              l7158 455A                                l7166 4594  
                              l7190 47E6                                l7182 4792  
                              l7174 475C                                l8126 1AEA  
                              l8118 1AB4                                l8070 195A  
                              l8062 1928                                l8054 18D8  
                              l8046 183E                                l8038 1810  
                              l8142 42F8                                l8134 42C4  
                              l8230 52A6                                l8310 2522  
                              l8302 248C                                l9006 42A2  
                              l6296 4EDC                                l6288 4EA2  
                              l7512 5536                                l7504 5504  
                              l7520 554C                                l7096 2D40  
                              l7088 2D24                                l7440 3030  
                              l7432 2FFE                                l7424 2F92  
                              l7416 2F24                                l7408 2EDE  
                              l7360 2DA0                                l7352 2D6E  
                              l6368 5D6E                                l6384 6258  
                              l6376 6248                                l6392 6234  
                              l7336 3504                                l7328 34BC  
                              l7280 3316                                l7272 32DE  
                              l7264 32A0                                l7256 327C  
                              l7248 324A                                l8240 6352  
                              l8208 40E0                                l7168 45A4  
                              l7192 47FA                                l7184 47A0  
                              l7176 4760                                l8128 1AF0  
                              l8080 199A                                l8072 196C  
                              l8064 1936                                l8048 1844  
                              l8056 18DC                                l8160 43B0  
                              l8152 436E                                l8144 430C  
                              l8136 42D6                                l8232 52B8  
                              l8224 5260                                l8320 25CE  
                              l8312 256A                                l8304 249C  
                              l9008 42B6                                l6298 4EF4  
                              l7522 555C                                l7514 553E  
                              l7506 550C                                l8410 3C7C  
                              l7098 2D42                                l7450 30A2  
                              l7442 303E                                l7434 300C  
                              l7426 2FC8                                l7418 2F40  
                              l7370 2DD0                                l7362 2DA6  
                              l7354 2D70                                l6386 625A  
                              l6378 624A                                l7338 350A  
                              l7290 3364                                l7282 332A  
                              l7274 32EE                                l8250 6358  
                              l8242 6322                                l8402 62CE  
                              l7194 4808                                l7186 47C0  
                              l7178 476E                                l7530 5634  
                              l7602 6078                                l7610 4F22  
                              l8090 19E2                                l8082 19A2  
                              l8074 1974                                l8066 1946  
                              l8058 18FA                                l8170 441E  
                              l8162 43E6                                l8154 4382  
                              l8146 4314                                l8138 42DE  
                              l8234 52E4                                l8226 526E  
                              l8218 522A                                l8330 2666  
                              l8322 25DC                                l8306 24D2  
                              l7524 5564                                l7516 5540  
                              l7508 551A                                l8412 3CC2  
                              l6900 2894                                l7460 310C  
                              l7452 30B0                                l7444 306C  
                              l7436 301E                                l7428 2FD6  
                              l7380 2E08                                l7372 2DD2  
                              l7364 2DB6                                l7356 2D80  
                              l7348 2D54                                l8420 3DD4  
                              l6388 621E                                l7292 3374  
                              l7284 3338                                l7276 32FE  
                              l7268 32B4                                l8260 5F9C  
                              l8252 635C                                l8244 6326  
                              l8404 62DE                                l8180 3F9E  
                              l7196 4836                                l7188 47DE  
                              l7540 5664                                l7532 5642  
                              l7604 608E                                l7620 4F78  
                              l7612 4F38                                l8092 19FE  
                              l8084 19AA                                l8076 1984  
                              l8068 194A                                l8172 4432  
                              l8164 43EA                                l8156 4386  
                              l8148 4322                                l8228 5286  
                              l8324 260C                                l8316 25A2  
                              l8308 24FA                                l8500 5B36  
                              l7518 5546                                l8414 3CE2  
                              l8406 3BFE                                l6910 28D0  
                              l6902 28A0                                l7470 3162  
                              l7462 3126                                l7454 30DA  
                              l7438 302C                                l7390 2E58  
                              l7382 2E28                                l7374 2DE2  
                              l7366 2DBC                                l7358 2D90  
                              l8422 3DE4                                l7294 3386  
                              l7286 3344                                l7278 3306  
                              l8262 5FC2                                l8254 5F88  
                              l8238 634E                                l8246 6344  
                              l8510 60FE                                l8182 3FA2  
                              l7198 4856                                l7550 56AA  
                              l7542 5676                                l7534 564A  
                              l7606 609E                                l7622 4F88  
                              l7702 59E6                                l7710 59BC  
                              l8094 1A06                                l8086 19B6  
                              l8078 198C                                l8174 4436  
                              l8166 43EE                                l8158 43A4  
                              l8334 26DC                                l8318 25B4  
                              l8270 22D0                                l8416 3CFE  
                              l8408 3C1A                                l8600 58AC  
                              l6920 2900                                l6912 28E0  
                              l6904 28AE                                l7464 3142  
                              l7472 3168                                l7448 3096  
                              l7456 30DE                                l7392 2E62  
                              l7384 2E38                                l7376 2DF2  
                              l7368 2DC2                                l8440 3EAA  
                              l8432 3E62                                l8424 3DF2  
                              l8520 3ADC                                l8512 3A08  
                              l7296 339C                                l7288 3362  
                              l8264 5FC4                                l8256 5F8C  
                              l8248 6348                                l8504 60E8  
                              l8192 4006                                l8184 3FC2  
                              l8176 3F86                                l7800 3710  
                              l7560 56D6                                l7552 56B2  
                              l7544 567E                                l7536 564E  
                              l7528 5630                                l7480 5EC8  
                              l7632 4FB2                                l7624 4F8C  
                              l7616 4F4C                                l7720 386C  
                              l7704 59F6                                l7712 59CE  
                              l8088 19BC                                l8096 1A0C  
                              l8352 27E4                                l8336 26EE  
                              l8344 2766                                l8328 2638  
                              l8280 2324                                l8272 22DE  
                              l7490 54C4                                l8418 3D68  
                              l8610 58FC                                l8602 58C4  
                              l6930 292A                                l6922 2912  
                              l6914 28E2                                l6906 28B0  
                              l7474 316C                                l7466 3152  
                              l7458 30F8                                l7394 2E78  
                              l7378 2E02                                l8450 3F2A  
                              l8442 3EB6                                l8434 3E6A  
                              l8426 3E38                                l8530 3B42  
                              l8522 3AFA                                l8514 3A72  
                              l7298 33A2                                l8258 5F94  
                              l8506 60EC                                l8194 401C  
                              l8186 3FFC                                l8178 3F9A  
                              l7810 3782                                l7802 372E  
                              l7554 56B8                                l7546 5686  
                              l7538 565C                                l7570 574C  
                              l7650 5016                                l7642 4FDA  
                              l7634 4FBC                                l7626 4F9A  
                              l7618 4F76                                l7730 393A  
                              l7722 3880                                l7706 5986  
                              l8098 1A1E                                l8370 2880  
                              l8354 280C                                l8362 283C  
                              l8346 278E                                l8338 2722  
                              l8290 23C2                                l8282 2332  
                              l8274 22F0                                l7492 54C8  
                              l7484 54AA                                l8604 58D0  
                              l6932 293A                                l6940 2964  
                              l6924 2914                                l6908 28C0  
                              l6916 28EA                                l7580 5028  
                              l7468 3160                                l7396 2E84  
                              l7388 2E4C                                l8460 3F72  
                              l8452 3F2C                                l8444 3EF2  
                              l8436 3E76                                l8428 3E4E  
                              l8540 3B92                                l8532 3B4E  
                              l8524 3B12                                l8516 3AB8  
                              l8620 461E                                l8380 5C32  
                              l8700 57E6                                l8508 60FA  
                              l9164 404E                                l8196 4024  
                              l8188 4000                                l7660 559E  
                              l7820 37BC                                l7812 3790  
                              l7804 3748                                l7548 5694  
                              l7556 56BE                                l7572 575C  
                              l7564 56E0                                l7644 4FE6  
                              l7636 4FC6                                l7740 39F6  
                              l7724 388E                                l7732 396E  
                              l7716 37F6                                l7900 1170  
                              l8364 284A                                l8356 281A  
                              l8348 27C4                                l8284 235A  
                              l8276 22F4                                l8268 22A8  
                              l8612 627E                                l7494 54D6  
                              l7486 54AE                                l8606 58DC  
                              l6950 299C                                l6942 2974  
                              l6934 294A                                l6926 291A  
                              l6918 28FA                                l7590 50B2  
                              l7582 5056                                l7398 2E9C  
                              l8462 3F74                                l8454 3F30  
                              l8446 3EFE                                l8438 3EA8  
                              l8542 3BA0                                l8534 3B5A  
                              l8526 3B1E                                l8518 3AC8  
                              l8550 4A46                                l8622 4632  
                              l8614 45E6                                l8390 5CDC  
                              l8630 48C6                                l8702 57FE  
                              l7750 5B4E                                l8198 402C  
                              l7670 5602                                l7662 55AA  
                              l7654 556E                                l7814 3796  
                              l7822 37CC                                l7806 3762  
                              l7558 56CE                                l7574 5780  
                              l7566 570E                                l7478 5EB8  
                              l7646 4FF6                                l7734 39AA  
                              l7718 3816                                l7902 1176  
                              l7910 123E                                l7830 0ED2  
                              l8358 282E                                l8294 240E  
                              l8286 2394                                l8278 231C  
                              l8470 592E                                l8710 5322  
                              l7496 54DE                                l7488 54BC  
                              l8608 58E4                                l6960 29B0  
                              l6952 29A0                                l6944 2986  
                              l6936 295A                                l6928 2928  
                              l7592 50C4                                l7584 5066  
                              l8456 3F54                                l8448 3F0C  
                              l8544 3BB0                                l8528 3B36  
                              l8536 3B62                                l8560 4AAC  
                              l8552 4A56                                l8800 4C2A  
                              l8624 4692                                l8616 45F6  
                              l7760 6142                                l8392 5D22  
                              l8384 5C3C                                l8640 4914  
                              l8632 48DE                                l7744 60B0  
                              l7752 5B62                                l7672 5616  
                              l7664 55BE                                l7656 557C  
                              l7816 37A8                                l7808 3770  
                              l7576 5786                                l7568 571E  
                              l7648 5006                                l7680 512C  
                              l7736 39BE                                l7728 38FE  
                              l7920 127E                                l7912 124E  
                              l7904 11D0                                l7840 0F1E  
                              l7832 0EE0                                l8288 23B4  
                              l8296 2420                                l8368 2858  
                              l8472 595C                                l8720 53BA  
                              l8712 5332                                l8704 6312  
                              l8376 6200                                l8480 5E36  
                              l7498 54E2                                l6970 29C4  
                              l6962 29B4                                l6954 29A4  
                              l6946 2994                                l6938 295C  
                              l7594 50D2                                l7586 5094  
                              l8458 3F64                                l8546 3BB6  
                              l8538 3B7A                                l8562 4AC4  
                              l8554 4A6A                                l8570 4AF0  
                              l8810 4C9E                                l8802 4C2C  
                              l8626 46F6                                l8618 460A  
                              l8474 61DE                                l7762 6152  
                              l8386 5C82                                l8378 5BEC  
                              l8490 5A44                                l8650 495E  
                              l8642 492C                                l8634 48EE  
                              l7754 5B90                                l6890 5404  
                              l7666 55D2                                l7658 5590  
                              l7818 37B4                                l7770 3580  
                              l7682 514C                                l7738 39E6  
                              l7930 12C2                                l7922 1298  
                              l7914 1252                                l7906 1204  
                              l7850 0F64                                l7842 0F30  
                              l7834 0EE8                                l7826 0EB8  
                              l8298 2446                                l8466 5918  
                              l8722 53C6                                l8714 5346  
                              l8706 6318                                l8730 6026  
                              l8482 5E40                                l6980 29D8  
                              l6972 29C8                                l6964 29B8  
                              l6956 29A8                                l6948 2998  
                              l7596 5122                                l7588 50A4  
                              l8580 4B56                                l8572 4B08  
                              l8564 4AD0                                l8556 4A88  
                              l8548 4A16                                l8812 4CAC  
                              l8804 4C44                                l8396 5C8C  
                              l8652 4976                                l8660 49A0  
                              l8644 492E                                l8636 48F0  
                              l8628 48C0                                l8900 1FAC  
                              l7756 5B94                                l7748 5B4A  
                              l7676 5FC8                                l6892 540E  
                              l7668 55D6                                l7780 35D8  
                              l7772 358E                                l7764 3518  
                              l7684 518A                                l7692 51CA  
                              l7932 12D4                                l7940 1332  
                              l7916 1264                                l7924 12B0  
                              l7908 120C                                l7852 0F68  
                              l7844 0F3E                                l7836 0F0C  
                              l7828 0EC2                                l8468 5920  
                              l8492 5AF8                                l8716 535A  
                              l8708 530C                                l8740 4CCC  
                              l8732 6030                                l8724 6008  
                              l8484 5E4A                                l8476 5E1C  
                              l8820 61C4                                l6990 2A50  
                              l6982 2A02                                l6974 29CC  
                              l6966 29BC                                l6958 29AC  
                              l7598 5128                                l8582 4B66  
                              l8574 4B20                                l8566 4ADC  
                              l8558 4AA0                                l8814 4CB2  
                              l8806 4C62                                l8398 5CD2  
                              l8670 49F0                                l8662 49B2  
                              l8654 4982                                l8638 4908  
                              l8646 494A                                l8590 5860  
                              l8910 205A                                l7678 5FE2  
                              l6894 542C                                l6886 53E0  
                              l7790 3604                                l7782 35E6  
                              l7774 3590                                l7766 3538  
                              l7694 51DC                                l7686 51B2  
                              l7950 1370                                l7942 133A  
                              l7934 12F0                                l7918 1276  
                              l7870 101E                                l7862 0FCE  
                              l7854 0F6C                                l7846 0F50  
                              l7838 0F16                                l8494 5B0A  
                              l8718 536E                                l8750 4D10  
                              l8742 4CCE                                l8734 603A  
                              l8726 600C                                l8486 5E54  
                              l8478 5E26                                l8830 61D2  
                              l8822 61C8                                l6992 2A54  
                              l6984 2A1E                                l6976 29D0  
                              l6968 29C0                                l8576 4B2C  
                              l8568 4AE8                                l8680 5D8E  
                              l8808 4C7C                                l8664 49B4  
                              l8656 499A                                l8648 495C  
                              l8592 586C                                l8584 5818  
                              l8912 2082                                l8920 20BC  
                              l8904 1FC4                                l8840 1B16  
                              l6896 5462                                l6888 53F2  
                              l7792 3686                                l7784 35EC  
                              l7776 35AA                                l7768 3560  
                              l7688 51BE                                l7952 1382  
                              l7960 13C2                                l7944 134C  
                              l7936 1326                                l7880 10A2  
                              l7864 0FE0                                l7848 0F5C  
                              l7856 0F72                                l8496 5B12  
                              l8760 4D4A                                l8744 4CE8  
                              l8736 4CB6                                l8728 6016  
                              l8488 5E5E                                l8832 61D4  
                              l8824 61CA                                l8816 61B8  
                              l6994 2A62                                l6986 2A2E  
                              l6978 29D4                                l8578 4B3C  
                              l8682 5DAE                                l8666 49CC  
                              l8674 49F6                                l8586 583C  
                              l8594 5874                                l8690 578A  
                              l8930 218A                                l8922 20EE  
                              l8914 209A                                l8906 1FF6  
                              l8850 1BF0                                l8842 1B36  
                              l7794 368C                                l7786 35F4  
                              l7778 35C6                                l7698 5220  
                              l7970 14AA                                l7962 13CA  
                              l7954 1390                                l7946 135E  
                              l7938 132E                                l7882 10B4  
                              l7866 0FFC                                l7858 0F98  
                              l7874 1046                                l8498 5B1A  
                              l8770 4DA0                                l8762 4D60  
                              l8746 4CF4                                l8738 4CC6  
                              l8834 61D6                                l8826 61CC  
                              l8818 61BE                                l6996 2A64  
                              l6988 2A44                                l8684 5DCC  
                              l8676 49FC                                l8668 49D8  
                              l8596 588C                                l8588 5854  
                              l8692 57AE                                l8940 21EE  
                              l8924 2120                                l8932 2194  
                              l8908 2028                                l8852 1C22  
                              l8844 1B68                                l8860 1C94  
                              l7796 3692                                l7788 35FE  
                              l7980 1568                                l7972 14DE  
                              l7964 13DA                                l7956 13A8  
                              l7948 136C                                l7884 10D0  
                              l7876 106C                                l7892 10EC  
                              l7868 1014                                l8780 4DE8  
                              l8772 4DB6                                l8764 4D6C  
                              l8756 4D26                                l8748 4D0E  
                              l8836 61D8                                l8828 61CE  
                              l8598 58A6                                l6998 2A6E  
                              l8686 5DDE                                l8678 5D7C  
                              l8790 4BBE                                l8782 4B6A  
                              l8694 57C6                                l8950 2254  
                              l8942 2212                                l8934 21AC  
                              l8926 2152                                l8870 1D80  
                              l8862 1CC6                                l8854 1C54  
                              l8846 1B9A                                l8838 1B12  
                              l7798 36F6                                l7990 1604  
                              l7982 157E                                l7966 13EE  
                              l7974 14E4                                l7958 13BA  
                              l7894 1106                                l8774 4DD0  
                              l8766 4D82                                l8758 4D32  
                              l8688 5DFE                                l8792 4BFA  
                              l8784 4B78                                l8696 57D2  
                              l8952 2286                                l8944 2234  
                              l8936 21C0                                l8928 2184  
                              l8880 1E4C                                l8872 1DB2  
                              l8864 1CF8                                l8856 1C5E  
                              l8848 1BCC                                l7992 165A  
                              l7984 15B0                                l7976 1502  
                              l7968 1452                                l8776 4DD2  
                              l8768 4D98                                l8960 412A  
                              l8794 4C08                                l8786 4B88  
                              l8698 57DE                                l8946 2246  
                              l8938 21E2                                l8890 1EEA  
                              l8866 1D2A                                l7994 1660  
                              l7986 15C0                                l7978 1536  
                              l7898 113C                                l8778 4DD6  
                              l8970 4192                                l8962 4166  
                              l8796 4C0E                                l8788 4BA0  
                              l8948 224A                                l8892 1F1C  
                              l8884 1E82                                l8876 1DE8  
                              l8868 1D4E                                l7996 1694  
                              l7988 15D0                                l8980 41B4  
                              l8972 419E                                l8964 416E  
                              l8798 4C10                                l8894 1F4E  
                              l8878 1E1A                                l8958 22A2  
                              l7998 16A8                                l8990 41F2  
                              l8982 41B8                                l8974 41A6  
                              l8966 417A                                STR_1 0E01  
                              l8896 1F76                                l8888 1EB8  
                              l8992 41F8                                l8984 41BC  
                              l8976 41AA                                l8968 418A  
                              STR_2 0E80                                l8898 1F8E  
                              l8994 4212                                l8986 41C0  
                              l8978 41AE                                STR_4 0EAF  
                              l8996 4216                                l8988 41E2  
                              l8998 422A                                STR_8 0E94  
                      _BAUD4CONbits 000EE9                                _LATE 000F7D  
                              _LATG 000F7F                                _T2PR 000FBC  
                              u9001 44CC                                u9010 44F0  
                              u9011 44EC                                u7500 4E3C  
                              u9020 451A                                u9100 487E  
                              u7501 4E38                                u9021 4516  
                              u9101 487A                                u7510 4E5C  
                              u9110 3198                                u9030 455A  
                              u7511 4E58                                u9111 3194  
                              u9031 4556                                u7520 4E92  
                              u9200 3338                                u9120 31AA  
                              u9040 45A4                                u7521 4E8E  
                              u9201 3334                                u9121 31A6  
                              u9041 45A0                                u7530 4EA0  
                              u9210 3362                                u9130 31BA  
                              u9050 476E                                u7531 4E9C  
                              u9211 335E                                u9131 31B6  
                              u9051 476A                                u7540 4EB2  
                              u9300 345E                                u9220 3386  
                              u9140 31FE                                u9060 47A0  
                              u8500 53F2                                u7541 4EAE  
                              u9301 345A                                u9221 3382  
                              u9141 31FA                                u9061 479C  
                              u8501 53EE                                u7550 4ED2  
                              u7470 62F4                                u9310 34A6  
                              u9230 339C                                u9150 3210  
                              u9070 47DE                                u8510 5404  
                              u7551 4ECE                                u7471 62F0  
                              u9311 34A2                                u9231 3398  
                              u9151 320C                                u9071 47DA  
                              u8511 5400                                u7560 4F20  
                              u7480 4E1C                                u8600 294A  
                              u9400 2E28                                u9320 34D6  
                              u9240 33BA                                u9160 3220  
                              u9080 4808                                u8520 542C  
                              u7561 4F1C                                u7481 4E18  
                              u8601 2946                                u9401 2E24  
                              u9321 34D2                                u9241 33B6  
                              u9161 321C                                u9081 4804  
                              u8521 5428                                u7490 4E2A  
                              u8610 2986                                u9410 2E38  
                              u7570 6234                                u9330 3504  
                              u9250 33DA                                u9170 3260  
                              u9090 4836                                u8530 5462  
                              u7491 4E26                                u8611 2982  
                              u9411 2E34                                u7571 6230  
                              u9331 3500                                u9251 33D6  
                              u9171 325C                                u9091 4832  
                              u8531 545E                                u8700 2AA0  
                              u8620 2994                                u8540 28AE  
                              u9500 30F8                                u9420 2FB2  
                              u9340 2D6E                                u9260 33EC  
                              u9180 32A0                                u8701 2A9C  
                              u8621 2990                                u8541 28AA  
                              u9501 30F4                                u9341 2D6A  
                              u9261 33E8                                u9181 329C  
                              u8710 2AD2                                u8630 2A02  
                              u8550 28C0                                u9510 3126  
                              u9430 300C                                u9350 2D80  
                              u9270 341A                                u9190 3316  
                              u8711 2ACE                                u8631 29FE  
                              u8551 28BC                                u9511 3122  
                              u9431 3008                                u9351 2D7C  
                              u9271 3416                                u9191 3312  
                              u8800 2C1A                                u8720 2AE0  
                              u8640 2A1A                                u8560 28D0  
                              u9520 3160                                u9440 302C  
                              u9360 2D90                                u9280 3430  
                              u9600 565C                                u8801 2C16  
                              u8721 2ADC                                u8641 2A14  
                              u8561 28CC                                u9521 315C  
                              u9441 3028                                u9425 2FA8  
                              u9361 2D8C                                u9281 342C  
                              u9601 5658                                u9530 54BC  
                              u8810 2C2A                                u8730 2AFE  
                              u8650 2A1C                                u8570 2912  
                              u9450 303E                                u9370 2DD0  
                              u9290 3444                                u9610 5676  
                              u9531 54B8                                u8811 2C26  
                              u8731 2AFA                                u8571 290E  
                              u9451 303A                                u9371 2DCC  
                              u9291 3440                                u9611 5672  
                              u9540 54D6                                u8900 2D12  
                              u8820 2C3C                                u8740 2B36  
                              u8660 2A44                                u8580 2928  
                              u9700 50B2                                u9460 306C  
                              u9380 2DE2                                u9620 5694  
                              u9541 54D2                                u8901 2D0E  
                              u8821 2C38                                u8741 2B32  
                              u8661 2A40                                u8581 2924  
                              u9701 50AE                                u9461 3068  
                              u9381 2DDE                                u9621 5690  
                              u9550 54FC                                u8910 2D24  
                              u8830 2C52                                u8750 2B7C  
                              u8670 2A62                                u8590 293A  
                              u9710 50D2                                u9470 3082  
                              u9390 2DF2                                u9630 56AA  
                              u9551 54F8                                u8911 2D20  
                              u8831 2C4E                                u8751 2B78  
                              u8671 2A5E                                u8591 2936  
                              u9711 50CE                                u9471 307E  
                              u9391 2DEE                                u9631 56A6  
                              u9560 551A                                u8920 2D40  
                              u8840 2C68                                u8760 2BB2  
                              u8680 2A82                                u9720 5122  
                              u9480 3096                                u9640 56CE  
                              u9800 5006                                u9561 5516  
                              u8921 2D3C                                u8841 2C64  
                              u8761 2BAE                                u8681 2A7E  
                              u9721 511E                                u9481 3092  
                              u9641 56CA                                u9801 5002  
                              u9570 5536                                u8850 2C7C  
                              u8770 2BC2                                u8690 2A90  
                              u9490 30B0                                u8930 5F40  
                              u9810 557C                                u9650 570E  
                              u9730 608E                                u9571 5532  
                              u8851 2C78                                u8771 2BBE  
                              u8691 2A8C                                u9491 30AC  
                              u8931 5F3C                                u9811 5578  
                              u9651 570A                                u9731 608A  
                              u9580 555C                                u8860 2C96  
                              u8780 2BEE                                u8940 5BCE  
                              u9820 559E                                u9660 574C  
                              u9740 4F38                                u9581 5558  
                              u8861 2C92                                u8781 2BEA  
                              u9821 559A                                u9661 5748  
                              u9741 4F34                                u8870 2CD0  
                              u8790 2BFE                                u8950 5BDE  
                              u9830 55F4                                u9590 5642  
                              u9670 5780                                u9750 4F6C  
                              u9910 5216                                u8871 2CCC  
                              u8791 2BFA                                u8951 5BDA  
                              u9831 55F0                                u9591 563E  
                              u9671 577C                                u9911 5210  
                              u8880 2CE2                                u9680 5056  
                              u9840 5602                                u9760 4F9A  
                              u9920 5218                                u8960 6070  
                              u8881 2CDE                                u9681 5052  
                              u9841 55FE                                u9761 4F96  
                              u9905 51EE                                u8961 606A  
                              u8890 2CF2                                u9690 5094  
                              u9850 5FE2                                u9770 4FAE  
                              u9930 5A30                                u8970 6072  
                              u8891 2CEE                                u9691 5090  
                              u9851 5FDE                                u8947 5BC4  
                              u9771 4FAA                                u9755 4F62  
                              u8980 4470                                u9780 4FD6  
                              u9860 516C                                u9940 5A42  
                              u8981 446C                                u9781 4FD2  
                              u9941 5A3E                                u8990 44A2  
                              u9790 4FF6                                u9870 518A  
                              u9950 59B6                                u8991 449E  
                              u9791 4FF2                                u9871 5186  
                              u9951 59B0                                u9880 51B2  
                              u9960 59B8                                u9881 51AE  
                              u9865 5162                                u9937 5A26  
                              u9890 51DC                                u9970 59CE  
                              u9891 51D8                                u9971 59CA  
                              u9980 383E                                u9990 386C  
                              u9991 3868                                u9985 3834  
                       main@current 01BF             __end_of_interrupts_init 61DC  
           __end_of_DCmotors_setPWM 3DD2                                abs@a 001C  
                              _dbuf 012C                                _atoi 3F86  
                              _main 412A                                _dtoa 3518  
                              _left 3A08                                _prec 004D  
                              _nout 011C                                pad@i 0021  
                              pad@p 001E                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 0023                                fsr2l 000FD9  
                              _stoa 42C4                                btemp 0056  
                              _stop 58A6                       ___fpclassifyf 512C  
                              prodh 000FF4                                prodl 000FF3  
                              start 0060                    __end_of_ADC_init 62B2  
                   ___fldiv@new_exp 0029                     __end_of_HighISR 5F86  
                      _tolower$3300 0016                        ___param_bank 000000  
            ?_colourclick_readRGBC2 0017                               ??_abs 001E  
                             ??_pad 0020              ??_clicker2buttons_init 000A  
                     ___fltol@sign1 0012                     __end_of___aodiv 45E6  
                             ?_atoi 0011                     __end_of___fladd 2D54  
                             ?_main 0001                               ?_dtoa 0025  
                             ?_left 0041                     __end_of___aomod 48C0  
                             _ADPCH 000F5F                     __end_of___fldiv 3518  
                   __end_of___awdiv 556E                     __end_of___flneg 60B0  
                             STR_10 0E6D                               STR_20 0E9F  
                             STR_12 0E87                               STR_21 0EA7  
                             STR_30 0EB3                               STR_14 0E9A  
                             STR_24 0EA3                               STR_16 0E8E  
                             STR_25 0EAB                               STR_18 0E78  
                             STR_19 0E41                               STR_28 0EB3  
                   __end_of___awmod 56E0                     __end_of___flmul 317E  
                   __end_of___flsub 5EFE                     __end_of___fltol 5028  
                             ?_stoa 0013                               u10000 388E  
                             u10001 388A                               u10100 5B62  
                             u10020 38FA                               u10101 5B5E  
                             u10021 38F6                               u10110 5B90  
                             u10030 391E                               ?_stop 0023  
                             u10111 5B8C                               u10015 38A2  
                             u10120 6152                               u10200 35E6  
                             u10040 393A                               u10016 38AC  
                             u11000 5254                               u10121 614E  
                             u10201 35E2                               u10041 3936  
                             u10017 38BC                               u11001 5250  
                             u10130 6168                               u10210 3710  
                             u10050 398E                               u11010 5286  
                             u10131 6164                               u10211 370C  
                             u10035 3914                               u11011 5282  
                             u10220 372E                               u10140 3548  
                             u10060 39AA                               u10300 0F30  
                             u11020 52A6                               u11100 2406  
                             u10221 372A                               u10141 3542  
                             u10061 39A6                               u10301 0F2C  
                             u11021 52A2                               u11101 2400  
                             u10230 3748                               u10150 354A  
                             u10070 39E6                               u10310 0F3E  
                             u11030 52B8                               u11110 2408  
                             u10231 3744                               u10071 39E2  
                             u10055 3984                               u10311 0F3A  
                             u11031 52B4                               u12000 2120  
                             u10080 60E0                               u10240 3762  
                             u10160 3560                               u10400 10B4  
                             u10320 0F50                               u11040 52E4  
                             u11200 26D6                               u11120 2420  
                             u12001 211C                               u10081 60DA  
                             u10241 375E                               u10161 355C  
                             u10401 10B0                               u10321 0F4C  
                             u11041 52E0                               u11121 241C  
                             u11050 5FB0                               u12010 2152  
                             u10090 60E2                               u10250 3770  
                             u10170 358E                               u10410 1138  
                             u10330 0F98                               u11210 26EE  
                             u11130 2456                               u11051 5FA8  
                             u12011 214E                               u10251 376C  
                             u10171 358A                               u10411 1134  
                             u10331 0F94                               u11211 26EA  
                             u11131 2452                               u11300 3DF2  
                             u12020 2212                               u10260 3782  
                             u10180 35AA                               u10500 1326  
                             u10420 11CC                               u10340 0FC8  
                             u11220 278E                               u11140 249C  
                             u11301 3DEE                               u12021 220E  
                             u10261 377E                               u10181 35A6  
                             u10501 1322                               u10421 11C8  
                             u10341 0FC2                               u11221 278A  
                             u11141 2498                               u11310 3E4E  
                             u12030 2234                               u10270 3790  
                             u10190 35D8                               u10510 134C  
                             u10430 123E                               u10350 0FCA  
                             u11230 280C                               u11150 24FA  
                             u11070 22D0                               u11311 3E4A  
                             u12031 2230                               u10271 378C  
                             u10191 35D4                               u10511 1348  
                             u10431 123A                               u11231 2808  
                             u11151 24F6                               u11071 22CC  
                             u11320 3EA4                               u12040 2246  
                             u11240 62DE                               u10280 37A8  
                             u10600 15C0                               u10520 135E  
                             u10440 1264                               u10360 0FE0  
                             u11160 2522                               u11080 231C  
                             u11321 3EA0                               u12041 2242  
                             u11241 62DA                               u10281 37A4  
                             u10601 15BC                               u10521 135A  
                             u10441 1260                               u10361 0FDC  
                             u11161 251E                               u11081 2318  
                             u11250 3C1A                               u11330 3EEE  
                             u12050 229A                               u10610 165A  
                             u10530 136C                               u10450 1276  
                             u10370 106C                               u10290 0EE0  
                             u11170 25B4                               u11090 235A  
                             u11251 3C16                               u11331 3EEA  
                             u12051 2294                               u10611 1656  
                             u10531 1368                               u10451 1272  
                             u10371 1068                               u10291 0EDC  
                             u11171 25B0                               u11091 2356  
                             u11260 3CFE                               u11340 3F0C  
                             u11500 3BFA                               u11068 5FB2  
                             u12060 229C                               u10700 1828  
                             u10620 16A8                               u10540 1382  
                             u10460 1298                               u10380 109C  
                             u11180 2666                     ___awdiv@divisor 0012  
                             u11261 3CFA                               u11341 3F08  
                             u11501 3BF6                               u11405 61E6  
                             u10701 1824                               u10621 16A4  
                             u10541 137E                               u10461 1294  
                             u10381 1096                               u11181 2662  
                             u11350 3F1C                               u11510 4A7C  
                             u11406 61E8                               u11430 6116  
                             u10710 18FA                               u10630 16D0  
                             u10550 1390                               u10470 12BE  
                             u10390 109E                               u11190 26D4  
                             u12070 41E2                               u11351 3F18  
                             u11511 4A74                               u11415 61F0  
                             u11431 6112                               u10711 18F6  
                             u10631 16CC                               u10551 138C  
                             u10471 12BA                               u11191 26CE  
                             u12071 41DE                               u11600 58FC  
                             u11360 3F2A                               u11440 3AEE  
                             u11416 61F2                               u10800 1AAE  
                             u10720 1916                               u10640 1772  
                             u10560 13BA                               u10480 12D4  
                             u12080 41F0                               u11601 58F8  
                             u11361 3F26                               u11441 3AE6  
                             u11425 61FA                               u10801 1AA8  
                             u10721 1912                               u10641 176E  
                             u10561 13B6                               u10481 12D0  
                             u12081 41EC                               u11274 3D58  
                             u11610 5914                               u11370 3F64  
                             u11290 3DE4                               u11530 4AA0  
                             u11426 61FC                               u10810 1AB0  
                             u10730 1928                               u10650 1786  
                             u10570 1502                               u10490 12F0  
                             u12090 423C                               u11275 3D54  
                             u11611 5910                               u11371 3F60  
                             u11291 3DE0                               u11531 4A9C  
                             u10731 1924                               u10651 1782  
                             u10571 14FE                               u10491 12EC  
                             u12091 4238                               u11284 3DC2  
                             u11380 3F72                               u11460 3B12  
                             u11540 4AC4                               u11620 48EE  
                             u10820 1AC6                               u10740 1936  
                             u10660 1798                               u10580 1568  
                             u10900 440C                               u11700 4D24  
                             u11285 3DBE                               u11381 3F6E  
                             u11461 3B0E                               u11541 4AC0  
                             u11621 48EA                               u10821 1AC2  
                             u10741 1932                               u10661 1794  
                             u10581 1564                               u10901 4408  
                             u11701 4D20                               u11470 3B36  
                             u11550 4B08                               u11630 495C  
                             u10750 196C                               u10670 17A6  
                             u10590 15B0                               u10910 441A  
                             u11390 597C                               u11710 4D4A  
                             u11471 3B32                               u11551 4B04  
                             u11631 4958                               u10751 1968  
                             u10671 17A2                               u10591 15AC  
                             u10911 4416                               u10831 42CE  
                             u11391 5978                               u11711 4D46  
                             u11480 3B7A                               u11560 4B20  
                             u11528 4A7E                               u11800 4C9E  
                             u11640 49B2                               u10760 199A  
                             u10680 17C2                               u10920 4454  
                             u10840 42F0                               u11720 4D60  
                             u11481 3B76                               u11561 4B1C  
                             u11801 4C9A                               u11641 49AE  
                             u10761 1996                               u10681 17BE  
                             u10921 4450                               u10841 42EC  
                             u11721 4D5C                               u11490 3B92  
                             u11458 3AF0                               u11570 4B56  
                             u11650 5D8E                               u11810 4CAC  
                             u10930 3FC2                               u10770 1A1E  
                             u10690 17D0                               u10850 4322  
                             u11730 4D82                               u11491 3B8E  
                             u11571 4B52                               u11651 5D8A  
                             u11811 4CA8                               u10931 3FBE  
                             u10771 1A1A                               u10691 17CC  
                             u10851 431E                               u11731 4D7E  
                             u12507 4204                               u11660 5DDE  
                             u11580 588C                               u11900 1DB2  
                             u11820 1B68                               u10940 3FFC  
                             u10780 1A38                               u10860 4340  
                             u11740 4D98                               u11661 5DDA  
                             u11581 5888                               u11901 1DAE  
                             u11821 1B64                               u10941 3FF8  
                             u10781 1A34                               u10861 433C  
                             u11741 4D94                               u12517 425C  
                             u11590 58A4                               u11670 57FE  
                             u11910 1E1A                               u11830 1B9A  
                             u10950 4018                               u10790 1A50  
                             u10870 436A                               u11750 4DE6  
                             u11591 58A0                               u11671 57FA  
                             u12607 208C                               u11911 1E16  
                             u11831 1B96                               u10951 4014  
                             u10791 1A4C                               u10871 4366  
                             u11751 4DE2                               u12527 4294  
                             u11760 4B78                               u11680 5816  
                             u11920 1E4C                               u11840 1BCC  
                             u10960 40DA                               u10880 43A4  
                             u11761 4B74                               u11681 5812  
                             u12617 219E                               u11921 1E48  
                             u11841 1BC8                               u10961 40D4  
                             u10881 43A0                               u12537 5E2C  
                             u11770 4B86                               u11930 1EEA  
                             u11850 1C22                               u10970 40DC  
                             u10890 43D2                               u11690 4CC4  
                             u11771 4B82                               u12707 498C  
                             u12627 21C6                               u11931 1EE6  
                             u11851 1C1E                               u11691 4CC0  
                             u12547 601C                               u11780 4BFA  
                             u11940 1F1C                               u11860 1CC6  
                             u10980 40F2                               u11781 4BF6  
                             u12717 49BE                               u12637 57E0  
                             u11941 1F18                               u11861 1CC2  
                             u10981 40EE                               u12557 4CDA  
                             u11790 4C08                               u11950 1F4E  
                             u11870 1CF8                               u10990 4104  
                             u12807 4B32                               u11791 4C04  
                             u12727 49E2                               u12647 586E  
                             u11951 1F4A                               u11871 1CF4  
                             u10991 4100                               u12567 4D00  
                             u11960 1FF6                               u11880 1D2A  
                             u12817 4B5C                               u12737 4A06  
                             u12657 48D0                               u11961 1FF2  
                             u11881 1D26                               u10897 43C8  
                             u12577 4DC2                               u11970 2028  
                             u11890 1D80                               u12827 3B5C  
                             u12747 4B94                               u12667 48FA  
                             u11971 2024                               u11891 1D7C  
                             u12587 53D2                               u11980 205A  
                             u12837 3BA6                               u12757 4BCA  
                             u12677 491E                               u11981 2056  
                             u12597 1F80                               u11990 20EE  
                             u12847 58DE                               u12767 4C1C  
                             u12687 4938                               u11991 20EA  
                             u12857 4DFC                               u12777 4C38  
                             u12697 4968                               u12867 4E70  
                             u12787 4C6E                               u12877 4EE6  
                             u12797 4AEA                               u12887 4F00  
                             i1l145 0050                               i2l130 62CA  
                             i2l133 5EB6                               i2l139 5F82  
                             i2l341 627C                               i2l482 637E  
        ?i2_colourclick_writetoaddr 0003             _colourclick_writetoaddr 61FE  
                             i2l491 6342                               i2l476 616A  
                             i2l479 6190                               i2l488 6374  
                   ___awdiv@counter 0014                        vfpfcnvrt@fmt 00A6  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
             ??_colourclick_testing 00EE            __end_of_interrupts_clear 6298  
           __end_of_sendCharSerial4 62E4          __end_of_I2C_2_Master_Start 6358  
        __end_of_I2C_2_Master_Write 632C       __size_of_DCmotors_calibration 014C  
          ?_colourclick_calibration 0001                               _flags 004F  
                             _fputc 53E0                     __end_of_forward 58A6  
                             _fputs 5EFE                     __end_of_isdigit 60E8  
              colourclickLEDs_C@tog 000A                               _right 4A16  
                             atoi@n 001E                               pad@fp 001A  
                             atoi@s 0011                               _width 011E  
                             _putch 6388                               dtoa@d 0027  
                             dtoa@i 0047                   _clicker2LEDs_init 6362  
                             dtoa@n 003F                               dtoa@p 0039  
                             dtoa@s 003D                               dtoa@w 003B  
                             left@i 0068                     __end_of_isspace 5B9C  
                   __end_of_isupper 6078                               tablat 000FF5  
                   __end_of_reverse 5818                               plusw1 000FE3  
                             plusw2 000FDB              DCmotors_init@PWMperiod 000A  
                             stoa@i 001F                               stoa@l 0027  
                ?_clicker2LEDs_init 0001                               stoa@p 0025  
                             stoa@s 0015                               stoa@w 0021  
                             ttemp5 0057                               ttemp6 005A  
                             ttemp7 005E                               status 000FD8  
                             wtemp8 0057                     __end_of_sprintf 5B4A  
                    ?___fpclassifyf 000A                     __end_of_tolower 59E6  
                   __end_of_strncmp 530C               _I2C_2_Master_RepStart 6358  
                   __initialization 5AA2                 ??_clicker2LEDs_init 000A  
                      __end_of_atoi 412A                        __end_of_main 42C4  
                      __end_of_dtoa 37F6                        __end_of_left 3BFE  
                      __end_of_stoa 445E                        __end_of_stop 5918  
__size_of_colourcards_normaliseRGBC 0176       __size_of_colourcards_readRGBC 0796  
                            ??_atoi 0013                              ??_main 00F2  
                            ??_dtoa 002F                              ??_left 0047  
                            ??_stoa 0017                              ??_stop 0027  
                     __activetblptr 000003        __size_ofi2_I2C_2_Master_Idle 0028  
 __end_ofi2_colourclick_writetoaddr 627E              ??_colourclick_readRGBC 0017  
      __size_ofi2_I2C_2_Master_Stop 000A           __end_of_clicker2LEDs_init 636C  
                   _colourcard_flag 0129                              ?_fputc 000A  
                            ?_fputs 0013                              _ADRESH 000F64  
         __size_of_colourclick_init 0038                              ?_right 0023  
                  ___awdiv@dividend 0010                              ?_putch 0001  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            i1l6690 004E                              i1l6684 0026  
                            i2l6310 5E84                              i1l6686 0036  
                            i2l6312 5E8E                              i1l6688 004A  
                            i2l6314 5E98                              i2l6306 5E6A  
                            i2l6316 5EA2                              i2l6308 5E74  
                            i2l6094 6260                              i2l6318 5EAC  
                            i2l6622 62B2                              i2l5870 616A  
                            i2l5872 617A                              i2l6680 5F7A  
                            i2l6682 5F7E                              i2l6674 5F42  
                            i2l5972 6376                              i2l5980 633A  
                            i2l6676 5F52                              i2l5974 637A  
                            i2l5982 633E                              i2l6678 5F58  
                            i2l5976 636C                              i2l5978 6370  
                  __end_of_adjdelay 4F22                    ?_interrupts_init 0001  
                  ?_DCmotors_setPWM 0018                           ??_HighISR 0006  
                            _RX4PPS 000E15      i2colourclick_writetoaddr@value 0003  
                            _TX4REG 000EE4                    __end_of___xxtofl 3F86  
      __size_ofi2_interrupts_colour 004E                              _LowISR 0018  
                      ??_ADC_getval 000A                        vfprintf@cfmt 00C6  
                            ___flge 5028                              ___fleq 56E0  
            colourcards_readRGBC@mL 0072              colourcards_readRGBC@mR 0074  
                         ??___aodiv 001A                           ??___fladd 0039  
                         ??___aomod 001A                              ___wmul 6192  
                         ??___fldiv 0020                           ??___awdiv 0014  
                         ??___flneg 000E                           ??___awmod 000E  
                         ??___flmul 0020                           ??___flsub 0049  
                         ??___fltol 000E                              _efgtoa 0EB8  
                  ??_buggyLEDs_init 000A                  i2_interrupts_clear 62B2  
                            _floorf 37F6           ??_colourclick_writetoaddr 000D  
                            clear_0 5AC8                              clear_1 5AD4  
                            clear_2 5AE8                    ___awdiv@quotient 0016  
                   ___awmod@divisor 000C                              isa$std 000001  
                   ___awmod@counter 000E   __end_of_colourcards_normaliseRGBC 475C  
                            pad@buf 001C                              dtoa@fp 0025  
                            left@mL 0041                              left@mR 0043  
                            _strcpy 59E6                              _strlen 5B9C  
                            fputc@c 000A                              fputs@c 0017  
                            fputs@i 0018                              fputs@s 0013  
                         ??_forward 0027                 ?i2_interrupts_clear 0001  
                         ??_isdigit 000C                     ___fpclassifyf@e 0012  
                   ___fpclassifyf@u 0014                     ___fpclassifyf@x 000A  
                            right@i 002D                        __mediumconst 0000  
                         ??_isspace 000C                              tblptrh 000FF7  
                         ??_isupper 000C                              tblptrl 000FF6  
                            tblptru 000FF8                           ?_ADC_init 0001  
                  ?_sendCharSerial4 0001                           ??_reverse 0027  
                            stoa@cp 0023                              stoa@fp 0013  
                            putch@c 0001                    __end_of_vfprintf 5986  
                            stop@mL 0023                              stop@mR 0025  
                         ??_sprintf 004D                           ??_tolower 0012  
                __end_of_ADC_getval 62FC                        ?_USART4_init 0001  
                         ??_strncmp 0010                          ___flge@ff1 0031  
                        ___flge@ff2 0035                     ??___fpclassifyf 000E  
                      ___xxtofl@arg 0014                        ___xxtofl@exp 0013  
            colourclick_testing@buf 017C                        ___xxtofl@val 000A  
                        ___fleq@ff1 000A                          ___fleq@ff2 000E  
                  __end_of_turnleft 5E1C                          __accesstop 0060  
           __end_of__initialization 5AEE                          ___flneg@f1 000A  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
              ??i2_interrupts_clear 0006                          ___fltol@f1 000A  
                    __pcstackCOMRAM 0001                        __pidataBANK1 6380  
                     __end_of_fputc 54AA                       __end_of_fputs 5F42  
                     __end_of_right 4B6A                       __end_of_putch 638A  
     checkbatterylevel@batterylevel 000B                          ??_ADC_init 000A  
        __size_of_clicker2LEDs_init 000A                             ??_fputc 000E  
                           ??_fputs 0017                             ??_right 0029  
     __size_of_colourclickLEDs_init 000E                             ??_putch 000A  
   __end_of_colourclick_writetoaddr 621E                          __pbssBANK0 00F4  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                        __pnvCOMRAM 0054                   _checkbatterylevel 621E  
           ??_colourclick_readRGBC2 001A       __size_ofi2_I2C_2_Master_Start 000A  
     __size_ofi2_I2C_2_Master_Write 000C                  ?_checkbatterylevel 0001  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
                           ?___flge 0031                             ?___fleq 000A  
                           ?___wmul 000A                             ?_efgtoa 0060  
               ??_checkbatterylevel 000B                             ?_floorf 0031  
                           ?_strcpy 000A                             ?_strlen 000A  
                         ?_adjdelay 0001                             _INT1PPS 000DF1  
       ??i2_colourclick_writetoaddr 0004                           ?___xxtofl 000A  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                 ?_interrupts_clear 0001                  __size_of_vfpfcnvrt 05EC  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
                ??_interrupts_clear 000F                    _colourclick_init 6008  
         __end_of_checkbatterylevel 623E              __size_of_DCmotors_init 0050  
                           _HighISR 0008                           _ADREFbits 000F58  
                _I2C_2_Master_Start 634E                 i2_I2C_2_Master_Idle 616A  
                _I2C_2_Master_Write 6320                             __Hparam 0000  
               i2_I2C_2_Master_Stop 636C        __end_of_DCmotors_calibration 4CB6  
                __size_of_turnright 0050    __size_of_colourclick_calibration 013A  
                           __Lparam 0000                     __size_of_LowISR 0048  
           sendStringSerial4@string 000B                     __size_of___flge 0104  
                   __size_of___fleq 00AA                             ___aodiv 445E  
                           ___fladd 2894                             ___aomod 475C  
                           ___fldiv 317E                             ___awdiv 54AA  
                           ___flneg 6078             colourcards_readRGBC@abs 0070  
                           ___awmod 5630                             ___flmul 2D54  
                           ___flsub 5EB8                             ___fltol 4F22  
           colourcards_readRGBC@rel 0076                     __size_of___wmul 0026  
               ?_I2C_2_Master_Start 0001                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 00C0                        __psmallconst 0E00  
                   __size_of_efgtoa 0C5A         __end_of_colourclick_testing 53E0  
                   __size_of_floorf 0212                             __pcinit 5AA2  
                           __ramtop 0E00                             __ptext0 412A  
                           __ptext1 61B8                             __ptext2 627E  
                           __ptext3 5E1C                             __ptext4 6008  
                           __ptext5 61FE                             __ptext6 6312  
                           __ptext7 6118                             __ptext8 4CB6  
                           __ptext9 530C       __size_of_clicker2buttons_init 000C  
                         ?_turnleft 006A                          ??_adjdelay 000A  
                   __size_of_strcpy 005E                     __size_of_strlen 0050  
               i2_interrupts_colour 5E6A                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                        __size_of_abs 0040  
                      __size_of_pad 00C2                             _forward 5818  
                           _isdigit 60B0                          ??___xxtofl 000E  
              ?i2_I2C_2_Master_Stop 0001                    ___awmod@dividend 000A  
                           _isspace 5B4A                           _T2HLTbits 000FBE  
                           _isupper 6040                             efgtoa@c 0066  
                           efgtoa@d 0084                             efgtoa@e 009C  
                           efgtoa@f 0062                             efgtoa@g 0098  
                           efgtoa@h 008E                             efgtoa@i 0096  
                           efgtoa@l 0092                             efgtoa@m 007E  
                           efgtoa@n 009E                             efgtoa@p 0088  
                           efgtoa@t 0078                             efgtoa@u 00A0  
                           efgtoa@w 008A                             _reverse 578A  
                     _RxBufWriteCnt 00F6                             atoi@neg 0017  
                           _sprintf 5AF8                             _tolower 5986  
              ??_I2C_2_Master_Start 000B                             left@deg 0045  
              ??_I2C_2_Master_Write 000B                             _strncmp 522A  
                    __pintcode_body 5F42                end_of_initialization 5AEE  
      __end_of_colourcards_readRGBC 22A8                             floorf@e 003F  
                           floorf@m 003B                             floorf@u 0041  
                           floorf@x 0031                    ADC_getval@tmpval 000A  
                           fputc@fp 000C                __size_of_USART4_init 0020  
                           int_func 5F42                             fputs@fp 0015  
         i2_colourclick_writetoaddr 625E                ?i2_interrupts_colour 0001  
                         i2u1289_47 5E7A                             right@mL 0023  
                           right@mR 0025                        adjdelay@mode 000D  
                 __end_of_vfpfcnvrt 2894                          efgtoa@mode 008D  
                        efgtoa@sign 0086                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
    colourclick_calibration@current 01B7      colourclick_calibration@initial 01AF  
                        ??_vfprintf 004D        colourclick_writetoaddr@value 000C  
                           strcpy@d 0012                             strlen@a 000C  
                           strcpy@s 0010                             strlen@s 000A  
                     _DCmotors_init 5D2C                           _PORTFbits 000F8E  
                        ??_turnleft 0048               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002                         ___fladd@grs 0040  
          colourclick_calibration@i 01AE                       ___xxtofl@sign 0012  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                   __end_of_turnright 5DCC  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 002B  
                       ___fldiv@rem 0024       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 000B  
              colourclick_readB@tmp 0013                colourclick_readC@tmp 0013  
        __size_of_checkbatterylevel 0020                colourclick_readG@tmp 0013  
              colourclick_readR@tmp 0013                         ___flmul@grs 0026  
             ??i2_interrupts_colour 0005                        _EUSART4RXbuf 0100  
                      _EUSART4TXbuf 0200           sendCharSerial4@charToSend 000A  
                        main@motorL 01C7                          main@motorR 01D0  
                    __end_of_LowISR 0060            __size_of_interrupts_init 0024  
          __size_of_DCmotors_setPWM 01D4                      __end_of___flge 512C  
        colourclick_readRGBC@tmpval 0015                      __end_of___fleq 578A  
                    ?_DCmotors_init 0001                         vfpfcnvrt@ap 00A8  
                       vfpfcnvrt@cp 00B2                         vfpfcnvrt@ct 00BC  
                       vfpfcnvrt@fp 00A4                         vfpfcnvrt@ll 00AA  
                    __end_of___wmul 61B8                      __end_of_efgtoa 1B12  
                    __end_of_floorf 3A08                          floorf@F527 0114  
        ?_colourcards_normaliseRGBC 0031                      __end_of_strcpy 5A44  
                    __end_of_strlen 5BEC                colourclick_testing@B 01AA  
              colourclick_testing@C 01AC                colourclick_testing@G 01A8  
              colourclick_testing@R 01A6                 start_initialization 5AA2  
                       __end_of_abs 6008                _DCmotors_calibration 4B6A  
                       __end_of_pad 5630                       _TxBufWriteCnt 0053  
                  _unknowncard_flag 0128                     _returnhome_flag 00F4  
          __size_of_sendCharSerial4 0018               __end_of___fpclassifyf 522A  
           _colourclick_calibration 4CB6         __size_ofi2_interrupts_clear 001A  
                          ??_LowISR 0007                        turnright@deg 006E  
    __size_of_colourclick_readRGBC2 0156       __end_of_colourclick_readRGBC2 4A16  
                       vfprintf@fmt 00C2            ?_colourclick_writetoaddr 000C  
        colourcards_normaliseRGBC@B 0039          colourcards_normaliseRGBC@C 003B  
        colourcards_normaliseRGBC@G 0037          colourcards_normaliseRGBC@R 0035  
                          ??___flge 0039                            ??___fleq 0012  
      __end_of_colourclickLEDs_init 6320                            ??___wmul 000E  
          __end_of_colourclick_init 6040                            ??_efgtoa 0067  
                       __pdataBANK1 01D9       i2I2C_2_Master_Write@data_byte 0002  
                          ??_floorf 0035                _colourcards_readRGBC 1B12  
                          ??_strcpy 000E                            ??_strlen 000C  
      __end_ofi2_I2C_2_Master_Start 6380        __end_ofi2_I2C_2_Master_Write 6344  
                         ___fladd@a 0035                           ___fladd@b 0031  
                         ___fldiv@a 001C                           ___fldiv@b 0018  
                         ___flmul@a 001C                           ___flmul@b 0018  
                       __pbssCOMRAM 004D                           ___flsub@a 0045  
                         ___flsub@b 0041                       __pcstackBANK0 0060  
                     __pcstackBANK1 017C                   __size_of_adjdelay 0132  
             ?_DCmotors_calibration 0048                    ___aodiv@dividend 000A  
           __size_of_buggyLEDs_init 0016                   __size_of___xxtofl 01B4  
                          ?_HighISR 0001                           _atoi$3206 0019  
                         _atoi$3207 001D                           _atoi$3208 001B  
         __size_of_interrupts_clear 001A                         _efgtoa$3133 0070  
                       _efgtoa$3128 006C                         _efgtoa$3137 0072  
                       _efgtoa$3129 006E                         _efgtoa$3138 0074  
                       _efgtoa$3139 0076                           _dtoa$3104 0037  
                       _clear_lower 0122                           _left$3571 0064  
                       _clear_upper 0120                           __pintcode 0008  
                   ??_DCmotors_init 000A                            ?___aodiv 000A  
                          ?___fladd 0031                            ?___aomod 000A  
                          ?___fldiv 0018                            ?___awdiv 0010  
                  ___aodiv@quotient 001C                            ?___flneg 000A  
                          ?___awmod 000A                            ?___flmul 0018  
                          ?___flsub 0041                            ?___fltol 000A  
__size_ofi2_colourclick_writetoaddr 0020               ?_colourcards_readRGBC 0070  
                       __pintcodelo 0018                           adjdelay@i 000C  
                        right@delay 002B                I2C_2_Master_Read@ack 000C  
                 __size_of_vfprintf 006E                   ??_interrupts_init 000F  
                 ??_DCmotors_setPWM 001A                I2C_2_Master_Read@tmp 000D  
             _interrupts_lowerbound 0051                         __smallconst 0E00  
                          ?_forward 0023                            ?_isdigit 000A  
                 _I2C_2_Master_Idle 6142                   _I2C_2_Master_Init 6118  
                 _I2C_2_Master_Read 5F86                   _I2C_2_Master_Stop 6344  
                          ?_isspace 000A                   __size_of_turnleft 0050  
                          ?_isupper 000A                        _RxBufReadCnt 012B  
                          _ADC_init 6298                            ?_reverse 0023  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
                          ?_sprintf 00C8                            ?_tolower 0010  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
                          ?_strncmp 000A                      __size_of_right 0154  
                    __size_of_putch 0002           ??_colourclick_calibration 00F0  
      __end_of_clicker2buttons_init 6338                   _sendStringSerial4 60E8  
               ??_I2C_2_Master_Idle 000A                 ??_I2C_2_Master_Init 000A  
               ??_I2C_2_Master_Read 000B                      ___wmul@product 000E  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 000B  
                          _LATCbits 000F7B                   _colourclickLEDs_C 61DC  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                   _interrupts_colour 5E1C  
                ?_sendStringSerial4 000B                            _PIE4bits 000E2D  
                ?_colourclickLEDs_C 0001                            i1u804_20 0036  
                          i1u804_21 0032                            _PIR0bits 000E33  
                          i2u700_40 617A                            i2u700_41 6176  
                          i2u701_40 6190                            i2u701_41 618C  
                          _PIR4bits 000E37                            i2u801_40 5F52  
                          i2u801_41 5F4E                  ?_interrupts_colour 0001  
                          i2u802_40 5F6A                            i2u802_41 5F62  
                          i2u803_48 5F6C                   ??_sendCharSerial4 000A  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 000D  
            DCmotors_setPWM@PWMduty 0021          colourclick_testing@ambient 01A4  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 000A  
                 _colourclick_readB 5CDC                   _colourclick_readC 5C8C  
                 _colourclick_readG 5C3C                   _colourclick_readR 5BEC  
                         _vfpfcnvrt 22A8                 ??_interrupts_colour 000E  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 616A  
         __end_of_I2C_2_Master_Init 6142           __end_of_I2C_2_Master_Read 5FC8  
        colourclick_testing@current 00EC                   ___wmul@multiplier 000A  
        colourclick_testing@initial 00EA                  ?_colourclick_readB 000E  
                ?_colourclick_readC 000E                  ?_colourclick_readG 000E  
                ?_colourclick_readR 000E           __end_of_I2C_2_Master_Stop 634E  
             _interrupts_upperbound 0054         I2C_2_Master_Write@data_byte 000B  
            ??_DCmotors_calibration 0070        __size_of_colourclick_testing 00D4  
                         left@delay 0060                        _TxBufReadCnt 00F5  
                      _isspace$3237 0010                 ??_colourclick_readB 0010  
               ??_colourclick_readC 0010                 ??_colourclick_readG 0010  
               ??_colourclick_readR 0010                          vfpfcnvrt@c 00BF  
                        vfpfcnvrt@f 00B8                       ??_USART4_init 000A  
                         copy_data0 5AB6           __end_of_sendStringSerial4 6118  
       __size_of_I2C_2_Master_Start 000A                _colourclickLEDs_init 6312  
       __size_of_I2C_2_Master_Write 000C                           _turnright 5D7C  
         __end_of_colourclickLEDs_C 61FE                         turnleft@deg 006E  
    __size_of_I2C_2_Master_RepStart 000A           __end_of_interrupts_colour 5E6A  
     __end_of_I2C_2_Master_RepStart 6362                    __size_of_HighISR 5F7E  
              i2_I2C_2_Master_Start 6376                i2_I2C_2_Master_Write 6338  
                          __Hrparam 0000                         turnright@mL 006A  
                       turnright@mR 006C                          _ADC_getval 62E4  
      __end_of_colourclick_readRGBC 5AA2                          vfprintf@ap 00C4  
                          __Lrparam 0000                          vfprintf@fp 00C0  
         __end_of_colourclick_readB 5D2C           __end_of_colourclick_readC 5CDC  
         __end_of_colourclick_readG 5C8C           __end_of_colourclick_readR 5C3C  
                         forward@mL 0023                           forward@mR 0025  
            ??_colourcards_readRGBC 0048         __end_ofi2_I2C_2_Master_Idle 6192  
                  __size_of___aodiv 0188                    __size_of___fladd 04C0  
       __end_ofi2_I2C_2_Master_Stop 6376                    __size_of___aomod 0164  
                  __size_of___fldiv 039A                    __size_of___awdiv 00C4  
                  __size_of___flneg 0038                    __size_of___awmod 00B0  
                  __size_of___flmul 042A                    __size_of___flsub 0046  
                  __size_of___fltol 0106                          ?_vfpfcnvrt 00A4  
   __end_of_colourclick_calibration 4DF0                     ___aodiv@divisor 0012  
                   ___aodiv@counter 001A                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                            _adjdelay 4DF0  
                ___fpclassifyf@F465 0118                          _ANSELFbits 000EB4  
       ??_colourcards_normaliseRGBC 0035                          sprintf@fmt 00CA  
                          ___xxtofl 3DD2                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6              DCmotors_calibration@mL 0048  
            DCmotors_calibration@mR 004A                      _buggyLEDs_init 62FC  
                  __size_of_forward 008E                    __size_of_isdigit 0038  
                  __size_of_isspace 0052                            __ptext10 5AF8  
                          __ptext11 5918                            __ptext20 512C  
                          __ptext12 22A8                            __ptext21 4F22  
                          __ptext13 522A                            __ptext30 53E0  
                          __ptext22 5EB8                            __ptext14 42C4  
                          __ptext31 6388                            __ptext23 6078  
                          __ptext15 0EB8                            __ptext40 1B12  
                          __ptext32 5FC8                            __ptext24 56E0  
                          __ptext16 5986                            __ptext41 578A  
                          __ptext33 475C                            __ptext25 5630  
                          __ptext17 6040                            __ptext50 6344  
                          __ptext42 5818                            __ptext34 445E  
                          __ptext26 3518                            __ptext18 59E6  
                          __ptext51 634E                            __ptext43 48C0  
                          __ptext35 3F86                            __ptext27 556E  
                          __ptext19 37F6                            __ptext60 623E  
                          __ptext52 6358                            __ptext44 5A44  
                          __ptext36 5B4A                            __ptext28 5B9C  
                          __ptext61 5D2C                            __ptext53 5F86  
                          __ptext45 5BEC                            __ptext37 60B0  
                          __ptext29 5EFE                            __ptext70 3DD2  
                          __ptext62 632C                            __ptext54 6142  
                          __ptext46 5C3C                            __ptext38 60E8  
                          __ptext71 2D54                            __ptext63 6362  
                          __ptext55 61DC                            __ptext47 5C8C  
                          __ptext39 62CC                            __ptext72 5028  
                          __ptext64 62FC                            __ptext56 45E6  
                          __ptext48 5CDC                            __ptext73 2894  
                          __ptext65 4B6A                            __ptext57 317E  
                          __ptext49 6320                            __ptext82 62B2  
                          __ptext74 58A6                            __ptext66 5D7C  
                          __ptext58 621E                            __ptext83 5E6A  
                          __ptext75 3BFE                            __ptext67 5DCC  
                          __ptext59 62E4                            __ptext84 625E  
                          __ptext76 6192                            __ptext68 4A16  
                          __ptext85 6338                            __ptext77 54AA  
                          __ptext69 3A08                            __ptext86 636C  
                          __ptext78 4DF0                            __ptext87 6376  
                          __ptext79 6298                            __ptext88 616A  
                  __size_of_isupper 0038                    __size_of_reverse 008E  
       __end_ofi2_interrupts_colour 5EB8               ?_colourclickLEDs_init 0001  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                  __size_of_sprintf 0052                    __size_of_tolower 0060  
                        ?_turnright 006A                          strcpy@dest 000A  
                  __size_of_strncmp 00E2                       __size_of_atoi 01A4  
                     __size_of_main 019A                       __size_of_dtoa 02DE  
                     __size_of_left 01F6                       __size_of_stoa 019A  
                     __size_of_stop 0072               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                 __end_of_USART4_init 625E  
                  _interrupts_clear 627E                           reverse@mL 0023  
                         reverse@mR 0025                     _turnright_delay 0124  
                    _turnleft_delay 0126                            efgtoa@fp 0060  
                          efgtoa@ne 007C                            efgtoa@pp 007A  
                          efgtoa@ou 0080                           stoa@F1163 01D9  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 0056                            _vfprintf 5918  
                 ?_colourclick_init 0001                  ??_colourclick_init 000E  
        __size_of_I2C_2_Master_Idle 0028          __size_of_I2C_2_Master_Init 002A  
        __size_of_I2C_2_Master_Read 0042                    ___aomod@dividend 000A  
                  DCmotors_setPWM@m 0018                _clicker2buttons_init 632C  
        __size_of_I2C_2_Master_Stop 000A                            _turnleft 5DCC  
                        turnleft@mL 006A                          turnleft@mR 006C  
            __end_of_buggyLEDs_init 6312                      _vfpfcnvrt$3164 00B4  
                    _vfpfcnvrt$3169 00B6                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 0020      colourclick_writetoaddr@address 000D  
  i2colourclick_writetoaddr@address 0004                            isdigit@c 000A  
                       _PWM6CONbits 000FA4          __size_of_sendStringSerial4 0030  
                       _PWM7CONbits 000FA1                            intlevel1 0000  
                          intlevel2 0000          __size_of_colourclickLEDs_C 0022  
                         sprintf@ap 00E2          __size_of_interrupts_colour 004E  
        __end_ofi2_interrupts_clear 62CC                            isspace@c 000A  
                          right@deg 0027           _colourcards_normaliseRGBC 45E6  
                         strcpy@src 000C                            isupper@c 000A  
                         strncmp@_l 000A                           strncmp@_r 000C  
                   _interrupts_init 61B8                     _DCmotors_setPWM 3BFE  
                       ?_ADC_getval 0001                         efgtoa@nmode 008C  
        __size_of_colourclick_readB 0050          __size_of_colourclick_readC 0050  
        __size_of_colourclick_readG 0050          __size_of_colourclick_readR 0050  
             _colourclick_readRGBC2 48C0                     ___aomod@divisor 0012  
                       ??_vfpfcnvrt 0049                            stoa@nuls 0018  
                   ___aomod@counter 001A               ?_clicker2buttons_init 0001  
         colourclick_readRGBC2@mode 0019                            sprintf@f 00E4  
                          tolower@c 0010                            sprintf@s 00C8  
                   ?_buggyLEDs_init 0001              __size_of___fpclassifyf 00FE  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                          strncmp@l 0011                            strncmp@n 000E  
                          strncmp@r 0013              ??_colourclickLEDs_init 000B  
              _colourclick_readRGBC 5A44                       ___fladd@signs 003D  
                       _USART4_init 623E                          _TX4STAbits 000EE8  
                       ??_turnright 0048                        ___aodiv@sign 001B  
                   _sendCharSerial4 62CC              ??i2_I2C_2_Master_Start 0002  
                     _overtime_flag 012A                        ___fladd@aexp 003E  
            ??i2_I2C_2_Master_Write 0002                        ___fladd@bexp 003F  
                      ___aomod@sign 001B                 _colourclick_testing 530C  
      colourcards_normaliseRGBC@abs 0031  
