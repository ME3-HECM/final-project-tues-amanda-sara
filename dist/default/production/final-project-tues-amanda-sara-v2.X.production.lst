

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 17:18:59 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    91  0000                     
    92                           ; Version 2.20
    93                           ; Generated 05/05/2020 GMT
    94                           ; 
    95                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F67K40 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     _INT1PPS	set	3569
   127  0000                     _PIE4bits	set	3629
   128  0000                     _TX4REG	set	3812
   129  0000                     _RC4REG	set	3811
   130  0000                     _PIR4bits	set	3639
   131  0000                     _RC4STAbits	set	3815
   132  0000                     _SP4BRGH	set	3814
   133  0000                     _SP4BRGL	set	3813
   134  0000                     _TX4STAbits	set	3816
   135  0000                     _BAUD4CONbits	set	3817
   136  0000                     _RX4PPS	set	3605
   137  0000                     _RC0PPS	set	3682
   138  0000                     _PIR0bits	set	3635
   139  0000                     _IPR0bits	set	3615
   140  0000                     _PIE0bits	set	3625
   141  0000                     _ANSELBbits	set	3738
   142  0000                     _ANSELFbits	set	3764
   143  0000                     _RC7PPS	set	3689
   144  0000                     _RE2PPS	set	3700
   145  0000                     _SSP2BUF	set	3797
   146  0000                     _SSP2CON2bits	set	3802
   147  0000                     _SSP2CON2	set	3802
   148  0000                     _SSP2STAT	set	3800
   149  0000                     _RD6PPS	set	3696
   150  0000                     _RD5PPS	set	3695
   151  0000                     _SSP2CLKPPS	set	3612
   152  0000                     _SSP2DATPPS	set	3613
   153  0000                     _ANSELDbits	set	3751
   154  0000                     _SSP2ADD	set	3798
   155  0000                     _SSP2CON1bits	set	3801
   156  0000                     _ADPCH	set	3935
   157  0000                     _ADREFbits	set	3928
   158  0000                     _LATAbits	set	3961
   159  0000                     _TRISAbits	set	3969
   160  0000                     _ADRESH	set	3940
   161  0000                     _ADCON0bits	set	3936
   162  0000                     _INTCONbits	set	4082
   163  0000                     _TRISBbits	set	3970
   164  0000                     _LATFbits	set	3966
   165  0000                     _LATHbits	set	3968
   166  0000                     _TRISHbits	set	3976
   167  0000                     _TRISFbits	set	3974
   168  0000                     _PWM7CONbits	set	4001
   169  0000                     _PWM6CONbits	set	4004
   170  0000                     _LATGbits	set	3967
   171  0000                     _LATCbits	set	3963
   172  0000                     _LATEbits	set	3965
   173  0000                     _TRISGbits	set	3975
   174  0000                     _TRISCbits	set	3971
   175  0000                     _TRISEbits	set	3973
   176  0000                     _T2PR	set	4028
   177  0000                     _T2CLKCONbits	set	4031
   178  0000                     _T2HLTbits	set	4030
   179  0000                     _T2CONbits	set	4029
   180  0000                     _LATDbits	set	3964
   181  0000                     _PORTFbits	set	3982
   182  0000                     _TRISDbits	set	3972
   183  0000                     _LATG	set	3967
   184  0000                     _PWM7DCH	set	4000
   185  0000                     _LATE	set	3965
   186  0000                     _PWM6DCH	set	4003
   187                           
   188                           	psect	smallconst
   189  000E00                     __psmallconst:
   190                           	callstack 0
   191  000E00  00                 	db	0
   192  000E01                     STR_1:
   193                           
   194                           ; BSR set to: 14
   195  000E01  52                 	db	82	;'R'
   196  000E02  47                 	db	71	;'G'
   197  000E03  42                 	db	66	;'B'
   198  000E04  43                 	db	67	;'C'
   199  000E05  3A                 	db	58	;':'
   200  000E06  20                 	db	32
   201  000E07  25                 	db	37
   202  000E08  69                 	db	105	;'i'
   203  000E09  20                 	db	32
   204  000E0A  25                 	db	37
   205  000E0B  69                 	db	105	;'i'
   206  000E0C  20                 	db	32
   207  000E0D  25                 	db	37
   208  000E0E  69                 	db	105	;'i'
   209  000E0F  20                 	db	32
   210  000E10  25                 	db	37
   211  000E11  69                 	db	105	;'i'
   212  000E12  20                 	db	32
   213  000E13  20                 	db	32
   214  000E14  20                 	db	32
   215  000E15  20                 	db	32
   216  000E16  20                 	db	32
   217  000E17  52                 	db	82	;'R'
   218  000E18  47                 	db	71	;'G'
   219  000E19  42                 	db	66	;'B'
   220  000E1A  43                 	db	67	;'C'
   221  000E1B  5F                 	db	95	;'_'
   222  000E1C  72                 	db	114	;'r'
   223  000E1D  65                 	db	101	;'e'
   224  000E1E  6C                 	db	108	;'l'
   225  000E1F  3A                 	db	58	;':'
   226  000E20  20                 	db	32
   227  000E21  25                 	db	37
   228  000E22  2E                 	db	46
   229  000E23  33                 	db	51	;'3'
   230  000E24  66                 	db	102	;'f'
   231  000E25  20                 	db	32
   232  000E26  25                 	db	37
   233  000E27  2E                 	db	46
   234  000E28  33                 	db	51	;'3'
   235  000E29  66                 	db	102	;'f'
   236  000E2A  20                 	db	32
   237  000E2B  25                 	db	37
   238  000E2C  2E                 	db	46
   239  000E2D  33                 	db	51	;'3'
   240  000E2E  66                 	db	102	;'f'
   241  000E2F  20                 	db	32
   242  000E30  25                 	db	37
   243  000E31  2E                 	db	46
   244  000E32  33                 	db	51	;'3'
   245  000E33  66                 	db	102	;'f'
   246  000E34  0A                 	db	10
   247  000E35  0D                 	db	13
   248  000E36  00                 	db	0
   249  000E37                     STR_2:
   250                           
   251                           ; BSR set to: 14
   252  000E37  49                 	db	73	;'I'
   253  000E38  4E                 	db	78	;'N'
   254  000E39  46                 	db	70	;'F'
   255  000E3A  00                 	db	0
   256  000E3B                     STR_6:
   257                           
   258                           ; BSR set to: 14
   259  000E3B  4E                 	db	78	;'N'
   260  000E3C  41                 	db	65	;'A'
   261  000E3D  4E                 	db	78	;'N'
   262  000E3E  00                 	db	0
   263  000E3F                     STR_3:
   264                           
   265                           ; BSR set to: 14
   266  000E3F  69                 	db	105	;'i'
   267  000E40  6E                 	db	110	;'n'
   268  000E41  66                 	db	102	;'f'
   269  000E42  00                 	db	0
   270  000E43                     STR_7:
   271                           
   272                           ; BSR set to: 14
   273  000E43  6E                 	db	110	;'n'
   274  000E44  61                 	db	97	;'a'
   275  000E45  6E                 	db	110	;'n'
   276  000E46  00                 	db	0
   277  000E47                     STR_10:
   278                           
   279                           ; BSR set to: 14
   280  000E47  6C                 	db	108	;'l'
   281  000E48  66                 	db	102	;'f'
   282  000E49  00                 	db	0
   283  000E4A  00                 	db	0	; dummy byte at the end
   284  0000                     
   285                           ; #config settings
   286                           
   287                           	psect	cinit
   288  0055EA                     __pcinit:
   289                           	callstack 0
   290  0055EA                     start_initialization:
   291                           	callstack 0
   292  0055EA                     __initialization:
   293                           	callstack 0
   294                           
   295                           ; Clear objects allocated to BANK2 (60 bytes)
   296  0055EA  EE02  F000         	lfsr	0,__pbssBANK2
   297  0055EE  0E3C               	movlw	60
   298  0055F0                     clear_0:
   299  0055F0  6AEE               	clrf	postinc0,c
   300  0055F2  06E8               	decf	wreg,f,c
   301  0055F4  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK1 (82 bytes)
   304  0055F6  EE01  F090         	lfsr	0,__pbssBANK1
   305  0055FA  0E52               	movlw	82
   306  0055FC                     clear_1:
   307  0055FC  6AEE               	clrf	postinc0,c
   308  0055FE  06E8               	decf	wreg,f,c
   309  005600  E1FD               	bnz	clear_1
   310                           
   311                           ; Clear objects allocated to BANK0 (40 bytes)
   312  005602  EE00  F0D8         	lfsr	0,__pbssBANK0
   313  005606  0E28               	movlw	40
   314  005608                     clear_2:
   315  005608  6AEE               	clrf	postinc0,c
   316  00560A  06E8               	decf	wreg,f,c
   317  00560C  E1FD               	bnz	clear_2
   318                           
   319                           ; Clear objects allocated to COMRAM (5 bytes)
   320  00560E  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   321  005610  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   322  005612  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   323  005614  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   324  005616  6A56               	clrf	__pbssCOMRAM& (0+255),c
   325  005618                     end_of_initialization:
   326                           	callstack 0
   327  005618                     __end_of__initialization:
   328                           	callstack 0
   329  005618  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   330  00561A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   331  00561C  0100               	movlb	0
   332  00561E  EF08  F01A         	goto	_main	;jump to C main() function
   333                           
   334                           	psect	bssCOMRAM
   335  000056                     __pbssCOMRAM:
   336                           	callstack 0
   337  000056                     _flags:
   338                           	callstack 0
   339  000056                     	ds	2
   340  000058                     _TxBufReadCnt:
   341                           	callstack 0
   342  000058                     	ds	1
   343  000059                     _TxBufWriteCnt:
   344                           	callstack 0
   345  000059                     	ds	1
   346  00005A                     _returnhome_flag:
   347                           	callstack 0
   348  00005A                     	ds	1
   349                           
   350                           	psect	bssBANK0
   351  0000D8                     __pbssBANK0:
   352                           	callstack 0
   353  0000D8                     _EUSART4RXbuf:
   354                           	callstack 0
   355  0000D8                     	ds	20
   356  0000EC                     floorf@F527:
   357                           	callstack 0
   358  0000EC                     	ds	4
   359  0000F0                     ___fpclassifyf@F465:
   360                           	callstack 0
   361  0000F0                     	ds	4
   362  0000F4                     _nout:
   363                           	callstack 0
   364  0000F4                     	ds	2
   365  0000F6                     _width:
   366                           	callstack 0
   367  0000F6                     	ds	2
   368  0000F8                     _prec:
   369                           	callstack 0
   370  0000F8                     	ds	2
   371  0000FA                     _clear_upper:
   372                           	callstack 0
   373  0000FA                     	ds	2
   374  0000FC                     _clear_lower:
   375                           	callstack 0
   376  0000FC                     	ds	2
   377  0000FE                     _RxBufReadCnt:
   378                           	callstack 0
   379  0000FE                     	ds	1
   380  0000FF                     _RxBufWriteCnt:
   381                           	callstack 0
   382  0000FF                     	ds	1
   383                           
   384                           	psect	bssBANK1
   385  000190                     __pbssBANK1:
   386                           	callstack 0
   387  000190                     _battery_flag:
   388                           	callstack 0
   389  000190                     	ds	1
   390  000191                     _card_flag:
   391                           	callstack 0
   392  000191                     	ds	1
   393  000192                     _dbuf:
   394                           	callstack 0
   395  000192                     	ds	80
   396                           
   397                           	psect	bssBANK2
   398  000200                     __pbssBANK2:
   399                           	callstack 0
   400  000200                     _EUSART4TXbuf:
   401                           	callstack 0
   402  000200                     	ds	60
   403                           
   404                           	psect	cstackBANK1
   405  000100                     __pcstackBANK1:
   406                           	callstack 0
   407  000100                     ??_main:
   408                           
   409                           ; 1 bytes @ 0x0
   410  000100                     	ds	2
   411  000102                     main@buf:
   412                           	callstack 0
   413                           
   414                           ; 100 bytes @ 0x2
   415  000102                     	ds	100
   416  000166                     main@R_rel:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x66
   420  000166                     	ds	4
   421  00016A                     main@G_rel:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x6A
   425  00016A                     	ds	4
   426  00016E                     main@B_rel:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x6E
   430  00016E                     	ds	4
   431  000172                     main@C_rel:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x72
   435  000172                     	ds	4
   436  000176                     main@current:
   437                           	callstack 0
   438                           
   439                           ; 8 bytes @ 0x76
   440  000176                     	ds	8
   441  00017E                     main@motorL:
   442                           	callstack 0
   443                           
   444                           ; 9 bytes @ 0x7E
   445  00017E                     	ds	9
   446  000187                     main@motorR:
   447                           	callstack 0
   448                           
   449                           ; 9 bytes @ 0x87
   450  000187                     	ds	9
   451                           
   452                           	psect	cstackBANK0
   453  000060                     __pcstackBANK0:
   454                           	callstack 0
   455  000060                     _efgtoa$2537:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x0
   459  000060                     	ds	2
   460  000062                     _efgtoa$2538:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x2
   464  000062                     	ds	2
   465  000064                     _efgtoa$2542:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x4
   469  000064                     	ds	2
   470  000066                     _efgtoa$2546:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x6
   474  000066                     	ds	2
   475  000068                     _efgtoa$2547:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x8
   479  000068                     	ds	2
   480  00006A                     _efgtoa$2548:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xA
   484  00006A                     	ds	2
   485  00006C                     efgtoa@t:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0xC
   489  00006C                     	ds	2
   490  00006E                     efgtoa@pp:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0xE
   494  00006E                     	ds	2
   495  000070                     efgtoa@ne:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x10
   499  000070                     	ds	2
   500  000072                     efgtoa@m:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x12
   504  000072                     	ds	2
   505  000074                     efgtoa@ou:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x14
   509  000074                     	ds	4
   510  000078                     efgtoa@d:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x18
   514  000078                     	ds	2
   515  00007A                     efgtoa@sign:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x1A
   519  00007A                     	ds	2
   520  00007C                     efgtoa@p:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x1C
   524  00007C                     	ds	2
   525  00007E                     efgtoa@w:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x1E
   529  00007E                     	ds	2
   530  000080                     efgtoa@nmode:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x20
   534  000080                     	ds	1
   535  000081                     efgtoa@mode:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x21
   539  000081                     	ds	1
   540  000082                     efgtoa@h:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x22
   544  000082                     	ds	4
   545  000086                     efgtoa@l:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x26
   549  000086                     	ds	4
   550  00008A                     efgtoa@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x2A
   554  00008A                     	ds	2
   555  00008C                     efgtoa@g:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x2C
   559  00008C                     	ds	4
   560  000090                     efgtoa@e:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x30
   564  000090                     	ds	2
   565  000092                     efgtoa@n:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x32
   569  000092                     	ds	2
   570  000094                     efgtoa@u:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x34
   574  000094                     	ds	4
   575  000098                     vfpfcnvrt@ll:
   576                           	callstack 0
   577                           
   578                           ; 8 bytes @ 0x38
   579  000098                     	ds	8
   580  0000A0                     _vfpfcnvrt$2562:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x40
   584  0000A0                     	ds	2
   585  0000A2                     _vfpfcnvrt$2567:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x42
   589  0000A2                     	ds	2
   590  0000A4                     vfpfcnvrt@f:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x44
   594  0000A4                     	ds	4
   595  0000A8                     vfpfcnvrt@ct:
   596                           	callstack 0
   597                           
   598                           ; 3 bytes @ 0x48
   599  0000A8                     	ds	3
   600  0000AB                     vfpfcnvrt@c:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x4B
   604  0000AB                     	ds	1
   605  0000AC                     ?_vfprintf:
   606                           	callstack 0
   607  0000AC                     vfprintf@fp:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x4C
   611  0000AC                     	ds	2
   612  0000AE                     vfprintf@fmt:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x4E
   616  0000AE                     	ds	2
   617  0000B0                     vfprintf@ap:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x50
   621  0000B0                     	ds	2
   622  0000B2                     vfprintf@cfmt:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x52
   626  0000B2                     	ds	2
   627  0000B4                     ?_sprintf:
   628                           	callstack 0
   629  0000B4                     sprintf@s:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x54
   633  0000B4                     	ds	2
   634  0000B6                     sprintf@fmt:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x56
   638  0000B6                     	ds	26
   639  0000D0                     sprintf@ap:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x70
   643  0000D0                     	ds	2
   644  0000D2                     sprintf@f:
   645                           	callstack 0
   646                           
   647                           ; 6 bytes @ 0x72
   648  0000D2                     	ds	6
   649                           
   650                           	psect	cstackCOMRAM
   651  000001                     __pcstackCOMRAM:
   652                           	callstack 0
   653  000001                     ??i2_I2C_2_Master_Idle:
   654  000001                     
   655                           ; 1 bytes @ 0x0
   656  000001                     	ds	1
   657  000002                     i2I2C_2_Master_Write@data_byte:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x1
   661  000002                     	ds	1
   662  000003                     ??_HighISR:
   663                           
   664                           ; 1 bytes @ 0x2
   665  000003                     	ds	1
   666  000004                     ??_LowISR:
   667                           
   668                           ; 1 bytes @ 0x3
   669  000004                     	ds	1
   670  000005                     ??_I2C_2_Master_Idle:
   671  000005                     ?_strlen:
   672                           	callstack 0
   673  000005                     ?___fpclassifyf:
   674                           	callstack 0
   675  000005                     ?_isupper:
   676                           	callstack 0
   677  000005                     ?_isdigit:
   678                           	callstack 0
   679  000005                     ?_strncmp:
   680                           	callstack 0
   681  000005                     ?_isspace:
   682                           	callstack 0
   683  000005                     ?___wmul:
   684                           	callstack 0
   685  000005                     ?___awmod:
   686                           	callstack 0
   687  000005                     ?___fladd:
   688                           	callstack 0
   689  000005                     ?___flmul:
   690                           	callstack 0
   691  000005                     ?___flneg:
   692                           	callstack 0
   693  000005                     ?___fltol:
   694                           	callstack 0
   695  000005                     ?___xxtofl:
   696                           	callstack 0
   697  000005                     ?___aodiv:
   698                           	callstack 0
   699  000005                     ?___aomod:
   700                           	callstack 0
   701  000005                     DCmotors_init@PWMperiod:
   702                           	callstack 0
   703  000005                     sendCharSerial4@charToSend:
   704                           	callstack 0
   705  000005                     colorclick_toggleClearLED@toggle:
   706                           	callstack 0
   707  000005                     ___wmul@multiplier:
   708                           	callstack 0
   709  000005                     ___awmod@dividend:
   710                           	callstack 0
   711  000005                     isdigit@c:
   712                           	callstack 0
   713  000005                     isspace@c:
   714                           	callstack 0
   715  000005                     isupper@c:
   716                           	callstack 0
   717  000005                     fputc@c:
   718                           	callstack 0
   719  000005                     strcpy@dest:
   720                           	callstack 0
   721  000005                     strlen@s:
   722                           	callstack 0
   723  000005                     strncmp@_l:
   724                           	callstack 0
   725  000005                     ___fleq@ff1:
   726                           	callstack 0
   727  000005                     ___flneg@f1:
   728                           	callstack 0
   729  000005                     ___fltol@f1:
   730                           	callstack 0
   731  000005                     ___fladd@b:
   732                           	callstack 0
   733  000005                     ___flmul@b:
   734                           	callstack 0
   735  000005                     ___xxtofl@val:
   736                           	callstack 0
   737  000005                     ___fpclassifyf@x:
   738                           	callstack 0
   739  000005                     ___aodiv@dividend:
   740                           	callstack 0
   741  000005                     ___aomod@dividend:
   742                           	callstack 0
   743                           
   744                           ; 8 bytes @ 0x4
   745  000005                     	ds	1
   746  000006                     ??_I2C_2_Master_Read:
   747  000006                     I2C_2_Master_Write@data_byte:
   748                           	callstack 0
   749  000006                     sendStringSerial4@string:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x5
   753  000006                     	ds	1
   754  000007                     ??_isupper:
   755  000007                     ??_isdigit:
   756  000007                     ??_isspace:
   757  000007                     I2C_2_Master_Read@ack:
   758                           	callstack 0
   759  000007                     colorclick_writetoaddr@value:
   760                           	callstack 0
   761  000007                     ___wmul@multiplicand:
   762                           	callstack 0
   763  000007                     ___awmod@divisor:
   764                           	callstack 0
   765  000007                     fputc@fp:
   766                           	callstack 0
   767  000007                     strcpy@src:
   768                           	callstack 0
   769  000007                     strlen@a:
   770                           	callstack 0
   771  000007                     strncmp@_r:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x6
   775  000007                     	ds	1
   776  000008                     I2C_2_Master_Read@tmp:
   777                           	callstack 0
   778  000008                     colorclick_writetoaddr@address:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x7
   782  000008                     	ds	1
   783  000009                     ??_colorclick_init:
   784  000009                     ??_fputc:
   785  000009                     ??___fpclassifyf:
   786  000009                     ??_strcpy:
   787  000009                     ??___fltol:
   788  000009                     ??___xxtofl:
   789  000009                     ?_colorclick_readRed:
   790                           	callstack 0
   791  000009                     ?_colorclick_readGreen:
   792                           	callstack 0
   793  000009                     ?_colorclick_readBlue:
   794                           	callstack 0
   795  000009                     ?_colorclick_readClear:
   796                           	callstack 0
   797  000009                     ___awmod@counter:
   798                           	callstack 0
   799  000009                     ___wmul@product:
   800                           	callstack 0
   801  000009                     strncmp@n:
   802                           	callstack 0
   803  000009                     ___fleq@ff2:
   804                           	callstack 0
   805  000009                     ___fladd@a:
   806                           	callstack 0
   807  000009                     ___flmul@a:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x8
   811  000009                     	ds	1
   812  00000A                     ___awmod@sign:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x9
   816  00000A                     	ds	1
   817  00000B                     ??_strncmp:
   818  00000B                     ??_colorclick_readRed:
   819  00000B                     ??_colorclick_readGreen:
   820  00000B                     ??_colorclick_readBlue:
   821  00000B                     ??_colorclick_readClear:
   822  00000B                     ?_tolower:
   823                           	callstack 0
   824  00000B                     ?___awdiv:
   825                           	callstack 0
   826  00000B                     _isspace$2634:
   827                           	callstack 0
   828  00000B                     ___awdiv@dividend:
   829                           	callstack 0
   830  00000B                     strcpy@s:
   831                           	callstack 0
   832  00000B                     tolower@c:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0xA
   836  00000B                     	ds	1
   837  00000C                     ?_atoi:
   838                           	callstack 0
   839  00000C                     atoi@s:
   840                           	callstack 0
   841  00000C                     strncmp@l:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0xB
   845  00000C                     	ds	1
   846  00000D                     ??___fladd:
   847  00000D                     ??___flmul:
   848  00000D                     ??_tolower:
   849  00000D                     ??___fleq:
   850  00000D                     ___fltol@sign1:
   851                           	callstack 0
   852  00000D                     ___xxtofl@sign:
   853                           	callstack 0
   854  00000D                     ___awdiv@divisor:
   855                           	callstack 0
   856  00000D                     ___fpclassifyf@e:
   857                           	callstack 0
   858  00000D                     strcpy@d:
   859                           	callstack 0
   860  00000D                     ___aodiv@divisor:
   861                           	callstack 0
   862  00000D                     ___aomod@divisor:
   863                           	callstack 0
   864                           
   865                           ; 8 bytes @ 0xC
   866  00000D                     	ds	1
   867  00000E                     ??_atoi:
   868  00000E                     ___fltol@exp1:
   869                           	callstack 0
   870  00000E                     ___xxtofl@exp:
   871                           	callstack 0
   872  00000E                     colorclick_readRed@tmp:
   873                           	callstack 0
   874  00000E                     colorclick_readGreen@tmp:
   875                           	callstack 0
   876  00000E                     colorclick_readBlue@tmp:
   877                           	callstack 0
   878  00000E                     colorclick_readClear@tmp:
   879                           	callstack 0
   880  00000E                     fputs@s:
   881                           	callstack 0
   882  00000E                     strncmp@r:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0xD
   886  00000E                     	ds	1
   887  00000F                     ___awdiv@counter:
   888                           	callstack 0
   889  00000F                     ___xxtofl@arg:
   890                           	callstack 0
   891  00000F                     ___fpclassifyf@u:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0xE
   895  00000F                     	ds	1
   896  000010                     ?_colorclick_readColour:
   897                           	callstack 0
   898  000010                     ___awdiv@sign:
   899                           	callstack 0
   900  000010                     fputs@fp:
   901                           	callstack 0
   902  000010                     colorclick_readColour@current:
   903                           	callstack 0
   904                           
   905                           ; 8 bytes @ 0xF
   906  000010                     	ds	1
   907  000011                     ___fladd@signs:
   908                           	callstack 0
   909  000011                     ___flmul@sign:
   910                           	callstack 0
   911  000011                     ___awdiv@quotient:
   912                           	callstack 0
   913  000011                     _tolower$2698:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x10
   917  000011                     	ds	1
   918  000012                     ___fladd@aexp:
   919                           	callstack 0
   920  000012                     ___flmul@aexp:
   921                           	callstack 0
   922  000012                     fputs@c:
   923                           	callstack 0
   924  000012                     atoi@neg:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x11
   928  000012                     	ds	1
   929  000013                     ?___fldiv:
   930                           	callstack 0
   931  000013                     ___fladd@bexp:
   932                           	callstack 0
   933  000013                     setMotorPWM@m:
   934                           	callstack 0
   935  000013                     fputs@i:
   936                           	callstack 0
   937  000013                     ___fldiv@b:
   938                           	callstack 0
   939  000013                     ___flmul@grs:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x12
   943  000013                     	ds	1
   944  000014                     ___fladd@grs:
   945                           	callstack 0
   946  000014                     _atoi$2603:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x13
   950  000014                     	ds	1
   951  000015                     ??_setMotorPWM:
   952  000015                     ?_pad:
   953                           	callstack 0
   954  000015                     ___aodiv@counter:
   955                           	callstack 0
   956  000015                     ___aomod@counter:
   957                           	callstack 0
   958  000015                     pad@fp:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x14
   962  000015                     	ds	1
   963  000016                     ___aodiv@sign:
   964                           	callstack 0
   965  000016                     ___aomod@sign:
   966                           	callstack 0
   967  000016                     _atoi$2605:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x15
   971  000016                     	ds	1
   972  000017                     ?_abs:
   973                           	callstack 0
   974  000017                     ___flmul@bexp:
   975                           	callstack 0
   976  000017                     pad@buf:
   977                           	callstack 0
   978  000017                     abs@a:
   979                           	callstack 0
   980  000017                     ___fldiv@a:
   981                           	callstack 0
   982  000017                     ___aodiv@quotient:
   983                           	callstack 0
   984                           
   985                           ; 8 bytes @ 0x16
   986  000017                     	ds	1
   987  000018                     _atoi$2604:
   988                           	callstack 0
   989  000018                     ___flmul@prod:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x17
   993  000018                     	ds	1
   994  000019                     ??_abs:
   995  000019                     pad@p:
   996                           	callstack 0
   997  000019                     atoi@n:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x18
  1001  000019                     	ds	2
  1002  00001B                     ??___fldiv:
  1003  00001B                     ??_pad:
  1004                           
  1005                           ; 1 bytes @ 0x1A
  1006  00001B                     	ds	1
  1007  00001C                     setMotorPWM@PWMduty:
  1008                           	callstack 0
  1009  00001C                     ___flmul@temp:
  1010                           	callstack 0
  1011  00001C                     pad@i:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x1B
  1015  00001C                     	ds	2
  1016  00001E                     ?___flsub:
  1017                           	callstack 0
  1018  00001E                     reverse@mL:
  1019                           	callstack 0
  1020  00001E                     stop@mL:
  1021                           	callstack 0
  1022  00001E                     turnLeft@mL:
  1023                           	callstack 0
  1024  00001E                     turnRight@mL:
  1025                           	callstack 0
  1026  00001E                     pad@w:
  1027                           	callstack 0
  1028  00001E                     ___flge@ff1:
  1029                           	callstack 0
  1030  00001E                     ___flsub@b:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x1D
  1034  00001E                     	ds	1
  1035  00001F                     ___fldiv@rem:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x1E
  1039  00001F                     	ds	1
  1040  000020                     ?_dtoa:
  1041                           	callstack 0
  1042  000020                     reverse@mR:
  1043                           	callstack 0
  1044  000020                     stop@mR:
  1045                           	callstack 0
  1046  000020                     turnLeft@mR:
  1047                           	callstack 0
  1048  000020                     turnRight@mR:
  1049                           	callstack 0
  1050  000020                     dtoa@fp:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x1F
  1054  000020                     	ds	2
  1055  000022                     ??_reverse:
  1056  000022                     ??_stop:
  1057  000022                     turnLeft@deg:
  1058                           	callstack 0
  1059  000022                     turnRight@deg:
  1060                           	callstack 0
  1061  000022                     ___flge@ff2:
  1062                           	callstack 0
  1063  000022                     ___flsub@a:
  1064                           	callstack 0
  1065  000022                     dtoa@d:
  1066                           	callstack 0
  1067                           
  1068                           ; 8 bytes @ 0x21
  1069  000022                     	ds	1
  1070  000023                     ??_turnLeft:
  1071  000023                     ??_turnRight:
  1072  000023                     ___fldiv@sign:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x22
  1076  000023                     	ds	1
  1077  000024                     ___fldiv@new_exp:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x23
  1081  000024                     	ds	2
  1082  000026                     ??___flge:
  1083  000026                     ___fldiv@grs:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x25
  1087  000026                     	ds	4
  1088  00002A                     ??_dtoa:
  1089  00002A                     ___fldiv@bexp:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x29
  1093  00002A                     	ds	1
  1094  00002B                     ___fldiv@aexp:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x2A
  1098  00002B                     	ds	1
  1099  00002C                     ?_floorf:
  1100                           	callstack 0
  1101  00002C                     floorf@x:
  1102                           	callstack 0
  1103  00002C                     read_card_RGB@current:
  1104                           	callstack 0
  1105                           
  1106                           ; 8 bytes @ 0x2B
  1107  00002C                     	ds	4
  1108  000030                     ??_floorf:
  1109                           
  1110                           ; 1 bytes @ 0x2F
  1111  000030                     	ds	2
  1112  000032                     _dtoa$2513:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x31
  1116  000032                     	ds	2
  1117  000034                     read_card_RGB@mL:
  1118                           	callstack 0
  1119  000034                     dtoa@p:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x33
  1123  000034                     	ds	2
  1124  000036                     read_card_RGB@mR:
  1125                           	callstack 0
  1126  000036                     dtoa@w:
  1127                           	callstack 0
  1128  000036                     floorf@m:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x35
  1132  000036                     	ds	2
  1133  000038                     dtoa@s:
  1134                           	callstack 0
  1135  000038                     read_card_RGB@G_rel:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x37
  1139  000038                     	ds	2
  1140  00003A                     floorf@e:
  1141                           	callstack 0
  1142  00003A                     dtoa@n:
  1143                           	callstack 0
  1144                           
  1145                           ; 8 bytes @ 0x39
  1146  00003A                     	ds	2
  1147  00003C                     read_card_RGB@B_rel:
  1148                           	callstack 0
  1149  00003C                     floorf@u:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x3B
  1153  00003C                     	ds	4
  1154  000040                     ?_efgtoa:
  1155                           	callstack 0
  1156  000040                     efgtoa@fp:
  1157                           	callstack 0
  1158  000040                     read_card_RGB@R_rel:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x3F
  1162  000040                     	ds	2
  1163  000042                     dtoa@i:
  1164                           	callstack 0
  1165  000042                     efgtoa@f:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x41
  1169  000042                     	ds	4
  1170  000046                     efgtoa@c:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x45
  1174  000046                     	ds	1
  1175  000047                     ??_efgtoa:
  1176                           
  1177                           ; 1 bytes @ 0x46
  1178  000047                     	ds	5
  1179  00004C                     ?_vfpfcnvrt:
  1180                           	callstack 0
  1181  00004C                     vfpfcnvrt@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x4B
  1185  00004C                     	ds	2
  1186  00004E                     vfpfcnvrt@fmt:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x4D
  1190  00004E                     	ds	2
  1191  000050                     vfpfcnvrt@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x4F
  1195  000050                     	ds	2
  1196  000052                     ??_vfpfcnvrt:
  1197                           
  1198                           ; 1 bytes @ 0x51
  1199  000052                     	ds	4
  1200  000056                     
  1201                           ; 1 bytes @ 0x55
  1202 ;;
  1203 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1204 ;;
  1205 ;; *************** function _main *****************
  1206 ;; Defined at:
  1207 ;;		line 7 in file "main.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  buf           100    2[BANK1 ] unsigned char [100]
  1212 ;;  C_rel           4  114[BANK1 ] float 
  1213 ;;  B_rel           4  110[BANK1 ] float 
  1214 ;;  G_rel           4  106[BANK1 ] float 
  1215 ;;  R_rel           4  102[BANK1 ] float 
  1216 ;;  motorR          9  135[BANK1 ] struct .
  1217 ;;  motorL          9  126[BANK1 ] struct .
  1218 ;;  current         8  118[BANK1 ] struct .
  1219 ;;  PWMperiod       1    0        unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Locals:         0       0     142       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Totals:         0       0     144       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;Total ram usage:      144 bytes
  1234 ;; Hardware stack levels required when called: 13
  1235 ;; This function calls:
  1236 ;;		_ADC_init
  1237 ;;		_DCmotors_init
  1238 ;;		_USART4_init
  1239 ;;		___fldiv
  1240 ;;		___xxtofl
  1241 ;;		_colorclick_init
  1242 ;;		_colorclick_readColour
  1243 ;;		_colorclick_toggleClearLED
  1244 ;;		_read_card_RGB
  1245 ;;		_sendStringSerial4
  1246 ;;		_sprintf
  1247 ;; This function is called by:
  1248 ;;		Startup code after reset
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text0
  1253  003410                     __ptext0:
  1254                           	callstack 0
  1255  003410                     _main:
  1256                           	callstack 18
  1257  003410                     
  1258                           ;main.c: 12:     card_flag = 0;
  1259  003410  0E00               	movlw	0
  1260  003412  0101               	movlb	1	; () banked
  1261  003414  6F91               	movwf	_card_flag& (0+255),b	;volatile
  1262                           
  1263                           ;main.c: 13:     battery_flag = 0;
  1264  003416  0E00               	movlw	0
  1265  003418  6F90               	movwf	_battery_flag& (0+255),b	;volatile
  1266                           
  1267                           ;main.c: 14:     returnhome_flag = 0;
  1268  00341A  0E00               	movlw	0
  1269  00341C  6E5A               	movwf	_returnhome_flag^0,c	;volatile
  1270  00341E                     
  1271                           ; BSR set to: 1
  1272                           ;main.c: 15:     ADC_init();
  1273  00341E  EC19  F02C         	call	_ADC_init	;wreg free
  1274  003422                     
  1275                           ;main.c: 16:     colorclick_init();
  1276  003422  ECD5  F02A         	call	_colorclick_init	;wreg free
  1277  003426                     
  1278                           ;main.c: 18:     DCmotors_init(PWMperiod);
  1279  003426  0E63               	movlw	99
  1280  003428  ECE3  F029         	call	_DCmotors_init
  1281  00342C                     
  1282                           ;main.c: 19:     USART4_init();
  1283  00342C  EC09  F02C         	call	_USART4_init	;wreg free
  1284  003430                     
  1285                           ;main.c: 24:     DC_motor motorL;;main.c: 25:     motorL.power=0;
  1286  003430  0E00               	movlw	0
  1287  003432  0101               	movlb	1	; () banked
  1288  003434  6F7E               	movwf	main@motorL& (0+255),b
  1289  003436                     
  1290                           ; BSR set to: 1
  1291                           ;main.c: 26:     motorL.direction=1;
  1292  003436  0E01               	movlw	1
  1293  003438  6F7F               	movwf	(main@motorL+1)& (0+255),b
  1294                           
  1295                           ;main.c: 27:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1296  00343A  0EA3               	movlw	163
  1297  00343C  6F80               	movwf	(main@motorL+2)& (0+255),b
  1298  00343E  0E0F               	movlw	15
  1299  003440  6F81               	movwf	(main@motorL+3)& (0+255),b
  1300                           
  1301                           ;main.c: 28:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1302  003442  0E7D               	movlw	125
  1303  003444  6F82               	movwf	(main@motorL+4)& (0+255),b
  1304  003446  0E0F               	movlw	15
  1305  003448  6F83               	movwf	(main@motorL+5)& (0+255),b
  1306  00344A                     
  1307                           ; BSR set to: 1
  1308                           ;main.c: 29:     motorL.dir_pin=4;
  1309  00344A  0E04               	movlw	4
  1310  00344C  6F84               	movwf	(main@motorL+6)& (0+255),b
  1311  00344E                     
  1312                           ; BSR set to: 1
  1313                           ;main.c: 30:     motorL.PWMperiod=PWMperiod;
  1314  00344E  0E00               	movlw	0
  1315  003450  6F86               	movwf	(main@motorL+8)& (0+255),b
  1316  003452  0E63               	movlw	99
  1317  003454  6F85               	movwf	(main@motorL+7)& (0+255),b
  1318  003456                     
  1319                           ; BSR set to: 1
  1320                           ;main.c: 33:     DC_motor motorR;;main.c: 34:     motorR.power=0;
  1321  003456  0E00               	movlw	0
  1322  003458  6F87               	movwf	main@motorR& (0+255),b
  1323  00345A                     
  1324                           ; BSR set to: 1
  1325                           ;main.c: 35:     motorR.direction=1;
  1326  00345A  0E01               	movlw	1
  1327  00345C  6F88               	movwf	(main@motorR+1)& (0+255),b
  1328  00345E                     
  1329                           ; BSR set to: 1
  1330                           ;main.c: 36:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1331  00345E  0EA0               	movlw	160
  1332  003460  6F89               	movwf	(main@motorR+2)& (0+255),b
  1333  003462  0E0F               	movlw	15
  1334  003464  6F8A               	movwf	(main@motorR+3)& (0+255),b
  1335  003466                     
  1336                           ; BSR set to: 1
  1337                           ;main.c: 37:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1338  003466  0E7F               	movlw	127
  1339  003468  6F8B               	movwf	(main@motorR+4)& (0+255),b
  1340  00346A  0E0F               	movlw	15
  1341  00346C  6F8C               	movwf	(main@motorR+5)& (0+255),b
  1342  00346E                     
  1343                           ; BSR set to: 1
  1344                           ;main.c: 38:     motorR.dir_pin=6;
  1345  00346E  0E06               	movlw	6
  1346  003470  6F8D               	movwf	(main@motorR+6)& (0+255),b
  1347  003472                     
  1348                           ; BSR set to: 1
  1349                           ;main.c: 39:     motorR.PWMperiod=PWMperiod;
  1350  003472  0E00               	movlw	0
  1351  003474  6F8F               	movwf	(main@motorR+8)& (0+255),b
  1352  003476  0E63               	movlw	99
  1353  003478  6F8E               	movwf	(main@motorR+7)& (0+255),b
  1354  00347A                     l105:
  1355  00347A  A48E               	btfss	142,2,c	;volatile
  1356  00347C  EF42  F01A         	goto	u10301
  1357  003480  EF44  F01A         	goto	u10300
  1358  003484                     u10301:
  1359  003484  EF4B  F01A         	goto	l109
  1360  003488                     u10300:
  1361  003488  B68E               	btfsc	142,3,c	;volatile
  1362  00348A  EF49  F01A         	goto	u10311
  1363  00348E  EF4B  F01A         	goto	u10310
  1364  003492                     u10311:
  1365  003492  EF3D  F01A         	goto	l105
  1366  003496                     u10310:
  1367  003496                     l109:
  1368                           
  1369                           ;main.c: 91:     LATDbits.LATD3 = 1;
  1370  003496  867C               	bsf	124,3,c	;volatile
  1371  003498                     
  1372                           ;main.c: 92:     colorclick_toggleClearLED(1);
  1373  003498  0E01               	movlw	1
  1374  00349A  ECE8  F02B         	call	_colorclick_toggleClearLED
  1375  00349E                     
  1376                           ;main.c: 93:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1377  00349E  0E52               	movlw	82
  1378  0034A0  0101               	movlb	1	; () banked
  1379  0034A2  6F01               	movwf	(??_main+1)& (0+255),b
  1380  0034A4  0E2B               	movlw	43
  1381  0034A6  6F00               	movwf	??_main& (0+255),b
  1382  0034A8  0E00               	movlw	0
  1383  0034AA                     u10397:
  1384  0034AA  2EE8               	decfsz	wreg,f,c
  1385  0034AC  D7FE               	bra	u10397
  1386  0034AE  2F00               	decfsz	??_main& (0+255),f,b
  1387  0034B0  D7FC               	bra	u10397
  1388  0034B2  2F01               	decfsz	(??_main+1)& (0+255),f,b
  1389  0034B4  D7FA               	bra	u10397
  1390  0034B6  F000               	nop	
  1391  0034B8                     l111:
  1392  0034B8  A48E               	btfss	142,2,c	;volatile
  1393  0034BA  EF61  F01A         	goto	u10321
  1394  0034BE  EF63  F01A         	goto	u10320
  1395  0034C2                     u10321:
  1396  0034C2  EF6A  F01A         	goto	l7345
  1397  0034C6                     u10320:
  1398  0034C6  B68E               	btfsc	142,3,c	;volatile
  1399  0034C8  EF68  F01A         	goto	u10331
  1400  0034CC  EF6A  F01A         	goto	u10330
  1401  0034D0                     u10331:
  1402  0034D0  EF5C  F01A         	goto	l111
  1403  0034D4                     u10330:
  1404  0034D4                     l7345:
  1405                           
  1406                           ;main.c: 122:         current = colorclick_readColour(current);
  1407  0034D4  EE21  F076         	lfsr	2,main@current
  1408  0034D8  EE00  F010         	lfsr	0,colorclick_readColour@current
  1409  0034DC  0E07               	movlw	7
  1410  0034DE                     u10341:
  1411  0034DE  CFDB FFEB          	movff	plusw2,plusw0
  1412  0034E2  06E8               	decf	wreg,f,c
  1413  0034E4  E2FC               	bc	u10341
  1414  0034E6  EC50  F02A         	call	_colorclick_readColour	;wreg free
  1415  0034EA  EE21  F076         	lfsr	2,main@current
  1416  0034EE  0E07               	movlw	7
  1417  0034F0                     u10351:
  1418  0034F0  CFEB FFDB          	movff	plusw0,plusw2
  1419  0034F4  06E8               	decf	wreg,f,c
  1420  0034F6  E2FC               	bc	u10351
  1421  0034F8                     
  1422                           ;main.c: 123:         char buf[100];;main.c: 124:         float R_rel = (float)current.R
      +                           / (float)current.C;
  1423  0034F8  C176  F005         	movff	main@current,___xxtofl@val
  1424  0034FC  C177  F006         	movff	main@current+1,___xxtofl@val+1
  1425  003500  6A07               	clrf	(___xxtofl@val+2)^0,c
  1426  003502  6A08               	clrf	(___xxtofl@val+3)^0,c
  1427  003504  0E00               	movlw	0
  1428  003506  ECD9  F020         	call	___xxtofl
  1429  00350A  C005  F013         	movff	?___xxtofl,___fldiv@b
  1430  00350E  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1431  003512  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1432  003516  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1433  00351A  C17C  F005         	movff	main@current+6,___xxtofl@val
  1434  00351E  C17D  F006         	movff	main@current+7,___xxtofl@val+1
  1435  003522  6A07               	clrf	(___xxtofl@val+2)^0,c
  1436  003524  6A08               	clrf	(___xxtofl@val+3)^0,c
  1437  003526  0E00               	movlw	0
  1438  003528  ECD9  F020         	call	___xxtofl
  1439  00352C  C005  F017         	movff	?___xxtofl,___fldiv@a
  1440  003530  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1441  003534  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1442  003538  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1443  00353C  EC3B  F018         	call	___fldiv	;wreg free
  1444  003540  C013  F166         	movff	?___fldiv,main@R_rel
  1445  003544  C014  F167         	movff	?___fldiv+1,main@R_rel+1
  1446  003548  C015  F168         	movff	?___fldiv+2,main@R_rel+2
  1447  00354C  C016  F169         	movff	?___fldiv+3,main@R_rel+3
  1448  003550                     
  1449                           ;main.c: 125:         float G_rel = (float)current.G / (float)current.C;
  1450  003550  C178  F005         	movff	main@current+2,___xxtofl@val
  1451  003554  C179  F006         	movff	main@current+3,___xxtofl@val+1
  1452  003558  6A07               	clrf	(___xxtofl@val+2)^0,c
  1453  00355A  6A08               	clrf	(___xxtofl@val+3)^0,c
  1454  00355C  0E00               	movlw	0
  1455  00355E  ECD9  F020         	call	___xxtofl
  1456  003562  C005  F013         	movff	?___xxtofl,___fldiv@b
  1457  003566  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1458  00356A  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1459  00356E  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1460  003572  C17C  F005         	movff	main@current+6,___xxtofl@val
  1461  003576  C17D  F006         	movff	main@current+7,___xxtofl@val+1
  1462  00357A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1463  00357C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1464  00357E  0E00               	movlw	0
  1465  003580  ECD9  F020         	call	___xxtofl
  1466  003584  C005  F017         	movff	?___xxtofl,___fldiv@a
  1467  003588  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1468  00358C  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1469  003590  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1470  003594  EC3B  F018         	call	___fldiv	;wreg free
  1471  003598  C013  F16A         	movff	?___fldiv,main@G_rel
  1472  00359C  C014  F16B         	movff	?___fldiv+1,main@G_rel+1
  1473  0035A0  C015  F16C         	movff	?___fldiv+2,main@G_rel+2
  1474  0035A4  C016  F16D         	movff	?___fldiv+3,main@G_rel+3
  1475  0035A8                     
  1476                           ;main.c: 126:         float B_rel = (float)current.B / (float)current.C;
  1477  0035A8  C17A  F005         	movff	main@current+4,___xxtofl@val
  1478  0035AC  C17B  F006         	movff	main@current+5,___xxtofl@val+1
  1479  0035B0  6A07               	clrf	(___xxtofl@val+2)^0,c
  1480  0035B2  6A08               	clrf	(___xxtofl@val+3)^0,c
  1481  0035B4  0E00               	movlw	0
  1482  0035B6  ECD9  F020         	call	___xxtofl
  1483  0035BA  C005  F013         	movff	?___xxtofl,___fldiv@b
  1484  0035BE  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1485  0035C2  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1486  0035C6  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1487  0035CA  C17C  F005         	movff	main@current+6,___xxtofl@val
  1488  0035CE  C17D  F006         	movff	main@current+7,___xxtofl@val+1
  1489  0035D2  6A07               	clrf	(___xxtofl@val+2)^0,c
  1490  0035D4  6A08               	clrf	(___xxtofl@val+3)^0,c
  1491  0035D6  0E00               	movlw	0
  1492  0035D8  ECD9  F020         	call	___xxtofl
  1493  0035DC  C005  F017         	movff	?___xxtofl,___fldiv@a
  1494  0035E0  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1495  0035E4  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1496  0035E8  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1497  0035EC  EC3B  F018         	call	___fldiv	;wreg free
  1498  0035F0  C013  F16E         	movff	?___fldiv,main@B_rel
  1499  0035F4  C014  F16F         	movff	?___fldiv+1,main@B_rel+1
  1500  0035F8  C015  F170         	movff	?___fldiv+2,main@B_rel+2
  1501  0035FC  C016  F171         	movff	?___fldiv+3,main@B_rel+3
  1502  003600                     
  1503                           ;main.c: 127:         float C_rel = (float)current.C / (float)current.C;
  1504  003600  C17C  F005         	movff	main@current+6,___xxtofl@val
  1505  003604  C17D  F006         	movff	main@current+7,___xxtofl@val+1
  1506  003608  6A07               	clrf	(___xxtofl@val+2)^0,c
  1507  00360A  6A08               	clrf	(___xxtofl@val+3)^0,c
  1508  00360C  0E00               	movlw	0
  1509  00360E  ECD9  F020         	call	___xxtofl
  1510  003612  C005  F013         	movff	?___xxtofl,___fldiv@b
  1511  003616  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1512  00361A  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1513  00361E  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1514  003622  C17C  F005         	movff	main@current+6,___xxtofl@val
  1515  003626  C17D  F006         	movff	main@current+7,___xxtofl@val+1
  1516  00362A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1517  00362C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1518  00362E  0E00               	movlw	0
  1519  003630  ECD9  F020         	call	___xxtofl
  1520  003634  C005  F017         	movff	?___xxtofl,___fldiv@a
  1521  003638  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1522  00363C  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1523  003640  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1524  003644  EC3B  F018         	call	___fldiv	;wreg free
  1525  003648  C013  F172         	movff	?___fldiv,main@C_rel
  1526  00364C  C014  F173         	movff	?___fldiv+1,main@C_rel+1
  1527  003650  C015  F174         	movff	?___fldiv+2,main@C_rel+2
  1528  003654  C016  F175         	movff	?___fldiv+3,main@C_rel+3
  1529  003658                     
  1530                           ;main.c: 128:         sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.3f %.3f\n
      +                          \r", current.R, current.G, current.B, current.C, R_rel, G_rel, B_rel, C_rel);
  1531  003658  0E02               	movlw	low main@buf
  1532  00365A  0100               	movlb	0	; () banked
  1533  00365C  6FB4               	movwf	sprintf@s& (0+255),b
  1534  00365E  0E01               	movlw	high main@buf
  1535  003660  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  1536  003662  0E01               	movlw	low STR_1
  1537  003664  6FB6               	movwf	sprintf@fmt& (0+255),b
  1538  003666  0E0E               	movlw	high STR_1
  1539  003668  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  1540  00366A  C176  F0B8         	movff	main@current,?_sprintf+4
  1541  00366E  C177  F0B9         	movff	main@current+1,?_sprintf+5
  1542  003672  C178  F0BA         	movff	main@current+2,?_sprintf+6
  1543  003676  C179  F0BB         	movff	main@current+3,?_sprintf+7
  1544  00367A  C17A  F0BC         	movff	main@current+4,?_sprintf+8
  1545  00367E  C17B  F0BD         	movff	main@current+5,?_sprintf+9
  1546  003682  C17C  F0BE         	movff	main@current+6,?_sprintf+10
  1547  003686  C17D  F0BF         	movff	main@current+7,?_sprintf+11
  1548  00368A  C166  F0C0         	movff	main@R_rel,?_sprintf+12
  1549  00368E  C167  F0C1         	movff	main@R_rel+1,?_sprintf+13
  1550  003692  C168  F0C2         	movff	main@R_rel+2,?_sprintf+14
  1551  003696  C169  F0C3         	movff	main@R_rel+3,?_sprintf+15
  1552  00369A  C16A  F0C4         	movff	main@G_rel,?_sprintf+16
  1553  00369E  C16B  F0C5         	movff	main@G_rel+1,?_sprintf+17
  1554  0036A2  C16C  F0C6         	movff	main@G_rel+2,?_sprintf+18
  1555  0036A6  C16D  F0C7         	movff	main@G_rel+3,?_sprintf+19
  1556  0036AA  C16E  F0C8         	movff	main@B_rel,?_sprintf+20
  1557  0036AE  C16F  F0C9         	movff	main@B_rel+1,?_sprintf+21
  1558  0036B2  C170  F0CA         	movff	main@B_rel+2,?_sprintf+22
  1559  0036B6  C171  F0CB         	movff	main@B_rel+3,?_sprintf+23
  1560  0036BA  C172  F0CC         	movff	main@C_rel,?_sprintf+24
  1561  0036BE  C173  F0CD         	movff	main@C_rel+1,?_sprintf+25
  1562  0036C2  C174  F0CE         	movff	main@C_rel+2,?_sprintf+26
  1563  0036C6  C175  F0CF         	movff	main@C_rel+3,?_sprintf+27
  1564  0036CA  ECF1  F028         	call	_sprintf	;wreg free
  1565  0036CE                     
  1566                           ;main.c: 130:         sendStringSerial4(buf);
  1567  0036CE  0E02               	movlw	low main@buf
  1568  0036D0  6E06               	movwf	sendStringSerial4@string^0,c
  1569  0036D2  0E01               	movlw	high main@buf
  1570  0036D4  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1571  0036D6  EC80  F02B         	call	_sendStringSerial4	;wreg free
  1572  0036DA                     
  1573                           ;main.c: 131:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1574  0036DA  0E29               	movlw	41
  1575  0036DC  0101               	movlb	1	; () banked
  1576  0036DE  6F01               	movwf	(??_main+1)& (0+255),b
  1577  0036E0  0E96               	movlw	150
  1578  0036E2  6F00               	movwf	??_main& (0+255),b
  1579  0036E4  0E7F               	movlw	127
  1580  0036E6                     u10407:
  1581  0036E6  2EE8               	decfsz	wreg,f,c
  1582  0036E8  D7FE               	bra	u10407
  1583  0036EA  2F00               	decfsz	??_main& (0+255),f,b
  1584  0036EC  D7FC               	bra	u10407
  1585  0036EE  2F01               	decfsz	(??_main+1)& (0+255),f,b
  1586  0036F0  D7FA               	bra	u10407
  1587  0036F2                     
  1588                           ;main.c: 137:         read_card_RGB(current, &motorL, &motorR);
  1589  0036F2  EE21  F076         	lfsr	2,main@current
  1590  0036F6  EE00  F02C         	lfsr	0,read_card_RGB@current
  1591  0036FA  0E07               	movlw	7
  1592  0036FC                     u10361:
  1593  0036FC  CFDB FFEB          	movff	plusw2,plusw0
  1594  003700  06E8               	decf	wreg,f,c
  1595  003702  E2FC               	bc	u10361
  1596  003704  0E7E               	movlw	low main@motorL
  1597  003706  6E34               	movwf	read_card_RGB@mL^0,c
  1598  003708  0E01               	movlw	high main@motorL
  1599  00370A  6E35               	movwf	(read_card_RGB@mL+1)^0,c
  1600  00370C  0E87               	movlw	low main@motorR
  1601  00370E  6E36               	movwf	read_card_RGB@mR^0,c
  1602  003710  0E01               	movlw	high main@motorR
  1603  003712  6E37               	movwf	(read_card_RGB@mR+1)^0,c
  1604  003714  EC53  F00D         	call	_read_card_RGB	;wreg free
  1605  003718  EF5C  F01A         	goto	l111
  1606  00371C  EF13  F000         	goto	start
  1607  003720                     __end_of_main:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _sprintf *****************
  1611 ;; Defined at:
  1612 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  s               2   84[BANK0 ] PTR unsigned char 
  1615 ;;		 -> main@buf(100), 
  1616 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  1617 ;;		 -> STR_1(54), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  f               6  114[BANK0 ] struct _IO_FILE
  1620 ;;  ap              2  112[BANK0 ] PTR void [1]
  1621 ;;		 -> ?_sprintf(2), 
  1622 ;;  ret             2    0        int 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  2   84[BANK0 ] int 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1632 ;;      Params:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1635 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1636 ;;Total ram usage:       36 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 12
  1639 ;; This function calls:
  1640 ;;		_vfprintf
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text1
  1647  0051E2                     __ptext1:
  1648                           	callstack 0
  1649  0051E2                     _sprintf:
  1650                           	callstack 18
  1651  0051E2  0EB8               	movlw	low (?_sprintf+4)
  1652  0051E4  0100               	movlb	0	; () banked
  1653  0051E6  6FD0               	movwf	sprintf@ap& (0+255),b
  1654  0051E8  0E00               	movlw	high (?_sprintf+4)
  1655  0051EA  6FD1               	movwf	(sprintf@ap+1)& (0+255),b
  1656  0051EC  C0B4  F0D2         	movff	sprintf@s,sprintf@f
  1657  0051F0  C0B5  F0D3         	movff	sprintf@s+1,sprintf@f+1
  1658  0051F4                     
  1659                           ; BSR set to: 0
  1660  0051F4  0E00               	movlw	0
  1661  0051F6  6FD5               	movwf	(sprintf@f+3)& (0+255),b
  1662  0051F8  0E00               	movlw	0
  1663  0051FA  6FD4               	movwf	(sprintf@f+2)& (0+255),b
  1664  0051FC                     
  1665                           ; BSR set to: 0
  1666  0051FC  0E00               	movlw	0
  1667  0051FE  6FD7               	movwf	(sprintf@f+5)& (0+255),b
  1668  005200  0E00               	movlw	0
  1669  005202  6FD6               	movwf	(sprintf@f+4)& (0+255),b
  1670  005204                     
  1671                           ; BSR set to: 0
  1672  005204  0ED2               	movlw	low sprintf@f
  1673  005206  6FAC               	movwf	vfprintf@fp& (0+255),b
  1674  005208  0E00               	movlw	high sprintf@f
  1675  00520A  6FAD               	movwf	(vfprintf@fp+1)& (0+255),b
  1676  00520C  C0B6  F0AE         	movff	sprintf@fmt,vfprintf@fmt
  1677  005210  C0B7  F0AF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1678  005214  0ED0               	movlw	low sprintf@ap
  1679  005216  6FB0               	movwf	vfprintf@ap& (0+255),b
  1680  005218  0E00               	movlw	high sprintf@ap
  1681  00521A  6FB1               	movwf	(vfprintf@ap+1)& (0+255),b
  1682  00521C  EC5F  F028         	call	_vfprintf	;wreg free
  1683  005220  0100               	movlb	0	; () banked
  1684  005222  51D4               	movf	(sprintf@f+2)& (0+255),w,b
  1685  005224  25B4               	addwf	sprintf@s& (0+255),w,b
  1686  005226  6ED9               	movwf	fsr2l,c
  1687  005228  51D5               	movf	(sprintf@f+3)& (0+255),w,b
  1688  00522A  21B5               	addwfc	(sprintf@s+1)& (0+255),w,b
  1689  00522C  6EDA               	movwf	fsr2h,c
  1690  00522E  0E00               	movlw	0
  1691  005230  6EDF               	movwf	indf2,c
  1692  005232                     
  1693                           ; BSR set to: 0
  1694  005232  0012               	return		;funcret
  1695  005234                     __end_of_sprintf:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _vfprintf *****************
  1699 ;; Defined at:
  1700 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  fp              2   76[BANK0 ] PTR struct _IO_FILE
  1703 ;;		 -> sprintf@f(6), 
  1704 ;;  fmt             2   78[BANK0 ] PTR const unsigned char 
  1705 ;;		 -> STR_1(54), 
  1706 ;;  ap              2   80[BANK0 ] PTR PTR void 
  1707 ;;		 -> sprintf@ap(2), 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  cfmt            2   82[BANK0 ] PTR unsigned char 
  1710 ;;		 -> STR_1(54), 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  2   76[BANK0 ] int 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1720 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1723 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;Total ram usage:        8 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 11
  1727 ;; This function calls:
  1728 ;;		_vfpfcnvrt
  1729 ;; This function is called by:
  1730 ;;		_sprintf
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text2
  1735  0050BE                     __ptext2:
  1736                           	callstack 0
  1737  0050BE                     _vfprintf:
  1738                           	callstack 18
  1739  0050BE                     
  1740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1741  0050BE  C0AE  F0B2         	movff	vfprintf@fmt,vfprintf@cfmt
  1742  0050C2  C0AF  F0B3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1743  0050C6                     
  1744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1745  0050C6  0E00               	movlw	0
  1746  0050C8  0100               	movlb	0	; () banked
  1747  0050CA  6FF5               	movwf	(_nout+1)& (0+255),b
  1748  0050CC  0E00               	movlw	0
  1749  0050CE  6FF4               	movwf	_nout& (0+255),b
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1752  0050D0  EF7D  F028         	goto	l7221
  1753  0050D4                     l7219:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1757  0050D4  C0AC  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1758  0050D8  C0AD  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1759  0050DC  0EB2               	movlw	low vfprintf@cfmt
  1760  0050DE  6E4E               	movwf	vfpfcnvrt@fmt^0,c
  1761  0050E0  0E00               	movlw	high vfprintf@cfmt
  1762  0050E2  6E4F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1763  0050E4  C0B0  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  1764  0050E8  C0B1  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1765  0050EC  EC11  F011         	call	_vfpfcnvrt	;wreg free
  1766  0050F0  504C               	movf	?_vfpfcnvrt^0,w,c
  1767  0050F2  0100               	movlb	0	; () banked
  1768  0050F4  27F4               	addwf	_nout& (0+255),f,b
  1769  0050F6  504D               	movf	(?_vfpfcnvrt+1)^0,w,c
  1770  0050F8  23F5               	addwfc	(_nout+1)& (0+255),f,b
  1771  0050FA                     l7221:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1775  0050FA  C0B2  FFF6         	movff	vfprintf@cfmt,tblptrl
  1776  0050FE  C0B3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1777  005102                     	if	0	;tblptru may be non-zero
  1778  005102                     	endif
  1779  005102                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1780  005102  0E00               	movlw	low (__mediumconst shr (0+16))
  1781  005104  6EF8               	movwf	tblptru,c
  1782  005106                     	endif
  1783  005106  0008               	tblrd		*
  1784  005108  50F5               	movf	tablat,w,c
  1785  00510A  0900               	iorlw	0
  1786  00510C  A4D8               	btfss	status,2,c
  1787  00510E  EF8B  F028         	goto	u10061
  1788  005112  EF8D  F028         	goto	u10060
  1789  005116                     u10061:
  1790  005116  EF6A  F028         	goto	l7219
  1791  00511A                     u10060:
  1792  00511A                     
  1793                           ; BSR set to: 0
  1794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1795  00511A  C0F4  F0AC         	movff	_nout,?_vfprintf
  1796  00511E  C0F5  F0AD         	movff	_nout+1,?_vfprintf+1
  1797  005122                     
  1798                           ; BSR set to: 0
  1799  005122  0012               	return		;funcret
  1800  005124                     __end_of_vfprintf:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function _vfpfcnvrt *****************
  1804 ;; Defined at:
  1805 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  1808 ;;		 -> sprintf@f(6), 
  1809 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  1810 ;;		 -> vfprintf@cfmt(2), 
  1811 ;;  ap              2   79[COMRAM] PTR PTR void 
  1812 ;;		 -> sprintf@ap(2), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  ll              8   56[BANK0 ] long long 
  1815 ;;  llu             8    0        unsigned long long 
  1816 ;;  f               4   68[BANK0 ] unsigned long long 
  1817 ;;  ct              3   72[BANK0 ] unsigned char [3]
  1818 ;;  vp              3    0        PTR void 
  1819 ;;  cp              3    0        PTR unsigned char 
  1820 ;;  i               2    0        int 
  1821 ;;  done            2    0        int 
  1822 ;;  c               1   75[BANK0 ] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2   75[COMRAM] int 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Totals:        10      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;Total ram usage:       30 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 10
  1839 ;; This function calls:
  1840 ;;		_atoi
  1841 ;;		_dtoa
  1842 ;;		_efgtoa
  1843 ;;		_fputc
  1844 ;;		_isdigit
  1845 ;;		_isupper
  1846 ;;		_strncmp
  1847 ;;		_tolower
  1848 ;; This function is called by:
  1849 ;;		_vfprintf
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text3
  1854  002222                     __ptext3:
  1855                           	callstack 0
  1856  002222                     _vfpfcnvrt:
  1857                           	callstack 18
  1858  002222                     
  1859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1860  002222  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1861  002226  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1862  00222A  CFDE FFF6          	movff	postinc2,tblptrl
  1863  00222E  CFDD FFF7          	movff	postdec2,tblptrh
  1864  002232                     	if	0	;tblptru may be non-zero
  1865  002232                     	endif
  1866  002232                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1867  002232  0E00               	movlw	low (__mediumconst shr (0+16))
  1868  002234  6EF8               	movwf	tblptru,c
  1869  002236                     	endif
  1870  002236  0008               	tblrd		*
  1871  002238  50F5               	movf	tablat,w,c
  1872  00223A  0A25               	xorlw	37
  1873  00223C  A4D8               	btfss	status,2,c
  1874  00223E  EF23  F011         	goto	u9601
  1875  002242  EF25  F011         	goto	u9600
  1876  002246                     u9601:
  1877  002246  EFA8  F013         	goto	l7097
  1878  00224A                     u9600:
  1879  00224A                     
  1880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1881  00224A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1882  00224E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1883  002252  2ADE               	incf	postinc2,f,c
  1884  002254  0E00               	movlw	0
  1885  002256  22DD               	addwfc	postdec2,f,c
  1886  002258                     
  1887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1888  002258  0E00               	movlw	0
  1889  00225A  0100               	movlb	0	; () banked
  1890  00225C  6FF7               	movwf	(_width+1)& (0+255),b
  1891  00225E  0E00               	movlw	0
  1892  002260  6FF6               	movwf	_width& (0+255),b
  1893  002262  C0F6  F056         	movff	_width,_flags
  1894  002266  C0F7  F057         	movff	_width+1,_flags+1
  1895  00226A                     
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1898  00226A  69F8               	setf	_prec& (0+255),b
  1899  00226C  69F9               	setf	(_prec+1)& (0+255),b
  1900  00226E                     
  1901                           ; BSR set to: 0
  1902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1903  00226E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1904  002272  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1905  002276  CFDE FFF6          	movff	postinc2,tblptrl
  1906  00227A  CFDD FFF7          	movff	postdec2,tblptrh
  1907  00227E                     	if	0	;tblptru may be non-zero
  1908  00227E                     	endif
  1909  00227E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1910  00227E  0E00               	movlw	low (__mediumconst shr (0+16))
  1911  002280  6EF8               	movwf	tblptru,c
  1912  002282                     	endif
  1913  002282  0008               	tblrd		*
  1914  002284  50F5               	movf	tablat,w,c
  1915  002286  0A2E               	xorlw	46
  1916  002288  A4D8               	btfss	status,2,c
  1917  00228A  EF49  F011         	goto	u9611
  1918  00228E  EF4B  F011         	goto	u9610
  1919  002292                     u9611:
  1920  002292  EFCD  F011         	goto	l7033
  1921  002296                     u9610:
  1922  002296                     
  1923                           ; BSR set to: 0
  1924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1925  002296  0E00               	movlw	0
  1926  002298  6FF9               	movwf	(_prec+1)& (0+255),b
  1927  00229A  0E00               	movlw	0
  1928  00229C  6FF8               	movwf	_prec& (0+255),b
  1929  00229E                     
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1932  00229E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1933  0022A2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1934  0022A6  2ADE               	incf	postinc2,f,c
  1935  0022A8  0E00               	movlw	0
  1936  0022AA  22DD               	addwfc	postdec2,f,c
  1937  0022AC                     
  1938                           ; BSR set to: 0
  1939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1940  0022AC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1941  0022B0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1942  0022B4  CFDE FFF6          	movff	postinc2,tblptrl
  1943  0022B8  CFDD FFF7          	movff	postdec2,tblptrh
  1944  0022BC                     	if	0	;tblptru may be non-zero
  1945  0022BC                     	endif
  1946  0022BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1947  0022BC  0E00               	movlw	low (__mediumconst shr (0+16))
  1948  0022BE  6EF8               	movwf	tblptru,c
  1949  0022C0                     	endif
  1950  0022C0  0008               	tblrd		*
  1951  0022C2  50F5               	movf	tablat,w,c
  1952  0022C4  0A2A               	xorlw	42
  1953  0022C6  A4D8               	btfss	status,2,c
  1954  0022C8  EF68  F011         	goto	u9621
  1955  0022CC  EF6A  F011         	goto	u9620
  1956  0022D0                     u9621:
  1957  0022D0  EF87  F011         	goto	l7023
  1958  0022D4                     u9620:
  1959  0022D4                     
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1962  0022D4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1963  0022D8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1964  0022DC  2ADE               	incf	postinc2,f,c
  1965  0022DE  0E00               	movlw	0
  1966  0022E0  22DD               	addwfc	postdec2,f,c
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1969  0022E2  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1970  0022E6  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1971  0022EA  CFDF F052          	movff	indf2,??_vfpfcnvrt
  1972  0022EE  0E02               	movlw	2
  1973  0022F0  26DE               	addwf	postinc2,f,c
  1974  0022F2  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  1975  0022F6  0E00               	movlw	0
  1976  0022F8  22DD               	addwfc	postdec2,f,c
  1977  0022FA  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1978  0022FE  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1979  002302  CFDE F0F8          	movff	postinc2,_prec
  1980  002306  CFDD F0F9          	movff	postdec2,_prec+1
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1983  00230A  EFCD  F011         	goto	l7033
  1984  00230E                     l7023:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1988  00230E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1989  002312  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1990  002316  CFDE F00C          	movff	postinc2,atoi@s
  1991  00231A  CFDD F00D          	movff	postdec2,atoi@s+1
  1992  00231E  ECB3  F021         	call	_atoi	;wreg free
  1993  002322  C00C  F0F8         	movff	?_atoi,_prec
  1994  002326  C00D  F0F9         	movff	?_atoi+1,_prec+1
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1997  00232A  EF9E  F011         	goto	l7027
  1998  00232E                     l7025:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2002  00232E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2003  002332  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2004  002336  2ADE               	incf	postinc2,f,c
  2005  002338  0E00               	movlw	0
  2006  00233A  22DD               	addwfc	postdec2,f,c
  2007  00233C                     l7027:
  2008  00233C  0ED0               	movlw	208
  2009  00233E  6E52               	movwf	??_vfpfcnvrt^0,c
  2010  002340  0EFF               	movlw	255
  2011  002342  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  2012  002344  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2013  002348  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2014  00234C  CFDE FFF6          	movff	postinc2,tblptrl
  2015  002350  CFDD FFF7          	movff	postdec2,tblptrh
  2016  002354                     	if	0	;tblptru may be non-zero
  2017  002354                     	endif
  2018  002354                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2019  002354  0E00               	movlw	low (__mediumconst shr (0+16))
  2020  002356  6EF8               	movwf	tblptru,c
  2021  002358                     	endif
  2022  002358  0008               	tblrd		*
  2023  00235A  50F5               	movf	tablat,w,c
  2024  00235C  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  2025  00235E  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  2026  002360  5052               	movf	??_vfpfcnvrt^0,w,c
  2027  002362  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2028  002364  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2029  002366  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2030  002368  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  2031  00236A  E10A               	bnz	u9630
  2032  00236C  0E0A               	movlw	10
  2033  00236E  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2034  002370  A0D8               	btfss	status,0,c
  2035  002372  EFBD  F011         	goto	u9631
  2036  002376  EFC0  F011         	goto	u9630
  2037  00237A                     u9631:
  2038  00237A  0E01               	movlw	1
  2039  00237C  EFC1  F011         	goto	u9640
  2040  002380                     u9630:
  2041  002380  0E00               	movlw	0
  2042  002382                     u9640:
  2043  002382  0100               	movlb	0	; () banked
  2044  002384  6FA0               	movwf	_vfpfcnvrt$2562& (0+255),b
  2045  002386  6BA1               	clrf	(_vfpfcnvrt$2562+1)& (0+255),b
  2046  002388                     
  2047                           ; BSR set to: 0
  2048  002388  51A0               	movf	_vfpfcnvrt$2562& (0+255),w,b
  2049  00238A  11A1               	iorwf	(_vfpfcnvrt$2562+1)& (0+255),w,b
  2050  00238C  A4D8               	btfss	status,2,c
  2051  00238E  EFCB  F011         	goto	u9651
  2052  002392  EFCD  F011         	goto	u9650
  2053  002396                     u9651:
  2054  002396  EF97  F011         	goto	l7025
  2055  00239A                     u9650:
  2056  00239A                     l7033:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2060  00239A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2061  00239E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2062  0023A2  CFDE FFF6          	movff	postinc2,tblptrl
  2063  0023A6  CFDD FFF7          	movff	postdec2,tblptrh
  2064  0023AA                     	if	0	;tblptru may be non-zero
  2065  0023AA                     	endif
  2066  0023AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2067  0023AA  0E00               	movlw	low (__mediumconst shr (0+16))
  2068  0023AC  6EF8               	movwf	tblptru,c
  2069  0023AE                     	endif
  2070  0023AE  0008               	tblrd		*
  2071  0023B0  50F5               	movf	tablat,w,c
  2072  0023B2  6E0B               	movwf	tolower@c^0,c
  2073  0023B4  6A0C               	clrf	(tolower@c+1)^0,c
  2074  0023B6  EC92  F028         	call	_tolower	;wreg free
  2075  0023BA  500B               	movf	?_tolower^0,w,c
  2076  0023BC  0100               	movlb	0	; () banked
  2077  0023BE  6FA8               	movwf	vfpfcnvrt@ct& (0+255),b
  2078  0023C0                     
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2081  0023C0  51A8               	movf	vfpfcnvrt@ct& (0+255),w,b
  2082  0023C2  B4D8               	btfsc	status,2,c
  2083  0023C4  EFE6  F011         	goto	u9661
  2084  0023C8  EFE8  F011         	goto	u9660
  2085  0023CC                     u9661:
  2086  0023CC  EF26  F012         	goto	l7043
  2087  0023D0                     u9660:
  2088  0023D0                     
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2091  0023D0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2092  0023D4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2093  0023D8  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  2094  0023DC  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  2095  0023E0  0E01               	movlw	1
  2096  0023E2  2652               	addwf	??_vfpfcnvrt^0,f,c
  2097  0023E4  0E00               	movlw	0
  2098  0023E6  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2099  0023E8  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2100  0023EC  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2101  0023F0                     	if	0	;tblptru may be non-zero
  2102  0023F0                     	endif
  2103  0023F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2104  0023F0  0E00               	movlw	low (__mediumconst shr (0+16))
  2105  0023F2  6EF8               	movwf	tblptru,c
  2106  0023F4                     	endif
  2107  0023F4  0008               	tblrd		*
  2108  0023F6  50F5               	movf	tablat,w,c
  2109  0023F8  6E0B               	movwf	tolower@c^0,c
  2110  0023FA  6A0C               	clrf	(tolower@c+1)^0,c
  2111  0023FC  EC92  F028         	call	_tolower	;wreg free
  2112  002400  500B               	movf	?_tolower^0,w,c
  2113  002402  0100               	movlb	0	; () banked
  2114  002404  6FA9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2115  002406                     
  2116                           ; BSR set to: 0
  2117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2118  002406  51A9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2119  002408  B4D8               	btfsc	status,2,c
  2120  00240A  EF09  F012         	goto	u9671
  2121  00240E  EF0B  F012         	goto	u9670
  2122  002412                     u9671:
  2123  002412  EF26  F012         	goto	l7043
  2124  002416                     u9670:
  2125  002416                     
  2126                           ; BSR set to: 0
  2127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2128  002416  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2129  00241A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2130  00241E  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  2131  002422  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  2132  002426  0E02               	movlw	2
  2133  002428  2652               	addwf	??_vfpfcnvrt^0,f,c
  2134  00242A  0E00               	movlw	0
  2135  00242C  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2136  00242E  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2137  002432  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2138  002436                     	if	0	;tblptru may be non-zero
  2139  002436                     	endif
  2140  002436                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2141  002436  0E00               	movlw	low (__mediumconst shr (0+16))
  2142  002438  6EF8               	movwf	tblptru,c
  2143  00243A                     	endif
  2144  00243A  0008               	tblrd		*
  2145  00243C  50F5               	movf	tablat,w,c
  2146  00243E  6E0B               	movwf	tolower@c^0,c
  2147  002440  6A0C               	clrf	(tolower@c+1)^0,c
  2148  002442  EC92  F028         	call	_tolower	;wreg free
  2149  002446  500B               	movf	?_tolower^0,w,c
  2150  002448  0100               	movlb	0	; () banked
  2151  00244A  6FAA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2152  00244C                     l7043:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2156  00244C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2157  002450  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2158  002454  CFDE FFF6          	movff	postinc2,tblptrl
  2159  002458  CFDD FFF7          	movff	postdec2,tblptrh
  2160  00245C                     	if	0	;tblptru may be non-zero
  2161  00245C                     	endif
  2162  00245C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2163  00245C  0E00               	movlw	low (__mediumconst shr (0+16))
  2164  00245E  6EF8               	movwf	tblptru,c
  2165  002460                     	endif
  2166  002460  0008               	tblrd		*
  2167  002462  50F5               	movf	tablat,w,c
  2168  002464  0A64               	xorlw	100
  2169  002466  B4D8               	btfsc	status,2,c
  2170  002468  EF38  F012         	goto	u9681
  2171  00246C  EF3A  F012         	goto	u9680
  2172  002470                     u9681:
  2173  002470  EF4E  F012         	goto	l7047
  2174  002474                     u9680:
  2175  002474                     
  2176                           ; BSR set to: 0
  2177  002474  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178  002478  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179  00247C  CFDE FFF6          	movff	postinc2,tblptrl
  2180  002480  CFDD FFF7          	movff	postdec2,tblptrh
  2181  002484                     	if	0	;tblptru may be non-zero
  2182  002484                     	endif
  2183  002484                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2184  002484  0E00               	movlw	low (__mediumconst shr (0+16))
  2185  002486  6EF8               	movwf	tblptru,c
  2186  002488                     	endif
  2187  002488  0008               	tblrd		*
  2188  00248A  50F5               	movf	tablat,w,c
  2189  00248C  0A69               	xorlw	105
  2190  00248E  A4D8               	btfss	status,2,c
  2191  002490  EF4C  F012         	goto	u9691
  2192  002494  EF4E  F012         	goto	u9690
  2193  002498                     u9691:
  2194  002498  EF8E  F012         	goto	l7053
  2195  00249C                     u9690:
  2196  00249C                     l7047:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2200  00249C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2201  0024A0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2202  0024A4  2ADE               	incf	postinc2,f,c
  2203  0024A6  0E00               	movlw	0
  2204  0024A8  22DD               	addwfc	postdec2,f,c
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2207  0024AA  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2208  0024AE  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2209  0024B2  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2210  0024B6  0E02               	movlw	2
  2211  0024B8  26DE               	addwf	postinc2,f,c
  2212  0024BA  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2213  0024BE  0E00               	movlw	0
  2214  0024C0  22DD               	addwfc	postdec2,f,c
  2215  0024C2  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2216  0024C6  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2217  0024CA  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  2218  0024CE  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  2219  0024D2  0E00               	movlw	0
  2220  0024D4  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2221  0024D6  0EFF               	movlw	-1
  2222  0024D8  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2223  0024DA  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2224  0024DC  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2225  0024DE  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2226  0024E0  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2227  0024E2  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2228  0024E4                     
  2229                           ; BSR set to: 0
  2230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2231  0024E4  C04C  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2232  0024E8  C04D  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2233  0024EC  C098  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2234  0024F0  C099  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2235  0024F4  C09A  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2236  0024F8  C09B  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2237  0024FC  C09C  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2238  002500  C09D  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2239  002504  C09E  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2240  002508  C09F  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2241  00250C  EC90  F01B         	call	_dtoa	;wreg free
  2242  002510  C020  F04C         	movff	?_dtoa,?_vfpfcnvrt
  2243  002514  C021  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2244  002518  EFC5  F013         	goto	l1369
  2245  00251C                     l7053:
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2249  00251C  0E66               	movlw	102
  2250  00251E  19A8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2251  002520  A4D8               	btfss	status,2,c
  2252  002522  EF95  F012         	goto	u9701
  2253  002526  EF97  F012         	goto	u9700
  2254  00252A                     u9701:
  2255  00252A  EFD9  F012         	goto	l7065
  2256  00252E                     u9700:
  2257  00252E                     
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2260  00252E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2261  002532  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2262  002536  CFDE FFF6          	movff	postinc2,tblptrl
  2263  00253A  CFDD FFF7          	movff	postdec2,tblptrh
  2264  00253E                     	if	0	;tblptru may be non-zero
  2265  00253E                     	endif
  2266  00253E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2267  00253E  0E00               	movlw	low (__mediumconst shr (0+16))
  2268  002540  6EF8               	movwf	tblptru,c
  2269  002542                     	endif
  2270  002542  0008               	tblrd		*
  2271  002544  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  2272  002548                     
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2275  002548  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2276  00254C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2277  002550  2ADE               	incf	postinc2,f,c
  2278  002552  0E00               	movlw	0
  2279  002554  22DD               	addwfc	postdec2,f,c
  2280  002556                     
  2281                           ; BSR set to: 0
  2282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2283  002556  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2284  00255A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2285  00255E  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2286  002562  0E04               	movlw	4
  2287  002564  26DE               	addwf	postinc2,f,c
  2288  002566  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2289  00256A  0E00               	movlw	0
  2290  00256C  22DD               	addwfc	postdec2,f,c
  2291  00256E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2292  002572  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2293  002576  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  2294  00257A  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  2295  00257E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  2296  002582  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  2297  002586                     l7061:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2301  002586  C04C  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  2302  00258A  C04D  F041         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2303  00258E  C0A4  F042         	movff	vfpfcnvrt@f,efgtoa@f
  2304  002592  C0A5  F043         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2305  002596  C0A6  F044         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2306  00259A  C0A7  F045         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2307  00259E  C0AB  F046         	movff	vfpfcnvrt@c,efgtoa@c
  2308  0025A2  EC26  F007         	call	_efgtoa	;wreg free
  2309  0025A6  C040  F04C         	movff	?_efgtoa,?_vfpfcnvrt
  2310  0025AA  C041  F04D         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2311  0025AE  EFC5  F013         	goto	l1369
  2312  0025B2                     l7065:
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2316  0025B2  0EA8               	movlw	low vfpfcnvrt@ct
  2317  0025B4  6E05               	movwf	strncmp@_l^0,c
  2318  0025B6  0E00               	movlw	high vfpfcnvrt@ct
  2319  0025B8  6E06               	movwf	(strncmp@_l+1)^0,c
  2320  0025BA  0E47               	movlw	low STR_10
  2321  0025BC  6E07               	movwf	strncmp@_r^0,c
  2322  0025BE  0E0E               	movlw	high STR_10
  2323  0025C0  6E08               	movwf	(strncmp@_r+1)^0,c
  2324  0025C2  0E00               	movlw	0
  2325  0025C4  6E0A               	movwf	(strncmp@n+1)^0,c
  2326  0025C6  0E02               	movlw	2
  2327  0025C8  6E09               	movwf	strncmp@n^0,c
  2328  0025CA  EC7F  F025         	call	_strncmp	;wreg free
  2329  0025CE  5005               	movf	?_strncmp^0,w,c
  2330  0025D0  1006               	iorwf	(?_strncmp+1)^0,w,c
  2331  0025D2  A4D8               	btfss	status,2,c
  2332  0025D4  EFEE  F012         	goto	u9711
  2333  0025D8  EFF0  F012         	goto	u9710
  2334  0025DC                     u9711:
  2335  0025DC  EF70  F013         	goto	l7081
  2336  0025E0                     u9710:
  2337  0025E0                     
  2338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2339  0025E0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2340  0025E4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2341  0025E8  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  2342  0025EC  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  2343  0025F0  0E01               	movlw	1
  2344  0025F2  2652               	addwf	??_vfpfcnvrt^0,f,c
  2345  0025F4  0E00               	movlw	0
  2346  0025F6  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2347  0025F8  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2348  0025FC  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2349  002600                     	if	0	;tblptru may be non-zero
  2350  002600                     	endif
  2351  002600                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2352  002600  0E00               	movlw	low (__mediumconst shr (0+16))
  2353  002602  6EF8               	movwf	tblptru,c
  2354  002604                     	endif
  2355  002604  0008               	tblrd		*
  2356  002606  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  2357  00260A  0EBF               	movlw	191
  2358  00260C  6E52               	movwf	??_vfpfcnvrt^0,c
  2359  00260E  0EFF               	movlw	255
  2360  002610  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  2361  002612  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2362  002616  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2363  00261A  CFDE FFF6          	movff	postinc2,tblptrl
  2364  00261E  CFDD FFF7          	movff	postdec2,tblptrh
  2365  002622                     	if	0	;tblptru may be non-zero
  2366  002622                     	endif
  2367  002622                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2368  002622  0E00               	movlw	low (__mediumconst shr (0+16))
  2369  002624  6EF8               	movwf	tblptru,c
  2370  002626                     	endif
  2371  002626  0008               	tblrd		*
  2372  002628  50F5               	movf	tablat,w,c
  2373  00262A  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  2374  00262C  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  2375  00262E  5052               	movf	??_vfpfcnvrt^0,w,c
  2376  002630  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2377  002632  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2378  002634  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2379  002636  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  2380  002638  E10A               	bnz	u9720
  2381  00263A  0E1A               	movlw	26
  2382  00263C  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2383  00263E  A0D8               	btfss	status,0,c
  2384  002640  EF24  F013         	goto	u9721
  2385  002644  EF27  F013         	goto	u9720
  2386  002648                     u9721:
  2387  002648  0E01               	movlw	1
  2388  00264A  EF28  F013         	goto	u9730
  2389  00264E                     u9720:
  2390  00264E  0E00               	movlw	0
  2391  002650                     u9730:
  2392  002650  0100               	movlb	0	; () banked
  2393  002652  6FA2               	movwf	_vfpfcnvrt$2567& (0+255),b
  2394  002654  6BA3               	clrf	(_vfpfcnvrt$2567+1)& (0+255),b
  2395  002656                     
  2396                           ; BSR set to: 0
  2397  002656  51A2               	movf	_vfpfcnvrt$2567& (0+255),w,b
  2398  002658  11A3               	iorwf	(_vfpfcnvrt$2567+1)& (0+255),w,b
  2399  00265A  B4D8               	btfsc	status,2,c
  2400  00265C  EF32  F013         	goto	u9741
  2401  002660  EF34  F013         	goto	u9740
  2402  002664                     u9741:
  2403  002664  EF4E  F013         	goto	l7075
  2404  002668                     u9740:
  2405  002668                     
  2406                           ; BSR set to: 0
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2408  002668  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2409  00266C  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2410  002670  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2411  002674  0E04               	movlw	4
  2412  002676  26DE               	addwf	postinc2,f,c
  2413  002678  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2414  00267C  0E00               	movlw	0
  2415  00267E  22DD               	addwfc	postdec2,f,c
  2416  002680  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2417  002684  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2418  002688  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  2419  00268C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  2420  002690  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  2421  002694  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2424  002698  EF66  F013         	goto	l1377
  2425  00269C                     l7075:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2429  00269C  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2430  0026A0  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2431  0026A4  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2432  0026A8  0E04               	movlw	4
  2433  0026AA  26DE               	addwf	postinc2,f,c
  2434  0026AC  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2435  0026B0  0E00               	movlw	0
  2436  0026B2  22DD               	addwfc	postdec2,f,c
  2437  0026B4  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2438  0026B8  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2439  0026BC  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  2440  0026C0  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  2441  0026C4  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  2442  0026C8  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  2443  0026CC                     l1377:
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2447  0026CC  0E02               	movlw	2
  2448  0026CE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2449  0026D2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2450  0026D6  26DE               	addwf	postinc2,f,c
  2451  0026D8  0E00               	movlw	0
  2452  0026DA  22DD               	addwfc	postdec2,f,c
  2453  0026DC  EFC3  F012         	goto	l7061
  2454  0026E0                     l7081:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2457  0026E0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458  0026E4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459  0026E8  CFDE FFF6          	movff	postinc2,tblptrl
  2460  0026EC  CFDD FFF7          	movff	postdec2,tblptrh
  2461  0026F0                     	if	0	;tblptru may be non-zero
  2462  0026F0                     	endif
  2463  0026F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2464  0026F0  0E00               	movlw	low (__mediumconst shr (0+16))
  2465  0026F2  6EF8               	movwf	tblptru,c
  2466  0026F4                     	endif
  2467  0026F4  0008               	tblrd		*
  2468  0026F6  50F5               	movf	tablat,w,c
  2469  0026F8  0A25               	xorlw	37
  2470  0026FA  A4D8               	btfss	status,2,c
  2471  0026FC  EF82  F013         	goto	u9751
  2472  002700  EF84  F013         	goto	u9750
  2473  002704                     u9751:
  2474  002704  EF9B  F013         	goto	l7091
  2475  002708                     u9750:
  2476  002708                     
  2477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2478  002708  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2479  00270C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2480  002710  2ADE               	incf	postinc2,f,c
  2481  002712  0E00               	movlw	0
  2482  002714  22DD               	addwfc	postdec2,f,c
  2483  002716                     
  2484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2485  002716  0E00               	movlw	0
  2486  002718  6E06               	movwf	(fputc@c+1)^0,c
  2487  00271A  0E25               	movlw	37
  2488  00271C  6E05               	movwf	fputc@c^0,c
  2489  00271E  C04C  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2490  002722  C04D  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2491  002726  ECF0  F025         	call	_fputc	;wreg free
  2492  00272A                     l7087:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2495  00272A  0E00               	movlw	0
  2496  00272C  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  2497  00272E  0E01               	movlw	1
  2498  002730  6E4C               	movwf	?_vfpfcnvrt^0,c
  2499  002732  EFC5  F013         	goto	l1369
  2500  002736                     l7091:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2503  002736  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2504  00273A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2505  00273E  2ADE               	incf	postinc2,f,c
  2506  002740  0E00               	movlw	0
  2507  002742  22DD               	addwfc	postdec2,f,c
  2508  002744                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2510  002744  0E00               	movlw	0
  2511  002746  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  2512  002748  0E00               	movlw	0
  2513  00274A  6E4C               	movwf	?_vfpfcnvrt^0,c
  2514  00274C  EFC5  F013         	goto	l1369
  2515  002750                     l7097:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2518  002750  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2519  002754  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2520  002758  CFDE FFF6          	movff	postinc2,tblptrl
  2521  00275C  CFDD FFF7          	movff	postdec2,tblptrh
  2522  002760                     	if	0	;tblptru may be non-zero
  2523  002760                     	endif
  2524  002760                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2525  002760  0E00               	movlw	low (__mediumconst shr (0+16))
  2526  002762  6EF8               	movwf	tblptru,c
  2527  002764                     	endif
  2528  002764  0008               	tblrd		*
  2529  002766  50F5               	movf	tablat,w,c
  2530  002768  6E05               	movwf	fputc@c^0,c
  2531  00276A  6A06               	clrf	(fputc@c+1)^0,c
  2532  00276C  C04C  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2533  002770  C04D  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2534  002774  ECF0  F025         	call	_fputc	;wreg free
  2535  002778                     
  2536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2537  002778  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2538  00277C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2539  002780  2ADE               	incf	postinc2,f,c
  2540  002782  0E00               	movlw	0
  2541  002784  22DD               	addwfc	postdec2,f,c
  2542  002786  EF95  F013         	goto	l7087
  2543  00278A                     l1369:
  2544  00278A  0012               	return		;funcret
  2545  00278C                     __end_of_vfpfcnvrt:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _strncmp *****************
  2549 ;; Defined at:
  2550 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2553 ;;		 -> vfpfcnvrt@ct(3), 
  2554 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2555 ;;		 -> STR_12(3), 
  2556 ;;  n               2    8[COMRAM] unsigned int 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2559 ;;		 -> STR_12(3), 
  2560 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2561 ;;		 -> vfpfcnvrt@ct(3), 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  2    4[COMRAM] int 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2571 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;Total ram usage:       11 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 5
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_vfpfcnvrt
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text4
  2586  004AFE                     __ptext4:
  2587                           	callstack 0
  2588  004AFE                     _strncmp:
  2589                           	callstack 22
  2590  004AFE  C005  F00C         	movff	strncmp@_l,strncmp@l
  2591  004B02  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2592  004B06  C007  F00E         	movff	strncmp@_r,strncmp@r
  2593  004B0A  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2594  004B0E  0609               	decf	strncmp@n^0,f,c
  2595  004B10  A0D8               	btfss	status,0,c
  2596  004B12  060A               	decf	(strncmp@n+1)^0,f,c
  2597  004B14  2809               	incf	strncmp@n^0,w,c
  2598  004B16  E106               	bnz	u9511
  2599  004B18  280A               	incf	(strncmp@n+1)^0,w,c
  2600  004B1A  A4D8               	btfss	status,2,c
  2601  004B1C  EF92  F025         	goto	u9511
  2602  004B20  EF94  F025         	goto	u9510
  2603  004B24                     u9511:
  2604  004B24  EFA1  F025         	goto	l6979
  2605  004B28                     u9510:
  2606  004B28  0E00               	movlw	0
  2607  004B2A  6E06               	movwf	(?_strncmp+1)^0,c
  2608  004B2C  0E00               	movlw	0
  2609  004B2E  6E05               	movwf	?_strncmp^0,c
  2610  004B30  EFEF  F025         	goto	l1505
  2611  004B34                     l6977:
  2612  004B34  4A0C               	infsnz	strncmp@l^0,f,c
  2613  004B36  2A0D               	incf	(strncmp@l+1)^0,f,c
  2614  004B38  4A0E               	infsnz	strncmp@r^0,f,c
  2615  004B3A  2A0F               	incf	(strncmp@r+1)^0,f,c
  2616  004B3C  0609               	decf	strncmp@n^0,f,c
  2617  004B3E  A0D8               	btfss	status,0,c
  2618  004B40  060A               	decf	(strncmp@n+1)^0,f,c
  2619  004B42                     l6979:
  2620  004B42  C00C  FFD9         	movff	strncmp@l,fsr2l
  2621  004B46  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2622  004B4A  50DF               	movf	indf2,w,c
  2623  004B4C  B4D8               	btfsc	status,2,c
  2624  004B4E  EFAB  F025         	goto	u9521
  2625  004B52  EFAD  F025         	goto	u9520
  2626  004B56                     u9521:
  2627  004B56  EFDC  F025         	goto	l6987
  2628  004B5A                     u9520:
  2629  004B5A  C00E  FFF6         	movff	strncmp@r,tblptrl
  2630  004B5E  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2631  004B62                     	if	0	;tblptru may be non-zero
  2632  004B62                     	endif
  2633  004B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2634  004B62  0E00               	movlw	low (__mediumconst shr (0+16))
  2635  004B64  6EF8               	movwf	tblptru,c
  2636  004B66                     	endif
  2637  004B66  0008               	tblrd		*
  2638  004B68  50F5               	movf	tablat,w,c
  2639  004B6A  0900               	iorlw	0
  2640  004B6C  B4D8               	btfsc	status,2,c
  2641  004B6E  EFBB  F025         	goto	u9531
  2642  004B72  EFBD  F025         	goto	u9530
  2643  004B76                     u9531:
  2644  004B76  EFDC  F025         	goto	l6987
  2645  004B7A                     u9530:
  2646  004B7A  5009               	movf	strncmp@n^0,w,c
  2647  004B7C  100A               	iorwf	(strncmp@n+1)^0,w,c
  2648  004B7E  B4D8               	btfsc	status,2,c
  2649  004B80  EFC4  F025         	goto	u9541
  2650  004B84  EFC6  F025         	goto	u9540
  2651  004B88                     u9541:
  2652  004B88  EFDC  F025         	goto	l6987
  2653  004B8C                     u9540:
  2654  004B8C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2655  004B90  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2656  004B94  50DF               	movf	indf2,w,c
  2657  004B96  6E0B               	movwf	??_strncmp^0,c
  2658  004B98  C00E  FFF6         	movff	strncmp@r,tblptrl
  2659  004B9C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2660  004BA0                     	if	0	;tblptru may be non-zero
  2661  004BA0                     	endif
  2662  004BA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2663  004BA0  0E00               	movlw	low (__mediumconst shr (0+16))
  2664  004BA2  6EF8               	movwf	tblptru,c
  2665  004BA4                     	endif
  2666  004BA4  0008               	tblrd		*
  2667  004BA6  50F5               	movf	tablat,w,c
  2668  004BA8  180B               	xorwf	??_strncmp^0,w,c
  2669  004BAA  B4D8               	btfsc	status,2,c
  2670  004BAC  EFDA  F025         	goto	u9551
  2671  004BB0  EFDC  F025         	goto	u9550
  2672  004BB4                     u9551:
  2673  004BB4  EF9A  F025         	goto	l6977
  2674  004BB8                     u9550:
  2675  004BB8                     l6987:
  2676  004BB8  C00C  FFD9         	movff	strncmp@l,fsr2l
  2677  004BBC  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2678  004BC0  50DF               	movf	indf2,w,c
  2679  004BC2  6E0B               	movwf	??_strncmp^0,c
  2680  004BC4  C00E  FFF6         	movff	strncmp@r,tblptrl
  2681  004BC8  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2682  004BCC                     	if	0	;tblptru may be non-zero
  2683  004BCC                     	endif
  2684  004BCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2685  004BCC  0E00               	movlw	low (__mediumconst shr (0+16))
  2686  004BCE  6EF8               	movwf	tblptru,c
  2687  004BD0                     	endif
  2688  004BD0  0008               	tblrd		*
  2689  004BD2  50F5               	movf	tablat,w,c
  2690  004BD4  5C0B               	subwf	??_strncmp^0,w,c
  2691  004BD6  6E05               	movwf	?_strncmp^0,c
  2692  004BD8  6A06               	clrf	(?_strncmp+1)^0,c
  2693  004BDA  A0D8               	btfss	status,0,c
  2694  004BDC  0606               	decf	(?_strncmp+1)^0,f,c
  2695  004BDE                     l1505:
  2696  004BDE  0012               	return		;funcret
  2697  004BE0                     __end_of_strncmp:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _efgtoa *****************
  2701 ;; Defined at:
  2702 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2705 ;;		 -> sprintf@f(6), 
  2706 ;;  f               4   65[COMRAM] PTR struct _IO_FILE
  2707 ;;  c               1   69[COMRAM] unsigned char 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  u               4   52[BANK0 ] unsigned char 
  2710 ;;  g               4   44[BANK0 ] unsigned char 
  2711 ;;  l               4   38[BANK0 ] unsigned char 
  2712 ;;  h               4   34[BANK0 ] unsigned char 
  2713 ;;  ou              4   20[BANK0 ] unsigned char 
  2714 ;;  n               2   50[BANK0 ] int 
  2715 ;;  e               2   48[BANK0 ] int 
  2716 ;;  i               2   42[BANK0 ] int 
  2717 ;;  w               2   30[BANK0 ] int 
  2718 ;;  p               2   28[BANK0 ] int 
  2719 ;;  sign            2   26[BANK0 ] int 
  2720 ;;  d               2   24[BANK0 ] int 
  2721 ;;  m               2   18[BANK0 ] int 
  2722 ;;  ne              2   16[BANK0 ] int 
  2723 ;;  pp              2   14[BANK0 ] int 
  2724 ;;  t               2   12[BANK0 ] int 
  2725 ;;  mode            1   33[BANK0 ] unsigned char 
  2726 ;;  nmode           1   32[BANK0 ] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  2   63[COMRAM] int 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2736 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2737 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2738 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2739 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2740 ;;Total ram usage:       68 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 9
  2743 ;; This function calls:
  2744 ;;		___awdiv
  2745 ;;		___awmod
  2746 ;;		___fladd
  2747 ;;		___fldiv
  2748 ;;		___fleq
  2749 ;;		___flge
  2750 ;;		___flmul
  2751 ;;		___flneg
  2752 ;;		___flsub
  2753 ;;		___fltol
  2754 ;;		___fpclassifyf
  2755 ;;		_floorf
  2756 ;;		_isupper
  2757 ;;		_pad
  2758 ;;		_strcpy
  2759 ;;		_tolower
  2760 ;; This function is called by:
  2761 ;;		_vfpfcnvrt
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text5
  2766  000E4C                     __ptext5:
  2767                           	callstack 0
  2768  000E4C                     _efgtoa:
  2769                           	callstack 18
  2770  000E4C                     
  2771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2772  000E4C  0E00               	movlw	0
  2773  000E4E  0100               	movlb	0	; () banked
  2774  000E50  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2775  000E52  0E00               	movlw	0
  2776  000E54  6F7A               	movwf	efgtoa@sign& (0+255),b
  2777  000E56                     
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2780  000E56  C042  F08C         	movff	efgtoa@f,efgtoa@g
  2781  000E5A  C043  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2782  000E5E  C044  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2783  000E62  C045  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2784  000E66                     
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2787  000E66  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2788  000E68  EF3A  F007         	goto	u8900
  2789  000E6C  EF38  F007         	goto	u8901
  2790  000E70                     u8901:
  2791  000E70  EF50  F007         	goto	l6631
  2792  000E74                     u8900:
  2793  000E74                     
  2794                           ; BSR set to: 0
  2795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2796  000E74  0E00               	movlw	0
  2797  000E76  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2798  000E78  0E01               	movlw	1
  2799  000E7A  6F7A               	movwf	efgtoa@sign& (0+255),b
  2800  000E7C                     
  2801                           ; BSR set to: 0
  2802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2803  000E7C  C08C  F005         	movff	efgtoa@g,___flneg@f1
  2804  000E80  C08D  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2805  000E84  C08E  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2806  000E88  C08F  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2807  000E8C  EC2D  F02B         	call	___flneg	;wreg free
  2808  000E90  C005  F08C         	movff	?___flneg,efgtoa@g
  2809  000E94  C006  F08D         	movff	?___flneg+1,efgtoa@g+1
  2810  000E98  C007  F08E         	movff	?___flneg+2,efgtoa@g+2
  2811  000E9C  C008  F08F         	movff	?___flneg+3,efgtoa@g+3
  2812  000EA0                     l6631:
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2815  000EA0  0E00               	movlw	0
  2816  000EA2  0100               	movlb	0	; () banked
  2817  000EA4  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2818  000EA6  0E00               	movlw	0
  2819  000EA8  6F92               	movwf	efgtoa@n& (0+255),b
  2820  000EAA                     
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2823  000EAA  C0F6  F07E         	movff	_width,efgtoa@w
  2824  000EAE  C0F7  F07F         	movff	_width+1,efgtoa@w+1
  2825  000EB2                     
  2826                           ; BSR set to: 0
  2827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2828  000EB2  517A               	movf	efgtoa@sign& (0+255),w,b
  2829  000EB4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2830  000EB6  A4D8               	btfss	status,2,c
  2831  000EB8  EF60  F007         	goto	u8911
  2832  000EBC  EF62  F007         	goto	u8910
  2833  000EC0                     u8911:
  2834  000EC0  EF69  F007         	goto	l6639
  2835  000EC4                     u8910:
  2836  000EC4                     
  2837                           ; BSR set to: 0
  2838  000EC4  A456               	btfss	_flags^0,2,c
  2839  000EC6  EF67  F007         	goto	u8921
  2840  000ECA  EF69  F007         	goto	u8920
  2841  000ECE                     u8921:
  2842  000ECE  EF83  F007         	goto	l6651
  2843  000ED2                     u8920:
  2844  000ED2                     l6639:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2848  000ED2  517A               	movf	efgtoa@sign& (0+255),w,b
  2849  000ED4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2850  000ED6  A4D8               	btfss	status,2,c
  2851  000ED8  EF70  F007         	goto	u8931
  2852  000EDC  EF72  F007         	goto	u8930
  2853  000EE0                     u8931:
  2854  000EE0  EF78  F007         	goto	l6643
  2855  000EE4                     u8930:
  2856  000EE4                     
  2857                           ; BSR set to: 0
  2858  000EE4  0E00               	movlw	0
  2859  000EE6  6F61               	movwf	(_efgtoa$2537+1)& (0+255),b
  2860  000EE8  0E2B               	movlw	43
  2861  000EEA  6F60               	movwf	_efgtoa$2537& (0+255),b
  2862  000EEC  EF7C  F007         	goto	l6645
  2863  000EF0                     l6643:
  2864                           
  2865                           ; BSR set to: 0
  2866  000EF0  0E00               	movlw	0
  2867  000EF2  6F61               	movwf	(_efgtoa$2537+1)& (0+255),b
  2868  000EF4  0E2D               	movlw	45
  2869  000EF6  6F60               	movwf	_efgtoa$2537& (0+255),b
  2870  000EF8                     l6645:
  2871                           
  2872                           ; BSR set to: 0
  2873  000EF8  C060  F192         	movff	_efgtoa$2537,_dbuf
  2874  000EFC                     
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2877  000EFC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2878  000EFE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2879  000F00                     
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2882  000F00  077E               	decf	efgtoa@w& (0+255),f,b
  2883  000F02  A0D8               	btfss	status,0,c
  2884  000F04  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2885  000F06                     l6651:
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2889  000F06  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2890  000F0A  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2891  000F0E  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2892  000F12  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2893  000F16  EC00  F025         	call	___fpclassifyf	;wreg free
  2894  000F1A  0405               	decf	?___fpclassifyf^0,w,c
  2895  000F1C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2896  000F1E  A4D8               	btfss	status,2,c
  2897  000F20  EF94  F007         	goto	u8941
  2898  000F24  EF96  F007         	goto	u8940
  2899  000F28                     u8941:
  2900  000F28  EFED  F007         	goto	l6669
  2901  000F2C                     u8940:
  2902  000F2C  0EBF               	movlw	191
  2903  000F2E  6E47               	movwf	??_efgtoa^0,c
  2904  000F30  0EFF               	movlw	255
  2905  000F32  6E48               	movwf	(??_efgtoa+1)^0,c
  2906  000F34  5046               	movf	efgtoa@c^0,w,c
  2907  000F36  6E49               	movwf	(??_efgtoa+2)^0,c
  2908  000F38  6A4A               	clrf	(??_efgtoa+3)^0,c
  2909  000F3A  5047               	movf	??_efgtoa^0,w,c
  2910  000F3C  2649               	addwf	(??_efgtoa+2)^0,f,c
  2911  000F3E  5048               	movf	(??_efgtoa+1)^0,w,c
  2912  000F40  224A               	addwfc	(??_efgtoa+3)^0,f,c
  2913  000F42  504A               	movf	(??_efgtoa+3)^0,w,c
  2914  000F44  E10A               	bnz	u8950
  2915  000F46  0E1A               	movlw	26
  2916  000F48  5C49               	subwf	(??_efgtoa+2)^0,w,c
  2917  000F4A  A0D8               	btfss	status,0,c
  2918  000F4C  EFAA  F007         	goto	u8951
  2919  000F50  EFAD  F007         	goto	u8950
  2920  000F54                     u8951:
  2921  000F54  0E01               	movlw	1
  2922  000F56  EFAE  F007         	goto	u8960
  2923  000F5A                     u8950:
  2924  000F5A  0E00               	movlw	0
  2925  000F5C                     u8960:
  2926  000F5C  0100               	movlb	0	; () banked
  2927  000F5E  6F62               	movwf	_efgtoa$2538& (0+255),b
  2928  000F60  6B63               	clrf	(_efgtoa$2538+1)& (0+255),b
  2929  000F62                     
  2930                           ; BSR set to: 0
  2931  000F62  5162               	movf	_efgtoa$2538& (0+255),w,b
  2932  000F64  1163               	iorwf	(_efgtoa$2538+1)& (0+255),w,b
  2933  000F66  B4D8               	btfsc	status,2,c
  2934  000F68  EFB8  F007         	goto	u8971
  2935  000F6C  EFBA  F007         	goto	u8970
  2936  000F70                     u8971:
  2937  000F70  EFC8  F007         	goto	l6661
  2938  000F74                     u8970:
  2939  000F74                     
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2942  000F74  0E92               	movlw	low _dbuf
  2943  000F76  2592               	addwf	efgtoa@n& (0+255),w,b
  2944  000F78  6E05               	movwf	strcpy@dest^0,c
  2945  000F7A  0E01               	movlw	high _dbuf
  2946  000F7C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2947  000F7E  6E06               	movwf	(strcpy@dest+1)^0,c
  2948  000F80  0E37               	movlw	low STR_2
  2949  000F82  6E07               	movwf	strcpy@src^0,c
  2950  000F84  0E0E               	movlw	high STR_2
  2951  000F86  6E08               	movwf	(strcpy@src+1)^0,c
  2952  000F88  ECC2  F028         	call	_strcpy	;wreg free
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2955  000F8C  EFD4  F007         	goto	l6663
  2956  000F90                     l6661:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2960  000F90  0E92               	movlw	low _dbuf
  2961  000F92  2592               	addwf	efgtoa@n& (0+255),w,b
  2962  000F94  6E05               	movwf	strcpy@dest^0,c
  2963  000F96  0E01               	movlw	high _dbuf
  2964  000F98  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2965  000F9A  6E06               	movwf	(strcpy@dest+1)^0,c
  2966  000F9C  0E3F               	movlw	low STR_3
  2967  000F9E  6E07               	movwf	strcpy@src^0,c
  2968  000FA0  0E0E               	movlw	high STR_3
  2969  000FA2  6E08               	movwf	(strcpy@src+1)^0,c
  2970  000FA4  ECC2  F028         	call	_strcpy	;wreg free
  2971  000FA8                     l6663:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2974  000FA8  0100               	movlb	0	; () banked
  2975  000FAA  0EFD               	movlw	253
  2976  000FAC  277E               	addwf	efgtoa@w& (0+255),f,b
  2977  000FAE  0EFF               	movlw	255
  2978  000FB0  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2979  000FB2                     l6665:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2982  000FB2  C040  F015         	movff	efgtoa@fp,pad@fp
  2983  000FB6  C041  F016         	movff	efgtoa@fp+1,pad@fp+1
  2984  000FBA  0E92               	movlw	low _dbuf
  2985  000FBC  6E17               	movwf	pad@buf^0,c
  2986  000FBE  0E01               	movlw	high _dbuf
  2987  000FC0  6E18               	movwf	(pad@buf+1)^0,c
  2988  000FC2  C07E  F019         	movff	efgtoa@w,pad@p
  2989  000FC6  C07F  F01A         	movff	efgtoa@w+1,pad@p+1
  2990  000FCA  ECB7  F026         	call	_pad	;wreg free
  2991  000FCE  C015  F040         	movff	?_pad,?_efgtoa
  2992  000FD2  C016  F041         	movff	?_pad+1,?_efgtoa+1
  2993  000FD6  EF52  F00D         	goto	l1275
  2994  000FDA                     l6669:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2997  000FDA  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2998  000FDE  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2999  000FE2  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3000  000FE6  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3001  000FEA  EC00  F025         	call	___fpclassifyf	;wreg free
  3002  000FEE  5005               	movf	?___fpclassifyf^0,w,c
  3003  000FF0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3004  000FF2  A4D8               	btfss	status,2,c
  3005  000FF4  EFFE  F007         	goto	u8981
  3006  000FF8  EF00  F008         	goto	u8980
  3007  000FFC                     u8981:
  3008  000FFC  EF40  F008         	goto	l6687
  3009  001000                     u8980:
  3010  001000  0EBF               	movlw	191
  3011  001002  6E47               	movwf	??_efgtoa^0,c
  3012  001004  0EFF               	movlw	255
  3013  001006  6E48               	movwf	(??_efgtoa+1)^0,c
  3014  001008  5046               	movf	efgtoa@c^0,w,c
  3015  00100A  6E49               	movwf	(??_efgtoa+2)^0,c
  3016  00100C  6A4A               	clrf	(??_efgtoa+3)^0,c
  3017  00100E  5047               	movf	??_efgtoa^0,w,c
  3018  001010  2649               	addwf	(??_efgtoa+2)^0,f,c
  3019  001012  5048               	movf	(??_efgtoa+1)^0,w,c
  3020  001014  224A               	addwfc	(??_efgtoa+3)^0,f,c
  3021  001016  504A               	movf	(??_efgtoa+3)^0,w,c
  3022  001018  E10A               	bnz	u8990
  3023  00101A  0E1A               	movlw	26
  3024  00101C  5C49               	subwf	(??_efgtoa+2)^0,w,c
  3025  00101E  A0D8               	btfss	status,0,c
  3026  001020  EF14  F008         	goto	u8991
  3027  001024  EF17  F008         	goto	u8990
  3028  001028                     u8991:
  3029  001028  0E01               	movlw	1
  3030  00102A  EF18  F008         	goto	u9000
  3031  00102E                     u8990:
  3032  00102E  0E00               	movlw	0
  3033  001030                     u9000:
  3034  001030  0100               	movlb	0	; () banked
  3035  001032  6F64               	movwf	_efgtoa$2542& (0+255),b
  3036  001034  6B65               	clrf	(_efgtoa$2542+1)& (0+255),b
  3037  001036                     
  3038                           ; BSR set to: 0
  3039  001036  5164               	movf	_efgtoa$2542& (0+255),w,b
  3040  001038  1165               	iorwf	(_efgtoa$2542+1)& (0+255),w,b
  3041  00103A  B4D8               	btfsc	status,2,c
  3042  00103C  EF22  F008         	goto	u9011
  3043  001040  EF24  F008         	goto	u9010
  3044  001044                     u9011:
  3045  001044  EF32  F008         	goto	l6679
  3046  001048                     u9010:
  3047  001048                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3050  001048  0E92               	movlw	low _dbuf
  3051  00104A  2592               	addwf	efgtoa@n& (0+255),w,b
  3052  00104C  6E05               	movwf	strcpy@dest^0,c
  3053  00104E  0E01               	movlw	high _dbuf
  3054  001050  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3055  001052  6E06               	movwf	(strcpy@dest+1)^0,c
  3056  001054  0E3B               	movlw	low STR_6
  3057  001056  6E07               	movwf	strcpy@src^0,c
  3058  001058  0E0E               	movlw	high STR_6
  3059  00105A  6E08               	movwf	(strcpy@src+1)^0,c
  3060  00105C  ECC2  F028         	call	_strcpy	;wreg free
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3063  001060  EFD4  F007         	goto	l6663
  3064  001064                     l6679:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3068  001064  0E92               	movlw	low _dbuf
  3069  001066  2592               	addwf	efgtoa@n& (0+255),w,b
  3070  001068  6E05               	movwf	strcpy@dest^0,c
  3071  00106A  0E01               	movlw	high _dbuf
  3072  00106C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3073  00106E  6E06               	movwf	(strcpy@dest+1)^0,c
  3074  001070  0E43               	movlw	low STR_7
  3075  001072  6E07               	movwf	strcpy@src^0,c
  3076  001074  0E0E               	movlw	high STR_7
  3077  001076  6E08               	movwf	(strcpy@src+1)^0,c
  3078  001078  ECC2  F028         	call	_strcpy	;wreg free
  3079  00107C  EFD4  F007         	goto	l6663
  3080  001080                     l6687:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3083  001080  0E00               	movlw	0
  3084  001082  0100               	movlb	0	; () banked
  3085  001084  6F94               	movwf	efgtoa@u& (0+255),b
  3086  001086  0E00               	movlw	0
  3087  001088  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3088  00108A  0E80               	movlw	128
  3089  00108C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3090  00108E  0E3F               	movlw	63
  3091  001090  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3094  001092  0E00               	movlw	0
  3095  001094  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3096  001096  0E00               	movlw	0
  3097  001098  6F90               	movwf	efgtoa@e& (0+255),b
  3098  00109A                     
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3101  00109A  C08C  F005         	movff	efgtoa@g,___fleq@ff1
  3102  00109E  C08D  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  3103  0010A2  C08E  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  3104  0010A6  C08F  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  3105  0010AA  0E00               	movlw	0
  3106  0010AC  6E09               	movwf	___fleq@ff2^0,c
  3107  0010AE  0E00               	movlw	0
  3108  0010B0  6E0A               	movwf	(___fleq@ff2+1)^0,c
  3109  0010B2  0E00               	movlw	0
  3110  0010B4  6E0B               	movwf	(___fleq@ff2+2)^0,c
  3111  0010B6  0E00               	movlw	0
  3112  0010B8  6E0C               	movwf	(___fleq@ff2+3)^0,c
  3113  0010BA  EC70  F027         	call	___fleq	;wreg free
  3114  0010BE  B0D8               	btfsc	status,0,c
  3115  0010C0  EF64  F008         	goto	u9021
  3116  0010C4  EF66  F008         	goto	u9020
  3117  0010C8                     u9021:
  3118  0010C8  EFE9  F008         	goto	l6705
  3119  0010CC                     u9020:
  3120  0010CC  EF85  F008         	goto	l6697
  3121  0010D0                     l6693:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3124  0010D0  C094  F005         	movff	efgtoa@u,___flmul@b
  3125  0010D4  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  3126  0010D8  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  3127  0010DC  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  3128  0010E0  0E00               	movlw	0
  3129  0010E2  6E09               	movwf	___flmul@a^0,c
  3130  0010E4  0E00               	movlw	0
  3131  0010E6  6E0A               	movwf	(___flmul@a+1)^0,c
  3132  0010E8  0E20               	movlw	32
  3133  0010EA  6E0B               	movwf	(___flmul@a+2)^0,c
  3134  0010EC  0E41               	movlw	65
  3135  0010EE  6E0C               	movwf	(___flmul@a+3)^0,c
  3136  0010F0  EC26  F016         	call	___flmul	;wreg free
  3137  0010F4  C005  F094         	movff	?___flmul,efgtoa@u
  3138  0010F8  C006  F095         	movff	?___flmul+1,efgtoa@u+1
  3139  0010FC  C007  F096         	movff	?___flmul+2,efgtoa@u+2
  3140  001100  C008  F097         	movff	?___flmul+3,efgtoa@u+3
  3141  001104                     
  3142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3143  001104  0100               	movlb	0	; () banked
  3144  001106  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3145  001108  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3146  00110A                     l6697:
  3147                           
  3148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3149  00110A  C08C  F01E         	movff	efgtoa@g,___flge@ff1
  3150  00110E  C08D  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3151  001112  C08E  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3152  001116  C08F  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3153  00111A  0E00               	movlw	0
  3154  00111C  6E09               	movwf	___flmul@a^0,c
  3155  00111E  0E00               	movlw	0
  3156  001120  6E0A               	movwf	(___flmul@a+1)^0,c
  3157  001122  0E20               	movlw	32
  3158  001124  6E0B               	movwf	(___flmul@a+2)^0,c
  3159  001126  0E41               	movlw	65
  3160  001128  6E0C               	movwf	(___flmul@a+3)^0,c
  3161  00112A  C094  F005         	movff	efgtoa@u,___flmul@b
  3162  00112E  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  3163  001132  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  3164  001136  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  3165  00113A  EC26  F016         	call	___flmul	;wreg free
  3166  00113E  C005  F022         	movff	?___flmul,___flge@ff2
  3167  001142  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3168  001146  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3169  00114A  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3170  00114E  EC7E  F024         	call	___flge	;wreg free
  3171  001152  B0D8               	btfsc	status,0,c
  3172  001154  EFAE  F008         	goto	u9031
  3173  001158  EFB0  F008         	goto	u9030
  3174  00115C                     u9031:
  3175  00115C  EF68  F008         	goto	l6693
  3176  001160                     u9030:
  3177  001160  EFD0  F008         	goto	l6703
  3178  001164                     l6699:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3181  001164  C094  F013         	movff	efgtoa@u,___fldiv@b
  3182  001168  C095  F014         	movff	efgtoa@u+1,___fldiv@b+1
  3183  00116C  C096  F015         	movff	efgtoa@u+2,___fldiv@b+2
  3184  001170  C097  F016         	movff	efgtoa@u+3,___fldiv@b+3
  3185  001174  0E00               	movlw	0
  3186  001176  6E17               	movwf	___fldiv@a^0,c
  3187  001178  0E00               	movlw	0
  3188  00117A  6E18               	movwf	(___fldiv@a+1)^0,c
  3189  00117C  0E20               	movlw	32
  3190  00117E  6E19               	movwf	(___fldiv@a+2)^0,c
  3191  001180  0E41               	movlw	65
  3192  001182  6E1A               	movwf	(___fldiv@a+3)^0,c
  3193  001184  EC3B  F018         	call	___fldiv	;wreg free
  3194  001188  C013  F094         	movff	?___fldiv,efgtoa@u
  3195  00118C  C014  F095         	movff	?___fldiv+1,efgtoa@u+1
  3196  001190  C015  F096         	movff	?___fldiv+2,efgtoa@u+2
  3197  001194  C016  F097         	movff	?___fldiv+3,efgtoa@u+3
  3198  001198                     
  3199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3200  001198  0100               	movlb	0	; () banked
  3201  00119A  0790               	decf	efgtoa@e& (0+255),f,b
  3202  00119C  A0D8               	btfss	status,0,c
  3203  00119E  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3204  0011A0                     l6703:
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3207  0011A0  C08C  F01E         	movff	efgtoa@g,___flge@ff1
  3208  0011A4  C08D  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3209  0011A8  C08E  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3210  0011AC  C08F  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3211  0011B0  C094  F022         	movff	efgtoa@u,___flge@ff2
  3212  0011B4  C095  F023         	movff	efgtoa@u+1,___flge@ff2+1
  3213  0011B8  C096  F024         	movff	efgtoa@u+2,___flge@ff2+2
  3214  0011BC  C097  F025         	movff	efgtoa@u+3,___flge@ff2+3
  3215  0011C0  EC7E  F024         	call	___flge	;wreg free
  3216  0011C4  A0D8               	btfss	status,0,c
  3217  0011C6  EFE7  F008         	goto	u9041
  3218  0011CA  EFE9  F008         	goto	u9040
  3219  0011CE                     u9041:
  3220  0011CE  EFB2  F008         	goto	l6699
  3221  0011D2                     u9040:
  3222  0011D2                     l6705:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3225  0011D2  C046  F00B         	movff	efgtoa@c,tolower@c
  3226  0011D6  6A0C               	clrf	(tolower@c+1)^0,c
  3227  0011D8  EC92  F028         	call	_tolower	;wreg free
  3228  0011DC  500B               	movf	?_tolower^0,w,c
  3229  0011DE  0100               	movlb	0	; () banked
  3230  0011E0  6F81               	movwf	efgtoa@mode& (0+255),b
  3231  0011E2                     
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3234  0011E2  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3235  0011E6                     
  3236                           ; BSR set to: 0
  3237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3238  0011E6  0E67               	movlw	103
  3239  0011E8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3240  0011EA  A4D8               	btfss	status,2,c
  3241  0011EC  EFFA  F008         	goto	u9051
  3242  0011F0  EFFC  F008         	goto	u9050
  3243  0011F4                     u9051:
  3244  0011F4  EF22  F009         	goto	l6719
  3245  0011F8                     u9050:
  3246  0011F8                     
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3249  0011F8  51F8               	movf	_prec& (0+255),w,b
  3250  0011FA  11F9               	iorwf	(_prec+1)& (0+255),w,b
  3251  0011FC  A4D8               	btfss	status,2,c
  3252  0011FE  EF03  F009         	goto	u9061
  3253  001202  EF05  F009         	goto	u9060
  3254  001206                     u9061:
  3255  001206  EF09  F009         	goto	l6715
  3256  00120A                     u9060:
  3257  00120A                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3260  00120A  0E00               	movlw	0
  3261  00120C  6FF9               	movwf	(_prec+1)& (0+255),b
  3262  00120E  0E01               	movlw	1
  3263  001210  6FF8               	movwf	_prec& (0+255),b
  3264  001212                     l6715:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3268  001212  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  3269  001214  EF16  F009         	goto	u9070
  3270  001218  51F9               	movf	(_prec+1)& (0+255),w,b
  3271  00121A  E106               	bnz	u9071
  3272  00121C  05F8               	decf	_prec& (0+255),w,b
  3273  00121E  B0D8               	btfsc	status,0,c
  3274  001220  EF14  F009         	goto	u9071
  3275  001224  EF16  F009         	goto	u9070
  3276  001228                     u9071:
  3277  001228  EF1C  F009         	goto	l1293
  3278  00122C                     u9070:
  3279  00122C                     l6717:
  3280                           
  3281                           ; BSR set to: 0
  3282  00122C  0E00               	movlw	0
  3283  00122E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3284  001230  0E06               	movlw	6
  3285  001232  6F7C               	movwf	efgtoa@p& (0+255),b
  3286  001234  EF2B  F009         	goto	l6725
  3287  001238                     l1293:
  3288                           
  3289                           ; BSR set to: 0
  3290  001238  C0F8  F07C         	movff	_prec,efgtoa@p
  3291  00123C  C0F9  F07D         	movff	_prec+1,efgtoa@p+1
  3292  001240  EF2B  F009         	goto	l6725
  3293  001244                     l6719:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3297  001244  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  3298  001246  EF27  F009         	goto	u9081
  3299  00124A  EF29  F009         	goto	u9080
  3300  00124E                     u9081:
  3301  00124E  EF16  F009         	goto	l6717
  3302  001252                     u9080:
  3303  001252  EF1C  F009         	goto	l1293
  3304  001256                     l6725:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3308  001256  0E67               	movlw	103
  3309  001258  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3310  00125A  A4D8               	btfss	status,2,c
  3311  00125C  EF32  F009         	goto	u9091
  3312  001260  EF34  F009         	goto	u9090
  3313  001264                     u9091:
  3314  001264  EF63  F009         	goto	l6735
  3315  001268                     u9090:
  3316  001268                     
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3319  001268  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3320  00126A  EF42  F009         	goto	u9100
  3321  00126E  0EFC               	movlw	252
  3322  001270  5D90               	subwf	efgtoa@e& (0+255),w,b
  3323  001272  0EFF               	movlw	255
  3324  001274  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3325  001276  A0D8               	btfss	status,0,c
  3326  001278  EF40  F009         	goto	u9101
  3327  00127C  EF42  F009         	goto	u9100
  3328  001280                     u9101:
  3329  001280  EF61  F009         	goto	l6733
  3330  001284                     u9100:
  3331  001284                     
  3332                           ; BSR set to: 0
  3333  001284  0EFF               	movlw	255
  3334  001286  6E47               	movwf	??_efgtoa^0,c
  3335  001288  0EFF               	movlw	255
  3336  00128A  6E48               	movwf	(??_efgtoa+1)^0,c
  3337  00128C  C07C  F049         	movff	efgtoa@p,??_efgtoa+2
  3338  001290  C07D  F04A         	movff	efgtoa@p+1,??_efgtoa+3
  3339  001294  5047               	movf	??_efgtoa^0,w,c
  3340  001296  2649               	addwf	(??_efgtoa+2)^0,f,c
  3341  001298  5048               	movf	(??_efgtoa+1)^0,w,c
  3342  00129A  224A               	addwfc	(??_efgtoa+3)^0,f,c
  3343  00129C  5190               	movf	efgtoa@e& (0+255),w,b
  3344  00129E  5C49               	subwf	(??_efgtoa+2)^0,w,c
  3345  0012A0  504A               	movf	(??_efgtoa+3)^0,w,c
  3346  0012A2  0A80               	xorlw	128
  3347  0012A4  6E4B               	movwf	(??_efgtoa+4)^0,c
  3348  0012A6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3349  0012A8  0A80               	xorlw	128
  3350  0012AA  584B               	subwfb	(??_efgtoa+4)^0,w,c
  3351  0012AC  A0D8               	btfss	status,0,c
  3352  0012AE  EF5B  F009         	goto	u9111
  3353  0012B2  EF5D  F009         	goto	u9110
  3354  0012B6                     u9111:
  3355  0012B6  EF61  F009         	goto	l6733
  3356  0012BA                     u9110:
  3357  0012BA                     
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3360  0012BA  0E66               	movlw	102
  3361  0012BC  6F80               	movwf	efgtoa@nmode& (0+255),b
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3364  0012BE  EF63  F009         	goto	l6735
  3365  0012C2                     l6733:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3369  0012C2  0E65               	movlw	101
  3370  0012C4  6F80               	movwf	efgtoa@nmode& (0+255),b
  3371  0012C6                     l6735:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3375  0012C6  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3376  0012CA  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3377  0012CE                     
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3380  0012CE  0E67               	movlw	103
  3381  0012D0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3382  0012D2  A4D8               	btfss	status,2,c
  3383  0012D4  EF6E  F009         	goto	u9121
  3384  0012D8  EF70  F009         	goto	u9120
  3385  0012DC                     u9121:
  3386  0012DC  EF80  F009         	goto	l6743
  3387  0012E0                     u9120:
  3388  0012E0                     
  3389                           ; BSR set to: 0
  3390  0012E0  0E66               	movlw	102
  3391  0012E2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3392  0012E4  A4D8               	btfss	status,2,c
  3393  0012E6  EF77  F009         	goto	u9131
  3394  0012EA  EF79  F009         	goto	u9130
  3395  0012EE                     u9131:
  3396  0012EE  EF82  F009         	goto	l6745
  3397  0012F2                     u9130:
  3398  0012F2                     
  3399                           ; BSR set to: 0
  3400  0012F2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3401  0012F4  EF80  F009         	goto	u9140
  3402  0012F8  EF7E  F009         	goto	u9141
  3403  0012FC                     u9141:
  3404  0012FC  EF82  F009         	goto	l6745
  3405  001300                     u9140:
  3406  001300                     l6743:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3410  001300  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3411  001302  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3412  001304                     l6745:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3416  001304  0E66               	movlw	102
  3417  001306  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3418  001308  A4D8               	btfss	status,2,c
  3419  00130A  EF89  F009         	goto	u9151
  3420  00130E  EF8B  F009         	goto	u9150
  3421  001312                     u9151:
  3422  001312  EFAB  F009         	goto	l6755
  3423  001316                     u9150:
  3424  001316                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3427  001316  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3428  001318  EF92  F009         	goto	u9160
  3429  00131C  EF90  F009         	goto	u9161
  3430  001320                     u9161:
  3431  001320  EF9E  F009         	goto	l6751
  3432  001324                     u9160:
  3433  001324                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3436  001324  0E00               	movlw	0
  3437  001326  6F94               	movwf	efgtoa@u& (0+255),b
  3438  001328  0E00               	movlw	0
  3439  00132A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3440  00132C  0E80               	movlw	128
  3441  00132E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3442  001330  0E3F               	movlw	63
  3443  001332  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3446  001334  0E00               	movlw	0
  3447  001336  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3448  001338  0E00               	movlw	0
  3449  00133A  6F90               	movwf	efgtoa@e& (0+255),b
  3450  00133C                     l6751:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3454  00133C  0E67               	movlw	103
  3455  00133E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3456  001340  B4D8               	btfsc	status,2,c
  3457  001342  EFA5  F009         	goto	u9171
  3458  001346  EFA7  F009         	goto	u9170
  3459  00134A                     u9171:
  3460  00134A  EFAB  F009         	goto	l6755
  3461  00134E                     u9170:
  3462  00134E                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3465  00134E  5190               	movf	efgtoa@e& (0+255),w,b
  3466  001350  2772               	addwf	efgtoa@m& (0+255),f,b
  3467  001352  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3468  001354  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3469  001356                     l6755:
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3473  001356  0E00               	movlw	0
  3474  001358  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3475  00135A  0E00               	movlw	0
  3476  00135C  6F8A               	movwf	efgtoa@i& (0+255),b
  3477  00135E                     
  3478                           ; BSR set to: 0
  3479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3480  00135E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3481  001362  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3482  001366  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3483  00136A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3484  00136E                     
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3487  00136E  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3488  001372  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3489  001376  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3490  00137A  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3493  00137E  EF3C  F00A         	goto	l6769
  3494  001382                     l6761:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3498  001382  C082  F013         	movff	efgtoa@h,___fldiv@b
  3499  001386  C083  F014         	movff	efgtoa@h+1,___fldiv@b+1
  3500  00138A  C084  F015         	movff	efgtoa@h+2,___fldiv@b+2
  3501  00138E  C085  F016         	movff	efgtoa@h+3,___fldiv@b+3
  3502  001392  C094  F017         	movff	efgtoa@u,___fldiv@a
  3503  001396  C095  F018         	movff	efgtoa@u+1,___fldiv@a+1
  3504  00139A  C096  F019         	movff	efgtoa@u+2,___fldiv@a+2
  3505  00139E  C097  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  3506  0013A2  EC3B  F018         	call	___fldiv	;wreg free
  3507  0013A6  C013  F02C         	movff	?___fldiv,floorf@x
  3508  0013AA  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  3509  0013AE  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  3510  0013B2  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  3511  0013B6  EC00  F01D         	call	_floorf	;wreg free
  3512  0013BA  C02C  F086         	movff	?_floorf,efgtoa@l
  3513  0013BE  C02D  F087         	movff	?_floorf+1,efgtoa@l+1
  3514  0013C2  C02E  F088         	movff	?_floorf+2,efgtoa@l+2
  3515  0013C6  C02F  F089         	movff	?_floorf+3,efgtoa@l+3
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3518  0013CA  C086  F005         	movff	efgtoa@l,___fltol@f1
  3519  0013CE  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3520  0013D2  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3521  0013D6  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3522  0013DA  ECFB  F023         	call	___fltol	;wreg free
  3523  0013DE  C005  F078         	movff	?___fltol,efgtoa@d
  3524  0013E2  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3525  0013E6                     
  3526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3527  0013E6  C082  F01E         	movff	efgtoa@h,___flsub@b
  3528  0013EA  C083  F01F         	movff	efgtoa@h+1,___flsub@b+1
  3529  0013EE  C084  F020         	movff	efgtoa@h+2,___flsub@b+2
  3530  0013F2  C085  F021         	movff	efgtoa@h+3,___flsub@b+3
  3531  0013F6  C094  F009         	movff	efgtoa@u,___flmul@a
  3532  0013FA  C095  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3533  0013FE  C096  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3534  001402  C097  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3535  001406  C086  F005         	movff	efgtoa@l,___flmul@b
  3536  00140A  C087  F006         	movff	efgtoa@l+1,___flmul@b+1
  3537  00140E  C088  F007         	movff	efgtoa@l+2,___flmul@b+2
  3538  001412  C089  F008         	movff	efgtoa@l+3,___flmul@b+3
  3539  001416  EC26  F016         	call	___flmul	;wreg free
  3540  00141A  C005  F022         	movff	?___flmul,___flsub@a
  3541  00141E  C006  F023         	movff	?___flmul+1,___flsub@a+1
  3542  001422  C007  F024         	movff	?___flmul+2,___flsub@a+2
  3543  001426  C008  F025         	movff	?___flmul+3,___flsub@a+3
  3544  00142A  EC0B  F02A         	call	___flsub	;wreg free
  3545  00142E  C01E  F082         	movff	?___flsub,efgtoa@h
  3546  001432  C01F  F083         	movff	?___flsub+1,efgtoa@h+1
  3547  001436  C020  F084         	movff	?___flsub+2,efgtoa@h+2
  3548  00143A  C021  F085         	movff	?___flsub+3,efgtoa@h+3
  3549  00143E                     
  3550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3551  00143E  C094  F013         	movff	efgtoa@u,___fldiv@b
  3552  001442  C095  F014         	movff	efgtoa@u+1,___fldiv@b+1
  3553  001446  C096  F015         	movff	efgtoa@u+2,___fldiv@b+2
  3554  00144A  C097  F016         	movff	efgtoa@u+3,___fldiv@b+3
  3555  00144E  0E00               	movlw	0
  3556  001450  6E17               	movwf	___fldiv@a^0,c
  3557  001452  0E00               	movlw	0
  3558  001454  6E18               	movwf	(___fldiv@a+1)^0,c
  3559  001456  0E20               	movlw	32
  3560  001458  6E19               	movwf	(___fldiv@a+2)^0,c
  3561  00145A  0E41               	movlw	65
  3562  00145C  6E1A               	movwf	(___fldiv@a+3)^0,c
  3563  00145E  EC3B  F018         	call	___fldiv	;wreg free
  3564  001462  C013  F094         	movff	?___fldiv,efgtoa@u
  3565  001466  C014  F095         	movff	?___fldiv+1,efgtoa@u+1
  3566  00146A  C015  F096         	movff	?___fldiv+2,efgtoa@u+2
  3567  00146E  C016  F097         	movff	?___fldiv+3,efgtoa@u+3
  3568  001472                     
  3569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3570  001472  0100               	movlb	0	; () banked
  3571  001474  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3572  001476  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3573  001478                     l6769:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3577  001478  5172               	movf	efgtoa@m& (0+255),w,b
  3578  00147A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3579  00147C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3580  00147E  0A80               	xorlw	128
  3581  001480  6E47               	movwf	??_efgtoa^0,c
  3582  001482  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3583  001484  0A80               	xorlw	128
  3584  001486  5847               	subwfb	??_efgtoa^0,w,c
  3585  001488  A0D8               	btfss	status,0,c
  3586  00148A  EF49  F00A         	goto	u9181
  3587  00148E  EF4B  F00A         	goto	u9180
  3588  001492                     u9181:
  3589  001492  EFC1  F009         	goto	l6761
  3590  001496                     u9180:
  3591  001496                     
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3594  001496  C094  F005         	movff	efgtoa@u,___flmul@b
  3595  00149A  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  3596  00149E  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  3597  0014A2  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  3598  0014A6  0E00               	movlw	0
  3599  0014A8  6E09               	movwf	___flmul@a^0,c
  3600  0014AA  0E00               	movlw	0
  3601  0014AC  6E0A               	movwf	(___flmul@a+1)^0,c
  3602  0014AE  0EA0               	movlw	160
  3603  0014B0  6E0B               	movwf	(___flmul@a+2)^0,c
  3604  0014B2  0E40               	movlw	64
  3605  0014B4  6E0C               	movwf	(___flmul@a+3)^0,c
  3606  0014B6  EC26  F016         	call	___flmul	;wreg free
  3607  0014BA  C005  F086         	movff	?___flmul,efgtoa@l
  3608  0014BE  C006  F087         	movff	?___flmul+1,efgtoa@l+1
  3609  0014C2  C007  F088         	movff	?___flmul+2,efgtoa@l+2
  3610  0014C6  C008  F089         	movff	?___flmul+3,efgtoa@l+3
  3611  0014CA                     
  3612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3613  0014CA  C082  F01E         	movff	efgtoa@h,___flge@ff1
  3614  0014CE  C083  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3615  0014D2  C084  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3616  0014D6  C085  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3617  0014DA  C086  F022         	movff	efgtoa@l,___flge@ff2
  3618  0014DE  C087  F023         	movff	efgtoa@l+1,___flge@ff2+1
  3619  0014E2  C088  F024         	movff	efgtoa@l+2,___flge@ff2+2
  3620  0014E6  C089  F025         	movff	efgtoa@l+3,___flge@ff2+3
  3621  0014EA  EC7E  F024         	call	___flge	;wreg free
  3622  0014EE  B0D8               	btfsc	status,0,c
  3623  0014F0  EF7C  F00A         	goto	u9191
  3624  0014F4  EF7E  F00A         	goto	u9190
  3625  0014F8                     u9191:
  3626  0014F8  EF89  F00A         	goto	l6777
  3627  0014FC                     u9190:
  3628  0014FC                     
  3629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3630  0014FC  0E00               	movlw	0
  3631  0014FE  0100               	movlb	0	; () banked
  3632  001500  6F86               	movwf	efgtoa@l& (0+255),b
  3633  001502  0E00               	movlw	0
  3634  001504  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3635  001506  0E00               	movlw	0
  3636  001508  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3637  00150A  0E00               	movlw	0
  3638  00150C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3641  00150E  EFB2  F00A         	goto	l6783
  3642  001512                     l6777:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3645  001512  C082  F005         	movff	efgtoa@h,___fleq@ff1
  3646  001516  C083  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3647  00151A  C084  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3648  00151E  C085  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3649  001522  C086  F009         	movff	efgtoa@l,___fleq@ff2
  3650  001526  C087  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3651  00152A  C088  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3652  00152E  C089  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3653  001532  EC70  F027         	call	___fleq	;wreg free
  3654  001536  A0D8               	btfss	status,0,c
  3655  001538  EFA0  F00A         	goto	u9201
  3656  00153C  EFA2  F00A         	goto	u9200
  3657  001540                     u9201:
  3658  001540  EFB2  F00A         	goto	l6783
  3659  001544                     u9200:
  3660  001544  0100               	movlb	0	; () banked
  3661  001546  B178               	btfsc	efgtoa@d& (0+255),0,b
  3662  001548  EFA8  F00A         	goto	u9211
  3663  00154C  EFAA  F00A         	goto	u9210
  3664  001550                     u9211:
  3665  001550  EFB2  F00A         	goto	l6783
  3666  001554                     u9210:
  3667  001554                     
  3668                           ; BSR set to: 0
  3669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3670  001554  0E00               	movlw	0
  3671  001556  6F86               	movwf	efgtoa@l& (0+255),b
  3672  001558  0E00               	movlw	0
  3673  00155A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3674  00155C  0E00               	movlw	0
  3675  00155E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3676  001560  0E00               	movlw	0
  3677  001562  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3678  001564                     l6783:
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3681  001564  C08C  F005         	movff	efgtoa@g,___fladd@b
  3682  001568  C08D  F006         	movff	efgtoa@g+1,___fladd@b+1
  3683  00156C  C08E  F007         	movff	efgtoa@g+2,___fladd@b+2
  3684  001570  C08F  F008         	movff	efgtoa@g+3,___fladd@b+3
  3685  001574  C086  F009         	movff	efgtoa@l,___fladd@a
  3686  001578  C087  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3687  00157C  C088  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3688  001580  C089  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3689  001584  ECC6  F013         	call	___fladd	;wreg free
  3690  001588  C005  F082         	movff	?___fladd,efgtoa@h
  3691  00158C  C006  F083         	movff	?___fladd+1,efgtoa@h+1
  3692  001590  C007  F084         	movff	?___fladd+2,efgtoa@h+2
  3693  001594  C008  F085         	movff	?___fladd+3,efgtoa@h+3
  3694  001598                     
  3695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3696  001598  C082  F01E         	movff	efgtoa@h,___flge@ff1
  3697  00159C  C083  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3698  0015A0  C084  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3699  0015A4  C085  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3700  0015A8  0E00               	movlw	0
  3701  0015AA  6E09               	movwf	___flmul@a^0,c
  3702  0015AC  0E00               	movlw	0
  3703  0015AE  6E0A               	movwf	(___flmul@a+1)^0,c
  3704  0015B0  0E20               	movlw	32
  3705  0015B2  6E0B               	movwf	(___flmul@a+2)^0,c
  3706  0015B4  0E41               	movlw	65
  3707  0015B6  6E0C               	movwf	(___flmul@a+3)^0,c
  3708  0015B8  C074  F005         	movff	efgtoa@ou,___flmul@b
  3709  0015BC  C075  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3710  0015C0  C076  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3711  0015C4  C077  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3712  0015C8  EC26  F016         	call	___flmul	;wreg free
  3713  0015CC  C005  F022         	movff	?___flmul,___flge@ff2
  3714  0015D0  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3715  0015D4  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3716  0015D8  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3717  0015DC  EC7E  F024         	call	___flge	;wreg free
  3718  0015E0  A0D8               	btfss	status,0,c
  3719  0015E2  EFF5  F00A         	goto	u9221
  3720  0015E6  EFF7  F00A         	goto	u9220
  3721  0015EA                     u9221:
  3722  0015EA  EF20  F00B         	goto	l6795
  3723  0015EE                     u9220:
  3724  0015EE                     
  3725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3726  0015EE  0100               	movlb	0	; () banked
  3727  0015F0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3728  0015F2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3729  0015F4                     
  3730                           ; BSR set to: 0
  3731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3732  0015F4  C074  F005         	movff	efgtoa@ou,___flmul@b
  3733  0015F8  C075  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3734  0015FC  C076  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3735  001600  C077  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3736  001604  0E00               	movlw	0
  3737  001606  6E09               	movwf	___flmul@a^0,c
  3738  001608  0E00               	movlw	0
  3739  00160A  6E0A               	movwf	(___flmul@a+1)^0,c
  3740  00160C  0E20               	movlw	32
  3741  00160E  6E0B               	movwf	(___flmul@a+2)^0,c
  3742  001610  0E41               	movlw	65
  3743  001612  6E0C               	movwf	(___flmul@a+3)^0,c
  3744  001614  EC26  F016         	call	___flmul	;wreg free
  3745  001618  C005  F074         	movff	?___flmul,efgtoa@ou
  3746  00161C  C006  F075         	movff	?___flmul+1,efgtoa@ou+1
  3747  001620  C007  F076         	movff	?___flmul+2,efgtoa@ou+2
  3748  001624  C008  F077         	movff	?___flmul+3,efgtoa@ou+3
  3749  001628                     
  3750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3751  001628  0E66               	movlw	102
  3752  00162A  0100               	movlb	0	; () banked
  3753  00162C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3754  00162E  A4D8               	btfss	status,2,c
  3755  001630  EF1C  F00B         	goto	u9231
  3756  001634  EF1E  F00B         	goto	u9230
  3757  001638                     u9231:
  3758  001638  EF20  F00B         	goto	l6795
  3759  00163C                     u9230:
  3760  00163C                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3763  00163C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3764  00163E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3765  001640                     l6795:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3768  001640  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3769  001644  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3770  001648  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3771  00164C  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3772  001650                     
  3773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3774  001650  0E65               	movlw	101
  3775  001652  0100               	movlb	0	; () banked
  3776  001654  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3777  001656  B4D8               	btfsc	status,2,c
  3778  001658  EF30  F00B         	goto	u9241
  3779  00165C  EF32  F00B         	goto	u9240
  3780  001660                     u9241:
  3781  001660  EF38  F00B         	goto	l6801
  3782  001664                     u9240:
  3783  001664                     
  3784                           ; BSR set to: 0
  3785  001664  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3786  001668  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3787  00166C  EF3C  F00B         	goto	l1321
  3788  001670                     l6801:
  3789                           
  3790                           ; BSR set to: 0
  3791  001670  0E00               	movlw	0
  3792  001672  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3793  001674  0E00               	movlw	0
  3794  001676  6F70               	movwf	efgtoa@ne& (0+255),b
  3795  001678                     l1321:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3799  001678  0E00               	movlw	0
  3800  00167A  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3801  00167C  0E00               	movlw	0
  3802  00167E  6F6E               	movwf	efgtoa@pp& (0+255),b
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3805  001680  0E00               	movlw	0
  3806  001682  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3807  001684  0E00               	movlw	0
  3808  001686  6F6C               	movwf	efgtoa@t& (0+255),b
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3811  001688  0E00               	movlw	0
  3812  00168A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3813  00168C  0E00               	movlw	0
  3814  00168E  6F8A               	movwf	efgtoa@i& (0+255),b
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3817  001690  EF38  F00C         	goto	l6851
  3818  001694                     l6803:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3822  001694  C082  F013         	movff	efgtoa@h,___fldiv@b
  3823  001698  C083  F014         	movff	efgtoa@h+1,___fldiv@b+1
  3824  00169C  C084  F015         	movff	efgtoa@h+2,___fldiv@b+2
  3825  0016A0  C085  F016         	movff	efgtoa@h+3,___fldiv@b+3
  3826  0016A4  C094  F017         	movff	efgtoa@u,___fldiv@a
  3827  0016A8  C095  F018         	movff	efgtoa@u+1,___fldiv@a+1
  3828  0016AC  C096  F019         	movff	efgtoa@u+2,___fldiv@a+2
  3829  0016B0  C097  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  3830  0016B4  EC3B  F018         	call	___fldiv	;wreg free
  3831  0016B8  C013  F02C         	movff	?___fldiv,floorf@x
  3832  0016BC  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  3833  0016C0  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  3834  0016C4  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  3835  0016C8  EC00  F01D         	call	_floorf	;wreg free
  3836  0016CC  C02C  F086         	movff	?_floorf,efgtoa@l
  3837  0016D0  C02D  F087         	movff	?_floorf+1,efgtoa@l+1
  3838  0016D4  C02E  F088         	movff	?_floorf+2,efgtoa@l+2
  3839  0016D8  C02F  F089         	movff	?_floorf+3,efgtoa@l+3
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3842  0016DC  C086  F005         	movff	efgtoa@l,___fltol@f1
  3843  0016E0  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3844  0016E4  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3845  0016E8  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3846  0016EC  ECFB  F023         	call	___fltol	;wreg free
  3847  0016F0  C005  F078         	movff	?___fltol,efgtoa@d
  3848  0016F4  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3849  0016F8                     
  3850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3851  0016F8  B856               	btfsc	_flags^0,4,c
  3852  0016FA  EF81  F00B         	goto	u9251
  3853  0016FE  EF83  F00B         	goto	u9250
  3854  001702                     u9251:
  3855  001702  EFA1  F00B         	goto	l6815
  3856  001706                     u9250:
  3857  001706  0100               	movlb	0	; () banked
  3858  001708  5178               	movf	efgtoa@d& (0+255),w,b
  3859  00170A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3860  00170C  A4D8               	btfss	status,2,c
  3861  00170E  EF8B  F00B         	goto	u9261
  3862  001712  EF8D  F00B         	goto	u9260
  3863  001716                     u9261:
  3864  001716  EFA1  F00B         	goto	l6815
  3865  00171A                     u9260:
  3866  00171A                     
  3867                           ; BSR set to: 0
  3868  00171A  0E67               	movlw	103
  3869  00171C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3870  00171E  A4D8               	btfss	status,2,c
  3871  001720  EF94  F00B         	goto	u9271
  3872  001724  EF96  F00B         	goto	u9270
  3873  001728                     u9271:
  3874  001728  EFA1  F00B         	goto	l6815
  3875  00172C                     u9270:
  3876  00172C                     
  3877                           ; BSR set to: 0
  3878  00172C  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3879  00172E  EF9D  F00B         	goto	u9280
  3880  001732  EF9B  F00B         	goto	u9281
  3881  001736                     u9281:
  3882  001736  EFA1  F00B         	goto	l6815
  3883  00173A                     u9280:
  3884  00173A                     
  3885                           ; BSR set to: 0
  3886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3887  00173A  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3888  00173C  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3891  00173E  EFEC  F00B         	goto	l6843
  3892  001742                     l6815:
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3895  001742  0100               	movlb	0	; () banked
  3896  001744  516E               	movf	efgtoa@pp& (0+255),w,b
  3897  001746  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3898  001748  A4D8               	btfss	status,2,c
  3899  00174A  EFA9  F00B         	goto	u9291
  3900  00174E  EFAB  F00B         	goto	u9290
  3901  001752                     u9291:
  3902  001752  EFD5  F00B         	goto	l6835
  3903  001756                     u9290:
  3904  001756                     
  3905                           ; BSR set to: 0
  3906  001756  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3907  001758  EFB2  F00B         	goto	u9300
  3908  00175C  EFB0  F00B         	goto	u9301
  3909  001760                     u9301:
  3910  001760  EFD5  F00B         	goto	l6835
  3911  001764                     u9300:
  3912  001764                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3915  001764  0E92               	movlw	low _dbuf
  3916  001766  2592               	addwf	efgtoa@n& (0+255),w,b
  3917  001768  6ED9               	movwf	fsr2l,c
  3918  00176A  0E01               	movlw	high _dbuf
  3919  00176C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3920  00176E  6EDA               	movwf	fsr2h,c
  3921  001770  0E2E               	movlw	46
  3922  001772  6EDF               	movwf	indf2,c
  3923  001774                     
  3924                           ; BSR set to: 0
  3925  001774  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3926  001776  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3927  001778                     
  3928                           ; BSR set to: 0
  3929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3930  001778  077E               	decf	efgtoa@w& (0+255),f,b
  3931  00177A  A0D8               	btfss	status,0,c
  3932  00177C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3933  00177E                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3936  00177E  0E00               	movlw	0
  3937  001780  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3938  001782  0E01               	movlw	1
  3939  001784  6F6E               	movwf	efgtoa@pp& (0+255),b
  3940  001786  EFD5  F00B         	goto	l6835
  3941  00178A                     l6827:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3945  00178A  0E92               	movlw	low _dbuf
  3946  00178C  2592               	addwf	efgtoa@n& (0+255),w,b
  3947  00178E  6ED9               	movwf	fsr2l,c
  3948  001790  0E01               	movlw	high _dbuf
  3949  001792  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3950  001794  6EDA               	movwf	fsr2h,c
  3951  001796  0E30               	movlw	48
  3952  001798  6EDF               	movwf	indf2,c
  3953  00179A                     
  3954                           ; BSR set to: 0
  3955  00179A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3956  00179C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3957  00179E                     
  3958                           ; BSR set to: 0
  3959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3960  00179E  077E               	decf	efgtoa@w& (0+255),f,b
  3961  0017A0  A0D8               	btfss	status,0,c
  3962  0017A2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3963  0017A4                     
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3966  0017A4  076C               	decf	efgtoa@t& (0+255),f,b
  3967  0017A6  A0D8               	btfss	status,0,c
  3968  0017A8  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3969  0017AA                     l6835:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3973  0017AA  516C               	movf	efgtoa@t& (0+255),w,b
  3974  0017AC  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3975  0017AE  A4D8               	btfss	status,2,c
  3976  0017B0  EFDC  F00B         	goto	u9311
  3977  0017B4  EFDE  F00B         	goto	u9310
  3978  0017B8                     u9311:
  3979  0017B8  EFC5  F00B         	goto	l6827
  3980  0017BC                     u9310:
  3981  0017BC                     
  3982                           ; BSR set to: 0
  3983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3984  0017BC  0E92               	movlw	low _dbuf
  3985  0017BE  2592               	addwf	efgtoa@n& (0+255),w,b
  3986  0017C0  6ED9               	movwf	fsr2l,c
  3987  0017C2  0E01               	movlw	high _dbuf
  3988  0017C4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3989  0017C6  6EDA               	movwf	fsr2h,c
  3990  0017C8  5178               	movf	efgtoa@d& (0+255),w,b
  3991  0017CA  0F30               	addlw	48
  3992  0017CC  6EDF               	movwf	indf2,c
  3993  0017CE                     
  3994                           ; BSR set to: 0
  3995  0017CE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3996  0017D0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3997  0017D2                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4000  0017D2  077E               	decf	efgtoa@w& (0+255),f,b
  4001  0017D4  A0D8               	btfss	status,0,c
  4002  0017D6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4003  0017D8                     l6843:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4007  0017D8  C082  F01E         	movff	efgtoa@h,___flsub@b
  4008  0017DC  C083  F01F         	movff	efgtoa@h+1,___flsub@b+1
  4009  0017E0  C084  F020         	movff	efgtoa@h+2,___flsub@b+2
  4010  0017E4  C085  F021         	movff	efgtoa@h+3,___flsub@b+3
  4011  0017E8  C094  F009         	movff	efgtoa@u,___flmul@a
  4012  0017EC  C095  F00A         	movff	efgtoa@u+1,___flmul@a+1
  4013  0017F0  C096  F00B         	movff	efgtoa@u+2,___flmul@a+2
  4014  0017F4  C097  F00C         	movff	efgtoa@u+3,___flmul@a+3
  4015  0017F8  C086  F005         	movff	efgtoa@l,___flmul@b
  4016  0017FC  C087  F006         	movff	efgtoa@l+1,___flmul@b+1
  4017  001800  C088  F007         	movff	efgtoa@l+2,___flmul@b+2
  4018  001804  C089  F008         	movff	efgtoa@l+3,___flmul@b+3
  4019  001808  EC26  F016         	call	___flmul	;wreg free
  4020  00180C  C005  F022         	movff	?___flmul,___flsub@a
  4021  001810  C006  F023         	movff	?___flmul+1,___flsub@a+1
  4022  001814  C007  F024         	movff	?___flmul+2,___flsub@a+2
  4023  001818  C008  F025         	movff	?___flmul+3,___flsub@a+3
  4024  00181C  EC0B  F02A         	call	___flsub	;wreg free
  4025  001820  C01E  F082         	movff	?___flsub,efgtoa@h
  4026  001824  C01F  F083         	movff	?___flsub+1,efgtoa@h+1
  4027  001828  C020  F084         	movff	?___flsub+2,efgtoa@h+2
  4028  00182C  C021  F085         	movff	?___flsub+3,efgtoa@h+3
  4029  001830                     
  4030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4031  001830  C094  F013         	movff	efgtoa@u,___fldiv@b
  4032  001834  C095  F014         	movff	efgtoa@u+1,___fldiv@b+1
  4033  001838  C096  F015         	movff	efgtoa@u+2,___fldiv@b+2
  4034  00183C  C097  F016         	movff	efgtoa@u+3,___fldiv@b+3
  4035  001840  0E00               	movlw	0
  4036  001842  6E17               	movwf	___fldiv@a^0,c
  4037  001844  0E00               	movlw	0
  4038  001846  6E18               	movwf	(___fldiv@a+1)^0,c
  4039  001848  0E20               	movlw	32
  4040  00184A  6E19               	movwf	(___fldiv@a+2)^0,c
  4041  00184C  0E41               	movlw	65
  4042  00184E  6E1A               	movwf	(___fldiv@a+3)^0,c
  4043  001850  EC3B  F018         	call	___fldiv	;wreg free
  4044  001854  C013  F094         	movff	?___fldiv,efgtoa@u
  4045  001858  C014  F095         	movff	?___fldiv+1,efgtoa@u+1
  4046  00185C  C015  F096         	movff	?___fldiv+2,efgtoa@u+2
  4047  001860  C016  F097         	movff	?___fldiv+3,efgtoa@u+3
  4048  001864                     
  4049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4050  001864  0100               	movlb	0	; () banked
  4051  001866  0770               	decf	efgtoa@ne& (0+255),f,b
  4052  001868  A0D8               	btfss	status,0,c
  4053  00186A  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4054  00186C                     
  4055                           ; BSR set to: 0
  4056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4057  00186C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4058  00186E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4059  001870                     l6851:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4063  001870  5172               	movf	efgtoa@m& (0+255),w,b
  4064  001872  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4065  001874  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4066  001876  0A80               	xorlw	128
  4067  001878  6E47               	movwf	??_efgtoa^0,c
  4068  00187A  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4069  00187C  0A80               	xorlw	128
  4070  00187E  5847               	subwfb	??_efgtoa^0,w,c
  4071  001880  B0D8               	btfsc	status,0,c
  4072  001882  EF45  F00C         	goto	u9321
  4073  001886  EF47  F00C         	goto	u9320
  4074  00188A                     u9321:
  4075  00188A  EF55  F00C         	goto	l6855
  4076  00188E                     u9320:
  4077  00188E                     
  4078                           ; BSR set to: 0
  4079  00188E  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4080  001890  EF53  F00C         	goto	u9331
  4081  001894  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4082  001896  E109               	bnz	u9330
  4083  001898  0E4B               	movlw	75
  4084  00189A  5D92               	subwf	efgtoa@n& (0+255),w,b
  4085  00189C  A0D8               	btfss	status,0,c
  4086  00189E  EF53  F00C         	goto	u9331
  4087  0018A2  EF55  F00C         	goto	u9330
  4088  0018A6                     u9331:
  4089  0018A6  EF4A  F00B         	goto	l6803
  4090  0018AA                     u9330:
  4091  0018AA                     l6855:
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4095  0018AA  516E               	movf	efgtoa@pp& (0+255),w,b
  4096  0018AC  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4097  0018AE  A4D8               	btfss	status,2,c
  4098  0018B0  EF5C  F00C         	goto	u9341
  4099  0018B4  EF5E  F00C         	goto	u9340
  4100  0018B8                     u9341:
  4101  0018B8  EF6F  F00C         	goto	l6863
  4102  0018BC                     u9340:
  4103  0018BC                     
  4104                           ; BSR set to: 0
  4105  0018BC  A856               	btfss	_flags^0,4,c
  4106  0018BE  EF63  F00C         	goto	u9351
  4107  0018C2  EF65  F00C         	goto	u9350
  4108  0018C6                     u9351:
  4109  0018C6  EF6F  F00C         	goto	l6863
  4110  0018CA                     u9350:
  4111  0018CA                     
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4114  0018CA  0E92               	movlw	low _dbuf
  4115  0018CC  2592               	addwf	efgtoa@n& (0+255),w,b
  4116  0018CE  6ED9               	movwf	fsr2l,c
  4117  0018D0  0E01               	movlw	high _dbuf
  4118  0018D2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4119  0018D4  6EDA               	movwf	fsr2h,c
  4120  0018D6  0E2E               	movlw	46
  4121  0018D8  6EDF               	movwf	indf2,c
  4122  0018DA                     
  4123                           ; BSR set to: 0
  4124  0018DA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4125  0018DC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4126  0018DE                     l6863:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4130  0018DE  0E92               	movlw	low _dbuf
  4131  0018E0  2592               	addwf	efgtoa@n& (0+255),w,b
  4132  0018E2  6ED9               	movwf	fsr2l,c
  4133  0018E4  0E01               	movlw	high _dbuf
  4134  0018E6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4135  0018E8  6EDA               	movwf	fsr2h,c
  4136  0018EA  0E00               	movlw	0
  4137  0018EC  6EDF               	movwf	indf2,c
  4138  0018EE                     
  4139                           ; BSR set to: 0
  4140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4141  0018EE  0E65               	movlw	101
  4142  0018F0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4143  0018F2  A4D8               	btfss	status,2,c
  4144  0018F4  EF7E  F00C         	goto	u9361
  4145  0018F8  EF80  F00C         	goto	u9360
  4146  0018FC                     u9361:
  4147  0018FC  EFD9  F007         	goto	l6665
  4148  001900                     u9360:
  4149  001900                     
  4150                           ; BSR set to: 0
  4151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4152  001900  0E00               	movlw	0
  4153  001902  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4154  001904  0E4F               	movlw	79
  4155  001906  6F8A               	movwf	efgtoa@i& (0+255),b
  4156  001908                     
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4159  001908  0E92               	movlw	low _dbuf
  4160  00190A  258A               	addwf	efgtoa@i& (0+255),w,b
  4161  00190C  6ED9               	movwf	fsr2l,c
  4162  00190E  0E01               	movlw	high _dbuf
  4163  001910  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4164  001912  6EDA               	movwf	fsr2h,c
  4165  001914  0E00               	movlw	0
  4166  001916  6EDF               	movwf	indf2,c
  4167  001918                     
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4170  001918  0E00               	movlw	0
  4171  00191A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4172  00191C  0E00               	movlw	0
  4173  00191E  6F7A               	movwf	efgtoa@sign& (0+255),b
  4174  001920                     
  4175                           ; BSR set to: 0
  4176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4177  001920  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4178  001922  EF97  F00C         	goto	u9370
  4179  001926  EF95  F00C         	goto	u9371
  4180  00192A                     u9371:
  4181  00192A  EF9F  F00C         	goto	l6879
  4182  00192E                     u9370:
  4183  00192E                     
  4184                           ; BSR set to: 0
  4185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4186  00192E  0E00               	movlw	0
  4187  001930  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4188  001932  0E01               	movlw	1
  4189  001934  6F7A               	movwf	efgtoa@sign& (0+255),b
  4190  001936                     
  4191                           ; BSR set to: 0
  4192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4193  001936  6D90               	negf	efgtoa@e& (0+255),b
  4194  001938  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4195  00193A  B0D8               	btfsc	status,0,c
  4196  00193C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4197  00193E                     l6879:
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4201  00193E  0E00               	movlw	0
  4202  001940  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4203  001942  0E02               	movlw	2
  4204  001944  6F7C               	movwf	efgtoa@p& (0+255),b
  4205                           
  4206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4207  001946  EFD0  F00C         	goto	l6891
  4208  00194A                     l6881:
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4212  00194A  078A               	decf	efgtoa@i& (0+255),f,b
  4213  00194C  A0D8               	btfss	status,0,c
  4214  00194E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4215  001950                     
  4216                           ; BSR set to: 0
  4217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4218  001950  0E92               	movlw	low _dbuf
  4219  001952  258A               	addwf	efgtoa@i& (0+255),w,b
  4220  001954  6ED9               	movwf	fsr2l,c
  4221  001956  0E01               	movlw	high _dbuf
  4222  001958  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4223  00195A  6EDA               	movwf	fsr2h,c
  4224  00195C  C090  F005         	movff	efgtoa@e,___awmod@dividend
  4225  001960  C091  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4226  001964  0E00               	movlw	0
  4227  001966  6E08               	movwf	(___awmod@divisor+1)^0,c
  4228  001968  0E0A               	movlw	10
  4229  00196A  6E07               	movwf	___awmod@divisor^0,c
  4230  00196C  EC18  F027         	call	___awmod	;wreg free
  4231  001970  5005               	movf	?___awmod^0,w,c
  4232  001972  0F30               	addlw	48
  4233  001974  6EDF               	movwf	indf2,c
  4234  001976                     
  4235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4236  001976  C090  F00B         	movff	efgtoa@e,___awdiv@dividend
  4237  00197A  C091  F00C         	movff	efgtoa@e+1,___awdiv@dividend+1
  4238  00197E  0E00               	movlw	0
  4239  001980  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  4240  001982  0E0A               	movlw	10
  4241  001984  6E0D               	movwf	___awdiv@divisor^0,c
  4242  001986  EC55  F026         	call	___awdiv	;wreg free
  4243  00198A  C00B  F090         	movff	?___awdiv,efgtoa@e
  4244  00198E  C00C  F091         	movff	?___awdiv+1,efgtoa@e+1
  4245  001992                     
  4246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4247  001992  0100               	movlb	0	; () banked
  4248  001994  077C               	decf	efgtoa@p& (0+255),f,b
  4249  001996  A0D8               	btfss	status,0,c
  4250  001998  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4251  00199A                     
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4254  00199A  077E               	decf	efgtoa@w& (0+255),f,b
  4255  00199C  A0D8               	btfss	status,0,c
  4256  00199E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4257  0019A0                     l6891:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4261  0019A0  5190               	movf	efgtoa@e& (0+255),w,b
  4262  0019A2  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4263  0019A4  A4D8               	btfss	status,2,c
  4264  0019A6  EFD7  F00C         	goto	u9381
  4265  0019AA  EFD9  F00C         	goto	u9380
  4266  0019AE                     u9381:
  4267  0019AE  EFA5  F00C         	goto	l6881
  4268  0019B2                     u9380:
  4269  0019B2                     
  4270                           ; BSR set to: 0
  4271  0019B2  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4272  0019B4  EFE6  F00C         	goto	u9390
  4273  0019B8  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4274  0019BA  E106               	bnz	u9391
  4275  0019BC  057C               	decf	efgtoa@p& (0+255),w,b
  4276  0019BE  B0D8               	btfsc	status,0,c
  4277  0019C0  EFE4  F00C         	goto	u9391
  4278  0019C4  EFE6  F00C         	goto	u9390
  4279  0019C8                     u9391:
  4280  0019C8  EFA5  F00C         	goto	l6881
  4281  0019CC                     u9390:
  4282  0019CC                     
  4283                           ; BSR set to: 0
  4284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4285  0019CC  078A               	decf	efgtoa@i& (0+255),f,b
  4286  0019CE  A0D8               	btfss	status,0,c
  4287  0019D0  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4288  0019D2                     
  4289                           ; BSR set to: 0
  4290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4291  0019D2  517A               	movf	efgtoa@sign& (0+255),w,b
  4292  0019D4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4293  0019D6  A4D8               	btfss	status,2,c
  4294  0019D8  EFF0  F00C         	goto	u9401
  4295  0019DC  EFF2  F00C         	goto	u9400
  4296  0019E0                     u9401:
  4297  0019E0  EFF8  F00C         	goto	l6901
  4298  0019E4                     u9400:
  4299  0019E4                     
  4300                           ; BSR set to: 0
  4301  0019E4  0E00               	movlw	0
  4302  0019E6  6F67               	movwf	(_efgtoa$2546+1)& (0+255),b
  4303  0019E8  0E2B               	movlw	43
  4304  0019EA  6F66               	movwf	_efgtoa$2546& (0+255),b
  4305  0019EC  EFFC  F00C         	goto	l6903
  4306  0019F0                     l6901:
  4307                           
  4308                           ; BSR set to: 0
  4309  0019F0  0E00               	movlw	0
  4310  0019F2  6F67               	movwf	(_efgtoa$2546+1)& (0+255),b
  4311  0019F4  0E2D               	movlw	45
  4312  0019F6  6F66               	movwf	_efgtoa$2546& (0+255),b
  4313  0019F8                     l6903:
  4314                           
  4315                           ; BSR set to: 0
  4316  0019F8  0E92               	movlw	low _dbuf
  4317  0019FA  258A               	addwf	efgtoa@i& (0+255),w,b
  4318  0019FC  6ED9               	movwf	fsr2l,c
  4319  0019FE  0E01               	movlw	high _dbuf
  4320  001A00  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4321  001A02  6EDA               	movwf	fsr2h,c
  4322  001A04  C066  FFDF         	movff	_efgtoa$2546,indf2
  4323  001A08                     
  4324                           ; BSR set to: 0
  4325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4326  001A08  077E               	decf	efgtoa@w& (0+255),f,b
  4327  001A0A  A0D8               	btfss	status,0,c
  4328  001A0C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4329  001A0E                     
  4330                           ; BSR set to: 0
  4331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4332  001A0E  078A               	decf	efgtoa@i& (0+255),f,b
  4333  001A10  A0D8               	btfss	status,0,c
  4334  001A12  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4335  001A14                     
  4336                           ; BSR set to: 0
  4337  001A14  0EBF               	movlw	191
  4338  001A16  6E47               	movwf	??_efgtoa^0,c
  4339  001A18  0EFF               	movlw	255
  4340  001A1A  6E48               	movwf	(??_efgtoa+1)^0,c
  4341  001A1C  5046               	movf	efgtoa@c^0,w,c
  4342  001A1E  6E49               	movwf	(??_efgtoa+2)^0,c
  4343  001A20  6A4A               	clrf	(??_efgtoa+3)^0,c
  4344  001A22  5047               	movf	??_efgtoa^0,w,c
  4345  001A24  2649               	addwf	(??_efgtoa+2)^0,f,c
  4346  001A26  5048               	movf	(??_efgtoa+1)^0,w,c
  4347  001A28  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4348  001A2A  504A               	movf	(??_efgtoa+3)^0,w,c
  4349  001A2C  E10A               	bnz	u9410
  4350  001A2E  0E1A               	movlw	26
  4351  001A30  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4352  001A32  A0D8               	btfss	status,0,c
  4353  001A34  EF1E  F00D         	goto	u9411
  4354  001A38  EF21  F00D         	goto	u9410
  4355  001A3C                     u9411:
  4356  001A3C  0E01               	movlw	1
  4357  001A3E  EF22  F00D         	goto	u9420
  4358  001A42                     u9410:
  4359  001A42  0E00               	movlw	0
  4360  001A44                     u9420:
  4361  001A44  6F6A               	movwf	_efgtoa$2548& (0+255),b
  4362  001A46  6B6B               	clrf	(_efgtoa$2548+1)& (0+255),b
  4363  001A48                     
  4364                           ; BSR set to: 0
  4365  001A48  516A               	movf	_efgtoa$2548& (0+255),w,b
  4366  001A4A  116B               	iorwf	(_efgtoa$2548+1)& (0+255),w,b
  4367  001A4C  A4D8               	btfss	status,2,c
  4368  001A4E  EF2B  F00D         	goto	u9431
  4369  001A52  EF2D  F00D         	goto	u9430
  4370  001A56                     u9431:
  4371  001A56  EF33  F00D         	goto	l6917
  4372  001A5A                     u9430:
  4373  001A5A                     
  4374                           ; BSR set to: 0
  4375  001A5A  0E00               	movlw	0
  4376  001A5C  6F69               	movwf	(_efgtoa$2547+1)& (0+255),b
  4377  001A5E  0E65               	movlw	101
  4378  001A60  6F68               	movwf	_efgtoa$2547& (0+255),b
  4379  001A62  EF37  F00D         	goto	l6919
  4380  001A66                     l6917:
  4381                           
  4382                           ; BSR set to: 0
  4383  001A66  0E00               	movlw	0
  4384  001A68  6F69               	movwf	(_efgtoa$2547+1)& (0+255),b
  4385  001A6A  0E45               	movlw	69
  4386  001A6C  6F68               	movwf	_efgtoa$2547& (0+255),b
  4387  001A6E                     l6919:
  4388                           
  4389                           ; BSR set to: 0
  4390  001A6E  0E92               	movlw	low _dbuf
  4391  001A70  258A               	addwf	efgtoa@i& (0+255),w,b
  4392  001A72  6ED9               	movwf	fsr2l,c
  4393  001A74  0E01               	movlw	high _dbuf
  4394  001A76  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4395  001A78  6EDA               	movwf	fsr2h,c
  4396  001A7A  C068  FFDF         	movff	_efgtoa$2547,indf2
  4397  001A7E                     
  4398                           ; BSR set to: 0
  4399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4400  001A7E  077E               	decf	efgtoa@w& (0+255),f,b
  4401  001A80  A0D8               	btfss	status,0,c
  4402  001A82  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4403  001A84                     
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4406  001A84  0E92               	movlw	low _dbuf
  4407  001A86  2592               	addwf	efgtoa@n& (0+255),w,b
  4408  001A88  6E05               	movwf	strcpy@dest^0,c
  4409  001A8A  0E01               	movlw	high _dbuf
  4410  001A8C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4411  001A8E  6E06               	movwf	(strcpy@dest+1)^0,c
  4412  001A90  0E92               	movlw	low _dbuf
  4413  001A92  258A               	addwf	efgtoa@i& (0+255),w,b
  4414  001A94  6E07               	movwf	strcpy@src^0,c
  4415  001A96  0E01               	movlw	high _dbuf
  4416  001A98  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4417  001A9A  6E08               	movwf	(strcpy@src+1)^0,c
  4418  001A9C  ECC2  F028         	call	_strcpy	;wreg free
  4419  001AA0  EFD9  F007         	goto	l6665
  4420  001AA4                     l1275:
  4421  001AA4  0012               	return		;funcret
  4422  001AA6                     __end_of_efgtoa:
  4423                           	callstack 0
  4424                           
  4425 ;; *************** function _tolower *****************
  4426 ;; Defined at:
  4427 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  c               2   10[COMRAM] int 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  2   10[COMRAM] int 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4445 ;;Total ram usage:        8 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; Hardware stack levels required when called: 6
  4448 ;; This function calls:
  4449 ;;		_isupper
  4450 ;; This function is called by:
  4451 ;;		_efgtoa
  4452 ;;		_vfpfcnvrt
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text6
  4457  005124                     __ptext6:
  4458                           	callstack 0
  4459  005124                     _tolower:
  4460                           	callstack 21
  4461  005124  0EBF               	movlw	191
  4462  005126  6E0D               	movwf	??_tolower^0,c
  4463  005128  0EFF               	movlw	255
  4464  00512A  6E0E               	movwf	(??_tolower+1)^0,c
  4465  00512C  C00B  F00F         	movff	tolower@c,??_tolower+2
  4466  005130  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4467  005134  500D               	movf	??_tolower^0,w,c
  4468  005136  260F               	addwf	(??_tolower+2)^0,f,c
  4469  005138  500E               	movf	(??_tolower+1)^0,w,c
  4470  00513A  2210               	addwfc	(??_tolower+3)^0,f,c
  4471  00513C  5010               	movf	(??_tolower+3)^0,w,c
  4472  00513E  E10A               	bnz	u8580
  4473  005140  0E1A               	movlw	26
  4474  005142  5C0F               	subwf	(??_tolower+2)^0,w,c
  4475  005144  A0D8               	btfss	status,0,c
  4476  005146  EFA7  F028         	goto	u8581
  4477  00514A  EFAA  F028         	goto	u8580
  4478  00514E                     u8581:
  4479  00514E  0E01               	movlw	1
  4480  005150  EFAB  F028         	goto	u8590
  4481  005154                     u8580:
  4482  005154  0E00               	movlw	0
  4483  005156                     u8590:
  4484  005156  6E11               	movwf	_tolower$2698^0,c
  4485  005158  6A12               	clrf	(_tolower$2698+1)^0,c
  4486  00515A  5011               	movf	_tolower$2698^0,w,c
  4487  00515C  1012               	iorwf	(_tolower$2698+1)^0,w,c
  4488  00515E  B4D8               	btfsc	status,2,c
  4489  005160  EFB4  F028         	goto	u8601
  4490  005164  EFB6  F028         	goto	u8600
  4491  005168                     u8601:
  4492  005168  EFBD  F028         	goto	l1515
  4493  00516C                     u8600:
  4494  00516C  0E20               	movlw	32
  4495  00516E  100B               	iorwf	tolower@c^0,w,c
  4496  005170  6E0B               	movwf	?_tolower^0,c
  4497  005172  500C               	movf	(tolower@c+1)^0,w,c
  4498  005174  6E0C               	movwf	(?_tolower+1)^0,c
  4499  005176  EFC1  F028         	goto	l1520
  4500  00517A                     l1515:
  4501  00517A  C00B  F00B         	movff	tolower@c,?_tolower
  4502  00517E  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4503  005182                     l1520:
  4504  005182  0012               	return		;funcret
  4505  005184                     __end_of_tolower:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _isupper *****************
  4509 ;; Defined at:
  4510 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  c               2    4[COMRAM] int 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  2    4[COMRAM] int 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;Total ram usage:        6 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 5
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_efgtoa
  4535 ;;		_vfpfcnvrt
  4536 ;;		_tolower
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text7
  4541  005622                     __ptext7:
  4542                           	callstack 0
  4543  005622                     _isupper:
  4544                           	callstack 21
  4545  005622  0EBF               	movlw	191
  4546  005624  6E07               	movwf	??_isupper^0,c
  4547  005626  0EFF               	movlw	255
  4548  005628  6E08               	movwf	(??_isupper+1)^0,c
  4549  00562A  C005  F009         	movff	isupper@c,??_isupper+2
  4550  00562E  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4551  005632  5007               	movf	??_isupper^0,w,c
  4552  005634  2609               	addwf	(??_isupper+2)^0,f,c
  4553  005636  5008               	movf	(??_isupper+1)^0,w,c
  4554  005638  220A               	addwfc	(??_isupper+3)^0,f,c
  4555  00563A  500A               	movf	(??_isupper+3)^0,w,c
  4556  00563C  E10A               	bnz	u7590
  4557  00563E  0E1A               	movlw	26
  4558  005640  5C09               	subwf	(??_isupper+2)^0,w,c
  4559  005642  A0D8               	btfss	status,0,c
  4560  005644  EF26  F02B         	goto	u7591
  4561  005648  EF29  F02B         	goto	u7590
  4562  00564C                     u7591:
  4563  00564C  0E01               	movlw	1
  4564  00564E  EF2A  F02B         	goto	u7600
  4565  005652                     u7590:
  4566  005652  0E00               	movlw	0
  4567  005654                     u7600:
  4568  005654  6E05               	movwf	?_isupper^0,c
  4569  005656  6A06               	clrf	(?_isupper+1)^0,c
  4570  005658  0012               	return		;funcret
  4571  00565A                     __end_of_isupper:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function _strcpy *****************
  4575 ;; Defined at:
  4576 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4579 ;;		 -> dbuf(80), 
  4580 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4581 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4582 ;;		 -> dbuf(80), 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  d               2   12[COMRAM] PTR unsigned char 
  4585 ;;		 -> dbuf(80), 
  4586 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4587 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4588 ;;		 -> dbuf(80), 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  2    4[COMRAM] PTR unsigned char 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;Total ram usage:       10 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 5
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_efgtoa
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text8
  4613  005184                     __ptext8:
  4614                           	callstack 0
  4615  005184                     _strcpy:
  4616                           	callstack 21
  4617  005184  C007  F00B         	movff	strcpy@src,strcpy@s
  4618  005188  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4619  00518C  C005  F00D         	movff	strcpy@dest,strcpy@d
  4620  005190  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4621  005194                     l6503:
  4622  005194  500B               	movf	strcpy@s^0,w,c
  4623  005196  6E09               	movwf	??_strcpy^0,c
  4624  005198  500C               	movf	(strcpy@s+1)^0,w,c
  4625  00519A  6E0A               	movwf	(??_strcpy+1)^0,c
  4626  00519C  4A0B               	infsnz	strcpy@s^0,f,c
  4627  00519E  2A0C               	incf	(strcpy@s+1)^0,f,c
  4628  0051A0  C009  FFF6         	movff	??_strcpy,tblptrl
  4629  0051A4  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4630  0051A8  0E00               	movlw	low (__smallconst shr (0+16))
  4631  0051AA  6EF8               	movwf	tblptru,c
  4632  0051AC  C00D  FFD9         	movff	strcpy@d,fsr2l
  4633  0051B0  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4634  0051B4  4A0D               	infsnz	strcpy@d^0,f,c
  4635  0051B6  2A0E               	incf	(strcpy@d+1)^0,f,c
  4636  0051B8  0E0D               	movlw	(high __ramtop+-1)
  4637  0051BA  64F7               	cpfsgt	tblptrh,c
  4638  0051BC  D003               	bra	u8567
  4639  0051BE  0008               	tblrd		*
  4640  0051C0  50F5               	movf	tablat,w,c
  4641  0051C2  D005               	bra	u8560
  4642  0051C4                     u8567:
  4643  0051C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4644  0051C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4645  0051CC  50EF               	movf	indf0,w,c
  4646  0051CE                     u8560:
  4647  0051CE  6EDF               	movwf	indf2,c
  4648  0051D0  50DF               	movf	indf2,w,c
  4649  0051D2  A4D8               	btfss	status,2,c
  4650  0051D4  EFEE  F028         	goto	u8571
  4651  0051D8  EFF0  F028         	goto	u8570
  4652  0051DC                     u8571:
  4653  0051DC  EFCA  F028         	goto	l6503
  4654  0051E0                     u8570:
  4655  0051E0  0012               	return		;funcret
  4656  0051E2                     __end_of_strcpy:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function _floorf *****************
  4660 ;; Defined at:
  4661 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  x               4   43[COMRAM] float 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  u               4   59[COMRAM] struct .
  4666 ;;  m               4   53[COMRAM] unsigned long 
  4667 ;;  e               2   57[COMRAM] int 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  4   43[COMRAM] float 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;Total ram usage:       20 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 5
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_efgtoa
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text9
  4692  003A00                     __ptext9:
  4693                           	callstack 0
  4694  003A00                     _floorf:
  4695                           	callstack 21
  4696  003A00  C0EC  F03C         	movff	floorf@F527,floorf@u
  4697  003A04  C0ED  F03D         	movff	floorf@F527+1,floorf@u+1
  4698  003A08  C0EE  F03E         	movff	floorf@F527+2,floorf@u+2
  4699  003A0C  C0EF  F03F         	movff	floorf@F527+3,floorf@u+3
  4700  003A10  C02C  F03C         	movff	floorf@x,floorf@u
  4701  003A14  C02D  F03D         	movff	floorf@x+1,floorf@u+1
  4702  003A18  C02E  F03E         	movff	floorf@x+2,floorf@u+2
  4703  003A1C  C02F  F03F         	movff	floorf@x+3,floorf@u+3
  4704  003A20  0E81               	movlw	129
  4705  003A22  6E30               	movwf	??_floorf^0,c
  4706  003A24  0EFF               	movlw	255
  4707  003A26  6E31               	movwf	(??_floorf+1)^0,c
  4708  003A28  C03C  F032         	movff	floorf@u,??_floorf+2
  4709  003A2C  C03D  F033         	movff	floorf@u+1,??_floorf+3
  4710  003A30  C03E  F034         	movff	floorf@u+2,??_floorf+4
  4711  003A34  C03F  F035         	movff	floorf@u+3,??_floorf+5
  4712  003A38  0E18               	movlw	24
  4713  003A3A  EF24  F01D         	goto	u8610
  4714  003A3E                     u8615:
  4715  003A3E  90D8               	bcf	status,0,c
  4716  003A40  3235               	rrcf	(??_floorf+5)^0,f,c
  4717  003A42  3234               	rrcf	(??_floorf+4)^0,f,c
  4718  003A44  3233               	rrcf	(??_floorf+3)^0,f,c
  4719  003A46  3232               	rrcf	(??_floorf+2)^0,f,c
  4720  003A48                     u8610:
  4721  003A48  2EE8               	decfsz	wreg,f,c
  4722  003A4A  EF1F  F01D         	goto	u8615
  4723  003A4E  5032               	movf	(??_floorf+2)^0,w,c
  4724  003A50  2430               	addwf	??_floorf^0,w,c
  4725  003A52  6E3A               	movwf	floorf@e^0,c
  4726  003A54  0E00               	movlw	0
  4727  003A56  2031               	addwfc	(??_floorf+1)^0,w,c
  4728  003A58  6E3B               	movwf	(floorf@e+1)^0,c
  4729  003A5A  BE3B               	btfsc	(floorf@e+1)^0,7,c
  4730  003A5C  EF39  F01D         	goto	u8621
  4731  003A60  503B               	movf	(floorf@e+1)^0,w,c
  4732  003A62  E109               	bnz	u8620
  4733  003A64  0E17               	movlw	23
  4734  003A66  5C3A               	subwf	floorf@e^0,w,c
  4735  003A68  A0D8               	btfss	status,0,c
  4736  003A6A  EF39  F01D         	goto	u8621
  4737  003A6E  EF3B  F01D         	goto	u8620
  4738  003A72                     u8621:
  4739  003A72  EF45  F01D         	goto	l6521
  4740  003A76                     u8620:
  4741  003A76                     l6519:
  4742  003A76  C02C  F02C         	movff	floorf@x,?_floorf
  4743  003A7A  C02D  F02D         	movff	floorf@x+1,?_floorf+1
  4744  003A7E  C02E  F02E         	movff	floorf@x+2,?_floorf+2
  4745  003A82  C02F  F02F         	movff	floorf@x+3,?_floorf+3
  4746  003A86  EF08  F01E         	goto	l1439
  4747  003A8A                     l6521:
  4748  003A8A  BE3B               	btfsc	(floorf@e+1)^0,7,c
  4749  003A8C  EF4A  F01D         	goto	u8631
  4750  003A90  EF4C  F01D         	goto	u8630
  4751  003A94                     u8631:
  4752  003A94  EFBC  F01D         	goto	l6531
  4753  003A98                     u8630:
  4754  003A98  C03A  F030         	movff	floorf@e,??_floorf
  4755  003A9C  0EFF               	movlw	255
  4756  003A9E  6E31               	movwf	(??_floorf+1)^0,c
  4757  003AA0  0EFF               	movlw	255
  4758  003AA2  6E32               	movwf	(??_floorf+2)^0,c
  4759  003AA4  0E7F               	movlw	127
  4760  003AA6  6E33               	movwf	(??_floorf+3)^0,c
  4761  003AA8  0E00               	movlw	0
  4762  003AAA  6E34               	movwf	(??_floorf+4)^0,c
  4763  003AAC                     u8645:
  4764  003AAC  6630               	tstfsz	??_floorf^0,c
  4765  003AAE  EF5B  F01D         	goto	u8646
  4766  003AB2  EF63  F01D         	goto	u8647
  4767  003AB6                     u8646:
  4768  003AB6  3434               	rlcf	(??_floorf+4)^0,w,c
  4769  003AB8  3234               	rrcf	(??_floorf+4)^0,f,c
  4770  003ABA  3233               	rrcf	(??_floorf+3)^0,f,c
  4771  003ABC  3232               	rrcf	(??_floorf+2)^0,f,c
  4772  003ABE  3231               	rrcf	(??_floorf+1)^0,f,c
  4773  003AC0  2E30               	decfsz	??_floorf^0,f,c
  4774  003AC2  EF56  F01D         	goto	u8645
  4775  003AC6                     u8647:
  4776  003AC6  C031  F036         	movff	??_floorf+1,floorf@m
  4777  003ACA  C032  F037         	movff	??_floorf+2,floorf@m+1
  4778  003ACE  C033  F038         	movff	??_floorf+3,floorf@m+2
  4779  003AD2  C034  F039         	movff	??_floorf+4,floorf@m+3
  4780  003AD6  5036               	movf	floorf@m^0,w,c
  4781  003AD8  143C               	andwf	floorf@u^0,w,c
  4782  003ADA  6E30               	movwf	??_floorf^0,c
  4783  003ADC  5037               	movf	(floorf@m+1)^0,w,c
  4784  003ADE  143D               	andwf	(floorf@u+1)^0,w,c
  4785  003AE0  6E31               	movwf	(??_floorf+1)^0,c
  4786  003AE2  5038               	movf	(floorf@m+2)^0,w,c
  4787  003AE4  143E               	andwf	(floorf@u+2)^0,w,c
  4788  003AE6  6E32               	movwf	(??_floorf+2)^0,c
  4789  003AE8  5039               	movf	(floorf@m+3)^0,w,c
  4790  003AEA  143F               	andwf	(floorf@u+3)^0,w,c
  4791  003AEC  6E33               	movwf	(??_floorf+3)^0,c
  4792  003AEE  5030               	movf	??_floorf^0,w,c
  4793  003AF0  1031               	iorwf	(??_floorf+1)^0,w,c
  4794  003AF2  1032               	iorwf	(??_floorf+2)^0,w,c
  4795  003AF4  1033               	iorwf	(??_floorf+3)^0,w,c
  4796  003AF6  A4D8               	btfss	status,2,c
  4797  003AF8  EF80  F01D         	goto	u8651
  4798  003AFC  EF82  F01D         	goto	u8650
  4799  003B00                     u8651:
  4800  003B00  EF84  F01D         	goto	l6527
  4801  003B04                     u8650:
  4802  003B04  EF3B  F01D         	goto	l6519
  4803  003B08                     l6527:
  4804  003B08  C03C  F030         	movff	floorf@u,??_floorf
  4805  003B0C  C03D  F031         	movff	floorf@u+1,??_floorf+1
  4806  003B10  C03E  F032         	movff	floorf@u+2,??_floorf+2
  4807  003B14  C03F  F033         	movff	floorf@u+3,??_floorf+3
  4808  003B18  0E20               	movlw	32
  4809  003B1A  EF94  F01D         	goto	u8660
  4810  003B1E                     u8665:
  4811  003B1E  90D8               	bcf	status,0,c
  4812  003B20  3233               	rrcf	(??_floorf+3)^0,f,c
  4813  003B22  3232               	rrcf	(??_floorf+2)^0,f,c
  4814  003B24  3231               	rrcf	(??_floorf+1)^0,f,c
  4815  003B26  3230               	rrcf	??_floorf^0,f,c
  4816  003B28                     u8660:
  4817  003B28  2EE8               	decfsz	wreg,f,c
  4818  003B2A  EF8F  F01D         	goto	u8665
  4819  003B2E  5030               	movf	??_floorf^0,w,c
  4820  003B30  1031               	iorwf	(??_floorf+1)^0,w,c
  4821  003B32  1032               	iorwf	(??_floorf+2)^0,w,c
  4822  003B34  1033               	iorwf	(??_floorf+3)^0,w,c
  4823  003B36  B4D8               	btfsc	status,2,c
  4824  003B38  EFA0  F01D         	goto	u8671
  4825  003B3C  EFA2  F01D         	goto	u8670
  4826  003B40                     u8671:
  4827  003B40  EFAA  F01D         	goto	l1442
  4828  003B44                     u8670:
  4829  003B44  5036               	movf	floorf@m^0,w,c
  4830  003B46  263C               	addwf	floorf@u^0,f,c
  4831  003B48  5037               	movf	(floorf@m+1)^0,w,c
  4832  003B4A  223D               	addwfc	(floorf@u+1)^0,f,c
  4833  003B4C  5038               	movf	(floorf@m+2)^0,w,c
  4834  003B4E  223E               	addwfc	(floorf@u+2)^0,f,c
  4835  003B50  5039               	movf	(floorf@m+3)^0,w,c
  4836  003B52  223F               	addwfc	(floorf@u+3)^0,f,c
  4837  003B54                     l1442:
  4838  003B54  1C36               	comf	floorf@m^0,w,c
  4839  003B56  6E30               	movwf	??_floorf^0,c
  4840  003B58  1C37               	comf	(floorf@m+1)^0,w,c
  4841  003B5A  6E31               	movwf	(??_floorf+1)^0,c
  4842  003B5C  1C38               	comf	(floorf@m+2)^0,w,c
  4843  003B5E  6E32               	movwf	(??_floorf+2)^0,c
  4844  003B60  1C39               	comf	(floorf@m+3)^0,w,c
  4845  003B62  6E33               	movwf	(??_floorf+3)^0,c
  4846  003B64  5030               	movf	??_floorf^0,w,c
  4847  003B66  163C               	andwf	floorf@u^0,f,c
  4848  003B68  5031               	movf	(??_floorf+1)^0,w,c
  4849  003B6A  163D               	andwf	(floorf@u+1)^0,f,c
  4850  003B6C  5032               	movf	(??_floorf+2)^0,w,c
  4851  003B6E  163E               	andwf	(floorf@u+2)^0,f,c
  4852  003B70  5033               	movf	(??_floorf+3)^0,w,c
  4853  003B72  163F               	andwf	(floorf@u+3)^0,f,c
  4854  003B74  EF00  F01E         	goto	l6539
  4855  003B78                     l6531:
  4856  003B78  C03C  F030         	movff	floorf@u,??_floorf
  4857  003B7C  C03D  F031         	movff	floorf@u+1,??_floorf+1
  4858  003B80  C03E  F032         	movff	floorf@u+2,??_floorf+2
  4859  003B84  C03F  F033         	movff	floorf@u+3,??_floorf+3
  4860  003B88  0E20               	movlw	32
  4861  003B8A  EFCC  F01D         	goto	u8680
  4862  003B8E                     u8685:
  4863  003B8E  90D8               	bcf	status,0,c
  4864  003B90  3233               	rrcf	(??_floorf+3)^0,f,c
  4865  003B92  3232               	rrcf	(??_floorf+2)^0,f,c
  4866  003B94  3231               	rrcf	(??_floorf+1)^0,f,c
  4867  003B96  3230               	rrcf	??_floorf^0,f,c
  4868  003B98                     u8680:
  4869  003B98  2EE8               	decfsz	wreg,f,c
  4870  003B9A  EFC7  F01D         	goto	u8685
  4871  003B9E  5030               	movf	??_floorf^0,w,c
  4872  003BA0  1031               	iorwf	(??_floorf+1)^0,w,c
  4873  003BA2  1032               	iorwf	(??_floorf+2)^0,w,c
  4874  003BA4  1033               	iorwf	(??_floorf+3)^0,w,c
  4875  003BA6  A4D8               	btfss	status,2,c
  4876  003BA8  EFD8  F01D         	goto	u8691
  4877  003BAC  EFDA  F01D         	goto	u8690
  4878  003BB0                     u8691:
  4879  003BB0  EFE4  F01D         	goto	l6535
  4880  003BB4                     u8690:
  4881  003BB4  0E00               	movlw	0
  4882  003BB6  6E3C               	movwf	floorf@u^0,c
  4883  003BB8  0E00               	movlw	0
  4884  003BBA  6E3D               	movwf	(floorf@u+1)^0,c
  4885  003BBC  0E00               	movlw	0
  4886  003BBE  6E3E               	movwf	(floorf@u+2)^0,c
  4887  003BC0  0E00               	movlw	0
  4888  003BC2  6E3F               	movwf	(floorf@u+3)^0,c
  4889  003BC4  EF00  F01E         	goto	l6539
  4890  003BC8                     l6535:
  4891  003BC8  90D8               	bcf	status,0,c
  4892  003BCA  343C               	rlcf	floorf@u^0,w,c
  4893  003BCC  6E30               	movwf	??_floorf^0,c
  4894  003BCE  343D               	rlcf	(floorf@u+1)^0,w,c
  4895  003BD0  6E31               	movwf	(??_floorf+1)^0,c
  4896  003BD2  343E               	rlcf	(floorf@u+2)^0,w,c
  4897  003BD4  6E32               	movwf	(??_floorf+2)^0,c
  4898  003BD6  343F               	rlcf	(floorf@u+3)^0,w,c
  4899  003BD8  6E33               	movwf	(??_floorf+3)^0,c
  4900  003BDA  5030               	movf	??_floorf^0,w,c
  4901  003BDC  1031               	iorwf	(??_floorf+1)^0,w,c
  4902  003BDE  1032               	iorwf	(??_floorf+2)^0,w,c
  4903  003BE0  1033               	iorwf	(??_floorf+3)^0,w,c
  4904  003BE2  B4D8               	btfsc	status,2,c
  4905  003BE4  EFF6  F01D         	goto	u8701
  4906  003BE8  EFF8  F01D         	goto	u8700
  4907  003BEC                     u8701:
  4908  003BEC  EF00  F01E         	goto	l6539
  4909  003BF0                     u8700:
  4910  003BF0  0E00               	movlw	0
  4911  003BF2  6E3C               	movwf	floorf@u^0,c
  4912  003BF4  0E00               	movlw	0
  4913  003BF6  6E3D               	movwf	(floorf@u+1)^0,c
  4914  003BF8  0E80               	movlw	128
  4915  003BFA  6E3E               	movwf	(floorf@u+2)^0,c
  4916  003BFC  0EBF               	movlw	191
  4917  003BFE  6E3F               	movwf	(floorf@u+3)^0,c
  4918  003C00                     l6539:
  4919  003C00  C03C  F02C         	movff	floorf@u,?_floorf
  4920  003C04  C03D  F02D         	movff	floorf@u+1,?_floorf+1
  4921  003C08  C03E  F02E         	movff	floorf@u+2,?_floorf+2
  4922  003C0C  C03F  F02F         	movff	floorf@u+3,?_floorf+3
  4923  003C10                     l1439:
  4924  003C10  0012               	return		;funcret
  4925  003C12                     __end_of_floorf:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function ___fpclassifyf *****************
  4929 ;; Defined at:
  4930 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  x               4    4[COMRAM] float 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  u               4   14[COMRAM] struct .
  4935 ;;  e               2   12[COMRAM] int 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  2    4[COMRAM] int 
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;Total ram usage:       14 bytes
  4950 ;; Hardware stack levels used: 1
  4951 ;; Hardware stack levels required when called: 5
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_efgtoa
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text10
  4960  004A00                     __ptext10:
  4961                           	callstack 0
  4962  004A00                     ___fpclassifyf:
  4963                           	callstack 21
  4964  004A00  C0F0  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4965  004A04  C0F1  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4966  004A08  C0F2  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4967  004A0C  C0F3  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4968  004A10  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4969  004A14  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4970  004A18  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4971  004A1C  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4972  004A20  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4973  004A24  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4974  004A28  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4975  004A2C  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4976  004A30  0E18               	movlw	24
  4977  004A32  EF20  F025         	goto	u8490
  4978  004A36                     u8495:
  4979  004A36  90D8               	bcf	status,0,c
  4980  004A38  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4981  004A3A  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4982  004A3C  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4983  004A3E  3209               	rrcf	??___fpclassifyf^0,f,c
  4984  004A40                     u8490:
  4985  004A40  2EE8               	decfsz	wreg,f,c
  4986  004A42  EF1B  F025         	goto	u8495
  4987  004A46  5009               	movf	??___fpclassifyf^0,w,c
  4988  004A48  6E0D               	movwf	___fpclassifyf@e^0,c
  4989  004A4A  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4990  004A4C  500D               	movf	___fpclassifyf@e^0,w,c
  4991  004A4E  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4992  004A50  A4D8               	btfss	status,2,c
  4993  004A52  EF2D  F025         	goto	u8501
  4994  004A56  EF2F  F025         	goto	u8500
  4995  004A5A                     u8501:
  4996  004A5A  EF4F  F025         	goto	l6491
  4997  004A5E                     u8500:
  4998  004A5E  90D8               	bcf	status,0,c
  4999  004A60  340F               	rlcf	___fpclassifyf@u^0,w,c
  5000  004A62  6E09               	movwf	??___fpclassifyf^0,c
  5001  004A64  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5002  004A66  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5003  004A68  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5004  004A6A  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5005  004A6C  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5006  004A6E  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5007  004A70  5009               	movf	??___fpclassifyf^0,w,c
  5008  004A72  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5009  004A74  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5010  004A76  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5011  004A78  A4D8               	btfss	status,2,c
  5012  004A7A  EF41  F025         	goto	u8511
  5013  004A7E  EF43  F025         	goto	u8510
  5014  004A82                     u8511:
  5015  004A82  EF49  F025         	goto	l6487
  5016  004A86                     u8510:
  5017  004A86  0E00               	movlw	0
  5018  004A88  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5019  004A8A  0E02               	movlw	2
  5020  004A8C  6E05               	movwf	?___fpclassifyf^0,c
  5021  004A8E  EF7E  F025         	goto	l1394
  5022  004A92                     l6487:
  5023  004A92  0E00               	movlw	0
  5024  004A94  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5025  004A96  0E03               	movlw	3
  5026  004A98  6E05               	movwf	?___fpclassifyf^0,c
  5027  004A9A  EF7E  F025         	goto	l1394
  5028  004A9E                     l6491:
  5029  004A9E  280D               	incf	___fpclassifyf@e^0,w,c
  5030  004AA0  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5031  004AA2  A4D8               	btfss	status,2,c
  5032  004AA4  EF56  F025         	goto	u8521
  5033  004AA8  EF58  F025         	goto	u8520
  5034  004AAC                     u8521:
  5035  004AAC  EF7A  F025         	goto	l6497
  5036  004AB0                     u8520:
  5037  004AB0  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5038  004AB4  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5039  004AB8  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5040  004ABC  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5041  004AC0  0E09               	movlw	9
  5042  004AC2                     u8535:
  5043  004AC2  90D8               	bcf	status,0,c
  5044  004AC4  3609               	rlcf	??___fpclassifyf^0,f,c
  5045  004AC6  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5046  004AC8  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5047  004ACA  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5048  004ACC  2EE8               	decfsz	wreg,f,c
  5049  004ACE  EF61  F025         	goto	u8535
  5050  004AD2  5009               	movf	??___fpclassifyf^0,w,c
  5051  004AD4  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5052  004AD6  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5053  004AD8  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5054  004ADA  B4D8               	btfsc	status,2,c
  5055  004ADC  EF72  F025         	goto	u8541
  5056  004AE0  EF75  F025         	goto	u8540
  5057  004AE4                     u8541:
  5058  004AE4  0E01               	movlw	1
  5059  004AE6  EF76  F025         	goto	u8550
  5060  004AEA                     u8540:
  5061  004AEA  0E00               	movlw	0
  5062  004AEC                     u8550:
  5063  004AEC  6E05               	movwf	?___fpclassifyf^0,c
  5064  004AEE  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5065  004AF0  EF7E  F025         	goto	l1394
  5066  004AF4                     l6497:
  5067  004AF4  0E00               	movlw	0
  5068  004AF6  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5069  004AF8  0E04               	movlw	4
  5070  004AFA  6E05               	movwf	?___fpclassifyf^0,c
  5071  004AFC                     l1394:
  5072  004AFC  0012               	return		;funcret
  5073  004AFE                     __end_of___fpclassifyf:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function ___fltol *****************
  5077 ;; Defined at:
  5078 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  f1              4    4[COMRAM] int 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  exp1            1   13[COMRAM] unsigned char 
  5083 ;;  sign1           1   12[COMRAM] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  4    4[COMRAM] long 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5096 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5097 ;;Total ram usage:       10 bytes
  5098 ;; Hardware stack levels used: 1
  5099 ;; Hardware stack levels required when called: 5
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_efgtoa
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text11
  5108  0047F6                     __ptext11:
  5109                           	callstack 0
  5110  0047F6                     ___fltol:
  5111                           	callstack 21
  5112  0047F6  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5113  0047F8  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5114  0047FA  6E0E               	movwf	___fltol@exp1^0,c
  5115  0047FC  500E               	movf	___fltol@exp1^0,w,c
  5116  0047FE  A4D8               	btfss	status,2,c
  5117  004800  EF04  F024         	goto	u8371
  5118  004804  EF06  F024         	goto	u8370
  5119  004808                     u8371:
  5120  004808  EF10  F024         	goto	l6415
  5121  00480C                     u8370:
  5122  00480C                     l6411:
  5123  00480C  0E00               	movlw	0
  5124  00480E  6E05               	movwf	?___fltol^0,c
  5125  004810  0E00               	movlw	0
  5126  004812  6E06               	movwf	(?___fltol+1)^0,c
  5127  004814  0E00               	movlw	0
  5128  004816  6E07               	movwf	(?___fltol+2)^0,c
  5129  004818  0E00               	movlw	0
  5130  00481A  6E08               	movwf	(?___fltol+3)^0,c
  5131  00481C  EF7D  F024         	goto	l802
  5132  004820                     l6415:
  5133  004820  C005  F009         	movff	___fltol@f1,??___fltol
  5134  004824  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5135  004828  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5136  00482C  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5137  004830  0E20               	movlw	32
  5138  004832  EF20  F024         	goto	u8380
  5139  004836                     u8385:
  5140  004836  90D8               	bcf	status,0,c
  5141  004838  320C               	rrcf	(??___fltol+3)^0,f,c
  5142  00483A  320B               	rrcf	(??___fltol+2)^0,f,c
  5143  00483C  320A               	rrcf	(??___fltol+1)^0,f,c
  5144  00483E  3209               	rrcf	??___fltol^0,f,c
  5145  004840                     u8380:
  5146  004840  2EE8               	decfsz	wreg,f,c
  5147  004842  EF1B  F024         	goto	u8385
  5148  004846  5009               	movf	??___fltol^0,w,c
  5149  004848  6E0D               	movwf	___fltol@sign1^0,c
  5150  00484A  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5151  00484C  0EFF               	movlw	255
  5152  00484E  1605               	andwf	___fltol@f1^0,f,c
  5153  004850  0EFF               	movlw	255
  5154  004852  1606               	andwf	(___fltol@f1+1)^0,f,c
  5155  004854  0EFF               	movlw	255
  5156  004856  1607               	andwf	(___fltol@f1+2)^0,f,c
  5157  004858  0E00               	movlw	0
  5158  00485A  1608               	andwf	(___fltol@f1+3)^0,f,c
  5159  00485C  0E96               	movlw	150
  5160  00485E  5E0E               	subwf	___fltol@exp1^0,f,c
  5161  004860  BE0E               	btfsc	___fltol@exp1^0,7,c
  5162  004862  EF37  F024         	goto	u8390
  5163  004866  EF35  F024         	goto	u8391
  5164  00486A                     u8391:
  5165  00486A  EF4D  F024         	goto	l6435
  5166  00486E                     u8390:
  5167  00486E  500E               	movf	___fltol@exp1^0,w,c
  5168  004870  0A80               	xorlw	128
  5169  004872  0F97               	addlw	151
  5170  004874  B0D8               	btfsc	status,0,c
  5171  004876  EF3F  F024         	goto	u8401
  5172  00487A  EF41  F024         	goto	u8400
  5173  00487E                     u8401:
  5174  00487E  EF43  F024         	goto	l6431
  5175  004882                     u8400:
  5176  004882  EF06  F024         	goto	l6411
  5177  004886                     l6431:
  5178  004886  90D8               	bcf	status,0,c
  5179  004888  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5180  00488A  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5181  00488C  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5182  00488E  3205               	rrcf	___fltol@f1^0,f,c
  5183  004890  3E0E               	incfsz	___fltol@exp1^0,f,c
  5184  004892  EF43  F024         	goto	l6431
  5185  004896  EF65  F024         	goto	l6445
  5186  00489A                     l6435:
  5187  00489A  0E1F               	movlw	31
  5188  00489C  640E               	cpfsgt	___fltol@exp1^0,c
  5189  00489E  EF53  F024         	goto	u8411
  5190  0048A2  EF55  F024         	goto	u8410
  5191  0048A6                     u8411:
  5192  0048A6  EF5D  F024         	goto	l6443
  5193  0048AA                     u8410:
  5194  0048AA  EF06  F024         	goto	l6411
  5195  0048AE                     l6441:
  5196  0048AE  90D8               	bcf	status,0,c
  5197  0048B0  3605               	rlcf	___fltol@f1^0,f,c
  5198  0048B2  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5199  0048B4  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5200  0048B6  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5201  0048B8  060E               	decf	___fltol@exp1^0,f,c
  5202  0048BA                     l6443:
  5203  0048BA  500E               	movf	___fltol@exp1^0,w,c
  5204  0048BC  A4D8               	btfss	status,2,c
  5205  0048BE  EF63  F024         	goto	u8421
  5206  0048C2  EF65  F024         	goto	u8420
  5207  0048C6                     u8421:
  5208  0048C6  EF57  F024         	goto	l6441
  5209  0048CA                     u8420:
  5210  0048CA                     l6445:
  5211  0048CA  500D               	movf	___fltol@sign1^0,w,c
  5212  0048CC  B4D8               	btfsc	status,2,c
  5213  0048CE  EF6B  F024         	goto	u8431
  5214  0048D2  EF6D  F024         	goto	u8430
  5215  0048D6                     u8431:
  5216  0048D6  EF75  F024         	goto	l6449
  5217  0048DA                     u8430:
  5218  0048DA  1E08               	comf	(___fltol@f1+3)^0,f,c
  5219  0048DC  1E07               	comf	(___fltol@f1+2)^0,f,c
  5220  0048DE  1E06               	comf	(___fltol@f1+1)^0,f,c
  5221  0048E0  6C05               	negf	___fltol@f1^0,c
  5222  0048E2  0E00               	movlw	0
  5223  0048E4  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5224  0048E6  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5225  0048E8  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5226  0048EA                     l6449:
  5227  0048EA  C005  F005         	movff	___fltol@f1,?___fltol
  5228  0048EE  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5229  0048F2  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5230  0048F6  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5231  0048FA                     l802:
  5232  0048FA  0012               	return		;funcret
  5233  0048FC                     __end_of___fltol:
  5234                           	callstack 0
  5235                           
  5236 ;; *************** function ___flsub *****************
  5237 ;; Defined at:
  5238 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  b               4   29[COMRAM] long 
  5241 ;;  a               4   33[COMRAM] long 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  4   29[COMRAM] long 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5253 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;Total ram usage:        8 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; Hardware stack levels required when called: 6
  5260 ;; This function calls:
  5261 ;;		___fladd
  5262 ;; This function is called by:
  5263 ;;		_efgtoa
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text12
  5268  005416                     __ptext12:
  5269                           	callstack 0
  5270  005416                     ___flsub:
  5271                           	callstack 20
  5272  005416  0E00               	movlw	0
  5273  005418  1A22               	xorwf	___flsub@a^0,f,c
  5274  00541A  0E00               	movlw	0
  5275  00541C  1A23               	xorwf	(___flsub@a+1)^0,f,c
  5276  00541E  0E00               	movlw	0
  5277  005420  1A24               	xorwf	(___flsub@a+2)^0,f,c
  5278  005422  0E80               	movlw	128
  5279  005424  1A25               	xorwf	(___flsub@a+3)^0,f,c
  5280  005426  C01E  F005         	movff	___flsub@b,___fladd@b
  5281  00542A  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  5282  00542E  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  5283  005432  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  5284  005436  C022  F009         	movff	___flsub@a,___fladd@a
  5285  00543A  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  5286  00543E  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  5287  005442  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  5288  005446  ECC6  F013         	call	___fladd	;wreg free
  5289  00544A  C005  F01E         	movff	?___fladd,?___flsub
  5290  00544E  C006  F01F         	movff	?___fladd+1,?___flsub+1
  5291  005452  C007  F020         	movff	?___fladd+2,?___flsub+2
  5292  005456  C008  F021         	movff	?___fladd+3,?___flsub+3
  5293  00545A  0012               	return		;funcret
  5294  00545C                     __end_of___flsub:
  5295                           	callstack 0
  5296                           
  5297 ;; *************** function ___fladd *****************
  5298 ;; Defined at:
  5299 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  b               4    4[COMRAM] long 
  5302 ;;  a               4    8[COMRAM] long 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  grs             1   19[COMRAM] unsigned char 
  5305 ;;  bexp            1   18[COMRAM] unsigned char 
  5306 ;;  aexp            1   17[COMRAM] unsigned char 
  5307 ;;  signs           1   16[COMRAM] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  4    4[COMRAM] unsigned char 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5317 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;Total ram usage:       16 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 5
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		___flsub
  5328 ;;		_efgtoa
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text13
  5333  00278C                     __ptext13:
  5334                           	callstack 0
  5335  00278C                     ___fladd:
  5336                           	callstack 20
  5337  00278C  5008               	movf	(___fladd@b+3)^0,w,c
  5338  00278E  0B80               	andlw	128
  5339  002790  6E11               	movwf	___fladd@signs^0,c
  5340  002792  5008               	movf	(___fladd@b+3)^0,w,c
  5341  002794  2408               	addwf	(___fladd@b+3)^0,w,c
  5342  002796  6E13               	movwf	___fladd@bexp^0,c
  5343  002798  AE07               	btfss	(___fladd@b+2)^0,7,c
  5344  00279A  EFD1  F013         	goto	u7181
  5345  00279E  EFD3  F013         	goto	u7180
  5346  0027A2                     u7181:
  5347  0027A2  EFD4  F013         	goto	l5705
  5348  0027A6                     u7180:
  5349  0027A6  8013               	bsf	___fladd@bexp^0,0,c
  5350  0027A8                     l5705:
  5351  0027A8  5013               	movf	___fladd@bexp^0,w,c
  5352  0027AA  B4D8               	btfsc	status,2,c
  5353  0027AC  EFDA  F013         	goto	u7191
  5354  0027B0  EFDC  F013         	goto	u7190
  5355  0027B4                     u7191:
  5356  0027B4  EFF1  F013         	goto	l5715
  5357  0027B8                     u7190:
  5358  0027B8  2813               	incf	___fladd@bexp^0,w,c
  5359  0027BA  A4D8               	btfss	status,2,c
  5360  0027BC  EFE2  F013         	goto	u7201
  5361  0027C0  EFE4  F013         	goto	u7200
  5362  0027C4                     u7201:
  5363  0027C4  EFEC  F013         	goto	l5711
  5364  0027C8                     u7200:
  5365  0027C8  0E00               	movlw	0
  5366  0027CA  6E05               	movwf	___fladd@b^0,c
  5367  0027CC  0E00               	movlw	0
  5368  0027CE  6E06               	movwf	(___fladd@b+1)^0,c
  5369  0027D0  0E00               	movlw	0
  5370  0027D2  6E07               	movwf	(___fladd@b+2)^0,c
  5371  0027D4  0E00               	movlw	0
  5372  0027D6  6E08               	movwf	(___fladd@b+3)^0,c
  5373  0027D8                     l5711:
  5374  0027D8  8E07               	bsf	(___fladd@b+2)^0,7,c
  5375  0027DA  0E00               	movlw	0
  5376  0027DC  6E08               	movwf	(___fladd@b+3)^0,c
  5377  0027DE  EFF9  F013         	goto	l5717
  5378  0027E2                     l5715:
  5379  0027E2  0E00               	movlw	0
  5380  0027E4  6E05               	movwf	___fladd@b^0,c
  5381  0027E6  0E00               	movlw	0
  5382  0027E8  6E06               	movwf	(___fladd@b+1)^0,c
  5383  0027EA  0E00               	movlw	0
  5384  0027EC  6E07               	movwf	(___fladd@b+2)^0,c
  5385  0027EE  0E00               	movlw	0
  5386  0027F0  6E08               	movwf	(___fladd@b+3)^0,c
  5387  0027F2                     l5717:
  5388  0027F2  500C               	movf	(___fladd@a+3)^0,w,c
  5389  0027F4  0B80               	andlw	128
  5390  0027F6  6E12               	movwf	___fladd@aexp^0,c
  5391  0027F8  5011               	movf	___fladd@signs^0,w,c
  5392  0027FA  1812               	xorwf	___fladd@aexp^0,w,c
  5393  0027FC  B4D8               	btfsc	status,2,c
  5394  0027FE  EF03  F014         	goto	u7211
  5395  002802  EF05  F014         	goto	u7210
  5396  002806                     u7211:
  5397  002806  EF06  F014         	goto	l5723
  5398  00280A                     u7210:
  5399  00280A  8C11               	bsf	___fladd@signs^0,6,c
  5400  00280C                     l5723:
  5401  00280C  500C               	movf	(___fladd@a+3)^0,w,c
  5402  00280E  240C               	addwf	(___fladd@a+3)^0,w,c
  5403  002810  6E12               	movwf	___fladd@aexp^0,c
  5404  002812  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5405  002814  EF0E  F014         	goto	u7221
  5406  002818  EF10  F014         	goto	u7220
  5407  00281C                     u7221:
  5408  00281C  EF11  F014         	goto	l5729
  5409  002820                     u7220:
  5410  002820  8012               	bsf	___fladd@aexp^0,0,c
  5411  002822                     l5729:
  5412  002822  5012               	movf	___fladd@aexp^0,w,c
  5413  002824  B4D8               	btfsc	status,2,c
  5414  002826  EF17  F014         	goto	u7231
  5415  00282A  EF19  F014         	goto	u7230
  5416  00282E                     u7231:
  5417  00282E  EF2E  F014         	goto	l5739
  5418  002832                     u7230:
  5419  002832  2812               	incf	___fladd@aexp^0,w,c
  5420  002834  A4D8               	btfss	status,2,c
  5421  002836  EF1F  F014         	goto	u7241
  5422  00283A  EF21  F014         	goto	u7240
  5423  00283E                     u7241:
  5424  00283E  EF29  F014         	goto	l5735
  5425  002842                     u7240:
  5426  002842  0E00               	movlw	0
  5427  002844  6E09               	movwf	___fladd@a^0,c
  5428  002846  0E00               	movlw	0
  5429  002848  6E0A               	movwf	(___fladd@a+1)^0,c
  5430  00284A  0E00               	movlw	0
  5431  00284C  6E0B               	movwf	(___fladd@a+2)^0,c
  5432  00284E  0E00               	movlw	0
  5433  002850  6E0C               	movwf	(___fladd@a+3)^0,c
  5434  002852                     l5735:
  5435  002852  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5436  002854  0E00               	movlw	0
  5437  002856  6E0C               	movwf	(___fladd@a+3)^0,c
  5438  002858  EF36  F014         	goto	l5741
  5439  00285C                     l5739:
  5440  00285C  0E00               	movlw	0
  5441  00285E  6E09               	movwf	___fladd@a^0,c
  5442  002860  0E00               	movlw	0
  5443  002862  6E0A               	movwf	(___fladd@a+1)^0,c
  5444  002864  0E00               	movlw	0
  5445  002866  6E0B               	movwf	(___fladd@a+2)^0,c
  5446  002868  0E00               	movlw	0
  5447  00286A  6E0C               	movwf	(___fladd@a+3)^0,c
  5448  00286C                     l5741:
  5449  00286C  5013               	movf	___fladd@bexp^0,w,c
  5450  00286E  5C12               	subwf	___fladd@aexp^0,w,c
  5451  002870  B0D8               	btfsc	status,0,c
  5452  002872  EF3D  F014         	goto	u7251
  5453  002876  EF3F  F014         	goto	u7250
  5454  00287A                     u7251:
  5455  00287A  EF66  F014         	goto	l5777
  5456  00287E                     u7250:
  5457  00287E  AC11               	btfss	___fladd@signs^0,6,c
  5458  002880  EF44  F014         	goto	u7261
  5459  002884  EF46  F014         	goto	u7260
  5460  002888                     u7261:
  5461  002888  EF48  F014         	goto	l5747
  5462  00288C                     u7260:
  5463  00288C  0E80               	movlw	128
  5464  00288E  1A11               	xorwf	___fladd@signs^0,f,c
  5465  002890                     l5747:
  5466  002890  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5467  002894  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5468  002898  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5469  00289C  C005  F014         	movff	___fladd@b,___fladd@grs
  5470  0028A0  C009  F005         	movff	___fladd@a,___fladd@b
  5471  0028A4  C014  F009         	movff	___fladd@grs,___fladd@a
  5472  0028A8  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5473  0028AC  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5474  0028B0  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5475  0028B4  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5476  0028B8  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5477  0028BC  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5478  0028C0  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5479  0028C4  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5480  0028C8  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5481  0028CC                     l5777:
  5482  0028CC  0E00               	movlw	0
  5483  0028CE  6E14               	movwf	___fladd@grs^0,c
  5484  0028D0  5013               	movf	___fladd@bexp^0,w,c
  5485  0028D2  C012  F00D         	movff	___fladd@aexp,??___fladd
  5486  0028D6  6A0E               	clrf	(??___fladd+1)^0,c
  5487  0028D8  5E0D               	subwf	??___fladd^0,f,c
  5488  0028DA  0E00               	movlw	0
  5489  0028DC  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5490  0028DE  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5491  0028E0  EF7B  F014         	goto	u7271
  5492  0028E4  500E               	movf	(??___fladd+1)^0,w,c
  5493  0028E6  E109               	bnz	u7270
  5494  0028E8  0E1A               	movlw	26
  5495  0028EA  5C0D               	subwf	??___fladd^0,w,c
  5496  0028EC  A0D8               	btfss	status,0,c
  5497  0028EE  EF7B  F014         	goto	u7271
  5498  0028F2  EF7D  F014         	goto	u7270
  5499  0028F6                     u7271:
  5500  0028F6  EFB4  F014         	goto	l1034
  5501  0028FA                     u7270:
  5502  0028FA  5005               	movf	___fladd@b^0,w,c
  5503  0028FC  1006               	iorwf	(___fladd@b+1)^0,w,c
  5504  0028FE  1007               	iorwf	(___fladd@b+2)^0,w,c
  5505  002900  1008               	iorwf	(___fladd@b+3)^0,w,c
  5506  002902  A4D8               	btfss	status,2,c
  5507  002904  EF86  F014         	goto	u7281
  5508  002908  EF89  F014         	goto	u7280
  5509  00290C                     u7281:
  5510  00290C  0E01               	movlw	1
  5511  00290E  EF8A  F014         	goto	u7290
  5512  002912                     u7280:
  5513  002912  0E00               	movlw	0
  5514  002914                     u7290:
  5515  002914  6E14               	movwf	___fladd@grs^0,c
  5516  002916  0E00               	movlw	0
  5517  002918  6E05               	movwf	___fladd@b^0,c
  5518  00291A  0E00               	movlw	0
  5519  00291C  6E06               	movwf	(___fladd@b+1)^0,c
  5520  00291E  0E00               	movlw	0
  5521  002920  6E07               	movwf	(___fladd@b+2)^0,c
  5522  002922  0E00               	movlw	0
  5523  002924  6E08               	movwf	(___fladd@b+3)^0,c
  5524  002926  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5525  00292A  EFBD  F014         	goto	l1033
  5526  00292E                     l1035:
  5527  00292E  A014               	btfss	___fladd@grs^0,0,c
  5528  002930  EF9C  F014         	goto	u7301
  5529  002934  EF9E  F014         	goto	u7300
  5530  002938                     u7301:
  5531  002938  EFA4  F014         	goto	l5789
  5532  00293C                     u7300:
  5533  00293C  90D8               	bcf	status,0,c
  5534  00293E  3014               	rrcf	___fladd@grs^0,w,c
  5535  002940  0901               	iorlw	1
  5536  002942  6E14               	movwf	___fladd@grs^0,c
  5537  002944  EFA6  F014         	goto	l5791
  5538  002948                     l5789:
  5539  002948  90D8               	bcf	status,0,c
  5540  00294A  3214               	rrcf	___fladd@grs^0,f,c
  5541  00294C                     l5791:
  5542  00294C  A005               	btfss	___fladd@b^0,0,c
  5543  00294E  EFAB  F014         	goto	u7311
  5544  002952  EFAD  F014         	goto	u7310
  5545  002956                     u7311:
  5546  002956  EFAE  F014         	goto	l5795
  5547  00295A                     u7310:
  5548  00295A  8E14               	bsf	___fladd@grs^0,7,c
  5549  00295C                     l5795:
  5550  00295C  3408               	rlcf	(___fladd@b+3)^0,w,c
  5551  00295E  3208               	rrcf	(___fladd@b+3)^0,f,c
  5552  002960  3207               	rrcf	(___fladd@b+2)^0,f,c
  5553  002962  3206               	rrcf	(___fladd@b+1)^0,f,c
  5554  002964  3205               	rrcf	___fladd@b^0,f,c
  5555  002966  2A13               	incf	___fladd@bexp^0,f,c
  5556  002968                     l1034:
  5557  002968  5012               	movf	___fladd@aexp^0,w,c
  5558  00296A  5C13               	subwf	___fladd@bexp^0,w,c
  5559  00296C  A0D8               	btfss	status,0,c
  5560  00296E  EFBB  F014         	goto	u7321
  5561  002972  EFBD  F014         	goto	u7320
  5562  002976                     u7321:
  5563  002976  EF97  F014         	goto	l1035
  5564  00297A                     u7320:
  5565  00297A                     l1033:
  5566  00297A  BC11               	btfsc	___fladd@signs^0,6,c
  5567  00297C  EFC2  F014         	goto	u7331
  5568  002980  EFC4  F014         	goto	u7330
  5569  002984                     u7331:
  5570  002984  EF04  F015         	goto	l5823
  5571  002988                     u7330:
  5572  002988  5013               	movf	___fladd@bexp^0,w,c
  5573  00298A  A4D8               	btfss	status,2,c
  5574  00298C  EFCA  F014         	goto	u7341
  5575  002990  EFCC  F014         	goto	u7340
  5576  002994                     u7341:
  5577  002994  EFD6  F014         	goto	l5805
  5578  002998                     u7340:
  5579  002998  0E00               	movlw	0
  5580  00299A  6E05               	movwf	?___fladd^0,c
  5581  00299C  0E00               	movlw	0
  5582  00299E  6E06               	movwf	(?___fladd+1)^0,c
  5583  0029A0  0E00               	movlw	0
  5584  0029A2  6E07               	movwf	(?___fladd+2)^0,c
  5585  0029A4  0E00               	movlw	0
  5586  0029A6  6E08               	movwf	(?___fladd+3)^0,c
  5587  0029A8  EF25  F016         	goto	l1042
  5588  0029AC                     l5805:
  5589  0029AC  5009               	movf	___fladd@a^0,w,c
  5590  0029AE  2605               	addwf	___fladd@b^0,f,c
  5591  0029B0  500A               	movf	(___fladd@a+1)^0,w,c
  5592  0029B2  2206               	addwfc	(___fladd@b+1)^0,f,c
  5593  0029B4  500B               	movf	(___fladd@a+2)^0,w,c
  5594  0029B6  2207               	addwfc	(___fladd@b+2)^0,f,c
  5595  0029B8  500C               	movf	(___fladd@a+3)^0,w,c
  5596  0029BA  2208               	addwfc	(___fladd@b+3)^0,f,c
  5597  0029BC  A008               	btfss	(___fladd@b+3)^0,0,c
  5598  0029BE  EFE3  F014         	goto	u7351
  5599  0029C2  EFE5  F014         	goto	u7350
  5600  0029C6                     u7351:
  5601  0029C6  EF91  F015         	goto	l5859
  5602  0029CA                     u7350:
  5603  0029CA  A014               	btfss	___fladd@grs^0,0,c
  5604  0029CC  EFEA  F014         	goto	u7361
  5605  0029D0  EFEC  F014         	goto	u7360
  5606  0029D4                     u7361:
  5607  0029D4  EFF2  F014         	goto	l5813
  5608  0029D8                     u7360:
  5609  0029D8  90D8               	bcf	status,0,c
  5610  0029DA  3014               	rrcf	___fladd@grs^0,w,c
  5611  0029DC  0901               	iorlw	1
  5612  0029DE  6E14               	movwf	___fladd@grs^0,c
  5613  0029E0  EFF4  F014         	goto	l5815
  5614  0029E4                     l5813:
  5615  0029E4  90D8               	bcf	status,0,c
  5616  0029E6  3214               	rrcf	___fladd@grs^0,f,c
  5617  0029E8                     l5815:
  5618  0029E8  A005               	btfss	___fladd@b^0,0,c
  5619  0029EA  EFF9  F014         	goto	u7371
  5620  0029EE  EFFB  F014         	goto	u7370
  5621  0029F2                     u7371:
  5622  0029F2  EFFC  F014         	goto	l5819
  5623  0029F6                     u7370:
  5624  0029F6  8E14               	bsf	___fladd@grs^0,7,c
  5625  0029F8                     l5819:
  5626  0029F8  3408               	rlcf	(___fladd@b+3)^0,w,c
  5627  0029FA  3208               	rrcf	(___fladd@b+3)^0,f,c
  5628  0029FC  3207               	rrcf	(___fladd@b+2)^0,f,c
  5629  0029FE  3206               	rrcf	(___fladd@b+1)^0,f,c
  5630  002A00  3205               	rrcf	___fladd@b^0,f,c
  5631  002A02  2A13               	incf	___fladd@bexp^0,f,c
  5632  002A04  EF91  F015         	goto	l5859
  5633  002A08                     l5823:
  5634  002A08  5009               	movf	___fladd@a^0,w,c
  5635  002A0A  5C05               	subwf	___fladd@b^0,w,c
  5636  002A0C  500A               	movf	(___fladd@a+1)^0,w,c
  5637  002A0E  5806               	subwfb	(___fladd@b+1)^0,w,c
  5638  002A10  500B               	movf	(___fladd@a+2)^0,w,c
  5639  002A12  5807               	subwfb	(___fladd@b+2)^0,w,c
  5640  002A14  5008               	movf	(___fladd@b+3)^0,w,c
  5641  002A16  0A80               	xorlw	128
  5642  002A18  6E0D               	movwf	??___fladd^0,c
  5643  002A1A  500C               	movf	(___fladd@a+3)^0,w,c
  5644  002A1C  0A80               	xorlw	128
  5645  002A1E  580D               	subwfb	??___fladd^0,w,c
  5646  002A20  B0D8               	btfsc	status,0,c
  5647  002A22  EF15  F015         	goto	u7381
  5648  002A26  EF17  F015         	goto	u7380
  5649  002A2A                     u7381:
  5650  002A2A  EF42  F015         	goto	l5833
  5651  002A2E                     u7380:
  5652  002A2E  5005               	movf	___fladd@b^0,w,c
  5653  002A30  5C09               	subwf	___fladd@a^0,w,c
  5654  002A32  6E0D               	movwf	??___fladd^0,c
  5655  002A34  5006               	movf	(___fladd@b+1)^0,w,c
  5656  002A36  580A               	subwfb	(___fladd@a+1)^0,w,c
  5657  002A38  6E0E               	movwf	(??___fladd+1)^0,c
  5658  002A3A  5007               	movf	(___fladd@b+2)^0,w,c
  5659  002A3C  580B               	subwfb	(___fladd@a+2)^0,w,c
  5660  002A3E  6E0F               	movwf	(??___fladd+2)^0,c
  5661  002A40  5008               	movf	(___fladd@b+3)^0,w,c
  5662  002A42  580C               	subwfb	(___fladd@a+3)^0,w,c
  5663  002A44  6E10               	movwf	(??___fladd+3)^0,c
  5664  002A46  0EFF               	movlw	255
  5665  002A48  240D               	addwf	??___fladd^0,w,c
  5666  002A4A  6E05               	movwf	___fladd@b^0,c
  5667  002A4C  0EFF               	movlw	255
  5668  002A4E  200E               	addwfc	(??___fladd+1)^0,w,c
  5669  002A50  6E06               	movwf	(___fladd@b+1)^0,c
  5670  002A52  0EFF               	movlw	255
  5671  002A54  200F               	addwfc	(??___fladd+2)^0,w,c
  5672  002A56  6E07               	movwf	(___fladd@b+2)^0,c
  5673  002A58  0EFF               	movlw	255
  5674  002A5A  2010               	addwfc	(??___fladd+3)^0,w,c
  5675  002A5C  6E08               	movwf	(___fladd@b+3)^0,c
  5676  002A5E  0E80               	movlw	128
  5677  002A60  1A11               	xorwf	___fladd@signs^0,f,c
  5678  002A62  6C14               	negf	___fladd@grs^0,c
  5679  002A64  5014               	movf	___fladd@grs^0,w,c
  5680  002A66  A4D8               	btfss	status,2,c
  5681  002A68  EF38  F015         	goto	u7391
  5682  002A6C  EF3A  F015         	goto	u7390
  5683  002A70                     u7391:
  5684  002A70  EF4A  F015         	goto	l1050
  5685  002A74                     u7390:
  5686  002A74  0E01               	movlw	1
  5687  002A76  2605               	addwf	___fladd@b^0,f,c
  5688  002A78  0E00               	movlw	0
  5689  002A7A  2206               	addwfc	(___fladd@b+1)^0,f,c
  5690  002A7C  2207               	addwfc	(___fladd@b+2)^0,f,c
  5691  002A7E  2208               	addwfc	(___fladd@b+3)^0,f,c
  5692  002A80  EF4A  F015         	goto	l1050
  5693  002A84                     l5833:
  5694  002A84  5009               	movf	___fladd@a^0,w,c
  5695  002A86  5E05               	subwf	___fladd@b^0,f,c
  5696  002A88  500A               	movf	(___fladd@a+1)^0,w,c
  5697  002A8A  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5698  002A8C  500B               	movf	(___fladd@a+2)^0,w,c
  5699  002A8E  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5700  002A90  500C               	movf	(___fladd@a+3)^0,w,c
  5701  002A92  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5702  002A94                     l1050:
  5703  002A94  5005               	movf	___fladd@b^0,w,c
  5704  002A96  1006               	iorwf	(___fladd@b+1)^0,w,c
  5705  002A98  1007               	iorwf	(___fladd@b+2)^0,w,c
  5706  002A9A  1008               	iorwf	(___fladd@b+3)^0,w,c
  5707  002A9C  A4D8               	btfss	status,2,c
  5708  002A9E  EF53  F015         	goto	u7401
  5709  002AA2  EF55  F015         	goto	u7400
  5710  002AA6                     u7401:
  5711  002AA6  EF8A  F015         	goto	l5857
  5712  002AAA                     u7400:
  5713  002AAA  5014               	movf	___fladd@grs^0,w,c
  5714  002AAC  A4D8               	btfss	status,2,c
  5715  002AAE  EF5B  F015         	goto	u7411
  5716  002AB2  EF5D  F015         	goto	u7410
  5717  002AB6                     u7411:
  5718  002AB6  EF8A  F015         	goto	l5857
  5719  002ABA                     u7410:
  5720  002ABA  0E00               	movlw	0
  5721  002ABC  6E05               	movwf	?___fladd^0,c
  5722  002ABE  0E00               	movlw	0
  5723  002AC0  6E06               	movwf	(?___fladd+1)^0,c
  5724  002AC2  0E00               	movlw	0
  5725  002AC4  6E07               	movwf	(?___fladd+2)^0,c
  5726  002AC6  0E00               	movlw	0
  5727  002AC8  6E08               	movwf	(?___fladd+3)^0,c
  5728  002ACA  EF25  F016         	goto	l1042
  5729  002ACE                     l5841:
  5730  002ACE  90D8               	bcf	status,0,c
  5731  002AD0  3605               	rlcf	___fladd@b^0,f,c
  5732  002AD2  3606               	rlcf	(___fladd@b+1)^0,f,c
  5733  002AD4  3607               	rlcf	(___fladd@b+2)^0,f,c
  5734  002AD6  3608               	rlcf	(___fladd@b+3)^0,f,c
  5735  002AD8  AE14               	btfss	___fladd@grs^0,7,c
  5736  002ADA  EF71  F015         	goto	u7421
  5737  002ADE  EF73  F015         	goto	u7420
  5738  002AE2                     u7421:
  5739  002AE2  EF74  F015         	goto	l5847
  5740  002AE6                     u7420:
  5741  002AE6  8005               	bsf	___fladd@b^0,0,c
  5742  002AE8                     l5847:
  5743  002AE8  A014               	btfss	___fladd@grs^0,0,c
  5744  002AEA  EF79  F015         	goto	u7431
  5745  002AEE  EF7B  F015         	goto	u7430
  5746  002AF2                     u7431:
  5747  002AF2  EF7F  F015         	goto	l5851
  5748  002AF6                     u7430:
  5749  002AF6  80D8               	bsf	status,0,c
  5750  002AF8  3614               	rlcf	___fladd@grs^0,f,c
  5751  002AFA  EF81  F015         	goto	l5853
  5752  002AFE                     l5851:
  5753  002AFE  90D8               	bcf	status,0,c
  5754  002B00  3614               	rlcf	___fladd@grs^0,f,c
  5755  002B02                     l5853:
  5756  002B02  5013               	movf	___fladd@bexp^0,w,c
  5757  002B04  B4D8               	btfsc	status,2,c
  5758  002B06  EF87  F015         	goto	u7441
  5759  002B0A  EF89  F015         	goto	u7440
  5760  002B0E                     u7441:
  5761  002B0E  EF8A  F015         	goto	l5857
  5762  002B12                     u7440:
  5763  002B12  0613               	decf	___fladd@bexp^0,f,c
  5764  002B14                     l5857:
  5765  002B14  AE07               	btfss	(___fladd@b+2)^0,7,c
  5766  002B16  EF8F  F015         	goto	u7451
  5767  002B1A  EF91  F015         	goto	u7450
  5768  002B1E                     u7451:
  5769  002B1E  EF67  F015         	goto	l5841
  5770  002B22                     u7450:
  5771  002B22                     l5859:
  5772  002B22  0E00               	movlw	0
  5773  002B24  6E12               	movwf	___fladd@aexp^0,c
  5774  002B26  AE14               	btfss	___fladd@grs^0,7,c
  5775  002B28  EF98  F015         	goto	u7461
  5776  002B2C  EF9A  F015         	goto	u7460
  5777  002B30                     u7461:
  5778  002B30  EFB2  F015         	goto	l1059
  5779  002B34                     u7460:
  5780  002B34  C014  F00D         	movff	___fladd@grs,??___fladd
  5781  002B38  0E7F               	movlw	127
  5782  002B3A  160D               	andwf	??___fladd^0,f,c
  5783  002B3C  B4D8               	btfsc	status,2,c
  5784  002B3E  EFA3  F015         	goto	u7471
  5785  002B42  EFA5  F015         	goto	u7470
  5786  002B46                     u7471:
  5787  002B46  EFA9  F015         	goto	l1060
  5788  002B4A                     u7470:
  5789  002B4A                     l5865:
  5790  002B4A  0E01               	movlw	1
  5791  002B4C  6E12               	movwf	___fladd@aexp^0,c
  5792  002B4E  EFB2  F015         	goto	l1059
  5793  002B52                     l1060:
  5794  002B52  A005               	btfss	___fladd@b^0,0,c
  5795  002B54  EFAE  F015         	goto	u7481
  5796  002B58  EFB0  F015         	goto	u7480
  5797  002B5C                     u7481:
  5798  002B5C  EFB2  F015         	goto	l1059
  5799  002B60                     u7480:
  5800  002B60  EFA5  F015         	goto	l5865
  5801  002B64                     l1059:
  5802  002B64  5012               	movf	___fladd@aexp^0,w,c
  5803  002B66  B4D8               	btfsc	status,2,c
  5804  002B68  EFB8  F015         	goto	u7491
  5805  002B6C  EFBA  F015         	goto	u7490
  5806  002B70                     u7491:
  5807  002B70  EFE5  F015         	goto	l5877
  5808  002B74                     u7490:
  5809  002B74  0E01               	movlw	1
  5810  002B76  2605               	addwf	___fladd@b^0,f,c
  5811  002B78  0E00               	movlw	0
  5812  002B7A  2206               	addwfc	(___fladd@b+1)^0,f,c
  5813  002B7C  2207               	addwfc	(___fladd@b+2)^0,f,c
  5814  002B7E  2208               	addwfc	(___fladd@b+3)^0,f,c
  5815  002B80  A008               	btfss	(___fladd@b+3)^0,0,c
  5816  002B82  EFC5  F015         	goto	u7501
  5817  002B86  EFC7  F015         	goto	u7500
  5818  002B8A                     u7501:
  5819  002B8A  EFE5  F015         	goto	l5877
  5820  002B8E                     u7500:
  5821  002B8E  C005  F00D         	movff	___fladd@b,??___fladd
  5822  002B92  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5823  002B96  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5824  002B9A  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5825  002B9E  3410               	rlcf	(??___fladd+3)^0,w,c
  5826  002BA0  3210               	rrcf	(??___fladd+3)^0,f,c
  5827  002BA2  320F               	rrcf	(??___fladd+2)^0,f,c
  5828  002BA4  320E               	rrcf	(??___fladd+1)^0,f,c
  5829  002BA6  320D               	rrcf	??___fladd^0,f,c
  5830  002BA8  C00D  F005         	movff	??___fladd,___fladd@b
  5831  002BAC  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5832  002BB0  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5833  002BB4  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5834  002BB8  2813               	incf	___fladd@bexp^0,w,c
  5835  002BBA  B4D8               	btfsc	status,2,c
  5836  002BBC  EFE2  F015         	goto	u7511
  5837  002BC0  EFE4  F015         	goto	u7510
  5838  002BC4                     u7511:
  5839  002BC4  EFE5  F015         	goto	l5877
  5840  002BC8                     u7510:
  5841  002BC8  2A13               	incf	___fladd@bexp^0,f,c
  5842  002BCA                     l5877:
  5843  002BCA  2813               	incf	___fladd@bexp^0,w,c
  5844  002BCC  B4D8               	btfsc	status,2,c
  5845  002BCE  EFEB  F015         	goto	u7521
  5846  002BD2  EFED  F015         	goto	u7520
  5847  002BD6                     u7521:
  5848  002BD6  EFF5  F015         	goto	l5881
  5849  002BDA                     u7520:
  5850  002BDA  5013               	movf	___fladd@bexp^0,w,c
  5851  002BDC  A4D8               	btfss	status,2,c
  5852  002BDE  EFF3  F015         	goto	u7531
  5853  002BE2  EFF5  F015         	goto	u7530
  5854  002BE6                     u7531:
  5855  002BE6  EF07  F016         	goto	l5885
  5856  002BEA                     u7530:
  5857  002BEA                     l5881:
  5858  002BEA  0E00               	movlw	0
  5859  002BEC  6E05               	movwf	___fladd@b^0,c
  5860  002BEE  0E00               	movlw	0
  5861  002BF0  6E06               	movwf	(___fladd@b+1)^0,c
  5862  002BF2  0E00               	movlw	0
  5863  002BF4  6E07               	movwf	(___fladd@b+2)^0,c
  5864  002BF6  0E00               	movlw	0
  5865  002BF8  6E08               	movwf	(___fladd@b+3)^0,c
  5866  002BFA  5013               	movf	___fladd@bexp^0,w,c
  5867  002BFC  A4D8               	btfss	status,2,c
  5868  002BFE  EF03  F016         	goto	u7541
  5869  002C02  EF05  F016         	goto	u7540
  5870  002C06                     u7541:
  5871  002C06  EF07  F016         	goto	l5885
  5872  002C0A                     u7540:
  5873  002C0A  0E00               	movlw	0
  5874  002C0C  6E11               	movwf	___fladd@signs^0,c
  5875  002C0E                     l5885:
  5876  002C0E  A013               	btfss	___fladd@bexp^0,0,c
  5877  002C10  EF0C  F016         	goto	u7551
  5878  002C14  EF0E  F016         	goto	u7550
  5879  002C18                     u7551:
  5880  002C18  EF11  F016         	goto	l5889
  5881  002C1C                     u7550:
  5882  002C1C  8E07               	bsf	(___fladd@b+2)^0,7,c
  5883  002C1E  EF12  F016         	goto	l5891
  5884  002C22                     l5889:
  5885  002C22  9E07               	bcf	(___fladd@b+2)^0,7,c
  5886  002C24                     l5891:
  5887  002C24  90D8               	bcf	status,0,c
  5888  002C26  3013               	rrcf	___fladd@bexp^0,w,c
  5889  002C28  6E08               	movwf	(___fladd@b+3)^0,c
  5890  002C2A  AE11               	btfss	___fladd@signs^0,7,c
  5891  002C2C  EF1A  F016         	goto	u7561
  5892  002C30  EF1C  F016         	goto	u7560
  5893  002C34                     u7561:
  5894  002C34  EF1D  F016         	goto	l5897
  5895  002C38                     u7560:
  5896  002C38  8E08               	bsf	(___fladd@b+3)^0,7,c
  5897  002C3A                     l5897:
  5898  002C3A  C005  F005         	movff	___fladd@b,?___fladd
  5899  002C3E  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5900  002C42  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5901  002C46  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5902  002C4A                     l1042:
  5903  002C4A  0012               	return		;funcret
  5904  002C4C                     __end_of___fladd:
  5905                           	callstack 0
  5906                           
  5907 ;; *************** function ___flneg *****************
  5908 ;; Defined at:
  5909 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  f1              4    4[COMRAM] unsigned char 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  4    4[COMRAM] unsigned char 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5927 ;;Total ram usage:        4 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; Hardware stack levels required when called: 5
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_efgtoa
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text14
  5938  00565A                     __ptext14:
  5939                           	callstack 0
  5940  00565A                     ___flneg:
  5941                           	callstack 21
  5942  00565A  5005               	movf	___flneg@f1^0,w,c
  5943  00565C  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5944  00565E  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5945  005660  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5946  005662  B4D8               	btfsc	status,2,c
  5947  005664  EF36  F02B         	goto	u8361
  5948  005668  EF38  F02B         	goto	u8360
  5949  00566C                     u8361:
  5950  00566C  EF40  F02B         	goto	l6405
  5951  005670                     u8360:
  5952  005670  0E00               	movlw	0
  5953  005672  1A05               	xorwf	___flneg@f1^0,f,c
  5954  005674  0E00               	movlw	0
  5955  005676  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5956  005678  0E00               	movlw	0
  5957  00567A  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5958  00567C  0E80               	movlw	128
  5959  00567E  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5960  005680                     l6405:
  5961  005680  C005  F005         	movff	___flneg@f1,?___flneg
  5962  005684  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5963  005688  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5964  00568C  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5965  005690  0012               	return		;funcret
  5966  005692                     __end_of___flneg:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function ___flmul *****************
  5970 ;; Defined at:
  5971 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  b               4    4[COMRAM] unsigned char 
  5974 ;;  a               4    8[COMRAM] unsigned char 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  prod            4   23[COMRAM] struct .
  5977 ;;  grs             4   18[COMRAM] unsigned long 
  5978 ;;  temp            2   27[COMRAM] struct .
  5979 ;;  bexp            1   22[COMRAM] unsigned char 
  5980 ;;  aexp            1   17[COMRAM] unsigned char 
  5981 ;;  sign            1   16[COMRAM] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  4    4[COMRAM] unsigned char 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0, prodl, prodh
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;Total ram usage:       25 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 5
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_efgtoa
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text15
  6006  002C4C                     __ptext15:
  6007                           	callstack 0
  6008  002C4C                     ___flmul:
  6009                           	callstack 21
  6010  002C4C  5008               	movf	(___flmul@b+3)^0,w,c
  6011  002C4E  0B80               	andlw	128
  6012  002C50  6E11               	movwf	___flmul@sign^0,c
  6013  002C52  5008               	movf	(___flmul@b+3)^0,w,c
  6014  002C54  2408               	addwf	(___flmul@b+3)^0,w,c
  6015  002C56  6E17               	movwf	___flmul@bexp^0,c
  6016  002C58  AE07               	btfss	(___flmul@b+2)^0,7,c
  6017  002C5A  EF31  F016         	goto	u7971
  6018  002C5E  EF33  F016         	goto	u7970
  6019  002C62                     u7971:
  6020  002C62  EF34  F016         	goto	l6153
  6021  002C66                     u7970:
  6022  002C66  8017               	bsf	___flmul@bexp^0,0,c
  6023  002C68                     l6153:
  6024  002C68  5017               	movf	___flmul@bexp^0,w,c
  6025  002C6A  B4D8               	btfsc	status,2,c
  6026  002C6C  EF3A  F016         	goto	u7981
  6027  002C70  EF3C  F016         	goto	u7980
  6028  002C74                     u7981:
  6029  002C74  EF4F  F016         	goto	l6161
  6030  002C78                     u7980:
  6031  002C78  2817               	incf	___flmul@bexp^0,w,c
  6032  002C7A  A4D8               	btfss	status,2,c
  6033  002C7C  EF42  F016         	goto	u7991
  6034  002C80  EF44  F016         	goto	u7990
  6035  002C84                     u7991:
  6036  002C84  EF4C  F016         	goto	l6159
  6037  002C88                     u7990:
  6038  002C88  0E00               	movlw	0
  6039  002C8A  6E05               	movwf	___flmul@b^0,c
  6040  002C8C  0E00               	movlw	0
  6041  002C8E  6E06               	movwf	(___flmul@b+1)^0,c
  6042  002C90  0E00               	movlw	0
  6043  002C92  6E07               	movwf	(___flmul@b+2)^0,c
  6044  002C94  0E00               	movlw	0
  6045  002C96  6E08               	movwf	(___flmul@b+3)^0,c
  6046  002C98                     l6159:
  6047  002C98  8E07               	bsf	(___flmul@b+2)^0,7,c
  6048  002C9A  EF57  F016         	goto	l6163
  6049  002C9E                     l6161:
  6050  002C9E  0E00               	movlw	0
  6051  002CA0  6E05               	movwf	___flmul@b^0,c
  6052  002CA2  0E00               	movlw	0
  6053  002CA4  6E06               	movwf	(___flmul@b+1)^0,c
  6054  002CA6  0E00               	movlw	0
  6055  002CA8  6E07               	movwf	(___flmul@b+2)^0,c
  6056  002CAA  0E00               	movlw	0
  6057  002CAC  6E08               	movwf	(___flmul@b+3)^0,c
  6058  002CAE                     l6163:
  6059  002CAE  500C               	movf	(___flmul@a+3)^0,w,c
  6060  002CB0  0B80               	andlw	128
  6061  002CB2  1A11               	xorwf	___flmul@sign^0,f,c
  6062  002CB4  500C               	movf	(___flmul@a+3)^0,w,c
  6063  002CB6  240C               	addwf	(___flmul@a+3)^0,w,c
  6064  002CB8  6E12               	movwf	___flmul@aexp^0,c
  6065  002CBA  AE0B               	btfss	(___flmul@a+2)^0,7,c
  6066  002CBC  EF62  F016         	goto	u8001
  6067  002CC0  EF64  F016         	goto	u8000
  6068  002CC4                     u8001:
  6069  002CC4  EF65  F016         	goto	l6171
  6070  002CC8                     u8000:
  6071  002CC8  8012               	bsf	___flmul@aexp^0,0,c
  6072  002CCA                     l6171:
  6073  002CCA  5012               	movf	___flmul@aexp^0,w,c
  6074  002CCC  B4D8               	btfsc	status,2,c
  6075  002CCE  EF6B  F016         	goto	u8011
  6076  002CD2  EF6D  F016         	goto	u8010
  6077  002CD6                     u8011:
  6078  002CD6  EF80  F016         	goto	l6179
  6079  002CDA                     u8010:
  6080  002CDA  2812               	incf	___flmul@aexp^0,w,c
  6081  002CDC  A4D8               	btfss	status,2,c
  6082  002CDE  EF73  F016         	goto	u8021
  6083  002CE2  EF75  F016         	goto	u8020
  6084  002CE6                     u8021:
  6085  002CE6  EF7D  F016         	goto	l6177
  6086  002CEA                     u8020:
  6087  002CEA  0E00               	movlw	0
  6088  002CEC  6E09               	movwf	___flmul@a^0,c
  6089  002CEE  0E00               	movlw	0
  6090  002CF0  6E0A               	movwf	(___flmul@a+1)^0,c
  6091  002CF2  0E00               	movlw	0
  6092  002CF4  6E0B               	movwf	(___flmul@a+2)^0,c
  6093  002CF6  0E00               	movlw	0
  6094  002CF8  6E0C               	movwf	(___flmul@a+3)^0,c
  6095  002CFA                     l6177:
  6096  002CFA  8E0B               	bsf	(___flmul@a+2)^0,7,c
  6097  002CFC  EF88  F016         	goto	l1119
  6098  002D00                     l6179:
  6099  002D00  0E00               	movlw	0
  6100  002D02  6E09               	movwf	___flmul@a^0,c
  6101  002D04  0E00               	movlw	0
  6102  002D06  6E0A               	movwf	(___flmul@a+1)^0,c
  6103  002D08  0E00               	movlw	0
  6104  002D0A  6E0B               	movwf	(___flmul@a+2)^0,c
  6105  002D0C  0E00               	movlw	0
  6106  002D0E  6E0C               	movwf	(___flmul@a+3)^0,c
  6107  002D10                     l1119:
  6108  002D10  5012               	movf	___flmul@aexp^0,w,c
  6109  002D12  B4D8               	btfsc	status,2,c
  6110  002D14  EF8E  F016         	goto	u8031
  6111  002D18  EF90  F016         	goto	u8030
  6112  002D1C                     u8031:
  6113  002D1C  EF98  F016         	goto	l6183
  6114  002D20                     u8030:
  6115  002D20  5017               	movf	___flmul@bexp^0,w,c
  6116  002D22  A4D8               	btfss	status,2,c
  6117  002D24  EF96  F016         	goto	u8041
  6118  002D28  EF98  F016         	goto	u8040
  6119  002D2C                     u8041:
  6120  002D2C  EFA2  F016         	goto	l6187
  6121  002D30                     u8040:
  6122  002D30                     l6183:
  6123  002D30  0E00               	movlw	0
  6124  002D32  6E05               	movwf	?___flmul^0,c
  6125  002D34  0E00               	movlw	0
  6126  002D36  6E06               	movwf	(?___flmul+1)^0,c
  6127  002D38  0E00               	movlw	0
  6128  002D3A  6E07               	movwf	(?___flmul+2)^0,c
  6129  002D3C  0E00               	movlw	0
  6130  002D3E  6E08               	movwf	(?___flmul+3)^0,c
  6131  002D40  EF3A  F018         	goto	l1123
  6132  002D44                     l6187:
  6133  002D44  500B               	movf	(___flmul@a+2)^0,w,c
  6134  002D46  0205               	mulwf	___flmul@b^0,c
  6135  002D48  CFF3 F01C          	movff	prodl,___flmul@temp
  6136  002D4C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6137  002D50  501C               	movf	___flmul@temp^0,w,c
  6138  002D52  6E13               	movwf	___flmul@grs^0,c
  6139  002D54  6A14               	clrf	(___flmul@grs+1)^0,c
  6140  002D56  6A15               	clrf	(___flmul@grs+2)^0,c
  6141  002D58  6A16               	clrf	(___flmul@grs+3)^0,c
  6142  002D5A  501D               	movf	(___flmul@temp+1)^0,w,c
  6143  002D5C  6E18               	movwf	___flmul@prod^0,c
  6144  002D5E  6A19               	clrf	(___flmul@prod+1)^0,c
  6145  002D60  6A1A               	clrf	(___flmul@prod+2)^0,c
  6146  002D62  6A1B               	clrf	(___flmul@prod+3)^0,c
  6147  002D64  500A               	movf	(___flmul@a+1)^0,w,c
  6148  002D66  0206               	mulwf	(___flmul@b+1)^0,c
  6149  002D68  CFF3 F01C          	movff	prodl,___flmul@temp
  6150  002D6C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6151  002D70  501C               	movf	___flmul@temp^0,w,c
  6152  002D72  2613               	addwf	___flmul@grs^0,f,c
  6153  002D74  0E00               	movlw	0
  6154  002D76  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6155  002D78  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6156  002D7A  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6157  002D7C  501D               	movf	(___flmul@temp+1)^0,w,c
  6158  002D7E  2618               	addwf	___flmul@prod^0,f,c
  6159  002D80  0E00               	movlw	0
  6160  002D82  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6161  002D84  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6162  002D86  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6163  002D88  5009               	movf	___flmul@a^0,w,c
  6164  002D8A  0207               	mulwf	(___flmul@b+2)^0,c
  6165  002D8C  CFF3 F01C          	movff	prodl,___flmul@temp
  6166  002D90  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6167  002D94  501C               	movf	___flmul@temp^0,w,c
  6168  002D96  2613               	addwf	___flmul@grs^0,f,c
  6169  002D98  0E00               	movlw	0
  6170  002D9A  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6171  002D9C  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6172  002D9E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6173  002DA0  501D               	movf	(___flmul@temp+1)^0,w,c
  6174  002DA2  2618               	addwf	___flmul@prod^0,f,c
  6175  002DA4  0E00               	movlw	0
  6176  002DA6  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6177  002DA8  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6178  002DAA  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6179  002DAC  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6180  002DB0  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6181  002DB4  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6182  002DB8  6A13               	clrf	___flmul@grs^0,c
  6183  002DBA  5009               	movf	___flmul@a^0,w,c
  6184  002DBC  0206               	mulwf	(___flmul@b+1)^0,c
  6185  002DBE  CFF3 F01C          	movff	prodl,___flmul@temp
  6186  002DC2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6187  002DC6  501C               	movf	___flmul@temp^0,w,c
  6188  002DC8  2613               	addwf	___flmul@grs^0,f,c
  6189  002DCA  501D               	movf	(___flmul@temp+1)^0,w,c
  6190  002DCC  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6191  002DCE  0E00               	movlw	0
  6192  002DD0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6193  002DD2  0E00               	movlw	0
  6194  002DD4  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6195  002DD6  500A               	movf	(___flmul@a+1)^0,w,c
  6196  002DD8  0205               	mulwf	___flmul@b^0,c
  6197  002DDA  CFF3 F01C          	movff	prodl,___flmul@temp
  6198  002DDE  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6199  002DE2  501C               	movf	___flmul@temp^0,w,c
  6200  002DE4  2613               	addwf	___flmul@grs^0,f,c
  6201  002DE6  501D               	movf	(___flmul@temp+1)^0,w,c
  6202  002DE8  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6203  002DEA  0E00               	movlw	0
  6204  002DEC  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6205  002DEE  0E00               	movlw	0
  6206  002DF0  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6207  002DF2  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6208  002DF6  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6209  002DFA  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6210  002DFE  6A13               	clrf	___flmul@grs^0,c
  6211  002E00  5009               	movf	___flmul@a^0,w,c
  6212  002E02  0205               	mulwf	___flmul@b^0,c
  6213  002E04  CFF3 F01C          	movff	prodl,___flmul@temp
  6214  002E08  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6215  002E0C  501C               	movf	___flmul@temp^0,w,c
  6216  002E0E  2613               	addwf	___flmul@grs^0,f,c
  6217  002E10  501D               	movf	(___flmul@temp+1)^0,w,c
  6218  002E12  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6219  002E14  0E00               	movlw	0
  6220  002E16  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6221  002E18  0E00               	movlw	0
  6222  002E1A  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6223  002E1C  500B               	movf	(___flmul@a+2)^0,w,c
  6224  002E1E  0206               	mulwf	(___flmul@b+1)^0,c
  6225  002E20  CFF3 F01C          	movff	prodl,___flmul@temp
  6226  002E24  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6227  002E28  501C               	movf	___flmul@temp^0,w,c
  6228  002E2A  2618               	addwf	___flmul@prod^0,f,c
  6229  002E2C  501D               	movf	(___flmul@temp+1)^0,w,c
  6230  002E2E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6231  002E30  0E00               	movlw	0
  6232  002E32  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6233  002E34  0E00               	movlw	0
  6234  002E36  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6235  002E38  500A               	movf	(___flmul@a+1)^0,w,c
  6236  002E3A  0207               	mulwf	(___flmul@b+2)^0,c
  6237  002E3C  CFF3 F01C          	movff	prodl,___flmul@temp
  6238  002E40  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6239  002E44  501C               	movf	___flmul@temp^0,w,c
  6240  002E46  2618               	addwf	___flmul@prod^0,f,c
  6241  002E48  501D               	movf	(___flmul@temp+1)^0,w,c
  6242  002E4A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6243  002E4C  0E00               	movlw	0
  6244  002E4E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6245  002E50  0E00               	movlw	0
  6246  002E52  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6247  002E54  500B               	movf	(___flmul@a+2)^0,w,c
  6248  002E56  0207               	mulwf	(___flmul@b+2)^0,c
  6249  002E58  CFF3 F01C          	movff	prodl,___flmul@temp
  6250  002E5C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6251  002E60  501C               	movf	___flmul@temp^0,w,c
  6252  002E62  6E0D               	movwf	??___flmul^0,c
  6253  002E64  501D               	movf	(___flmul@temp+1)^0,w,c
  6254  002E66  6E0E               	movwf	(??___flmul+1)^0,c
  6255  002E68  6A0F               	clrf	(??___flmul+2)^0,c
  6256  002E6A  6A10               	clrf	(??___flmul+3)^0,c
  6257  002E6C  C00F  F010         	movff	??___flmul+2,??___flmul+3
  6258  002E70  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  6259  002E74  C00D  F00E         	movff	??___flmul,??___flmul+1
  6260  002E78  6A0D               	clrf	??___flmul^0,c
  6261  002E7A  500D               	movf	??___flmul^0,w,c
  6262  002E7C  2618               	addwf	___flmul@prod^0,f,c
  6263  002E7E  500E               	movf	(??___flmul+1)^0,w,c
  6264  002E80  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6265  002E82  500F               	movf	(??___flmul+2)^0,w,c
  6266  002E84  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6267  002E86  5010               	movf	(??___flmul+3)^0,w,c
  6268  002E88  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6269  002E8A  C013  F00D         	movff	___flmul@grs,??___flmul
  6270  002E8E  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  6271  002E92  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  6272  002E96  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  6273  002E9A  0E19               	movlw	25
  6274  002E9C  EF55  F017         	goto	u8050
  6275  002EA0                     u8055:
  6276  002EA0  90D8               	bcf	status,0,c
  6277  002EA2  3210               	rrcf	(??___flmul+3)^0,f,c
  6278  002EA4  320F               	rrcf	(??___flmul+2)^0,f,c
  6279  002EA6  320E               	rrcf	(??___flmul+1)^0,f,c
  6280  002EA8  320D               	rrcf	??___flmul^0,f,c
  6281  002EAA                     u8050:
  6282  002EAA  2EE8               	decfsz	wreg,f,c
  6283  002EAC  EF50  F017         	goto	u8055
  6284  002EB0  500D               	movf	??___flmul^0,w,c
  6285  002EB2  2618               	addwf	___flmul@prod^0,f,c
  6286  002EB4  500E               	movf	(??___flmul+1)^0,w,c
  6287  002EB6  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6288  002EB8  500F               	movf	(??___flmul+2)^0,w,c
  6289  002EBA  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6290  002EBC  5010               	movf	(??___flmul+3)^0,w,c
  6291  002EBE  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6292  002EC0  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6293  002EC4  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6294  002EC8  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6295  002ECC  6A13               	clrf	___flmul@grs^0,c
  6296  002ECE  5012               	movf	___flmul@aexp^0,w,c
  6297  002ED0  C017  F00D         	movff	___flmul@bexp,??___flmul
  6298  002ED4  6A0E               	clrf	(??___flmul+1)^0,c
  6299  002ED6  260D               	addwf	??___flmul^0,f,c
  6300  002ED8  0E00               	movlw	0
  6301  002EDA  220E               	addwfc	(??___flmul+1)^0,f,c
  6302  002EDC  0E82               	movlw	130
  6303  002EDE  240D               	addwf	??___flmul^0,w,c
  6304  002EE0  6E1C               	movwf	___flmul@temp^0,c
  6305  002EE2  0EFF               	movlw	255
  6306  002EE4  200E               	addwfc	(??___flmul+1)^0,w,c
  6307  002EE6  6E1D               	movwf	(___flmul@temp+1)^0,c
  6308  002EE8  EF8B  F017         	goto	l6235
  6309  002EEC                     l6229:
  6310  002EEC  90D8               	bcf	status,0,c
  6311  002EEE  3618               	rlcf	___flmul@prod^0,f,c
  6312  002EF0  3619               	rlcf	(___flmul@prod+1)^0,f,c
  6313  002EF2  361A               	rlcf	(___flmul@prod+2)^0,f,c
  6314  002EF4  361B               	rlcf	(___flmul@prod+3)^0,f,c
  6315  002EF6  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6316  002EF8  EF80  F017         	goto	u8061
  6317  002EFC  EF82  F017         	goto	u8060
  6318  002F00                     u8061:
  6319  002F00  EF83  F017         	goto	l1126
  6320  002F04                     u8060:
  6321  002F04  8018               	bsf	___flmul@prod^0,0,c
  6322  002F06                     l1126:
  6323  002F06  90D8               	bcf	status,0,c
  6324  002F08  3613               	rlcf	___flmul@grs^0,f,c
  6325  002F0A  3614               	rlcf	(___flmul@grs+1)^0,f,c
  6326  002F0C  3615               	rlcf	(___flmul@grs+2)^0,f,c
  6327  002F0E  3616               	rlcf	(___flmul@grs+3)^0,f,c
  6328  002F10  061C               	decf	___flmul@temp^0,f,c
  6329  002F12  A0D8               	btfss	status,0,c
  6330  002F14  061D               	decf	(___flmul@temp+1)^0,f,c
  6331  002F16                     l6235:
  6332  002F16  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  6333  002F18  EF90  F017         	goto	u8071
  6334  002F1C  EF92  F017         	goto	u8070
  6335  002F20                     u8071:
  6336  002F20  EF76  F017         	goto	l6229
  6337  002F24                     u8070:
  6338  002F24  0E00               	movlw	0
  6339  002F26  6E12               	movwf	___flmul@aexp^0,c
  6340  002F28  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6341  002F2A  EF99  F017         	goto	u8081
  6342  002F2E  EF9B  F017         	goto	u8080
  6343  002F32                     u8081:
  6344  002F32  EFBF  F017         	goto	l1128
  6345  002F36                     u8080:
  6346  002F36  0EFF               	movlw	255
  6347  002F38  1413               	andwf	___flmul@grs^0,w,c
  6348  002F3A  6E0D               	movwf	??___flmul^0,c
  6349  002F3C  0EFF               	movlw	255
  6350  002F3E  1414               	andwf	(___flmul@grs+1)^0,w,c
  6351  002F40  6E0E               	movwf	(??___flmul+1)^0,c
  6352  002F42  0EFF               	movlw	255
  6353  002F44  1415               	andwf	(___flmul@grs+2)^0,w,c
  6354  002F46  6E0F               	movwf	(??___flmul+2)^0,c
  6355  002F48  0E7F               	movlw	127
  6356  002F4A  1416               	andwf	(___flmul@grs+3)^0,w,c
  6357  002F4C  6E10               	movwf	(??___flmul+3)^0,c
  6358  002F4E  500D               	movf	??___flmul^0,w,c
  6359  002F50  100E               	iorwf	(??___flmul+1)^0,w,c
  6360  002F52  100F               	iorwf	(??___flmul+2)^0,w,c
  6361  002F54  1010               	iorwf	(??___flmul+3)^0,w,c
  6362  002F56  B4D8               	btfsc	status,2,c
  6363  002F58  EFB0  F017         	goto	u8091
  6364  002F5C  EFB2  F017         	goto	u8090
  6365  002F60                     u8091:
  6366  002F60  EFB6  F017         	goto	l1129
  6367  002F64                     u8090:
  6368  002F64                     l6243:
  6369  002F64  0E01               	movlw	1
  6370  002F66  6E12               	movwf	___flmul@aexp^0,c
  6371  002F68  EFBF  F017         	goto	l1128
  6372  002F6C                     l1129:
  6373  002F6C  A018               	btfss	___flmul@prod^0,0,c
  6374  002F6E  EFBB  F017         	goto	u8101
  6375  002F72  EFBD  F017         	goto	u8100
  6376  002F76                     u8101:
  6377  002F76  EFBF  F017         	goto	l1128
  6378  002F7A                     u8100:
  6379  002F7A  EFB2  F017         	goto	l6243
  6380  002F7E                     l1128:
  6381  002F7E  5012               	movf	___flmul@aexp^0,w,c
  6382  002F80  B4D8               	btfsc	status,2,c
  6383  002F82  EFC5  F017         	goto	u8111
  6384  002F86  EFC7  F017         	goto	u8110
  6385  002F8A                     u8111:
  6386  002F8A  EFEB  F017         	goto	l6255
  6387  002F8E                     u8110:
  6388  002F8E  0E01               	movlw	1
  6389  002F90  2618               	addwf	___flmul@prod^0,f,c
  6390  002F92  0E00               	movlw	0
  6391  002F94  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6392  002F96  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6393  002F98  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6394  002F9A  A01B               	btfss	(___flmul@prod+3)^0,0,c
  6395  002F9C  EFD2  F017         	goto	u8121
  6396  002FA0  EFD4  F017         	goto	u8120
  6397  002FA4                     u8121:
  6398  002FA4  EFEB  F017         	goto	l6255
  6399  002FA8                     u8120:
  6400  002FA8  C018  F00D         	movff	___flmul@prod,??___flmul
  6401  002FAC  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  6402  002FB0  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  6403  002FB4  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  6404  002FB8  3410               	rlcf	(??___flmul+3)^0,w,c
  6405  002FBA  3210               	rrcf	(??___flmul+3)^0,f,c
  6406  002FBC  320F               	rrcf	(??___flmul+2)^0,f,c
  6407  002FBE  320E               	rrcf	(??___flmul+1)^0,f,c
  6408  002FC0  320D               	rrcf	??___flmul^0,f,c
  6409  002FC2  C00D  F018         	movff	??___flmul,___flmul@prod
  6410  002FC6  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  6411  002FCA  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  6412  002FCE  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  6413  002FD2  4A1C               	infsnz	___flmul@temp^0,f,c
  6414  002FD4  2A1D               	incf	(___flmul@temp+1)^0,f,c
  6415  002FD6                     l6255:
  6416  002FD6  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6417  002FD8  EFF6  F017         	goto	u8131
  6418  002FDC  501D               	movf	(___flmul@temp+1)^0,w,c
  6419  002FDE  E108               	bnz	u8130
  6420  002FE0  281C               	incf	___flmul@temp^0,w,c
  6421  002FE2  A0D8               	btfss	status,0,c
  6422  002FE4  EFF6  F017         	goto	u8131
  6423  002FE8  EFF8  F017         	goto	u8130
  6424  002FEC                     u8131:
  6425  002FEC  EF02  F018         	goto	l6259
  6426  002FF0                     u8130:
  6427  002FF0  0E00               	movlw	0
  6428  002FF2  6E18               	movwf	___flmul@prod^0,c
  6429  002FF4  0E00               	movlw	0
  6430  002FF6  6E19               	movwf	(___flmul@prod+1)^0,c
  6431  002FF8  0E80               	movlw	128
  6432  002FFA  6E1A               	movwf	(___flmul@prod+2)^0,c
  6433  002FFC  0E7F               	movlw	127
  6434  002FFE  6E1B               	movwf	(___flmul@prod+3)^0,c
  6435  003000  EF30  F018         	goto	l6271
  6436  003004                     l6259:
  6437  003004  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6438  003006  EF0F  F018         	goto	u8140
  6439  00300A  501D               	movf	(___flmul@temp+1)^0,w,c
  6440  00300C  E106               	bnz	u8141
  6441  00300E  041C               	decf	___flmul@temp^0,w,c
  6442  003010  B0D8               	btfsc	status,0,c
  6443  003012  EF0D  F018         	goto	u8141
  6444  003016  EF0F  F018         	goto	u8140
  6445  00301A                     u8141:
  6446  00301A  EF1B  F018         	goto	l1136
  6447  00301E                     u8140:
  6448  00301E  0E00               	movlw	0
  6449  003020  6E18               	movwf	___flmul@prod^0,c
  6450  003022  0E00               	movlw	0
  6451  003024  6E19               	movwf	(___flmul@prod+1)^0,c
  6452  003026  0E00               	movlw	0
  6453  003028  6E1A               	movwf	(___flmul@prod+2)^0,c
  6454  00302A  0E00               	movlw	0
  6455  00302C  6E1B               	movwf	(___flmul@prod+3)^0,c
  6456  00302E  0E00               	movlw	0
  6457  003030  6E11               	movwf	___flmul@sign^0,c
  6458  003032  EF30  F018         	goto	l6271
  6459  003036                     l1136:
  6460  003036  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  6461  00303A  0EFF               	movlw	255
  6462  00303C  1618               	andwf	___flmul@prod^0,f,c
  6463  00303E  0EFF               	movlw	255
  6464  003040  1619               	andwf	(___flmul@prod+1)^0,f,c
  6465  003042  0E7F               	movlw	127
  6466  003044  161A               	andwf	(___flmul@prod+2)^0,f,c
  6467  003046  0E00               	movlw	0
  6468  003048  161B               	andwf	(___flmul@prod+3)^0,f,c
  6469  00304A  A017               	btfss	___flmul@bexp^0,0,c
  6470  00304C  EF2A  F018         	goto	u8151
  6471  003050  EF2C  F018         	goto	u8150
  6472  003054                     u8151:
  6473  003054  EF2D  F018         	goto	l6269
  6474  003058                     u8150:
  6475  003058  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  6476  00305A                     l6269:
  6477  00305A  90D8               	bcf	status,0,c
  6478  00305C  3017               	rrcf	___flmul@bexp^0,w,c
  6479  00305E  6E1B               	movwf	(___flmul@prod+3)^0,c
  6480  003060                     l6271:
  6481  003060  5011               	movf	___flmul@sign^0,w,c
  6482  003062  121B               	iorwf	(___flmul@prod+3)^0,f,c
  6483  003064  C018  F005         	movff	___flmul@prod,?___flmul
  6484  003068  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  6485  00306C  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  6486  003070  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  6487  003074                     l1123:
  6488  003074  0012               	return		;funcret
  6489  003076                     __end_of___flmul:
  6490                           	callstack 0
  6491                           
  6492 ;; *************** function ___fleq *****************
  6493 ;; Defined at:
  6494 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  ff1             4    4[COMRAM] unsigned char 
  6497 ;;  ff2             4    8[COMRAM] unsigned char 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;		None               void
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6509 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6512 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;Total ram usage:       12 bytes
  6514 ;; Hardware stack levels used: 1
  6515 ;; Hardware stack levels required when called: 5
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_efgtoa
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text16
  6524  004EE0                     __ptext16:
  6525                           	callstack 0
  6526  004EE0                     ___fleq:
  6527                           	callstack 21
  6528  004EE0  0E00               	movlw	0
  6529  004EE2  1405               	andwf	___fleq@ff1^0,w,c
  6530  004EE4  6E0D               	movwf	??___fleq^0,c
  6531  004EE6  0E00               	movlw	0
  6532  004EE8  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6533  004EEA  6E0E               	movwf	(??___fleq+1)^0,c
  6534  004EEC  0E80               	movlw	128
  6535  004EEE  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6536  004EF0  6E0F               	movwf	(??___fleq+2)^0,c
  6537  004EF2  0E7F               	movlw	127
  6538  004EF4  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6539  004EF6  6E10               	movwf	(??___fleq+3)^0,c
  6540  004EF8  500D               	movf	??___fleq^0,w,c
  6541  004EFA  100E               	iorwf	(??___fleq+1)^0,w,c
  6542  004EFC  100F               	iorwf	(??___fleq+2)^0,w,c
  6543  004EFE  1010               	iorwf	(??___fleq+3)^0,w,c
  6544  004F00  A4D8               	btfss	status,2,c
  6545  004F02  EF85  F027         	goto	u8281
  6546  004F06  EF87  F027         	goto	u8280
  6547  004F0A                     u8281:
  6548  004F0A  EF8F  F027         	goto	l6367
  6549  004F0E                     u8280:
  6550  004F0E  0E00               	movlw	0
  6551  004F10  6E05               	movwf	___fleq@ff1^0,c
  6552  004F12  0E00               	movlw	0
  6553  004F14  6E06               	movwf	(___fleq@ff1+1)^0,c
  6554  004F16  0E00               	movlw	0
  6555  004F18  6E07               	movwf	(___fleq@ff1+2)^0,c
  6556  004F1A  0E00               	movlw	0
  6557  004F1C  6E08               	movwf	(___fleq@ff1+3)^0,c
  6558  004F1E                     l6367:
  6559  004F1E  0E00               	movlw	0
  6560  004F20  1409               	andwf	___fleq@ff2^0,w,c
  6561  004F22  6E0D               	movwf	??___fleq^0,c
  6562  004F24  0E00               	movlw	0
  6563  004F26  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6564  004F28  6E0E               	movwf	(??___fleq+1)^0,c
  6565  004F2A  0E80               	movlw	128
  6566  004F2C  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6567  004F2E  6E0F               	movwf	(??___fleq+2)^0,c
  6568  004F30  0E7F               	movlw	127
  6569  004F32  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6570  004F34  6E10               	movwf	(??___fleq+3)^0,c
  6571  004F36  500D               	movf	??___fleq^0,w,c
  6572  004F38  100E               	iorwf	(??___fleq+1)^0,w,c
  6573  004F3A  100F               	iorwf	(??___fleq+2)^0,w,c
  6574  004F3C  1010               	iorwf	(??___fleq+3)^0,w,c
  6575  004F3E  A4D8               	btfss	status,2,c
  6576  004F40  EFA4  F027         	goto	u8291
  6577  004F44  EFA6  F027         	goto	u8290
  6578  004F48                     u8291:
  6579  004F48  EFAE  F027         	goto	l6371
  6580  004F4C                     u8290:
  6581  004F4C  0E00               	movlw	0
  6582  004F4E  6E09               	movwf	___fleq@ff2^0,c
  6583  004F50  0E00               	movlw	0
  6584  004F52  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6585  004F54  0E00               	movlw	0
  6586  004F56  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6587  004F58  0E00               	movlw	0
  6588  004F5A  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6589  004F5C                     l6371:
  6590  004F5C  5009               	movf	___fleq@ff2^0,w,c
  6591  004F5E  1805               	xorwf	___fleq@ff1^0,w,c
  6592  004F60  E10F               	bnz	u8300
  6593  004F62  500A               	movf	(___fleq@ff2+1)^0,w,c
  6594  004F64  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6595  004F66  E10C               	bnz	u8300
  6596  004F68  500B               	movf	(___fleq@ff2+2)^0,w,c
  6597  004F6A  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6598  004F6C  E109               	bnz	u8300
  6599  004F6E  500C               	movf	(___fleq@ff2+3)^0,w,c
  6600  004F70  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6601  004F72  B4D8               	btfsc	status,2,c
  6602  004F74  EFBE  F027         	goto	u8301
  6603  004F78  EFC0  F027         	goto	u8300
  6604  004F7C                     u8301:
  6605  004F7C  EFC3  F027         	goto	l6375
  6606  004F80                     u8300:
  6607  004F80  90D8               	bcf	status,0,c
  6608  004F82  EFC4  F027         	goto	l764
  6609  004F86                     l6375:
  6610  004F86  80D8               	bsf	status,0,c
  6611  004F88                     l764:
  6612  004F88  0012               	return		;funcret
  6613  004F8A                     __end_of___fleq:
  6614                           	callstack 0
  6615                           
  6616 ;; *************** function ___awmod *****************
  6617 ;; Defined at:
  6618 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  dividend        2    4[COMRAM] int 
  6621 ;;  divisor         2    6[COMRAM] int 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  sign            1    9[COMRAM] unsigned char 
  6624 ;;  counter         1    8[COMRAM] unsigned char 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  2    4[COMRAM] int 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2, status,0
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6638 ;;Total ram usage:        6 bytes
  6639 ;; Hardware stack levels used: 1
  6640 ;; Hardware stack levels required when called: 5
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_efgtoa
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text17
  6649  004E30                     __ptext17:
  6650                           	callstack 0
  6651  004E30                     ___awmod:
  6652                           	callstack 21
  6653  004E30  0E00               	movlw	0
  6654  004E32  6E0A               	movwf	___awmod@sign^0,c
  6655  004E34  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  6656  004E36  EF21  F027         	goto	u8220
  6657  004E3A  EF1F  F027         	goto	u8221
  6658  004E3E                     u8221:
  6659  004E3E  EF27  F027         	goto	l6335
  6660  004E42                     u8220:
  6661  004E42  6C05               	negf	___awmod@dividend^0,c
  6662  004E44  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6663  004E46  B0D8               	btfsc	status,0,c
  6664  004E48  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6665  004E4A  0E01               	movlw	1
  6666  004E4C  6E0A               	movwf	___awmod@sign^0,c
  6667  004E4E                     l6335:
  6668  004E4E  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  6669  004E50  EF2E  F027         	goto	u8230
  6670  004E54  EF2C  F027         	goto	u8231
  6671  004E58                     u8231:
  6672  004E58  EF32  F027         	goto	l6339
  6673  004E5C                     u8230:
  6674  004E5C  6C07               	negf	___awmod@divisor^0,c
  6675  004E5E  1E08               	comf	(___awmod@divisor+1)^0,f,c
  6676  004E60  B0D8               	btfsc	status,0,c
  6677  004E62  2A08               	incf	(___awmod@divisor+1)^0,f,c
  6678  004E64                     l6339:
  6679  004E64  5007               	movf	___awmod@divisor^0,w,c
  6680  004E66  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  6681  004E68  B4D8               	btfsc	status,2,c
  6682  004E6A  EF39  F027         	goto	u8241
  6683  004E6E  EF3B  F027         	goto	u8240
  6684  004E72                     u8241:
  6685  004E72  EF5F  F027         	goto	l6355
  6686  004E76                     u8240:
  6687  004E76  0E01               	movlw	1
  6688  004E78  6E09               	movwf	___awmod@counter^0,c
  6689  004E7A  EF43  F027         	goto	l6345
  6690  004E7E                     l6343:
  6691  004E7E  90D8               	bcf	status,0,c
  6692  004E80  3607               	rlcf	___awmod@divisor^0,f,c
  6693  004E82  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  6694  004E84  2A09               	incf	___awmod@counter^0,f,c
  6695  004E86                     l6345:
  6696  004E86  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  6697  004E88  EF48  F027         	goto	u8251
  6698  004E8C  EF4A  F027         	goto	u8250
  6699  004E90                     u8251:
  6700  004E90  EF3F  F027         	goto	l6343
  6701  004E94                     u8250:
  6702  004E94                     l6347:
  6703  004E94  5007               	movf	___awmod@divisor^0,w,c
  6704  004E96  5C05               	subwf	___awmod@dividend^0,w,c
  6705  004E98  5008               	movf	(___awmod@divisor+1)^0,w,c
  6706  004E9A  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  6707  004E9C  A0D8               	btfss	status,0,c
  6708  004E9E  EF53  F027         	goto	u8261
  6709  004EA2  EF55  F027         	goto	u8260
  6710  004EA6                     u8261:
  6711  004EA6  EF59  F027         	goto	l6351
  6712  004EAA                     u8260:
  6713  004EAA  5007               	movf	___awmod@divisor^0,w,c
  6714  004EAC  5E05               	subwf	___awmod@dividend^0,f,c
  6715  004EAE  5008               	movf	(___awmod@divisor+1)^0,w,c
  6716  004EB0  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  6717  004EB2                     l6351:
  6718  004EB2  90D8               	bcf	status,0,c
  6719  004EB4  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  6720  004EB6  3207               	rrcf	___awmod@divisor^0,f,c
  6721  004EB8  2E09               	decfsz	___awmod@counter^0,f,c
  6722  004EBA  EF4A  F027         	goto	l6347
  6723  004EBE                     l6355:
  6724  004EBE  500A               	movf	___awmod@sign^0,w,c
  6725  004EC0  B4D8               	btfsc	status,2,c
  6726  004EC2  EF65  F027         	goto	u8271
  6727  004EC6  EF67  F027         	goto	u8270
  6728  004ECA                     u8271:
  6729  004ECA  EF6B  F027         	goto	l6359
  6730  004ECE                     u8270:
  6731  004ECE  6C05               	negf	___awmod@dividend^0,c
  6732  004ED0  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6733  004ED2  B0D8               	btfsc	status,0,c
  6734  004ED4  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6735  004ED6                     l6359:
  6736  004ED6  C005  F005         	movff	___awmod@dividend,?___awmod
  6737  004EDA  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  6738  004EDE  0012               	return		;funcret
  6739  004EE0                     __end_of___awmod:
  6740                           	callstack 0
  6741                           
  6742 ;; *************** function _dtoa *****************
  6743 ;; Defined at:
  6744 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  6747 ;;		 -> sprintf@f(6), 
  6748 ;;  d               8   33[COMRAM] long long 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  n               8   57[COMRAM] long long 
  6751 ;;  i               2   65[COMRAM] int 
  6752 ;;  s               2   55[COMRAM] int 
  6753 ;;  w               2   53[COMRAM] int 
  6754 ;;  p               2   51[COMRAM] int 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  2   31[COMRAM] int 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6764 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6765 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6767 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6768 ;;Total ram usage:       36 bytes
  6769 ;; Hardware stack levels used: 1
  6770 ;; Hardware stack levels required when called: 9
  6771 ;; This function calls:
  6772 ;;		___aodiv
  6773 ;;		___aomod
  6774 ;;		_abs
  6775 ;;		_pad
  6776 ;; This function is called by:
  6777 ;;		_vfpfcnvrt
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text18
  6782  003720                     __ptext18:
  6783                           	callstack 0
  6784  003720                     _dtoa:
  6785                           	callstack 18
  6786  003720                     
  6787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6788  003720  C022  F03A         	movff	dtoa@d,dtoa@n
  6789  003724  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  6790  003728  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  6791  00372C  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  6792  003730  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  6793  003734  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  6794  003738  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  6795  00373C  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  6796  003740                     
  6797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6798  003740  BE41               	btfsc	(dtoa@n+7)^0,7,c
  6799  003742  EFA5  F01B         	goto	u8751
  6800  003746  EFA8  F01B         	goto	u8750
  6801  00374A                     u8751:
  6802  00374A  0E01               	movlw	1
  6803  00374C  EFA9  F01B         	goto	u8760
  6804  003750                     u8750:
  6805  003750  0E00               	movlw	0
  6806  003752                     u8760:
  6807  003752  6E38               	movwf	dtoa@s^0,c
  6808  003754  6A39               	clrf	(dtoa@s+1)^0,c
  6809                           
  6810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6811  003756  5038               	movf	dtoa@s^0,w,c
  6812  003758  1039               	iorwf	(dtoa@s+1)^0,w,c
  6813  00375A  B4D8               	btfsc	status,2,c
  6814  00375C  EFB2  F01B         	goto	u8771
  6815  003760  EFB4  F01B         	goto	u8770
  6816  003764                     u8771:
  6817  003764  EFC4  F01B         	goto	l6565
  6818  003768                     u8770:
  6819  003768                     
  6820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6821  003768  1E41               	comf	(dtoa@n+7)^0,f,c
  6822  00376A  1E40               	comf	(dtoa@n+6)^0,f,c
  6823  00376C  1E3F               	comf	(dtoa@n+5)^0,f,c
  6824  00376E  1E3E               	comf	(dtoa@n+4)^0,f,c
  6825  003770  1E3D               	comf	(dtoa@n+3)^0,f,c
  6826  003772  1E3C               	comf	(dtoa@n+2)^0,f,c
  6827  003774  1E3B               	comf	(dtoa@n+1)^0,f,c
  6828  003776  6C3A               	negf	dtoa@n^0,c
  6829  003778  0E00               	movlw	0
  6830  00377A  223B               	addwfc	(dtoa@n+1)^0,f,c
  6831  00377C  223C               	addwfc	(dtoa@n+2)^0,f,c
  6832  00377E  223D               	addwfc	(dtoa@n+3)^0,f,c
  6833  003780  223E               	addwfc	(dtoa@n+4)^0,f,c
  6834  003782  223F               	addwfc	(dtoa@n+5)^0,f,c
  6835  003784  2240               	addwfc	(dtoa@n+6)^0,f,c
  6836  003786  2241               	addwfc	(dtoa@n+7)^0,f,c
  6837  003788                     l6565:
  6838                           
  6839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6840  003788  0100               	movlb	0	; () banked
  6841  00378A  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  6842  00378C  EFCA  F01B         	goto	u8781
  6843  003790  EFCC  F01B         	goto	u8780
  6844  003794                     u8781:
  6845  003794  EFCD  F01B         	goto	l6569
  6846  003798                     u8780:
  6847  003798                     
  6848                           ; BSR set to: 0
  6849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6850  003798  9256               	bcf	_flags^0,1,c
  6851  00379A                     l6569:
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6855  00379A  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  6856  00379C  EFDA  F01B         	goto	u8790
  6857  0037A0  51F9               	movf	(_prec+1)& (0+255),w,b
  6858  0037A2  E106               	bnz	u8791
  6859  0037A4  05F8               	decf	_prec& (0+255),w,b
  6860  0037A6  B0D8               	btfsc	status,0,c
  6861  0037A8  EFD8  F01B         	goto	u8791
  6862  0037AC  EFDA  F01B         	goto	u8790
  6863  0037B0                     u8791:
  6864  0037B0  EFE0  F01B         	goto	l1237
  6865  0037B4                     u8790:
  6866  0037B4                     
  6867                           ; BSR set to: 0
  6868  0037B4  0E00               	movlw	0
  6869  0037B6  6E35               	movwf	(dtoa@p+1)^0,c
  6870  0037B8  0E01               	movlw	1
  6871  0037BA  6E34               	movwf	dtoa@p^0,c
  6872  0037BC  EFE4  F01B         	goto	l1239
  6873  0037C0                     l1237:
  6874                           
  6875                           ; BSR set to: 0
  6876  0037C0  C0F8  F034         	movff	_prec,dtoa@p
  6877  0037C4  C0F9  F035         	movff	_prec+1,dtoa@p+1
  6878  0037C8                     l1239:
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6882  0037C8  C0F6  F036         	movff	_width,dtoa@w
  6883  0037CC  C0F7  F037         	movff	_width+1,dtoa@w+1
  6884  0037D0                     
  6885                           ; BSR set to: 0
  6886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6887  0037D0  5038               	movf	dtoa@s^0,w,c
  6888  0037D2  1039               	iorwf	(dtoa@s+1)^0,w,c
  6889  0037D4  A4D8               	btfss	status,2,c
  6890  0037D6  EFEF  F01B         	goto	u8801
  6891  0037DA  EFF1  F01B         	goto	u8800
  6892  0037DE                     u8801:
  6893  0037DE  EFF8  F01B         	goto	l6577
  6894  0037E2                     u8800:
  6895  0037E2                     
  6896                           ; BSR set to: 0
  6897  0037E2  A456               	btfss	_flags^0,2,c
  6898  0037E4  EFF6  F01B         	goto	u8811
  6899  0037E8  EFF8  F01B         	goto	u8810
  6900  0037EC                     u8811:
  6901  0037EC  EFFB  F01B         	goto	l6579
  6902  0037F0                     u8810:
  6903  0037F0                     l6577:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6907  0037F0  0636               	decf	dtoa@w^0,f,c
  6908  0037F2  A0D8               	btfss	status,0,c
  6909  0037F4  0637               	decf	(dtoa@w+1)^0,f,c
  6910  0037F6                     l6579:
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6914  0037F6  0E00               	movlw	0
  6915  0037F8  6E43               	movwf	(dtoa@i+1)^0,c
  6916  0037FA  0E4F               	movlw	79
  6917  0037FC  6E42               	movwf	dtoa@i^0,c
  6918  0037FE                     
  6919                           ; BSR set to: 0
  6920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6921  0037FE  0E00               	movlw	0
  6922  003800  0101               	movlb	1	; () banked
  6923  003802  6FE1               	movwf	(_dbuf+79)& (0+255),b
  6924                           
  6925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6926  003804  EF80  F01C         	goto	l6593
  6927  003808                     l6583:
  6928                           
  6929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6930  003808  0642               	decf	dtoa@i^0,f,c
  6931  00380A  A0D8               	btfss	status,0,c
  6932  00380C  0643               	decf	(dtoa@i+1)^0,f,c
  6933  00380E                     
  6934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6935  00380E  0E92               	movlw	low _dbuf
  6936  003810  2442               	addwf	dtoa@i^0,w,c
  6937  003812  6ED9               	movwf	fsr2l,c
  6938  003814  0E01               	movlw	high _dbuf
  6939  003816  2043               	addwfc	(dtoa@i+1)^0,w,c
  6940  003818  6EDA               	movwf	fsr2h,c
  6941  00381A  C03A  F005         	movff	dtoa@n,___aomod@dividend
  6942  00381E  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  6943  003822  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  6944  003826  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  6945  00382A  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  6946  00382E  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  6947  003832  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  6948  003836  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  6949  00383A  0E0A               	movlw	10
  6950  00383C  6E0D               	movwf	___aomod@divisor^0,c
  6951  00383E  0E00               	movlw	0
  6952  003840  6E0E               	movwf	(___aomod@divisor+1)^0,c
  6953  003842  0E00               	movlw	0
  6954  003844  6E0F               	movwf	(___aomod@divisor+2)^0,c
  6955  003846  0E00               	movlw	0
  6956  003848  6E10               	movwf	(___aomod@divisor+3)^0,c
  6957  00384A  0E00               	movlw	0
  6958  00384C  6E11               	movwf	(___aomod@divisor+4)^0,c
  6959  00384E  0E00               	movlw	0
  6960  003850  6E12               	movwf	(___aomod@divisor+5)^0,c
  6961  003852  0E00               	movlw	0
  6962  003854  6E13               	movwf	(___aomod@divisor+6)^0,c
  6963  003856  0E00               	movlw	0
  6964  003858  6E14               	movwf	(___aomod@divisor+7)^0,c
  6965  00385A  EC49  F023         	call	___aomod	;wreg free
  6966  00385E  C005  F02A         	movff	?___aomod,??_dtoa
  6967  003862  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  6968  003866  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  6969  00386A  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  6970  00386E  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  6971  003872  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  6972  003876  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  6973  00387A  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  6974  00387E  C02A  F017         	movff	??_dtoa,abs@a
  6975  003882  C02C  F018         	movff	??_dtoa+2,abs@a+1
  6976  003886  ECB5  F02A         	call	_abs	;wreg free
  6977  00388A  5017               	movf	?_abs^0,w,c
  6978  00388C  0F30               	addlw	48
  6979  00388E  6EDF               	movwf	indf2,c
  6980  003890                     
  6981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6982  003890  0634               	decf	dtoa@p^0,f,c
  6983  003892  A0D8               	btfss	status,0,c
  6984  003894  0635               	decf	(dtoa@p+1)^0,f,c
  6985  003896                     
  6986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6987  003896  0636               	decf	dtoa@w^0,f,c
  6988  003898  A0D8               	btfss	status,0,c
  6989  00389A  0637               	decf	(dtoa@w+1)^0,f,c
  6990  00389C                     
  6991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6992  00389C  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  6993  0038A0  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  6994  0038A4  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  6995  0038A8  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  6996  0038AC  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  6997  0038B0  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  6998  0038B4  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  6999  0038B8  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  7000  0038BC  0E0A               	movlw	10
  7001  0038BE  6E0D               	movwf	___aodiv@divisor^0,c
  7002  0038C0  0E00               	movlw	0
  7003  0038C2  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  7004  0038C4  0E00               	movlw	0
  7005  0038C6  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  7006  0038C8  0E00               	movlw	0
  7007  0038CA  6E10               	movwf	(___aodiv@divisor+3)^0,c
  7008  0038CC  0E00               	movlw	0
  7009  0038CE  6E11               	movwf	(___aodiv@divisor+4)^0,c
  7010  0038D0  0E00               	movlw	0
  7011  0038D2  6E12               	movwf	(___aodiv@divisor+5)^0,c
  7012  0038D4  0E00               	movlw	0
  7013  0038D6  6E13               	movwf	(___aodiv@divisor+6)^0,c
  7014  0038D8  0E00               	movlw	0
  7015  0038DA  6E14               	movwf	(___aodiv@divisor+7)^0,c
  7016  0038DC  EC85  F022         	call	___aodiv	;wreg free
  7017  0038E0  C005  F03A         	movff	?___aodiv,dtoa@n
  7018  0038E4  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  7019  0038E8  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  7020  0038EC  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  7021  0038F0  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  7022  0038F4  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  7023  0038F8  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  7024  0038FC  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  7025  003900                     l6593:
  7026                           
  7027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7028  003900  BE43               	btfsc	(dtoa@i+1)^0,7,c
  7029  003902  EF8B  F01C         	goto	u8821
  7030  003906  5043               	movf	(dtoa@i+1)^0,w,c
  7031  003908  E108               	bnz	u8820
  7032  00390A  0442               	decf	dtoa@i^0,w,c
  7033  00390C  A0D8               	btfss	status,0,c
  7034  00390E  EF8B  F01C         	goto	u8821
  7035  003912  EF8D  F01C         	goto	u8820
  7036  003916                     u8821:
  7037  003916  EFBD  F01C         	goto	l6603
  7038  00391A                     u8820:
  7039  00391A  503A               	movf	dtoa@n^0,w,c
  7040  00391C  103B               	iorwf	(dtoa@n+1)^0,w,c
  7041  00391E  103C               	iorwf	(dtoa@n+2)^0,w,c
  7042  003920  103D               	iorwf	(dtoa@n+3)^0,w,c
  7043  003922  103E               	iorwf	(dtoa@n+4)^0,w,c
  7044  003924  103F               	iorwf	(dtoa@n+5)^0,w,c
  7045  003926  1040               	iorwf	(dtoa@n+6)^0,w,c
  7046  003928  1041               	iorwf	(dtoa@n+7)^0,w,c
  7047  00392A  A4D8               	btfss	status,2,c
  7048  00392C  EF9A  F01C         	goto	u8831
  7049  003930  EF9C  F01C         	goto	u8830
  7050  003934                     u8831:
  7051  003934  EF04  F01C         	goto	l6583
  7052  003938                     u8830:
  7053  003938  BE35               	btfsc	(dtoa@p+1)^0,7,c
  7054  00393A  EFA9  F01C         	goto	u8840
  7055  00393E  5035               	movf	(dtoa@p+1)^0,w,c
  7056  003940  E106               	bnz	u8841
  7057  003942  0434               	decf	dtoa@p^0,w,c
  7058  003944  B0D8               	btfsc	status,0,c
  7059  003946  EFA7  F01C         	goto	u8841
  7060  00394A  EFA9  F01C         	goto	u8840
  7061  00394E                     u8841:
  7062  00394E  EF04  F01C         	goto	l6583
  7063  003952                     u8840:
  7064  003952  BE37               	btfsc	(dtoa@w+1)^0,7,c
  7065  003954  EFB4  F01C         	goto	u8851
  7066  003958  5037               	movf	(dtoa@w+1)^0,w,c
  7067  00395A  E108               	bnz	u8850
  7068  00395C  0436               	decf	dtoa@w^0,w,c
  7069  00395E  A0D8               	btfss	status,0,c
  7070  003960  EFB4  F01C         	goto	u8851
  7071  003964  EFB6  F01C         	goto	u8850
  7072  003968                     u8851:
  7073  003968  EFBD  F01C         	goto	l6603
  7074  00396C                     u8850:
  7075  00396C  B256               	btfsc	_flags^0,1,c
  7076  00396E  EFBB  F01C         	goto	u8861
  7077  003972  EFBD  F01C         	goto	u8860
  7078  003976                     u8861:
  7079  003976  EF04  F01C         	goto	l6583
  7080  00397A                     u8860:
  7081  00397A                     l6603:
  7082                           
  7083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7084  00397A  5038               	movf	dtoa@s^0,w,c
  7085  00397C  1039               	iorwf	(dtoa@s+1)^0,w,c
  7086  00397E  A4D8               	btfss	status,2,c
  7087  003980  EFC4  F01C         	goto	u8871
  7088  003984  EFC6  F01C         	goto	u8870
  7089  003988                     u8871:
  7090  003988  EFCD  F01C         	goto	l6607
  7091  00398C                     u8870:
  7092  00398C  A456               	btfss	_flags^0,2,c
  7093  00398E  EFCB  F01C         	goto	u8881
  7094  003992  EFCD  F01C         	goto	u8880
  7095  003996                     u8881:
  7096  003996  EFEB  F01C         	goto	l6617
  7097  00399A                     u8880:
  7098  00399A                     l6607:
  7099                           
  7100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7101  00399A  0642               	decf	dtoa@i^0,f,c
  7102  00399C  A0D8               	btfss	status,0,c
  7103  00399E  0643               	decf	(dtoa@i+1)^0,f,c
  7104  0039A0                     
  7105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7106  0039A0  5038               	movf	dtoa@s^0,w,c
  7107  0039A2  1039               	iorwf	(dtoa@s+1)^0,w,c
  7108  0039A4  A4D8               	btfss	status,2,c
  7109  0039A6  EFD7  F01C         	goto	u8891
  7110  0039AA  EFD9  F01C         	goto	u8890
  7111  0039AE                     u8891:
  7112  0039AE  EFDF  F01C         	goto	l6613
  7113  0039B2                     u8890:
  7114  0039B2  0E00               	movlw	0
  7115  0039B4  6E33               	movwf	(_dtoa$2513+1)^0,c
  7116  0039B6  0E2B               	movlw	43
  7117  0039B8  6E32               	movwf	_dtoa$2513^0,c
  7118  0039BA  EFE3  F01C         	goto	l6615
  7119  0039BE                     l6613:
  7120  0039BE  0E00               	movlw	0
  7121  0039C0  6E33               	movwf	(_dtoa$2513+1)^0,c
  7122  0039C2  0E2D               	movlw	45
  7123  0039C4  6E32               	movwf	_dtoa$2513^0,c
  7124  0039C6                     l6615:
  7125  0039C6  0E92               	movlw	low _dbuf
  7126  0039C8  2442               	addwf	dtoa@i^0,w,c
  7127  0039CA  6ED9               	movwf	fsr2l,c
  7128  0039CC  0E01               	movlw	high _dbuf
  7129  0039CE  2043               	addwfc	(dtoa@i+1)^0,w,c
  7130  0039D0  6EDA               	movwf	fsr2h,c
  7131  0039D2  C032  FFDF         	movff	_dtoa$2513,indf2
  7132  0039D6                     l6617:
  7133                           
  7134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7135  0039D6  C020  F015         	movff	dtoa@fp,pad@fp
  7136  0039DA  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  7137  0039DE  0E92               	movlw	low _dbuf
  7138  0039E0  2442               	addwf	dtoa@i^0,w,c
  7139  0039E2  6E17               	movwf	pad@buf^0,c
  7140  0039E4  0E01               	movlw	high _dbuf
  7141  0039E6  2043               	addwfc	(dtoa@i+1)^0,w,c
  7142  0039E8  6E18               	movwf	(pad@buf+1)^0,c
  7143  0039EA  C036  F019         	movff	dtoa@w,pad@p
  7144  0039EE  C037  F01A         	movff	dtoa@w+1,pad@p+1
  7145  0039F2  ECB7  F026         	call	_pad	;wreg free
  7146  0039F6  C015  F020         	movff	?_pad,?_dtoa
  7147  0039FA  C016  F021         	movff	?_pad+1,?_dtoa+1
  7148  0039FE  0012               	return		;funcret
  7149  003A00                     __end_of_dtoa:
  7150                           	callstack 0
  7151                           
  7152 ;; *************** function _pad *****************
  7153 ;; Defined at:
  7154 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  7157 ;;		 -> sprintf@f(6), 
  7158 ;;  buf             2   22[COMRAM] PTR unsigned char 
  7159 ;;		 -> dbuf(80), 
  7160 ;;  p               2   24[COMRAM] int 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  w               2   29[COMRAM] int 
  7163 ;;  i               2   27[COMRAM] int 
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  2   20[COMRAM] int 
  7166 ;; Registers used:
  7167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7173 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7174 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;Total ram usage:       11 bytes
  7178 ;; Hardware stack levels used: 1
  7179 ;; Hardware stack levels required when called: 8
  7180 ;; This function calls:
  7181 ;;		_fputc
  7182 ;;		_fputs
  7183 ;;		_strlen
  7184 ;; This function is called by:
  7185 ;;		_dtoa
  7186 ;;		_efgtoa
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           	psect	text19
  7191  004D6E                     __ptext19:
  7192                           	callstack 0
  7193  004D6E                     _pad:
  7194                           	callstack 18
  7195  004D6E                     
  7196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7197  004D6E  A056               	btfss	_flags^0,0,c
  7198  004D70  EFBC  F026         	goto	u8441
  7199  004D74  EFBE  F026         	goto	u8440
  7200  004D78                     u8441:
  7201  004D78  EFC8  F026         	goto	l6457
  7202  004D7C                     u8440:
  7203  004D7C                     
  7204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7205  004D7C  C017  F00E         	movff	pad@buf,fputs@s
  7206  004D80  C018  F00F         	movff	pad@buf+1,fputs@s+1
  7207  004D84  C015  F010         	movff	pad@fp,fputs@fp
  7208  004D88  C016  F011         	movff	pad@fp+1,fputs@fp+1
  7209  004D8C  EC2E  F02A         	call	_fputs	;wreg free
  7210  004D90                     l6457:
  7211                           
  7212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7213  004D90  BE1A               	btfsc	(pad@p+1)^0,7,c
  7214  004D92  EFCD  F026         	goto	u8451
  7215  004D96  EFCF  F026         	goto	u8450
  7216  004D9A                     u8451:
  7217  004D9A  EFD5  F026         	goto	l6461
  7218  004D9E                     u8450:
  7219  004D9E  C019  F01E         	movff	pad@p,pad@w
  7220  004DA2  C01A  F01F         	movff	pad@p+1,pad@w+1
  7221  004DA6  EFD9  F026         	goto	l1226
  7222  004DAA                     l6461:
  7223  004DAA  0E00               	movlw	0
  7224  004DAC  6E1F               	movwf	(pad@w+1)^0,c
  7225  004DAE  0E00               	movlw	0
  7226  004DB0  6E1E               	movwf	pad@w^0,c
  7227  004DB2                     l1226:
  7228                           
  7229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7230  004DB2  0E00               	movlw	0
  7231  004DB4  6E1D               	movwf	(pad@i+1)^0,c
  7232  004DB6  0E00               	movlw	0
  7233  004DB8  6E1C               	movwf	pad@i^0,c
  7234                           
  7235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7236  004DBA  EFEB  F026         	goto	l6467
  7237  004DBE                     l6463:
  7238                           
  7239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7240  004DBE  0E00               	movlw	0
  7241  004DC0  6E06               	movwf	(fputc@c+1)^0,c
  7242  004DC2  0E20               	movlw	32
  7243  004DC4  6E05               	movwf	fputc@c^0,c
  7244  004DC6  C015  F007         	movff	pad@fp,fputc@fp
  7245  004DCA  C016  F008         	movff	pad@fp+1,fputc@fp+1
  7246  004DCE  ECF0  F025         	call	_fputc	;wreg free
  7247  004DD2                     
  7248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7249  004DD2  4A1C               	infsnz	pad@i^0,f,c
  7250  004DD4  2A1D               	incf	(pad@i+1)^0,f,c
  7251  004DD6                     l6467:
  7252                           
  7253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7254  004DD6  501E               	movf	pad@w^0,w,c
  7255  004DD8  5C1C               	subwf	pad@i^0,w,c
  7256  004DDA  501D               	movf	(pad@i+1)^0,w,c
  7257  004DDC  0A80               	xorlw	128
  7258  004DDE  6E1B               	movwf	??_pad^0,c
  7259  004DE0  501F               	movf	(pad@w+1)^0,w,c
  7260  004DE2  0A80               	xorlw	128
  7261  004DE4  581B               	subwfb	??_pad^0,w,c
  7262  004DE6  A0D8               	btfss	status,0,c
  7263  004DE8  EFF8  F026         	goto	u8461
  7264  004DEC  EFFA  F026         	goto	u8460
  7265  004DF0                     u8461:
  7266  004DF0  EFDF  F026         	goto	l6463
  7267  004DF4                     u8460:
  7268  004DF4                     
  7269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7270  004DF4  B056               	btfsc	_flags^0,0,c
  7271  004DF6  EFFF  F026         	goto	u8471
  7272  004DFA  EF01  F027         	goto	u8470
  7273  004DFE                     u8471:
  7274  004DFE  EF0B  F027         	goto	l6471
  7275  004E02                     u8470:
  7276  004E02                     
  7277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7278  004E02  C017  F00E         	movff	pad@buf,fputs@s
  7279  004E06  C018  F00F         	movff	pad@buf+1,fputs@s+1
  7280  004E0A  C015  F010         	movff	pad@fp,fputs@fp
  7281  004E0E  C016  F011         	movff	pad@fp+1,fputs@fp+1
  7282  004E12  EC2E  F02A         	call	_fputs	;wreg free
  7283  004E16                     l6471:
  7284                           
  7285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7286  004E16  C017  F005         	movff	pad@buf,strlen@s
  7287  004E1A  C018  F006         	movff	pad@buf+1,strlen@s+1
  7288  004E1E  EC65  F02B         	call	_strlen	;wreg free
  7289  004E22  501E               	movf	pad@w^0,w,c
  7290  004E24  2405               	addwf	?_strlen^0,w,c
  7291  004E26  6E15               	movwf	?_pad^0,c
  7292  004E28  501F               	movf	(pad@w+1)^0,w,c
  7293  004E2A  2006               	addwfc	(?_strlen+1)^0,w,c
  7294  004E2C  6E16               	movwf	(?_pad+1)^0,c
  7295  004E2E  0012               	return		;funcret
  7296  004E30                     __end_of_pad:
  7297                           	callstack 0
  7298                           
  7299 ;; *************** function _strlen *****************
  7300 ;; Defined at:
  7301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  s               2    4[COMRAM] PTR const unsigned char 
  7304 ;;		 -> dbuf(80), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  a               2    6[COMRAM] PTR const unsigned char 
  7307 ;;		 -> dbuf(80), 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  2    4[COMRAM] unsigned int 
  7310 ;; Registers used:
  7311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;Total ram usage:        4 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; Hardware stack levels required when called: 5
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_pad
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text20
  7332  0056CA                     __ptext20:
  7333                           	callstack 0
  7334  0056CA                     _strlen:
  7335                           	callstack 20
  7336  0056CA  C005  F007         	movff	strlen@s,strlen@a
  7337  0056CE  C006  F008         	movff	strlen@s+1,strlen@a+1
  7338  0056D2  EF6D  F02B         	goto	l5913
  7339  0056D6                     l5911:
  7340  0056D6  4A05               	infsnz	strlen@s^0,f,c
  7341  0056D8  2A06               	incf	(strlen@s+1)^0,f,c
  7342  0056DA                     l5913:
  7343  0056DA  C005  FFD9         	movff	strlen@s,fsr2l
  7344  0056DE  C006  FFDA         	movff	strlen@s+1,fsr2h
  7345  0056E2  50DF               	movf	indf2,w,c
  7346  0056E4  A4D8               	btfss	status,2,c
  7347  0056E6  EF77  F02B         	goto	u7581
  7348  0056EA  EF79  F02B         	goto	u7580
  7349  0056EE                     u7581:
  7350  0056EE  EF6B  F02B         	goto	l5911
  7351  0056F2                     u7580:
  7352  0056F2  5007               	movf	strlen@a^0,w,c
  7353  0056F4  5C05               	subwf	strlen@s^0,w,c
  7354  0056F6  6E05               	movwf	?_strlen^0,c
  7355  0056F8  5008               	movf	(strlen@a+1)^0,w,c
  7356  0056FA  5806               	subwfb	(strlen@s+1)^0,w,c
  7357  0056FC  6E06               	movwf	(?_strlen+1)^0,c
  7358  0056FE  0012               	return		;funcret
  7359  005700                     __end_of_strlen:
  7360                           	callstack 0
  7361                           
  7362 ;; *************** function _fputs *****************
  7363 ;; Defined at:
  7364 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7367 ;;		 -> dbuf(80), 
  7368 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  7369 ;;		 -> sprintf@f(6), 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  i               2   18[COMRAM] int 
  7372 ;;  c               1   17[COMRAM] unsigned char 
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  2   13[COMRAM] int 
  7375 ;; Registers used:
  7376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;Total ram usage:        7 bytes
  7387 ;; Hardware stack levels used: 1
  7388 ;; Hardware stack levels required when called: 7
  7389 ;; This function calls:
  7390 ;;		_fputc
  7391 ;; This function is called by:
  7392 ;;		_pad
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text21
  7397  00545C                     __ptext21:
  7398                           	callstack 0
  7399  00545C                     _fputs:
  7400                           	callstack 18
  7401  00545C  0E00               	movlw	0
  7402  00545E  6E14               	movwf	(fputs@i+1)^0,c
  7403  005460  0E00               	movlw	0
  7404  005462  6E13               	movwf	fputs@i^0,c
  7405  005464  EF3F  F02A         	goto	l5907
  7406  005468                     l5903:
  7407  005468  C012  F005         	movff	fputs@c,fputc@c
  7408  00546C  6A06               	clrf	(fputc@c+1)^0,c
  7409  00546E  C010  F007         	movff	fputs@fp,fputc@fp
  7410  005472  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  7411  005476  ECF0  F025         	call	_fputc	;wreg free
  7412  00547A  4A13               	infsnz	fputs@i^0,f,c
  7413  00547C  2A14               	incf	(fputs@i+1)^0,f,c
  7414  00547E                     l5907:
  7415  00547E  5013               	movf	fputs@i^0,w,c
  7416  005480  240E               	addwf	fputs@s^0,w,c
  7417  005482  6ED9               	movwf	fsr2l,c
  7418  005484  5014               	movf	(fputs@i+1)^0,w,c
  7419  005486  200F               	addwfc	(fputs@s+1)^0,w,c
  7420  005488  6EDA               	movwf	fsr2h,c
  7421  00548A  50DF               	movf	indf2,w,c
  7422  00548C  6E12               	movwf	fputs@c^0,c
  7423  00548E  5012               	movf	fputs@c^0,w,c
  7424  005490  A4D8               	btfss	status,2,c
  7425  005492  EF4D  F02A         	goto	u7571
  7426  005496  EF4F  F02A         	goto	u7570
  7427  00549A                     u7571:
  7428  00549A  EF34  F02A         	goto	l5903
  7429  00549E                     u7570:
  7430  00549E  0012               	return		;funcret
  7431  0054A0                     __end_of_fputs:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function _fputc *****************
  7435 ;; Defined at:
  7436 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  c               2    4[COMRAM] int 
  7439 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  7440 ;;		 -> sprintf@f(6), 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  2    4[COMRAM] int 
  7445 ;; Registers used:
  7446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;Total ram usage:        9 bytes
  7457 ;; Hardware stack levels used: 1
  7458 ;; Hardware stack levels required when called: 6
  7459 ;; This function calls:
  7460 ;;		_putch
  7461 ;; This function is called by:
  7462 ;;		_pad
  7463 ;;		_vfpfcnvrt
  7464 ;;		_fputs
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text22
  7469  004BE0                     __ptext22:
  7470                           	callstack 0
  7471  004BE0                     _fputc:
  7472                           	callstack 21
  7473  004BE0  5007               	movf	fputc@fp^0,w,c
  7474  004BE2  1008               	iorwf	(fputc@fp+1)^0,w,c
  7475  004BE4  B4D8               	btfsc	status,2,c
  7476  004BE6  EFF7  F025         	goto	u7141
  7477  004BEA  EFF9  F025         	goto	u7140
  7478  004BEE                     u7141:
  7479  004BEE  EF02  F026         	goto	l5689
  7480  004BF2                     u7140:
  7481  004BF2  5007               	movf	fputc@fp^0,w,c
  7482  004BF4  1008               	iorwf	(fputc@fp+1)^0,w,c
  7483  004BF6  A4D8               	btfss	status,2,c
  7484  004BF8  EF00  F026         	goto	u7151
  7485  004BFC  EF02  F026         	goto	u7150
  7486  004C00                     u7151:
  7487  004C00  EF07  F026         	goto	l5691
  7488  004C04                     u7150:
  7489  004C04                     l5689:
  7490  004C04  5005               	movf	fputc@c^0,w,c
  7491  004C06  EC78  F02C         	call	_putch
  7492  004C0A  EF54  F026         	goto	l1478
  7493  004C0E                     l5691:
  7494  004C0E  EE20 F004          	lfsr	2,4
  7495  004C12  5007               	movf	fputc@fp^0,w,c
  7496  004C14  26D9               	addwf	fsr2l,f,c
  7497  004C16  5008               	movf	(fputc@fp+1)^0,w,c
  7498  004C18  22DA               	addwfc	fsr2h,f,c
  7499  004C1A  50DE               	movf	postinc2,w,c
  7500  004C1C  10DE               	iorwf	postinc2,w,c
  7501  004C1E  B4D8               	btfsc	status,2,c
  7502  004C20  EF14  F026         	goto	u7161
  7503  004C24  EF16  F026         	goto	u7160
  7504  004C28                     u7161:
  7505  004C28  EF31  F026         	goto	l5695
  7506  004C2C                     u7160:
  7507  004C2C  EE20 F004          	lfsr	2,4
  7508  004C30  5007               	movf	fputc@fp^0,w,c
  7509  004C32  26D9               	addwf	fsr2l,f,c
  7510  004C34  5008               	movf	(fputc@fp+1)^0,w,c
  7511  004C36  22DA               	addwfc	fsr2h,f,c
  7512  004C38  EE10 F002          	lfsr	1,2
  7513  004C3C  5007               	movf	fputc@fp^0,w,c
  7514  004C3E  26E1               	addwf	fsr1l,f,c
  7515  004C40  5008               	movf	(fputc@fp+1)^0,w,c
  7516  004C42  22E2               	addwfc	fsr1h,f,c
  7517  004C44  50DE               	movf	postinc2,w,c
  7518  004C46  5CE6               	subwf	postinc1,w,c
  7519  004C48  50E6               	movf	postinc1,w,c
  7520  004C4A  0A80               	xorlw	128
  7521  004C4C  6E0D               	movwf	(??_fputc+4)^0,c
  7522  004C4E  50DE               	movf	postinc2,w,c
  7523  004C50  0A80               	xorlw	128
  7524  004C52  580D               	subwfb	(??_fputc+4)^0,w,c
  7525  004C54  B0D8               	btfsc	status,0,c
  7526  004C56  EF2F  F026         	goto	u7171
  7527  004C5A  EF31  F026         	goto	u7170
  7528  004C5E                     u7171:
  7529  004C5E  EF54  F026         	goto	l1478
  7530  004C62                     u7170:
  7531  004C62                     l5695:
  7532  004C62  EE20 F002          	lfsr	2,2
  7533  004C66  5007               	movf	fputc@fp^0,w,c
  7534  004C68  26D9               	addwf	fsr2l,f,c
  7535  004C6A  5008               	movf	(fputc@fp+1)^0,w,c
  7536  004C6C  22DA               	addwfc	fsr2h,f,c
  7537  004C6E  CFDE F009          	movff	postinc2,??_fputc
  7538  004C72  CFDD F00A          	movff	postdec2,??_fputc+1
  7539  004C76  C007  FFD9         	movff	fputc@fp,fsr2l
  7540  004C7A  C008  FFDA         	movff	fputc@fp+1,fsr2h
  7541  004C7E  CFDE F00B          	movff	postinc2,??_fputc+2
  7542  004C82  CFDD F00C          	movff	postdec2,??_fputc+3
  7543  004C86  5009               	movf	??_fputc^0,w,c
  7544  004C88  240B               	addwf	(??_fputc+2)^0,w,c
  7545  004C8A  6ED9               	movwf	fsr2l,c
  7546  004C8C  500A               	movf	(??_fputc+1)^0,w,c
  7547  004C8E  200C               	addwfc	(??_fputc+3)^0,w,c
  7548  004C90  6EDA               	movwf	fsr2h,c
  7549  004C92  C005  FFDF         	movff	fputc@c,indf2
  7550  004C96  EE20 F002          	lfsr	2,2
  7551  004C9A  5007               	movf	fputc@fp^0,w,c
  7552  004C9C  26D9               	addwf	fsr2l,f,c
  7553  004C9E  5008               	movf	(fputc@fp+1)^0,w,c
  7554  004CA0  22DA               	addwfc	fsr2h,f,c
  7555  004CA2  2ADE               	incf	postinc2,f,c
  7556  004CA4  0E00               	movlw	0
  7557  004CA6  22DD               	addwfc	postdec2,f,c
  7558  004CA8                     l1478:
  7559  004CA8  0012               	return		;funcret
  7560  004CAA                     __end_of_fputc:
  7561                           	callstack 0
  7562                           
  7563 ;; *************** function _putch *****************
  7564 ;; Defined at:
  7565 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  c               1    wreg     unsigned char 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;  c               1    0[COMRAM] unsigned char 
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;Total ram usage:        0 bytes
  7584 ;; Hardware stack levels used: 1
  7585 ;; Hardware stack levels required when called: 5
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		_fputc
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text23
  7594  0058F0                     __ptext23:
  7595                           	callstack 0
  7596  0058F0                     _putch:
  7597                           	callstack 21
  7598  0058F0  0012               	return		;funcret
  7599  0058F2                     __end_of_putch:
  7600                           	callstack 0
  7601                           
  7602 ;; *************** function _abs *****************
  7603 ;; Defined at:
  7604 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  a               2   22[COMRAM] int 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;		None
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  2   22[COMRAM] int 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7622 ;;Total ram usage:        4 bytes
  7623 ;; Hardware stack levels used: 1
  7624 ;; Hardware stack levels required when called: 5
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_dtoa
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text24
  7633  00556A                     __ptext24:
  7634                           	callstack 0
  7635  00556A                     _abs:
  7636                           	callstack 21
  7637  00556A  BE18               	btfsc	(abs@a+1)^0,7,c
  7638  00556C  EFC2  F02A         	goto	u8480
  7639  005570  5018               	movf	(abs@a+1)^0,w,c
  7640  005572  E106               	bnz	u8481
  7641  005574  0417               	decf	abs@a^0,w,c
  7642  005576  B0D8               	btfsc	status,0,c
  7643  005578  EFC0  F02A         	goto	u8481
  7644  00557C  EFC2  F02A         	goto	u8480
  7645  005580                     u8481:
  7646  005580  EFD0  F02A         	goto	l1399
  7647  005584                     u8480:
  7648  005584  C017  F019         	movff	abs@a,??_abs
  7649  005588  C018  F01A         	movff	abs@a+1,??_abs+1
  7650  00558C  1E19               	comf	??_abs^0,f,c
  7651  00558E  1E1A               	comf	(??_abs+1)^0,f,c
  7652  005590  4A19               	infsnz	??_abs^0,f,c
  7653  005592  2A1A               	incf	(??_abs+1)^0,f,c
  7654  005594  C019  F017         	movff	??_abs,?_abs
  7655  005598  C01A  F018         	movff	??_abs+1,?_abs+1
  7656  00559C  EFD4  F02A         	goto	l1402
  7657  0055A0                     l1399:
  7658  0055A0  C017  F017         	movff	abs@a,?_abs
  7659  0055A4  C018  F018         	movff	abs@a+1,?_abs+1
  7660  0055A8                     l1402:
  7661  0055A8  0012               	return		;funcret
  7662  0055AA                     __end_of_abs:
  7663                           	callstack 0
  7664                           
  7665 ;; *************** function ___aomod *****************
  7666 ;; Defined at:
  7667 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  dividend        8    4[COMRAM] long long 
  7670 ;;  divisor         8   12[COMRAM] long long 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  sign            1   21[COMRAM] unsigned char 
  7673 ;;  counter         1   20[COMRAM] unsigned char 
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  8    4[COMRAM] long long 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2, status,0
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7683 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7686 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7687 ;;Total ram usage:       18 bytes
  7688 ;; Hardware stack levels used: 1
  7689 ;; Hardware stack levels required when called: 5
  7690 ;; This function calls:
  7691 ;;		Nothing
  7692 ;; This function is called by:
  7693 ;;		_dtoa
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text25
  7698  004692                     __ptext25:
  7699                           	callstack 0
  7700  004692                     ___aomod:
  7701                           	callstack 21
  7702  004692  0E00               	movlw	0
  7703  004694  6E16               	movwf	___aomod@sign^0,c
  7704  004696  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  7705  004698  EF52  F023         	goto	u7680
  7706  00469C  EF50  F023         	goto	u7681
  7707  0046A0                     u7681:
  7708  0046A0  EF64  F023         	goto	l5981
  7709  0046A4                     u7680:
  7710  0046A4  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7711  0046A6  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7712  0046A8  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7713  0046AA  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7714  0046AC  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7715  0046AE  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7716  0046B0  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7717  0046B2  6C05               	negf	___aomod@dividend^0,c
  7718  0046B4  0E00               	movlw	0
  7719  0046B6  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7720  0046B8  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7721  0046BA  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7722  0046BC  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7723  0046BE  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7724  0046C0  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7725  0046C2  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7726  0046C4  0E01               	movlw	1
  7727  0046C6  6E16               	movwf	___aomod@sign^0,c
  7728  0046C8                     l5981:
  7729  0046C8  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  7730  0046CA  EF6B  F023         	goto	u7690
  7731  0046CE  EF69  F023         	goto	u7691
  7732  0046D2                     u7691:
  7733  0046D2  EF7B  F023         	goto	l5985
  7734  0046D6                     u7690:
  7735  0046D6  1E14               	comf	(___aomod@divisor+7)^0,f,c
  7736  0046D8  1E13               	comf	(___aomod@divisor+6)^0,f,c
  7737  0046DA  1E12               	comf	(___aomod@divisor+5)^0,f,c
  7738  0046DC  1E11               	comf	(___aomod@divisor+4)^0,f,c
  7739  0046DE  1E10               	comf	(___aomod@divisor+3)^0,f,c
  7740  0046E0  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  7741  0046E2  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  7742  0046E4  6C0D               	negf	___aomod@divisor^0,c
  7743  0046E6  0E00               	movlw	0
  7744  0046E8  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  7745  0046EA  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  7746  0046EC  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  7747  0046EE  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  7748  0046F0  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  7749  0046F2  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  7750  0046F4  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  7751  0046F6                     l5985:
  7752  0046F6  500D               	movf	___aomod@divisor^0,w,c
  7753  0046F8  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  7754  0046FA  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  7755  0046FC  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  7756  0046FE  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  7757  004700  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  7758  004702  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  7759  004704  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  7760  004706  B4D8               	btfsc	status,2,c
  7761  004708  EF88  F023         	goto	u7701
  7762  00470C  EF8A  F023         	goto	u7700
  7763  004710                     u7701:
  7764  004710  EFD2  F023         	goto	l6001
  7765  004714                     u7700:
  7766  004714  0E01               	movlw	1
  7767  004716  6E15               	movwf	___aomod@counter^0,c
  7768  004718  EF98  F023         	goto	l5991
  7769  00471C                     l5989:
  7770  00471C  90D8               	bcf	status,0,c
  7771  00471E  360D               	rlcf	___aomod@divisor^0,f,c
  7772  004720  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  7773  004722  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  7774  004724  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  7775  004726  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  7776  004728  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  7777  00472A  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  7778  00472C  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  7779  00472E  2A15               	incf	___aomod@counter^0,f,c
  7780  004730                     l5991:
  7781  004730  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  7782  004732  EF9D  F023         	goto	u7711
  7783  004736  EF9F  F023         	goto	u7710
  7784  00473A                     u7711:
  7785  00473A  EF8E  F023         	goto	l5989
  7786  00473E                     u7710:
  7787  00473E                     l5993:
  7788  00473E  500D               	movf	___aomod@divisor^0,w,c
  7789  004740  5C05               	subwf	___aomod@dividend^0,w,c
  7790  004742  500E               	movf	(___aomod@divisor+1)^0,w,c
  7791  004744  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  7792  004746  500F               	movf	(___aomod@divisor+2)^0,w,c
  7793  004748  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  7794  00474A  5010               	movf	(___aomod@divisor+3)^0,w,c
  7795  00474C  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  7796  00474E  5011               	movf	(___aomod@divisor+4)^0,w,c
  7797  004750  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  7798  004752  5012               	movf	(___aomod@divisor+5)^0,w,c
  7799  004754  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  7800  004756  5013               	movf	(___aomod@divisor+6)^0,w,c
  7801  004758  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  7802  00475A  5014               	movf	(___aomod@divisor+7)^0,w,c
  7803  00475C  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  7804  00475E  A0D8               	btfss	status,0,c
  7805  004760  EFB4  F023         	goto	u7721
  7806  004764  EFB6  F023         	goto	u7720
  7807  004768                     u7721:
  7808  004768  EFC6  F023         	goto	l5997
  7809  00476C                     u7720:
  7810  00476C  500D               	movf	___aomod@divisor^0,w,c
  7811  00476E  5E05               	subwf	___aomod@dividend^0,f,c
  7812  004770  500E               	movf	(___aomod@divisor+1)^0,w,c
  7813  004772  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  7814  004774  500F               	movf	(___aomod@divisor+2)^0,w,c
  7815  004776  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  7816  004778  5010               	movf	(___aomod@divisor+3)^0,w,c
  7817  00477A  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  7818  00477C  5011               	movf	(___aomod@divisor+4)^0,w,c
  7819  00477E  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  7820  004780  5012               	movf	(___aomod@divisor+5)^0,w,c
  7821  004782  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  7822  004784  5013               	movf	(___aomod@divisor+6)^0,w,c
  7823  004786  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  7824  004788  5014               	movf	(___aomod@divisor+7)^0,w,c
  7825  00478A  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  7826  00478C                     l5997:
  7827  00478C  90D8               	bcf	status,0,c
  7828  00478E  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  7829  004790  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  7830  004792  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  7831  004794  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  7832  004796  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  7833  004798  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  7834  00479A  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  7835  00479C  320D               	rrcf	___aomod@divisor^0,f,c
  7836  00479E  2E15               	decfsz	___aomod@counter^0,f,c
  7837  0047A0  EF9F  F023         	goto	l5993
  7838  0047A4                     l6001:
  7839  0047A4  5016               	movf	___aomod@sign^0,w,c
  7840  0047A6  B4D8               	btfsc	status,2,c
  7841  0047A8  EFD8  F023         	goto	u7731
  7842  0047AC  EFDA  F023         	goto	u7730
  7843  0047B0                     u7731:
  7844  0047B0  EFEA  F023         	goto	l6005
  7845  0047B4                     u7730:
  7846  0047B4  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7847  0047B6  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7848  0047B8  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7849  0047BA  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7850  0047BC  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7851  0047BE  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7852  0047C0  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7853  0047C2  6C05               	negf	___aomod@dividend^0,c
  7854  0047C4  0E00               	movlw	0
  7855  0047C6  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7856  0047C8  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7857  0047CA  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7858  0047CC  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7859  0047CE  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7860  0047D0  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7861  0047D2  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7862  0047D4                     l6005:
  7863  0047D4  C005  F005         	movff	___aomod@dividend,?___aomod
  7864  0047D8  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  7865  0047DC  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  7866  0047E0  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  7867  0047E4  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  7868  0047E8  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  7869  0047EC  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  7870  0047F0  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  7871  0047F4  0012               	return		;funcret
  7872  0047F6                     __end_of___aomod:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function ___aodiv *****************
  7876 ;; Defined at:
  7877 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  dividend        8    4[COMRAM] long long 
  7880 ;;  divisor         8   12[COMRAM] long long 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  quotient        8   22[COMRAM] long long 
  7883 ;;  sign            1   21[COMRAM] unsigned char 
  7884 ;;  counter         1   20[COMRAM] unsigned char 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  8    4[COMRAM] long long 
  7887 ;; Registers used:
  7888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7894 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;Total ram usage:       26 bytes
  7899 ;; Hardware stack levels used: 1
  7900 ;; Hardware stack levels required when called: 5
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		_dtoa
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text26
  7909  00450A                     __ptext26:
  7910                           	callstack 0
  7911  00450A                     ___aodiv:
  7912                           	callstack 21
  7913  00450A  0E00               	movlw	0
  7914  00450C  6E16               	movwf	___aodiv@sign^0,c
  7915  00450E  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  7916  004510  EF8E  F022         	goto	u7610
  7917  004514  EF8C  F022         	goto	u7611
  7918  004518                     u7611:
  7919  004518  EFA0  F022         	goto	l5937
  7920  00451C                     u7610:
  7921  00451C  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  7922  00451E  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  7923  004520  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  7924  004522  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  7925  004524  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  7926  004526  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  7927  004528  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  7928  00452A  6C0D               	negf	___aodiv@divisor^0,c
  7929  00452C  0E00               	movlw	0
  7930  00452E  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  7931  004530  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  7932  004532  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  7933  004534  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  7934  004536  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  7935  004538  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  7936  00453A  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  7937  00453C  0E01               	movlw	1
  7938  00453E  6E16               	movwf	___aodiv@sign^0,c
  7939  004540                     l5937:
  7940  004540  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  7941  004542  EFA7  F022         	goto	u7620
  7942  004546  EFA5  F022         	goto	u7621
  7943  00454A                     u7621:
  7944  00454A  EFB9  F022         	goto	l5943
  7945  00454E                     u7620:
  7946  00454E  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  7947  004550  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  7948  004552  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  7949  004554  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  7950  004556  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  7951  004558  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  7952  00455A  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  7953  00455C  6C05               	negf	___aodiv@dividend^0,c
  7954  00455E  0E00               	movlw	0
  7955  004560  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  7956  004562  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  7957  004564  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  7958  004566  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  7959  004568  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  7960  00456A  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  7961  00456C  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  7962  00456E  0E01               	movlw	1
  7963  004570  1A16               	xorwf	___aodiv@sign^0,f,c
  7964  004572                     l5943:
  7965  004572  EE20  F017         	lfsr	2,___aodiv@quotient
  7966  004576  0E07               	movlw	7
  7967  004578                     u7631:
  7968  004578  6ADE               	clrf	postinc2,c
  7969  00457A  06E8               	decf	wreg,f,c
  7970  00457C  E2FD               	bc	u7631
  7971  00457E  500D               	movf	___aodiv@divisor^0,w,c
  7972  004580  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  7973  004582  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  7974  004584  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  7975  004586  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  7976  004588  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  7977  00458A  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  7978  00458C  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  7979  00458E  B4D8               	btfsc	status,2,c
  7980  004590  EFCC  F022         	goto	u7641
  7981  004594  EFCE  F022         	goto	u7640
  7982  004598                     u7641:
  7983  004598  EF20  F023         	goto	l5965
  7984  00459C                     u7640:
  7985  00459C  0E01               	movlw	1
  7986  00459E  6E15               	movwf	___aodiv@counter^0,c
  7987  0045A0  EFDC  F022         	goto	l5951
  7988  0045A4                     l5949:
  7989  0045A4  90D8               	bcf	status,0,c
  7990  0045A6  360D               	rlcf	___aodiv@divisor^0,f,c
  7991  0045A8  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  7992  0045AA  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  7993  0045AC  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  7994  0045AE  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  7995  0045B0  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  7996  0045B2  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  7997  0045B4  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  7998  0045B6  2A15               	incf	___aodiv@counter^0,f,c
  7999  0045B8                     l5951:
  8000  0045B8  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  8001  0045BA  EFE1  F022         	goto	u7651
  8002  0045BE  EFE3  F022         	goto	u7650
  8003  0045C2                     u7651:
  8004  0045C2  EFD2  F022         	goto	l5949
  8005  0045C6                     u7650:
  8006  0045C6                     l5953:
  8007  0045C6  90D8               	bcf	status,0,c
  8008  0045C8  3617               	rlcf	___aodiv@quotient^0,f,c
  8009  0045CA  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  8010  0045CC  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  8011  0045CE  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  8012  0045D0  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  8013  0045D2  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  8014  0045D4  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  8015  0045D6  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  8016  0045D8  500D               	movf	___aodiv@divisor^0,w,c
  8017  0045DA  5C05               	subwf	___aodiv@dividend^0,w,c
  8018  0045DC  500E               	movf	(___aodiv@divisor+1)^0,w,c
  8019  0045DE  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  8020  0045E0  500F               	movf	(___aodiv@divisor+2)^0,w,c
  8021  0045E2  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  8022  0045E4  5010               	movf	(___aodiv@divisor+3)^0,w,c
  8023  0045E6  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  8024  0045E8  5011               	movf	(___aodiv@divisor+4)^0,w,c
  8025  0045EA  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  8026  0045EC  5012               	movf	(___aodiv@divisor+5)^0,w,c
  8027  0045EE  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  8028  0045F0  5013               	movf	(___aodiv@divisor+6)^0,w,c
  8029  0045F2  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  8030  0045F4  5014               	movf	(___aodiv@divisor+7)^0,w,c
  8031  0045F6  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  8032  0045F8  A0D8               	btfss	status,0,c
  8033  0045FA  EF01  F023         	goto	u7661
  8034  0045FE  EF03  F023         	goto	u7660
  8035  004602                     u7661:
  8036  004602  EF14  F023         	goto	l5961
  8037  004606                     u7660:
  8038  004606  500D               	movf	___aodiv@divisor^0,w,c
  8039  004608  5E05               	subwf	___aodiv@dividend^0,f,c
  8040  00460A  500E               	movf	(___aodiv@divisor+1)^0,w,c
  8041  00460C  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  8042  00460E  500F               	movf	(___aodiv@divisor+2)^0,w,c
  8043  004610  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  8044  004612  5010               	movf	(___aodiv@divisor+3)^0,w,c
  8045  004614  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  8046  004616  5011               	movf	(___aodiv@divisor+4)^0,w,c
  8047  004618  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  8048  00461A  5012               	movf	(___aodiv@divisor+5)^0,w,c
  8049  00461C  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  8050  00461E  5013               	movf	(___aodiv@divisor+6)^0,w,c
  8051  004620  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  8052  004622  5014               	movf	(___aodiv@divisor+7)^0,w,c
  8053  004624  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  8054  004626  8017               	bsf	___aodiv@quotient^0,0,c
  8055  004628                     l5961:
  8056  004628  90D8               	bcf	status,0,c
  8057  00462A  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  8058  00462C  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  8059  00462E  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  8060  004630  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  8061  004632  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  8062  004634  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  8063  004636  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  8064  004638  320D               	rrcf	___aodiv@divisor^0,f,c
  8065  00463A  2E15               	decfsz	___aodiv@counter^0,f,c
  8066  00463C  EFE3  F022         	goto	l5953
  8067  004640                     l5965:
  8068  004640  5016               	movf	___aodiv@sign^0,w,c
  8069  004642  B4D8               	btfsc	status,2,c
  8070  004644  EF26  F023         	goto	u7671
  8071  004648  EF28  F023         	goto	u7670
  8072  00464C                     u7671:
  8073  00464C  EF38  F023         	goto	l5969
  8074  004650                     u7670:
  8075  004650  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  8076  004652  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  8077  004654  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  8078  004656  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  8079  004658  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  8080  00465A  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  8081  00465C  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  8082  00465E  6C17               	negf	___aodiv@quotient^0,c
  8083  004660  0E00               	movlw	0
  8084  004662  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  8085  004664  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  8086  004666  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  8087  004668  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  8088  00466A  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  8089  00466C  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  8090  00466E  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  8091  004670                     l5969:
  8092  004670  C017  F005         	movff	___aodiv@quotient,?___aodiv
  8093  004674  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  8094  004678  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  8095  00467C  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  8096  004680  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  8097  004684  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  8098  004688  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  8099  00468C  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  8100  004690  0012               	return		;funcret
  8101  004692                     __end_of___aodiv:
  8102                           	callstack 0
  8103                           
  8104 ;; *************** function _atoi *****************
  8105 ;; Defined at:
  8106 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  s               2   11[COMRAM] PTR const unsigned char 
  8109 ;;		 -> STR_1(54), 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  n               2   24[COMRAM] int 
  8112 ;;  neg             2   17[COMRAM] int 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  2   11[COMRAM] int 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8123 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;Total ram usage:       15 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; Hardware stack levels required when called: 6
  8129 ;; This function calls:
  8130 ;;		___wmul
  8131 ;;		_isdigit
  8132 ;;		_isspace
  8133 ;; This function is called by:
  8134 ;;		_vfpfcnvrt
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text27
  8139  004366                     __ptext27:
  8140                           	callstack 0
  8141  004366                     _atoi:
  8142                           	callstack 21
  8143  004366  0E00               	movlw	0
  8144  004368  6E1A               	movwf	(atoi@n+1)^0,c
  8145  00436A  0E00               	movlw	0
  8146  00436C  6E19               	movwf	atoi@n^0,c
  8147  00436E  0E00               	movlw	0
  8148  004370  6E13               	movwf	(atoi@neg+1)^0,c
  8149  004372  0E00               	movlw	0
  8150  004374  6E12               	movwf	atoi@neg^0,c
  8151  004376  EFBF  F021         	goto	l6933
  8152  00437A                     l6931:
  8153  00437A  4A0C               	infsnz	atoi@s^0,f,c
  8154  00437C  2A0D               	incf	(atoi@s+1)^0,f,c
  8155  00437E                     l6933:
  8156  00437E  0E01               	movlw	1
  8157  004380  6E18               	movwf	_atoi$2604^0,c
  8158  004382  C00C  FFF6         	movff	atoi@s,tblptrl
  8159  004386  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8160  00438A                     	if	0	;tblptru may be non-zero
  8161  00438A                     	endif
  8162  00438A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8163  00438A  0E00               	movlw	low (__mediumconst shr (0+16))
  8164  00438C  6EF8               	movwf	tblptru,c
  8165  00438E                     	endif
  8166  00438E  0008               	tblrd		*
  8167  004390  50F5               	movf	tablat,w,c
  8168  004392  0A20               	xorlw	32
  8169  004394  B4D8               	btfsc	status,2,c
  8170  004396  EFCF  F021         	goto	u9441
  8171  00439A  EFD1  F021         	goto	u9440
  8172  00439E                     u9441:
  8173  00439E  EFF0  F021         	goto	l6941
  8174  0043A2                     u9440:
  8175  0043A2  0EF7               	movlw	247
  8176  0043A4  6E0E               	movwf	??_atoi^0,c
  8177  0043A6  0EFF               	movlw	255
  8178  0043A8  6E0F               	movwf	(??_atoi+1)^0,c
  8179  0043AA  C00C  FFF6         	movff	atoi@s,tblptrl
  8180  0043AE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8181  0043B2                     	if	0	;tblptru may be non-zero
  8182  0043B2                     	endif
  8183  0043B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8184  0043B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8185  0043B4  6EF8               	movwf	tblptru,c
  8186  0043B6                     	endif
  8187  0043B6  0008               	tblrd		*
  8188  0043B8  50F5               	movf	tablat,w,c
  8189  0043BA  6E10               	movwf	(??_atoi+2)^0,c
  8190  0043BC  6A11               	clrf	(??_atoi+3)^0,c
  8191  0043BE  500E               	movf	??_atoi^0,w,c
  8192  0043C0  2610               	addwf	(??_atoi+2)^0,f,c
  8193  0043C2  500F               	movf	(??_atoi+1)^0,w,c
  8194  0043C4  2211               	addwfc	(??_atoi+3)^0,f,c
  8195  0043C6  5011               	movf	(??_atoi+3)^0,w,c
  8196  0043C8  E109               	bnz	u9450
  8197  0043CA  0E05               	movlw	5
  8198  0043CC  5C10               	subwf	(??_atoi+2)^0,w,c
  8199  0043CE  A0D8               	btfss	status,0,c
  8200  0043D0  EFEC  F021         	goto	u9451
  8201  0043D4  EFEE  F021         	goto	u9450
  8202  0043D8                     u9451:
  8203  0043D8  EFF0  F021         	goto	l6941
  8204  0043DC                     u9450:
  8205  0043DC  0E00               	movlw	0
  8206  0043DE  6E18               	movwf	_atoi$2604^0,c
  8207  0043E0                     l6941:
  8208  0043E0  C018  F014         	movff	_atoi$2604,_atoi$2603
  8209  0043E4  6A15               	clrf	(_atoi$2603+1)^0,c
  8210  0043E6  5014               	movf	_atoi$2603^0,w,c
  8211  0043E8  1015               	iorwf	(_atoi$2603+1)^0,w,c
  8212  0043EA  A4D8               	btfss	status,2,c
  8213  0043EC  EFFA  F021         	goto	u9461
  8214  0043F0  EFFC  F021         	goto	u9460
  8215  0043F4                     u9461:
  8216  0043F4  EFBD  F021         	goto	l6931
  8217  0043F8                     u9460:
  8218  0043F8  EF06  F022         	goto	l6951
  8219  0043FC                     l6947:
  8220  0043FC  0E00               	movlw	0
  8221  0043FE  6E13               	movwf	(atoi@neg+1)^0,c
  8222  004400  0E01               	movlw	1
  8223  004402  6E12               	movwf	atoi@neg^0,c
  8224  004404                     l6949:
  8225  004404  4A0C               	infsnz	atoi@s^0,f,c
  8226  004406  2A0D               	incf	(atoi@s+1)^0,f,c
  8227  004408  EF3F  F022         	goto	l6957
  8228  00440C                     l6951:
  8229  00440C  C00C  FFF6         	movff	atoi@s,tblptrl
  8230  004410  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8231  004414                     	if	0	;tblptru may be non-zero
  8232  004414                     	endif
  8233  004414                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8234  004414  0E00               	movlw	low (__mediumconst shr (0+16))
  8235  004416  6EF8               	movwf	tblptru,c
  8236  004418                     	endif
  8237  004418  0008               	tblrd		*
  8238  00441A  50F5               	movf	tablat,w,c
  8239  00441C  6E0E               	movwf	??_atoi^0,c
  8240  00441E  6A0F               	clrf	(??_atoi+1)^0,c
  8241                           
  8242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8243                           ; Switch size 1, requested type "simple"
  8244                           ; Number of cases is 1, Range of values is 0 to 0
  8245                           ; switch strategies available:
  8246                           ; Name         Instructions Cycles
  8247                           ; simple_byte            4     3 (average)
  8248                           ;	Chosen strategy is simple_byte
  8249  004420  500F               	movf	(??_atoi+1)^0,w,c
  8250  004422  0A00               	xorlw	0	; case 0
  8251  004424  B4D8               	btfsc	status,2,c
  8252  004426  EF17  F022         	goto	l7393
  8253  00442A  EF3F  F022         	goto	l6957
  8254  00442E                     l7393:
  8255                           
  8256                           ; Switch size 1, requested type "simple"
  8257                           ; Number of cases is 2, Range of values is 43 to 45
  8258                           ; switch strategies available:
  8259                           ; Name         Instructions Cycles
  8260                           ; simple_byte            7     4 (average)
  8261                           ;	Chosen strategy is simple_byte
  8262  00442E  500E               	movf	??_atoi^0,w,c
  8263  004430  0A2B               	xorlw	43	; case 43
  8264  004432  B4D8               	btfsc	status,2,c
  8265  004434  EF02  F022         	goto	l6949
  8266  004438  0A06               	xorlw	6	; case 45
  8267  00443A  B4D8               	btfsc	status,2,c
  8268  00443C  EFFE  F021         	goto	l6947
  8269  004440  EF3F  F022         	goto	l6957
  8270  004444                     l6953:
  8271  004444  C019  F005         	movff	atoi@n,___wmul@multiplier
  8272  004448  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  8273  00444C  0E00               	movlw	0
  8274  00444E  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  8275  004450  0E0A               	movlw	10
  8276  004452  6E07               	movwf	___wmul@multiplicand^0,c
  8277  004454  ECD5  F02B         	call	___wmul	;wreg free
  8278  004458  C00C  FFF6         	movff	atoi@s,tblptrl
  8279  00445C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8280  004460                     	if	0	;tblptru may be non-zero
  8281  004460                     	endif
  8282  004460                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8283  004460  0E00               	movlw	low (__mediumconst shr (0+16))
  8284  004462  6EF8               	movwf	tblptru,c
  8285  004464                     	endif
  8286  004464  0008               	tblrd		*
  8287  004466  50F5               	movf	tablat,w,c
  8288  004468  5E05               	subwf	?___wmul^0,f,c
  8289  00446A  0E00               	movlw	0
  8290  00446C  5A06               	subwfb	(?___wmul+1)^0,f,c
  8291  00446E  0E30               	movlw	48
  8292  004470  2405               	addwf	?___wmul^0,w,c
  8293  004472  6E19               	movwf	atoi@n^0,c
  8294  004474  0E00               	movlw	0
  8295  004476  2006               	addwfc	(?___wmul+1)^0,w,c
  8296  004478  6E1A               	movwf	(atoi@n+1)^0,c
  8297  00447A  EF02  F022         	goto	l6949
  8298  00447E                     l6957:
  8299  00447E  0ED0               	movlw	208
  8300  004480  6E0E               	movwf	??_atoi^0,c
  8301  004482  0EFF               	movlw	255
  8302  004484  6E0F               	movwf	(??_atoi+1)^0,c
  8303  004486  C00C  FFF6         	movff	atoi@s,tblptrl
  8304  00448A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8305  00448E                     	if	0	;tblptru may be non-zero
  8306  00448E                     	endif
  8307  00448E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8308  00448E  0E00               	movlw	low (__mediumconst shr (0+16))
  8309  004490  6EF8               	movwf	tblptru,c
  8310  004492                     	endif
  8311  004492  0008               	tblrd		*
  8312  004494  50F5               	movf	tablat,w,c
  8313  004496  6E10               	movwf	(??_atoi+2)^0,c
  8314  004498  6A11               	clrf	(??_atoi+3)^0,c
  8315  00449A  500E               	movf	??_atoi^0,w,c
  8316  00449C  2610               	addwf	(??_atoi+2)^0,f,c
  8317  00449E  500F               	movf	(??_atoi+1)^0,w,c
  8318  0044A0  2211               	addwfc	(??_atoi+3)^0,f,c
  8319  0044A2  5011               	movf	(??_atoi+3)^0,w,c
  8320  0044A4  E10A               	bnz	u9470
  8321  0044A6  0E0A               	movlw	10
  8322  0044A8  5C10               	subwf	(??_atoi+2)^0,w,c
  8323  0044AA  A0D8               	btfss	status,0,c
  8324  0044AC  EF5A  F022         	goto	u9471
  8325  0044B0  EF5D  F022         	goto	u9470
  8326  0044B4                     u9471:
  8327  0044B4  0E01               	movlw	1
  8328  0044B6  EF5E  F022         	goto	u9480
  8329  0044BA                     u9470:
  8330  0044BA  0E00               	movlw	0
  8331  0044BC                     u9480:
  8332  0044BC  6E16               	movwf	_atoi$2605^0,c
  8333  0044BE  6A17               	clrf	(_atoi$2605+1)^0,c
  8334  0044C0  5016               	movf	_atoi$2605^0,w,c
  8335  0044C2  1017               	iorwf	(_atoi$2605+1)^0,w,c
  8336  0044C4  A4D8               	btfss	status,2,c
  8337  0044C6  EF67  F022         	goto	u9491
  8338  0044CA  EF69  F022         	goto	u9490
  8339  0044CE                     u9491:
  8340  0044CE  EF22  F022         	goto	l6953
  8341  0044D2                     u9490:
  8342  0044D2  5012               	movf	atoi@neg^0,w,c
  8343  0044D4  1013               	iorwf	(atoi@neg+1)^0,w,c
  8344  0044D6  A4D8               	btfss	status,2,c
  8345  0044D8  EF70  F022         	goto	u9501
  8346  0044DC  EF72  F022         	goto	u9500
  8347  0044E0                     u9501:
  8348  0044E0  EF80  F022         	goto	l1430
  8349  0044E4                     u9500:
  8350  0044E4  C019  F00E         	movff	atoi@n,??_atoi
  8351  0044E8  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  8352  0044EC  1E0E               	comf	??_atoi^0,f,c
  8353  0044EE  1E0F               	comf	(??_atoi+1)^0,f,c
  8354  0044F0  4A0E               	infsnz	??_atoi^0,f,c
  8355  0044F2  2A0F               	incf	(??_atoi+1)^0,f,c
  8356  0044F4  C00E  F00C         	movff	??_atoi,?_atoi
  8357  0044F8  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  8358  0044FC  EF84  F022         	goto	l1433
  8359  004500                     l1430:
  8360  004500  C019  F00C         	movff	atoi@n,?_atoi
  8361  004504  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  8362  004508                     l1433:
  8363  004508  0012               	return		;funcret
  8364  00450A                     __end_of_atoi:
  8365                           	callstack 0
  8366                           
  8367 ;; *************** function _isspace *****************
  8368 ;; Defined at:
  8369 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  c               2    4[COMRAM] int 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  2    4[COMRAM] int 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;Total ram usage:        7 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 5
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_atoi
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text28
  8398  005234                     __ptext28:
  8399                           	callstack 0
  8400  005234                     _isspace:
  8401                           	callstack 21
  8402  005234  0E01               	movlw	1
  8403  005236  6E0B               	movwf	_isspace$2634^0,c
  8404  005238  0E20               	movlw	32
  8405  00523A  1805               	xorwf	isspace@c^0,w,c
  8406  00523C  1006               	iorwf	(isspace@c+1)^0,w,c
  8407  00523E  B4D8               	btfsc	status,2,c
  8408  005240  EF24  F029         	goto	u8731
  8409  005244  EF26  F029         	goto	u8730
  8410  005248                     u8731:
  8411  005248  EF3F  F029         	goto	l6555
  8412  00524C                     u8730:
  8413  00524C  0EF7               	movlw	247
  8414  00524E  6E07               	movwf	??_isspace^0,c
  8415  005250  0EFF               	movlw	255
  8416  005252  6E08               	movwf	(??_isspace+1)^0,c
  8417  005254  C005  F009         	movff	isspace@c,??_isspace+2
  8418  005258  C006  F00A         	movff	isspace@c+1,??_isspace+3
  8419  00525C  5007               	movf	??_isspace^0,w,c
  8420  00525E  2609               	addwf	(??_isspace+2)^0,f,c
  8421  005260  5008               	movf	(??_isspace+1)^0,w,c
  8422  005262  220A               	addwfc	(??_isspace+3)^0,f,c
  8423  005264  500A               	movf	(??_isspace+3)^0,w,c
  8424  005266  E109               	bnz	u8740
  8425  005268  0E05               	movlw	5
  8426  00526A  5C09               	subwf	(??_isspace+2)^0,w,c
  8427  00526C  A0D8               	btfss	status,0,c
  8428  00526E  EF3B  F029         	goto	u8741
  8429  005272  EF3D  F029         	goto	u8740
  8430  005276                     u8741:
  8431  005276  EF3F  F029         	goto	l6555
  8432  00527A                     u8740:
  8433  00527A  0E00               	movlw	0
  8434  00527C  6E0B               	movwf	_isspace$2634^0,c
  8435  00527E                     l6555:
  8436  00527E  C00B  F005         	movff	_isspace$2634,?_isspace
  8437  005282  6A06               	clrf	(?_isspace+1)^0,c
  8438  005284  0012               	return		;funcret
  8439  005286                     __end_of_isspace:
  8440                           	callstack 0
  8441                           
  8442 ;; *************** function _isdigit *****************
  8443 ;; Defined at:
  8444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  c               2    4[COMRAM] int 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  2    4[COMRAM] int 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8462 ;;Total ram usage:        6 bytes
  8463 ;; Hardware stack levels used: 1
  8464 ;; Hardware stack levels required when called: 5
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_vfpfcnvrt
  8469 ;;		_atoi
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text29
  8474  005692                     __ptext29:
  8475                           	callstack 0
  8476  005692                     _isdigit:
  8477                           	callstack 22
  8478  005692  0ED0               	movlw	208
  8479  005694  6E07               	movwf	??_isdigit^0,c
  8480  005696  0EFF               	movlw	255
  8481  005698  6E08               	movwf	(??_isdigit+1)^0,c
  8482  00569A  C005  F009         	movff	isdigit@c,??_isdigit+2
  8483  00569E  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  8484  0056A2  5007               	movf	??_isdigit^0,w,c
  8485  0056A4  2609               	addwf	(??_isdigit+2)^0,f,c
  8486  0056A6  5008               	movf	(??_isdigit+1)^0,w,c
  8487  0056A8  220A               	addwfc	(??_isdigit+3)^0,f,c
  8488  0056AA  500A               	movf	(??_isdigit+3)^0,w,c
  8489  0056AC  E10A               	bnz	u8710
  8490  0056AE  0E0A               	movlw	10
  8491  0056B0  5C09               	subwf	(??_isdigit+2)^0,w,c
  8492  0056B2  A0D8               	btfss	status,0,c
  8493  0056B4  EF5E  F02B         	goto	u8711
  8494  0056B8  EF61  F02B         	goto	u8710
  8495  0056BC                     u8711:
  8496  0056BC  0E01               	movlw	1
  8497  0056BE  EF62  F02B         	goto	u8720
  8498  0056C2                     u8710:
  8499  0056C2  0E00               	movlw	0
  8500  0056C4                     u8720:
  8501  0056C4  6E05               	movwf	?_isdigit^0,c
  8502  0056C6  6A06               	clrf	(?_isdigit+1)^0,c
  8503  0056C8  0012               	return		;funcret
  8504  0056CA                     __end_of_isdigit:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function _sendStringSerial4 *****************
  8508 ;; Defined at:
  8509 ;;		line 46 in file "serial.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  string          2    5[COMRAM] PTR unsigned char 
  8512 ;;		 -> main@buf(100), 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8528 ;;Total ram usage:        2 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; Hardware stack levels required when called: 6
  8531 ;; This function calls:
  8532 ;;		_sendCharSerial4
  8533 ;; This function is called by:
  8534 ;;		_main
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text30
  8539  005700                     __ptext30:
  8540                           	callstack 0
  8541  005700                     _sendStringSerial4:
  8542                           	callstack 24
  8543  005700                     
  8544                           ;serial.c: 48:     while (*string != 0) {
  8545  005700  EF8B  F02B         	goto	l5407
  8546  005704                     l5403:
  8547                           
  8548                           ;serial.c: 49:         sendCharSerial4(*string++);
  8549  005704  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  8550  005708  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8551  00570C  50DF               	movf	indf2,w,c
  8552  00570E  EC26  F02C         	call	_sendCharSerial4
  8553  005712  4A06               	infsnz	sendStringSerial4@string^0,f,c
  8554  005714  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  8555  005716                     l5407:
  8556                           
  8557                           ;serial.c: 48:     while (*string != 0) {
  8558  005716  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  8559  00571A  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8560  00571E  50DF               	movf	indf2,w,c
  8561  005720  A4D8               	btfss	status,2,c
  8562  005722  EF95  F02B         	goto	u6741
  8563  005726  EF97  F02B         	goto	u6740
  8564  00572A                     u6741:
  8565  00572A  EF82  F02B         	goto	l5403
  8566  00572E                     u6740:
  8567  00572E  0012               	return		;funcret
  8568  005730                     __end_of_sendStringSerial4:
  8569                           	callstack 0
  8570                           
  8571 ;; *************** function _sendCharSerial4 *****************
  8572 ;; Defined at:
  8573 ;;		line 37 in file "serial.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  charToSend      1    wreg     unsigned char 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  charToSend      1    4[COMRAM] unsigned char 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;Total ram usage:        1 bytes
  8592 ;; Hardware stack levels used: 1
  8593 ;; Hardware stack levels required when called: 5
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_sendStringSerial4
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text31
  8602  00584C                     __ptext31:
  8603                           	callstack 0
  8604  00584C                     _sendCharSerial4:
  8605                           	callstack 24
  8606                           
  8607                           ;incstack = 0
  8608                           ;sendCharSerial4@charToSend stored from wreg
  8609  00584C  6E05               	movwf	sendCharSerial4@charToSend^0,c
  8610  00584E                     l368:
  8611  00584E  010E               	movlb	14	; () banked
  8612  005850  A537               	btfss	55,2,b	;volatile
  8613  005852  EF2D  F02C         	goto	u6611
  8614  005856  EF2F  F02C         	goto	u6610
  8615  00585A                     u6611:
  8616  00585A  EF27  F02C         	goto	l368
  8617  00585E                     u6610:
  8618  00585E                     
  8619                           ; BSR set to: 14
  8620                           ;serial.c: 39:     TX4REG = charToSend;
  8621  00585E  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8622  005862                     
  8623                           ; BSR set to: 14
  8624  005862  0012               	return		;funcret
  8625  005864                     __end_of_sendCharSerial4:
  8626                           	callstack 0
  8627                           
  8628 ;; *************** function _read_card_RGB *****************
  8629 ;; Defined at:
  8630 ;;		line 6 in file "color_card.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  current         8   43[COMRAM] struct .
  8633 ;;  mL              2   51[COMRAM] PTR struct .
  8634 ;;		 -> main@motorL(9), 
  8635 ;;  mR              2   53[COMRAM] PTR struct .
  8636 ;;		 -> main@motorR(9), 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  R_rel           4   63[COMRAM] float 
  8639 ;;  B_rel           4   59[COMRAM] float 
  8640 ;;  G_rel           4   55[COMRAM] float 
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  4   43[COMRAM] float 
  8643 ;; Registers used:
  8644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8650 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;Total ram usage:       24 bytes
  8655 ;; Hardware stack levels used: 1
  8656 ;; Hardware stack levels required when called: 8
  8657 ;; This function calls:
  8658 ;;		___fldiv
  8659 ;;		___flge
  8660 ;;		___xxtofl
  8661 ;;		_reverse
  8662 ;;		_stop
  8663 ;;		_turnLeft
  8664 ;;		_turnRight
  8665 ;; This function is called by:
  8666 ;;		_main
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text32
  8671  001AA6                     __ptext32:
  8672                           	callstack 0
  8673  001AA6                     _read_card_RGB:
  8674                           	callstack 22
  8675  001AA6                     
  8676                           ;color_card.c: 8:     float R_rel = (float)current.R / (float)current.C;
  8677  001AA6  C02C  F005         	movff	read_card_RGB@current,___xxtofl@val
  8678  001AAA  C02D  F006         	movff	read_card_RGB@current+1,___xxtofl@val+1
  8679  001AAE  6A07               	clrf	(___xxtofl@val+2)^0,c
  8680  001AB0  6A08               	clrf	(___xxtofl@val+3)^0,c
  8681  001AB2  0E00               	movlw	0
  8682  001AB4  ECD9  F020         	call	___xxtofl
  8683  001AB8  C005  F013         	movff	?___xxtofl,___fldiv@b
  8684  001ABC  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  8685  001AC0  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  8686  001AC4  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  8687  001AC8  C032  F005         	movff	read_card_RGB@current+6,___xxtofl@val
  8688  001ACC  C033  F006         	movff	read_card_RGB@current+7,___xxtofl@val+1
  8689  001AD0  6A07               	clrf	(___xxtofl@val+2)^0,c
  8690  001AD2  6A08               	clrf	(___xxtofl@val+3)^0,c
  8691  001AD4  0E00               	movlw	0
  8692  001AD6  ECD9  F020         	call	___xxtofl
  8693  001ADA  C005  F017         	movff	?___xxtofl,___fldiv@a
  8694  001ADE  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  8695  001AE2  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  8696  001AE6  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  8697  001AEA  EC3B  F018         	call	___fldiv	;wreg free
  8698  001AEE  C013  F040         	movff	?___fldiv,read_card_RGB@R_rel
  8699  001AF2  C014  F041         	movff	?___fldiv+1,read_card_RGB@R_rel+1
  8700  001AF6  C015  F042         	movff	?___fldiv+2,read_card_RGB@R_rel+2
  8701  001AFA  C016  F043         	movff	?___fldiv+3,read_card_RGB@R_rel+3
  8702                           
  8703                           ;color_card.c: 9:     float G_rel = (float)current.G / (float)current.C;
  8704  001AFE  C02E  F005         	movff	read_card_RGB@current+2,___xxtofl@val
  8705  001B02  C02F  F006         	movff	read_card_RGB@current+3,___xxtofl@val+1
  8706  001B06  6A07               	clrf	(___xxtofl@val+2)^0,c
  8707  001B08  6A08               	clrf	(___xxtofl@val+3)^0,c
  8708  001B0A  0E00               	movlw	0
  8709  001B0C  ECD9  F020         	call	___xxtofl
  8710  001B10  C005  F013         	movff	?___xxtofl,___fldiv@b
  8711  001B14  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  8712  001B18  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  8713  001B1C  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  8714  001B20  C032  F005         	movff	read_card_RGB@current+6,___xxtofl@val
  8715  001B24  C033  F006         	movff	read_card_RGB@current+7,___xxtofl@val+1
  8716  001B28  6A07               	clrf	(___xxtofl@val+2)^0,c
  8717  001B2A  6A08               	clrf	(___xxtofl@val+3)^0,c
  8718  001B2C  0E00               	movlw	0
  8719  001B2E  ECD9  F020         	call	___xxtofl
  8720  001B32  C005  F017         	movff	?___xxtofl,___fldiv@a
  8721  001B36  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  8722  001B3A  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  8723  001B3E  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  8724  001B42  EC3B  F018         	call	___fldiv	;wreg free
  8725  001B46  C013  F038         	movff	?___fldiv,read_card_RGB@G_rel
  8726  001B4A  C014  F039         	movff	?___fldiv+1,read_card_RGB@G_rel+1
  8727  001B4E  C015  F03A         	movff	?___fldiv+2,read_card_RGB@G_rel+2
  8728  001B52  C016  F03B         	movff	?___fldiv+3,read_card_RGB@G_rel+3
  8729                           
  8730                           ;color_card.c: 10:     float B_rel = (float)current.B / (float)current.C;
  8731  001B56  C030  F005         	movff	read_card_RGB@current+4,___xxtofl@val
  8732  001B5A  C031  F006         	movff	read_card_RGB@current+5,___xxtofl@val+1
  8733  001B5E  6A07               	clrf	(___xxtofl@val+2)^0,c
  8734  001B60  6A08               	clrf	(___xxtofl@val+3)^0,c
  8735  001B62  0E00               	movlw	0
  8736  001B64  ECD9  F020         	call	___xxtofl
  8737  001B68  C005  F013         	movff	?___xxtofl,___fldiv@b
  8738  001B6C  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  8739  001B70  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  8740  001B74  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  8741  001B78  C032  F005         	movff	read_card_RGB@current+6,___xxtofl@val
  8742  001B7C  C033  F006         	movff	read_card_RGB@current+7,___xxtofl@val+1
  8743  001B80  6A07               	clrf	(___xxtofl@val+2)^0,c
  8744  001B82  6A08               	clrf	(___xxtofl@val+3)^0,c
  8745  001B84  0E00               	movlw	0
  8746  001B86  ECD9  F020         	call	___xxtofl
  8747  001B8A  C005  F017         	movff	?___xxtofl,___fldiv@a
  8748  001B8E  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  8749  001B92  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  8750  001B96  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  8751  001B9A  EC3B  F018         	call	___fldiv	;wreg free
  8752  001B9E  C013  F03C         	movff	?___fldiv,read_card_RGB@B_rel
  8753  001BA2  C014  F03D         	movff	?___fldiv+1,read_card_RGB@B_rel+1
  8754  001BA6  C015  F03E         	movff	?___fldiv+2,read_card_RGB@B_rel+2
  8755  001BAA  C016  F03F         	movff	?___fldiv+3,read_card_RGB@B_rel+3
  8756                           
  8757                           ;color_card.c: 12:     if ((R_rel>0.54) && (G_rel<0.245) && (B_rel<0.18)) {
  8758  001BAE  0E71               	movlw	113
  8759  001BB0  6E1E               	movwf	___flge@ff1^0,c
  8760  001BB2  0E3D               	movlw	61
  8761  001BB4  6E1F               	movwf	(___flge@ff1+1)^0,c
  8762  001BB6  0E0A               	movlw	10
  8763  001BB8  6E20               	movwf	(___flge@ff1+2)^0,c
  8764  001BBA  0E3F               	movlw	63
  8765  001BBC  6E21               	movwf	(___flge@ff1+3)^0,c
  8766  001BBE  C040  F022         	movff	read_card_RGB@R_rel,___flge@ff2
  8767  001BC2  C041  F023         	movff	read_card_RGB@R_rel+1,___flge@ff2+1
  8768  001BC6  C042  F024         	movff	read_card_RGB@R_rel+2,___flge@ff2+2
  8769  001BCA  C043  F025         	movff	read_card_RGB@R_rel+3,___flge@ff2+3
  8770  001BCE  EC7E  F024         	call	___flge	;wreg free
  8771  001BD2  B0D8               	btfsc	status,0,c
  8772  001BD4  EFEE  F00D         	goto	u10071
  8773  001BD8  EFF0  F00D         	goto	u10070
  8774  001BDC                     u10071:
  8775  001BDC  EF3A  F00E         	goto	l7243
  8776  001BE0                     u10070:
  8777  001BE0  C038  F01E         	movff	read_card_RGB@G_rel,___flge@ff1
  8778  001BE4  C039  F01F         	movff	read_card_RGB@G_rel+1,___flge@ff1+1
  8779  001BE8  C03A  F020         	movff	read_card_RGB@G_rel+2,___flge@ff1+2
  8780  001BEC  C03B  F021         	movff	read_card_RGB@G_rel+3,___flge@ff1+3
  8781  001BF0  0E48               	movlw	72
  8782  001BF2  6E22               	movwf	___flge@ff2^0,c
  8783  001BF4  0EE1               	movlw	225
  8784  001BF6  6E23               	movwf	(___flge@ff2+1)^0,c
  8785  001BF8  0E7A               	movlw	122
  8786  001BFA  6E24               	movwf	(___flge@ff2+2)^0,c
  8787  001BFC  0E3E               	movlw	62
  8788  001BFE  6E25               	movwf	(___flge@ff2+3)^0,c
  8789  001C00  EC7E  F024         	call	___flge	;wreg free
  8790  001C04  B0D8               	btfsc	status,0,c
  8791  001C06  EF07  F00E         	goto	u10081
  8792  001C0A  EF09  F00E         	goto	u10080
  8793  001C0E                     u10081:
  8794  001C0E  EF3A  F00E         	goto	l7243
  8795  001C12                     u10080:
  8796  001C12  C03C  F01E         	movff	read_card_RGB@B_rel,___flge@ff1
  8797  001C16  C03D  F01F         	movff	read_card_RGB@B_rel+1,___flge@ff1+1
  8798  001C1A  C03E  F020         	movff	read_card_RGB@B_rel+2,___flge@ff1+2
  8799  001C1E  C03F  F021         	movff	read_card_RGB@B_rel+3,___flge@ff1+3
  8800  001C22  0EEC               	movlw	236
  8801  001C24  6E22               	movwf	___flge@ff2^0,c
  8802  001C26  0E51               	movlw	81
  8803  001C28  6E23               	movwf	(___flge@ff2+1)^0,c
  8804  001C2A  0E38               	movlw	56
  8805  001C2C  6E24               	movwf	(___flge@ff2+2)^0,c
  8806  001C2E  0E3E               	movlw	62
  8807  001C30  6E25               	movwf	(___flge@ff2+3)^0,c
  8808  001C32  EC7E  F024         	call	___flge	;wreg free
  8809  001C36  B0D8               	btfsc	status,0,c
  8810  001C38  EF20  F00E         	goto	u10091
  8811  001C3C  EF22  F00E         	goto	u10090
  8812  001C40                     u10091:
  8813  001C40  EF3A  F00E         	goto	l7243
  8814  001C44                     u10090:
  8815  001C44                     
  8816                           ;color_card.c: 14:         turnRight(mL, mR, 90);
  8817  001C44  C034  F01E         	movff	read_card_RGB@mL,turnRight@mL
  8818  001C48  C035  F01F         	movff	read_card_RGB@mL+1,turnRight@mL+1
  8819  001C4C  C036  F020         	movff	read_card_RGB@mR,turnRight@mR
  8820  001C50  C037  F021         	movff	read_card_RGB@mR+1,turnRight@mR+1
  8821  001C54  0E5A               	movlw	90
  8822  001C56  6E22               	movwf	turnRight@deg^0,c
  8823  001C58  EC09  F01E         	call	_turnRight	;wreg free
  8824                           
  8825                           ;color_card.c: 15:         stop(mL, mR);
  8826  001C5C  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  8827  001C60  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  8828  001C64  C036  F020         	movff	read_card_RGB@mR,stop@mR
  8829  001C68  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  8830  001C6C  ECC5  F027         	call	_stop	;wreg free
  8831                           
  8832                           ;color_card.c: 17:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
  8833  001C70  EF10  F011         	goto	l499
  8834  001C74                     l7243:
  8835  001C74  C040  F01E         	movff	read_card_RGB@R_rel,___flge@ff1
  8836  001C78  C041  F01F         	movff	read_card_RGB@R_rel+1,___flge@ff1+1
  8837  001C7C  C042  F020         	movff	read_card_RGB@R_rel+2,___flge@ff1+2
  8838  001C80  C043  F021         	movff	read_card_RGB@R_rel+3,___flge@ff1+3
  8839  001C84  0E52               	movlw	82
  8840  001C86  6E22               	movwf	___flge@ff2^0,c
  8841  001C88  0EB8               	movlw	184
  8842  001C8A  6E23               	movwf	(___flge@ff2+1)^0,c
  8843  001C8C  0EDE               	movlw	222
  8844  001C8E  6E24               	movwf	(___flge@ff2+2)^0,c
  8845  001C90  0E3E               	movlw	62
  8846  001C92  6E25               	movwf	(___flge@ff2+3)^0,c
  8847  001C94  EC7E  F024         	call	___flge	;wreg free
  8848  001C98  B0D8               	btfsc	status,0,c
  8849  001C9A  EF51  F00E         	goto	u10101
  8850  001C9E  EF53  F00E         	goto	u10100
  8851  001CA2                     u10101:
  8852  001CA2  EF9D  F00E         	goto	l7251
  8853  001CA6                     u10100:
  8854  001CA6  0E52               	movlw	82
  8855  001CA8  6E1E               	movwf	___flge@ff1^0,c
  8856  001CAA  0EB8               	movlw	184
  8857  001CAC  6E1F               	movwf	(___flge@ff1+1)^0,c
  8858  001CAE  0E9E               	movlw	158
  8859  001CB0  6E20               	movwf	(___flge@ff1+2)^0,c
  8860  001CB2  0E3E               	movlw	62
  8861  001CB4  6E21               	movwf	(___flge@ff1+3)^0,c
  8862  001CB6  C038  F022         	movff	read_card_RGB@G_rel,___flge@ff2
  8863  001CBA  C039  F023         	movff	read_card_RGB@G_rel+1,___flge@ff2+1
  8864  001CBE  C03A  F024         	movff	read_card_RGB@G_rel+2,___flge@ff2+2
  8865  001CC2  C03B  F025         	movff	read_card_RGB@G_rel+3,___flge@ff2+3
  8866  001CC6  EC7E  F024         	call	___flge	;wreg free
  8867  001CCA  B0D8               	btfsc	status,0,c
  8868  001CCC  EF6A  F00E         	goto	u10111
  8869  001CD0  EF6C  F00E         	goto	u10110
  8870  001CD4                     u10111:
  8871  001CD4  EF9D  F00E         	goto	l7251
  8872  001CD8                     u10110:
  8873  001CD8  0E14               	movlw	20
  8874  001CDA  6E1E               	movwf	___flge@ff1^0,c
  8875  001CDC  0EAE               	movlw	174
  8876  001CDE  6E1F               	movwf	(___flge@ff1+1)^0,c
  8877  001CE0  0E47               	movlw	71
  8878  001CE2  6E20               	movwf	(___flge@ff1+2)^0,c
  8879  001CE4  0E3E               	movlw	62
  8880  001CE6  6E21               	movwf	(___flge@ff1+3)^0,c
  8881  001CE8  C03C  F022         	movff	read_card_RGB@B_rel,___flge@ff2
  8882  001CEC  C03D  F023         	movff	read_card_RGB@B_rel+1,___flge@ff2+1
  8883  001CF0  C03E  F024         	movff	read_card_RGB@B_rel+2,___flge@ff2+2
  8884  001CF4  C03F  F025         	movff	read_card_RGB@B_rel+3,___flge@ff2+3
  8885  001CF8  EC7E  F024         	call	___flge	;wreg free
  8886  001CFC  B0D8               	btfsc	status,0,c
  8887  001CFE  EF83  F00E         	goto	u10121
  8888  001D02  EF85  F00E         	goto	u10120
  8889  001D06                     u10121:
  8890  001D06  EF9D  F00E         	goto	l7251
  8891  001D0A                     u10120:
  8892  001D0A                     
  8893                           ;color_card.c: 19:         turnLeft(mL, mR, 90);
  8894  001D0A  C034  F01E         	movff	read_card_RGB@mL,turnLeft@mL
  8895  001D0E  C035  F01F         	movff	read_card_RGB@mL+1,turnLeft@mL+1
  8896  001D12  C036  F020         	movff	read_card_RGB@mR,turnLeft@mR
  8897  001D16  C037  F021         	movff	read_card_RGB@mR+1,turnLeft@mR+1
  8898  001D1A  0E5A               	movlw	90
  8899  001D1C  6E22               	movwf	turnLeft@deg^0,c
  8900  001D1E  ECFC  F01E         	call	_turnLeft	;wreg free
  8901                           
  8902                           ;color_card.c: 20:         stop(mL, mR);
  8903  001D22  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  8904  001D26  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  8905  001D2A  C036  F020         	movff	read_card_RGB@mR,stop@mR
  8906  001D2E  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  8907  001D32  ECC5  F027         	call	_stop	;wreg free
  8908                           
  8909                           ;color_card.c: 22:     } else if ((R_rel<0.43) && (G_rel>0.30) && (B_rel>0.21)) {
  8910  001D36  EF10  F011         	goto	l499
  8911  001D3A                     l7251:
  8912  001D3A  C040  F01E         	movff	read_card_RGB@R_rel,___flge@ff1
  8913  001D3E  C041  F01F         	movff	read_card_RGB@R_rel+1,___flge@ff1+1
  8914  001D42  C042  F020         	movff	read_card_RGB@R_rel+2,___flge@ff1+2
  8915  001D46  C043  F021         	movff	read_card_RGB@R_rel+3,___flge@ff1+3
  8916  001D4A  0EF6               	movlw	246
  8917  001D4C  6E22               	movwf	___flge@ff2^0,c
  8918  001D4E  0E28               	movlw	40
  8919  001D50  6E23               	movwf	(___flge@ff2+1)^0,c
  8920  001D52  0EDC               	movlw	220
  8921  001D54  6E24               	movwf	(___flge@ff2+2)^0,c
  8922  001D56  0E3E               	movlw	62
  8923  001D58  6E25               	movwf	(___flge@ff2+3)^0,c
  8924  001D5A  EC7E  F024         	call	___flge	;wreg free
  8925  001D5E  B0D8               	btfsc	status,0,c
  8926  001D60  EFB4  F00E         	goto	u10131
  8927  001D64  EFB6  F00E         	goto	u10130
  8928  001D68                     u10131:
  8929  001D68  EF00  F00F         	goto	l7259
  8930  001D6C                     u10130:
  8931  001D6C  0E9A               	movlw	154
  8932  001D6E  6E1E               	movwf	___flge@ff1^0,c
  8933  001D70  0E99               	movlw	153
  8934  001D72  6E1F               	movwf	(___flge@ff1+1)^0,c
  8935  001D74  0E99               	movlw	153
  8936  001D76  6E20               	movwf	(___flge@ff1+2)^0,c
  8937  001D78  0E3E               	movlw	62
  8938  001D7A  6E21               	movwf	(___flge@ff1+3)^0,c
  8939  001D7C  C038  F022         	movff	read_card_RGB@G_rel,___flge@ff2
  8940  001D80  C039  F023         	movff	read_card_RGB@G_rel+1,___flge@ff2+1
  8941  001D84  C03A  F024         	movff	read_card_RGB@G_rel+2,___flge@ff2+2
  8942  001D88  C03B  F025         	movff	read_card_RGB@G_rel+3,___flge@ff2+3
  8943  001D8C  EC7E  F024         	call	___flge	;wreg free
  8944  001D90  B0D8               	btfsc	status,0,c
  8945  001D92  EFCD  F00E         	goto	u10141
  8946  001D96  EFCF  F00E         	goto	u10140
  8947  001D9A                     u10141:
  8948  001D9A  EF00  F00F         	goto	l7259
  8949  001D9E                     u10140:
  8950  001D9E  0E3D               	movlw	61
  8951  001DA0  6E1E               	movwf	___flge@ff1^0,c
  8952  001DA2  0E0A               	movlw	10
  8953  001DA4  6E1F               	movwf	(___flge@ff1+1)^0,c
  8954  001DA6  0E57               	movlw	87
  8955  001DA8  6E20               	movwf	(___flge@ff1+2)^0,c
  8956  001DAA  0E3E               	movlw	62
  8957  001DAC  6E21               	movwf	(___flge@ff1+3)^0,c
  8958  001DAE  C03C  F022         	movff	read_card_RGB@B_rel,___flge@ff2
  8959  001DB2  C03D  F023         	movff	read_card_RGB@B_rel+1,___flge@ff2+1
  8960  001DB6  C03E  F024         	movff	read_card_RGB@B_rel+2,___flge@ff2+2
  8961  001DBA  C03F  F025         	movff	read_card_RGB@B_rel+3,___flge@ff2+3
  8962  001DBE  EC7E  F024         	call	___flge	;wreg free
  8963  001DC2  B0D8               	btfsc	status,0,c
  8964  001DC4  EFE6  F00E         	goto	u10151
  8965  001DC8  EFE8  F00E         	goto	u10150
  8966  001DCC                     u10151:
  8967  001DCC  EF00  F00F         	goto	l7259
  8968  001DD0                     u10150:
  8969  001DD0                     
  8970                           ;color_card.c: 24:         turnRight(mL, mR, 180);
  8971  001DD0  C034  F01E         	movff	read_card_RGB@mL,turnRight@mL
  8972  001DD4  C035  F01F         	movff	read_card_RGB@mL+1,turnRight@mL+1
  8973  001DD8  C036  F020         	movff	read_card_RGB@mR,turnRight@mR
  8974  001DDC  C037  F021         	movff	read_card_RGB@mR+1,turnRight@mR+1
  8975  001DE0  0EB4               	movlw	180
  8976  001DE2  6E22               	movwf	turnRight@deg^0,c
  8977  001DE4  EC09  F01E         	call	_turnRight	;wreg free
  8978                           
  8979                           ;color_card.c: 25:         stop(mL, mR);
  8980  001DE8  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  8981  001DEC  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  8982  001DF0  C036  F020         	movff	read_card_RGB@mR,stop@mR
  8983  001DF4  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  8984  001DF8  ECC5  F027         	call	_stop	;wreg free
  8985                           
  8986                           ;color_card.c: 27:     } else if ((R_rel>0.49) && (G_rel>0.285) && (B_rel>0.18)) {
  8987  001DFC  EF10  F011         	goto	l499
  8988  001E00                     l7259:
  8989  001E00  0E48               	movlw	72
  8990  001E02  6E1E               	movwf	___flge@ff1^0,c
  8991  001E04  0EE1               	movlw	225
  8992  001E06  6E1F               	movwf	(___flge@ff1+1)^0,c
  8993  001E08  0EFA               	movlw	250
  8994  001E0A  6E20               	movwf	(___flge@ff1+2)^0,c
  8995  001E0C  0E3E               	movlw	62
  8996  001E0E  6E21               	movwf	(___flge@ff1+3)^0,c
  8997  001E10  C040  F022         	movff	read_card_RGB@R_rel,___flge@ff2
  8998  001E14  C041  F023         	movff	read_card_RGB@R_rel+1,___flge@ff2+1
  8999  001E18  C042  F024         	movff	read_card_RGB@R_rel+2,___flge@ff2+2
  9000  001E1C  C043  F025         	movff	read_card_RGB@R_rel+3,___flge@ff2+3
  9001  001E20  EC7E  F024         	call	___flge	;wreg free
  9002  001E24  B0D8               	btfsc	status,0,c
  9003  001E26  EF17  F00F         	goto	u10161
  9004  001E2A  EF19  F00F         	goto	u10160
  9005  001E2E                     u10161:
  9006  001E2E  EF77  F00F         	goto	l7267
  9007  001E32                     u10160:
  9008  001E32  0E85               	movlw	133
  9009  001E34  6E1E               	movwf	___flge@ff1^0,c
  9010  001E36  0EEB               	movlw	235
  9011  001E38  6E1F               	movwf	(___flge@ff1+1)^0,c
  9012  001E3A  0E91               	movlw	145
  9013  001E3C  6E20               	movwf	(___flge@ff1+2)^0,c
  9014  001E3E  0E3E               	movlw	62
  9015  001E40  6E21               	movwf	(___flge@ff1+3)^0,c
  9016  001E42  C038  F022         	movff	read_card_RGB@G_rel,___flge@ff2
  9017  001E46  C039  F023         	movff	read_card_RGB@G_rel+1,___flge@ff2+1
  9018  001E4A  C03A  F024         	movff	read_card_RGB@G_rel+2,___flge@ff2+2
  9019  001E4E  C03B  F025         	movff	read_card_RGB@G_rel+3,___flge@ff2+3
  9020  001E52  EC7E  F024         	call	___flge	;wreg free
  9021  001E56  B0D8               	btfsc	status,0,c
  9022  001E58  EF30  F00F         	goto	u10171
  9023  001E5C  EF32  F00F         	goto	u10170
  9024  001E60                     u10171:
  9025  001E60  EF77  F00F         	goto	l7267
  9026  001E64                     u10170:
  9027  001E64  0EEC               	movlw	236
  9028  001E66  6E1E               	movwf	___flge@ff1^0,c
  9029  001E68  0E51               	movlw	81
  9030  001E6A  6E1F               	movwf	(___flge@ff1+1)^0,c
  9031  001E6C  0E38               	movlw	56
  9032  001E6E  6E20               	movwf	(___flge@ff1+2)^0,c
  9033  001E70  0E3E               	movlw	62
  9034  001E72  6E21               	movwf	(___flge@ff1+3)^0,c
  9035  001E74  C03C  F022         	movff	read_card_RGB@B_rel,___flge@ff2
  9036  001E78  C03D  F023         	movff	read_card_RGB@B_rel+1,___flge@ff2+1
  9037  001E7C  C03E  F024         	movff	read_card_RGB@B_rel+2,___flge@ff2+2
  9038  001E80  C03F  F025         	movff	read_card_RGB@B_rel+3,___flge@ff2+3
  9039  001E84  EC7E  F024         	call	___flge	;wreg free
  9040  001E88  B0D8               	btfsc	status,0,c
  9041  001E8A  EF49  F00F         	goto	u10181
  9042  001E8E  EF4B  F00F         	goto	u10180
  9043  001E92                     u10181:
  9044  001E92  EF77  F00F         	goto	l7267
  9045  001E96                     u10180:
  9046  001E96                     
  9047                           ;color_card.c: 29:         reverse(mL, mR);
  9048  001E96  C034  F01E         	movff	read_card_RGB@mL,reverse@mL
  9049  001E9A  C035  F01F         	movff	read_card_RGB@mL+1,reverse@mL+1
  9050  001E9E  C036  F020         	movff	read_card_RGB@mR,reverse@mR
  9051  001EA2  C037  F021         	movff	read_card_RGB@mR+1,reverse@mR+1
  9052  001EA6  EC12  F028         	call	_reverse	;wreg free
  9053                           
  9054                           ;color_card.c: 30:         stop(mL, mR);
  9055  001EAA  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  9056  001EAE  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  9057  001EB2  C036  F020         	movff	read_card_RGB@mR,stop@mR
  9058  001EB6  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  9059  001EBA  ECC5  F027         	call	_stop	;wreg free
  9060                           
  9061                           ;color_card.c: 31:         turnRight(mL, mR, 90);
  9062  001EBE  C034  F01E         	movff	read_card_RGB@mL,turnRight@mL
  9063  001EC2  C035  F01F         	movff	read_card_RGB@mL+1,turnRight@mL+1
  9064  001EC6  C036  F020         	movff	read_card_RGB@mR,turnRight@mR
  9065  001ECA  C037  F021         	movff	read_card_RGB@mR+1,turnRight@mR+1
  9066  001ECE  0E5A               	movlw	90
  9067  001ED0  6E22               	movwf	turnRight@deg^0,c
  9068  001ED2  EC09  F01E         	call	_turnRight	;wreg free
  9069                           
  9070                           ;color_card.c: 32:         stop(mL, mR);
  9071  001ED6  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  9072  001EDA  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  9073  001EDE  C036  F020         	movff	read_card_RGB@mR,stop@mR
  9074  001EE2  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  9075  001EE6  ECC5  F027         	call	_stop	;wreg free
  9076                           
  9077                           ;color_card.c: 34:     } else if ((R_rel>0.49) && (G_rel<0.275) && (B_rel>0.195)) {
  9078  001EEA  EF10  F011         	goto	l499
  9079  001EEE                     l7267:
  9080  001EEE  0E48               	movlw	72
  9081  001EF0  6E1E               	movwf	___flge@ff1^0,c
  9082  001EF2  0EE1               	movlw	225
  9083  001EF4  6E1F               	movwf	(___flge@ff1+1)^0,c
  9084  001EF6  0EFA               	movlw	250
  9085  001EF8  6E20               	movwf	(___flge@ff1+2)^0,c
  9086  001EFA  0E3E               	movlw	62
  9087  001EFC  6E21               	movwf	(___flge@ff1+3)^0,c
  9088  001EFE  C040  F022         	movff	read_card_RGB@R_rel,___flge@ff2
  9089  001F02  C041  F023         	movff	read_card_RGB@R_rel+1,___flge@ff2+1
  9090  001F06  C042  F024         	movff	read_card_RGB@R_rel+2,___flge@ff2+2
  9091  001F0A  C043  F025         	movff	read_card_RGB@R_rel+3,___flge@ff2+3
  9092  001F0E  EC7E  F024         	call	___flge	;wreg free
  9093  001F12  B0D8               	btfsc	status,0,c
  9094  001F14  EF8E  F00F         	goto	u10191
  9095  001F18  EF90  F00F         	goto	u10190
  9096  001F1C                     u10191:
  9097  001F1C  EFEE  F00F         	goto	l7275
  9098  001F20                     u10190:
  9099  001F20  C038  F01E         	movff	read_card_RGB@G_rel,___flge@ff1
  9100  001F24  C039  F01F         	movff	read_card_RGB@G_rel+1,___flge@ff1+1
  9101  001F28  C03A  F020         	movff	read_card_RGB@G_rel+2,___flge@ff1+2
  9102  001F2C  C03B  F021         	movff	read_card_RGB@G_rel+3,___flge@ff1+3
  9103  001F30  0ECD               	movlw	205
  9104  001F32  6E22               	movwf	___flge@ff2^0,c
  9105  001F34  0ECC               	movlw	204
  9106  001F36  6E23               	movwf	(___flge@ff2+1)^0,c
  9107  001F38  0E8C               	movlw	140
  9108  001F3A  6E24               	movwf	(___flge@ff2+2)^0,c
  9109  001F3C  0E3E               	movlw	62
  9110  001F3E  6E25               	movwf	(___flge@ff2+3)^0,c
  9111  001F40  EC7E  F024         	call	___flge	;wreg free
  9112  001F44  B0D8               	btfsc	status,0,c
  9113  001F46  EFA7  F00F         	goto	u10201
  9114  001F4A  EFA9  F00F         	goto	u10200
  9115  001F4E                     u10201:
  9116  001F4E  EFEE  F00F         	goto	l7275
  9117  001F52                     u10200:
  9118  001F52  0E14               	movlw	20
  9119  001F54  6E1E               	movwf	___flge@ff1^0,c
  9120  001F56  0EAE               	movlw	174
  9121  001F58  6E1F               	movwf	(___flge@ff1+1)^0,c
  9122  001F5A  0E47               	movlw	71
  9123  001F5C  6E20               	movwf	(___flge@ff1+2)^0,c
  9124  001F5E  0E3E               	movlw	62
  9125  001F60  6E21               	movwf	(___flge@ff1+3)^0,c
  9126  001F62  C03C  F022         	movff	read_card_RGB@B_rel,___flge@ff2
  9127  001F66  C03D  F023         	movff	read_card_RGB@B_rel+1,___flge@ff2+1
  9128  001F6A  C03E  F024         	movff	read_card_RGB@B_rel+2,___flge@ff2+2
  9129  001F6E  C03F  F025         	movff	read_card_RGB@B_rel+3,___flge@ff2+3
  9130  001F72  EC7E  F024         	call	___flge	;wreg free
  9131  001F76  B0D8               	btfsc	status,0,c
  9132  001F78  EFC0  F00F         	goto	u10211
  9133  001F7C  EFC2  F00F         	goto	u10210
  9134  001F80                     u10211:
  9135  001F80  EFEE  F00F         	goto	l7275
  9136  001F84                     u10210:
  9137  001F84                     
  9138                           ;color_card.c: 36:         reverse(mL, mR);
  9139  001F84  C034  F01E         	movff	read_card_RGB@mL,reverse@mL
  9140  001F88  C035  F01F         	movff	read_card_RGB@mL+1,reverse@mL+1
  9141  001F8C  C036  F020         	movff	read_card_RGB@mR,reverse@mR
  9142  001F90  C037  F021         	movff	read_card_RGB@mR+1,reverse@mR+1
  9143  001F94  EC12  F028         	call	_reverse	;wreg free
  9144                           
  9145                           ;color_card.c: 37:         stop(mL, mR);
  9146  001F98  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  9147  001F9C  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  9148  001FA0  C036  F020         	movff	read_card_RGB@mR,stop@mR
  9149  001FA4  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  9150  001FA8  ECC5  F027         	call	_stop	;wreg free
  9151                           
  9152                           ;color_card.c: 38:         turnLeft(mL, mR, 90);
  9153  001FAC  C034  F01E         	movff	read_card_RGB@mL,turnLeft@mL
  9154  001FB0  C035  F01F         	movff	read_card_RGB@mL+1,turnLeft@mL+1
  9155  001FB4  C036  F020         	movff	read_card_RGB@mR,turnLeft@mR
  9156  001FB8  C037  F021         	movff	read_card_RGB@mR+1,turnLeft@mR+1
  9157  001FBC  0E5A               	movlw	90
  9158  001FBE  6E22               	movwf	turnLeft@deg^0,c
  9159  001FC0  ECFC  F01E         	call	_turnLeft	;wreg free
  9160                           
  9161                           ;color_card.c: 39:         stop(mL, mR);
  9162  001FC4  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  9163  001FC8  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  9164  001FCC  C036  F020         	movff	read_card_RGB@mR,stop@mR
  9165  001FD0  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  9166  001FD4  ECC5  F027         	call	_stop	;wreg free
  9167                           
  9168                           ;color_card.c: 41:     } else if ((R_rel>0.54) && (G_rel<0.24) && (B_rel<0.18)) {
  9169  001FD8  EF10  F011         	goto	l499
  9170  001FDC                     l7275:
  9171  001FDC  0E71               	movlw	113
  9172  001FDE  6E1E               	movwf	___flge@ff1^0,c
  9173  001FE0  0E3D               	movlw	61
  9174  001FE2  6E1F               	movwf	(___flge@ff1+1)^0,c
  9175  001FE4  0E0A               	movlw	10
  9176  001FE6  6E20               	movwf	(___flge@ff1+2)^0,c
  9177  001FE8  0E3F               	movlw	63
  9178  001FEA  6E21               	movwf	(___flge@ff1+3)^0,c
  9179  001FEC  C040  F022         	movff	read_card_RGB@R_rel,___flge@ff2
  9180  001FF0  C041  F023         	movff	read_card_RGB@R_rel+1,___flge@ff2+1
  9181  001FF4  C042  F024         	movff	read_card_RGB@R_rel+2,___flge@ff2+2
  9182  001FF8  C043  F025         	movff	read_card_RGB@R_rel+3,___flge@ff2+3
  9183  001FFC  EC7E  F024         	call	___flge	;wreg free
  9184  002000  B0D8               	btfsc	status,0,c
  9185  002002  EF05  F010         	goto	u10221
  9186  002006  EF07  F010         	goto	u10220
  9187  00200A                     u10221:
  9188  00200A  EF51  F010         	goto	l7283
  9189  00200E                     u10220:
  9190  00200E  C038  F01E         	movff	read_card_RGB@G_rel,___flge@ff1
  9191  002012  C039  F01F         	movff	read_card_RGB@G_rel+1,___flge@ff1+1
  9192  002016  C03A  F020         	movff	read_card_RGB@G_rel+2,___flge@ff1+2
  9193  00201A  C03B  F021         	movff	read_card_RGB@G_rel+3,___flge@ff1+3
  9194  00201E  0E8F               	movlw	143
  9195  002020  6E22               	movwf	___flge@ff2^0,c
  9196  002022  0EC2               	movlw	194
  9197  002024  6E23               	movwf	(___flge@ff2+1)^0,c
  9198  002026  0E75               	movlw	117
  9199  002028  6E24               	movwf	(___flge@ff2+2)^0,c
  9200  00202A  0E3E               	movlw	62
  9201  00202C  6E25               	movwf	(___flge@ff2+3)^0,c
  9202  00202E  EC7E  F024         	call	___flge	;wreg free
  9203  002032  B0D8               	btfsc	status,0,c
  9204  002034  EF1E  F010         	goto	u10231
  9205  002038  EF20  F010         	goto	u10230
  9206  00203C                     u10231:
  9207  00203C  EF51  F010         	goto	l7283
  9208  002040                     u10230:
  9209  002040  C03C  F01E         	movff	read_card_RGB@B_rel,___flge@ff1
  9210  002044  C03D  F01F         	movff	read_card_RGB@B_rel+1,___flge@ff1+1
  9211  002048  C03E  F020         	movff	read_card_RGB@B_rel+2,___flge@ff1+2
  9212  00204C  C03F  F021         	movff	read_card_RGB@B_rel+3,___flge@ff1+3
  9213  002050  0EEC               	movlw	236
  9214  002052  6E22               	movwf	___flge@ff2^0,c
  9215  002054  0E51               	movlw	81
  9216  002056  6E23               	movwf	(___flge@ff2+1)^0,c
  9217  002058  0E38               	movlw	56
  9218  00205A  6E24               	movwf	(___flge@ff2+2)^0,c
  9219  00205C  0E3E               	movlw	62
  9220  00205E  6E25               	movwf	(___flge@ff2+3)^0,c
  9221  002060  EC7E  F024         	call	___flge	;wreg free
  9222  002064  B0D8               	btfsc	status,0,c
  9223  002066  EF37  F010         	goto	u10241
  9224  00206A  EF39  F010         	goto	u10240
  9225  00206E                     u10241:
  9226  00206E  EF51  F010         	goto	l7283
  9227  002072                     u10240:
  9228  002072                     
  9229                           ;color_card.c: 43:         turnRight(mL, mR, 135);
  9230  002072  C034  F01E         	movff	read_card_RGB@mL,turnRight@mL
  9231  002076  C035  F01F         	movff	read_card_RGB@mL+1,turnRight@mL+1
  9232  00207A  C036  F020         	movff	read_card_RGB@mR,turnRight@mR
  9233  00207E  C037  F021         	movff	read_card_RGB@mR+1,turnRight@mR+1
  9234  002082  0E87               	movlw	135
  9235  002084  6E22               	movwf	turnRight@deg^0,c
  9236  002086  EC09  F01E         	call	_turnRight	;wreg free
  9237                           
  9238                           ;color_card.c: 44:         stop(mL, mR);
  9239  00208A  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  9240  00208E  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  9241  002092  C036  F020         	movff	read_card_RGB@mR,stop@mR
  9242  002096  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  9243  00209A  ECC5  F027         	call	_stop	;wreg free
  9244                           
  9245                           ;color_card.c: 46:     } else if ((R_rel<0.44) && (G_rel>0.305) && (B_rel>0.21)) {
  9246  00209E  EF10  F011         	goto	l499
  9247  0020A2                     l7283:
  9248  0020A2  C040  F01E         	movff	read_card_RGB@R_rel,___flge@ff1
  9249  0020A6  C041  F01F         	movff	read_card_RGB@R_rel+1,___flge@ff1+1
  9250  0020AA  C042  F020         	movff	read_card_RGB@R_rel+2,___flge@ff1+2
  9251  0020AE  C043  F021         	movff	read_card_RGB@R_rel+3,___flge@ff1+3
  9252  0020B2  0EAE               	movlw	174
  9253  0020B4  6E22               	movwf	___flge@ff2^0,c
  9254  0020B6  0E47               	movlw	71
  9255  0020B8  6E23               	movwf	(___flge@ff2+1)^0,c
  9256  0020BA  0EE1               	movlw	225
  9257  0020BC  6E24               	movwf	(___flge@ff2+2)^0,c
  9258  0020BE  0E3E               	movlw	62
  9259  0020C0  6E25               	movwf	(___flge@ff2+3)^0,c
  9260  0020C2  EC7E  F024         	call	___flge	;wreg free
  9261  0020C6  B0D8               	btfsc	status,0,c
  9262  0020C8  EF68  F010         	goto	u10251
  9263  0020CC  EF6A  F010         	goto	u10250
  9264  0020D0                     u10251:
  9265  0020D0  EFB4  F010         	goto	l7291
  9266  0020D4                     u10250:
  9267  0020D4  0EF6               	movlw	246
  9268  0020D6  6E1E               	movwf	___flge@ff1^0,c
  9269  0020D8  0E28               	movlw	40
  9270  0020DA  6E1F               	movwf	(___flge@ff1+1)^0,c
  9271  0020DC  0E9C               	movlw	156
  9272  0020DE  6E20               	movwf	(___flge@ff1+2)^0,c
  9273  0020E0  0E3E               	movlw	62
  9274  0020E2  6E21               	movwf	(___flge@ff1+3)^0,c
  9275  0020E4  C038  F022         	movff	read_card_RGB@G_rel,___flge@ff2
  9276  0020E8  C039  F023         	movff	read_card_RGB@G_rel+1,___flge@ff2+1
  9277  0020EC  C03A  F024         	movff	read_card_RGB@G_rel+2,___flge@ff2+2
  9278  0020F0  C03B  F025         	movff	read_card_RGB@G_rel+3,___flge@ff2+3
  9279  0020F4  EC7E  F024         	call	___flge	;wreg free
  9280  0020F8  B0D8               	btfsc	status,0,c
  9281  0020FA  EF81  F010         	goto	u10261
  9282  0020FE  EF83  F010         	goto	u10260
  9283  002102                     u10261:
  9284  002102  EFB4  F010         	goto	l7291
  9285  002106                     u10260:
  9286  002106  0E3D               	movlw	61
  9287  002108  6E1E               	movwf	___flge@ff1^0,c
  9288  00210A  0E0A               	movlw	10
  9289  00210C  6E1F               	movwf	(___flge@ff1+1)^0,c
  9290  00210E  0E57               	movlw	87
  9291  002110  6E20               	movwf	(___flge@ff1+2)^0,c
  9292  002112  0E3E               	movlw	62
  9293  002114  6E21               	movwf	(___flge@ff1+3)^0,c
  9294  002116  C03C  F022         	movff	read_card_RGB@B_rel,___flge@ff2
  9295  00211A  C03D  F023         	movff	read_card_RGB@B_rel+1,___flge@ff2+1
  9296  00211E  C03E  F024         	movff	read_card_RGB@B_rel+2,___flge@ff2+2
  9297  002122  C03F  F025         	movff	read_card_RGB@B_rel+3,___flge@ff2+3
  9298  002126  EC7E  F024         	call	___flge	;wreg free
  9299  00212A  B0D8               	btfsc	status,0,c
  9300  00212C  EF9A  F010         	goto	u10271
  9301  002130  EF9C  F010         	goto	u10270
  9302  002134                     u10271:
  9303  002134  EFB4  F010         	goto	l7291
  9304  002138                     u10270:
  9305  002138                     
  9306                           ;color_card.c: 48:         turnLeft(mL, mR, 135);
  9307  002138  C034  F01E         	movff	read_card_RGB@mL,turnLeft@mL
  9308  00213C  C035  F01F         	movff	read_card_RGB@mL+1,turnLeft@mL+1
  9309  002140  C036  F020         	movff	read_card_RGB@mR,turnLeft@mR
  9310  002144  C037  F021         	movff	read_card_RGB@mR+1,turnLeft@mR+1
  9311  002148  0E87               	movlw	135
  9312  00214A  6E22               	movwf	turnLeft@deg^0,c
  9313  00214C  ECFC  F01E         	call	_turnLeft	;wreg free
  9314                           
  9315                           ;color_card.c: 49:         stop(mL, mR);
  9316  002150  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  9317  002154  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  9318  002158  C036  F020         	movff	read_card_RGB@mR,stop@mR
  9319  00215C  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  9320  002160  ECC5  F027         	call	_stop	;wreg free
  9321                           
  9322                           ;color_card.c: 51:     } else if ((R_rel<0.46) && (G_rel>0.295) && (B_rel>0.21)) {
  9323  002164  EF10  F011         	goto	l499
  9324  002168                     l7291:
  9325  002168  C040  F01E         	movff	read_card_RGB@R_rel,___flge@ff1
  9326  00216C  C041  F01F         	movff	read_card_RGB@R_rel+1,___flge@ff1+1
  9327  002170  C042  F020         	movff	read_card_RGB@R_rel+2,___flge@ff1+2
  9328  002174  C043  F021         	movff	read_card_RGB@R_rel+3,___flge@ff1+3
  9329  002178  0E1F               	movlw	31
  9330  00217A  6E22               	movwf	___flge@ff2^0,c
  9331  00217C  0E85               	movlw	133
  9332  00217E  6E23               	movwf	(___flge@ff2+1)^0,c
  9333  002180  0EEB               	movlw	235
  9334  002182  6E24               	movwf	(___flge@ff2+2)^0,c
  9335  002184  0E3E               	movlw	62
  9336  002186  6E25               	movwf	(___flge@ff2+3)^0,c
  9337  002188  EC7E  F024         	call	___flge	;wreg free
  9338  00218C  B0D8               	btfsc	status,0,c
  9339  00218E  EFCB  F010         	goto	u10281
  9340  002192  EFCD  F010         	goto	u10280
  9341  002196                     u10281:
  9342  002196  EFF8  F010         	goto	l7297
  9343  00219A                     u10280:
  9344  00219A  0E3D               	movlw	61
  9345  00219C  6E1E               	movwf	___flge@ff1^0,c
  9346  00219E  0E0A               	movlw	10
  9347  0021A0  6E1F               	movwf	(___flge@ff1+1)^0,c
  9348  0021A2  0E97               	movlw	151
  9349  0021A4  6E20               	movwf	(___flge@ff1+2)^0,c
  9350  0021A6  0E3E               	movlw	62
  9351  0021A8  6E21               	movwf	(___flge@ff1+3)^0,c
  9352  0021AA  C038  F022         	movff	read_card_RGB@G_rel,___flge@ff2
  9353  0021AE  C039  F023         	movff	read_card_RGB@G_rel+1,___flge@ff2+1
  9354  0021B2  C03A  F024         	movff	read_card_RGB@G_rel+2,___flge@ff2+2
  9355  0021B6  C03B  F025         	movff	read_card_RGB@G_rel+3,___flge@ff2+3
  9356  0021BA  EC7E  F024         	call	___flge	;wreg free
  9357  0021BE  B0D8               	btfsc	status,0,c
  9358  0021C0  EFE4  F010         	goto	u10291
  9359  0021C4  EFE6  F010         	goto	u10290
  9360  0021C8                     u10291:
  9361  0021C8  EFF8  F010         	goto	l7297
  9362  0021CC                     u10290:
  9363  0021CC  0E3D               	movlw	61
  9364  0021CE  6E1E               	movwf	___flge@ff1^0,c
  9365  0021D0  0E0A               	movlw	10
  9366  0021D2  6E1F               	movwf	(___flge@ff1+1)^0,c
  9367  0021D4  0E57               	movlw	87
  9368  0021D6  6E20               	movwf	(___flge@ff1+2)^0,c
  9369  0021D8  0E3E               	movlw	62
  9370  0021DA  6E21               	movwf	(___flge@ff1+3)^0,c
  9371  0021DC  C03C  F022         	movff	read_card_RGB@B_rel,___flge@ff2
  9372  0021E0  C03D  F023         	movff	read_card_RGB@B_rel+1,___flge@ff2+1
  9373  0021E4  C03E  F024         	movff	read_card_RGB@B_rel+2,___flge@ff2+2
  9374  0021E8  C03F  F025         	movff	read_card_RGB@B_rel+3,___flge@ff2+3
  9375  0021EC  EC7E  F024         	call	___flge	;wreg free
  9376  0021F0                     l7297:
  9377                           
  9378                           ;color_card.c: 53:         turnRight(mL, mR, 180);
  9379  0021F0  C034  F01E         	movff	read_card_RGB@mL,turnRight@mL
  9380  0021F4  C035  F01F         	movff	read_card_RGB@mL+1,turnRight@mL+1
  9381  0021F8  C036  F020         	movff	read_card_RGB@mR,turnRight@mR
  9382  0021FC  C037  F021         	movff	read_card_RGB@mR+1,turnRight@mR+1
  9383  002200  0EB4               	movlw	180
  9384  002202  6E22               	movwf	turnRight@deg^0,c
  9385  002204  EC09  F01E         	call	_turnRight	;wreg free
  9386                           
  9387                           ;color_card.c: 54:         stop(mL, mR);
  9388  002208  C034  F01E         	movff	read_card_RGB@mL,stop@mL
  9389  00220C  C035  F01F         	movff	read_card_RGB@mL+1,stop@mL+1
  9390  002210  C036  F020         	movff	read_card_RGB@mR,stop@mR
  9391  002214  C037  F021         	movff	read_card_RGB@mR+1,stop@mR+1
  9392  002218  ECC5  F027         	call	_stop	;wreg free
  9393  00221C                     
  9394                           ;color_card.c: 55:         returnhome_flag = 1;
  9395  00221C  0E01               	movlw	1
  9396  00221E  6E5A               	movwf	_returnhome_flag^0,c	;volatile
  9397  002220                     l499:
  9398  002220  0012               	return		;funcret
  9399  002222                     __end_of_read_card_RGB:
  9400                           	callstack 0
  9401                           
  9402 ;; *************** function _turnRight *****************
  9403 ;; Defined at:
  9404 ;;		line 246 in file "dc_motor.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;  mL              2   29[COMRAM] PTR struct .
  9407 ;;		 -> main@motorL(9), 
  9408 ;;  mR              2   31[COMRAM] PTR struct .
  9409 ;;		 -> main@motorR(9), 
  9410 ;;  deg             1   33[COMRAM] unsigned char 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;		None
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      void 
  9415 ;; Registers used:
  9416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9422 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;Total ram usage:        7 bytes
  9427 ;; Hardware stack levels used: 1
  9428 ;; Hardware stack levels required when called: 7
  9429 ;; This function calls:
  9430 ;;		_setMotorPWM
  9431 ;; This function is called by:
  9432 ;;		_read_card_RGB
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text33
  9437  003C12                     __ptext33:
  9438                           	callstack 0
  9439  003C12                     _turnRight:
  9440                           	callstack 22
  9441  003C12                     
  9442                           ;dc_motor.c: 246: void turnRight(DC_motor *mL, DC_motor *mR, unsigned char deg);dc_motor
      +                          .c: 247: {;dc_motor.c: 248:     if (returnhome_flag==0) {
  9443  003C12  505A               	movf	_returnhome_flag^0,w,c	;volatile
  9444  003C14  A4D8               	btfss	status,2,c
  9445  003C16  EF0F  F01E         	goto	u9931
  9446  003C1A  EF11  F01E         	goto	u9930
  9447  003C1E                     u9931:
  9448  003C1E  EF87  F01E         	goto	l7195
  9449  003C22                     u9930:
  9450  003C22                     
  9451                           ;dc_motor.c: 250:         mL->direction = 1;
  9452  003C22  EE20 F001          	lfsr	2,1
  9453  003C26  501E               	movf	turnRight@mL^0,w,c
  9454  003C28  26D9               	addwf	fsr2l,f,c
  9455  003C2A  501F               	movf	(turnRight@mL+1)^0,w,c
  9456  003C2C  22DA               	addwfc	fsr2h,f,c
  9457  003C2E  0E01               	movlw	1
  9458  003C30  6EDF               	movwf	indf2,c
  9459                           
  9460                           ;dc_motor.c: 251:         mR->direction = 0;
  9461  003C32  EE20 F001          	lfsr	2,1
  9462  003C36  5020               	movf	turnRight@mR^0,w,c
  9463  003C38  26D9               	addwf	fsr2l,f,c
  9464  003C3A  5021               	movf	(turnRight@mR+1)^0,w,c
  9465  003C3C  22DA               	addwfc	fsr2h,f,c
  9466  003C3E  0E00               	movlw	0
  9467  003C40  6EDF               	movwf	indf2,c
  9468                           
  9469                           ;dc_motor.c: 254:         while(((mL->power)<50) || ((mR->power)<50)){
  9470  003C42  EF6C  F01E         	goto	l239
  9471  003C46                     l7177:
  9472                           
  9473                           ;dc_motor.c: 256:             LATHbits.LATH0 = !LATHbits.LATH0;
  9474  003C46  A080               	btfss	128,0,c	;volatile
  9475  003C48  EF28  F01E         	goto	u9941
  9476  003C4C  EF2C  F01E         	goto	u9940
  9477  003C50                     u9941:
  9478  003C50  6A23               	clrf	??_turnRight^0,c
  9479  003C52  2A23               	incf	??_turnRight^0,f,c
  9480  003C54  EF2D  F01E         	goto	u9958
  9481  003C58                     u9940:
  9482  003C58  6A23               	clrf	??_turnRight^0,c
  9483  003C5A                     u9958:
  9484  003C5A  5080               	movf	128,w,c	;volatile
  9485  003C5C  1823               	xorwf	??_turnRight^0,w,c
  9486  003C5E  0BFE               	andlw	-2
  9487  003C60  1823               	xorwf	??_turnRight^0,w,c
  9488  003C62  6E80               	movwf	128,c	;volatile
  9489  003C64                     
  9490                           ;dc_motor.c: 259:             if (mL->power<50) {mL->power+=1;}
  9491  003C64  C01E  FFD9         	movff	turnRight@mL,fsr2l
  9492  003C68  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  9493  003C6C  0E32               	movlw	50
  9494  003C6E  60DF               	cpfslt	indf2,c
  9495  003C70  EF3C  F01E         	goto	u9961
  9496  003C74  EF3E  F01E         	goto	u9960
  9497  003C78                     u9961:
  9498  003C78  EF43  F01E         	goto	l7183
  9499  003C7C                     u9960:
  9500  003C7C  C01E  FFD9         	movff	turnRight@mL,fsr2l
  9501  003C80  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  9502  003C84  2ADF               	incf	indf2,f,c
  9503  003C86                     l7183:
  9504                           
  9505                           ;dc_motor.c: 260:             if (mR->power<50) {mR->power+=1;}
  9506  003C86  C020  FFD9         	movff	turnRight@mR,fsr2l
  9507  003C8A  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  9508  003C8E  0E32               	movlw	50
  9509  003C90  60DF               	cpfslt	indf2,c
  9510  003C92  EF4D  F01E         	goto	u9971
  9511  003C96  EF4F  F01E         	goto	u9970
  9512  003C9A                     u9971:
  9513  003C9A  EF54  F01E         	goto	l7187
  9514  003C9E                     u9970:
  9515  003C9E  C020  FFD9         	movff	turnRight@mR,fsr2l
  9516  003CA2  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  9517  003CA6  2ADF               	incf	indf2,f,c
  9518  003CA8                     l7187:
  9519                           
  9520                           ;dc_motor.c: 263:             setMotorPWM(mL);
  9521  003CA8  C01E  F013         	movff	turnRight@mL,setMotorPWM@m
  9522  003CAC  C01F  F014         	movff	turnRight@mL+1,setMotorPWM@m+1
  9523  003CB0  ECEF  F01F         	call	_setMotorPWM	;wreg free
  9524  003CB4                     
  9525                           ;dc_motor.c: 264:             setMotorPWM(mR);
  9526  003CB4  C020  F013         	movff	turnRight@mR,setMotorPWM@m
  9527  003CB8  C021  F014         	movff	turnRight@mR+1,setMotorPWM@m+1
  9528  003CBC  ECEF  F01F         	call	_setMotorPWM	;wreg free
  9529  003CC0                     
  9530                           ;dc_motor.c: 265:             _delay((unsigned long)((100)*(64000000/4000.0)));
  9531  003CC0  0E09               	movlw	9
  9532  003CC2  6E24               	movwf	(??_turnRight+1)^0,c
  9533  003CC4  0E1E               	movlw	30
  9534  003CC6  6E23               	movwf	??_turnRight^0,c
  9535  003CC8  0EE4               	movlw	228
  9536  003CCA                     u10417:
  9537  003CCA  2EE8               	decfsz	wreg,f,c
  9538  003CCC  D7FE               	bra	u10417
  9539  003CCE  2E23               	decfsz	??_turnRight^0,f,c
  9540  003CD0  D7FC               	bra	u10417
  9541  003CD2  2E24               	decfsz	(??_turnRight+1)^0,f,c
  9542  003CD4  D7FA               	bra	u10417
  9543  003CD6  D000               	nop2	
  9544  003CD8                     l239:
  9545                           
  9546                           ;dc_motor.c: 254:         while(((mL->power)<50) || ((mR->power)<50)){
  9547  003CD8  C01E  FFD9         	movff	turnRight@mL,fsr2l
  9548  003CDC  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  9549  003CE0  0E31               	movlw	49
  9550  003CE2  64DF               	cpfsgt	indf2,c
  9551  003CE4  EF76  F01E         	goto	u9981
  9552  003CE8  EF78  F01E         	goto	u9980
  9553  003CEC                     u9981:
  9554  003CEC  EF23  F01E         	goto	l7177
  9555  003CF0                     u9980:
  9556  003CF0  C020  FFD9         	movff	turnRight@mR,fsr2l
  9557  003CF4  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  9558  003CF8  0E31               	movlw	49
  9559  003CFA  64DF               	cpfsgt	indf2,c
  9560  003CFC  EF82  F01E         	goto	u9991
  9561  003D00  EF84  F01E         	goto	u9990
  9562  003D04                     u9991:
  9563  003D04  EF23  F01E         	goto	l7177
  9564  003D08                     u9990:
  9565  003D08                     
  9566                           ;dc_motor.c: 268:         LATHbits.LATH0 = 0;
  9567  003D08  9080               	bcf	128,0,c	;volatile
  9568                           
  9569                           ;dc_motor.c: 270:     } else {
  9570  003D0A  EFFB  F01E         	goto	l250
  9571  003D0E                     l7195:
  9572                           
  9573                           ;dc_motor.c: 272:         mL->direction = 0;
  9574  003D0E  EE20 F001          	lfsr	2,1
  9575  003D12  501E               	movf	turnRight@mL^0,w,c
  9576  003D14  26D9               	addwf	fsr2l,f,c
  9577  003D16  501F               	movf	(turnRight@mL+1)^0,w,c
  9578  003D18  22DA               	addwfc	fsr2h,f,c
  9579  003D1A  0E00               	movlw	0
  9580  003D1C  6EDF               	movwf	indf2,c
  9581                           
  9582                           ;dc_motor.c: 273:         mR->direction = 1;
  9583  003D1E  EE20 F001          	lfsr	2,1
  9584  003D22  5020               	movf	turnRight@mR^0,w,c
  9585  003D24  26D9               	addwf	fsr2l,f,c
  9586  003D26  5021               	movf	(turnRight@mR+1)^0,w,c
  9587  003D28  22DA               	addwfc	fsr2h,f,c
  9588  003D2A  0E01               	movlw	1
  9589  003D2C  6EDF               	movwf	indf2,c
  9590                           
  9591                           ;dc_motor.c: 276:         while(((mL->power)<50) || ((mR->power)<50)){
  9592  003D2E  EFE2  F01E         	goto	l245
  9593  003D32                     l7197:
  9594                           
  9595                           ;dc_motor.c: 278:             LATFbits.LATF0 = !LATFbits.LATF0;
  9596  003D32  A07E               	btfss	126,0,c	;volatile
  9597  003D34  EF9E  F01E         	goto	u10001
  9598  003D38  EFA2  F01E         	goto	u10000
  9599  003D3C                     u10001:
  9600  003D3C  6A23               	clrf	??_turnRight^0,c
  9601  003D3E  2A23               	incf	??_turnRight^0,f,c
  9602  003D40  EFA3  F01E         	goto	u10018
  9603  003D44                     u10000:
  9604  003D44  6A23               	clrf	??_turnRight^0,c
  9605  003D46                     u10018:
  9606  003D46  507E               	movf	126,w,c	;volatile
  9607  003D48  1823               	xorwf	??_turnRight^0,w,c
  9608  003D4A  0BFE               	andlw	-2
  9609  003D4C  1823               	xorwf	??_turnRight^0,w,c
  9610  003D4E  6E7E               	movwf	126,c	;volatile
  9611  003D50                     
  9612                           ;dc_motor.c: 281:             if (mL->power<50) {mL->power+=1;}
  9613  003D50  C01E  FFD9         	movff	turnRight@mL,fsr2l
  9614  003D54  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  9615  003D58  0E32               	movlw	50
  9616  003D5A  60DF               	cpfslt	indf2,c
  9617  003D5C  EFB2  F01E         	goto	u10021
  9618  003D60  EFB4  F01E         	goto	u10020
  9619  003D64                     u10021:
  9620  003D64  EFB9  F01E         	goto	l7203
  9621  003D68                     u10020:
  9622  003D68  C01E  FFD9         	movff	turnRight@mL,fsr2l
  9623  003D6C  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  9624  003D70  2ADF               	incf	indf2,f,c
  9625  003D72                     l7203:
  9626                           
  9627                           ;dc_motor.c: 282:             if (mR->power<50) {mR->power+=1;}
  9628  003D72  C020  FFD9         	movff	turnRight@mR,fsr2l
  9629  003D76  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  9630  003D7A  0E32               	movlw	50
  9631  003D7C  60DF               	cpfslt	indf2,c
  9632  003D7E  EFC3  F01E         	goto	u10031
  9633  003D82  EFC5  F01E         	goto	u10030
  9634  003D86                     u10031:
  9635  003D86  EFCA  F01E         	goto	l7207
  9636  003D8A                     u10030:
  9637  003D8A  C020  FFD9         	movff	turnRight@mR,fsr2l
  9638  003D8E  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  9639  003D92  2ADF               	incf	indf2,f,c
  9640  003D94                     l7207:
  9641                           
  9642                           ;dc_motor.c: 285:             setMotorPWM(mL);
  9643  003D94  C01E  F013         	movff	turnRight@mL,setMotorPWM@m
  9644  003D98  C01F  F014         	movff	turnRight@mL+1,setMotorPWM@m+1
  9645  003D9C  ECEF  F01F         	call	_setMotorPWM	;wreg free
  9646  003DA0                     
  9647                           ;dc_motor.c: 286:             setMotorPWM(mR);
  9648  003DA0  C020  F013         	movff	turnRight@mR,setMotorPWM@m
  9649  003DA4  C021  F014         	movff	turnRight@mR+1,setMotorPWM@m+1
  9650  003DA8  ECEF  F01F         	call	_setMotorPWM	;wreg free
  9651  003DAC                     
  9652                           ;dc_motor.c: 287:             _delay((unsigned long)((100)*(64000000/4000.0)));
  9653  003DAC  0E09               	movlw	9
  9654  003DAE  6E24               	movwf	(??_turnRight+1)^0,c
  9655  003DB0  0E1E               	movlw	30
  9656  003DB2  6E23               	movwf	??_turnRight^0,c
  9657  003DB4  0EE4               	movlw	228
  9658  003DB6                     u10427:
  9659  003DB6  2EE8               	decfsz	wreg,f,c
  9660  003DB8  D7FE               	bra	u10427
  9661  003DBA  2E23               	decfsz	??_turnRight^0,f,c
  9662  003DBC  D7FC               	bra	u10427
  9663  003DBE  2E24               	decfsz	(??_turnRight+1)^0,f,c
  9664  003DC0  D7FA               	bra	u10427
  9665  003DC2  D000               	nop2	
  9666  003DC4                     l245:
  9667                           
  9668                           ;dc_motor.c: 276:         while(((mL->power)<50) || ((mR->power)<50)){
  9669  003DC4  C01E  FFD9         	movff	turnRight@mL,fsr2l
  9670  003DC8  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  9671  003DCC  0E31               	movlw	49
  9672  003DCE  64DF               	cpfsgt	indf2,c
  9673  003DD0  EFEC  F01E         	goto	u10041
  9674  003DD4  EFEE  F01E         	goto	u10040
  9675  003DD8                     u10041:
  9676  003DD8  EF99  F01E         	goto	l7197
  9677  003DDC                     u10040:
  9678  003DDC  C020  FFD9         	movff	turnRight@mR,fsr2l
  9679  003DE0  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  9680  003DE4  0E31               	movlw	49
  9681  003DE6  64DF               	cpfsgt	indf2,c
  9682  003DE8  EFF8  F01E         	goto	u10051
  9683  003DEC  EFFA  F01E         	goto	u10050
  9684  003DF0                     u10051:
  9685  003DF0  EF99  F01E         	goto	l7197
  9686  003DF4                     u10050:
  9687  003DF4                     
  9688                           ;dc_motor.c: 290:         LATFbits.LATF0 = 0;
  9689  003DF4  907E               	bcf	126,0,c	;volatile
  9690  003DF6                     l250:
  9691  003DF6  0012               	return		;funcret
  9692  003DF8                     __end_of_turnRight:
  9693                           	callstack 0
  9694                           
  9695 ;; *************** function _turnLeft *****************
  9696 ;; Defined at:
  9697 ;;		line 194 in file "dc_motor.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  mL              2   29[COMRAM] PTR struct .
  9700 ;;		 -> main@motorL(9), 
  9701 ;;  mR              2   31[COMRAM] PTR struct .
  9702 ;;		 -> main@motorR(9), 
  9703 ;;  deg             1   33[COMRAM] unsigned char 
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;		None
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1    wreg      void 
  9708 ;; Registers used:
  9709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9715 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9719 ;;Total ram usage:        7 bytes
  9720 ;; Hardware stack levels used: 1
  9721 ;; Hardware stack levels required when called: 7
  9722 ;; This function calls:
  9723 ;;		_setMotorPWM
  9724 ;; This function is called by:
  9725 ;;		_read_card_RGB
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text34
  9730  003DF8                     __ptext34:
  9731                           	callstack 0
  9732  003DF8                     _turnLeft:
  9733                           	callstack 22
  9734  003DF8                     
  9735                           ;dc_motor.c: 194: void turnLeft(DC_motor *mL, DC_motor *mR, unsigned char deg);dc_motor.
      +                          c: 195: {;dc_motor.c: 196:     if (returnhome_flag==0) {
  9736  003DF8  505A               	movf	_returnhome_flag^0,w,c	;volatile
  9737  003DFA  A4D8               	btfss	status,2,c
  9738  003DFC  EF02  F01F         	goto	u9801
  9739  003E00  EF04  F01F         	goto	u9800
  9740  003E04                     u9801:
  9741  003E04  EF7A  F01F         	goto	l7153
  9742  003E08                     u9800:
  9743  003E08                     
  9744                           ;dc_motor.c: 198:         mL->direction = 0;
  9745  003E08  EE20 F001          	lfsr	2,1
  9746  003E0C  501E               	movf	turnLeft@mL^0,w,c
  9747  003E0E  26D9               	addwf	fsr2l,f,c
  9748  003E10  501F               	movf	(turnLeft@mL+1)^0,w,c
  9749  003E12  22DA               	addwfc	fsr2h,f,c
  9750  003E14  0E00               	movlw	0
  9751  003E16  6EDF               	movwf	indf2,c
  9752                           
  9753                           ;dc_motor.c: 199:         mR->direction = 1;
  9754  003E18  EE20 F001          	lfsr	2,1
  9755  003E1C  5020               	movf	turnLeft@mR^0,w,c
  9756  003E1E  26D9               	addwf	fsr2l,f,c
  9757  003E20  5021               	movf	(turnLeft@mR+1)^0,w,c
  9758  003E22  22DA               	addwfc	fsr2h,f,c
  9759  003E24  0E01               	movlw	1
  9760  003E26  6EDF               	movwf	indf2,c
  9761                           
  9762                           ;dc_motor.c: 202:         while(((mL->power)<50) || ((mR->power)<50)){
  9763  003E28  EF5F  F01F         	goto	l224
  9764  003E2C                     l7135:
  9765                           
  9766                           ;dc_motor.c: 204:             LATFbits.LATF0 = !LATFbits.LATF0;
  9767  003E2C  A07E               	btfss	126,0,c	;volatile
  9768  003E2E  EF1B  F01F         	goto	u9811
  9769  003E32  EF1F  F01F         	goto	u9810
  9770  003E36                     u9811:
  9771  003E36  6A23               	clrf	??_turnLeft^0,c
  9772  003E38  2A23               	incf	??_turnLeft^0,f,c
  9773  003E3A  EF20  F01F         	goto	u9828
  9774  003E3E                     u9810:
  9775  003E3E  6A23               	clrf	??_turnLeft^0,c
  9776  003E40                     u9828:
  9777  003E40  507E               	movf	126,w,c	;volatile
  9778  003E42  1823               	xorwf	??_turnLeft^0,w,c
  9779  003E44  0BFE               	andlw	-2
  9780  003E46  1823               	xorwf	??_turnLeft^0,w,c
  9781  003E48  6E7E               	movwf	126,c	;volatile
  9782  003E4A                     
  9783                           ;dc_motor.c: 207:             if (mL->power<50) {mL->power+=1;}
  9784  003E4A  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  9785  003E4E  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  9786  003E52  0E32               	movlw	50
  9787  003E54  60DF               	cpfslt	indf2,c
  9788  003E56  EF2F  F01F         	goto	u9831
  9789  003E5A  EF31  F01F         	goto	u9830
  9790  003E5E                     u9831:
  9791  003E5E  EF36  F01F         	goto	l7141
  9792  003E62                     u9830:
  9793  003E62  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  9794  003E66  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  9795  003E6A  2ADF               	incf	indf2,f,c
  9796  003E6C                     l7141:
  9797                           
  9798                           ;dc_motor.c: 208:             if (mR->power<50) {mR->power+=1;}
  9799  003E6C  C020  FFD9         	movff	turnLeft@mR,fsr2l
  9800  003E70  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  9801  003E74  0E32               	movlw	50
  9802  003E76  60DF               	cpfslt	indf2,c
  9803  003E78  EF40  F01F         	goto	u9841
  9804  003E7C  EF42  F01F         	goto	u9840
  9805  003E80                     u9841:
  9806  003E80  EF47  F01F         	goto	l7145
  9807  003E84                     u9840:
  9808  003E84  C020  FFD9         	movff	turnLeft@mR,fsr2l
  9809  003E88  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  9810  003E8C  2ADF               	incf	indf2,f,c
  9811  003E8E                     l7145:
  9812                           
  9813                           ;dc_motor.c: 211:             setMotorPWM(mL);
  9814  003E8E  C01E  F013         	movff	turnLeft@mL,setMotorPWM@m
  9815  003E92  C01F  F014         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9816  003E96  ECEF  F01F         	call	_setMotorPWM	;wreg free
  9817  003E9A                     
  9818                           ;dc_motor.c: 212:             setMotorPWM(mR);
  9819  003E9A  C020  F013         	movff	turnLeft@mR,setMotorPWM@m
  9820  003E9E  C021  F014         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9821  003EA2  ECEF  F01F         	call	_setMotorPWM	;wreg free
  9822  003EA6                     
  9823                           ;dc_motor.c: 213:             _delay((unsigned long)((100)*(64000000/4000.0)));
  9824  003EA6  0E09               	movlw	9
  9825  003EA8  6E24               	movwf	(??_turnLeft+1)^0,c
  9826  003EAA  0E1E               	movlw	30
  9827  003EAC  6E23               	movwf	??_turnLeft^0,c
  9828  003EAE  0EE4               	movlw	228
  9829  003EB0                     u10437:
  9830  003EB0  2EE8               	decfsz	wreg,f,c
  9831  003EB2  D7FE               	bra	u10437
  9832  003EB4  2E23               	decfsz	??_turnLeft^0,f,c
  9833  003EB6  D7FC               	bra	u10437
  9834  003EB8  2E24               	decfsz	(??_turnLeft+1)^0,f,c
  9835  003EBA  D7FA               	bra	u10437
  9836  003EBC  D000               	nop2	
  9837  003EBE                     l224:
  9838                           
  9839                           ;dc_motor.c: 202:         while(((mL->power)<50) || ((mR->power)<50)){
  9840  003EBE  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  9841  003EC2  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  9842  003EC6  0E31               	movlw	49
  9843  003EC8  64DF               	cpfsgt	indf2,c
  9844  003ECA  EF69  F01F         	goto	u9851
  9845  003ECE  EF6B  F01F         	goto	u9850
  9846  003ED2                     u9851:
  9847  003ED2  EF16  F01F         	goto	l7135
  9848  003ED6                     u9850:
  9849  003ED6  C020  FFD9         	movff	turnLeft@mR,fsr2l
  9850  003EDA  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  9851  003EDE  0E31               	movlw	49
  9852  003EE0  64DF               	cpfsgt	indf2,c
  9853  003EE2  EF75  F01F         	goto	u9861
  9854  003EE6  EF77  F01F         	goto	u9860
  9855  003EEA                     u9861:
  9856  003EEA  EF16  F01F         	goto	l7135
  9857  003EEE                     u9860:
  9858  003EEE                     
  9859                           ;dc_motor.c: 216:         LATFbits.LATF0 = 0;
  9860  003EEE  907E               	bcf	126,0,c	;volatile
  9861                           
  9862                           ;dc_motor.c: 218:     } else {
  9863  003EF0  EFEE  F01F         	goto	l235
  9864  003EF4                     l7153:
  9865                           
  9866                           ;dc_motor.c: 220:         mL->direction = 1;
  9867  003EF4  EE20 F001          	lfsr	2,1
  9868  003EF8  501E               	movf	turnLeft@mL^0,w,c
  9869  003EFA  26D9               	addwf	fsr2l,f,c
  9870  003EFC  501F               	movf	(turnLeft@mL+1)^0,w,c
  9871  003EFE  22DA               	addwfc	fsr2h,f,c
  9872  003F00  0E01               	movlw	1
  9873  003F02  6EDF               	movwf	indf2,c
  9874                           
  9875                           ;dc_motor.c: 221:         mR->direction = 0;
  9876  003F04  EE20 F001          	lfsr	2,1
  9877  003F08  5020               	movf	turnLeft@mR^0,w,c
  9878  003F0A  26D9               	addwf	fsr2l,f,c
  9879  003F0C  5021               	movf	(turnLeft@mR+1)^0,w,c
  9880  003F0E  22DA               	addwfc	fsr2h,f,c
  9881  003F10  0E00               	movlw	0
  9882  003F12  6EDF               	movwf	indf2,c
  9883                           
  9884                           ;dc_motor.c: 224:         while(((mL->power)<50) || ((mR->power)<50)){
  9885  003F14  EFD5  F01F         	goto	l230
  9886  003F18                     l7155:
  9887                           
  9888                           ;dc_motor.c: 226:             LATHbits.LATH0 = !LATHbits.LATH0;
  9889  003F18  A080               	btfss	128,0,c	;volatile
  9890  003F1A  EF91  F01F         	goto	u9871
  9891  003F1E  EF95  F01F         	goto	u9870
  9892  003F22                     u9871:
  9893  003F22  6A23               	clrf	??_turnLeft^0,c
  9894  003F24  2A23               	incf	??_turnLeft^0,f,c
  9895  003F26  EF96  F01F         	goto	u9888
  9896  003F2A                     u9870:
  9897  003F2A  6A23               	clrf	??_turnLeft^0,c
  9898  003F2C                     u9888:
  9899  003F2C  5080               	movf	128,w,c	;volatile
  9900  003F2E  1823               	xorwf	??_turnLeft^0,w,c
  9901  003F30  0BFE               	andlw	-2
  9902  003F32  1823               	xorwf	??_turnLeft^0,w,c
  9903  003F34  6E80               	movwf	128,c	;volatile
  9904  003F36                     
  9905                           ;dc_motor.c: 229:             if (mL->power<50) {mL->power+=1;}
  9906  003F36  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  9907  003F3A  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  9908  003F3E  0E32               	movlw	50
  9909  003F40  60DF               	cpfslt	indf2,c
  9910  003F42  EFA5  F01F         	goto	u9891
  9911  003F46  EFA7  F01F         	goto	u9890
  9912  003F4A                     u9891:
  9913  003F4A  EFAC  F01F         	goto	l7161
  9914  003F4E                     u9890:
  9915  003F4E  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  9916  003F52  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  9917  003F56  2ADF               	incf	indf2,f,c
  9918  003F58                     l7161:
  9919                           
  9920                           ;dc_motor.c: 230:             if (mR->power<50) {mR->power+=1;}
  9921  003F58  C020  FFD9         	movff	turnLeft@mR,fsr2l
  9922  003F5C  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  9923  003F60  0E32               	movlw	50
  9924  003F62  60DF               	cpfslt	indf2,c
  9925  003F64  EFB6  F01F         	goto	u9901
  9926  003F68  EFB8  F01F         	goto	u9900
  9927  003F6C                     u9901:
  9928  003F6C  EFBD  F01F         	goto	l7165
  9929  003F70                     u9900:
  9930  003F70  C020  FFD9         	movff	turnLeft@mR,fsr2l
  9931  003F74  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  9932  003F78  2ADF               	incf	indf2,f,c
  9933  003F7A                     l7165:
  9934                           
  9935                           ;dc_motor.c: 233:             setMotorPWM(mL);
  9936  003F7A  C01E  F013         	movff	turnLeft@mL,setMotorPWM@m
  9937  003F7E  C01F  F014         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9938  003F82  ECEF  F01F         	call	_setMotorPWM	;wreg free
  9939  003F86                     
  9940                           ;dc_motor.c: 234:             setMotorPWM(mR);
  9941  003F86  C020  F013         	movff	turnLeft@mR,setMotorPWM@m
  9942  003F8A  C021  F014         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9943  003F8E  ECEF  F01F         	call	_setMotorPWM	;wreg free
  9944  003F92                     
  9945                           ;dc_motor.c: 235:             _delay((unsigned long)((100)*(64000000/4000.0)));
  9946  003F92  0E09               	movlw	9
  9947  003F94  6E24               	movwf	(??_turnLeft+1)^0,c
  9948  003F96  0E1E               	movlw	30
  9949  003F98  6E23               	movwf	??_turnLeft^0,c
  9950  003F9A  0EE4               	movlw	228
  9951  003F9C                     u10447:
  9952  003F9C  2EE8               	decfsz	wreg,f,c
  9953  003F9E  D7FE               	bra	u10447
  9954  003FA0  2E23               	decfsz	??_turnLeft^0,f,c
  9955  003FA2  D7FC               	bra	u10447
  9956  003FA4  2E24               	decfsz	(??_turnLeft+1)^0,f,c
  9957  003FA6  D7FA               	bra	u10447
  9958  003FA8  D000               	nop2	
  9959  003FAA                     l230:
  9960                           
  9961                           ;dc_motor.c: 224:         while(((mL->power)<50) || ((mR->power)<50)){
  9962  003FAA  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  9963  003FAE  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  9964  003FB2  0E31               	movlw	49
  9965  003FB4  64DF               	cpfsgt	indf2,c
  9966  003FB6  EFDF  F01F         	goto	u9911
  9967  003FBA  EFE1  F01F         	goto	u9910
  9968  003FBE                     u9911:
  9969  003FBE  EF8C  F01F         	goto	l7155
  9970  003FC2                     u9910:
  9971  003FC2  C020  FFD9         	movff	turnLeft@mR,fsr2l
  9972  003FC6  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  9973  003FCA  0E31               	movlw	49
  9974  003FCC  64DF               	cpfsgt	indf2,c
  9975  003FCE  EFEB  F01F         	goto	u9921
  9976  003FD2  EFED  F01F         	goto	u9920
  9977  003FD6                     u9921:
  9978  003FD6  EF8C  F01F         	goto	l7155
  9979  003FDA                     u9920:
  9980  003FDA                     
  9981                           ;dc_motor.c: 238:         LATHbits.LATH0 = 0;
  9982  003FDA  9080               	bcf	128,0,c	;volatile
  9983  003FDC                     l235:
  9984  003FDC  0012               	return		;funcret
  9985  003FDE                     __end_of_turnLeft:
  9986                           	callstack 0
  9987                           
  9988 ;; *************** function _stop *****************
  9989 ;; Defined at:
  9990 ;;		line 172 in file "dc_motor.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  mL              2   29[COMRAM] PTR struct .
  9993 ;;		 -> main@motorL(9), 
  9994 ;;  mR              2   31[COMRAM] PTR struct .
  9995 ;;		 -> main@motorR(9), 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;		None
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  1    wreg      void 
 10000 ;; Registers used:
 10001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10011 ;;Total ram usage:        6 bytes
 10012 ;; Hardware stack levels used: 1
 10013 ;; Hardware stack levels required when called: 7
 10014 ;; This function calls:
 10015 ;;		_setMotorPWM
 10016 ;; This function is called by:
 10017 ;;		_read_card_RGB
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text35
 10022  004F8A                     __ptext35:
 10023                           	callstack 0
 10024  004F8A                     _stop:
 10025                           	callstack 22
 10026  004F8A                     
 10027                           ;dc_motor.c: 172: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 173: {;dc_motor.c: 1
      +                          74:     LATDbits.LATD4 = 1;
 10028  004F8A  887C               	bsf	124,4,c	;volatile
 10029                           
 10030                           ;dc_motor.c: 177:     while(((mL->power)>0) && ((mR->power)>0)){
 10031  004F8C  EFF8  F027         	goto	l7127
 10032  004F90                     l7119:
 10033                           
 10034                           ;dc_motor.c: 178:         mL->power = mL->power - 1;
 10035  004F90  C01E  FFD9         	movff	stop@mL,fsr2l
 10036  004F94  C01F  FFDA         	movff	stop@mL+1,fsr2h
 10037  004F98  50DF               	movf	indf2,w,c
 10038  004F9A  6E22               	movwf	??_stop^0,c
 10039  004F9C  0422               	decf	??_stop^0,w,c
 10040  004F9E  C01E  FFD9         	movff	stop@mL,fsr2l
 10041  004FA2  C01F  FFDA         	movff	stop@mL+1,fsr2h
 10042  004FA6  6EDF               	movwf	indf2,c
 10043                           
 10044                           ;dc_motor.c: 179:         mR->power = mR->power - 1;
 10045  004FA8  C020  FFD9         	movff	stop@mR,fsr2l
 10046  004FAC  C021  FFDA         	movff	stop@mR+1,fsr2h
 10047  004FB0  50DF               	movf	indf2,w,c
 10048  004FB2  6E22               	movwf	??_stop^0,c
 10049  004FB4  0422               	decf	??_stop^0,w,c
 10050  004FB6  C020  FFD9         	movff	stop@mR,fsr2l
 10051  004FBA  C021  FFDA         	movff	stop@mR+1,fsr2h
 10052  004FBE  6EDF               	movwf	indf2,c
 10053  004FC0                     
 10054                           ;dc_motor.c: 182:         setMotorPWM(mL);
 10055  004FC0  C01E  F013         	movff	stop@mL,setMotorPWM@m
 10056  004FC4  C01F  F014         	movff	stop@mL+1,setMotorPWM@m+1
 10057  004FC8  ECEF  F01F         	call	_setMotorPWM	;wreg free
 10058  004FCC                     
 10059                           ;dc_motor.c: 183:         setMotorPWM(mR);
 10060  004FCC  C020  F013         	movff	stop@mR,setMotorPWM@m
 10061  004FD0  C021  F014         	movff	stop@mR+1,setMotorPWM@m+1
 10062  004FD4  ECEF  F01F         	call	_setMotorPWM	;wreg free
 10063  004FD8                     
 10064                           ;dc_motor.c: 184:         _delay((unsigned long)((100)*(64000000/4000.0)));
 10065  004FD8  0E09               	movlw	9
 10066  004FDA  6E23               	movwf	(??_stop+1)^0,c
 10067  004FDC  0E1E               	movlw	30
 10068  004FDE  6E22               	movwf	??_stop^0,c
 10069  004FE0  0EE4               	movlw	228
 10070  004FE2                     u10457:
 10071  004FE2  2EE8               	decfsz	wreg,f,c
 10072  004FE4  D7FE               	bra	u10457
 10073  004FE6  2E22               	decfsz	??_stop^0,f,c
 10074  004FE8  D7FC               	bra	u10457
 10075  004FEA  2E23               	decfsz	(??_stop+1)^0,f,c
 10076  004FEC  D7FA               	bra	u10457
 10077  004FEE  D000               	nop2	
 10078  004FF0                     l7127:
 10079                           
 10080                           ;dc_motor.c: 177:     while(((mL->power)>0) && ((mR->power)>0)){
 10081  004FF0  C01E  FFD9         	movff	stop@mL,fsr2l
 10082  004FF4  C01F  FFDA         	movff	stop@mL+1,fsr2h
 10083  004FF8  50DF               	movf	indf2,w,c
 10084  004FFA  B4D8               	btfsc	status,2,c
 10085  004FFC  EF02  F028         	goto	u9781
 10086  005000  EF04  F028         	goto	u9780
 10087  005004                     u9781:
 10088  005004  EF10  F028         	goto	l219
 10089  005008                     u9780:
 10090  005008  C020  FFD9         	movff	stop@mR,fsr2l
 10091  00500C  C021  FFDA         	movff	stop@mR+1,fsr2h
 10092  005010  50DF               	movf	indf2,w,c
 10093  005012  A4D8               	btfss	status,2,c
 10094  005014  EF0E  F028         	goto	u9791
 10095  005018  EF10  F028         	goto	u9790
 10096  00501C                     u9791:
 10097  00501C  EFC8  F027         	goto	l7119
 10098  005020                     u9790:
 10099  005020                     l219:
 10100                           
 10101                           ;dc_motor.c: 187:     LATDbits.LATD4 = 0;
 10102  005020  987C               	bcf	124,4,c	;volatile
 10103  005022  0012               	return		;funcret
 10104  005024                     __end_of_stop:
 10105                           	callstack 0
 10106                           
 10107 ;; *************** function _reverse *****************
 10108 ;; Defined at:
 10109 ;;		line 151 in file "dc_motor.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  mL              2   29[COMRAM] PTR struct .
 10112 ;;		 -> main@motorL(9), 
 10113 ;;  mR              2   31[COMRAM] PTR struct .
 10114 ;;		 -> main@motorR(9), 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10130 ;;Total ram usage:        6 bytes
 10131 ;; Hardware stack levels used: 1
 10132 ;; Hardware stack levels required when called: 7
 10133 ;; This function calls:
 10134 ;;		_setMotorPWM
 10135 ;; This function is called by:
 10136 ;;		_read_card_RGB
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text36
 10141  005024                     __ptext36:
 10142                           	callstack 0
 10143  005024                     _reverse:
 10144                           	callstack 22
 10145  005024                     
 10146                           ;dc_motor.c: 151: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_motor.c
      +                          : 154:     mL->direction = 0;
 10147  005024  EE20 F001          	lfsr	2,1
 10148  005028  501E               	movf	reverse@mL^0,w,c
 10149  00502A  26D9               	addwf	fsr2l,f,c
 10150  00502C  501F               	movf	(reverse@mL+1)^0,w,c
 10151  00502E  22DA               	addwfc	fsr2h,f,c
 10152  005030  0E00               	movlw	0
 10153  005032  6EDF               	movwf	indf2,c
 10154                           
 10155                           ;dc_motor.c: 155:     mR->direction = 0;
 10156  005034  EE20 F001          	lfsr	2,1
 10157  005038  5020               	movf	reverse@mR^0,w,c
 10158  00503A  26D9               	addwf	fsr2l,f,c
 10159  00503C  5021               	movf	(reverse@mR+1)^0,w,c
 10160  00503E  22DA               	addwfc	fsr2h,f,c
 10161  005040  0E00               	movlw	0
 10162  005042  6EDF               	movwf	indf2,c
 10163                           
 10164                           ;dc_motor.c: 158:     while(((mL->power)<100) && ((mR->power)<100)){
 10165  005044  EF46  F028         	goto	l207
 10166  005048                     l7107:
 10167                           
 10168                           ;dc_motor.c: 159:         mL->power+=1;
 10169  005048  C01E  FFD9         	movff	reverse@mL,fsr2l
 10170  00504C  C01F  FFDA         	movff	reverse@mL+1,fsr2h
 10171  005050  2ADF               	incf	indf2,f,c
 10172                           
 10173                           ;dc_motor.c: 160:         mR->power+=1;
 10174  005052  C020  FFD9         	movff	reverse@mR,fsr2l
 10175  005056  C021  FFDA         	movff	reverse@mR+1,fsr2h
 10176  00505A  2ADF               	incf	indf2,f,c
 10177  00505C                     
 10178                           ;dc_motor.c: 162:         setMotorPWM(mL);
 10179  00505C  C01E  F013         	movff	reverse@mL,setMotorPWM@m
 10180  005060  C01F  F014         	movff	reverse@mL+1,setMotorPWM@m+1
 10181  005064  ECEF  F01F         	call	_setMotorPWM	;wreg free
 10182  005068                     
 10183                           ;dc_motor.c: 163:         setMotorPWM(mR);
 10184  005068  C020  F013         	movff	reverse@mR,setMotorPWM@m
 10185  00506C  C021  F014         	movff	reverse@mR+1,setMotorPWM@m+1
 10186  005070  ECEF  F01F         	call	_setMotorPWM	;wreg free
 10187  005074                     
 10188                           ;dc_motor.c: 164:         _delay((unsigned long)((100)*(64000000/4000.0)));
 10189  005074  0E09               	movlw	9
 10190  005076  6E23               	movwf	(??_reverse+1)^0,c
 10191  005078  0E1E               	movlw	30
 10192  00507A  6E22               	movwf	??_reverse^0,c
 10193  00507C  0EE4               	movlw	228
 10194  00507E                     u10467:
 10195  00507E  2EE8               	decfsz	wreg,f,c
 10196  005080  D7FE               	bra	u10467
 10197  005082  2E22               	decfsz	??_reverse^0,f,c
 10198  005084  D7FC               	bra	u10467
 10199  005086  2E23               	decfsz	(??_reverse+1)^0,f,c
 10200  005088  D7FA               	bra	u10467
 10201  00508A  D000               	nop2	
 10202  00508C                     l207:
 10203                           
 10204                           ;dc_motor.c: 158:     while(((mL->power)<100) && ((mR->power)<100)){
 10205  00508C  C01E  FFD9         	movff	reverse@mL,fsr2l
 10206  005090  C01F  FFDA         	movff	reverse@mL+1,fsr2h
 10207  005094  0E64               	movlw	100
 10208  005096  60DF               	cpfslt	indf2,c
 10209  005098  EF50  F028         	goto	u9761
 10210  00509C  EF52  F028         	goto	u9760
 10211  0050A0                     u9761:
 10212  0050A0  EF5E  F028         	goto	l212
 10213  0050A4                     u9760:
 10214  0050A4  C020  FFD9         	movff	reverse@mR,fsr2l
 10215  0050A8  C021  FFDA         	movff	reverse@mR+1,fsr2h
 10216  0050AC  0E63               	movlw	99
 10217  0050AE  64DF               	cpfsgt	indf2,c
 10218  0050B0  EF5C  F028         	goto	u9771
 10219  0050B4  EF5E  F028         	goto	u9770
 10220  0050B8                     u9771:
 10221  0050B8  EF24  F028         	goto	l7107
 10222  0050BC                     u9770:
 10223  0050BC                     l212:
 10224  0050BC  0012               	return		;funcret
 10225  0050BE                     __end_of_reverse:
 10226                           	callstack 0
 10227                           
 10228 ;; *************** function _setMotorPWM *****************
 10229 ;; Defined at:
 10230 ;;		line 52 in file "dc_motor.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  m               2   18[COMRAM] PTR struct .
 10233 ;;		 -> main@motorR(9), main@motorL(9), 
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;  PWMduty         2   27[COMRAM] int 
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1    wreg      void 
 10238 ;; Registers used:
 10239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/0
 10242 ;;		On exit  : 0/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10247 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10248 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10249 ;;Total ram usage:       11 bytes
 10250 ;; Hardware stack levels used: 1
 10251 ;; Hardware stack levels required when called: 6
 10252 ;; This function calls:
 10253 ;;		___awdiv
 10254 ;;		___wmul
 10255 ;; This function is called by:
 10256 ;;		_reverse
 10257 ;;		_stop
 10258 ;;		_turnLeft
 10259 ;;		_turnRight
 10260 ;;		_forward
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264                           	psect	text37
 10265  003FDE                     __ptext37:
 10266                           	callstack 0
 10267  003FDE                     _setMotorPWM:
 10268                           	callstack 22
 10269  003FDE                     
 10270                           ;dc_motor.c: 52: void setMotorPWM(DC_motor *m);dc_motor.c: 53: {;dc_motor.c: 54:  int PW
      +                          Mduty;;dc_motor.c: 56:  if (m->direction){
 10271  003FDE  EE20 F001          	lfsr	2,1
 10272  003FE2  5013               	movf	setMotorPWM@m^0,w,c
 10273  003FE4  26D9               	addwf	fsr2l,f,c
 10274  003FE6  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10275  003FE8  22DA               	addwfc	fsr2h,f,c
 10276  003FEA  50DF               	movf	indf2,w,c
 10277  003FEC  B4D8               	btfsc	status,2,c
 10278  003FEE  EFFB  F01F         	goto	u9561
 10279  003FF2  EFFD  F01F         	goto	u9560
 10280  003FF6                     u9561:
 10281  003FF6  EF2E  F020         	goto	l6995
 10282  003FFA                     u9560:
 10283  003FFA                     
 10284                           ;dc_motor.c: 57:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 10285  003FFA  C013  FFD9         	movff	setMotorPWM@m,fsr2l
 10286  003FFE  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10287  004002  50DF               	movf	indf2,w,c
 10288  004004  6E15               	movwf	??_setMotorPWM^0,c
 10289  004006  5015               	movf	??_setMotorPWM^0,w,c
 10290  004008  6E05               	movwf	___wmul@multiplier^0,c
 10291  00400A  6A06               	clrf	(___wmul@multiplier+1)^0,c
 10292  00400C  EE20 F007          	lfsr	2,7
 10293  004010  5013               	movf	setMotorPWM@m^0,w,c
 10294  004012  26D9               	addwf	fsr2l,f,c
 10295  004014  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10296  004016  22DA               	addwfc	fsr2h,f,c
 10297  004018  CFDE F007          	movff	postinc2,___wmul@multiplicand
 10298  00401C  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
 10299  004020  ECD5  F02B         	call	___wmul	;wreg free
 10300  004024  C005  F00B         	movff	?___wmul,___awdiv@dividend
 10301  004028  C006  F00C         	movff	?___wmul+1,___awdiv@dividend+1
 10302  00402C  0E00               	movlw	0
 10303  00402E  6E0E               	movwf	(___awdiv@divisor+1)^0,c
 10304  004030  0E64               	movlw	100
 10305  004032  6E0D               	movwf	___awdiv@divisor^0,c
 10306  004034  EC55  F026         	call	___awdiv	;wreg free
 10307  004038  EE20 F007          	lfsr	2,7
 10308  00403C  5013               	movf	setMotorPWM@m^0,w,c
 10309  00403E  26D9               	addwf	fsr2l,f,c
 10310  004040  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10311  004042  22DA               	addwfc	fsr2h,f,c
 10312  004044  CFDE F016          	movff	postinc2,??_setMotorPWM+1
 10313  004048  CFDD F017          	movff	postdec2,??_setMotorPWM+2
 10314  00404C  500B               	movf	?___awdiv^0,w,c
 10315  00404E  5C16               	subwf	(??_setMotorPWM+1)^0,w,c
 10316  004050  6E1C               	movwf	setMotorPWM@PWMduty^0,c
 10317  004052  500C               	movf	(?___awdiv+1)^0,w,c
 10318  004054  5817               	subwfb	(??_setMotorPWM+2)^0,w,c
 10319  004056  6E1D               	movwf	(setMotorPWM@PWMduty+1)^0,c
 10320                           
 10321                           ;dc_motor.c: 58:  } else {
 10322  004058  EF51  F020         	goto	l6997
 10323  00405C                     l6995:
 10324                           
 10325                           ;dc_motor.c: 59:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 10326  00405C  C013  FFD9         	movff	setMotorPWM@m,fsr2l
 10327  004060  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10328  004064  50DF               	movf	indf2,w,c
 10329  004066  6E15               	movwf	??_setMotorPWM^0,c
 10330  004068  5015               	movf	??_setMotorPWM^0,w,c
 10331  00406A  6E05               	movwf	___wmul@multiplier^0,c
 10332  00406C  6A06               	clrf	(___wmul@multiplier+1)^0,c
 10333  00406E  EE20 F007          	lfsr	2,7
 10334  004072  5013               	movf	setMotorPWM@m^0,w,c
 10335  004074  26D9               	addwf	fsr2l,f,c
 10336  004076  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10337  004078  22DA               	addwfc	fsr2h,f,c
 10338  00407A  CFDE F007          	movff	postinc2,___wmul@multiplicand
 10339  00407E  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
 10340  004082  ECD5  F02B         	call	___wmul	;wreg free
 10341  004086  C005  F00B         	movff	?___wmul,___awdiv@dividend
 10342  00408A  C006  F00C         	movff	?___wmul+1,___awdiv@dividend+1
 10343  00408E  0E00               	movlw	0
 10344  004090  6E0E               	movwf	(___awdiv@divisor+1)^0,c
 10345  004092  0E64               	movlw	100
 10346  004094  6E0D               	movwf	___awdiv@divisor^0,c
 10347  004096  EC55  F026         	call	___awdiv	;wreg free
 10348  00409A  C00B  F01C         	movff	?___awdiv,setMotorPWM@PWMduty
 10349  00409E  C00C  F01D         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 10350  0040A2                     l6997:
 10351                           
 10352                           ;dc_motor.c: 62:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
 10353  0040A2  EE20 F002          	lfsr	2,2
 10354  0040A6  5013               	movf	setMotorPWM@m^0,w,c
 10355  0040A8  26D9               	addwf	fsr2l,f,c
 10356  0040AA  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10357  0040AC  22DA               	addwfc	fsr2h,f,c
 10358  0040AE  CFDE F015          	movff	postinc2,??_setMotorPWM
 10359  0040B2  CFDD F016          	movff	postdec2,??_setMotorPWM+1
 10360  0040B6  C015  FFD9         	movff	??_setMotorPWM,fsr2l
 10361  0040BA  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10362  0040BE  C01C  FFDF         	movff	setMotorPWM@PWMduty,indf2
 10363  0040C2                     
 10364                           ;dc_motor.c: 64:  if (m->direction){
 10365  0040C2  EE20 F001          	lfsr	2,1
 10366  0040C6  5013               	movf	setMotorPWM@m^0,w,c
 10367  0040C8  26D9               	addwf	fsr2l,f,c
 10368  0040CA  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10369  0040CC  22DA               	addwfc	fsr2h,f,c
 10370  0040CE  50DF               	movf	indf2,w,c
 10371  0040D0  B4D8               	btfsc	status,2,c
 10372  0040D2  EF6D  F020         	goto	u9571
 10373  0040D6  EF6F  F020         	goto	u9570
 10374  0040DA                     u9571:
 10375  0040DA  EFA4  F020         	goto	l7003
 10376  0040DE                     u9570:
 10377  0040DE                     
 10378                           ;dc_motor.c: 65:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
 10379  0040DE  EE20 F004          	lfsr	2,4
 10380  0040E2  5013               	movf	setMotorPWM@m^0,w,c
 10381  0040E4  26D9               	addwf	fsr2l,f,c
 10382  0040E6  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10383  0040E8  22DA               	addwfc	fsr2h,f,c
 10384  0040EA  CFDE F015          	movff	postinc2,??_setMotorPWM
 10385  0040EE  CFDD F016          	movff	postdec2,??_setMotorPWM+1
 10386  0040F2  C015  FFD9         	movff	??_setMotorPWM,fsr2l
 10387  0040F6  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10388  0040FA  EE10 F004          	lfsr	1,4
 10389  0040FE  5013               	movf	setMotorPWM@m^0,w,c
 10390  004100  26E1               	addwf	fsr1l,f,c
 10391  004102  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10392  004104  22E2               	addwfc	fsr1h,f,c
 10393  004106  CFE6 F017          	movff	postinc1,??_setMotorPWM+2
 10394  00410A  CFE5 F018          	movff	postdec1,??_setMotorPWM+3
 10395  00410E  C017  FFE1         	movff	??_setMotorPWM+2,fsr1l
 10396  004112  C018  FFE2         	movff	??_setMotorPWM+3,fsr1h
 10397  004116  50E7               	movf	indf1,w,c
 10398  004118  6E19               	movwf	(??_setMotorPWM+4)^0,c
 10399  00411A  EE10 F006          	lfsr	1,6
 10400  00411E  5013               	movf	setMotorPWM@m^0,w,c
 10401  004120  26E1               	addwf	fsr1l,f,c
 10402  004122  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10403  004124  22E2               	addwfc	fsr1h,f,c
 10404  004126  50E7               	movf	indf1,w,c
 10405  004128  6E1A               	movwf	(??_setMotorPWM+5)^0,c
 10406  00412A  0E01               	movlw	1
 10407  00412C  6E1B               	movwf	(??_setMotorPWM+6)^0,c
 10408  00412E  2A1A               	incf	(??_setMotorPWM+5)^0,f,c
 10409  004130  EF9C  F020         	goto	u9584
 10410  004134                     u9585:
 10411  004134  90D8               	bcf	status,0,c
 10412  004136  361B               	rlcf	(??_setMotorPWM+6)^0,f,c
 10413  004138                     u9584:
 10414  004138  2E1A               	decfsz	(??_setMotorPWM+5)^0,f,c
 10415  00413A  EF9A  F020         	goto	u9585
 10416  00413E  501B               	movf	(??_setMotorPWM+6)^0,w,c
 10417  004140  1019               	iorwf	(??_setMotorPWM+4)^0,w,c
 10418  004142  6EDF               	movwf	indf2,c
 10419                           
 10420                           ;dc_motor.c: 66:  } else {
 10421  004144  EFD8  F020         	goto	l184
 10422  004148                     l7003:
 10423                           
 10424                           ;dc_motor.c: 67:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin))))
      +                          ;
 10425  004148  EE20 F004          	lfsr	2,4
 10426  00414C  5013               	movf	setMotorPWM@m^0,w,c
 10427  00414E  26D9               	addwf	fsr2l,f,c
 10428  004150  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10429  004152  22DA               	addwfc	fsr2h,f,c
 10430  004154  CFDE F015          	movff	postinc2,??_setMotorPWM
 10431  004158  CFDD F016          	movff	postdec2,??_setMotorPWM+1
 10432  00415C  C015  FFD9         	movff	??_setMotorPWM,fsr2l
 10433  004160  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10434  004164  EE10 F004          	lfsr	1,4
 10435  004168  5013               	movf	setMotorPWM@m^0,w,c
 10436  00416A  26E1               	addwf	fsr1l,f,c
 10437  00416C  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10438  00416E  22E2               	addwfc	fsr1h,f,c
 10439  004170  CFE6 F017          	movff	postinc1,??_setMotorPWM+2
 10440  004174  CFE5 F018          	movff	postdec1,??_setMotorPWM+3
 10441  004178  C017  FFE1         	movff	??_setMotorPWM+2,fsr1l
 10442  00417C  C018  FFE2         	movff	??_setMotorPWM+3,fsr1h
 10443  004180  50E7               	movf	indf1,w,c
 10444  004182  6E19               	movwf	(??_setMotorPWM+4)^0,c
 10445  004184  EE10 F006          	lfsr	1,6
 10446  004188  5013               	movf	setMotorPWM@m^0,w,c
 10447  00418A  26E1               	addwf	fsr1l,f,c
 10448  00418C  5014               	movf	(setMotorPWM@m+1)^0,w,c
 10449  00418E  22E2               	addwfc	fsr1h,f,c
 10450  004190  50E7               	movf	indf1,w,c
 10451  004192  6E1A               	movwf	(??_setMotorPWM+5)^0,c
 10452  004194  0E01               	movlw	1
 10453  004196  6E1B               	movwf	(??_setMotorPWM+6)^0,c
 10454  004198  2A1A               	incf	(??_setMotorPWM+5)^0,f,c
 10455  00419A  EFD1  F020         	goto	u9594
 10456  00419E                     u9595:
 10457  00419E  90D8               	bcf	status,0,c
 10458  0041A0  361B               	rlcf	(??_setMotorPWM+6)^0,f,c
 10459  0041A2                     u9594:
 10460  0041A2  2E1A               	decfsz	(??_setMotorPWM+5)^0,f,c
 10461  0041A4  EFCF  F020         	goto	u9595
 10462  0041A8  501B               	movf	(??_setMotorPWM+6)^0,w,c
 10463  0041AA  0AFF               	xorlw	255
 10464  0041AC  1419               	andwf	(??_setMotorPWM+4)^0,w,c
 10465  0041AE  6EDF               	movwf	indf2,c
 10466  0041B0                     l184:
 10467  0041B0  0012               	return		;funcret
 10468  0041B2                     __end_of_setMotorPWM:
 10469                           	callstack 0
 10470                           
 10471 ;; *************** function ___wmul *****************
 10472 ;; Defined at:
 10473 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  multiplier      2    4[COMRAM] unsigned int 
 10476 ;;  multiplicand    2    6[COMRAM] unsigned int 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  product         2    8[COMRAM] unsigned int 
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  2    4[COMRAM] unsigned int 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0, prodl, prodh
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10492 ;;Total ram usage:        6 bytes
 10493 ;; Hardware stack levels used: 1
 10494 ;; Hardware stack levels required when called: 5
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_setMotorPWM
 10499 ;;		_atoi
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           	psect	text38
 10504  0057AA                     __ptext38:
 10505                           	callstack 0
 10506  0057AA                     ___wmul:
 10507                           	callstack 21
 10508  0057AA  5005               	movf	___wmul@multiplier^0,w,c
 10509  0057AC  0207               	mulwf	___wmul@multiplicand^0,c
 10510  0057AE  CFF3 F009          	movff	prodl,___wmul@product
 10511  0057B2  CFF4 F00A          	movff	prodh,___wmul@product+1
 10512  0057B6  5005               	movf	___wmul@multiplier^0,w,c
 10513  0057B8  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 10514  0057BA  50F3               	movf	243,w,c
 10515  0057BC  260A               	addwf	(___wmul@product+1)^0,f,c
 10516  0057BE  5006               	movf	(___wmul@multiplier+1)^0,w,c
 10517  0057C0  0207               	mulwf	___wmul@multiplicand^0,c
 10518  0057C2  50F3               	movf	243,w,c
 10519  0057C4  260A               	addwf	(___wmul@product+1)^0,f,c
 10520  0057C6  C009  F005         	movff	___wmul@product,?___wmul
 10521  0057CA  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 10522  0057CE  0012               	return		;funcret
 10523  0057D0                     __end_of___wmul:
 10524                           	callstack 0
 10525                           
 10526 ;; *************** function ___awdiv *****************
 10527 ;; Defined at:
 10528 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  dividend        2   10[COMRAM] int 
 10531 ;;  divisor         2   12[COMRAM] int 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;  quotient        2   16[COMRAM] int 
 10534 ;;  sign            1   15[COMRAM] unsigned char 
 10535 ;;  counter         1   14[COMRAM] unsigned char 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  2   10[COMRAM] int 
 10538 ;; Registers used:
 10539 ;;		wreg, status,2, status,0
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10549 ;;Total ram usage:        8 bytes
 10550 ;; Hardware stack levels used: 1
 10551 ;; Hardware stack levels required when called: 5
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_setMotorPWM
 10556 ;;		_efgtoa
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text39
 10561  004CAA                     __ptext39:
 10562                           	callstack 0
 10563  004CAA                     ___awdiv:
 10564                           	callstack 21
 10565  004CAA  0E00               	movlw	0
 10566  004CAC  6E10               	movwf	___awdiv@sign^0,c
 10567  004CAE  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
 10568  004CB0  EF5E  F026         	goto	u8160
 10569  004CB4  EF5C  F026         	goto	u8161
 10570  004CB8                     u8161:
 10571  004CB8  EF64  F026         	goto	l6291
 10572  004CBC                     u8160:
 10573  004CBC  6C0D               	negf	___awdiv@divisor^0,c
 10574  004CBE  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
 10575  004CC0  B0D8               	btfsc	status,0,c
 10576  004CC2  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
 10577  004CC4  0E01               	movlw	1
 10578  004CC6  6E10               	movwf	___awdiv@sign^0,c
 10579  004CC8                     l6291:
 10580  004CC8  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
 10581  004CCA  EF6B  F026         	goto	u8170
 10582  004CCE  EF69  F026         	goto	u8171
 10583  004CD2                     u8171:
 10584  004CD2  EF71  F026         	goto	l6297
 10585  004CD6                     u8170:
 10586  004CD6  6C0B               	negf	___awdiv@dividend^0,c
 10587  004CD8  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
 10588  004CDA  B0D8               	btfsc	status,0,c
 10589  004CDC  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
 10590  004CDE  0E01               	movlw	1
 10591  004CE0  1A10               	xorwf	___awdiv@sign^0,f,c
 10592  004CE2                     l6297:
 10593  004CE2  0E00               	movlw	0
 10594  004CE4  6E12               	movwf	(___awdiv@quotient+1)^0,c
 10595  004CE6  0E00               	movlw	0
 10596  004CE8  6E11               	movwf	___awdiv@quotient^0,c
 10597  004CEA  500D               	movf	___awdiv@divisor^0,w,c
 10598  004CEC  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
 10599  004CEE  B4D8               	btfsc	status,2,c
 10600  004CF0  EF7C  F026         	goto	u8181
 10601  004CF4  EF7E  F026         	goto	u8180
 10602  004CF8                     u8181:
 10603  004CF8  EFA6  F026         	goto	l6319
 10604  004CFC                     u8180:
 10605  004CFC  0E01               	movlw	1
 10606  004CFE  6E0F               	movwf	___awdiv@counter^0,c
 10607  004D00  EF86  F026         	goto	l6305
 10608  004D04                     l6303:
 10609  004D04  90D8               	bcf	status,0,c
 10610  004D06  360D               	rlcf	___awdiv@divisor^0,f,c
 10611  004D08  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
 10612  004D0A  2A0F               	incf	___awdiv@counter^0,f,c
 10613  004D0C                     l6305:
 10614  004D0C  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
 10615  004D0E  EF8B  F026         	goto	u8191
 10616  004D12  EF8D  F026         	goto	u8190
 10617  004D16                     u8191:
 10618  004D16  EF82  F026         	goto	l6303
 10619  004D1A                     u8190:
 10620  004D1A                     l6307:
 10621  004D1A  90D8               	bcf	status,0,c
 10622  004D1C  3611               	rlcf	___awdiv@quotient^0,f,c
 10623  004D1E  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
 10624  004D20  500D               	movf	___awdiv@divisor^0,w,c
 10625  004D22  5C0B               	subwf	___awdiv@dividend^0,w,c
 10626  004D24  500E               	movf	(___awdiv@divisor+1)^0,w,c
 10627  004D26  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
 10628  004D28  A0D8               	btfss	status,0,c
 10629  004D2A  EF99  F026         	goto	u8201
 10630  004D2E  EF9B  F026         	goto	u8200
 10631  004D32                     u8201:
 10632  004D32  EFA0  F026         	goto	l6315
 10633  004D36                     u8200:
 10634  004D36  500D               	movf	___awdiv@divisor^0,w,c
 10635  004D38  5E0B               	subwf	___awdiv@dividend^0,f,c
 10636  004D3A  500E               	movf	(___awdiv@divisor+1)^0,w,c
 10637  004D3C  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
 10638  004D3E  8011               	bsf	___awdiv@quotient^0,0,c
 10639  004D40                     l6315:
 10640  004D40  90D8               	bcf	status,0,c
 10641  004D42  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
 10642  004D44  320D               	rrcf	___awdiv@divisor^0,f,c
 10643  004D46  2E0F               	decfsz	___awdiv@counter^0,f,c
 10644  004D48  EF8D  F026         	goto	l6307
 10645  004D4C                     l6319:
 10646  004D4C  5010               	movf	___awdiv@sign^0,w,c
 10647  004D4E  B4D8               	btfsc	status,2,c
 10648  004D50  EFAC  F026         	goto	u8211
 10649  004D54  EFAE  F026         	goto	u8210
 10650  004D58                     u8211:
 10651  004D58  EFB2  F026         	goto	l6323
 10652  004D5C                     u8210:
 10653  004D5C  6C11               	negf	___awdiv@quotient^0,c
 10654  004D5E  1E12               	comf	(___awdiv@quotient+1)^0,f,c
 10655  004D60  B0D8               	btfsc	status,0,c
 10656  004D62  2A12               	incf	(___awdiv@quotient+1)^0,f,c
 10657  004D64                     l6323:
 10658  004D64  C011  F00B         	movff	___awdiv@quotient,?___awdiv
 10659  004D68  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
 10660  004D6C  0012               	return		;funcret
 10661  004D6E                     __end_of___awdiv:
 10662                           	callstack 0
 10663                           
 10664 ;; *************** function ___xxtofl *****************
 10665 ;; Defined at:
 10666 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;  sign            1    wreg     unsigned char 
 10669 ;;  val             4    4[COMRAM] long 
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;  sign            1   12[COMRAM] unsigned char 
 10672 ;;  arg             4   14[COMRAM] unsigned long 
 10673 ;;  exp             1   13[COMRAM] unsigned char 
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  4    4[COMRAM] unsigned char 
 10676 ;; Registers used:
 10677 ;;		wreg, status,2, status,0
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10684 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10686 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10687 ;;Total ram usage:       14 bytes
 10688 ;; Hardware stack levels used: 1
 10689 ;; Hardware stack levels required when called: 5
 10690 ;; This function calls:
 10691 ;;		Nothing
 10692 ;; This function is called by:
 10693 ;;		_main
 10694 ;;		_read_card_RGB
 10695 ;;		_read_card_HSV
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text40
 10700  0041B2                     __ptext40:
 10701                           	callstack 0
 10702  0041B2                     ___xxtofl:
 10703                           	callstack 24
 10704                           
 10705                           ;incstack = 0
 10706                           ;___xxtofl@sign stored from wreg
 10707  0041B2  6E0D               	movwf	___xxtofl@sign^0,c
 10708  0041B4  500D               	movf	___xxtofl@sign^0,w,c
 10709  0041B6  B4D8               	btfsc	status,2,c
 10710  0041B8  EFE0  F020         	goto	u6621
 10711  0041BC  EFE2  F020         	goto	u6620
 10712  0041C0                     u6621:
 10713  0041C0  EF04  F021         	goto	l1160
 10714  0041C4                     u6620:
 10715  0041C4  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
 10716  0041C6  EFE9  F020         	goto	u6630
 10717  0041CA  EFE7  F020         	goto	u6631
 10718  0041CE                     u6631:
 10719  0041CE  EF04  F021         	goto	l1160
 10720  0041D2                     u6630:
 10721  0041D2  C005  F009         	movff	___xxtofl@val,??___xxtofl
 10722  0041D6  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
 10723  0041DA  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
 10724  0041DE  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
 10725  0041E2  1E09               	comf	??___xxtofl^0,f,c
 10726  0041E4  1E0A               	comf	(??___xxtofl+1)^0,f,c
 10727  0041E6  1E0B               	comf	(??___xxtofl+2)^0,f,c
 10728  0041E8  1E0C               	comf	(??___xxtofl+3)^0,f,c
 10729  0041EA  2A09               	incf	??___xxtofl^0,f,c
 10730  0041EC  0E00               	movlw	0
 10731  0041EE  220A               	addwfc	(??___xxtofl+1)^0,f,c
 10732  0041F0  220B               	addwfc	(??___xxtofl+2)^0,f,c
 10733  0041F2  220C               	addwfc	(??___xxtofl+3)^0,f,c
 10734  0041F4  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
 10735  0041F8  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
 10736  0041FC  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
 10737  004200  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
 10738  004204  EF0C  F021         	goto	l5249
 10739  004208                     l1160:
 10740  004208  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
 10741  00420C  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10742  004210  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10743  004214  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10744  004218                     l5249:
 10745  004218  5005               	movf	___xxtofl@val^0,w,c
 10746  00421A  1006               	iorwf	(___xxtofl@val+1)^0,w,c
 10747  00421C  1007               	iorwf	(___xxtofl@val+2)^0,w,c
 10748  00421E  1008               	iorwf	(___xxtofl@val+3)^0,w,c
 10749  004220  A4D8               	btfss	status,2,c
 10750  004222  EF15  F021         	goto	u6641
 10751  004226  EF17  F021         	goto	u6640
 10752  00422A                     u6641:
 10753  00422A  EF21  F021         	goto	l5255
 10754  00422E                     u6640:
 10755  00422E  0E00               	movlw	0
 10756  004230  6E05               	movwf	?___xxtofl^0,c
 10757  004232  0E00               	movlw	0
 10758  004234  6E06               	movwf	(?___xxtofl+1)^0,c
 10759  004236  0E00               	movlw	0
 10760  004238  6E07               	movwf	(?___xxtofl+2)^0,c
 10761  00423A  0E00               	movlw	0
 10762  00423C  6E08               	movwf	(?___xxtofl+3)^0,c
 10763  00423E  EFB2  F021         	goto	l1163
 10764  004242                     l5255:
 10765  004242  0E96               	movlw	150
 10766  004244  6E0E               	movwf	___xxtofl@exp^0,c
 10767  004246  EF2B  F021         	goto	l5259
 10768  00424A                     l5257:
 10769  00424A  2A0E               	incf	___xxtofl@exp^0,f,c
 10770  00424C  90D8               	bcf	status,0,c
 10771  00424E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
 10772  004250  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
 10773  004252  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
 10774  004254  320F               	rrcf	___xxtofl@arg^0,f,c
 10775  004256                     l5259:
 10776  004256  0E00               	movlw	0
 10777  004258  140F               	andwf	___xxtofl@arg^0,w,c
 10778  00425A  6E09               	movwf	??___xxtofl^0,c
 10779  00425C  0E00               	movlw	0
 10780  00425E  1410               	andwf	(___xxtofl@arg+1)^0,w,c
 10781  004260  6E0A               	movwf	(??___xxtofl+1)^0,c
 10782  004262  0E00               	movlw	0
 10783  004264  1411               	andwf	(___xxtofl@arg+2)^0,w,c
 10784  004266  6E0B               	movwf	(??___xxtofl+2)^0,c
 10785  004268  0EFE               	movlw	254
 10786  00426A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
 10787  00426C  6E0C               	movwf	(??___xxtofl+3)^0,c
 10788  00426E  5009               	movf	??___xxtofl^0,w,c
 10789  004270  100A               	iorwf	(??___xxtofl+1)^0,w,c
 10790  004272  100B               	iorwf	(??___xxtofl+2)^0,w,c
 10791  004274  100C               	iorwf	(??___xxtofl+3)^0,w,c
 10792  004276  A4D8               	btfss	status,2,c
 10793  004278  EF40  F021         	goto	u6651
 10794  00427C  EF42  F021         	goto	u6650
 10795  004280                     u6651:
 10796  004280  EF25  F021         	goto	l5257
 10797  004284                     u6650:
 10798  004284  EF50  F021         	goto	l1167
 10799  004288                     l5261:
 10800  004288  2A0E               	incf	___xxtofl@exp^0,f,c
 10801  00428A  0E01               	movlw	1
 10802  00428C  260F               	addwf	___xxtofl@arg^0,f,c
 10803  00428E  0E00               	movlw	0
 10804  004290  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
 10805  004292  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
 10806  004294  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
 10807  004296  90D8               	bcf	status,0,c
 10808  004298  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
 10809  00429A  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
 10810  00429C  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
 10811  00429E  320F               	rrcf	___xxtofl@arg^0,f,c
 10812  0042A0                     l1167:
 10813  0042A0  0E00               	movlw	0
 10814  0042A2  140F               	andwf	___xxtofl@arg^0,w,c
 10815  0042A4  6E09               	movwf	??___xxtofl^0,c
 10816  0042A6  0E00               	movlw	0
 10817  0042A8  1410               	andwf	(___xxtofl@arg+1)^0,w,c
 10818  0042AA  6E0A               	movwf	(??___xxtofl+1)^0,c
 10819  0042AC  0E00               	movlw	0
 10820  0042AE  1411               	andwf	(___xxtofl@arg+2)^0,w,c
 10821  0042B0  6E0B               	movwf	(??___xxtofl+2)^0,c
 10822  0042B2  0EFF               	movlw	255
 10823  0042B4  1412               	andwf	(___xxtofl@arg+3)^0,w,c
 10824  0042B6  6E0C               	movwf	(??___xxtofl+3)^0,c
 10825  0042B8  5009               	movf	??___xxtofl^0,w,c
 10826  0042BA  100A               	iorwf	(??___xxtofl+1)^0,w,c
 10827  0042BC  100B               	iorwf	(??___xxtofl+2)^0,w,c
 10828  0042BE  100C               	iorwf	(??___xxtofl+3)^0,w,c
 10829  0042C0  A4D8               	btfss	status,2,c
 10830  0042C2  EF65  F021         	goto	u6661
 10831  0042C6  EF67  F021         	goto	u6660
 10832  0042CA                     u6661:
 10833  0042CA  EF44  F021         	goto	l5261
 10834  0042CE                     u6660:
 10835  0042CE  EF6F  F021         	goto	l5269
 10836  0042D2                     l5267:
 10837  0042D2  060E               	decf	___xxtofl@exp^0,f,c
 10838  0042D4  90D8               	bcf	status,0,c
 10839  0042D6  360F               	rlcf	___xxtofl@arg^0,f,c
 10840  0042D8  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
 10841  0042DA  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
 10842  0042DC  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
 10843  0042DE                     l5269:
 10844  0042DE  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
 10845  0042E0  EF74  F021         	goto	u6671
 10846  0042E4  EF76  F021         	goto	u6670
 10847  0042E8                     u6671:
 10848  0042E8  EF7E  F021         	goto	l1174
 10849  0042EC                     u6670:
 10850  0042EC  0E02               	movlw	2
 10851  0042EE  600E               	cpfslt	___xxtofl@exp^0,c
 10852  0042F0  EF7C  F021         	goto	u6681
 10853  0042F4  EF7E  F021         	goto	u6680
 10854  0042F8                     u6681:
 10855  0042F8  EF69  F021         	goto	l5267
 10856  0042FC                     u6680:
 10857  0042FC                     l1174:
 10858  0042FC  B00E               	btfsc	___xxtofl@exp^0,0,c
 10859  0042FE  EF83  F021         	goto	u6691
 10860  004302  EF85  F021         	goto	u6690
 10861  004306                     u6691:
 10862  004306  EF86  F021         	goto	l5275
 10863  00430A                     u6690:
 10864  00430A  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
 10865  00430C                     l5275:
 10866  00430C  90D8               	bcf	status,0,c
 10867  00430E  320E               	rrcf	___xxtofl@exp^0,f,c
 10868  004310  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
 10869  004314  6A0A               	clrf	(??___xxtofl+1)^0,c
 10870  004316  6A0B               	clrf	(??___xxtofl+2)^0,c
 10871  004318  6A0C               	clrf	(??___xxtofl+3)^0,c
 10872  00431A  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
 10873  00431E  6A0B               	clrf	(??___xxtofl+2)^0,c
 10874  004320  6A0A               	clrf	(??___xxtofl+1)^0,c
 10875  004322  6A09               	clrf	??___xxtofl^0,c
 10876  004324  5009               	movf	??___xxtofl^0,w,c
 10877  004326  120F               	iorwf	___xxtofl@arg^0,f,c
 10878  004328  500A               	movf	(??___xxtofl+1)^0,w,c
 10879  00432A  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
 10880  00432C  500B               	movf	(??___xxtofl+2)^0,w,c
 10881  00432E  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
 10882  004330  500C               	movf	(??___xxtofl+3)^0,w,c
 10883  004332  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
 10884  004334  500D               	movf	___xxtofl@sign^0,w,c
 10885  004336  B4D8               	btfsc	status,2,c
 10886  004338  EFA0  F021         	goto	u6701
 10887  00433C  EFA2  F021         	goto	u6700
 10888  004340                     u6701:
 10889  004340  EFAA  F021         	goto	l5285
 10890  004344                     u6700:
 10891  004344  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
 10892  004346  EFA9  F021         	goto	u6710
 10893  00434A  EFA7  F021         	goto	u6711
 10894  00434E                     u6711:
 10895  00434E  EFAA  F021         	goto	l5285
 10896  004352                     u6710:
 10897  004352  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
 10898  004354                     l5285:
 10899  004354  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
 10900  004358  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
 10901  00435C  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
 10902  004360  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
 10903  004364                     l1163:
 10904  004364  0012               	return		;funcret
 10905  004366                     __end_of___xxtofl:
 10906                           	callstack 0
 10907                           
 10908 ;; *************** function ___flge *****************
 10909 ;; Defined at:
 10910 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  ff1             4   29[COMRAM] unsigned char 
 10913 ;;  ff2             4   33[COMRAM] unsigned char 
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;		None
 10916 ;; Return value:  Size  Location     Type
 10917 ;;		None               void
 10918 ;; Registers used:
 10919 ;;		wreg, status,2, status,0
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10925 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10929 ;;Total ram usage:       12 bytes
 10930 ;; Hardware stack levels used: 1
 10931 ;; Hardware stack levels required when called: 5
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_read_card_RGB
 10936 ;;		_efgtoa
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text41
 10941  0048FC                     __ptext41:
 10942                           	callstack 0
 10943  0048FC                     ___flge:
 10944                           	callstack 21
 10945  0048FC  0E00               	movlw	0
 10946  0048FE  141E               	andwf	___flge@ff1^0,w,c
 10947  004900  6E26               	movwf	??___flge^0,c
 10948  004902  0E00               	movlw	0
 10949  004904  141F               	andwf	(___flge@ff1+1)^0,w,c
 10950  004906  6E27               	movwf	(??___flge+1)^0,c
 10951  004908  0E80               	movlw	128
 10952  00490A  1420               	andwf	(___flge@ff1+2)^0,w,c
 10953  00490C  6E28               	movwf	(??___flge+2)^0,c
 10954  00490E  0E7F               	movlw	127
 10955  004910  1421               	andwf	(___flge@ff1+3)^0,w,c
 10956  004912  6E29               	movwf	(??___flge+3)^0,c
 10957  004914  5026               	movf	??___flge^0,w,c
 10958  004916  1027               	iorwf	(??___flge+1)^0,w,c
 10959  004918  1028               	iorwf	(??___flge+2)^0,w,c
 10960  00491A  1029               	iorwf	(??___flge+3)^0,w,c
 10961  00491C  A4D8               	btfss	status,2,c
 10962  00491E  EF93  F024         	goto	u8311
 10963  004922  EF95  F024         	goto	u8310
 10964  004926                     u8311:
 10965  004926  EF9D  F024         	goto	l6383
 10966  00492A                     u8310:
 10967  00492A  0E00               	movlw	0
 10968  00492C  6E1E               	movwf	___flge@ff1^0,c
 10969  00492E  0E00               	movlw	0
 10970  004930  6E1F               	movwf	(___flge@ff1+1)^0,c
 10971  004932  0E00               	movlw	0
 10972  004934  6E20               	movwf	(___flge@ff1+2)^0,c
 10973  004936  0E00               	movlw	0
 10974  004938  6E21               	movwf	(___flge@ff1+3)^0,c
 10975  00493A                     l6383:
 10976  00493A  0E00               	movlw	0
 10977  00493C  1422               	andwf	___flge@ff2^0,w,c
 10978  00493E  6E26               	movwf	??___flge^0,c
 10979  004940  0E00               	movlw	0
 10980  004942  1423               	andwf	(___flge@ff2+1)^0,w,c
 10981  004944  6E27               	movwf	(??___flge+1)^0,c
 10982  004946  0E80               	movlw	128
 10983  004948  1424               	andwf	(___flge@ff2+2)^0,w,c
 10984  00494A  6E28               	movwf	(??___flge+2)^0,c
 10985  00494C  0E7F               	movlw	127
 10986  00494E  1425               	andwf	(___flge@ff2+3)^0,w,c
 10987  004950  6E29               	movwf	(??___flge+3)^0,c
 10988  004952  5026               	movf	??___flge^0,w,c
 10989  004954  1027               	iorwf	(??___flge+1)^0,w,c
 10990  004956  1028               	iorwf	(??___flge+2)^0,w,c
 10991  004958  1029               	iorwf	(??___flge+3)^0,w,c
 10992  00495A  A4D8               	btfss	status,2,c
 10993  00495C  EFB2  F024         	goto	u8321
 10994  004960  EFB4  F024         	goto	u8320
 10995  004964                     u8321:
 10996  004964  EFBC  F024         	goto	l6387
 10997  004968                     u8320:
 10998  004968  0E00               	movlw	0
 10999  00496A  6E22               	movwf	___flge@ff2^0,c
 11000  00496C  0E00               	movlw	0
 11001  00496E  6E23               	movwf	(___flge@ff2+1)^0,c
 11002  004970  0E00               	movlw	0
 11003  004972  6E24               	movwf	(___flge@ff2+2)^0,c
 11004  004974  0E00               	movlw	0
 11005  004976  6E25               	movwf	(___flge@ff2+3)^0,c
 11006  004978                     l6387:
 11007  004978  AE21               	btfss	(___flge@ff1+3)^0,7,c
 11008  00497A  EFC1  F024         	goto	u8331
 11009  00497E  EFC3  F024         	goto	u8330
 11010  004982                     u8331:
 11011  004982  EFCC  F024         	goto	l6391
 11012  004986                     u8330:
 11013  004986  6C1E               	negf	___flge@ff1^0,c
 11014  004988  1E1F               	comf	(___flge@ff1+1)^0,f,c
 11015  00498A  B0D8               	btfsc	status,0,c
 11016  00498C  2A1F               	incf	(___flge@ff1+1)^0,f,c
 11017  00498E  1E20               	comf	(___flge@ff1+2)^0,f,c
 11018  004990  B0D8               	btfsc	status,0,c
 11019  004992  2A20               	incf	(___flge@ff1+2)^0,f,c
 11020  004994  0E80               	movlw	128
 11021  004996  5621               	subfwb	(___flge@ff1+3)^0,f,c
 11022  004998                     l6391:
 11023  004998  AE25               	btfss	(___flge@ff2+3)^0,7,c
 11024  00499A  EFD1  F024         	goto	u8341
 11025  00499E  EFD3  F024         	goto	u8340
 11026  0049A2                     u8341:
 11027  0049A2  EFDC  F024         	goto	l770
 11028  0049A6                     u8340:
 11029  0049A6  6C22               	negf	___flge@ff2^0,c
 11030  0049A8  1E23               	comf	(___flge@ff2+1)^0,f,c
 11031  0049AA  B0D8               	btfsc	status,0,c
 11032  0049AC  2A23               	incf	(___flge@ff2+1)^0,f,c
 11033  0049AE  1E24               	comf	(___flge@ff2+2)^0,f,c
 11034  0049B0  B0D8               	btfsc	status,0,c
 11035  0049B2  2A24               	incf	(___flge@ff2+2)^0,f,c
 11036  0049B4  0E80               	movlw	128
 11037  0049B6  5625               	subfwb	(___flge@ff2+3)^0,f,c
 11038  0049B8                     l770:
 11039  0049B8  0E00               	movlw	0
 11040  0049BA  1A1E               	xorwf	___flge@ff1^0,f,c
 11041  0049BC  0E00               	movlw	0
 11042  0049BE  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
 11043  0049C0  0E00               	movlw	0
 11044  0049C2  1A20               	xorwf	(___flge@ff1+2)^0,f,c
 11045  0049C4  0E80               	movlw	128
 11046  0049C6  1A21               	xorwf	(___flge@ff1+3)^0,f,c
 11047  0049C8  0E00               	movlw	0
 11048  0049CA  1A22               	xorwf	___flge@ff2^0,f,c
 11049  0049CC  0E00               	movlw	0
 11050  0049CE  1A23               	xorwf	(___flge@ff2+1)^0,f,c
 11051  0049D0  0E00               	movlw	0
 11052  0049D2  1A24               	xorwf	(___flge@ff2+2)^0,f,c
 11053  0049D4  0E80               	movlw	128
 11054  0049D6  1A25               	xorwf	(___flge@ff2+3)^0,f,c
 11055  0049D8  5022               	movf	___flge@ff2^0,w,c
 11056  0049DA  5C1E               	subwf	___flge@ff1^0,w,c
 11057  0049DC  5023               	movf	(___flge@ff2+1)^0,w,c
 11058  0049DE  581F               	subwfb	(___flge@ff1+1)^0,w,c
 11059  0049E0  5024               	movf	(___flge@ff2+2)^0,w,c
 11060  0049E2  5820               	subwfb	(___flge@ff1+2)^0,w,c
 11061  0049E4  5025               	movf	(___flge@ff2+3)^0,w,c
 11062  0049E6  5821               	subwfb	(___flge@ff1+3)^0,w,c
 11063  0049E8  B0D8               	btfsc	status,0,c
 11064  0049EA  EFF9  F024         	goto	u8351
 11065  0049EE  EFFB  F024         	goto	u8350
 11066  0049F2                     u8351:
 11067  0049F2  EFFE  F024         	goto	l6397
 11068  0049F6                     u8350:
 11069  0049F6  90D8               	bcf	status,0,c
 11070  0049F8  EFFF  F024         	goto	l775
 11071  0049FC                     l6397:
 11072  0049FC  80D8               	bsf	status,0,c
 11073  0049FE                     l775:
 11074  0049FE  0012               	return		;funcret
 11075  004A00                     __end_of___flge:
 11076                           	callstack 0
 11077                           
 11078 ;; *************** function ___fldiv *****************
 11079 ;; Defined at:
 11080 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  b               4   18[COMRAM] unsigned char 
 11083 ;;  a               4   22[COMRAM] unsigned char 
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;  grs             4   37[COMRAM] unsigned long 
 11086 ;;  rem             4   30[COMRAM] unsigned long 
 11087 ;;  new_exp         2   35[COMRAM] short 
 11088 ;;  aexp            1   42[COMRAM] unsigned char 
 11089 ;;  bexp            1   41[COMRAM] unsigned char 
 11090 ;;  sign            1   34[COMRAM] unsigned char 
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  4   18[COMRAM] unsigned char 
 11093 ;; Registers used:
 11094 ;;		wreg, status,2, status,0
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11100 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11101 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11102 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11103 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11104 ;;Total ram usage:       25 bytes
 11105 ;; Hardware stack levels used: 1
 11106 ;; Hardware stack levels required when called: 5
 11107 ;; This function calls:
 11108 ;;		Nothing
 11109 ;; This function is called by:
 11110 ;;		_main
 11111 ;;		_read_card_RGB
 11112 ;;		_efgtoa
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116                           	psect	text42
 11117  003076                     __ptext42:
 11118                           	callstack 0
 11119  003076                     ___fldiv:
 11120                           	callstack 21
 11121  003076  5016               	movf	(___fldiv@b+3)^0,w,c
 11122  003078  0B80               	andlw	128
 11123  00307A  6E23               	movwf	___fldiv@sign^0,c
 11124  00307C  5016               	movf	(___fldiv@b+3)^0,w,c
 11125  00307E  2416               	addwf	(___fldiv@b+3)^0,w,c
 11126  003080  6E2A               	movwf	___fldiv@bexp^0,c
 11127  003082  AE15               	btfss	(___fldiv@b+2)^0,7,c
 11128  003084  EF46  F018         	goto	u7741
 11129  003088  EF48  F018         	goto	u7740
 11130  00308C                     u7741:
 11131  00308C  EF49  F018         	goto	l6015
 11132  003090                     u7740:
 11133  003090  802A               	bsf	___fldiv@bexp^0,0,c
 11134  003092                     l6015:
 11135  003092  502A               	movf	___fldiv@bexp^0,w,c
 11136  003094  B4D8               	btfsc	status,2,c
 11137  003096  EF4F  F018         	goto	u7751
 11138  00309A  EF51  F018         	goto	u7750
 11139  00309E                     u7751:
 11140  00309E  EF66  F018         	goto	l6025
 11141  0030A2                     u7750:
 11142  0030A2  282A               	incf	___fldiv@bexp^0,w,c
 11143  0030A4  A4D8               	btfss	status,2,c
 11144  0030A6  EF57  F018         	goto	u7761
 11145  0030AA  EF59  F018         	goto	u7760
 11146  0030AE                     u7761:
 11147  0030AE  EF61  F018         	goto	l6021
 11148  0030B2                     u7760:
 11149  0030B2  0E00               	movlw	0
 11150  0030B4  6E13               	movwf	___fldiv@b^0,c
 11151  0030B6  0E00               	movlw	0
 11152  0030B8  6E14               	movwf	(___fldiv@b+1)^0,c
 11153  0030BA  0E00               	movlw	0
 11154  0030BC  6E15               	movwf	(___fldiv@b+2)^0,c
 11155  0030BE  0E00               	movlw	0
 11156  0030C0  6E16               	movwf	(___fldiv@b+3)^0,c
 11157  0030C2                     l6021:
 11158  0030C2  8E15               	bsf	(___fldiv@b+2)^0,7,c
 11159  0030C4  0E00               	movlw	0
 11160  0030C6  6E16               	movwf	(___fldiv@b+3)^0,c
 11161  0030C8  EF6E  F018         	goto	l6027
 11162  0030CC                     l6025:
 11163  0030CC  0E00               	movlw	0
 11164  0030CE  6E13               	movwf	___fldiv@b^0,c
 11165  0030D0  0E00               	movlw	0
 11166  0030D2  6E14               	movwf	(___fldiv@b+1)^0,c
 11167  0030D4  0E00               	movlw	0
 11168  0030D6  6E15               	movwf	(___fldiv@b+2)^0,c
 11169  0030D8  0E00               	movlw	0
 11170  0030DA  6E16               	movwf	(___fldiv@b+3)^0,c
 11171  0030DC                     l6027:
 11172  0030DC  501A               	movf	(___fldiv@a+3)^0,w,c
 11173  0030DE  0B80               	andlw	128
 11174  0030E0  1A23               	xorwf	___fldiv@sign^0,f,c
 11175  0030E2  501A               	movf	(___fldiv@a+3)^0,w,c
 11176  0030E4  241A               	addwf	(___fldiv@a+3)^0,w,c
 11177  0030E6  6E2B               	movwf	___fldiv@aexp^0,c
 11178  0030E8  AE19               	btfss	(___fldiv@a+2)^0,7,c
 11179  0030EA  EF79  F018         	goto	u7771
 11180  0030EE  EF7B  F018         	goto	u7770
 11181  0030F2                     u7771:
 11182  0030F2  EF7C  F018         	goto	l6035
 11183  0030F6                     u7770:
 11184  0030F6  802B               	bsf	___fldiv@aexp^0,0,c
 11185  0030F8                     l6035:
 11186  0030F8  502B               	movf	___fldiv@aexp^0,w,c
 11187  0030FA  B4D8               	btfsc	status,2,c
 11188  0030FC  EF82  F018         	goto	u7781
 11189  003100  EF84  F018         	goto	u7780
 11190  003104                     u7781:
 11191  003104  EF99  F018         	goto	l6045
 11192  003108                     u7780:
 11193  003108  282B               	incf	___fldiv@aexp^0,w,c
 11194  00310A  A4D8               	btfss	status,2,c
 11195  00310C  EF8A  F018         	goto	u7791
 11196  003110  EF8C  F018         	goto	u7790
 11197  003114                     u7791:
 11198  003114  EF94  F018         	goto	l6041
 11199  003118                     u7790:
 11200  003118  0E00               	movlw	0
 11201  00311A  6E17               	movwf	___fldiv@a^0,c
 11202  00311C  0E00               	movlw	0
 11203  00311E  6E18               	movwf	(___fldiv@a+1)^0,c
 11204  003120  0E00               	movlw	0
 11205  003122  6E19               	movwf	(___fldiv@a+2)^0,c
 11206  003124  0E00               	movlw	0
 11207  003126  6E1A               	movwf	(___fldiv@a+3)^0,c
 11208  003128                     l6041:
 11209  003128  8E19               	bsf	(___fldiv@a+2)^0,7,c
 11210  00312A  0E00               	movlw	0
 11211  00312C  6E1A               	movwf	(___fldiv@a+3)^0,c
 11212  00312E  EFA1  F018         	goto	l6047
 11213  003132                     l6045:
 11214  003132  0E00               	movlw	0
 11215  003134  6E17               	movwf	___fldiv@a^0,c
 11216  003136  0E00               	movlw	0
 11217  003138  6E18               	movwf	(___fldiv@a+1)^0,c
 11218  00313A  0E00               	movlw	0
 11219  00313C  6E19               	movwf	(___fldiv@a+2)^0,c
 11220  00313E  0E00               	movlw	0
 11221  003140  6E1A               	movwf	(___fldiv@a+3)^0,c
 11222  003142                     l6047:
 11223  003142  5017               	movf	___fldiv@a^0,w,c
 11224  003144  1018               	iorwf	(___fldiv@a+1)^0,w,c
 11225  003146  1019               	iorwf	(___fldiv@a+2)^0,w,c
 11226  003148  101A               	iorwf	(___fldiv@a+3)^0,w,c
 11227  00314A  A4D8               	btfss	status,2,c
 11228  00314C  EFAA  F018         	goto	u7801
 11229  003150  EFAC  F018         	goto	u7800
 11230  003154                     u7801:
 11231  003154  EFC4  F018         	goto	l6059
 11232  003158                     u7800:
 11233  003158  0E00               	movlw	0
 11234  00315A  6E13               	movwf	___fldiv@b^0,c
 11235  00315C  0E00               	movlw	0
 11236  00315E  6E14               	movwf	(___fldiv@b+1)^0,c
 11237  003160  0E00               	movlw	0
 11238  003162  6E15               	movwf	(___fldiv@b+2)^0,c
 11239  003164  0E00               	movlw	0
 11240  003166  6E16               	movwf	(___fldiv@b+3)^0,c
 11241  003168  0E80               	movlw	128
 11242  00316A  1215               	iorwf	(___fldiv@b+2)^0,f,c
 11243  00316C  0E7F               	movlw	127
 11244  00316E  1216               	iorwf	(___fldiv@b+3)^0,f,c
 11245  003170                     l6053:
 11246  003170  5023               	movf	___fldiv@sign^0,w,c
 11247  003172  1216               	iorwf	(___fldiv@b+3)^0,f,c
 11248  003174  C013  F013         	movff	___fldiv@b,?___fldiv
 11249  003178  C014  F014         	movff	___fldiv@b+1,?___fldiv+1
 11250  00317C  C015  F015         	movff	___fldiv@b+2,?___fldiv+2
 11251  003180  C016  F016         	movff	___fldiv@b+3,?___fldiv+3
 11252  003184  EF07  F01A         	goto	l1087
 11253  003188                     l6059:
 11254  003188  502A               	movf	___fldiv@bexp^0,w,c
 11255  00318A  A4D8               	btfss	status,2,c
 11256  00318C  EFCA  F018         	goto	u7811
 11257  003190  EFCC  F018         	goto	u7810
 11258  003194                     u7811:
 11259  003194  EFD6  F018         	goto	l6067
 11260  003198                     u7810:
 11261  003198  0E00               	movlw	0
 11262  00319A  6E13               	movwf	?___fldiv^0,c
 11263  00319C  0E00               	movlw	0
 11264  00319E  6E14               	movwf	(?___fldiv+1)^0,c
 11265  0031A0  0E00               	movlw	0
 11266  0031A2  6E15               	movwf	(?___fldiv+2)^0,c
 11267  0031A4  0E00               	movlw	0
 11268  0031A6  6E16               	movwf	(?___fldiv+3)^0,c
 11269  0031A8  EF07  F01A         	goto	l1087
 11270  0031AC                     l6067:
 11271  0031AC  502B               	movf	___fldiv@aexp^0,w,c
 11272  0031AE  C02A  F01B         	movff	___fldiv@bexp,??___fldiv
 11273  0031B2  6A1C               	clrf	(??___fldiv+1)^0,c
 11274  0031B4  5E1B               	subwf	??___fldiv^0,f,c
 11275  0031B6  0E00               	movlw	0
 11276  0031B8  5A1C               	subwfb	(??___fldiv+1)^0,f,c
 11277  0031BA  0E7F               	movlw	127
 11278  0031BC  241B               	addwf	??___fldiv^0,w,c
 11279  0031BE  6E24               	movwf	___fldiv@new_exp^0,c
 11280  0031C0  0E00               	movlw	0
 11281  0031C2  201C               	addwfc	(??___fldiv+1)^0,w,c
 11282  0031C4  6E25               	movwf	(___fldiv@new_exp+1)^0,c
 11283  0031C6  C013  F01F         	movff	___fldiv@b,___fldiv@rem
 11284  0031CA  C014  F020         	movff	___fldiv@b+1,___fldiv@rem+1
 11285  0031CE  C015  F021         	movff	___fldiv@b+2,___fldiv@rem+2
 11286  0031D2  C016  F022         	movff	___fldiv@b+3,___fldiv@rem+3
 11287  0031D6  0E00               	movlw	0
 11288  0031D8  6E13               	movwf	___fldiv@b^0,c
 11289  0031DA  0E00               	movlw	0
 11290  0031DC  6E14               	movwf	(___fldiv@b+1)^0,c
 11291  0031DE  0E00               	movlw	0
 11292  0031E0  6E15               	movwf	(___fldiv@b+2)^0,c
 11293  0031E2  0E00               	movlw	0
 11294  0031E4  6E16               	movwf	(___fldiv@b+3)^0,c
 11295  0031E6  0E00               	movlw	0
 11296  0031E8  6E26               	movwf	___fldiv@grs^0,c
 11297  0031EA  0E00               	movlw	0
 11298  0031EC  6E27               	movwf	(___fldiv@grs+1)^0,c
 11299  0031EE  0E00               	movlw	0
 11300  0031F0  6E28               	movwf	(___fldiv@grs+2)^0,c
 11301  0031F2  0E00               	movlw	0
 11302  0031F4  6E29               	movwf	(___fldiv@grs+3)^0,c
 11303  0031F6  0E00               	movlw	0
 11304  0031F8  6E2B               	movwf	___fldiv@aexp^0,c
 11305  0031FA  EF37  F019         	goto	l1089
 11306  0031FE                     l6077:
 11307  0031FE  502B               	movf	___fldiv@aexp^0,w,c
 11308  003200  B4D8               	btfsc	status,2,c
 11309  003202  EF05  F019         	goto	u7821
 11310  003206  EF07  F019         	goto	u7820
 11311  00320A                     u7821:
 11312  00320A  EF1E  F019         	goto	l6085
 11313  00320E                     u7820:
 11314  00320E  90D8               	bcf	status,0,c
 11315  003210  361F               	rlcf	___fldiv@rem^0,f,c
 11316  003212  3620               	rlcf	(___fldiv@rem+1)^0,f,c
 11317  003214  3621               	rlcf	(___fldiv@rem+2)^0,f,c
 11318  003216  3622               	rlcf	(___fldiv@rem+3)^0,f,c
 11319  003218  90D8               	bcf	status,0,c
 11320  00321A  3613               	rlcf	___fldiv@b^0,f,c
 11321  00321C  3614               	rlcf	(___fldiv@b+1)^0,f,c
 11322  00321E  3615               	rlcf	(___fldiv@b+2)^0,f,c
 11323  003220  3616               	rlcf	(___fldiv@b+3)^0,f,c
 11324  003222  AE29               	btfss	(___fldiv@grs+3)^0,7,c
 11325  003224  EF16  F019         	goto	u7831
 11326  003228  EF18  F019         	goto	u7830
 11327  00322C                     u7831:
 11328  00322C  EF19  F019         	goto	l1092
 11329  003230                     u7830:
 11330  003230  8013               	bsf	___fldiv@b^0,0,c
 11331  003232                     l1092:
 11332  003232  90D8               	bcf	status,0,c
 11333  003234  3626               	rlcf	___fldiv@grs^0,f,c
 11334  003236  3627               	rlcf	(___fldiv@grs+1)^0,f,c
 11335  003238  3628               	rlcf	(___fldiv@grs+2)^0,f,c
 11336  00323A  3629               	rlcf	(___fldiv@grs+3)^0,f,c
 11337  00323C                     l6085:
 11338  00323C  5017               	movf	___fldiv@a^0,w,c
 11339  00323E  5C1F               	subwf	___fldiv@rem^0,w,c
 11340  003240  5018               	movf	(___fldiv@a+1)^0,w,c
 11341  003242  5820               	subwfb	(___fldiv@rem+1)^0,w,c
 11342  003244  5019               	movf	(___fldiv@a+2)^0,w,c
 11343  003246  5821               	subwfb	(___fldiv@rem+2)^0,w,c
 11344  003248  501A               	movf	(___fldiv@a+3)^0,w,c
 11345  00324A  5822               	subwfb	(___fldiv@rem+3)^0,w,c
 11346  00324C  A0D8               	btfss	status,0,c
 11347  00324E  EF2B  F019         	goto	u7841
 11348  003252  EF2D  F019         	goto	u7840
 11349  003256                     u7841:
 11350  003256  EF36  F019         	goto	l6091
 11351  00325A                     u7840:
 11352  00325A  8C29               	bsf	(___fldiv@grs+3)^0,6,c
 11353  00325C  5017               	movf	___fldiv@a^0,w,c
 11354  00325E  5E1F               	subwf	___fldiv@rem^0,f,c
 11355  003260  5018               	movf	(___fldiv@a+1)^0,w,c
 11356  003262  5A20               	subwfb	(___fldiv@rem+1)^0,f,c
 11357  003264  5019               	movf	(___fldiv@a+2)^0,w,c
 11358  003266  5A21               	subwfb	(___fldiv@rem+2)^0,f,c
 11359  003268  501A               	movf	(___fldiv@a+3)^0,w,c
 11360  00326A  5A22               	subwfb	(___fldiv@rem+3)^0,f,c
 11361  00326C                     l6091:
 11362  00326C  2A2B               	incf	___fldiv@aexp^0,f,c
 11363  00326E                     l1089:
 11364  00326E  0E19               	movlw	25
 11365  003270  642B               	cpfsgt	___fldiv@aexp^0,c
 11366  003272  EF3D  F019         	goto	u7851
 11367  003276  EF3F  F019         	goto	u7850
 11368  00327A                     u7851:
 11369  00327A  EFFF  F018         	goto	l6077
 11370  00327E                     u7850:
 11371  00327E  501F               	movf	___fldiv@rem^0,w,c
 11372  003280  1020               	iorwf	(___fldiv@rem+1)^0,w,c
 11373  003282  1021               	iorwf	(___fldiv@rem+2)^0,w,c
 11374  003284  1022               	iorwf	(___fldiv@rem+3)^0,w,c
 11375  003286  B4D8               	btfsc	status,2,c
 11376  003288  EF48  F019         	goto	u7861
 11377  00328C  EF4A  F019         	goto	u7860
 11378  003290                     u7861:
 11379  003290  EF62  F019         	goto	l6103
 11380  003294                     u7860:
 11381  003294  8026               	bsf	___fldiv@grs^0,0,c
 11382  003296  EF62  F019         	goto	l6103
 11383  00329A                     l6097:
 11384  00329A  90D8               	bcf	status,0,c
 11385  00329C  3613               	rlcf	___fldiv@b^0,f,c
 11386  00329E  3614               	rlcf	(___fldiv@b+1)^0,f,c
 11387  0032A0  3615               	rlcf	(___fldiv@b+2)^0,f,c
 11388  0032A2  3616               	rlcf	(___fldiv@b+3)^0,f,c
 11389  0032A4  AE29               	btfss	(___fldiv@grs+3)^0,7,c
 11390  0032A6  EF57  F019         	goto	u7871
 11391  0032AA  EF59  F019         	goto	u7870
 11392  0032AE                     u7871:
 11393  0032AE  EF5A  F019         	goto	l1098
 11394  0032B2                     u7870:
 11395  0032B2  8013               	bsf	___fldiv@b^0,0,c
 11396  0032B4                     l1098:
 11397  0032B4  90D8               	bcf	status,0,c
 11398  0032B6  3626               	rlcf	___fldiv@grs^0,f,c
 11399  0032B8  3627               	rlcf	(___fldiv@grs+1)^0,f,c
 11400  0032BA  3628               	rlcf	(___fldiv@grs+2)^0,f,c
 11401  0032BC  3629               	rlcf	(___fldiv@grs+3)^0,f,c
 11402  0032BE  0624               	decf	___fldiv@new_exp^0,f,c
 11403  0032C0  A0D8               	btfss	status,0,c
 11404  0032C2  0625               	decf	(___fldiv@new_exp+1)^0,f,c
 11405  0032C4                     l6103:
 11406  0032C4  AE15               	btfss	(___fldiv@b+2)^0,7,c
 11407  0032C6  EF67  F019         	goto	u7881
 11408  0032CA  EF69  F019         	goto	u7880
 11409  0032CE                     u7881:
 11410  0032CE  EF4D  F019         	goto	l6097
 11411  0032D2                     u7880:
 11412  0032D2  0E00               	movlw	0
 11413  0032D4  6E2B               	movwf	___fldiv@aexp^0,c
 11414  0032D6  AE29               	btfss	(___fldiv@grs+3)^0,7,c
 11415  0032D8  EF70  F019         	goto	u7891
 11416  0032DC  EF72  F019         	goto	u7890
 11417  0032E0                     u7891:
 11418  0032E0  EF96  F019         	goto	l1100
 11419  0032E4                     u7890:
 11420  0032E4  0EFF               	movlw	255
 11421  0032E6  1426               	andwf	___fldiv@grs^0,w,c
 11422  0032E8  6E1B               	movwf	??___fldiv^0,c
 11423  0032EA  0EFF               	movlw	255
 11424  0032EC  1427               	andwf	(___fldiv@grs+1)^0,w,c
 11425  0032EE  6E1C               	movwf	(??___fldiv+1)^0,c
 11426  0032F0  0EFF               	movlw	255
 11427  0032F2  1428               	andwf	(___fldiv@grs+2)^0,w,c
 11428  0032F4  6E1D               	movwf	(??___fldiv+2)^0,c
 11429  0032F6  0E7F               	movlw	127
 11430  0032F8  1429               	andwf	(___fldiv@grs+3)^0,w,c
 11431  0032FA  6E1E               	movwf	(??___fldiv+3)^0,c
 11432  0032FC  501B               	movf	??___fldiv^0,w,c
 11433  0032FE  101C               	iorwf	(??___fldiv+1)^0,w,c
 11434  003300  101D               	iorwf	(??___fldiv+2)^0,w,c
 11435  003302  101E               	iorwf	(??___fldiv+3)^0,w,c
 11436  003304  B4D8               	btfsc	status,2,c
 11437  003306  EF87  F019         	goto	u7901
 11438  00330A  EF89  F019         	goto	u7900
 11439  00330E                     u7901:
 11440  00330E  EF8D  F019         	goto	l1101
 11441  003312                     u7900:
 11442  003312                     l6111:
 11443  003312  0E01               	movlw	1
 11444  003314  6E2B               	movwf	___fldiv@aexp^0,c
 11445  003316  EF96  F019         	goto	l1100
 11446  00331A                     l1101:
 11447  00331A  A013               	btfss	___fldiv@b^0,0,c
 11448  00331C  EF92  F019         	goto	u7911
 11449  003320  EF94  F019         	goto	u7910
 11450  003324                     u7911:
 11451  003324  EF96  F019         	goto	l1100
 11452  003328                     u7910:
 11453  003328  EF89  F019         	goto	l6111
 11454  00332C                     l1100:
 11455  00332C  502B               	movf	___fldiv@aexp^0,w,c
 11456  00332E  B4D8               	btfsc	status,2,c
 11457  003330  EF9C  F019         	goto	u7921
 11458  003334  EF9E  F019         	goto	u7920
 11459  003338                     u7921:
 11460  003338  EFC2  F019         	goto	l6123
 11461  00333C                     u7920:
 11462  00333C  0E01               	movlw	1
 11463  00333E  2613               	addwf	___fldiv@b^0,f,c
 11464  003340  0E00               	movlw	0
 11465  003342  2214               	addwfc	(___fldiv@b+1)^0,f,c
 11466  003344  2215               	addwfc	(___fldiv@b+2)^0,f,c
 11467  003346  2216               	addwfc	(___fldiv@b+3)^0,f,c
 11468  003348  A016               	btfss	(___fldiv@b+3)^0,0,c
 11469  00334A  EFA9  F019         	goto	u7931
 11470  00334E  EFAB  F019         	goto	u7930
 11471  003352                     u7931:
 11472  003352  EFC2  F019         	goto	l6123
 11473  003356                     u7930:
 11474  003356  C013  F01B         	movff	___fldiv@b,??___fldiv
 11475  00335A  C014  F01C         	movff	___fldiv@b+1,??___fldiv+1
 11476  00335E  C015  F01D         	movff	___fldiv@b+2,??___fldiv+2
 11477  003362  C016  F01E         	movff	___fldiv@b+3,??___fldiv+3
 11478  003366  341E               	rlcf	(??___fldiv+3)^0,w,c
 11479  003368  321E               	rrcf	(??___fldiv+3)^0,f,c
 11480  00336A  321D               	rrcf	(??___fldiv+2)^0,f,c
 11481  00336C  321C               	rrcf	(??___fldiv+1)^0,f,c
 11482  00336E  321B               	rrcf	??___fldiv^0,f,c
 11483  003370  C01B  F013         	movff	??___fldiv,___fldiv@b
 11484  003374  C01C  F014         	movff	??___fldiv+1,___fldiv@b+1
 11485  003378  C01D  F015         	movff	??___fldiv+2,___fldiv@b+2
 11486  00337C  C01E  F016         	movff	??___fldiv+3,___fldiv@b+3
 11487  003380  4A24               	infsnz	___fldiv@new_exp^0,f,c
 11488  003382  2A25               	incf	(___fldiv@new_exp+1)^0,f,c
 11489  003384                     l6123:
 11490  003384  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11491  003386  EFCD  F019         	goto	u7941
 11492  00338A  5025               	movf	(___fldiv@new_exp+1)^0,w,c
 11493  00338C  E108               	bnz	u7940
 11494  00338E  2824               	incf	___fldiv@new_exp^0,w,c
 11495  003390  A0D8               	btfss	status,0,c
 11496  003392  EFCD  F019         	goto	u7941
 11497  003396  EFCF  F019         	goto	u7940
 11498  00339A                     u7941:
 11499  00339A  EFDA  F019         	goto	l6127
 11500  00339E                     u7940:
 11501  00339E  0E00               	movlw	0
 11502  0033A0  6E25               	movwf	(___fldiv@new_exp+1)^0,c
 11503  0033A2  6824               	setf	___fldiv@new_exp^0,c
 11504  0033A4  0E00               	movlw	0
 11505  0033A6  6E13               	movwf	___fldiv@b^0,c
 11506  0033A8  0E00               	movlw	0
 11507  0033AA  6E14               	movwf	(___fldiv@b+1)^0,c
 11508  0033AC  0E00               	movlw	0
 11509  0033AE  6E15               	movwf	(___fldiv@b+2)^0,c
 11510  0033B0  0E00               	movlw	0
 11511  0033B2  6E16               	movwf	(___fldiv@b+3)^0,c
 11512  0033B4                     l6127:
 11513  0033B4  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11514  0033B6  EFE7  F019         	goto	u7950
 11515  0033BA  5025               	movf	(___fldiv@new_exp+1)^0,w,c
 11516  0033BC  E106               	bnz	u7951
 11517  0033BE  0424               	decf	___fldiv@new_exp^0,w,c
 11518  0033C0  B0D8               	btfsc	status,0,c
 11519  0033C2  EFE5  F019         	goto	u7951
 11520  0033C6  EFE7  F019         	goto	u7950
 11521  0033CA                     u7951:
 11522  0033CA  EFF5  F019         	goto	l6131
 11523  0033CE                     u7950:
 11524  0033CE  0E00               	movlw	0
 11525  0033D0  6E25               	movwf	(___fldiv@new_exp+1)^0,c
 11526  0033D2  0E00               	movlw	0
 11527  0033D4  6E24               	movwf	___fldiv@new_exp^0,c
 11528  0033D6  0E00               	movlw	0
 11529  0033D8  6E13               	movwf	___fldiv@b^0,c
 11530  0033DA  0E00               	movlw	0
 11531  0033DC  6E14               	movwf	(___fldiv@b+1)^0,c
 11532  0033DE  0E00               	movlw	0
 11533  0033E0  6E15               	movwf	(___fldiv@b+2)^0,c
 11534  0033E2  0E00               	movlw	0
 11535  0033E4  6E16               	movwf	(___fldiv@b+3)^0,c
 11536  0033E6  0E00               	movlw	0
 11537  0033E8  6E23               	movwf	___fldiv@sign^0,c
 11538  0033EA                     l6131:
 11539  0033EA  C024  F02A         	movff	___fldiv@new_exp,___fldiv@bexp
 11540  0033EE  A02A               	btfss	___fldiv@bexp^0,0,c
 11541  0033F0  EFFC  F019         	goto	u7961
 11542  0033F4  EFFE  F019         	goto	u7960
 11543  0033F8                     u7961:
 11544  0033F8  EF01  F01A         	goto	l6137
 11545  0033FC                     u7960:
 11546  0033FC  8E15               	bsf	(___fldiv@b+2)^0,7,c
 11547  0033FE  EF02  F01A         	goto	l6139
 11548  003402                     l6137:
 11549  003402  9E15               	bcf	(___fldiv@b+2)^0,7,c
 11550  003404                     l6139:
 11551  003404  90D8               	bcf	status,0,c
 11552  003406  302A               	rrcf	___fldiv@bexp^0,w,c
 11553  003408  6E16               	movwf	(___fldiv@b+3)^0,c
 11554  00340A  EFB8  F018         	goto	l6053
 11555  00340E                     l1087:
 11556  00340E  0012               	return		;funcret
 11557  003410                     __end_of___fldiv:
 11558                           	callstack 0
 11559                           
 11560 ;; *************** function _colorclick_readColour *****************
 11561 ;; Defined at:
 11562 ;;		line 169 in file "color_click.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;  current         8   15[COMRAM] struct .
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  8   15[COMRAM] struct .
 11569 ;; Registers used:
 11570 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11576 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11579 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11580 ;;Total ram usage:        8 bytes
 11581 ;; Hardware stack levels used: 1
 11582 ;; Hardware stack levels required when called: 8
 11583 ;; This function calls:
 11584 ;;		_colorclick_readBlue
 11585 ;;		_colorclick_readClear
 11586 ;;		_colorclick_readGreen
 11587 ;;		_colorclick_readRed
 11588 ;; This function is called by:
 11589 ;;		_main
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text43
 11594  0054A0                     __ptext43:
 11595                           	callstack 0
 11596  0054A0                     _colorclick_readColour:
 11597                           	callstack 22
 11598  0054A0                     
 11599                           ;color_click.c: 169: RGB_val colorclick_readColour(RGB_val current);color_click.c: 170: 
      +                          {;color_click.c: 171:     current.R = colorclick_readRed();
 11600  0054A0  EC43  F029         	call	_colorclick_readRed	;wreg free
 11601  0054A4  C009  F010         	movff	?_colorclick_readRed,colorclick_readColour@current
 11602  0054A8  C00A  F011         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
 11603                           
 11604                           ;color_click.c: 172:     current.G = colorclick_readGreen();
 11605  0054AC  EC6B  F029         	call	_colorclick_readGreen	;wreg free
 11606  0054B0  C009  F012         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
 11607  0054B4  C00A  F013         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
 11608                           
 11609                           ;color_click.c: 173:     current.B = colorclick_readBlue();
 11610  0054B8  ECBB  F029         	call	_colorclick_readBlue	;wreg free
 11611  0054BC  C009  F014         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
 11612  0054C0  C00A  F015         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
 11613                           
 11614                           ;color_click.c: 174:     current.C = colorclick_readClear();
 11615  0054C4  EC93  F029         	call	_colorclick_readClear	;wreg free
 11616  0054C8  C009  F016         	movff	?_colorclick_readClear,colorclick_readColour@current+6
 11617  0054CC  C00A  F017         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
 11618  0054D0                     
 11619                           ;color_click.c: 176:     return current;
 11620  0054D0  EE20  F010         	lfsr	2,colorclick_readColour@current
 11621  0054D4  EE00  F010         	lfsr	0,?_colorclick_readColour
 11622  0054D8  0E07               	movlw	7
 11623  0054DA                     u6731:
 11624  0054DA  CFDB FFEB          	movff	plusw2,plusw0
 11625  0054DE  06E8               	decf	wreg,f,c
 11626  0054E0  E2FC               	bc	u6731
 11627  0054E2  0012               	return		;funcret
 11628  0054E4                     __end_of_colorclick_readColour:
 11629                           	callstack 0
 11630                           
 11631 ;; *************** function _colorclick_readRed *****************
 11632 ;; Defined at:
 11633 ;;		line 94 in file "color_click.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;		None
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;  tmp             2   13[COMRAM] unsigned int 
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  2    8[COMRAM] unsigned int 
 11640 ;; Registers used:
 11641 ;;		wreg, status,2, status,0, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11649 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11650 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11651 ;;Total ram usage:        7 bytes
 11652 ;; Hardware stack levels used: 1
 11653 ;; Hardware stack levels required when called: 7
 11654 ;; This function calls:
 11655 ;;		_I2C_2_Master_Read
 11656 ;;		_I2C_2_Master_RepStart
 11657 ;;		_I2C_2_Master_Start
 11658 ;;		_I2C_2_Master_Stop
 11659 ;;		_I2C_2_Master_Write
 11660 ;; This function is called by:
 11661 ;;		_colorclick_readColour
 11662 ;;		_colorclick_readColourRGBCLED
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           	psect	text44
 11667  005286                     __ptext44:
 11668                           	callstack 0
 11669  005286                     _colorclick_readRed:
 11670                           	callstack 22
 11671  005286                     
 11672                           ;color_click.c: 96:  unsigned int tmp;;color_click.c: 97:  I2C_2_Master_Start();
 11673  005286  EC64  F02C         	call	_I2C_2_Master_Start	;wreg free
 11674                           
 11675                           ;color_click.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
 11676  00528A  0E52               	movlw	82
 11677  00528C  EC48  F02C         	call	_I2C_2_Master_Write
 11678                           
 11679                           ;color_click.c: 99:  I2C_2_Master_Write(0xA0 | 0x16);
 11680  005290  0EB6               	movlw	182
 11681  005292  EC48  F02C         	call	_I2C_2_Master_Write
 11682                           
 11683                           ;color_click.c: 100:  I2C_2_Master_RepStart();
 11684  005296  EC5A  F02C         	call	_I2C_2_Master_RepStart	;wreg free
 11685                           
 11686                           ;color_click.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
 11687  00529A  0E53               	movlw	83
 11688  00529C  EC48  F02C         	call	_I2C_2_Master_Write
 11689                           
 11690                           ;color_click.c: 102:  tmp=I2C_2_Master_Read(1);
 11691  0052A0  0E01               	movlw	1
 11692  0052A2  EC94  F02A         	call	_I2C_2_Master_Read
 11693  0052A6  6E0B               	movwf	??_colorclick_readRed^0,c
 11694  0052A8  500B               	movf	??_colorclick_readRed^0,w,c
 11695  0052AA  6E0E               	movwf	colorclick_readRed@tmp^0,c
 11696  0052AC  6A0F               	clrf	(colorclick_readRed@tmp+1)^0,c
 11697                           
 11698                           ;color_click.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11699  0052AE  0E00               	movlw	0
 11700  0052B0  EC94  F02A         	call	_I2C_2_Master_Read
 11701  0052B4  6E0B               	movwf	??_colorclick_readRed^0,c
 11702  0052B6  500B               	movf	??_colorclick_readRed^0,w,c
 11703  0052B8  6E0D               	movwf	(??_colorclick_readRed+2)^0,c
 11704  0052BA  6A0C               	clrf	(??_colorclick_readRed+1)^0,c
 11705  0052BC  500E               	movf	colorclick_readRed@tmp^0,w,c
 11706  0052BE  100C               	iorwf	(??_colorclick_readRed+1)^0,w,c
 11707  0052C0  6E0E               	movwf	colorclick_readRed@tmp^0,c
 11708  0052C2  500F               	movf	(colorclick_readRed@tmp+1)^0,w,c
 11709  0052C4  100D               	iorwf	(??_colorclick_readRed+2)^0,w,c
 11710  0052C6  6E0F               	movwf	(colorclick_readRed@tmp+1)^0,c
 11711                           
 11712                           ;color_click.c: 104:  I2C_2_Master_Stop();
 11713  0052C8  EC5F  F02C         	call	_I2C_2_Master_Stop	;wreg free
 11714  0052CC                     
 11715                           ;color_click.c: 105:  return tmp;
 11716  0052CC  C00E  F009         	movff	colorclick_readRed@tmp,?_colorclick_readRed
 11717  0052D0  C00F  F00A         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
 11718  0052D4  0012               	return		;funcret
 11719  0052D6                     __end_of_colorclick_readRed:
 11720                           	callstack 0
 11721                           
 11722 ;; *************** function _colorclick_readGreen *****************
 11723 ;; Defined at:
 11724 ;;		line 113 in file "color_click.c"
 11725 ;; Parameters:    Size  Location     Type
 11726 ;;		None
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;  tmp             2   13[COMRAM] unsigned int 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  2    8[COMRAM] unsigned int 
 11731 ;; Registers used:
 11732 ;;		wreg, status,2, status,0, cstack
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11740 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11741 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11742 ;;Total ram usage:        7 bytes
 11743 ;; Hardware stack levels used: 1
 11744 ;; Hardware stack levels required when called: 7
 11745 ;; This function calls:
 11746 ;;		_I2C_2_Master_Read
 11747 ;;		_I2C_2_Master_RepStart
 11748 ;;		_I2C_2_Master_Start
 11749 ;;		_I2C_2_Master_Stop
 11750 ;;		_I2C_2_Master_Write
 11751 ;; This function is called by:
 11752 ;;		_colorclick_readColour
 11753 ;;		_colorclick_readColourRGBCLED
 11754 ;; This function uses a non-reentrant model
 11755 ;;
 11756                           
 11757                           	psect	text45
 11758  0052D6                     __ptext45:
 11759                           	callstack 0
 11760  0052D6                     _colorclick_readGreen:
 11761                           	callstack 22
 11762  0052D6                     
 11763                           ;color_click.c: 115:  unsigned int tmp;;color_click.c: 116:  I2C_2_Master_Start();
 11764  0052D6  EC64  F02C         	call	_I2C_2_Master_Start	;wreg free
 11765                           
 11766                           ;color_click.c: 117:  I2C_2_Master_Write(0x52 | 0x00);
 11767  0052DA  0E52               	movlw	82
 11768  0052DC  EC48  F02C         	call	_I2C_2_Master_Write
 11769                           
 11770                           ;color_click.c: 118:  I2C_2_Master_Write(0xA0 | 0x18);
 11771  0052E0  0EB8               	movlw	184
 11772  0052E2  EC48  F02C         	call	_I2C_2_Master_Write
 11773                           
 11774                           ;color_click.c: 119:  I2C_2_Master_RepStart();
 11775  0052E6  EC5A  F02C         	call	_I2C_2_Master_RepStart	;wreg free
 11776                           
 11777                           ;color_click.c: 120:  I2C_2_Master_Write(0x52 | 0x01);
 11778  0052EA  0E53               	movlw	83
 11779  0052EC  EC48  F02C         	call	_I2C_2_Master_Write
 11780                           
 11781                           ;color_click.c: 121:  tmp=I2C_2_Master_Read(1);
 11782  0052F0  0E01               	movlw	1
 11783  0052F2  EC94  F02A         	call	_I2C_2_Master_Read
 11784  0052F6  6E0B               	movwf	??_colorclick_readGreen^0,c
 11785  0052F8  500B               	movf	??_colorclick_readGreen^0,w,c
 11786  0052FA  6E0E               	movwf	colorclick_readGreen@tmp^0,c
 11787  0052FC  6A0F               	clrf	(colorclick_readGreen@tmp+1)^0,c
 11788                           
 11789                           ;color_click.c: 122:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11790  0052FE  0E00               	movlw	0
 11791  005300  EC94  F02A         	call	_I2C_2_Master_Read
 11792  005304  6E0B               	movwf	??_colorclick_readGreen^0,c
 11793  005306  500B               	movf	??_colorclick_readGreen^0,w,c
 11794  005308  6E0D               	movwf	(??_colorclick_readGreen+2)^0,c
 11795  00530A  6A0C               	clrf	(??_colorclick_readGreen+1)^0,c
 11796  00530C  500E               	movf	colorclick_readGreen@tmp^0,w,c
 11797  00530E  100C               	iorwf	(??_colorclick_readGreen+1)^0,w,c
 11798  005310  6E0E               	movwf	colorclick_readGreen@tmp^0,c
 11799  005312  500F               	movf	(colorclick_readGreen@tmp+1)^0,w,c
 11800  005314  100D               	iorwf	(??_colorclick_readGreen+2)^0,w,c
 11801  005316  6E0F               	movwf	(colorclick_readGreen@tmp+1)^0,c
 11802                           
 11803                           ;color_click.c: 123:  I2C_2_Master_Stop();
 11804  005318  EC5F  F02C         	call	_I2C_2_Master_Stop	;wreg free
 11805  00531C                     
 11806                           ;color_click.c: 124:  return tmp;
 11807  00531C  C00E  F009         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
 11808  005320  C00F  F00A         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
 11809  005324  0012               	return		;funcret
 11810  005326                     __end_of_colorclick_readGreen:
 11811                           	callstack 0
 11812                           
 11813 ;; *************** function _colorclick_readClear *****************
 11814 ;; Defined at:
 11815 ;;		line 151 in file "color_click.c"
 11816 ;; Parameters:    Size  Location     Type
 11817 ;;		None
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;  tmp             2   13[COMRAM] unsigned int 
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  2    8[COMRAM] unsigned int 
 11822 ;; Registers used:
 11823 ;;		wreg, status,2, status,0, cstack
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11831 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11832 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11833 ;;Total ram usage:        7 bytes
 11834 ;; Hardware stack levels used: 1
 11835 ;; Hardware stack levels required when called: 7
 11836 ;; This function calls:
 11837 ;;		_I2C_2_Master_Read
 11838 ;;		_I2C_2_Master_RepStart
 11839 ;;		_I2C_2_Master_Start
 11840 ;;		_I2C_2_Master_Stop
 11841 ;;		_I2C_2_Master_Write
 11842 ;; This function is called by:
 11843 ;;		_colorclick_readColour
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text46
 11848  005326                     __ptext46:
 11849                           	callstack 0
 11850  005326                     _colorclick_readClear:
 11851                           	callstack 22
 11852  005326                     
 11853                           ;color_click.c: 153:  unsigned int tmp;;color_click.c: 154:  I2C_2_Master_Start();
 11854  005326  EC64  F02C         	call	_I2C_2_Master_Start	;wreg free
 11855                           
 11856                           ;color_click.c: 155:  I2C_2_Master_Write(0x52 | 0x00);
 11857  00532A  0E52               	movlw	82
 11858  00532C  EC48  F02C         	call	_I2C_2_Master_Write
 11859                           
 11860                           ;color_click.c: 156:  I2C_2_Master_Write(0xA0 | 0x14);
 11861  005330  0EB4               	movlw	180
 11862  005332  EC48  F02C         	call	_I2C_2_Master_Write
 11863                           
 11864                           ;color_click.c: 157:  I2C_2_Master_RepStart();
 11865  005336  EC5A  F02C         	call	_I2C_2_Master_RepStart	;wreg free
 11866                           
 11867                           ;color_click.c: 158:  I2C_2_Master_Write(0x52 | 0x01);
 11868  00533A  0E53               	movlw	83
 11869  00533C  EC48  F02C         	call	_I2C_2_Master_Write
 11870                           
 11871                           ;color_click.c: 159:  tmp=I2C_2_Master_Read(1);
 11872  005340  0E01               	movlw	1
 11873  005342  EC94  F02A         	call	_I2C_2_Master_Read
 11874  005346  6E0B               	movwf	??_colorclick_readClear^0,c
 11875  005348  500B               	movf	??_colorclick_readClear^0,w,c
 11876  00534A  6E0E               	movwf	colorclick_readClear@tmp^0,c
 11877  00534C  6A0F               	clrf	(colorclick_readClear@tmp+1)^0,c
 11878                           
 11879                           ;color_click.c: 160:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11880  00534E  0E00               	movlw	0
 11881  005350  EC94  F02A         	call	_I2C_2_Master_Read
 11882  005354  6E0B               	movwf	??_colorclick_readClear^0,c
 11883  005356  500B               	movf	??_colorclick_readClear^0,w,c
 11884  005358  6E0D               	movwf	(??_colorclick_readClear+2)^0,c
 11885  00535A  6A0C               	clrf	(??_colorclick_readClear+1)^0,c
 11886  00535C  500E               	movf	colorclick_readClear@tmp^0,w,c
 11887  00535E  100C               	iorwf	(??_colorclick_readClear+1)^0,w,c
 11888  005360  6E0E               	movwf	colorclick_readClear@tmp^0,c
 11889  005362  500F               	movf	(colorclick_readClear@tmp+1)^0,w,c
 11890  005364  100D               	iorwf	(??_colorclick_readClear+2)^0,w,c
 11891  005366  6E0F               	movwf	(colorclick_readClear@tmp+1)^0,c
 11892                           
 11893                           ;color_click.c: 161:  I2C_2_Master_Stop();
 11894  005368  EC5F  F02C         	call	_I2C_2_Master_Stop	;wreg free
 11895  00536C                     
 11896                           ;color_click.c: 162:  return tmp;
 11897  00536C  C00E  F009         	movff	colorclick_readClear@tmp,?_colorclick_readClear
 11898  005370  C00F  F00A         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
 11899  005374  0012               	return		;funcret
 11900  005376                     __end_of_colorclick_readClear:
 11901                           	callstack 0
 11902                           
 11903 ;; *************** function _colorclick_readBlue *****************
 11904 ;; Defined at:
 11905 ;;		line 132 in file "color_click.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;		None
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;  tmp             2   13[COMRAM] unsigned int 
 11910 ;; Return value:  Size  Location     Type
 11911 ;;                  2    8[COMRAM] unsigned int 
 11912 ;; Registers used:
 11913 ;;		wreg, status,2, status,0, cstack
 11914 ;; Tracked objects:
 11915 ;;		On entry : 0/0
 11916 ;;		On exit  : 0/0
 11917 ;;		Unchanged: 0/0
 11918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11921 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11922 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11923 ;;Total ram usage:        7 bytes
 11924 ;; Hardware stack levels used: 1
 11925 ;; Hardware stack levels required when called: 7
 11926 ;; This function calls:
 11927 ;;		_I2C_2_Master_Read
 11928 ;;		_I2C_2_Master_RepStart
 11929 ;;		_I2C_2_Master_Start
 11930 ;;		_I2C_2_Master_Stop
 11931 ;;		_I2C_2_Master_Write
 11932 ;; This function is called by:
 11933 ;;		_colorclick_readColour
 11934 ;;		_colorclick_readColourRGBCLED
 11935 ;; This function uses a non-reentrant model
 11936 ;;
 11937                           
 11938                           	psect	text47
 11939  005376                     __ptext47:
 11940                           	callstack 0
 11941  005376                     _colorclick_readBlue:
 11942                           	callstack 22
 11943  005376                     
 11944                           ;color_click.c: 134:  unsigned int tmp;;color_click.c: 135:  I2C_2_Master_Start();
 11945  005376  EC64  F02C         	call	_I2C_2_Master_Start	;wreg free
 11946                           
 11947                           ;color_click.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
 11948  00537A  0E52               	movlw	82
 11949  00537C  EC48  F02C         	call	_I2C_2_Master_Write
 11950                           
 11951                           ;color_click.c: 137:  I2C_2_Master_Write(0xA0 | 0x1A);
 11952  005380  0EBA               	movlw	186
 11953  005382  EC48  F02C         	call	_I2C_2_Master_Write
 11954                           
 11955                           ;color_click.c: 138:  I2C_2_Master_RepStart();
 11956  005386  EC5A  F02C         	call	_I2C_2_Master_RepStart	;wreg free
 11957                           
 11958                           ;color_click.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
 11959  00538A  0E53               	movlw	83
 11960  00538C  EC48  F02C         	call	_I2C_2_Master_Write
 11961                           
 11962                           ;color_click.c: 140:  tmp=I2C_2_Master_Read(1);
 11963  005390  0E01               	movlw	1
 11964  005392  EC94  F02A         	call	_I2C_2_Master_Read
 11965  005396  6E0B               	movwf	??_colorclick_readBlue^0,c
 11966  005398  500B               	movf	??_colorclick_readBlue^0,w,c
 11967  00539A  6E0E               	movwf	colorclick_readBlue@tmp^0,c
 11968  00539C  6A0F               	clrf	(colorclick_readBlue@tmp+1)^0,c
 11969                           
 11970                           ;color_click.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11971  00539E  0E00               	movlw	0
 11972  0053A0  EC94  F02A         	call	_I2C_2_Master_Read
 11973  0053A4  6E0B               	movwf	??_colorclick_readBlue^0,c
 11974  0053A6  500B               	movf	??_colorclick_readBlue^0,w,c
 11975  0053A8  6E0D               	movwf	(??_colorclick_readBlue+2)^0,c
 11976  0053AA  6A0C               	clrf	(??_colorclick_readBlue+1)^0,c
 11977  0053AC  500E               	movf	colorclick_readBlue@tmp^0,w,c
 11978  0053AE  100C               	iorwf	(??_colorclick_readBlue+1)^0,w,c
 11979  0053B0  6E0E               	movwf	colorclick_readBlue@tmp^0,c
 11980  0053B2  500F               	movf	(colorclick_readBlue@tmp+1)^0,w,c
 11981  0053B4  100D               	iorwf	(??_colorclick_readBlue+2)^0,w,c
 11982  0053B6  6E0F               	movwf	(colorclick_readBlue@tmp+1)^0,c
 11983                           
 11984                           ;color_click.c: 142:  I2C_2_Master_Stop();
 11985  0053B8  EC5F  F02C         	call	_I2C_2_Master_Stop	;wreg free
 11986  0053BC                     
 11987                           ;color_click.c: 143:  return tmp;
 11988  0053BC  C00E  F009         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
 11989  0053C0  C00F  F00A         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
 11990  0053C4  0012               	return		;funcret
 11991  0053C6                     __end_of_colorclick_readBlue:
 11992                           	callstack 0
 11993                           
 11994 ;; *************** function _I2C_2_Master_RepStart *****************
 11995 ;; Defined at:
 11996 ;;		line 49 in file "i2c.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;		None
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      void 
 12003 ;; Registers used:
 12004 ;;		wreg, status,2, status,0, cstack
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12014 ;;Total ram usage:        0 bytes
 12015 ;; Hardware stack levels used: 1
 12016 ;; Hardware stack levels required when called: 6
 12017 ;; This function calls:
 12018 ;;		_I2C_2_Master_Idle
 12019 ;; This function is called by:
 12020 ;;		_colorclick_readRed
 12021 ;;		_colorclick_readGreen
 12022 ;;		_colorclick_readBlue
 12023 ;;		_colorclick_readClear
 12024 ;; This function uses a non-reentrant model
 12025 ;;
 12026                           
 12027                           	psect	text48
 12028  0058B4                     __ptext48:
 12029                           	callstack 0
 12030  0058B4                     _I2C_2_Master_RepStart:
 12031                           	callstack 22
 12032  0058B4                     
 12033                           ;i2c.c: 51:   I2C_2_Master_Idle();
 12034  0058B4  ECAD  F02B         	call	_I2C_2_Master_Idle	;wreg free
 12035  0058B8                     
 12036                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
 12037  0058B8  010E               	movlb	14	; () banked
 12038  0058BA  83DA               	bsf	218,1,b	;volatile
 12039  0058BC                     
 12040                           ; BSR set to: 14
 12041  0058BC  0012               	return		;funcret
 12042  0058BE                     __end_of_I2C_2_Master_RepStart:
 12043                           	callstack 0
 12044                           
 12045 ;; *************** function _I2C_2_Master_Read *****************
 12046 ;; Defined at:
 12047 ;;		line 79 in file "i2c.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;  ack             1    wreg     unsigned char 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  ack             1    6[COMRAM] unsigned char 
 12052 ;;  tmp             1    7[COMRAM] unsigned char 
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      unsigned char 
 12055 ;; Registers used:
 12056 ;;		wreg, status,2, status,0, cstack
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/0
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12066 ;;Total ram usage:        3 bytes
 12067 ;; Hardware stack levels used: 1
 12068 ;; Hardware stack levels required when called: 6
 12069 ;; This function calls:
 12070 ;;		_I2C_2_Master_Idle
 12071 ;; This function is called by:
 12072 ;;		_colorclick_readRed
 12073 ;;		_colorclick_readGreen
 12074 ;;		_colorclick_readBlue
 12075 ;;		_colorclick_readClear
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           	psect	text49
 12080  005528                     __ptext49:
 12081                           	callstack 0
 12082  005528                     _I2C_2_Master_Read:
 12083                           	callstack 22
 12084                           
 12085                           ; BSR set to: 14
 12086                           ;incstack = 0
 12087                           ;I2C_2_Master_Read@ack stored from wreg
 12088  005528  6E07               	movwf	I2C_2_Master_Read@ack^0,c
 12089  00552A                     
 12090                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
 12091  00552A  ECAD  F02B         	call	_I2C_2_Master_Idle	;wreg free
 12092  00552E                     
 12093                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
 12094  00552E  010E               	movlb	14	; () banked
 12095  005530  87DA               	bsf	218,3,b	;volatile
 12096                           
 12097                           ;i2c.c: 84:   I2C_2_Master_Idle();
 12098  005532  ECAD  F02B         	call	_I2C_2_Master_Idle	;wreg free
 12099  005536                     
 12100                           ;i2c.c: 85:   tmp = SSP2BUF;
 12101  005536  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12102                           
 12103                           ;i2c.c: 86:   I2C_2_Master_Idle();
 12104  00553A  ECAD  F02B         	call	_I2C_2_Master_Idle	;wreg free
 12105  00553E                     
 12106                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
 12107  00553E  5007               	movf	I2C_2_Master_Read@ack^0,w,c
 12108  005540  B4D8               	btfsc	status,2,c
 12109  005542  EFA5  F02A         	goto	u6041
 12110  005546  EFA9  F02A         	goto	u6040
 12111  00554A                     u6041:
 12112  00554A  6A06               	clrf	??_I2C_2_Master_Read^0,c
 12113  00554C  2A06               	incf	??_I2C_2_Master_Read^0,f,c
 12114  00554E  EFAA  F02A         	goto	u6058
 12115  005552                     u6040:
 12116  005552  6A06               	clrf	??_I2C_2_Master_Read^0,c
 12117  005554                     u6058:
 12118  005554  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
 12119  005556  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
 12120  005558  010E               	movlb	14	; () banked
 12121  00555A  51DA               	movf	218,w,b	;volatile
 12122  00555C  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
 12123  00555E  0BDF               	andlw	-33
 12124  005560  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
 12125  005562  6FDA               	movwf	218,b	;volatile
 12126  005564                     
 12127                           ; BSR set to: 14
 12128                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
 12129  005564  89DA               	bsf	218,4,b	;volatile
 12130  005566                     
 12131                           ; BSR set to: 14
 12132                           ;i2c.c: 89:   return tmp;
 12133  005566  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
 12134  005568                     
 12135                           ; BSR set to: 14
 12136  005568  0012               	return		;funcret
 12137  00556A                     __end_of_I2C_2_Master_Read:
 12138                           	callstack 0
 12139                           
 12140 ;; *************** function _colorclick_init *****************
 12141 ;; Defined at:
 12142 ;;		line 17 in file "color_click.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;		None
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;		None
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1    wreg      void 
 12149 ;; Registers used:
 12150 ;;		wreg, status,2, status,0, cstack
 12151 ;; Tracked objects:
 12152 ;;		On entry : 0/0
 12153 ;;		On exit  : 0/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12160 ;;Total ram usage:        1 bytes
 12161 ;; Hardware stack levels used: 1
 12162 ;; Hardware stack levels required when called: 8
 12163 ;; This function calls:
 12164 ;;		_I2C_2_Master_Init
 12165 ;;		_colorclick_toggleClearLED
 12166 ;;		_colorclick_writetoaddr
 12167 ;; This function is called by:
 12168 ;;		_main
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           	psect	text50
 12173  0055AA                     __ptext50:
 12174                           	callstack 0
 12175  0055AA                     _colorclick_init:
 12176                           	callstack 22
 12177  0055AA                     
 12178                           ;color_click.c: 20:     I2C_2_Master_Init();
 12179  0055AA  EC98  F02B         	call	_I2C_2_Master_Init	;wreg free
 12180  0055AE                     
 12181                           ;color_click.c: 23:   colorclick_writetoaddr(0x00, 0x01);
 12182  0055AE  0E01               	movlw	1
 12183  0055B0  6E07               	movwf	colorclick_writetoaddr@value^0,c
 12184  0055B2  0E00               	movlw	0
 12185  0055B4  ECF9  F02B         	call	_colorclick_writetoaddr
 12186  0055B8                     
 12187                           ;color_click.c: 24:     _delay((unsigned long)((3)*(64000000/4000.0)));
 12188  0055B8  0E3F               	movlw	63
 12189  0055BA  6E09               	movwf	??_colorclick_init^0,c
 12190  0055BC  0E55               	movlw	85
 12191  0055BE                     u10477:
 12192  0055BE  2EE8               	decfsz	wreg,f,c
 12193  0055C0  D7FE               	bra	u10477
 12194  0055C2  2E09               	decfsz	??_colorclick_init^0,f,c
 12195  0055C4  D7FC               	bra	u10477
 12196  0055C6  F000               	nop	
 12197  0055C8                     
 12198                           ;color_click.c: 27:  colorclick_writetoaddr(0x00, 0x03);
 12199  0055C8  0E03               	movlw	3
 12200  0055CA  6E07               	movwf	colorclick_writetoaddr@value^0,c
 12201  0055CC  0E00               	movlw	0
 12202  0055CE  ECF9  F02B         	call	_colorclick_writetoaddr
 12203  0055D2                     
 12204                           ;color_click.c: 30:  colorclick_writetoaddr(0x01, 0xD5);
 12205  0055D2  0ED5               	movlw	213
 12206  0055D4  6E07               	movwf	colorclick_writetoaddr@value^0,c
 12207  0055D6  0E01               	movlw	1
 12208  0055D8  ECF9  F02B         	call	_colorclick_writetoaddr
 12209  0055DC                     
 12210                           ;color_click.c: 33:     TRISGbits.TRISG1 = 0;
 12211  0055DC  9287               	bcf	135,1,c	;volatile
 12212  0055DE                     
 12213                           ;color_click.c: 34:     TRISAbits.TRISA4 = 0;
 12214  0055DE  9881               	bcf	129,4,c	;volatile
 12215  0055E0                     
 12216                           ;color_click.c: 35:     TRISFbits.TRISF7 = 0;
 12217  0055E0  9E86               	bcf	134,7,c	;volatile
 12218  0055E2                     
 12219                           ;color_click.c: 38:     colorclick_toggleClearLED(0);
 12220  0055E2  0E00               	movlw	0
 12221  0055E4  ECE8  F02B         	call	_colorclick_toggleClearLED
 12222  0055E8  0012               	return		;funcret
 12223  0055EA                     __end_of_colorclick_init:
 12224                           	callstack 0
 12225                           
 12226 ;; *************** function _colorclick_writetoaddr *****************
 12227 ;; Defined at:
 12228 ;;		line 80 in file "color_click.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;  address         1    wreg     unsigned char 
 12231 ;;  value           1    6[COMRAM] unsigned char 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;  address         1    7[COMRAM] unsigned char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      void 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0, cstack
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12243 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12247 ;;Total ram usage:        2 bytes
 12248 ;; Hardware stack levels used: 1
 12249 ;; Hardware stack levels required when called: 7
 12250 ;; This function calls:
 12251 ;;		_I2C_2_Master_Start
 12252 ;;		_I2C_2_Master_Stop
 12253 ;;		_I2C_2_Master_Write
 12254 ;; This function is called by:
 12255 ;;		_colorclick_init
 12256 ;;		_interrupts_init
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           	psect	text51
 12261  0057F2                     __ptext51:
 12262                           	callstack 0
 12263  0057F2                     _colorclick_writetoaddr:
 12264                           	callstack 22
 12265                           
 12266                           ;incstack = 0
 12267                           ;colorclick_writetoaddr@address stored from wreg
 12268  0057F2  6E08               	movwf	colorclick_writetoaddr@address^0,c
 12269  0057F4                     
 12270                           ;color_click.c: 80: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           81: {;color_click.c: 82:     I2C_2_Master_Start();
 12271  0057F4  EC64  F02C         	call	_I2C_2_Master_Start	;wreg free
 12272                           
 12273                           ;color_click.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
 12274  0057F8  0E52               	movlw	82
 12275  0057FA  EC48  F02C         	call	_I2C_2_Master_Write
 12276                           
 12277                           ;color_click.c: 84:     I2C_2_Master_Write(0x80 | address);
 12278  0057FE  5008               	movf	colorclick_writetoaddr@address^0,w,c
 12279  005800  0980               	iorlw	128
 12280  005802  EC48  F02C         	call	_I2C_2_Master_Write
 12281                           
 12282                           ;color_click.c: 85:     I2C_2_Master_Write(value);
 12283  005806  5007               	movf	colorclick_writetoaddr@value^0,w,c
 12284  005808  EC48  F02C         	call	_I2C_2_Master_Write
 12285                           
 12286                           ;color_click.c: 86:     I2C_2_Master_Stop();
 12287  00580C  EC5F  F02C         	call	_I2C_2_Master_Stop	;wreg free
 12288  005810  0012               	return		;funcret
 12289  005812                     __end_of_colorclick_writetoaddr:
 12290                           	callstack 0
 12291                           
 12292 ;; *************** function _I2C_2_Master_Write *****************
 12293 ;; Defined at:
 12294 ;;		line 69 in file "i2c.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;  data_byte       1    wreg     unsigned char 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  data_byte       1    5[COMRAM] unsigned char 
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, status,2, status,0, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12312 ;;Total ram usage:        1 bytes
 12313 ;; Hardware stack levels used: 1
 12314 ;; Hardware stack levels required when called: 6
 12315 ;; This function calls:
 12316 ;;		_I2C_2_Master_Idle
 12317 ;; This function is called by:
 12318 ;;		_colorclick_writetoaddr
 12319 ;;		_colorclick_readRed
 12320 ;;		_colorclick_readGreen
 12321 ;;		_colorclick_readBlue
 12322 ;;		_colorclick_readClear
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           	psect	text52
 12327  005890                     __ptext52:
 12328                           	callstack 0
 12329  005890                     _I2C_2_Master_Write:
 12330                           	callstack 22
 12331                           
 12332                           ;incstack = 0
 12333                           ;I2C_2_Master_Write@data_byte stored from wreg
 12334  005890  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
 12335  005892                     
 12336                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
 12337  005892  ECAD  F02B         	call	_I2C_2_Master_Idle	;wreg free
 12338  005896                     
 12339                           ;i2c.c: 72:   SSP2BUF = data_byte;
 12340  005896  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 12341  00589A  0012               	return		;funcret
 12342  00589C                     __end_of_I2C_2_Master_Write:
 12343                           	callstack 0
 12344                           
 12345 ;; *************** function _I2C_2_Master_Stop *****************
 12346 ;; Defined at:
 12347 ;;		line 59 in file "i2c.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;		None
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;		None
 12352 ;; Return value:  Size  Location     Type
 12353 ;;                  1    wreg      void 
 12354 ;; Registers used:
 12355 ;;		wreg, status,2, status,0, cstack
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12365 ;;Total ram usage:        0 bytes
 12366 ;; Hardware stack levels used: 1
 12367 ;; Hardware stack levels required when called: 6
 12368 ;; This function calls:
 12369 ;;		_I2C_2_Master_Idle
 12370 ;; This function is called by:
 12371 ;;		_colorclick_writetoaddr
 12372 ;;		_colorclick_readRed
 12373 ;;		_colorclick_readGreen
 12374 ;;		_colorclick_readBlue
 12375 ;;		_colorclick_readClear
 12376 ;; This function uses a non-reentrant model
 12377 ;;
 12378                           
 12379                           	psect	text53
 12380  0058BE                     __ptext53:
 12381                           	callstack 0
 12382  0058BE                     _I2C_2_Master_Stop:
 12383                           	callstack 22
 12384  0058BE                     
 12385                           ;i2c.c: 61:   I2C_2_Master_Idle();
 12386  0058BE  ECAD  F02B         	call	_I2C_2_Master_Idle	;wreg free
 12387  0058C2                     
 12388                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
 12389  0058C2  010E               	movlb	14	; () banked
 12390  0058C4  85DA               	bsf	218,2,b	;volatile
 12391  0058C6                     
 12392                           ; BSR set to: 14
 12393  0058C6  0012               	return		;funcret
 12394  0058C8                     __end_of_I2C_2_Master_Stop:
 12395                           	callstack 0
 12396                           
 12397 ;; *************** function _I2C_2_Master_Start *****************
 12398 ;; Defined at:
 12399 ;;		line 39 in file "i2c.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;		None
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;		None
 12404 ;; Return value:  Size  Location     Type
 12405 ;;                  1    wreg      void 
 12406 ;; Registers used:
 12407 ;;		wreg, status,2, status,0, cstack
 12408 ;; Tracked objects:
 12409 ;;		On entry : 0/0
 12410 ;;		On exit  : 0/0
 12411 ;;		Unchanged: 0/0
 12412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12417 ;;Total ram usage:        0 bytes
 12418 ;; Hardware stack levels used: 1
 12419 ;; Hardware stack levels required when called: 6
 12420 ;; This function calls:
 12421 ;;		_I2C_2_Master_Idle
 12422 ;; This function is called by:
 12423 ;;		_colorclick_writetoaddr
 12424 ;;		_colorclick_readRed
 12425 ;;		_colorclick_readGreen
 12426 ;;		_colorclick_readBlue
 12427 ;;		_colorclick_readClear
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text54
 12432  0058C8                     __ptext54:
 12433                           	callstack 0
 12434  0058C8                     _I2C_2_Master_Start:
 12435                           	callstack 22
 12436  0058C8                     
 12437                           ;i2c.c: 41:   I2C_2_Master_Idle();
 12438  0058C8  ECAD  F02B         	call	_I2C_2_Master_Idle	;wreg free
 12439  0058CC                     
 12440                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
 12441  0058CC  010E               	movlb	14	; () banked
 12442  0058CE  81DA               	bsf	218,0,b	;volatile
 12443  0058D0                     
 12444                           ; BSR set to: 14
 12445  0058D0  0012               	return		;funcret
 12446  0058D2                     __end_of_I2C_2_Master_Start:
 12447                           	callstack 0
 12448                           
 12449 ;; *************** function _I2C_2_Master_Idle *****************
 12450 ;; Defined at:
 12451 ;;		line 30 in file "i2c.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;		None
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;		None
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  1    wreg      void 
 12458 ;; Registers used:
 12459 ;;		wreg, status,2, status,0
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12469 ;;Total ram usage:        1 bytes
 12470 ;; Hardware stack levels used: 1
 12471 ;; Hardware stack levels required when called: 5
 12472 ;; This function calls:
 12473 ;;		Nothing
 12474 ;; This function is called by:
 12475 ;;		_I2C_2_Master_Start
 12476 ;;		_I2C_2_Master_RepStart
 12477 ;;		_I2C_2_Master_Stop
 12478 ;;		_I2C_2_Master_Write
 12479 ;;		_I2C_2_Master_Read
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           	psect	text55
 12484  00575A                     __ptext55:
 12485                           	callstack 0
 12486  00575A                     _I2C_2_Master_Idle:
 12487                           	callstack 22
 12488  00575A                     l30:
 12489  00575A  010E               	movlb	14	; () banked
 12490  00575C  B5D8               	btfsc	216,2,b	;volatile
 12491  00575E  EFB3  F02B         	goto	u5211
 12492  005762  EFB5  F02B         	goto	u5210
 12493  005766                     u5211:
 12494  005766  EFAD  F02B         	goto	l30
 12495  00576A                     u5210:
 12496  00576A                     
 12497                           ; BSR set to: 14
 12498  00576A  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
 12499  00576E  0E1F               	movlw	31
 12500  005770  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
 12501  005772  A4D8               	btfss	status,2,c
 12502  005774  EFBE  F02B         	goto	u5221
 12503  005778  EFC0  F02B         	goto	u5220
 12504  00577C                     u5221:
 12505  00577C  EFAD  F02B         	goto	l30
 12506  005780                     u5220:
 12507  005780                     
 12508                           ; BSR set to: 14
 12509  005780  0012               	return		;funcret
 12510  005782                     __end_of_I2C_2_Master_Idle:
 12511                           	callstack 0
 12512                           
 12513 ;; *************** function _colorclick_toggleClearLED *****************
 12514 ;; Defined at:
 12515 ;;		line 67 in file "color_click.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;  toggle          1    wreg     unsigned char 
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;  toggle          1    4[COMRAM] unsigned char 
 12520 ;; Return value:  Size  Location     Type
 12521 ;;                  1    wreg      void 
 12522 ;; Registers used:
 12523 ;;		wreg
 12524 ;; Tracked objects:
 12525 ;;		On entry : 0/0
 12526 ;;		On exit  : 0/0
 12527 ;;		Unchanged: 0/0
 12528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12533 ;;Total ram usage:        1 bytes
 12534 ;; Hardware stack levels used: 1
 12535 ;; Hardware stack levels required when called: 5
 12536 ;; This function calls:
 12537 ;;		Nothing
 12538 ;; This function is called by:
 12539 ;;		_main
 12540 ;;		_colorclick_init
 12541 ;;		_colorclick_readColourRGBCLED
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           	psect	text56
 12546  0057D0                     __ptext56:
 12547                           	callstack 0
 12548  0057D0                     _colorclick_toggleClearLED:
 12549                           	callstack 25
 12550                           
 12551                           ; BSR set to: 14
 12552                           ;incstack = 0
 12553                           ;colorclick_toggleClearLED@toggle stored from wreg
 12554  0057D0  6E05               	movwf	colorclick_toggleClearLED@toggle^0,c
 12555  0057D2                     
 12556                           ;color_click.c: 67: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          68: {;color_click.c: 69:     LATGbits.LATG1 = toggle;
 12557  0057D2  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
 12558  0057D4  D002               	bra	u6285
 12559  0057D6  927F               	bcf	127,1,c	;volatile
 12560  0057D8  D001               	bra	u6286
 12561  0057DA                     u6285:
 12562  0057DA  827F               	bsf	127,1,c	;volatile
 12563  0057DC                     u6286:
 12564                           
 12565                           ;color_click.c: 70:     LATFbits.LATF7 = toggle;
 12566  0057DC  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
 12567  0057DE  D002               	bra	u6295
 12568  0057E0  9E7E               	bcf	126,7,c	;volatile
 12569  0057E2  D001               	bra	u6296
 12570  0057E4                     u6295:
 12571  0057E4  8E7E               	bsf	126,7,c	;volatile
 12572  0057E6                     u6296:
 12573                           
 12574                           ;color_click.c: 71:     LATAbits.LATA4 = toggle;
 12575  0057E6  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
 12576  0057E8  D002               	bra	u6305
 12577  0057EA  9879               	bcf	121,4,c	;volatile
 12578  0057EC  D001               	bra	u6306
 12579  0057EE                     u6305:
 12580  0057EE  8879               	bsf	121,4,c	;volatile
 12581  0057F0                     u6306:
 12582  0057F0  0012               	return		;funcret
 12583  0057F2                     __end_of_colorclick_toggleClearLED:
 12584                           	callstack 0
 12585                           
 12586 ;; *************** function _I2C_2_Master_Init *****************
 12587 ;; Defined at:
 12588 ;;		line 8 in file "i2c.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;		None
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, status,2
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12606 ;;Total ram usage:        0 bytes
 12607 ;; Hardware stack levels used: 1
 12608 ;; Hardware stack levels required when called: 5
 12609 ;; This function calls:
 12610 ;;		Nothing
 12611 ;; This function is called by:
 12612 ;;		_colorclick_init
 12613 ;; This function uses a non-reentrant model
 12614 ;;
 12615                           
 12616                           	psect	text57
 12617  005730                     __ptext57:
 12618                           	callstack 0
 12619  005730                     _I2C_2_Master_Init:
 12620                           	callstack 24
 12621  005730                     
 12622                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
 12623  005730  010E               	movlb	14	; () banked
 12624  005732  51D9               	movf	217,w,b	;volatile
 12625  005734  0BF0               	andlw	-16
 12626  005736  0908               	iorlw	8
 12627  005738  6FD9               	movwf	217,b	;volatile
 12628  00573A                     
 12629                           ; BSR set to: 14
 12630                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
 12631  00573A  8BD9               	bsf	217,5,b	;volatile
 12632                           
 12633                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
 12634  00573C  0E9F               	movlw	159
 12635  00573E  6FD6               	movwf	214,b	;volatile
 12636  005740                     
 12637                           ; BSR set to: 14
 12638                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
 12639  005740  8A84               	bsf	132,5,c	;volatile
 12640  005742                     
 12641                           ; BSR set to: 14
 12642                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
 12643  005742  8C84               	bsf	132,6,c	;volatile
 12644  005744                     
 12645                           ; BSR set to: 14
 12646                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
 12647  005744  9BA7               	bcf	167,5,b	;volatile
 12648  005746                     
 12649                           ; BSR set to: 14
 12650                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
 12651  005746  9DA7               	bcf	167,6,b	;volatile
 12652                           
 12653                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
 12654  005748  0E1D               	movlw	29
 12655  00574A  6F1D               	movwf	29,b	;volatile
 12656                           
 12657                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
 12658  00574C  0E1E               	movlw	30
 12659  00574E  6F1C               	movwf	28,b	;volatile
 12660                           
 12661                           ;i2c.c: 22:   RD5PPS=0x1C;
 12662  005750  0E1C               	movlw	28
 12663  005752  6F6F               	movwf	111,b	;volatile
 12664                           
 12665                           ;i2c.c: 23:   RD6PPS=0x1B;
 12666  005754  0E1B               	movlw	27
 12667  005756  6F70               	movwf	112,b	;volatile
 12668  005758                     
 12669                           ; BSR set to: 14
 12670  005758  0012               	return		;funcret
 12671  00575A                     __end_of_I2C_2_Master_Init:
 12672                           	callstack 0
 12673                           
 12674 ;; *************** function _USART4_init *****************
 12675 ;; Defined at:
 12676 ;;		line 7 in file "serial.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;		None
 12679 ;; Auto vars:     Size  Location     Type
 12680 ;;		None
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  1    wreg      void 
 12683 ;; Registers used:
 12684 ;;		wreg, status,2
 12685 ;; Tracked objects:
 12686 ;;		On entry : 0/0
 12687 ;;		On exit  : 0/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12694 ;;Total ram usage:        0 bytes
 12695 ;; Hardware stack levels used: 1
 12696 ;; Hardware stack levels required when called: 5
 12697 ;; This function calls:
 12698 ;;		Nothing
 12699 ;; This function is called by:
 12700 ;;		_main
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           	psect	text58
 12705  005812                     __ptext58:
 12706                           	callstack 0
 12707  005812                     _USART4_init:
 12708                           	callstack 25
 12709  005812                     
 12710                           ;serial.c: 10:     RC0PPS = 0x12;
 12711  005812  0E12               	movlw	18
 12712  005814  010E               	movlb	14	; () banked
 12713  005816  6F62               	movwf	98,b	;volatile
 12714                           
 12715                           ;serial.c: 11:     RX4PPS = 0x11;
 12716  005818  0E11               	movlw	17
 12717  00581A  6F15               	movwf	21,b	;volatile
 12718  00581C                     
 12719                           ; BSR set to: 14
 12720                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
 12721  00581C  8283               	bsf	131,1,c	;volatile
 12722  00581E                     
 12723                           ; BSR set to: 14
 12724                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
 12725  00581E  97E9               	bcf	233,3,b	;volatile
 12726  005820                     
 12727                           ; BSR set to: 14
 12728                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
 12729  005820  95E8               	bcf	232,2,b	;volatile
 12730                           
 12731                           ;serial.c: 16:     SP4BRGL = 51;
 12732  005822  0E33               	movlw	51
 12733  005824  6FE5               	movwf	229,b	;volatile
 12734                           
 12735                           ;serial.c: 17:     SP4BRGH = 0;
 12736  005826  0E00               	movlw	0
 12737  005828  6FE6               	movwf	230,b	;volatile
 12738  00582A                     
 12739                           ; BSR set to: 14
 12740                           ;serial.c: 19:     RC4STAbits.CREN = 1;
 12741  00582A  89E7               	bsf	231,4,b	;volatile
 12742  00582C                     
 12743                           ; BSR set to: 14
 12744                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
 12745  00582C  8BE8               	bsf	232,5,b	;volatile
 12746  00582E                     
 12747                           ; BSR set to: 14
 12748                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
 12749  00582E  8FE7               	bsf	231,7,b	;volatile
 12750  005830                     
 12751                           ; BSR set to: 14
 12752  005830  0012               	return		;funcret
 12753  005832                     __end_of_USART4_init:
 12754                           	callstack 0
 12755                           
 12756 ;; *************** function _DCmotors_init *****************
 12757 ;; Defined at:
 12758 ;;		line 11 in file "dc_motor.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;  PWMperiod       1    wreg     unsigned char 
 12761 ;; Auto vars:     Size  Location     Type
 12762 ;;  PWMperiod       1    4[COMRAM] unsigned char 
 12763 ;; Return value:  Size  Location     Type
 12764 ;;                  1    wreg      void 
 12765 ;; Registers used:
 12766 ;;		wreg, status,2, cstack
 12767 ;; Tracked objects:
 12768 ;;		On entry : 0/0
 12769 ;;		On exit  : 0/0
 12770 ;;		Unchanged: 0/0
 12771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12776 ;;Total ram usage:        1 bytes
 12777 ;; Hardware stack levels used: 1
 12778 ;; Hardware stack levels required when called: 6
 12779 ;; This function calls:
 12780 ;;		_buggyLEDs_init
 12781 ;;		_clicker2LEDs_init
 12782 ;;		_clicker2buttons_init
 12783 ;; This function is called by:
 12784 ;;		_main
 12785 ;; This function uses a non-reentrant model
 12786 ;;
 12787                           
 12788                           	psect	text59
 12789  0053C6                     __ptext59:
 12790                           	callstack 0
 12791  0053C6                     _DCmotors_init:
 12792                           	callstack 24
 12793                           
 12794                           ; BSR set to: 14
 12795                           ;incstack = 0
 12796                           ;DCmotors_init@PWMperiod stored from wreg
 12797  0053C6  6E05               	movwf	DCmotors_init@PWMperiod^0,c
 12798  0053C8                     
 12799                           ;dc_motor.c: 11: void DCmotors_init(unsigned char PWMperiod);dc_motor.c: 12: {;dc_motor.
      +                          c: 14:     T2CONbits.CKPS=0b100;
 12800  0053C8  50BD               	movf	189,w,c	;volatile
 12801  0053CA  0B8F               	andlw	-113
 12802  0053CC  0940               	iorlw	64
 12803  0053CE  6EBD               	movwf	189,c	;volatile
 12804                           
 12805                           ;dc_motor.c: 15:     T2HLTbits.MODE=0b00000;
 12806  0053D0  0EE0               	movlw	-32
 12807  0053D2  16BE               	andwf	190,f,c	;volatile
 12808                           
 12809                           ;dc_motor.c: 16:     T2CLKCONbits.CS=0b0001;
 12810  0053D4  50BF               	movf	191,w,c	;volatile
 12811  0053D6  0BF0               	andlw	-16
 12812  0053D8  0901               	iorlw	1
 12813  0053DA  6EBF               	movwf	191,c	;volatile
 12814  0053DC                     
 12815                           ;dc_motor.c: 19:     T2PR=PWMperiod;
 12816  0053DC  C005  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 12817  0053E0                     
 12818                           ;dc_motor.c: 20:     T2CONbits.ON=1;
 12819  0053E0  8EBD               	bsf	189,7,c	;volatile
 12820  0053E2                     
 12821                           ;dc_motor.c: 23:     TRISEbits.TRISE2=0;
 12822  0053E2  9485               	bcf	133,2,c	;volatile
 12823  0053E4                     
 12824                           ;dc_motor.c: 24:     TRISEbits.TRISE4=0;
 12825  0053E4  9885               	bcf	133,4,c	;volatile
 12826  0053E6                     
 12827                           ;dc_motor.c: 25:     TRISCbits.TRISC7=0;
 12828  0053E6  9E83               	bcf	131,7,c	;volatile
 12829  0053E8                     
 12830                           ;dc_motor.c: 26:     TRISGbits.TRISG6=0;
 12831  0053E8  9C87               	bcf	135,6,c	;volatile
 12832  0053EA                     
 12833                           ;dc_motor.c: 28:     LATEbits.LATE2=0;
 12834  0053EA  947D               	bcf	125,2,c	;volatile
 12835  0053EC                     
 12836                           ;dc_motor.c: 29:     LATEbits.LATE4=0;
 12837  0053EC  987D               	bcf	125,4,c	;volatile
 12838  0053EE                     
 12839                           ;dc_motor.c: 30:     LATCbits.LATC7=0;
 12840  0053EE  9E7B               	bcf	123,7,c	;volatile
 12841  0053F0                     
 12842                           ;dc_motor.c: 31:     LATGbits.LATG6=0;
 12843  0053F0  9C7F               	bcf	127,6,c	;volatile
 12844                           
 12845                           ;dc_motor.c: 33:     PWM6DCH=0;
 12846  0053F2  0E00               	movlw	0
 12847  0053F4  6EA3               	movwf	163,c	;volatile
 12848                           
 12849                           ;dc_motor.c: 34:     PWM7DCH=0;
 12850  0053F6  0E00               	movlw	0
 12851  0053F8  6EA0               	movwf	160,c	;volatile
 12852  0053FA                     
 12853                           ;dc_motor.c: 36:     PWM6CONbits.EN = 1;
 12854  0053FA  8EA4               	bsf	164,7,c	;volatile
 12855  0053FC                     
 12856                           ;dc_motor.c: 37:     PWM7CONbits.EN = 1;
 12857  0053FC  8EA1               	bsf	161,7,c	;volatile
 12858                           
 12859                           ;dc_motor.c: 39:     RE2PPS=0x0A;
 12860  0053FE  0E0A               	movlw	10
 12861  005400  010E               	movlb	14	; () banked
 12862  005402  6F74               	movwf	116,b	;volatile
 12863                           
 12864                           ;dc_motor.c: 40:     RC7PPS=0x0B;
 12865  005404  0E0B               	movlw	11
 12866  005406  6F69               	movwf	105,b	;volatile
 12867  005408                     
 12868                           ; BSR set to: 14
 12869                           ;dc_motor.c: 43:     clicker2buttons_init();
 12870  005408  EC4E  F02C         	call	_clicker2buttons_init	;wreg free
 12871  00540C                     
 12872                           ;dc_motor.c: 44:     clicker2LEDs_init();
 12873  00540C  EC69  F02C         	call	_clicker2LEDs_init	;wreg free
 12874  005410                     
 12875                           ;dc_motor.c: 45:     buggyLEDs_init();
 12876  005410  EC32  F02C         	call	_buggyLEDs_init	;wreg free
 12877  005414  0012               	return		;funcret
 12878  005416                     __end_of_DCmotors_init:
 12879                           	callstack 0
 12880                           
 12881 ;; *************** function _clicker2buttons_init *****************
 12882 ;; Defined at:
 12883 ;;		line 74 in file "dc_motor.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;		None
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;		None
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1    wreg      void 
 12890 ;; Registers used:
 12891 ;;		None
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12901 ;;Total ram usage:        0 bytes
 12902 ;; Hardware stack levels used: 1
 12903 ;; Hardware stack levels required when called: 5
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		_DCmotors_init
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           	psect	text60
 12912  00589C                     __ptext60:
 12913                           	callstack 0
 12914  00589C                     _clicker2buttons_init:
 12915                           	callstack 24
 12916  00589C                     
 12917                           ;dc_motor.c: 77:     TRISFbits.TRISF2=1;
 12918  00589C  8486               	bsf	134,2,c	;volatile
 12919                           
 12920                           ;dc_motor.c: 78:     TRISFbits.TRISF3=1;
 12921  00589E  8686               	bsf	134,3,c	;volatile
 12922                           
 12923                           ;dc_motor.c: 79:     ANSELFbits.ANSELF2=0;
 12924  0058A0  010E               	movlb	14	; () banked
 12925  0058A2  95B4               	bcf	180,2,b	;volatile
 12926                           
 12927                           ;dc_motor.c: 80:     ANSELFbits.ANSELF3=0;
 12928  0058A4  97B4               	bcf	180,3,b	;volatile
 12929  0058A6                     
 12930                           ; BSR set to: 14
 12931  0058A6  0012               	return		;funcret
 12932  0058A8                     __end_of_clicker2buttons_init:
 12933                           	callstack 0
 12934                           
 12935 ;; *************** function _clicker2LEDs_init *****************
 12936 ;; Defined at:
 12937 ;;		line 86 in file "dc_motor.c"
 12938 ;; Parameters:    Size  Location     Type
 12939 ;;		None
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;		None
 12942 ;; Return value:  Size  Location     Type
 12943 ;;                  1    wreg      void 
 12944 ;; Registers used:
 12945 ;;		None
 12946 ;; Tracked objects:
 12947 ;;		On entry : 0/0
 12948 ;;		On exit  : 0/0
 12949 ;;		Unchanged: 0/0
 12950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12955 ;;Total ram usage:        0 bytes
 12956 ;; Hardware stack levels used: 1
 12957 ;; Hardware stack levels required when called: 5
 12958 ;; This function calls:
 12959 ;;		Nothing
 12960 ;; This function is called by:
 12961 ;;		_DCmotors_init
 12962 ;; This function uses a non-reentrant model
 12963 ;;
 12964                           
 12965                           	psect	text61
 12966  0058D2                     __ptext61:
 12967                           	callstack 0
 12968  0058D2                     _clicker2LEDs_init:
 12969                           	callstack 24
 12970  0058D2                     
 12971                           ;dc_motor.c: 88:     TRISDbits.TRISD7 = 0;
 12972  0058D2  9E84               	bcf	132,7,c	;volatile
 12973                           
 12974                           ;dc_motor.c: 89:     TRISHbits.TRISH3 = 0;
 12975  0058D4  9688               	bcf	136,3,c	;volatile
 12976                           
 12977                           ;dc_motor.c: 91:     LATDbits.LATD7 = 0;
 12978  0058D6  9E7C               	bcf	124,7,c	;volatile
 12979                           
 12980                           ;dc_motor.c: 92:     LATHbits.LATH3 = 0;
 12981  0058D8  9680               	bcf	128,3,c	;volatile
 12982  0058DA  0012               	return		;funcret
 12983  0058DC                     __end_of_clicker2LEDs_init:
 12984                           	callstack 0
 12985                           
 12986 ;; *************** function _buggyLEDs_init *****************
 12987 ;; Defined at:
 12988 ;;		line 98 in file "dc_motor.c"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;		None
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;		None
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      void 
 12995 ;; Registers used:
 12996 ;;		None
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13006 ;;Total ram usage:        0 bytes
 13007 ;; Hardware stack levels used: 1
 13008 ;; Hardware stack levels required when called: 5
 13009 ;; This function calls:
 13010 ;;		Nothing
 13011 ;; This function is called by:
 13012 ;;		_DCmotors_init
 13013 ;; This function uses a non-reentrant model
 13014 ;;
 13015                           
 13016                           	psect	text62
 13017  005864                     __ptext62:
 13018                           	callstack 0
 13019  005864                     _buggyLEDs_init:
 13020                           	callstack 24
 13021  005864                     
 13022                           ;dc_motor.c: 100:     TRISHbits.TRISH1 = 0;
 13023  005864  9288               	bcf	136,1,c	;volatile
 13024                           
 13025                           ;dc_motor.c: 101:     TRISDbits.TRISD3 = 0;
 13026  005866  9684               	bcf	132,3,c	;volatile
 13027                           
 13028                           ;dc_motor.c: 102:     TRISDbits.TRISD4 = 0;
 13029  005868  9884               	bcf	132,4,c	;volatile
 13030                           
 13031                           ;dc_motor.c: 103:     TRISFbits.TRISF0 = 0;
 13032  00586A  9086               	bcf	134,0,c	;volatile
 13033                           
 13034                           ;dc_motor.c: 104:     TRISHbits.TRISH0 = 0;
 13035  00586C  9088               	bcf	136,0,c	;volatile
 13036                           
 13037                           ;dc_motor.c: 106:     LATHbits.LATH1 = 0;
 13038  00586E  9280               	bcf	128,1,c	;volatile
 13039                           
 13040                           ;dc_motor.c: 107:     LATDbits.LATD3 = 0;
 13041  005870  967C               	bcf	124,3,c	;volatile
 13042                           
 13043                           ;dc_motor.c: 108:     LATDbits.LATD4 = 0;
 13044  005872  987C               	bcf	124,4,c	;volatile
 13045                           
 13046                           ;dc_motor.c: 109:     LATFbits.LATF0 = 0;
 13047  005874  907E               	bcf	126,0,c	;volatile
 13048                           
 13049                           ;dc_motor.c: 110:     LATHbits.LATH0 = 0;
 13050  005876  9080               	bcf	128,0,c	;volatile
 13051  005878  0012               	return		;funcret
 13052  00587A                     __end_of_buggyLEDs_init:
 13053                           	callstack 0
 13054                           
 13055 ;; *************** function _ADC_init *****************
 13056 ;; Defined at:
 13057 ;;		line 8 in file "ADC.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;		None
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;		None
 13062 ;; Return value:  Size  Location     Type
 13063 ;;                  1    wreg      void 
 13064 ;; Registers used:
 13065 ;;		wreg, status,2
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13075 ;;Total ram usage:        0 bytes
 13076 ;; Hardware stack levels used: 1
 13077 ;; Hardware stack levels required when called: 5
 13078 ;; This function calls:
 13079 ;;		Nothing
 13080 ;; This function is called by:
 13081 ;;		_main
 13082 ;; This function uses a non-reentrant model
 13083 ;;
 13084                           
 13085                           	psect	text63
 13086  005832                     __ptext63:
 13087                           	callstack 0
 13088  005832                     _ADC_init:
 13089                           	callstack 25
 13090  005832                     
 13091                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 13092  005832  8C86               	bsf	134,6,c	;volatile
 13093                           
 13094                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 13095  005834  010E               	movlb	14	; () banked
 13096  005836  8DB4               	bsf	180,6,b	;volatile
 13097                           
 13098                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 13099  005838  010F               	movlb	15	; () banked
 13100  00583A  9958               	bcf	88,4,b	;volatile
 13101  00583C                     
 13102                           ; BSR set to: 15
 13103                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 13104  00583C  0EFC               	movlw	-4
 13105  00583E  1758               	andwf	88,f,b	;volatile
 13106                           
 13107                           ;ADC.c: 16:     ADPCH=0b101110;
 13108  005840  0E2E               	movlw	46
 13109  005842  6F5F               	movwf	95,b	;volatile
 13110  005844                     
 13111                           ; BSR set to: 15
 13112                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 13113  005844  9460               	bcf	96,2,c	;volatile
 13114  005846                     
 13115                           ; BSR set to: 15
 13116                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 13117  005846  8860               	bsf	96,4,c	;volatile
 13118  005848                     
 13119                           ; BSR set to: 15
 13120                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 13121  005848  8E60               	bsf	96,7,c	;volatile
 13122  00584A                     
 13123                           ; BSR set to: 15
 13124  00584A  0012               	return		;funcret
 13125  00584C                     __end_of_ADC_init:
 13126                           	callstack 0
 13127                           
 13128 ;; *************** function _LowISR *****************
 13129 ;; Defined at:
 13130 ;;		line 75 in file "interrupts.c"
 13131 ;; Parameters:    Size  Location     Type
 13132 ;;		None
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;		None
 13135 ;; Return value:  Size  Location     Type
 13136 ;;                  1    wreg      void 
 13137 ;; Registers used:
 13138 ;;		None
 13139 ;; Tracked objects:
 13140 ;;		On entry : 0/0
 13141 ;;		On exit  : 0/0
 13142 ;;		Unchanged: 0/0
 13143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13146 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13148 ;;Total ram usage:        1 bytes
 13149 ;; Hardware stack levels used: 1
 13150 ;; Hardware stack levels required when called: 4
 13151 ;; This function calls:
 13152 ;;		Nothing
 13153 ;; This function is called by:
 13154 ;;		Interrupt level 1
 13155 ;; This function uses a non-reentrant model
 13156 ;;
 13157                           
 13158                           	psect	intcodelo
 13159  000018                     __pintcodelo:
 13160                           	callstack 0
 13161  000018                     _LowISR:
 13162                           	callstack 18
 13163                           
 13164                           ; BSR set to: 15
 13165                           ;incstack = 0
 13166  000018  805B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 13167  00001A  CFE0 F004          	movff	bsr,??_LowISR
 13168  00001E  C004  FFE0         	movff	??_LowISR,bsr
 13169  000022  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13170  000024  0010               	retfie	
 13171  000026                     __end_of_LowISR:
 13172                           	callstack 0
 13173                           
 13174 ;; *************** function _HighISR *****************
 13175 ;; Defined at:
 13176 ;;		line 60 in file "interrupts.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;		None
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;		None
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  1    wreg      void 
 13183 ;; Registers used:
 13184 ;;		wreg, status,2, status,0, cstack
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13194 ;;Total ram usage:        1 bytes
 13195 ;; Hardware stack levels used: 1
 13196 ;; Hardware stack levels required when called: 3
 13197 ;; This function calls:
 13198 ;;		_interrupts_clear
 13199 ;; This function is called by:
 13200 ;;		Interrupt level 2
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204                           	psect	intcode
 13205  000008                     __pintcode:
 13206                           	callstack 0
 13207  000008                     _HighISR:
 13208                           	callstack 18
 13209                           
 13210                           ;incstack = 0
 13211  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13212  00000A  EF72  F02A         	goto	int_func
 13213                           
 13214                           	psect	intcode_body
 13215  0054E4                     __pintcode_body:
 13216                           	callstack 18
 13217  0054E4                     int_func:
 13218                           	callstack 18
 13219  0054E4                     
 13220                           ;interrupts.c: 61:     if (PIR0bits.INT1IF) {
 13221  0054E4  010E               	movlb	14	; () banked
 13222  0054E6  A333               	btfss	51,1,b	;volatile
 13223  0054E8  EF78  F02A         	goto	i2u707_41
 13224  0054EC  EF7A  F02A         	goto	i2u707_40
 13225  0054F0                     i2u707_41:
 13226  0054F0  EF92  F02A         	goto	i2l294
 13227  0054F4                     i2u707_40:
 13228  0054F4                     
 13229                           ; BSR set to: 14
 13230                           ;interrupts.c: 62:         card_flag = 1;
 13231  0054F4  0E01               	movlw	1
 13232  0054F6  0101               	movlb	1	; () banked
 13233  0054F8  6F91               	movwf	_card_flag& (0+255),b	;volatile
 13234  0054FA                     
 13235                           ; BSR set to: 1
 13236                           ;interrupts.c: 63:         LATDbits.LATD7 = !LATDbits.LATD7;
 13237  0054FA  AE7C               	btfss	124,7,c	;volatile
 13238  0054FC  EF82  F02A         	goto	i2u708_41
 13239  005500  EF86  F02A         	goto	i2u708_40
 13240  005504                     i2u708_41:
 13241  005504  6A03               	clrf	??_HighISR^0,c
 13242  005506  2A03               	incf	??_HighISR^0,f,c
 13243  005508  EF87  F02A         	goto	i2u709_48
 13244  00550C                     i2u708_40:
 13245  00550C  6A03               	clrf	??_HighISR^0,c
 13246  00550E                     i2u709_48:
 13247  00550E  3203               	rrcf	??_HighISR^0,f,c
 13248  005510  3203               	rrcf	??_HighISR^0,f,c
 13249  005512  507C               	movf	124,w,c	;volatile
 13250  005514  1803               	xorwf	??_HighISR^0,w,c
 13251  005516  0B7F               	andlw	-129
 13252  005518  1803               	xorwf	??_HighISR^0,w,c
 13253  00551A  6E7C               	movwf	124,c	;volatile
 13254  00551C                     
 13255                           ;interrupts.c: 64:         interrupts_clear();
 13256  00551C  EC3D  F02C         	call	_interrupts_clear	;wreg free
 13257  005520                     
 13258                           ;interrupts.c: 65:         PIR0bits.INT1IF = 0;
 13259  005520  010E               	movlb	14	; () banked
 13260  005522  9333               	bcf	51,1,b	;volatile
 13261  005524                     i2l294:
 13262                           
 13263                           ; BSR set to: 14
 13264  005524  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13265  005526  0011               	retfie		f
 13266  005528                     __end_of_HighISR:
 13267                           	callstack 0
 13268                           
 13269 ;; *************** function _interrupts_clear *****************
 13270 ;; Defined at:
 13271 ;;		line 47 in file "interrupts.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;		None
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;		None
 13276 ;; Return value:  Size  Location     Type
 13277 ;;                  1    wreg      void 
 13278 ;; Registers used:
 13279 ;;		wreg, status,2, status,0, cstack
 13280 ;; Tracked objects:
 13281 ;;		On entry : 0/0
 13282 ;;		On exit  : 0/0
 13283 ;;		Unchanged: 0/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13289 ;;Total ram usage:        0 bytes
 13290 ;; Hardware stack levels used: 1
 13291 ;; Hardware stack levels required when called: 2
 13292 ;; This function calls:
 13293 ;;		i2_I2C_2_Master_Start
 13294 ;;		i2_I2C_2_Master_Stop
 13295 ;;		i2_I2C_2_Master_Write
 13296 ;; This function is called by:
 13297 ;;		_HighISR
 13298 ;;		_interrupts_init
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           	psect	text66
 13303  00587A                     __ptext66:
 13304                           	callstack 0
 13305  00587A                     _interrupts_clear:
 13306                           	callstack 18
 13307  00587A                     
 13308                           ;interrupts.c: 48:     I2C_2_Master_Start();
 13309  00587A  EC73  F02C         	call	i2_I2C_2_Master_Start	;wreg free
 13310                           
 13311                           ;interrupts.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
 13312  00587E  0E52               	movlw	82
 13313  005880  EC54  F02C         	call	i2_I2C_2_Master_Write
 13314                           
 13315                           ;interrupts.c: 50:     I2C_2_Master_Write(0b11100110);
 13316  005884  0EE6               	movlw	230
 13317  005886  EC54  F02C         	call	i2_I2C_2_Master_Write
 13318                           
 13319                           ;interrupts.c: 51:     I2C_2_Master_Stop();
 13320  00588A  EC6E  F02C         	call	i2_I2C_2_Master_Stop	;wreg free
 13321  00588E  0012               	return		;funcret
 13322  005890                     __end_of_interrupts_clear:
 13323                           	callstack 0
 13324                           
 13325 ;; *************** function i2_I2C_2_Master_Write *****************
 13326 ;; Defined at:
 13327 ;;		line 69 in file "i2c.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;  data_byte       1    wreg     unsigned char 
 13330 ;; Auto vars:     Size  Location     Type
 13331 ;;  data_byte       1    1[COMRAM] unsigned char 
 13332 ;; Return value:  Size  Location     Type
 13333 ;;                  1    wreg      void 
 13334 ;; Registers used:
 13335 ;;		wreg, status,2, status,0, cstack
 13336 ;; Tracked objects:
 13337 ;;		On entry : 0/0
 13338 ;;		On exit  : 0/0
 13339 ;;		Unchanged: 0/0
 13340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13345 ;;Total ram usage:        1 bytes
 13346 ;; Hardware stack levels used: 1
 13347 ;; Hardware stack levels required when called: 1
 13348 ;; This function calls:
 13349 ;;		i2_I2C_2_Master_Idle
 13350 ;; This function is called by:
 13351 ;;		_interrupts_clear
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           	psect	text67
 13356  0058A8                     __ptext67:
 13357                           	callstack 0
 13358  0058A8                     i2_I2C_2_Master_Write:
 13359                           	callstack 18
 13360                           
 13361                           ;incstack = 0
 13362                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 13363  0058A8  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 13364  0058AA                     
 13365                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
 13366  0058AA  ECC1  F02B         	call	i2_I2C_2_Master_Idle	;wreg free
 13367  0058AE                     
 13368                           ;i2c.c: 72:   SSP2BUF = data_byte;
 13369  0058AE  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 13370  0058B2  0012               	return		;funcret
 13371  0058B4                     __end_ofi2_I2C_2_Master_Write:
 13372                           	callstack 0
 13373                           
 13374 ;; *************** function i2_I2C_2_Master_Stop *****************
 13375 ;; Defined at:
 13376 ;;		line 59 in file "i2c.c"
 13377 ;; Parameters:    Size  Location     Type
 13378 ;;		None
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;		None
 13381 ;; Return value:  Size  Location     Type
 13382 ;;                  1    wreg      void 
 13383 ;; Registers used:
 13384 ;;		wreg, status,2, status,0, cstack
 13385 ;; Tracked objects:
 13386 ;;		On entry : 0/0
 13387 ;;		On exit  : 0/0
 13388 ;;		Unchanged: 0/0
 13389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13394 ;;Total ram usage:        0 bytes
 13395 ;; Hardware stack levels used: 1
 13396 ;; Hardware stack levels required when called: 1
 13397 ;; This function calls:
 13398 ;;		i2_I2C_2_Master_Idle
 13399 ;; This function is called by:
 13400 ;;		_interrupts_clear
 13401 ;; This function uses a non-reentrant model
 13402 ;;
 13403                           
 13404                           	psect	text68
 13405  0058DC                     __ptext68:
 13406                           	callstack 0
 13407  0058DC                     i2_I2C_2_Master_Stop:
 13408                           	callstack 18
 13409  0058DC                     
 13410                           ;i2c.c: 61:   I2C_2_Master_Idle();
 13411  0058DC  ECC1  F02B         	call	i2_I2C_2_Master_Idle	;wreg free
 13412  0058E0                     
 13413                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
 13414  0058E0  010E               	movlb	14	; () banked
 13415  0058E2  85DA               	bsf	218,2,b	;volatile
 13416  0058E4                     
 13417                           ; BSR set to: 14
 13418  0058E4  0012               	return		;funcret
 13419  0058E6                     __end_ofi2_I2C_2_Master_Stop:
 13420                           	callstack 0
 13421                           
 13422 ;; *************** function i2_I2C_2_Master_Start *****************
 13423 ;; Defined at:
 13424 ;;		line 39 in file "i2c.c"
 13425 ;; Parameters:    Size  Location     Type
 13426 ;;		None
 13427 ;; Auto vars:     Size  Location     Type
 13428 ;;		None
 13429 ;; Return value:  Size  Location     Type
 13430 ;;                  1    wreg      void 
 13431 ;; Registers used:
 13432 ;;		wreg, status,2, status,0, cstack
 13433 ;; Tracked objects:
 13434 ;;		On entry : 0/0
 13435 ;;		On exit  : 0/0
 13436 ;;		Unchanged: 0/0
 13437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13442 ;;Total ram usage:        0 bytes
 13443 ;; Hardware stack levels used: 1
 13444 ;; Hardware stack levels required when called: 1
 13445 ;; This function calls:
 13446 ;;		i2_I2C_2_Master_Idle
 13447 ;; This function is called by:
 13448 ;;		_interrupts_clear
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452                           	psect	text69
 13453  0058E6                     __ptext69:
 13454                           	callstack 0
 13455  0058E6                     i2_I2C_2_Master_Start:
 13456                           	callstack 18
 13457  0058E6                     
 13458                           ;i2c.c: 41:   I2C_2_Master_Idle();
 13459  0058E6  ECC1  F02B         	call	i2_I2C_2_Master_Idle	;wreg free
 13460  0058EA                     
 13461                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
 13462  0058EA  010E               	movlb	14	; () banked
 13463  0058EC  81DA               	bsf	218,0,b	;volatile
 13464  0058EE                     
 13465                           ; BSR set to: 14
 13466  0058EE  0012               	return		;funcret
 13467  0058F0                     __end_ofi2_I2C_2_Master_Start:
 13468                           	callstack 0
 13469                           
 13470 ;; *************** function i2_I2C_2_Master_Idle *****************
 13471 ;; Defined at:
 13472 ;;		line 30 in file "i2c.c"
 13473 ;; Parameters:    Size  Location     Type
 13474 ;;		None
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;		None
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  1    wreg      void 
 13479 ;; Registers used:
 13480 ;;		wreg, status,2, status,0
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13489 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13490 ;;Total ram usage:        1 bytes
 13491 ;; Hardware stack levels used: 1
 13492 ;; This function calls:
 13493 ;;		Nothing
 13494 ;; This function is called by:
 13495 ;;		i2_I2C_2_Master_Start
 13496 ;;		i2_I2C_2_Master_Stop
 13497 ;;		i2_I2C_2_Master_Write
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501                           	psect	text70
 13502  005782                     __ptext70:
 13503                           	callstack 0
 13504  005782                     i2_I2C_2_Master_Idle:
 13505                           	callstack 18
 13506  005782                     i2l30:
 13507  005782  010E               	movlb	14	; () banked
 13508  005784  B5D8               	btfsc	216,2,b	;volatile
 13509  005786  EFC7  F02B         	goto	i2u626_41
 13510  00578A  EFC9  F02B         	goto	i2u626_40
 13511  00578E                     i2u626_41:
 13512  00578E  EFC1  F02B         	goto	i2l30
 13513  005792                     i2u626_40:
 13514  005792                     
 13515                           ; BSR set to: 14
 13516  005792  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 13517  005796  0E1F               	movlw	31
 13518  005798  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 13519  00579A  A4D8               	btfss	status,2,c
 13520  00579C  EFD2  F02B         	goto	i2u627_41
 13521  0057A0  EFD4  F02B         	goto	i2u627_40
 13522  0057A4                     i2u627_41:
 13523  0057A4  EFC1  F02B         	goto	i2l30
 13524  0057A8                     i2u627_40:
 13525  0057A8                     
 13526                           ; BSR set to: 14
 13527  0057A8  0012               	return		;funcret
 13528  0057AA                     __end_ofi2_I2C_2_Master_Idle:
 13529                           	callstack 0
 13530                           
 13531                           	psect	rparam
 13532  0000                     
 13533                           	psect	temp
 13534  00005B                     btemp:
 13535                           	callstack 0
 13536  00005B                     	ds	1
 13537  0000                     int$flags	set	btemp
 13538  0000                     wtemp8	set	btemp+1
 13539  0000                     ttemp5	set	btemp+1
 13540  0000                     ttemp6	set	btemp+4
 13541  0000                     ttemp7	set	btemp+8
 13542                           
 13543                           	psect	idloc
 13544                           
 13545                           ;Config register IDLOC0 @ 0x200000
 13546                           ;	unspecified, using default values
 13547  200000                     	org	2097152
 13548  200000  0FFF               	dw	4095
 13549                           
 13550                           ;Config register IDLOC1 @ 0x200002
 13551                           ;	unspecified, using default values
 13552  200002                     	org	2097154
 13553  200002  0FFF               	dw	4095
 13554                           
 13555                           ;Config register IDLOC2 @ 0x200004
 13556                           ;	unspecified, using default values
 13557  200004                     	org	2097156
 13558  200004  0FFF               	dw	4095
 13559                           
 13560                           ;Config register IDLOC3 @ 0x200006
 13561                           ;	unspecified, using default values
 13562  200006                     	org	2097158
 13563  200006  0FFF               	dw	4095
 13564                           
 13565                           ;Config register IDLOC4 @ 0x200008
 13566                           ;	unspecified, using default values
 13567  200008                     	org	2097160
 13568  200008  0FFF               	dw	4095
 13569                           
 13570                           ;Config register IDLOC5 @ 0x20000A
 13571                           ;	unspecified, using default values
 13572  20000A                     	org	2097162
 13573  20000A  0FFF               	dw	4095
 13574                           
 13575                           ;Config register IDLOC6 @ 0x20000C
 13576                           ;	unspecified, using default values
 13577  20000C                     	org	2097164
 13578  20000C  0FFF               	dw	4095
 13579                           
 13580                           ;Config register IDLOC7 @ 0x20000E
 13581                           ;	unspecified, using default values
 13582  20000E                     	org	2097166
 13583  20000E  0FFF               	dw	4095
 13584                           
 13585                           	psect	config
 13586                           
 13587                           ;Config register CONFIG1L @ 0x300000
 13588                           ;	External Oscillator mode Selection bits
 13589                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13590                           ;	Power-up default value for COSC bits
 13591                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13592  300000                     	org	3145728
 13593  300000  AA                 	db	170
 13594                           
 13595                           ;Config register CONFIG1H @ 0x300001
 13596                           ;	unspecified, using default values
 13597                           ;	Clock Out Enable bit
 13598                           ;	CLKOUTEN = 0x1, unprogrammed default
 13599                           ;	Clock Switch Enable bit
 13600                           ;	CSWEN = 0x1, unprogrammed default
 13601                           ;	Fail-Safe Clock Monitor Enable bit
 13602                           ;	FCMEN = 0x1, unprogrammed default
 13603  300001                     	org	3145729
 13604  300001  FF                 	db	255
 13605                           
 13606                           ;Config register CONFIG2L @ 0x300002
 13607                           ;	unspecified, using default values
 13608                           ;	Master Clear Enable bit
 13609                           ;	MCLRE = 0x1, unprogrammed default
 13610                           ;	Power-up Timer Enable bit
 13611                           ;	PWRTE = 0x1, unprogrammed default
 13612                           ;	Low-power BOR enable bit
 13613                           ;	LPBOREN = 0x1, unprogrammed default
 13614                           ;	Brown-out Reset Enable bits
 13615                           ;	BOREN = 0x3, unprogrammed default
 13616  300002                     	org	3145730
 13617  300002  FF                 	db	255
 13618                           
 13619                           ;Config register CONFIG2H @ 0x300003
 13620                           ;	unspecified, using default values
 13621                           ;	Brown Out Reset Voltage selection bits
 13622                           ;	BORV = 0x3, unprogrammed default
 13623                           ;	ZCD Disable bit
 13624                           ;	ZCD = 0x1, unprogrammed default
 13625                           ;	PPSLOCK bit One-Way Set Enable bit
 13626                           ;	PPS1WAY = 0x1, unprogrammed default
 13627                           ;	Stack Full/Underflow Reset Enable bit
 13628                           ;	STVREN = 0x1, unprogrammed default
 13629                           ;	Debugger Enable bit
 13630                           ;	DEBUG = 0x1, unprogrammed default
 13631                           ;	Extended Instruction Set Enable bit
 13632                           ;	XINST = 0x1, unprogrammed default
 13633  300003                     	org	3145731
 13634  300003  FF                 	db	255
 13635                           
 13636                           ;Config register CONFIG3L @ 0x300004
 13637                           ;	WDT Period Select bits
 13638                           ;	WDTCPS = 0x1F, unprogrammed default
 13639                           ;	WDT operating mode
 13640                           ;	WDTE = OFF, WDT Disabled
 13641  300004                     	org	3145732
 13642  300004  9F                 	db	159
 13643                           
 13644                           ;Config register CONFIG3H @ 0x300005
 13645                           ;	unspecified, using default values
 13646                           ;	WDT Window Select bits
 13647                           ;	WDTCWS = 0x7, unprogrammed default
 13648                           ;	WDT input clock selector
 13649                           ;	WDTCCS = 0x7, unprogrammed default
 13650  300005                     	org	3145733
 13651  300005  FF                 	db	255
 13652                           
 13653                           ;Config register CONFIG4L @ 0x300006
 13654                           ;	unspecified, using default values
 13655                           ;	Write Protection Block 0
 13656                           ;	WRT0 = 0x1, unprogrammed default
 13657                           ;	Write Protection Block 1
 13658                           ;	WRT1 = 0x1, unprogrammed default
 13659                           ;	Write Protection Block 2
 13660                           ;	WRT2 = 0x1, unprogrammed default
 13661                           ;	Write Protection Block 3
 13662                           ;	WRT3 = 0x1, unprogrammed default
 13663                           ;	Write Protection Block 3
 13664                           ;	WRT4 = 0x1, unprogrammed default
 13665                           ;	Write Protection Block 3
 13666                           ;	WRT5 = 0x1, unprogrammed default
 13667                           ;	Write Protection Block 3
 13668                           ;	WRT6 = 0x1, unprogrammed default
 13669                           ;	Write Protection Block 3
 13670                           ;	WRT7 = 0x1, unprogrammed default
 13671  300006                     	org	3145734
 13672  300006  FF                 	db	255
 13673                           
 13674                           ;Config register CONFIG4H @ 0x300007
 13675                           ;	unspecified, using default values
 13676                           ;	Configuration Register Write Protection bit
 13677                           ;	WRTC = 0x1, unprogrammed default
 13678                           ;	Boot Block Write Protection bit
 13679                           ;	WRTB = 0x1, unprogrammed default
 13680                           ;	Data EEPROM Write Protection bit
 13681                           ;	WRTD = 0x1, unprogrammed default
 13682                           ;	Scanner Enable bit
 13683                           ;	SCANE = 0x1, unprogrammed default
 13684                           ;	Low Voltage Programming Enable bit
 13685                           ;	LVP = 0x1, unprogrammed default
 13686  300007                     	org	3145735
 13687  300007  FF                 	db	255
 13688                           
 13689                           ;Config register CONFIG5L @ 0x300008
 13690                           ;	unspecified, using default values
 13691                           ;	UserNVM Program Memory Code Protection bit
 13692                           ;	CP = 0x1, unprogrammed default
 13693                           ;	DataNVM Memory Code Protection bit
 13694                           ;	CPD = 0x1, unprogrammed default
 13695  300008                     	org	3145736
 13696  300008  FF                 	db	255
 13697                           
 13698                           ;Config register CONFIG5H @ 0x300009
 13699                           ;	unspecified, using default values
 13700  300009                     	org	3145737
 13701  300009  FF                 	db	255
 13702                           
 13703                           ;Config register CONFIG6L @ 0x30000A
 13704                           ;	unspecified, using default values
 13705                           ;	Table Read Protection Block 0
 13706                           ;	EBTR0 = 0x1, unprogrammed default
 13707                           ;	Table Read Protection Block 1
 13708                           ;	EBTR1 = 0x1, unprogrammed default
 13709                           ;	Table Read Protection Block 2
 13710                           ;	EBTR2 = 0x1, unprogrammed default
 13711                           ;	Table Read Protection Block 3
 13712                           ;	EBTR3 = 0x1, unprogrammed default
 13713                           ;	Table Read Protection Block 4
 13714                           ;	EBTR4 = 0x1, unprogrammed default
 13715                           ;	Table Read Protection Block 5
 13716                           ;	EBTR5 = 0x1, unprogrammed default
 13717                           ;	Table Read Protection Block 6
 13718                           ;	EBTR6 = 0x1, unprogrammed default
 13719                           ;	Table Read Protection Block 7
 13720                           ;	EBTR7 = 0x1, unprogrammed default
 13721  30000A                     	org	3145738
 13722  30000A  FF                 	db	255
 13723                           
 13724                           ;Config register CONFIG6H @ 0x30000B
 13725                           ;	unspecified, using default values
 13726                           ;	Boot Block Table Read Protection bit
 13727                           ;	EBTRB = 0x1, unprogrammed default
 13728  30000B                     	org	3145739
 13729  30000B  FF                 	db	255
 13730                           tosu	equ	0xFFF
 13731                           tosh	equ	0xFFE
 13732                           tosl	equ	0xFFD
 13733                           stkptr	equ	0xFFC
 13734                           pclatu	equ	0xFFB
 13735                           pclath	equ	0xFFA
 13736                           pcl	equ	0xFF9
 13737                           tblptru	equ	0xFF8
 13738                           tblptrh	equ	0xFF7
 13739                           tblptrl	equ	0xFF6
 13740                           tablat	equ	0xFF5
 13741                           prodh	equ	0xFF4
 13742                           prodl	equ	0xFF3
 13743                           indf0	equ	0xFEF
 13744                           postinc0	equ	0xFEE
 13745                           postdec0	equ	0xFED
 13746                           preinc0	equ	0xFEC
 13747                           plusw0	equ	0xFEB
 13748                           fsr0h	equ	0xFEA
 13749                           fsr0l	equ	0xFE9
 13750                           wreg	equ	0xFE8
 13751                           indf1	equ	0xFE7
 13752                           postinc1	equ	0xFE6
 13753                           postdec1	equ	0xFE5
 13754                           preinc1	equ	0xFE4
 13755                           plusw1	equ	0xFE3
 13756                           fsr1h	equ	0xFE2
 13757                           fsr1l	equ	0xFE1
 13758                           bsr	equ	0xFE0
 13759                           indf2	equ	0xFDF
 13760                           postinc2	equ	0xFDE
 13761                           postdec2	equ	0xFDD
 13762                           preinc2	equ	0xFDC
 13763                           plusw2	equ	0xFDB
 13764                           fsr2h	equ	0xFDA
 13765                           fsr2l	equ	0xFD9
 13766                           status	equ	0xFD8

Data Sizes:
    Strings     73
    Constant    0
    Data        0
    BSS         187
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160    120     160
    BANK1           256    144     226
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_1(CODE[54]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2397_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    read_card_RGB@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    read_card_RGB@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S256$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S256$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _read_card_RGB->___fldiv
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _interrupts_clear->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               145   145      0   92672
                                              0 BANK1    144   144      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                            ___fldiv
                           ___xxtofl
                    _colorclick_init
              _colorclick_readColour
          _colorclick_toggleClearLED
                      _read_card_RGB
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             38    10     28   50510
                                             84 BANK0     36     8     28
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   50000
                                             76 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   49461
                                             75 COMRAM    10     4      6
                                             56 BANK0     20    20      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   35630
                                             63 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             43 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6493
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4227
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1855
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_card_RGB                                       24    12     12   33396
                                             43 COMRAM    24    12     12
                            ___fldiv
                             ___flge
                           ___xxtofl
                            _reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            7     2      5    5588
                                             29 COMRAM     7     2      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                             7     2      5    4778
                                             29 COMRAM     7     2      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    5576
                                             29 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              6     2      4    3956
                                             29 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    3348
                                             18 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     752
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     865
                                             10 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1614
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    5306
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3983
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     623
                                             15 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     816
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colorclick_writetoaddr                               2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colorclick_toggleClearLED                            1     1      0      66
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              4 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             1     1      0      22
                                              2 COMRAM     1     1      0
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (11) _interrupts_clear                                    0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colorclick_toggleClearLED
   _read_card_RGB
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___xxtofl
     _reverse
       _setMotorPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _LowISR (ROOT)

 _HighISR (ROOT)
   _interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      3C      10       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     90      E2       7       88.3%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218       8        0.0%
DATA                 0      0     218       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 17:18:59 2021

        __end_of_colorclick_readRed 52D6         __end_of_colorclick_readBlue 53C6  
                      ___fldiv@aexp 002B                        ___fldiv@bexp 002A  
      __end_of_colorclick_readClear 5376                        ___fldiv@sign 0023  
      __end_of_colorclick_readGreen 5326                                  l30 575A  
                                l33 5780                                  l42 58C6  
                                l27 5758                                  l36 58D0  
                                l45 589A                                  l39 58BC  
                                l48 5568               __end_of_DCmotors_init 5416  
                      ___awdiv@sign 0010                                  bsr 000FE0  
               ___wmul@multiplicand 0007      __size_of_colorclick_readColour 0044  
     __end_of_colorclick_readColour 54E4              _colorclick_writetoaddr 57F2  
                               l111 34B8                                 l105 347A  
                               l212 50BC                                 l220 5022  
                               l109 3496                                 l230 3FAA  
                               l207 508C                                 l224 3EBE  
                               l314 584A                                 l234 3FDA  
                               l250 3DF6                                 l219 5020  
                               l235 3FDC                                 l243 3D08  
                               l228 3EEE                                 l245 3DC4  
                               l190 58DA                                 l239 3CD8  
                               l184 41B0                                 l193 5878  
                               l177 5414                                 l505 57CE  
                               l249 3DF4                                 l187 58A6  
                               l443 55E8                                 l371 5862  
                               l452 5810                                 l461 53C4  
                               l359 5830                                 l455 52D4  
                               l464 5374                                 l368 584E  
                               l632 47F4                                 l449 57F0  
                               l377 572E                                 l458 5324  
                               l802 48FA                                 l467 54E2  
                               l619 4690                                 l736 4D6C  
                               l770 49B8                                 l499 2220  
                               l764 4F88                                 l749 4EDE  
                               l775 49FE                                 l779 5690  
                               _abs 556A                                 _pad 4D6E  
                      ___awmod@sign 000A                                 wreg 000FE8  
                      ___flmul@aexp 0012                        ___flmul@bexp 0017  
                      ___flmul@sign 0011                        ___flmul@temp 001C  
                      ___flmul@prod 0018                     _colorclick_init 55AA  
                      ___fltol@exp1 000E                                l1100 332C  
                              l1101 331A                                l1033 297A  
                              l1050 2A94                                l1042 2C4A  
                              l1034 2968                                l1123 3074  
                              l1035 292E                                ?_abs 0017  
                              l1060 2B52                                l1126 2F06  
                              l1231 4E2E                                l1119 2D10  
                              l1160 4208                                l1136 3036  
                              l1128 2F7E                                l1129 2F6C  
                              l1321 1678                                l1402 55A8  
                              l1226 4DB2                                l1163 4364  
                              l1059 2B64                                l1075 545A  
                              l1092 3232                                l1501 56FE  
                              l1229 4DF4                                l1237 37C0  
                              l1174 42FC                                l1430 4500  
                              l1087 340E                                l1167 42A0  
                              l1239 37C8                                l1183 5232  
                              l1520 5182                                l1089 326E  
                              l1433 4508                                l1257 39FE  
                              l1505 4BDE                                l1098 32B4  
                              l1442 3B54                                l1515 517A  
                              l1275 1AA4                                l1293 1238  
                              l1439 3C10                                l1463 5658  
                              l1383 511A                                l1384 5122  
                              l1449 56C8                                l1457 5284  
                              l1377 26CC                                l1369 278A  
                              l1394 4AFC                                l5101 5864  
                              l1478 4CA8                                l1486 549E  
                              l1399 55A0                                l1495 51E0  
                              l6001 47A4                                l1489 58F0  
                              l6011 3082                                l6003 47B4  
                              l4501 576A                                l5213 57F4  
                              l5221 52CC                                l6101 32B2  
                              l6021 30C2                                l6013 3090  
                              l6005 47D4                                l5311 583C  
                              l5231 5376                                l6111 3312  
                              l6103 32C4                                l6031 30E8  
                              l6023 30C4                                l6015 3092  
                              l5215 584E                                l5313 5844  
                              l5321 55AE                                l5233 53BC  
                              l5225 52D6                                l6121 3380  
                              l6105 32D2                                l6041 3128  
                              l6033 30F6                                l6017 30A2  
                              l6025 30CC                                l6009 3076  
                              l7001 40DE                                l5217 585E  
                              l5401 5700                                l6201 2DAC  
                              l5315 5846                                l5091 5744  
                              l5083 5730                                l5331 55DE  
                              l5323 55B8                                l5227 531C  
                              l5219 5286                                l6131 33EA  
                              l6115 333C                                l6123 3384  
                              l6107 32D6                                l6051 3168  
                              l6043 312A                                l6035 30F8  
                              l6027 30DC                                l6019 30B2  
                              l5251 422E                                l5243 41B4  
                              l7003 4148                                l5403 5704  
                              l6211 2DF2                                l6203 2DBA  
                              l7011 226A                                l5317 5848  
                              l5309 5832                                l5341 53E0  
                              l5093 5746                                l5085 573A  
                              l5333 55E0                                l5325 55C8  
                              l5237 5326                                l6133 33EE  
                              l6125 339E                                l6117 3348  
                              l6109 32E4                                l6061 3198  
                              l6053 3170                                l6037 3108  
                              l6045 3132                                l6029 30E2  
                              l5261 4288                                l5245 41C4  
                              l6301 4CFC                                l5405 5712  
                              l6221 2E60                                l6213 2E0C  
                              l6205 2DC6                                l7021 22D4  
                              l7013 226E                                l7005 2222  
                              ?_pad 0015                                l5351 53EA  
                              l5343 53E2                                l5087 5740  
                              l5095 57D2                                l5335 55E2  
                              l5327 55D2                                l5319 55AA  
                              l5239 536C                                l6135 33FC  
                              l6127 33B4                                l6119 3356  
                              l6071 31D6                                l6063 3198  
                              l6055 3174                                l6047 3142  
                              l6039 3118                                l5271 42EC  
                              l5263 428A                                l5255 4242  
                              l5247 41D2                                l6311 4D36  
                              l6303 4D04                                l7111 5068  
                              l5407 5716                                l6231 2EF6  
                              l6223 2E8A                                l6215 2E1C  
                              l6207 2DD6                                l6151 2C66  
                              l7031 2388                                l7023 230E  
                              l7015 2296                                l7007 224A  
                              l5097 589C                                l5361 53FC  
                              l5353 53EC                                l5345 53E4  
                              l5337 53C8                                l5089 5742  
                              l5329 55DC                                l6137 3402  
                              l6129 33CE                                l6081 3222  
                              l6073 31E6                                l6049 3158  
                              l5281 4344                                l5273 430A  
                              l5265 4296                                l5257 424A  
                              l5249 4218                                l6321 4D5C  
                              l6313 4D3E                                l6305 4D0C  
                              l7113 5074                                l7105 5024  
                              l7121 4FC0                                l7201 3D68  
                              l6241 2F36                                l6233 2F04  
                              l6225 2EC0                                l6217 2E38  
                              l6209 2DE2                                l6161 2C9E  
                              l6153 2C68                                l6401 565A  
                              l7041 2416                                l7025 232E  
                              l7017 229E                                l7033 239A  
                              l7009 2258                                l5099 58D2  
                              l5363 5408                                l5355 53EE  
                              l5347 53E6                                l5339 53DC  
                              l5371 581C                                l6139 3404  
                              l6091 326C                                l6083 3230  
                              l6075 31F6                                l6067 31AC  
                              l6059 3188                                l5283 4352  
                              l5275 430C                                l5267 42D2  
                              l5259 4256                                l6323 4D64  
                              l6315 4D40                                l6307 4D1A  
                              l7115 50A4                                l7107 5048  
                              l7123 4FCC                                l7131 3DF8  
                              l7211 3DAC                                l7203 3D72  
                              l6331 4E42                                l6251 2FA8  
                              l6243 2F64                                l6235 2F16  
                              l6227 2ECE                                l6219 2E44  
                              l6171 2CCA                                l6163 2CAE  
                              l6155 2C78                                l6147 2C4C  
                              l6403 5670                                l6411 480C  
                              l7043 244C                                l7035 23C0  
                              l7027 233C                                l7019 22AC  
                              l5365 540C                                l5357 53F0  
                              l5349 53E8                                l5381 582E  
                              l5373 581E                                l6093 327E  
                              l6085 323C                                l6077 31FE  
                              l6069 31C6                                l5285 4354  
                              l5277 4310                                l5269 42DE  
                              l6317 4D46                                l6309 4D20  
                              l7109 505C                                l7125 4FD8  
                              l7117 4F8A                                l7141 3E6C  
                              l7133 3E08                                l7213 3DDC  
                              l7205 3D8A                                l6341 4E76  
                              l6333 4E4A                                l6261 301E  
                              l6253 2FD2                                l6237 2F24  
                              l6229 2EEC                                l6181 2D20  
                              l6173 2CDA                                l6165 2CB4  
                              l6157 2C88                                l6149 2C58  
                              l6405 5680                                l5701 2798  
                              l6421 485C                                l6501 5184  
                              l7061 2586                                l7053 251C  
                              l7045 2474                                l7037 23D0  
                              l7221 50FA                                l5367 5410  
                              l5359 53FA                                l5375 5820  
                              l5383 54A0                                l6095 3294  
                              l6087 325A                                l6079 320E  
                              l5279 4334                                l6319 4D4C  
                              l7119 4F90                                l7127 4FF0  
                              l7151 3ED6                                l7143 3E84  
                              l7135 3E2C                                l7207 3D94  
                              l6351 4EB2                                l6343 4E7E  
                              l6335 4E4E                                l6327 4E30  
                              l6263 303A                                l6271 3060  
                              l6247 2F8E                                l6255 2FD6  
                              l6239 2F28                                l6191 2D5A  
                              l6183 2D30                                l6175 2CEA  
                              l6167 2CBA                                l6159 2C98  
                              l5711 27D8                                l5703 27A6  
                              l6431 4886                                l6423 4860  
                              l6415 4820                                l6503 5194  
                              l6511 516C                                l7071 2656  
                              l7055 252E                                l7047 249C  
                              l7039 2406                                l7215 50BE  
                              l7231 5220                                l7223 51E2  
                              l7311 3422                                l5377 582A  
                              l5369 5812                                l5385 54D0  
                              l6097 329A                                l6089 325C  
                              l7129 5008                                l7161 3F58  
                              l7145 3E8E                                l7137 3E4A  
                              l7153 3EF4                                l7209 3DA0  
                              l7241 1C44                                l6601 396C  
                              l6353 4EB8                                l6345 4E86  
                              l6337 4E5C                                l6329 4E34  
                              l6273 3064                                l6265 304A  
                              l6257 2FF0                                l6249 2F9A  
                              l6193 2D70                                l6177 2CFA  
                              l6169 2CC8                                l5801 2998  
                              l5721 280A                                l5713 27DA  
                              l5705 27A8                                l6441 48AE  
                              l6433 4890                                l6425 486E  
                              l6417 484A                                l6409 47F6  
                              l6521 3A8A                                l6505 5124  
                              l7073 2668                                l7081 26E0  
                              l7057 2548                                l7065 25B2  
                              l7049 24E4                                l7217 50C6  
                              l7225 51F4                                l7321 344A  
                              l7313 3426                                l5379 582C  
                              l4499 575A                                l6099 32A4  
                              l6291 4CC8                                l6283 4CAA  
                              l7171 3FC2                                l7163 3F70  
                              l7155 3F18                                l7147 3E9A  
                              l7139 3E62                                l7251 1D3A  
                              l7243 1C74                                l7235 1AA6  
                              l6611 39B2                                l6603 397A  
                              l6347 4E94                                l6355 4EBE  
                              l6339 4E64                                l6371 4F5C  
                              l6363 4EE0                                l6267 3058  
                              l6259 3004                                l6195 2D7C  
                              l6187 2D44                                l6179 2D00  
                              l5811 29D8                                l5731 2832  
                              l5723 280C                                l5707 27B8  
                              l5715 27E2                                l6443 48BA  
                              l6435 489A                                l6419 484C  
                              l6523 3A98                                l6531 3B78  
                              l6515 3A00                                l7083 2708  
                              l7091 2736                                l7075 269C  
                              l7067 25E0                                l7059 2556  
                              l7219 50D4                                l7227 51FC  
                              l7331 3466                                l7323 344E  
                              l7315 342C                                l7307 3410  
                              l4941 58B8                                l6381 492A  
                              l6293 4CD6                                l6285 4CAE  
                              l7165 3F7A                                l7157 3F36  
                              l7149 3EA6                                l7181 3C7C  
                              l7173 3C12                                l7261 1E32  
                              l7253 1D6C                                l7245 1CA6  
                              l7237 1BE0                                l5901 545C  
                              l6461 4DAA                                l6453 4D6E  
                              l6613 39BE                                l6605 398C  
                              l6357 4ECE                                l6349 4EAA  
                              l6373 4F80                                l6365 4F0E  
                              l6269 305A                                l6197 2D94  
                              l6189 2D50                                l5821 2A02  
                              l5813 29E4                                l5805 29AC  
                              l5741 286C                                l5733 2842  
                              l5725 2812                                l5717 27F2  
                              l5709 27C8                                l6277 5416  
                              l6445 48CA                                l6533 3BB4  
                              l6517 3A20                                l6509 515A  
                              l6701 1198                                l6621 0E4C  
                              l7093 2744                                l7085 2716  
                              l7229 5204                                l7341 349E  
                              l7333 346E                                l7325 3456  
                              l7317 3430                                l7309 341E  
                              l4935 58C8                                l4943 58BE  
                              l4951 552A                                l6391 4998  
                              l6383 493A                                l6295 4CDE  
                              l6287 4CBC                                l7167 3F86  
                              l7159 3F4E                                l7191 3CC0  
                              l7183 3C86                                l7175 3C22  
                              l7271 1F52                                l7263 1E64  
                              l7255 1D9E                                l7247 1CD8  
                              l7239 1C12                                l6543 5692  
                              l6551 524C                                l5903 5468  
                              l5911 56D6                                l6471 4E16  
                              l6463 4DBE                                l6455 4D7C  
                              l6615 39C6                                l6607 399A  
                              l6359 4ED6                                l6375 4F86  
                              l6367 4F1E                                l6199 2DA0  
                              l5831 2A74                                l5815 29E8  
                              l5807 29BC                                l5823 2A08  
                              l5751 2898                                l5743 287E  
                              l5735 2852                                l5727 2820  
                              l5719 27F8                                l6279 5426  
                              l6447 48DA                                l6535 3BC8  
                              l6527 3B08                                l6519 3A76  
                              l6711 11F8                                l6703 11A0  
                              l6631 0EA0                                l6623 0E56  
                              l7087 272A                                l7351 35A8  
                              l7343 34C6                                l7335 3472  
                              l7327 345A                                l7319 3436  
                              l4937 58CC                                l4945 58C2  
                              l4961 5566                                l4953 552E  
                              l6393 49A6                                l6385 4968  
                              l6297 4CE2                                l6289 4CC4  
                              l7169 3F92                                l7193 3CF0  
                              l7185 3C9E                                l7177 3C46  
                              l7281 2072                                l7273 1F84  
                              l7265 1E96                                l7257 1DD0  
                              l7249 1D0A                                l6553 527A  
                              l5905 547A                                l5913 56DA  
                              l6465 4DD2                                l6457 4D90  
                              l6609 39A0                                l6617 39D6  
                              l6561 3740                                l6369 4F4C  
                              l5841 2ACE                                l5825 2A2E  
                              l5833 2A84                                l5817 29F6  
                              l5809 29CA                                l5761 28AC  
                              l5753 289C                                l5745 288C  
                              l5737 2854                                l5729 2822  
                              l6449 48EA                                l6481 4A20  
                              l6537 3BF0                                l6529 3B44  
                              l6801 1670                                l6713 120A  
                              l6705 11D2                                l6641 0EE4  
                              l6633 0EAA                                l6625 0E66  
                              l7097 2750                                l7361 36F2  
                              l7353 3600                                l7345 34D4  
                              l7337 3488                                l7329 345E  
                              l4947 5892                                l4955 5536  
                              l4939 58B4                                l6395 49F6  
                              l6387 4978                                l6379 48FC  
                              l6299 4CEA                                l5923 57AA  
                              l7187 3CA8                                l7179 3C64  
                              l7195 3D0E                                l7291 2168  
                              l7283 20A2                                l7275 1FDC  
                              l7267 1EEE                                l7259 1E00  
                              l6555 527E                                l6547 5234  
                              l5931 450E                                l6475 556A  
                              l5691 4C0E                                l5907 547E  
                              l5915 56F2                                l6467 4DD6  
                              l6459 4D9E                                l6571 37B4  
                              l6563 3768                                l5851 2AFE  
                              l5843 2AD8                                l5835 2AAA  
                              l5827 2A62                                l5819 29F8  
                              l5771 28C0                                l5763 28B0  
                              l5755 28A0                                l5747 2890  
                              l5739 285C                                l6483 4A5E  
                              l6491 4A9E                                l6539 3C00  
                              l6811 172C                                l6803 1694  
                              l6731 12BA                                l6715 1212  
                              l6707 11E2                                l6643 0EF0  
                              l6651 0F06                                l6635 0EB2  
                              l6627 0E74                                l7099 2778  
                              l7355 3658                                l7347 34F8  
                              l7339 3498                                l4949 5896  
                              l4957 553E                                l6397 49FC  
                              l6389 4986                                l5925 57C6  
                              l7197 3D32                                l7189 3CB4  
                              l7293 219A                                l7285 20D4  
                              l7277 200E                                l7269 1F20  
                              l6549 5238                                l5941 456E  
                              l5933 451C                                l6477 5584  
                              l5693 4C2C                                l5685 4BE0  
                              l5909 56CA                                l6469 4E02  
                              l6581 37FE                                l6573 37D0  
                              l6565 3788                                l5861 2B26  
                              l5853 2B02                                l5845 2AE6  
                              l5837 2ABA                                l5829 2A64  
                              l5781 28FA                                l5773 28C4  
                              l5765 28B4                                l5757 28A4  
                              l5749 2894                                l6493 4AB0  
                              l6485 4A86                                l6901 19F0  
                              l6821 1774                                l6813 173A  
                              l6805 16F8                                l6741 12F2  
                              l6733 12C2                                l6725 1256  
                              l6717 122C                                l6709 11E6  
                              l6661 0F90                                l6653 0F2C  
                              l6645 0EF8                                l6637 0EC4  
                              l6629 0E7C                                l7357 36CE  
                              l7349 3550                                l4959 5564  
                              l7199 3D50                                l7295 21CC  
                              l7287 2106                                l7279 2040  
                              l5951 45B8                                l5943 4572  
                              l5935 453C                                l5695 4C62  
                              l5687 4BF2                                l6591 389C  
                              l6583 3808                                l6575 37E2  
                              l6567 3798                                l6559 3720  
                              l5871 2B80                                l5863 2B34  
                              l5855 2B12                                l5847 2AE8  
                              l5791 294C                                l5783 2916  
                              l5775 28C8                                l5767 28B8  
                              l5759 28A8                                l6487 4A92  
                              l6479 4A00                                l5919 5622  
                              l6903 19F8                                l6831 179E  
                              l6823 1778                                l6807 1706  
                              l6815 1742                                l6751 133C  
                              l6743 1300                                l6727 1268  
                              l6735 12C6                                l6719 1244  
                              l6671 1000                                l6663 0FA8  
                              l6647 0EFC                                l6639 0ED2  
                              l7359 36DA                                l7297 21F0  
                              l7289 2138                                l7393 442E  
                              l5961 4628                                l5953 45C6  
                              l5945 457E                                l5937 4540  
                              l5929 450A                                l5689 4C04  
                              l6585 380E                                l6593 3900  
                              l6577 37F0                                l6569 379A  
                              l5881 2BEA                                l5873 2B8E  
                              l5865 2B4A                                l5849 2AF6  
                              l5857 2B14                                l5793 295A  
                              l5785 2926                                l5769 28BC  
                              l5777 28CC                                l6497 4AF4  
                              l6921 1A7E                                l6913 1A48  
                              l6905 1A08                                l6841 17D2  
                              l6833 17A4                                l6825 177E  
                              l6817 1756                                l6809 171A  
                              l6761 1382                                l6753 134E  
                              l6745 1304                                l6737 12CE  
                              l6729 1284                                l6665 0FB2  
                              l6657 0F62                                l6649 0F00  
                              l7299 221C                                l6931 437A  
                              l5963 463A                                l5955 45D8  
                              l5947 459C                                l5939 454E  
                              l6595 391A                                l6587 3890  
                              l6579 37F6                                l5891 2C24  
                              l5883 2C0A                                l5875 2BC8  
                              l5859 2B22                                l5795 295C  
                              l5787 293C                                l5779 28D0  
                              l5699 278C                                l6923 1A84  
                              l6915 1A5A                                l6907 1A0E  
                              l6827 178A                                l6819 1764  
                              l6835 17AA                                l6843 17D8  
                              l6851 1870                                l6771 1496  
                              l6763 13E6                                l6747 1316  
                              l6755 1356                                l6739 12E0  
                              l6675 1036                                l6659 0F74  
                              l6941 43E0                                l6933 437E  
                              l5957 4606                                l5949 45A4  
                              l5965 4640                                l5981 46C8  
                              l5973 4692                                l6597 3938  
                              l6589 3896                                l5893 2C2A  
                              l5885 2C0E                                l5869 2B74  
                              l5877 2BCA                                l5797 2966  
                              l5789 2948                                l6917 1A66  
                              l6909 1A14                                l6861 18DA  
                              l6853 188E                                l6845 1830  
                              l6837 17BC                                l6829 179A  
                              l6781 1554                                l6773 14CA  
                              l6765 143E                                l6757 135E  
                              l6749 1324                                l6693 10D0  
                              l6677 1048                                l6669 0FDA  
                              l6951 440C                                l6935 4382  
                              l5967 4650                                l5959 4626  
                              l5991 4730                                l5983 46D6  
                              l5975 4696                                l6599 3952  
                              l5895 2C38                                l5887 2C1C  
                              l5879 2BDA                                l5799 2988  
                              l6919 1A6E                                l6871 1918  
                              l6863 18DE                                l6855 18AA  
                              l6847 1864                                l6839 17CE  
                              l6791 1628                                l6783 1564  
                              l6775 14FC                                l6767 1472  
                              l6759 136E                                l6695 1104  
                              l6679 1064                                l6687 1080  
                              l6961 44C0                                l6953 4444  
                              l6945 43E6                                l6937 43A2  
                              l6929 4366                                l5969 4670  
                              l5993 473E                                l5985 46F6  
                              l5977 46A4                                l5897 2C3A  
                              l5889 2C22                                l6881 194A  
                              l6873 1920                                l6865 18EE  
                              l6857 18BC                                l6849 186C  
                              l6793 163C                                l6785 1598  
                              l6777 1512                                l6769 1478  
                              l6697 110A                                l6689 109A  
                              l6963 44D2                                l6947 43FC  
                              l6939 43DC                                l5995 476C  
                              l5987 4714                                l5979 46C4  
                              l6883 1950                                l6891 19A0  
                              l6875 192E                                l6867 1900  
                              l6859 18CA                                l6787 15EE  
                              l6795 1640                                l6779 1544  
                              l6699 1164                                l6971 4AFE  
                              l6965 44E4                                l6957 447E  
                              l6949 4404                                l5997 478C  
                              l5989 471C                                l6893 19B2  
                              l6885 1976                                l6877 1936  
                              l6869 1908                                l6797 1650  
                              l6789 15F4                                l6981 4B5A  
                              l6973 4B28                                l6991 3FDE  
                              l5999 479E                                l6895 19CC  
                              l6887 1992                                l6879 193E  
                              l6799 1664                                l6983 4B7A  
                              l6993 3FFA                                l6897 19D2  
                              l6889 199A                                l6985 4B8C  
                              l6977 4B34                                l6995 405C  
                              l6899 19E4                                l6987 4BB8  
                              l6979 4B42                                l6997 40A2  
                              l6999 40C2                                STR_1 0E01  
                              STR_2 0E37                                STR_3 0E3F  
                              STR_6 0E3B                                STR_7 0E43  
                      _BAUD4CONbits 000EE9                                _LATE 000F7D  
                              _LATG 000F7F                                _T2PR 000FBC  
                              u5210 576A                                u5211 5766  
                              u5220 5780                                u5221 577C  
                              u6040 5552                                u6041 554A  
                              u8000 2CC8                                u7200 27C8  
                              u6305 57EE                                u8001 2CC4  
                              u7201 27C4                                u6306 57F0  
                              u6058 5554                                u8010 2CDA  
                              u7210 280A                                u8011 2CD6  
                              u7211 2806                                u7140 4BF2  
                              u8100 2F7A                                u8020 2CEA  
                              u7300 293C                                u7220 2820  
                              u7141 4BEE                                u8101 2F76  
                              u8021 2CE6                                u7301 2938  
                              u7221 281C                                i2l30 5782  
                              u7150 4C04                                u8110 2F8E  
                              u8030 2D20                                u7310 295A  
                              u7230 2832                                u7151 4C00  
                              u8111 2F8A                                u8031 2D1C  
                              u7311 2956                                u7231 282E  
                              u8200 4D36                                u7160 4C2C  
                              u8120 2FA8                                u8040 2D30  
                              u7400 2AAA                                u7320 297A  
                              u7240 2842                                u9000 1030  
                              i2l33 57A8                                u8201 4D32  
                              u7161 4C28                                u8121 2FA4  
                              u8041 2D2C                                u7401 2AA6  
                              u7321 2976                                u7241 283E  
                              i2l42 58E4                                u8210 4D5C  
                              u6610 585E                                u7170 4C62  
                              u8130 2FF0                                u8050 2EAA  
                              u7410 2ABA                                u7330 2988  
                              u7250 287E                                u9010 1048  
                              u8211 4D58                                u6611 585A  
                              u7171 4C5E                                u8131 2FEC  
                              u7411 2AB6                                u7331 2984  
                              u7251 287A                                u9011 1044  
                              i2l36 58EE                                u6700 4344  
                              u6620 41C4                                u8220 4E42  
                              u8300 4F80                                u8140 301E  
                              u8060 2F04                                u7500 2B8E  
                              u7420 2AE6                                u7340 2998  
                              u7260 288C                                u7180 27A6  
                              u9100 1284                                u9020 10CC  
                              i2l45 58B2                                u6285 57DA  
                              u6701 4340                                u6621 41C0  
                              u8221 4E3E                                u8301 4F7C  
                              u8141 301A                                u8061 2F00  
                              u7501 2B8A                                u7421 2AE2  
                              u7341 2994                                u7261 2888  
                              u7181 27A2                                u9101 1280  
                              u9021 10C8                                u6286 57DC  
                              u8310 492A                                u6710 4352  
                              u6630 41D2                                u8230 4E5C  
                              u8150 3058                                u8070 2F24  
                              u7510 2BC8                                u7430 2AF6  
                              u7350 29CA                                u7270 28FA  
                              u7190 27B8                                u9110 12BA  
                              u9030 1160                                u6295 57E4  
                              u8311 4926                                u6711 434E  
                              u6631 41CE                                u8231 4E58  
                              u8151 3054                                u8071 2F20  
                              u8055 2EA0                                u7511 2BC4  
                              u7431 2AF2                                u7351 29C6  
                              u7271 28F6                                u7191 27B4  
                              u9111 12B6                                u9031 115C  
                              u6296 57E6                                u8320 4968  
                              u6640 422E                                u8160 4CBC  
                              u8240 4E76                                u8080 2F36  
                              u7520 2BDA                                u7440 2B12  
                              u7360 29D8                                u7280 2912  
                              u8400 4882                                u7600 5654  
                              u9200 1544                                u9120 12E0  
                              u9040 11D2                                u8321 4964  
                              u6641 422A                                u8161 4CB8  
                              u8241 4E72                                u8081 2F32  
                              u7521 2BD6                                u7441 2B0E  
                              u7361 29D4                                u7281 290C  
                              u8401 487E                                u9201 1540  
                              u9121 12DC                                u9041 11CE  
                              u8330 4986                                u6650 4284  
                              u8170 4CD6                                u7610 451C  
                              u8250 4E94                                u8090 2F64  
                              u7530 2BEA                                u7450 2B22  
                              u7370 29F6                                u7290 2914  
                              u8410 48AA                                u9210 1554  
                              u9130 12F2                                u9050 11F8  
                              u6731 54DA                                u8331 4982  
                              u6651 4280                                u8171 4CD2  
                              u7611 4518                                u8251 4E90  
                              u8091 2F60                                u7531 2BE6  
                              u7451 2B1E                                u7371 29F2  
                              u8411 48A6                                u9211 1550  
                              u9131 12EE                                u9051 11F4  
                              u8340 49A6                                u6660 42CE  
                              u8180 4CFC                                u6740 572E  
                              u7620 454E                                u7700 4714  
                              u8260 4EAA                                u7540 2C0A  
                              u7460 2B34                                u7380 2A2E  
                              u8420 48CA                                u8500 4A5E  
                              u9300 1764                                u9220 15EE  
                              u9140 1300                                u9060 120A  
                              u8341 49A2                                u6661 42CA  
                              u8181 4CF8                                u6741 572A  
                              u7621 454A                                u7701 4710  
                              u8261 4EA6                                u7541 2C06  
                              u7461 2B30                                u7381 2A2A  
                              u8421 48C6                                u8501 4A5A  
                              u9301 1760                                u9221 15EA  
                              u9141 12FC                                u9061 1206  
                              u8350 49F6                                u6670 42EC  
                              u8190 4D1A                                u7710 473E  
                              u8270 4ECE                                u7550 2C1C  
                              u7470 2B4A                                u7390 2A74  
                              u8430 48DA                                u8510 4A86  
                              u9310 17BC                                u9230 163C  
                              u9150 1316                                u9070 122C  
                              u8351 49F2                                u6671 42E8  
                              u8191 4D16                                u7631 4578  
                              u7711 473A                                u8271 4ECA  
                              u7551 2C18                                u7471 2B46  
                              u7391 2A70                                u8431 48D6  
                              u8511 4A82                                u9311 17B8  
                              u9231 1638                                u9151 1312  
                              u9071 1228                                u7800 3158  
                              u6680 42FC                                u7640 459C  
                              u7720 476C                                u8440 4D7C  
                              u8280 4F0E                                u8360 5670  
                              u7560 2C38                                u7480 2B60  
                              u8520 4AB0                                u8600 516C  
                              u9400 19E4                                u9320 188E  
                              u9240 1664                                u9160 1324  
                              u9080 1252                                u7801 3154  
                              u6681 42F8                                u7641 4598  
                              u7721 4768                                u8441 4D78  
                              u8281 4F0A                                u8361 566C  
                              u7561 2C34                                u7481 2B5C  
                              u8521 4AAC                                u8601 5168  
                              u9401 19E0                                u9321 188A  
                              u9241 1660                                u9161 1320  
                              u9081 124E                                u7810 3198  
                              u6690 430A                                u7650 45C6  
                              u7730 47B4                                u7570 549E  
                              u8450 4D9E                                u8290 4F4C  
                              u7490 2B74                                u8370 480C  
                              u8610 3A48                                u9410 1A42  
                              u9330 18AA                                u9250 1706  
                              u9170 134E                                u9090 1268  
                              u7811 3194                                u6691 4306  
                              u7651 45C2                                u7731 47B0  
                              u7571 549A                                u8451 4D9A  
                              u8291 4F48                                u7491 2B70  
                              u8371 4808                                u9411 1A3C  
                              u9331 18A6                                u9251 1702  
                              u9171 134A                                u9091 1264  
                              u7900 3312                                u7820 320E  
                              u7740 3090                                u9500 44E4  
                              u7660 4606                                u7580 56F2  
                              u8460 4DF4                                u8380 4840  
                              u8540 4AEA                                u8700 3BF0  
                              u8620 3A76                                u9420 1A44  
                              u9340 18BC                                u9260 171A  
                              u9180 1496                                u7901 330E  
                              u7821 320A                                u7741 308C  
                              u9501 44E0                                u7661 4602  
                              u7581 56EE                                u8461 4DF0  
                              u8541 4AE4                                u8701 3BEC  
                              u8621 3A72                                u9341 18B8  
                              u9261 1716                                u9181 1492  
                              u7910 3328                                u7830 3230  
                              u7750 30A2                                u8710 56C2  
                              u7670 4650                                u8470 4E02  
                              u8390 486E                                u8550 4AEC  
                              u8630 3A98                                u7590 5652  
                              u9430 1A5A                                u9350 18CA  
                              u9270 172C                                u9190 14FC  
                              u9510 4B28                                u7911 3324  
                              u7831 322C                                u7751 309E  
                              u8711 56BC                                u7671 464C  
                              u8471 4DFE                                u8391 486A  
                              u8535 4AC2                                u8631 3A94  
                              u8615 3A3E                                u7591 564C  
                              u9431 1A56                                u9351 18C6  
                              u9271 1728                                u9191 14F8  
                              u9511 4B24                                u7920 333C  
                              u7840 325A                                u7760 30B2  
                              u8720 56C4                                u9440 43A2  
                              u7680 46A4                                u8480 5584  
                              u8800 37E2                                u8560 51CE  
                              u9360 1900                                u9280 173A  
                              u9520 4B5A                                u9600 224A  
                              u7921 3338                                u7841 3256  
                              u7761 30AE                                u9441 439E  
                              u7681 46A0                                u8481 5580  
                              u8801 37DE                                u8385 4836  
                              u9361 18FC                                u9281 1736  
                              u9521 4B56                                u9601 2246  
                              u7930 3356                                u7850 327E  
                              u7770 30F6                                u8730 524C  
                              u9450 43DC                                u7690 46D6  
                              u8810 37F0                                u8490 4A40  
                              u8650 3B04                                u8570 51E0  
                              u9370 192E                                u9290 1756  
                              u9530 4B7A                                u9610 2296  
                              u7931 3352                                u7851 327A  
                              u7771 30F2                                u8731 5248  
                              u9451 43D8                                u7691 46D2  
                              u8811 37EC                                u8651 3B00  
                              u8571 51DC                                u9371 192A  
                              u9291 1752                                u9531 4B76  
                              u9611 2292                                u7940 339E  
                              u7860 3294                                u7780 3108  
                              u8740 527A                                u9460 43F8  
                              u8820 391A                                u8660 3B28  
                              u8580 5154                                u9380 19B2  
                              u8900 0E74                                u9540 4B8C  
                              u9700 252E                                u9620 22D4  
                              u7941 339A                                u7861 3290  
                              u7781 3104                                u8741 5276  
                              u9461 43F4                                u8821 3916  
                              u8645 3AAC                                u8581 514E  
                              u9381 19AE                                u8901 0E70  
                              u9541 4B88                                u9701 252A  
                              u9621 22D0                                u7950 33CE  
                              u7870 32B2                                u7790 3118  
                              u9470 44BA                                u8830 3938  
                              u8750 3750                                u8670 3B44  
                              u8646 3AB6                                u8590 5156  
                              u9390 19CC                                u8910 0EC4  
                              u9550 4BB8                                u9710 25E0  
                              u9630 2380                                u7951 33CA  
                              u7871 32AE                                u7791 3114  
                              u9471 44B4                                u8831 3934  
                              u8751 374A                                u8495 4A36  
                              u8671 3B40                                u8647 3AC6  
                              u8567 51C4                                u9391 19C8  
                              u8911 0EC0                                u9551 4BB4  
                              u9711 25DC                                u9631 237A  
                              u7960 33FC                                u7880 32D2  
                              u9560 3FFA                                u9800 3E08  
                              u9480 44BC                                u8840 3952  
                              u8760 3752                                u8680 3B98  
                              u8920 0ED2                                u9720 264E  
                              u9640 2382                                u7961 33F8  
                              u7881 32CE                                u9561 3FF6  
                              u9801 3E04                                u8841 394E  
                              u8665 3B1E                                u8921 0ECE  
                              u9721 2648                                u7890 32E4  
                              u9570 40DE                                u9810 3E3E  
                              u9490 44D2                                u8850 396C  
                              u8770 3768                                u7970 2C66  
                              u8690 3BB4                                u8930 0EE4  
                              u9730 2650                                u9650 239A  
                              u7891 32E0                                u9571 40DA  
                              u9811 3E36                                u9491 44CE  
                              u8851 3968                                u8771 3764  
                              u7971 2C62                                u8691 3BB0  
                              u8931 0EE0                                u9651 2396  
                              u9900 3F70                                u8860 397A  
                              u8780 3798                                u7980 2C78  
                              u8940 0F2C                                u9740 2668  
                              u9660 23D0                                u9901 3F6C  
                              u8861 3976                                u8781 3794  
                              u7981 2C74                                u8685 3B8E  
                              u8941 0F28                                u9741 2664  
                              u9661 23CC                                u9910 3FC2  
                              u9830 3E62                                u8870 398C  
                              u8790 37B4                                u7990 2C88  
                              u8950 0F5A                                u9750 2708  
                              u9670 2416                                u9911 3FBE  
                              u9831 3E5E                                u8871 3988  
                              u8791 37B0                                u7991 2C84  
                              u8951 0F54                                u9751 2704  
                              u9671 2412                                u9584 4138  
                              u9760 50A4                                u9920 3FDA  
                              u9840 3E84                                u8880 399A  
                              u8960 0F5C                                u9680 2474  
                              u9585 4134                                u9761 50A0  
                              u9921 3FD6                                u9841 3E80  
                              u8881 3996                                u9681 2470  
                              u9594 41A2                                u9770 50BC  
                              u9850 3ED6                                u9930 3C22  
                              u8890 39B2                                u8970 0F74  
                              u9690 249C                                u9595 419E  
                              u9771 50B8                                u9851 3ED2  
                              u9931 3C1E                                u8891 39AE  
                              u8971 0F70                                u9691 2498  
                              u9780 5008                                u9860 3EEE  
                              u9828 3E40                                u9940 3C58  
                              u8980 1000                                u9781 5004  
                              u9861 3EEA                                u9941 3C50  
                              u8981 0FFC                                u9790 5020  
                              u9870 3F2A                                u8990 102E  
                              u9791 501C                                u9871 3F22  
                              u8991 1028                                u9960 3C7C  
                              u9961 3C78                                u9890 3F4E  
                              u9970 3C9E                                u9891 3F4A  
                              u9971 3C9A                                u9980 3CF0  
                              u9981 3CEC                                u9990 3D08  
                              u9958 3C5A                                u9991 3D04  
                              u9888 3F2C       colorclick_writetoaddr@address 0008  
                       main@current 0176   __end_of_colorclick_toggleClearLED 57F2  
                              abs@a 0017                                _dbuf 0192  
                              _atoi 4366                                _main 3410  
                              _dtoa 3720                                _prec 00F8  
                              _nout 00F4                                pad@i 001C  
                              pad@p 0019                                fsr0h 000FEA  
                              fsr1h 000FE2                                indf0 000FEF  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 001E  
                              fsr2l 000FD9                                btemp 005B  
                              _stop 4F8A                       ___fpclassifyf 4A00  
                              prodh 000FF4                                prodl 000FF3  
                              start 0026                    __end_of_ADC_init 584C  
                   ___fldiv@new_exp 0024                     __end_of_HighISR 5528  
                      _tolower$2698 0011                        ___param_bank 000000  
                             ??_abs 0019                               ??_pad 001B  
            ??_clicker2buttons_init 0005                       ___fltol@sign1 000D  
                   __end_of___aodiv 4692                               ?_atoi 000C  
                   __end_of___fladd 2C4C                               ?_main 0001  
                             ?_dtoa 0020                     __end_of___aomod 47F6  
                             _ADPCH 000F5F                     __end_of___fldiv 3410  
                   __end_of___awdiv 4D6E                     __end_of___flneg 5692  
                             STR_10 0E47                               STR_12 0E47  
                   __end_of___awmod 4EE0                     __end_of___flmul 3076  
                   __end_of___flsub 545C                     __end_of___fltol 48FC  
                             u10000 3D44                               u10001 3D3C  
                             u10020 3D68                               u10100 1CA6  
                             u10021 3D64                               u10101 1CA2  
                             u10030 3D8A                               u10110 1CD8  
                             ?_stop 001E                               u10031 3D86  
                             u10111 1CD4                               u10040 3DDC  
                             u10200 1F52                               u10120 1D0A  
                             u10041 3DD8                               u10201 1F4E  
                             u10121 1D06                               u10050 3DF4  
                             u10018 3D46                               u10210 1F84  
                             u10130 1D6C                               u10051 3DF0  
                             u10211 1F80                               u10131 1D68  
                             u10220 200E                               u10140 1D9E  
                             u10060 511A                               u10300 3488  
                             u10221 200A                               u10141 1D9A  
                             u10061 5116                               u10301 3484  
                             u10230 2040                               u10150 1DD0  
                             u10070 1BE0                               u10310 3496  
                             u10231 203C                               u10151 1DCC  
                             u10071 1BDC                               u10311 3492  
                             u10240 2072                               u10160 1E32  
                             u10080 1C12                               u10320 34C6  
                             u10241 206E                               u10161 1E2E  
                             u10081 1C0E                               u10321 34C2  
                             u10250 20D4                               u10170 1E64  
                             u10090 1C44                               u10330 34D4  
                             u10251 20D0                               u10171 1E60  
                             u10091 1C40                               u10331 34D0  
                             u10260 2106                               u10180 1E96  
                             u10261 2102                               u10181 1E92  
                             u10341 34DE                               u10270 2138  
                             u10190 1F20                               u10271 2134  
                             u10191 1F1C                               u10407 36E6  
                             u10351 34F0                               u10280 219A  
                             u10417 3CCA                               u10281 2196  
                             u10361 36FC                               u10290 21CC  
                             u10427 3DB6                               u10291 21C8  
                   ___awdiv@divisor 000D                               u10437 3EB0  
                             u10447 3F9C                               u10457 4FE2  
                             u10467 507E                               u10477 55BE  
                             u10397 34AA                               i1l299 001E  
                             i2l294 5524                               i2l288 588E  
                   ___awdiv@counter 000F                        vfpfcnvrt@fmt 004E  
          __end_of_interrupts_clear 5890             __end_of_sendCharSerial4 5864  
        __end_of_I2C_2_Master_Start 58D2          __end_of_I2C_2_Master_Write 589C  
                             _flags 0056                               _fputc 4BE0  
                             _fputs 545C                     __end_of_isdigit 56CA  
                             atoi@n 0019                               pad@fp 0015  
                             atoi@s 000C                               _width 00F6  
                             _putch 58F0                               dtoa@d 0022  
                             dtoa@i 0042                   _clicker2LEDs_init 58D2  
                             dtoa@n 003A                               dtoa@p 0034  
                             dtoa@s 0038                               dtoa@w 0036  
                   __end_of_isspace 5286                     __end_of_isupper 565A  
                             tablat 000FF5                     __end_of_reverse 50BE  
                             plusw0 000FEB                               plusw2 000FDB  
            DCmotors_init@PWMperiod 0005                  ?_clicker2LEDs_init 0001  
                             ttemp5 005C                               ttemp6 005F  
                             ttemp7 0063                               status 000FD8  
                             wtemp8 005C                     __end_of_sprintf 5234  
                    ?___fpclassifyf 0005                     __end_of_tolower 5184  
                   __end_of_strncmp 4BE0               _I2C_2_Master_RepStart 58B4  
                   __initialization 55EA                 ??_clicker2LEDs_init 0005  
                      __end_of_atoi 450A                        __end_of_main 3720  
                      __end_of_dtoa 3A00                        __end_of_stop 5024  
                            ??_atoi 000E                              ??_main 0100  
                            ??_dtoa 002A             __end_of_colorclick_init 55EA  
                            ??_stop 0022                       __activetblptr 000003  
      __size_ofi2_I2C_2_Master_Idle 0028        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 58DC                        ?_setMotorPWM 0013  
                            ?_fputc 0005                              ?_fputs 000E  
                            _ADRESH 000F64                    ___awdiv@dividend 000B  
                            ?_putch 0001                _colorclick_readClear 5326  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
              _colorclick_readGreen 52D6                              i2l5301 58DC  
                            i2l5303 58E0                              i2l5081 5792  
                            i2l5305 58AA                              i2l5307 58AE  
                            i2l5079 5782                              i2l5297 58E6  
                            i2l5481 587A                              i2l5299 58EA  
                            i2l5581 54E4                              i2l5583 54F4  
                            i2l5585 54FA                              i2l5587 551C  
                            i2l5589 5520                           ??_HighISR 0003  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                  __end_of___xxtofl 4366                              _LowISR 0018  
                      vfprintf@cfmt 00B2                              ___flge 48FC  
                            ___fleq 4EE0                           ??___aodiv 0015  
                         ??___fladd 000D                           ??___aomod 0015  
                            ___wmul 57AA                           ??___fldiv 001B  
                         ??___awdiv 000F                           ??___flneg 0009  
                         ??___awmod 0009                           ??___flmul 000D  
                         ??___flsub 0026                           ??___fltol 0009  
                            _efgtoa 0E4C                    ??_buggyLEDs_init 0005  
                            _floorf 3A00                              clear_0 55F0  
                            clear_1 55FC                              clear_2 5608  
                  ___awdiv@quotient 0011                     ___awmod@divisor 0007  
            __size_of_read_card_RGB 077C                              isa$std 000001  
                   ___awmod@counter 0009                              pad@buf 0017  
                            dtoa@fp 0020                              _strcpy 5184  
                            _strlen 56CA                              fputc@c 0005  
                            fputs@c 0012                              fputs@i 0013  
                            fputs@s 000E                           ??_isdigit 0007  
                   ___fpclassifyf@e 000D     colorclick_toggleClearLED@toggle 0005  
                   ___fpclassifyf@u 000F                     ___fpclassifyf@x 0005  
                      __mediumconst 0000                           ??_isspace 0007  
                            tblptrh 000FF7                           ??_isupper 0007  
                            tblptrl 000FF6                              tblptru 000FF8  
                         ?_ADC_init 0001                    ?_sendCharSerial4 0001  
                         ??_reverse 0022                              putch@c 0001  
                  __end_of_vfprintf 5124                              stop@mL 001E  
                            stop@mR 0020                           ??_sprintf 0056  
                         ??_tolower 000D                        ?_USART4_init 0001  
                         ??_strncmp 000B               ?_colorclick_readClear 0009  
             ?_colorclick_readGreen 0009                    __end_of_turnLeft 3FDE  
                        ___flge@ff1 001E                          ___flge@ff2 0022  
                   ??___fpclassifyf 0009                        ___xxtofl@arg 000F  
                      ___xxtofl@exp 000E                        ___xxtofl@val 0005  
                        ___fleq@ff1 0005                          ___fleq@ff2 0009  
                        __accesstop 0060             __end_of__initialization 5618  
                        ___flneg@f1 0005              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                          ___fltol@f1 0005  
                    __pcstackCOMRAM 0001             ?_colorclick_writetoaddr 0007  
                     __end_of_fputc 4CAA                       __end_of_fputs 54A0  
                     __end_of_putch 58F2                    ?_colorclick_init 0001  
                _colorclick_readRed 5286                          ??_ADC_init 0005  
        __size_of_clicker2LEDs_init 000A                             ??_fputc 0009  
                           ??_fputs 0012                read_card_RGB@current 002C  
                           ??_putch 0005                 ?_colorclick_readRed 0009  
                        __pbssBANK0 00D8                          __pbssBANK1 0190  
                        __pbssBANK2 0200                        _battery_flag 0190  
                     _read_card_RGB 1AA6       __size_ofi2_I2C_2_Master_Start 000A  
     __size_ofi2_I2C_2_Master_Write 000C                             ?_LowISR 0001  
                      _T2CLKCONbits 000FBF      __end_of_colorclick_writetoaddr 5812  
                           ?___flge 001E                             ?___fleq 0005  
                           ?___wmul 0005                             ?_efgtoa 0040  
              ??_colorclick_readRed 000B                             ?_floorf 002C  
                           ?_strcpy 0005                             ?_strlen 0005  
      __size_of_colorclick_readBlue 0050                             _INT1PPS 000DF1  
             _colorclick_readColour 54A0                           ?___xxtofl 0005  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                 ?_interrupts_clear 0001                  __size_of_vfpfcnvrt 056A  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6              ??_colorclick_readClear 000B  
                           _SSP2BUF 000ED5              ??_colorclick_readGreen 000B  
                ??_interrupts_clear 0003                      ?_read_card_RGB 002C  
              __size_of_setMotorPWM 01D4              __size_of_DCmotors_init 0050  
                           _HighISR 0008          ?_colorclick_toggleClearLED 0001  
                __size_of_turnRight 01E6                           _ADREFbits 000F58  
                _I2C_2_Master_Start 58C8                 i2_I2C_2_Master_Idle 5782  
                _I2C_2_Master_Write 5890                             __Hparam 0000  
               i2_I2C_2_Master_Stop 58DC                             __Lparam 0000  
                   __size_of_LowISR 000E             sendStringSerial4@string 0006  
                   __size_of___flge 0104                     __size_of___fleq 00AA  
                           ___aodiv 450A                             ___fladd 278C  
                           ___aomod 4692                             ___fldiv 3076  
                           ___awdiv 4CAA                             ___flneg 565A  
                           ___awmod 4E30                             ___flmul 2C4C  
                           ___flsub 5416                             ___fltol 47F6  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 00AC  
                      __psmallconst 0E00                     __size_of_efgtoa 0C5A  
                   __size_of_floorf 0212                             __pcinit 55EA  
           colorclick_readClear@tmp 000E                             __ramtop 0E00  
                         ?_turnLeft 001E                             __ptext0 3410  
                           __ptext1 51E2                             __ptext2 50BE  
                           __ptext3 2222                             __ptext4 4AFE  
                           __ptext5 0E4C                             __ptext6 5124  
                           __ptext7 5622                             __ptext8 5184  
                           __ptext9 3A00       __size_of_clicker2buttons_init 000C  
                   __size_of_strcpy 005E                     __size_of_strlen 0036  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                      __size_of_abs 0040                        __size_of_pad 00C2  
                           _isdigit 5692                          ??___xxtofl 0009  
              ?i2_I2C_2_Master_Stop 0001                    ___awmod@dividend 0005  
                           _isspace 5234                           _T2HLTbits 000FBE  
                           _isupper 5622                             efgtoa@c 0046  
                           efgtoa@d 0078                             efgtoa@e 0090  
                           efgtoa@f 0042                             efgtoa@g 008C  
                           efgtoa@h 0082                             efgtoa@i 008A  
                           efgtoa@l 0086                             efgtoa@m 0072  
                           efgtoa@n 0092                             efgtoa@p 007C  
                           efgtoa@t 006C                             efgtoa@u 0094  
                           efgtoa@w 007E                             _reverse 5024  
                     _RxBufWriteCnt 00FF                             atoi@neg 0012  
                           main@buf 0102                             _sprintf 51E2  
                           _tolower 5124                ??_I2C_2_Master_Start 0006  
              ??_I2C_2_Master_Write 0006                             _strncmp 4AFE  
                    __pintcode_body 54E4                end_of_initialization 5618  
                           floorf@e 003A                             floorf@m 0036  
                           floorf@u 003C                             floorf@x 002C  
                setMotorPWM@PWMduty 001C             colorclick_readGreen@tmp 000E  
                           fputc@fp 0007                __size_of_USART4_init 0020  
                           int_func 54E4                             fputs@fp 0010  
                      turnRight@deg 0022                   __end_of_vfpfcnvrt 278C  
                        efgtoa@mode 0081                          efgtoa@sign 007A  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                          ??_vfprintf 0056  
                           strcpy@d 000D                             strlen@a 0007  
                           strcpy@s 000B                             strlen@s 0005  
                     _DCmotors_init 53C6                          ??_turnLeft 0023  
                         _PORTFbits 000F8E              ?_colorclick_readColour 0010  
             ??i2_I2C_2_Master_Idle 0001                   __end_of_turnRight 3DF8  
             ??i2_I2C_2_Master_Stop 0002                         ___fladd@grs 0014  
                     ___xxtofl@sign 000D                           _TRISAbits 000F81  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0026  
                       ___fldiv@rem 001F                     ??_read_card_RGB 0038  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 0006  
                       ___flmul@grs 0013                        _EUSART4RXbuf 00D8  
                      _EUSART4TXbuf 0200           sendCharSerial4@charToSend 0005  
                        main@motorL 017E                          main@motorR 0187  
                    __end_of_LowISR 0026                      __end_of___flge 4A00  
                    __end_of___fleq 4F8A                      ?_DCmotors_init 0001  
                       vfpfcnvrt@ap 0050                         vfpfcnvrt@ct 00A8  
                       vfpfcnvrt@fp 004C                         vfpfcnvrt@ll 0098  
                    __end_of___wmul 57D0                      __end_of_efgtoa 1AA6  
                    __end_of_floorf 3C12                          floorf@F527 00EC  
                    __end_of_strcpy 51E2                      __end_of_strlen 5700  
               start_initialization 55EA                         __end_of_abs 55AA  
                       __end_of_pad 4E30                       _TxBufWriteCnt 0059  
                   _returnhome_flag 005A            __size_of_sendCharSerial4 0018  
             __end_of___fpclassifyf 4AFE                 _colorclick_readBlue 5376  
                          ??_LowISR 0004                         vfprintf@fmt 00AE  
                   read_card_RGB@mL 0034                     read_card_RGB@mR 0036  
                          ??___flge 0026                            ??___fleq 000D  
                          ??___wmul 0009                            ??_efgtoa 0047  
     i2I2C_2_Master_Write@data_byte 0002                            ??_floorf 0030  
                          ??_strcpy 0009                            ??_strlen 0007  
      __end_ofi2_I2C_2_Master_Start 58F0                ?_colorclick_readBlue 0009  
      __end_ofi2_I2C_2_Master_Write 58B4                           ___fladd@a 0009  
                         ___fladd@b 0005                           ___fldiv@a 0017  
                         ___fldiv@b 0013                           ___flmul@a 0009  
                         ___flmul@b 0005                         __pbssCOMRAM 0056  
                         ___flsub@a 0022                           ___flsub@b 001E  
                     __pcstackBANK0 0060                       __pcstackBANK1 0100  
                  ___aodiv@dividend 0005             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4            __size_of_colorclick_init 0040  
                          ?_HighISR 0001                           _card_flag 0191  
       ??_colorclick_toggleClearLED 0005                           _atoi$2603 0014  
                         _atoi$2604 0018                           _atoi$2605 0016  
         __size_of_interrupts_clear 0016                         _efgtoa$2542 0064  
                       _efgtoa$2537 0060                         _efgtoa$2546 0066  
                       _efgtoa$2538 0062                         _efgtoa$2547 0068  
                       _efgtoa$2548 006A                           _dtoa$2513 0032  
                       _clear_lower 00FC                         _clear_upper 00FA  
                         __pintcode 0008                     ??_DCmotors_init 0005  
                          ?___aodiv 0005                            ?___fladd 0005  
                          ?___aomod 0005                            ?___fldiv 0013  
                          ?___awdiv 000B                    ___aodiv@quotient 0017  
                          ?___flneg 0005                            ?___awmod 0005  
                          ?___flmul 0005                            ?___flsub 001E  
                          ?___fltol 0005         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018               ??_colorclick_readBlue 000B  
              I2C_2_Master_Read@ack 0007                   __size_of_vfprintf 0066  
              I2C_2_Master_Read@tmp 0008                         __smallconst 0E00  
                          ?_isdigit 0005                   __size_of_turnLeft 01E6  
                 _I2C_2_Master_Idle 575A                   _I2C_2_Master_Init 5730  
                 _I2C_2_Master_Read 5528                   _I2C_2_Master_Stop 58BE  
                          ?_isspace 0005                            ?_isupper 0005  
                      _RxBufReadCnt 00FE                            _ADC_init 5832  
                          ?_reverse 001E                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                     ??_setMotorPWM 0015                  ?_I2C_2_Master_Stop 0001  
                          ?_sprintf 00B4                            ?_tolower 000B  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
                          ?_strncmp 0005                      __size_of_putch 0002  
     __size_of_colorclick_readClear 0050              colorclick_readBlue@tmp 000E  
                       turnLeft@deg 0022       __size_of_colorclick_readGreen 0050  
      __end_of_clicker2buttons_init 58A8                   _sendStringSerial4 5700  
               ??_I2C_2_Master_Idle 0005                 ??_I2C_2_Master_Init 0005  
               ??_I2C_2_Master_Read 0006                      ___wmul@product 0009  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0006  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F         colorclick_writetoaddr@value 0007  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                  ?_sendStringSerial4 0006  
                          _PIE4bits 000E2D                         turnRight@mL 001E  
                       turnRight@mR 0020                            _PIR0bits 000E33  
                          _PIR4bits 000E37                            i2u626_40 5792  
                          i2u626_41 578E                            i2u627_40 57A8  
                          i2u707_40 54F4                            i2u627_41 57A4  
                          i2u707_41 54F0                            i2u708_40 550C  
                          i2u708_41 5504                            i2u709_48 550E  
                 ??_sendCharSerial4 0005                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0008                            _SSP2STAT 000ED8  
           ??_colorclick_readColour 0018                           _vfpfcnvrt 2222  
                         main@B_rel 016E                           main@C_rel 0172  
                         main@G_rel 016A                          _ADCON0bits 000F60  
         __end_of_I2C_2_Master_Idle 5782           _colorclick_toggleClearLED 57D0  
         __end_of_I2C_2_Master_Init 575A           __end_of_I2C_2_Master_Read 556A  
                 ___wmul@multiplier 0005                           main@R_rel 0166  
         __end_of_I2C_2_Master_Stop 58C8                        setMotorPWM@m 0013  
       I2C_2_Master_Write@data_byte 0006                        _TxBufReadCnt 0058  
                      _isspace$2634 000B                           _turnRight 3C12  
                        vfpfcnvrt@c 00AB                          vfpfcnvrt@f 00A4  
                     ??_USART4_init 0005           __end_of_sendStringSerial4 5730  
       __size_of_I2C_2_Master_Start 000A         __size_of_I2C_2_Master_Write 000C  
      colorclick_readColour@current 0010      __size_of_I2C_2_Master_RepStart 000A  
     __end_of_I2C_2_Master_RepStart 58BE            ??_colorclick_writetoaddr 0008  
               __end_of_setMotorPWM 41B2                    __size_of_HighISR 5520  
              i2_I2C_2_Master_Start 58E6                   ??_colorclick_init 0009  
              i2_I2C_2_Master_Write 58A8                            __Hrparam 0000  
                        vfprintf@ap 00B0                            __Lrparam 0000  
                        vfprintf@fp 00AC         __end_ofi2_I2C_2_Master_Idle 57AA  
                  __size_of___aodiv 0188                    __size_of___fladd 04C0  
       __end_ofi2_I2C_2_Master_Stop 58E6                    __size_of___aomod 0164  
                  __size_of___fldiv 039A                    __size_of___awdiv 00C4  
                  __size_of___flneg 0038                    __size_of___awmod 00B0  
                  __size_of___flmul 042A                    __size_of___flsub 0046  
                  __size_of___fltol 0106                          ?_vfpfcnvrt 004C  
                read_card_RGB@B_rel 003C                  read_card_RGB@G_rel 0038  
                   ___aodiv@divisor 000D                  read_card_RGB@R_rel 0040  
                   ___aodiv@counter 0015                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                  ___fpclassifyf@F465 00F0  
                        _ANSELFbits 000EB4                          sprintf@fmt 00B6  
                          ___xxtofl 41B2                      _buggyLEDs_init 5864  
                  __size_of_isdigit 0038                    __size_of_isspace 0052  
                        ?_turnRight 001E                            __ptext10 4A00  
                          __ptext11 47F6                            __ptext20 56CA  
                          __ptext12 5416                            __ptext21 545C  
                          __ptext13 278C                            __ptext30 5700  
                          __ptext22 4BE0                            __ptext14 565A  
                          __ptext31 584C                            __ptext23 58F0  
                          __ptext15 2C4C                            __ptext40 41B2  
                          __ptext32 1AA6                            __ptext24 556A  
                          __ptext16 4EE0                            __ptext41 48FC  
                          __ptext33 3C12                            __ptext25 4692  
                          __ptext17 4E30                            __ptext50 55AA  
                          __ptext42 3076                            __ptext34 3DF8  
                          __ptext26 450A                            __ptext18 3720  
                          __ptext51 57F2                            __ptext43 54A0  
                          __ptext35 4F8A                            __ptext27 4366  
                          __ptext19 4D6E                            __ptext60 589C  
                          __ptext52 5890                            __ptext44 5286  
                          __ptext36 5024                            __ptext28 5234  
                          __ptext61 58D2                            __ptext53 58BE  
                          __ptext45 52D6                            __ptext37 3FDE  
                          __ptext29 5692                            __ptext70 5782  
                          __ptext62 5864                            __ptext54 58C8  
                          __ptext46 5326                            __ptext38 57AA  
                          __ptext63 5832                            __ptext55 575A  
                          __ptext47 5376                            __ptext39 4CAA  
                          __ptext56 57D0                            __ptext48 58B4  
                          __ptext57 5730                            __ptext49 5528  
                          __ptext66 587A                            __ptext58 5812  
                          __ptext67 58A8                            __ptext59 53C6  
                          __ptext68 58DC                            __ptext69 58E6  
                  __size_of_isupper 0038                    __size_of_reverse 009A  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
             __end_of_read_card_RGB 2222                    __size_of_sprintf 0052  
                  __size_of_tolower 0060                          strcpy@dest 0005  
                  __size_of_strncmp 00E2                       __size_of_atoi 01A4  
                     __size_of_main 0310                       __size_of_dtoa 02E0  
                     __size_of_stop 009A                          turnLeft@mL 001E  
                        turnLeft@mR 0020               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                 __end_of_USART4_init 5832  
                  _interrupts_clear 587A               colorclick_readRed@tmp 000E  
                         reverse@mL 001E                           reverse@mR 0020  
                          efgtoa@fp 0040                            efgtoa@ne 0070  
                          efgtoa@pp 006E                            efgtoa@ou 0074  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005B                            _vfprintf 50BE  
                          _turnLeft 3DF8          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  ___aomod@dividend 0005                _clicker2buttons_init 589C  
        __size_of_I2C_2_Master_Stop 000A              __end_of_buggyLEDs_init 587A  
                    _vfpfcnvrt$2562 00A0                      _vfpfcnvrt$2567 00A2  
                        _INTCONbits 000FF2                            isdigit@c 0005  
                       _setMotorPWM 3FDE                         _PWM6CONbits 000FA4  
        __size_of_sendStringSerial4 0030                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
                         sprintf@ap 00D0                            isspace@c 0005  
   __size_of_colorclick_writetoaddr 0020                           strcpy@src 0007  
                          isupper@c 0005                           strncmp@_l 0005  
                         strncmp@_r 0007                         efgtoa@nmode 0080  
                   ___aomod@divisor 000D                         ??_vfpfcnvrt 0052  
                   ___aomod@counter 0015               ?_clicker2buttons_init 0001  
                          sprintf@f 00D2                            tolower@c 000B  
                          sprintf@s 00B4                     ?_buggyLEDs_init 0001  
            __size_of___fpclassifyf 00FE                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                            strncmp@l 000C  
                          strncmp@n 0009                            strncmp@r 000E  
                       ??_turnRight 0023  __size_of_colorclick_toggleClearLED 0022  
                     ___fladd@signs 0011                         _USART4_init 5812  
                        _TX4STAbits 000EE8                        ___aodiv@sign 0016  
                   _sendCharSerial4 584C              ??i2_I2C_2_Master_Start 0002  
                      ___fladd@aexp 0012              ??i2_I2C_2_Master_Write 0002  
                      ___fladd@bexp 0013                        ___aomod@sign 0016  
