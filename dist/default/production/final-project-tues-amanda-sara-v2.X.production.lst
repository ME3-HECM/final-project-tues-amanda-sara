

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 14:01:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 05/05/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F67K40 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     _INT1PPS	set	3569
    95  0000                     _PIE4bits	set	3629
    96  0000                     _TX4REG	set	3812
    97  0000                     _RC4REG	set	3811
    98  0000                     _PIR4bits	set	3639
    99  0000                     _RC4STAbits	set	3815
   100  0000                     _SP4BRGH	set	3814
   101  0000                     _SP4BRGL	set	3813
   102  0000                     _TX4STAbits	set	3816
   103  0000                     _BAUD4CONbits	set	3817
   104  0000                     _RX4PPS	set	3605
   105  0000                     _RC0PPS	set	3682
   106  0000                     _PIR0bits	set	3635
   107  0000                     _IPR0bits	set	3615
   108  0000                     _PIE0bits	set	3625
   109  0000                     _ANSELBbits	set	3738
   110  0000                     _ANSELFbits	set	3764
   111  0000                     _RC7PPS	set	3689
   112  0000                     _RE2PPS	set	3700
   113  0000                     _SSP2BUF	set	3797
   114  0000                     _SSP2CON2bits	set	3802
   115  0000                     _SSP2CON2	set	3802
   116  0000                     _SSP2STAT	set	3800
   117  0000                     _RD6PPS	set	3696
   118  0000                     _RD5PPS	set	3695
   119  0000                     _SSP2CLKPPS	set	3612
   120  0000                     _SSP2DATPPS	set	3613
   121  0000                     _ANSELDbits	set	3751
   122  0000                     _SSP2ADD	set	3798
   123  0000                     _SSP2CON1bits	set	3801
   124  0000                     _ADPCH	set	3935
   125  0000                     _ADREFbits	set	3928
   126  0000                     _LATAbits	set	3961
   127  0000                     _TRISAbits	set	3969
   128  0000                     _ADRESH	set	3940
   129  0000                     _ADCON0bits	set	3936
   130  0000                     _INTCONbits	set	4082
   131  0000                     _TRISBbits	set	3970
   132  0000                     _LATFbits	set	3966
   133  0000                     _TRISHbits	set	3976
   134  0000                     _TRISFbits	set	3974
   135  0000                     _PWM7CONbits	set	4001
   136  0000                     _PWM6CONbits	set	4004
   137  0000                     _LATGbits	set	3967
   138  0000                     _LATCbits	set	3963
   139  0000                     _LATEbits	set	3965
   140  0000                     _TRISGbits	set	3975
   141  0000                     _TRISCbits	set	3971
   142  0000                     _TRISEbits	set	3973
   143  0000                     _T2PR	set	4028
   144  0000                     _T2CLKCONbits	set	4031
   145  0000                     _T2HLTbits	set	4030
   146  0000                     _T2CONbits	set	4029
   147  0000                     _LATHbits	set	3968
   148  0000                     _LATDbits	set	3964
   149  0000                     _PORTFbits	set	3982
   150  0000                     _TRISDbits	set	3972
   151  0000                     _LATG	set	3967
   152  0000                     _PWM7DCH	set	4000
   153  0000                     _LATE	set	3965
   154  0000                     _PWM6DCH	set	4003
   155                           
   156                           ; #config settings
   157                           
   158                           	psect	cinit
   159  001AFE                     __pcinit:
   160                           	callstack 0
   161  001AFE                     start_initialization:
   162                           	callstack 0
   163  001AFE                     __initialization:
   164                           	callstack 0
   165                           
   166                           ; Clear objects allocated to BANK0 (62 bytes)
   167  001AFE  EE00  F060         	lfsr	0,__pbssBANK0
   168  001B02  0E3E               	movlw	62
   169  001B04                     clear_0:
   170  001B04  6AEE               	clrf	postinc0,c
   171  001B06  06E8               	decf	wreg,f,c
   172  001B08  E1FD               	bnz	clear_0
   173                           
   174                           ; Clear objects allocated to COMRAM (29 bytes)
   175  001B0A  EE00  F03B         	lfsr	0,__pbssCOMRAM
   176  001B0E  0E1D               	movlw	29
   177  001B10                     clear_1:
   178  001B10  6AEE               	clrf	postinc0,c
   179  001B12  06E8               	decf	wreg,f,c
   180  001B14  E1FD               	bnz	clear_1
   181  001B16                     end_of_initialization:
   182                           	callstack 0
   183  001B16                     __end_of__initialization:
   184                           	callstack 0
   185  001B16  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   186  001B18  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   187  001B1A  0100               	movlb	0
   188  001B1C  EF46  F004         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMRAM
   191  00003B                     __pbssCOMRAM:
   192                           	callstack 0
   193  00003B                     _EUSART4RXbuf:
   194                           	callstack 0
   195  00003B                     	ds	20
   196  00004F                     _clear_upper:
   197                           	callstack 0
   198  00004F                     	ds	2
   199  000051                     _clear_lower:
   200                           	callstack 0
   201  000051                     	ds	2
   202  000053                     _TxBufReadCnt:
   203                           	callstack 0
   204  000053                     	ds	1
   205  000054                     _TxBufWriteCnt:
   206                           	callstack 0
   207  000054                     	ds	1
   208  000055                     _RxBufReadCnt:
   209                           	callstack 0
   210  000055                     	ds	1
   211  000056                     _RxBufWriteCnt:
   212                           	callstack 0
   213  000056                     	ds	1
   214  000057                     _returnhome_flag:
   215                           	callstack 0
   216  000057                     	ds	1
   217                           
   218                           	psect	bssBANK0
   219  000060                     __pbssBANK0:
   220                           	callstack 0
   221  000060                     _EUSART4TXbuf:
   222                           	callstack 0
   223  000060                     	ds	60
   224  00009C                     _battery_flag:
   225                           	callstack 0
   226  00009C                     	ds	1
   227  00009D                     _card_flag:
   228                           	callstack 0
   229  00009D                     	ds	1
   230                           
   231                           	psect	cstackBANK0
   232  00009E                     __pcstackBANK0:
   233                           	callstack 0
   234  00009E                     read_card@R_rel:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238  00009E                     	ds	2
   239  0000A0                     read_card@G_rel:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x2
   243  0000A0                     	ds	2
   244  0000A2                     read_card@B_rel:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248  0000A2                     	ds	2
   249  0000A4                     main@initial:
   250                           	callstack 0
   251                           
   252                           ; 8 bytes @ 0x6
   253  0000A4                     	ds	8
   254  0000AC                     main@current:
   255                           	callstack 0
   256                           
   257                           ; 8 bytes @ 0xE
   258  0000AC                     	ds	8
   259  0000B4                     main@motorL:
   260                           	callstack 0
   261                           
   262                           ; 9 bytes @ 0x16
   263  0000B4                     	ds	9
   264  0000BD                     main@motorR:
   265                           	callstack 0
   266                           
   267                           ; 9 bytes @ 0x1F
   268  0000BD                     	ds	9
   269                           
   270                           	psect	cstackCOMRAM
   271  000001                     __pcstackCOMRAM:
   272                           	callstack 0
   273  000001                     ??i2_I2C_2_Master_Idle:
   274  000001                     
   275                           ; 1 bytes @ 0x0
   276  000001                     	ds	1
   277  000002                     i2I2C_2_Master_Write@data_byte:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x1
   281  000002                     	ds	1
   282  000003                     ??_HighISR:
   283  000003                     
   284                           ; 1 bytes @ 0x2
   285  000003                     	ds	1
   286  000004                     ??_LowISR:
   287                           
   288                           ; 1 bytes @ 0x3
   289  000004                     	ds	1
   290  000005                     ??_I2C_2_Master_Idle:
   291  000005                     ?___wmul:
   292                           	callstack 0
   293  000005                     ?___lwdiv:
   294                           	callstack 0
   295  000005                     ?___xxtofl:
   296                           	callstack 0
   297  000005                     DCmotors_init@PWMperiod:
   298                           	callstack 0
   299  000005                     colorclick_toggleClearLED@toggle:
   300                           	callstack 0
   301  000005                     ___wmul@multiplier:
   302                           	callstack 0
   303  000005                     ___lwdiv@dividend:
   304                           	callstack 0
   305  000005                     ___xxtofl@val:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x4
   309  000005                     	ds	1
   310  000006                     ??_I2C_2_Master_Read:
   311  000006                     I2C_2_Master_Write@data_byte:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x5
   315  000006                     	ds	1
   316  000007                     I2C_2_Master_Read@ack:
   317                           	callstack 0
   318  000007                     colorclick_writetoaddr@value:
   319                           	callstack 0
   320  000007                     ___wmul@multiplicand:
   321                           	callstack 0
   322  000007                     ___lwdiv@divisor:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x6
   326  000007                     	ds	1
   327  000008                     I2C_2_Master_Read@tmp:
   328                           	callstack 0
   329  000008                     colorclick_writetoaddr@address:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x7
   333  000008                     	ds	1
   334  000009                     ??_colorclick_init:
   335  000009                     ??_interrupts_init:
   336  000009                     ??___xxtofl:
   337  000009                     ?_colorclick_readRed:
   338                           	callstack 0
   339  000009                     ?_colorclick_readGreen:
   340                           	callstack 0
   341  000009                     ?_colorclick_readBlue:
   342                           	callstack 0
   343  000009                     ?_colorclick_readClear:
   344                           	callstack 0
   345  000009                     ___lwdiv@counter:
   346                           	callstack 0
   347  000009                     ___wmul@product:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x8
   351  000009                     	ds	1
   352  00000A                     ___lwdiv@quotient:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x9
   356  00000A                     	ds	1
   357  00000B                     ??_colorclick_readRed:
   358  00000B                     ??_colorclick_readGreen:
   359  00000B                     ??_colorclick_readBlue:
   360  00000B                     ??_colorclick_readClear:
   361  00000B                     ?___awdiv:
   362                           	callstack 0
   363  00000B                     ___awdiv@dividend:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xA
   367  00000B                     	ds	2
   368  00000D                     ___xxtofl@sign:
   369                           	callstack 0
   370  00000D                     ___awdiv@divisor:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xC
   374  00000D                     	ds	1
   375  00000E                     ___xxtofl@exp:
   376                           	callstack 0
   377  00000E                     colorclick_readRed@tmp:
   378                           	callstack 0
   379  00000E                     colorclick_readGreen@tmp:
   380                           	callstack 0
   381  00000E                     colorclick_readBlue@tmp:
   382                           	callstack 0
   383  00000E                     colorclick_readClear@tmp:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0xD
   387  00000E                     	ds	1
   388  00000F                     ___awdiv@counter:
   389                           	callstack 0
   390  00000F                     ___xxtofl@arg:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0xE
   394  00000F                     	ds	1
   395  000010                     ?_colorclick_readColour:
   396                           	callstack 0
   397  000010                     ___awdiv@sign:
   398                           	callstack 0
   399  000010                     colorclick_readColour@current:
   400                           	callstack 0
   401                           
   402                           ; 8 bytes @ 0xF
   403  000010                     	ds	1
   404  000011                     ___awdiv@quotient:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x10
   408  000011                     	ds	2
   409  000013                     setMotorPWM@m:
   410                           	callstack 0
   411  000013                     ___flge@ff1:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x12
   415  000013                     	ds	2
   416  000015                     ??_setMotorPWM:
   417                           
   418                           ; 1 bytes @ 0x14
   419  000015                     	ds	2
   420  000017                     ___flge@ff2:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x16
   424  000017                     	ds	1
   425  000018                     
   426                           ; 1 bytes @ 0x17
   427  000018                     	ds	3
   428  00001B                     ??___flge:
   429                           
   430                           ; 1 bytes @ 0x1A
   431  00001B                     	ds	1
   432  00001C                     setMotorPWM@PWMduty:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x1B
   436  00001C                     	ds	2
   437  00001E                     forward@mL:
   438                           	callstack 0
   439  00001E                     reverse@mL:
   440                           	callstack 0
   441  00001E                     stop@mL:
   442                           	callstack 0
   443  00001E                     turnLeft@mL:
   444                           	callstack 0
   445  00001E                     turnRight@mL:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x1D
   449  00001E                     	ds	2
   450  000020                     forward@mR:
   451                           	callstack 0
   452  000020                     reverse@mR:
   453                           	callstack 0
   454  000020                     stop@mR:
   455                           	callstack 0
   456  000020                     turnLeft@mR:
   457                           	callstack 0
   458  000020                     turnRight@mR:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x1F
   462  000020                     	ds	2
   463  000022                     ??_forward:
   464  000022                     ??_reverse:
   465  000022                     ??_stop:
   466  000022                     turnLeft@deg:
   467                           	callstack 0
   468  000022                     turnRight@deg:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x21
   472  000022                     	ds	1
   473  000023                     ??_turnRight:
   474  000023                     ??_turnLeft:
   475                           
   476                           ; 1 bytes @ 0x22
   477  000023                     	ds	2
   478  000025                     read_card@initial:
   479                           	callstack 0
   480                           
   481                           ; 8 bytes @ 0x24
   482  000025                     	ds	8
   483  00002D                     read_card@current:
   484                           	callstack 0
   485                           
   486                           ; 8 bytes @ 0x2C
   487  00002D                     	ds	8
   488  000035                     read_card@mL:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x34
   492  000035                     	ds	2
   493  000037                     read_card@mR:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x36
   497  000037                     	ds	2
   498  000039                     ??_main:
   499                           
   500                           ; 1 bytes @ 0x38
   501  000039                     	ds	2
   502                           
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 7 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  motorR          9   31[BANK0 ] struct .
   513 ;;  motorL          9   22[BANK0 ] struct .
   514 ;;  current         8   14[BANK0 ] struct .
   515 ;;  initial         8    6[BANK0 ] struct .
   516 ;;  PWMperiod       1    0        unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   527 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   529 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   530 ;;Total ram usage:       36 bytes
   531 ;; Hardware stack levels required when called: 9
   532 ;; This function calls:
   533 ;;		_ADC_init
   534 ;;		_DCmotors_init
   535 ;;		_USART4_init
   536 ;;		_colorclick_init
   537 ;;		_colorclick_readColour
   538 ;;		_colorclick_toggleClearLED
   539 ;;		_forward
   540 ;;		_interrupts_init
   541 ;;		_read_card
   542 ;;		_turnLeft
   543 ;;		_turnRight
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text0
   550  00088C                     __ptext0:
   551                           	callstack 0
   552  00088C                     _main:
   553                           	callstack 22
   554  00088C                     
   555                           ;main.c: 12:     card_flag = 0;
   556  00088C  0E00               	movlw	0
   557  00088E  0100               	movlb	0	; () banked
   558  000890  6F9D               	movwf	_card_flag& (0+255),b	;volatile
   559                           
   560                           ;main.c: 13:     battery_flag = 0;
   561  000892  0E00               	movlw	0
   562  000894  6F9C               	movwf	_battery_flag& (0+255),b	;volatile
   563                           
   564                           ;main.c: 14:     returnhome_flag = 0;
   565  000896  0E00               	movlw	0
   566  000898  6E57               	movwf	_returnhome_flag^0,c	;volatile
   567  00089A                     
   568                           ; BSR set to: 0
   569                           ;main.c: 15:     ADC_init();
   570  00089A  ECC1  F00D         	call	_ADC_init	;wreg free
   571  00089E                     
   572                           ;main.c: 16:     colorclick_init();
   573  00089E  EC0F  F00D         	call	_colorclick_init	;wreg free
   574  0008A2                     
   575                           ;main.c: 17:     interrupts_init();
   576  0008A2  ECAC  F00B         	call	_interrupts_init	;wreg free
   577  0008A6                     
   578                           ;main.c: 18:     DCmotors_init(PWMperiod);
   579  0008A6  0E63               	movlw	99
   580  0008A8  EC82  F00C         	call	_DCmotors_init
   581  0008AC                     
   582                           ;main.c: 19:     USART4_init();
   583  0008AC  ECB1  F00D         	call	_USART4_init	;wreg free
   584  0008B0                     
   585                           ;main.c: 24:     DC_motor motorL;;main.c: 25:     motorL.power=0;
   586  0008B0  0E00               	movlw	0
   587  0008B2  0100               	movlb	0	; () banked
   588  0008B4  6FB4               	movwf	main@motorL& (0+255),b
   589  0008B6                     
   590                           ; BSR set to: 0
   591                           ;main.c: 26:     motorL.direction=1;
   592  0008B6  0E01               	movlw	1
   593  0008B8  6FB5               	movwf	(main@motorL+1)& (0+255),b
   594  0008BA                     
   595                           ; BSR set to: 0
   596                           ;main.c: 27:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   597  0008BA  0EA3               	movlw	163
   598  0008BC  6FB6               	movwf	(main@motorL+2)& (0+255),b
   599  0008BE  0E0F               	movlw	15
   600  0008C0  6FB7               	movwf	(main@motorL+3)& (0+255),b
   601  0008C2                     
   602                           ; BSR set to: 0
   603                           ;main.c: 28:     motorL.dir_LAT=(unsigned char *)(&LATE);
   604  0008C2  0E7D               	movlw	125
   605  0008C4  6FB8               	movwf	(main@motorL+4)& (0+255),b
   606  0008C6  0E0F               	movlw	15
   607  0008C8  6FB9               	movwf	(main@motorL+5)& (0+255),b
   608  0008CA                     
   609                           ; BSR set to: 0
   610                           ;main.c: 29:     motorL.dir_pin=4;
   611  0008CA  0E04               	movlw	4
   612  0008CC  6FBA               	movwf	(main@motorL+6)& (0+255),b
   613  0008CE                     
   614                           ; BSR set to: 0
   615                           ;main.c: 30:     motorL.PWMperiod=PWMperiod;
   616  0008CE  0E00               	movlw	0
   617  0008D0  6FBC               	movwf	(main@motorL+8)& (0+255),b
   618  0008D2  0E63               	movlw	99
   619  0008D4  6FBB               	movwf	(main@motorL+7)& (0+255),b
   620  0008D6                     
   621                           ; BSR set to: 0
   622                           ;main.c: 33:     DC_motor motorR;;main.c: 34:     motorR.power=0;
   623  0008D6  0E00               	movlw	0
   624  0008D8  6FBD               	movwf	main@motorR& (0+255),b
   625  0008DA                     
   626                           ; BSR set to: 0
   627                           ;main.c: 35:     motorR.direction=1;
   628  0008DA  0E01               	movlw	1
   629  0008DC  6FBE               	movwf	(main@motorR+1)& (0+255),b
   630  0008DE                     
   631                           ; BSR set to: 0
   632                           ;main.c: 36:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   633  0008DE  0EA0               	movlw	160
   634  0008E0  6FBF               	movwf	(main@motorR+2)& (0+255),b
   635  0008E2  0E0F               	movlw	15
   636  0008E4  6FC0               	movwf	(main@motorR+3)& (0+255),b
   637  0008E6                     
   638                           ; BSR set to: 0
   639                           ;main.c: 37:     motorR.dir_LAT=(unsigned char *)(&LATG);
   640  0008E6  0E7F               	movlw	127
   641  0008E8  6FC1               	movwf	(main@motorR+4)& (0+255),b
   642  0008EA  0E0F               	movlw	15
   643  0008EC  6FC2               	movwf	(main@motorR+5)& (0+255),b
   644  0008EE                     
   645                           ; BSR set to: 0
   646                           ;main.c: 38:     motorR.dir_pin=6;
   647  0008EE  0E06               	movlw	6
   648  0008F0  6FC3               	movwf	(main@motorR+6)& (0+255),b
   649  0008F2                     
   650                           ; BSR set to: 0
   651                           ;main.c: 39:     motorR.PWMperiod=PWMperiod;
   652  0008F2  0E00               	movlw	0
   653  0008F4  6FC5               	movwf	(main@motorR+8)& (0+255),b
   654  0008F6  0E63               	movlw	99
   655  0008F8  6FC4               	movwf	(main@motorR+7)& (0+255),b
   656  0008FA                     l115:
   657  0008FA  A48E               	btfss	142,2,c	;volatile
   658  0008FC  EF82  F004         	goto	u3481
   659  000900  EF84  F004         	goto	u3480
   660  000904                     u3481:
   661  000904  EF8B  F004         	goto	l119
   662  000908                     u3480:
   663  000908  B68E               	btfsc	142,3,c	;volatile
   664  00090A  EF89  F004         	goto	u3491
   665  00090E  EF8B  F004         	goto	u3490
   666  000912                     u3491:
   667  000912  EF7D  F004         	goto	l115
   668  000916                     u3490:
   669  000916                     l119:
   670                           
   671                           ;main.c: 45:     LATDbits.LATD7 = 1;
   672  000916  8E7C               	bsf	124,7,c	;volatile
   673                           
   674                           ;main.c: 46:     LATHbits.LATH3 = 1;
   675  000918  8680               	bsf	128,3,c	;volatile
   676  00091A                     
   677                           ;main.c: 48:     RGB_val initial;;main.c: 49:     initial = colorclick_readColour(initia
      +                          l);
   678  00091A  EE20  F0A4         	lfsr	2,main@initial
   679  00091E  EE00  F010         	lfsr	0,colorclick_readColour@current
   680  000922  0E07               	movlw	7
   681  000924                     u3501:
   682  000924  CFDB FFEB          	movff	plusw2,plusw0
   683  000928  06E8               	decf	wreg,f,c
   684  00092A  E2FC               	bc	u3501
   685  00092C  ECAA  F00C         	call	_colorclick_readColour	;wreg free
   686  000930  EE20  F0A4         	lfsr	2,main@initial
   687  000934  0E07               	movlw	7
   688  000936                     u3511:
   689  000936  CFEB FFDB          	movff	plusw0,plusw2
   690  00093A  06E8               	decf	wreg,f,c
   691  00093C  E2FC               	bc	u3511
   692  00093E                     
   693                           ;main.c: 50:     _delay((unsigned long)((100)*(64000000/4000.0)));
   694  00093E  0E09               	movlw	9
   695  000940  6E3A               	movwf	(??_main+1)^0,c
   696  000942  0E1E               	movlw	30
   697  000944  6E39               	movwf	??_main^0,c
   698  000946  0EE4               	movlw	228
   699  000948                     u3767:
   700  000948  2EE8               	decfsz	wreg,f,c
   701  00094A  D7FE               	bra	u3767
   702  00094C  2E39               	decfsz	??_main^0,f,c
   703  00094E  D7FC               	bra	u3767
   704  000950  2E3A               	decfsz	(??_main+1)^0,f,c
   705  000952  D7FA               	bra	u3767
   706  000954  D000               	nop2	
   707  000956                     
   708                           ;main.c: 52:     LATDbits.LATD7 = 0;
   709  000956  9E7C               	bcf	124,7,c	;volatile
   710  000958                     
   711                           ;main.c: 53:     LATHbits.LATH3 = 0;
   712  000958  9680               	bcf	128,3,c	;volatile
   713  00095A                     l120:
   714  00095A  A48E               	btfss	142,2,c	;volatile
   715  00095C  EFB2  F004         	goto	u3521
   716  000960  EFB4  F004         	goto	u3520
   717  000964                     u3521:
   718  000964  EFBB  F004         	goto	l3147
   719  000968                     u3520:
   720  000968  B68E               	btfsc	142,3,c	;volatile
   721  00096A  EFB9  F004         	goto	u3531
   722  00096E  EFBB  F004         	goto	u3530
   723  000972                     u3531:
   724  000972  EFAD  F004         	goto	l120
   725  000976                     u3530:
   726  000976                     l3147:
   727                           
   728                           ;main.c: 59:     turnRight(&motorL, &motorR, 360);
   729  000976  0EB4               	movlw	low main@motorL
   730  000978  6E1E               	movwf	turnRight@mL^0,c
   731  00097A  0E00               	movlw	high main@motorL
   732  00097C  6E1F               	movwf	(turnRight@mL+1)^0,c
   733  00097E  0EBD               	movlw	low main@motorR
   734  000980  6E20               	movwf	turnRight@mR^0,c
   735  000982  0E00               	movlw	high main@motorR
   736  000984  6E21               	movwf	(turnRight@mR+1)^0,c
   737  000986  0E68               	movlw	104
   738  000988  6E22               	movwf	turnRight@deg^0,c
   739  00098A  ECFF  F005         	call	_turnRight	;wreg free
   740  00098E                     
   741                           ;main.c: 60:     motorL.power=0;
   742  00098E  0E00               	movlw	0
   743  000990  0100               	movlb	0	; () banked
   744  000992  6FB4               	movwf	main@motorL& (0+255),b
   745  000994                     
   746                           ; BSR set to: 0
   747                           ;main.c: 61:     motorR.power=0;
   748  000994  0E00               	movlw	0
   749  000996  6FBD               	movwf	main@motorR& (0+255),b
   750  000998                     l125:
   751  000998  A48E               	btfss	142,2,c	;volatile
   752  00099A  EFD1  F004         	goto	u3541
   753  00099E  EFD3  F004         	goto	u3540
   754  0009A2                     u3541:
   755  0009A2  EFDA  F004         	goto	l129
   756  0009A6                     u3540:
   757  0009A6  B68E               	btfsc	142,3,c	;volatile
   758  0009A8  EFD8  F004         	goto	u3551
   759  0009AC  EFDA  F004         	goto	u3550
   760  0009B0                     u3551:
   761  0009B0  EFCC  F004         	goto	l125
   762  0009B4                     u3550:
   763  0009B4                     l129:
   764                           
   765                           ;main.c: 64:     if (PORTFbits.RF2) {
   766  0009B4  A48E               	btfss	142,2,c	;volatile
   767  0009B6  EFDF  F004         	goto	u3561
   768  0009BA  EFE1  F004         	goto	u3560
   769  0009BE                     u3561:
   770  0009BE  EFF1  F004         	goto	l130
   771  0009C2                     u3560:
   772  0009C2                     
   773                           ;main.c: 65:         LATDbits.LATD7 = 1;
   774  0009C2  8E7C               	bsf	124,7,c	;volatile
   775  0009C4                     
   776                           ;main.c: 66:         _delay((unsigned long)((100)*(64000000/4000.0)));
   777  0009C4  0E09               	movlw	9
   778  0009C6  6E3A               	movwf	(??_main+1)^0,c
   779  0009C8  0E1E               	movlw	30
   780  0009CA  6E39               	movwf	??_main^0,c
   781  0009CC  0EE4               	movlw	228
   782  0009CE                     u3777:
   783  0009CE  2EE8               	decfsz	wreg,f,c
   784  0009D0  D7FE               	bra	u3777
   785  0009D2  2E39               	decfsz	??_main^0,f,c
   786  0009D4  D7FC               	bra	u3777
   787  0009D6  2E3A               	decfsz	(??_main+1)^0,f,c
   788  0009D8  D7FA               	bra	u3777
   789  0009DA  D000               	nop2	
   790  0009DC                     
   791                           ;main.c: 67:         LATDbits.LATD7 = 0;
   792  0009DC  9E7C               	bcf	124,7,c	;volatile
   793                           
   794                           ;main.c: 68:     } else if (PORTFbits.RF3) {
   795  0009DE  EF06  F005         	goto	l133
   796  0009E2                     l130:
   797  0009E2  A68E               	btfss	142,3,c	;volatile
   798  0009E4  EFF6  F004         	goto	u3571
   799  0009E8  EFF8  F004         	goto	u3570
   800  0009EC                     u3571:
   801  0009EC  EF06  F005         	goto	l133
   802  0009F0                     u3570:
   803  0009F0                     
   804                           ;main.c: 69:         LATHbits.LATH3 = 1;
   805  0009F0  8680               	bsf	128,3,c	;volatile
   806  0009F2                     
   807                           ;main.c: 70:         _delay((unsigned long)((100)*(64000000/4000.0)));
   808  0009F2  0E09               	movlw	9
   809  0009F4  6E3A               	movwf	(??_main+1)^0,c
   810  0009F6  0E1E               	movlw	30
   811  0009F8  6E39               	movwf	??_main^0,c
   812  0009FA  0EE4               	movlw	228
   813  0009FC                     u3787:
   814  0009FC  2EE8               	decfsz	wreg,f,c
   815  0009FE  D7FE               	bra	u3787
   816  000A00  2E39               	decfsz	??_main^0,f,c
   817  000A02  D7FC               	bra	u3787
   818  000A04  2E3A               	decfsz	(??_main+1)^0,f,c
   819  000A06  D7FA               	bra	u3787
   820  000A08  D000               	nop2	
   821  000A0A                     
   822                           ;main.c: 71:         LATHbits.LATH3 = 0;
   823  000A0A  9680               	bcf	128,3,c	;volatile
   824  000A0C                     l133:
   825  000A0C  A48E               	btfss	142,2,c	;volatile
   826  000A0E  EF0B  F005         	goto	u3581
   827  000A12  EF0D  F005         	goto	u3580
   828  000A16                     u3581:
   829  000A16  EF14  F005         	goto	l3169
   830  000A1A                     u3580:
   831  000A1A  B68E               	btfsc	142,3,c	;volatile
   832  000A1C  EF12  F005         	goto	u3591
   833  000A20  EF14  F005         	goto	u3590
   834  000A24                     u3591:
   835  000A24  EF06  F005         	goto	l133
   836  000A28                     u3590:
   837  000A28                     l3169:
   838                           
   839                           ;main.c: 75:     turnLeft(&motorL, &motorR, 360);
   840  000A28  0EB4               	movlw	low main@motorL
   841  000A2A  6E1E               	movwf	turnLeft@mL^0,c
   842  000A2C  0E00               	movlw	high main@motorL
   843  000A2E  6E1F               	movwf	(turnLeft@mL+1)^0,c
   844  000A30  0EBD               	movlw	low main@motorR
   845  000A32  6E20               	movwf	turnLeft@mR^0,c
   846  000A34  0E00               	movlw	high main@motorR
   847  000A36  6E21               	movwf	(turnLeft@mR+1)^0,c
   848  000A38  0E68               	movlw	104
   849  000A3A  6E22               	movwf	turnLeft@deg^0,c
   850  000A3C  ECF2  F006         	call	_turnLeft	;wreg free
   851  000A40                     
   852                           ;main.c: 76:     motorL.power=0;
   853  000A40  0E00               	movlw	0
   854  000A42  0100               	movlb	0	; () banked
   855  000A44  6FB4               	movwf	main@motorL& (0+255),b
   856  000A46                     
   857                           ; BSR set to: 0
   858                           ;main.c: 77:     motorR.power=0;
   859  000A46  0E00               	movlw	0
   860  000A48  6FBD               	movwf	main@motorR& (0+255),b
   861  000A4A                     l138:
   862  000A4A  A48E               	btfss	142,2,c	;volatile
   863  000A4C  EF2A  F005         	goto	u3601
   864  000A50  EF2C  F005         	goto	u3600
   865  000A54                     u3601:
   866  000A54  EF33  F005         	goto	l142
   867  000A58                     u3600:
   868  000A58  B68E               	btfsc	142,3,c	;volatile
   869  000A5A  EF31  F005         	goto	u3611
   870  000A5E  EF33  F005         	goto	u3610
   871  000A62                     u3611:
   872  000A62  EF25  F005         	goto	l138
   873  000A66                     u3610:
   874  000A66                     l142:
   875                           
   876                           ;main.c: 80:     if (PORTFbits.RF2) {
   877  000A66  A48E               	btfss	142,2,c	;volatile
   878  000A68  EF38  F005         	goto	u3621
   879  000A6C  EF3A  F005         	goto	u3620
   880  000A70                     u3621:
   881  000A70  EF4A  F005         	goto	l143
   882  000A74                     u3620:
   883  000A74                     
   884                           ;main.c: 81:         LATDbits.LATD7 = 1;
   885  000A74  8E7C               	bsf	124,7,c	;volatile
   886  000A76                     
   887                           ;main.c: 82:         _delay((unsigned long)((100)*(64000000/4000.0)));
   888  000A76  0E09               	movlw	9
   889  000A78  6E3A               	movwf	(??_main+1)^0,c
   890  000A7A  0E1E               	movlw	30
   891  000A7C  6E39               	movwf	??_main^0,c
   892  000A7E  0EE4               	movlw	228
   893  000A80                     u3797:
   894  000A80  2EE8               	decfsz	wreg,f,c
   895  000A82  D7FE               	bra	u3797
   896  000A84  2E39               	decfsz	??_main^0,f,c
   897  000A86  D7FC               	bra	u3797
   898  000A88  2E3A               	decfsz	(??_main+1)^0,f,c
   899  000A8A  D7FA               	bra	u3797
   900  000A8C  D000               	nop2	
   901  000A8E                     
   902                           ;main.c: 83:         LATDbits.LATD7 = 0;
   903  000A8E  9E7C               	bcf	124,7,c	;volatile
   904                           
   905                           ;main.c: 84:     } else if (PORTFbits.RF3) {
   906  000A90  EF5F  F005         	goto	l146
   907  000A94                     l143:
   908  000A94  A68E               	btfss	142,3,c	;volatile
   909  000A96  EF4F  F005         	goto	u3631
   910  000A9A  EF51  F005         	goto	u3630
   911  000A9E                     u3631:
   912  000A9E  EF5F  F005         	goto	l146
   913  000AA2                     u3630:
   914  000AA2                     
   915                           ;main.c: 85:         LATHbits.LATH3 = 1;
   916  000AA2  8680               	bsf	128,3,c	;volatile
   917  000AA4                     
   918                           ;main.c: 86:         _delay((unsigned long)((100)*(64000000/4000.0)));
   919  000AA4  0E09               	movlw	9
   920  000AA6  6E3A               	movwf	(??_main+1)^0,c
   921  000AA8  0E1E               	movlw	30
   922  000AAA  6E39               	movwf	??_main^0,c
   923  000AAC  0EE4               	movlw	228
   924  000AAE                     u3807:
   925  000AAE  2EE8               	decfsz	wreg,f,c
   926  000AB0  D7FE               	bra	u3807
   927  000AB2  2E39               	decfsz	??_main^0,f,c
   928  000AB4  D7FC               	bra	u3807
   929  000AB6  2E3A               	decfsz	(??_main+1)^0,f,c
   930  000AB8  D7FA               	bra	u3807
   931  000ABA  D000               	nop2	
   932  000ABC                     
   933                           ;main.c: 87:         LATHbits.LATH3 = 0;
   934  000ABC  9680               	bcf	128,3,c	;volatile
   935  000ABE                     l146:
   936  000ABE  A48E               	btfss	142,2,c	;volatile
   937  000AC0  EF64  F005         	goto	u3641
   938  000AC4  EF66  F005         	goto	u3640
   939  000AC8                     u3641:
   940  000AC8  EF6D  F005         	goto	l150
   941  000ACC                     u3640:
   942  000ACC  B68E               	btfsc	142,3,c	;volatile
   943  000ACE  EF6B  F005         	goto	u3651
   944  000AD2  EF6D  F005         	goto	u3650
   945  000AD6                     u3651:
   946  000AD6  EF5F  F005         	goto	l146
   947  000ADA                     u3650:
   948  000ADA                     l150:
   949                           
   950                           ;main.c: 91:     LATDbits.LATD3 = 1;
   951  000ADA  867C               	bsf	124,3,c	;volatile
   952  000ADC                     
   953                           ;main.c: 92:     colorclick_toggleClearLED(1);
   954  000ADC  0E01               	movlw	1
   955  000ADE  EC90  F00D         	call	_colorclick_toggleClearLED
   956  000AE2                     
   957                           ;main.c: 93:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   958  000AE2  0E52               	movlw	82
   959  000AE4  6E3A               	movwf	(??_main+1)^0,c
   960  000AE6  0E2B               	movlw	43
   961  000AE8  6E39               	movwf	??_main^0,c
   962  000AEA  0E00               	movlw	0
   963  000AEC                     u3817:
   964  000AEC  2EE8               	decfsz	wreg,f,c
   965  000AEE  D7FE               	bra	u3817
   966  000AF0  2E39               	decfsz	??_main^0,f,c
   967  000AF2  D7FC               	bra	u3817
   968  000AF4  2E3A               	decfsz	(??_main+1)^0,f,c
   969  000AF6  D7FA               	bra	u3817
   970  000AF8  D000               	nop2	
   971  000AFA                     
   972                           ;main.c: 94:     forward(&motorL, &motorR);
   973  000AFA  0EB4               	movlw	low main@motorL
   974  000AFC  6E1E               	movwf	forward@mL^0,c
   975  000AFE  0E00               	movlw	high main@motorL
   976  000B00  6E1F               	movwf	(forward@mL+1)^0,c
   977  000B02  0EBD               	movlw	low main@motorR
   978  000B04  6E20               	movwf	forward@mR^0,c
   979  000B06  0E00               	movlw	high main@motorR
   980  000B08  6E21               	movwf	(forward@mR+1)^0,c
   981  000B0A  ECDA  F00A         	call	_forward	;wreg free
   982  000B0E                     l3197:
   983                           
   984                           ;main.c: 117:         current = colorclick_readColour(current);
   985  000B0E  EE20  F0AC         	lfsr	2,main@current
   986  000B12  EE00  F010         	lfsr	0,colorclick_readColour@current
   987  000B16  0E07               	movlw	7
   988  000B18                     u3661:
   989  000B18  CFDB FFEB          	movff	plusw2,plusw0
   990  000B1C  06E8               	decf	wreg,f,c
   991  000B1E  E2FC               	bc	u3661
   992  000B20  ECAA  F00C         	call	_colorclick_readColour	;wreg free
   993  000B24  EE20  F0AC         	lfsr	2,main@current
   994  000B28  0E07               	movlw	7
   995  000B2A                     u3671:
   996  000B2A  CFEB FFDB          	movff	plusw0,plusw2
   997  000B2E  06E8               	decf	wreg,f,c
   998  000B30  E2FC               	bc	u3671
   999  000B32                     
  1000                           ;main.c: 118:         read_card(initial, current, &motorL, &motorR);
  1001  000B32  EE20  F0A4         	lfsr	2,main@initial
  1002  000B36  EE00  F025         	lfsr	0,read_card@initial
  1003  000B3A  0E07               	movlw	7
  1004  000B3C                     u3681:
  1005  000B3C  CFDB FFEB          	movff	plusw2,plusw0
  1006  000B40  06E8               	decf	wreg,f,c
  1007  000B42  E2FC               	bc	u3681
  1008  000B44  EE20  F0AC         	lfsr	2,main@current
  1009  000B48  EE00  F02D         	lfsr	0,read_card@current
  1010  000B4C  0E07               	movlw	7
  1011  000B4E                     u3691:
  1012  000B4E  CFDB FFEB          	movff	plusw2,plusw0
  1013  000B52  06E8               	decf	wreg,f,c
  1014  000B54  E2FC               	bc	u3691
  1015  000B56  0EB4               	movlw	low main@motorL
  1016  000B58  6E35               	movwf	read_card@mL^0,c
  1017  000B5A  0E00               	movlw	high main@motorL
  1018  000B5C  6E36               	movwf	(read_card@mL+1)^0,c
  1019  000B5E  0EBD               	movlw	low main@motorR
  1020  000B60  6E37               	movwf	read_card@mR^0,c
  1021  000B62  0E00               	movlw	high main@motorR
  1022  000B64  6E38               	movwf	(read_card@mR+1)^0,c
  1023  000B66  EC15  F000         	call	_read_card	;wreg free
  1024  000B6A                     
  1025                           ;main.c: 120:         if (card_flag==1) {
  1026  000B6A  0100               	movlb	0	; () banked
  1027  000B6C  059D               	decf	_card_flag& (0+255),w,b	;volatile
  1028  000B6E  A4D8               	btfss	status,2,c
  1029  000B70  EFBC  F005         	goto	u3701
  1030  000B74  EFBE  F005         	goto	u3700
  1031  000B78                     u3701:
  1032  000B78  EFEF  F005         	goto	l3209
  1033  000B7C                     u3700:
  1034  000B7C                     
  1035                           ; BSR set to: 0
  1036                           ;main.c: 121:             current = colorclick_readColour(current);
  1037  000B7C  EE20  F0AC         	lfsr	2,main@current
  1038  000B80  EE00  F010         	lfsr	0,colorclick_readColour@current
  1039  000B84  0E07               	movlw	7
  1040  000B86                     u3711:
  1041  000B86  CFDB FFEB          	movff	plusw2,plusw0
  1042  000B8A  06E8               	decf	wreg,f,c
  1043  000B8C  E2FC               	bc	u3711
  1044  000B8E  ECAA  F00C         	call	_colorclick_readColour	;wreg free
  1045  000B92  EE20  F0AC         	lfsr	2,main@current
  1046  000B96  0E07               	movlw	7
  1047  000B98                     u3721:
  1048  000B98  CFEB FFDB          	movff	plusw0,plusw2
  1049  000B9C  06E8               	decf	wreg,f,c
  1050  000B9E  E2FC               	bc	u3721
  1051  000BA0                     
  1052                           ;main.c: 122:             read_card(initial, current, &motorL, &motorR);
  1053  000BA0  EE20  F0A4         	lfsr	2,main@initial
  1054  000BA4  EE00  F025         	lfsr	0,read_card@initial
  1055  000BA8  0E07               	movlw	7
  1056  000BAA                     u3731:
  1057  000BAA  CFDB FFEB          	movff	plusw2,plusw0
  1058  000BAE  06E8               	decf	wreg,f,c
  1059  000BB0  E2FC               	bc	u3731
  1060  000BB2  EE20  F0AC         	lfsr	2,main@current
  1061  000BB6  EE00  F02D         	lfsr	0,read_card@current
  1062  000BBA  0E07               	movlw	7
  1063  000BBC                     u3741:
  1064  000BBC  CFDB FFEB          	movff	plusw2,plusw0
  1065  000BC0  06E8               	decf	wreg,f,c
  1066  000BC2  E2FC               	bc	u3741
  1067  000BC4  0EB4               	movlw	low main@motorL
  1068  000BC6  6E35               	movwf	read_card@mL^0,c
  1069  000BC8  0E00               	movlw	high main@motorL
  1070  000BCA  6E36               	movwf	(read_card@mL+1)^0,c
  1071  000BCC  0EBD               	movlw	low main@motorR
  1072  000BCE  6E37               	movwf	read_card@mR^0,c
  1073  000BD0  0E00               	movlw	high main@motorR
  1074  000BD2  6E38               	movwf	(read_card@mR+1)^0,c
  1075  000BD4  EC15  F000         	call	_read_card	;wreg free
  1076  000BD8                     
  1077                           ;main.c: 123:             card_flag = 0;
  1078  000BD8  0E00               	movlw	0
  1079  000BDA  0100               	movlb	0	; () banked
  1080  000BDC  6F9D               	movwf	_card_flag& (0+255),b	;volatile
  1081  000BDE                     l3209:
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;main.c: 126:         if (battery_flag==1) {
  1085  000BDE  059C               	decf	_battery_flag& (0+255),w,b	;volatile
  1086  000BE0  A4D8               	btfss	status,2,c
  1087  000BE2  EFF5  F005         	goto	u3751
  1088  000BE6  EFF7  F005         	goto	u3750
  1089  000BEA                     u3751:
  1090  000BEA  EF87  F005         	goto	l3197
  1091  000BEE                     u3750:
  1092  000BEE                     
  1093                           ; BSR set to: 0
  1094                           ;main.c: 127:             LATDbits.LATD7 = 1;
  1095  000BEE  8E7C               	bsf	124,7,c	;volatile
  1096                           
  1097                           ;main.c: 128:             LATHbits.LATH3 = 1;
  1098  000BF0  8680               	bsf	128,3,c	;volatile
  1099  000BF2                     
  1100                           ; BSR set to: 0
  1101                           ;main.c: 129:             battery_flag = 0;
  1102  000BF2  0E00               	movlw	0
  1103  000BF4  6F9C               	movwf	_battery_flag& (0+255),b	;volatile
  1104  000BF6  EF87  F005         	goto	l3197
  1105  000BFA  EF13  F000         	goto	start
  1106  000BFE                     __end_of_main:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _read_card *****************
  1110 ;; Defined at:
  1111 ;;		line 6 in file "color_card.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  initial         8   36[COMRAM] struct .
  1114 ;;  current         8   44[COMRAM] struct .
  1115 ;;  mL              2   52[COMRAM] PTR struct .
  1116 ;;		 -> main@motorL(9), 
  1117 ;;  mR              2   54[COMRAM] PTR struct .
  1118 ;;		 -> main@motorR(9), 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  B_rel           2    4[BANK0 ] unsigned int 
  1121 ;;  G_rel           2    2[BANK0 ] unsigned int 
  1122 ;;  R_rel           2    0[BANK0 ] unsigned int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1132 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;      Totals:        20       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1136 ;;Total ram usage:       26 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 8
  1139 ;; This function calls:
  1140 ;;		___flge
  1141 ;;		___lwdiv
  1142 ;;		___xxtofl
  1143 ;;		_reverse
  1144 ;;		_stop
  1145 ;;		_turnLeft
  1146 ;;		_turnRight
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text1
  1153  00002A                     __ptext1:
  1154                           	callstack 0
  1155  00002A                     _read_card:
  1156                           	callstack 22
  1157  00002A                     
  1158                           ;color_card.c: 8:     unsigned int R_rel = current.R/current.C;
  1159  00002A  C02D  F005         	movff	read_card@current,___lwdiv@dividend
  1160  00002E  C02E  F006         	movff	read_card@current+1,___lwdiv@dividend+1
  1161  000032  C033  F007         	movff	read_card@current+6,___lwdiv@divisor
  1162  000036  C034  F008         	movff	read_card@current+7,___lwdiv@divisor+1
  1163  00003A  EC72  F00B         	call	___lwdiv	;wreg free
  1164  00003E  C005  F09E         	movff	?___lwdiv,read_card@R_rel
  1165  000042  C006  F09F         	movff	?___lwdiv+1,read_card@R_rel+1
  1166                           
  1167                           ;color_card.c: 9:     unsigned int G_rel = current.G/current.C;
  1168  000046  C02F  F005         	movff	read_card@current+2,___lwdiv@dividend
  1169  00004A  C030  F006         	movff	read_card@current+3,___lwdiv@dividend+1
  1170  00004E  C033  F007         	movff	read_card@current+6,___lwdiv@divisor
  1171  000052  C034  F008         	movff	read_card@current+7,___lwdiv@divisor+1
  1172  000056  EC72  F00B         	call	___lwdiv	;wreg free
  1173  00005A  C005  F0A0         	movff	?___lwdiv,read_card@G_rel
  1174  00005E  C006  F0A1         	movff	?___lwdiv+1,read_card@G_rel+1
  1175                           
  1176                           ;color_card.c: 10:     unsigned int B_rel = current.B/current.C;
  1177  000062  C031  F005         	movff	read_card@current+4,___lwdiv@dividend
  1178  000066  C032  F006         	movff	read_card@current+5,___lwdiv@dividend+1
  1179  00006A  C033  F007         	movff	read_card@current+6,___lwdiv@divisor
  1180  00006E  C034  F008         	movff	read_card@current+7,___lwdiv@divisor+1
  1181  000072  EC72  F00B         	call	___lwdiv	;wreg free
  1182  000076  C005  F0A2         	movff	?___lwdiv,read_card@B_rel
  1183  00007A  C006  F0A3         	movff	?___lwdiv+1,read_card@B_rel+1
  1184                           
  1185                           ;color_card.c: 12:     if ((R_rel>0.54) && (G_rel<0.245) && (B_rel<0.18)) {
  1186  00007E  0E71               	movlw	113
  1187  000080  6E13               	movwf	___flge@ff1^0,c
  1188  000082  0E3D               	movlw	61
  1189  000084  6E14               	movwf	(___flge@ff1+1)^0,c
  1190  000086  0E0A               	movlw	10
  1191  000088  6E15               	movwf	(___flge@ff1+2)^0,c
  1192  00008A  0E3F               	movlw	63
  1193  00008C  6E16               	movwf	(___flge@ff1+3)^0,c
  1194  00008E  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1195  000092  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1196  000096  6A07               	clrf	(___xxtofl@val+2)^0,c
  1197  000098  6A08               	clrf	(___xxtofl@val+3)^0,c
  1198  00009A  0E00               	movlw	0
  1199  00009C  ECCF  F008         	call	___xxtofl
  1200  0000A0  C005  F017         	movff	?___xxtofl,___flge@ff2
  1201  0000A4  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1202  0000A8  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1203  0000AC  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1204  0000B0  ECA9  F009         	call	___flge	;wreg free
  1205  0000B4  B0D8               	btfsc	status,0,c
  1206  0000B6  EF5F  F000         	goto	u3241
  1207  0000BA  EF61  F000         	goto	u3240
  1208  0000BE                     u3241:
  1209  0000BE  EFBD  F000         	goto	l3037
  1210  0000C2                     u3240:
  1211  0000C2  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1212  0000C6  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1213  0000CA  6A07               	clrf	(___xxtofl@val+2)^0,c
  1214  0000CC  6A08               	clrf	(___xxtofl@val+3)^0,c
  1215  0000CE  0E00               	movlw	0
  1216  0000D0  ECCF  F008         	call	___xxtofl
  1217  0000D4  C005  F013         	movff	?___xxtofl,___flge@ff1
  1218  0000D8  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1219  0000DC  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1220  0000E0  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1221  0000E4  0E48               	movlw	72
  1222  0000E6  6E17               	movwf	___flge@ff2^0,c
  1223  0000E8  0EE1               	movlw	225
  1224  0000EA  6E18               	movwf	(___flge@ff2+1)^0,c
  1225  0000EC  0E7A               	movlw	122
  1226  0000EE  6E19               	movwf	(___flge@ff2+2)^0,c
  1227  0000F0  0E3E               	movlw	62
  1228  0000F2  6E1A               	movwf	(___flge@ff2+3)^0,c
  1229  0000F4  ECA9  F009         	call	___flge	;wreg free
  1230  0000F8  B0D8               	btfsc	status,0,c
  1231  0000FA  EF81  F000         	goto	u3251
  1232  0000FE  EF83  F000         	goto	u3250
  1233  000102                     u3251:
  1234  000102  EFBD  F000         	goto	l3037
  1235  000106                     u3250:
  1236  000106  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1237  00010A  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1238  00010E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1239  000110  6A08               	clrf	(___xxtofl@val+3)^0,c
  1240  000112  0E00               	movlw	0
  1241  000114  ECCF  F008         	call	___xxtofl
  1242  000118  C005  F013         	movff	?___xxtofl,___flge@ff1
  1243  00011C  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1244  000120  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1245  000124  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1246  000128  0EEC               	movlw	236
  1247  00012A  6E17               	movwf	___flge@ff2^0,c
  1248  00012C  0E51               	movlw	81
  1249  00012E  6E18               	movwf	(___flge@ff2+1)^0,c
  1250  000130  0E38               	movlw	56
  1251  000132  6E19               	movwf	(___flge@ff2+2)^0,c
  1252  000134  0E3E               	movlw	62
  1253  000136  6E1A               	movwf	(___flge@ff2+3)^0,c
  1254  000138  ECA9  F009         	call	___flge	;wreg free
  1255  00013C  B0D8               	btfsc	status,0,c
  1256  00013E  EFA3  F000         	goto	u3261
  1257  000142  EFA5  F000         	goto	u3260
  1258  000146                     u3261:
  1259  000146  EFBD  F000         	goto	l3037
  1260  00014A                     u3260:
  1261  00014A                     
  1262                           ;color_card.c: 14:         turnRight(mL, mR, 90);
  1263  00014A  C035  F01E         	movff	read_card@mL,turnRight@mL
  1264  00014E  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1265  000152  C037  F020         	movff	read_card@mR,turnRight@mR
  1266  000156  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1267  00015A  0E5A               	movlw	90
  1268  00015C  6E22               	movwf	turnRight@deg^0,c
  1269  00015E  ECFF  F005         	call	_turnRight	;wreg free
  1270                           
  1271                           ;color_card.c: 15:         stop(mL, mR);
  1272  000162  C035  F01E         	movff	read_card@mL,stop@mL
  1273  000166  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1274  00016A  C037  F020         	movff	read_card@mR,stop@mR
  1275  00016E  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1276  000172  EC27  F00B         	call	_stop	;wreg free
  1277                           
  1278                           ;color_card.c: 17:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
  1279  000176  EF45  F004         	goto	l537
  1280  00017A                     l3037:
  1281  00017A  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1282  00017E  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1283  000182  6A07               	clrf	(___xxtofl@val+2)^0,c
  1284  000184  6A08               	clrf	(___xxtofl@val+3)^0,c
  1285  000186  0E00               	movlw	0
  1286  000188  ECCF  F008         	call	___xxtofl
  1287  00018C  C005  F013         	movff	?___xxtofl,___flge@ff1
  1288  000190  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1289  000194  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1290  000198  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1291  00019C  0E52               	movlw	82
  1292  00019E  6E17               	movwf	___flge@ff2^0,c
  1293  0001A0  0EB8               	movlw	184
  1294  0001A2  6E18               	movwf	(___flge@ff2+1)^0,c
  1295  0001A4  0EDE               	movlw	222
  1296  0001A6  6E19               	movwf	(___flge@ff2+2)^0,c
  1297  0001A8  0E3E               	movlw	62
  1298  0001AA  6E1A               	movwf	(___flge@ff2+3)^0,c
  1299  0001AC  ECA9  F009         	call	___flge	;wreg free
  1300  0001B0  B0D8               	btfsc	status,0,c
  1301  0001B2  EFDD  F000         	goto	u3271
  1302  0001B6  EFDF  F000         	goto	u3270
  1303  0001BA                     u3271:
  1304  0001BA  EF3B  F001         	goto	l3045
  1305  0001BE                     u3270:
  1306  0001BE  0E52               	movlw	82
  1307  0001C0  6E13               	movwf	___flge@ff1^0,c
  1308  0001C2  0EB8               	movlw	184
  1309  0001C4  6E14               	movwf	(___flge@ff1+1)^0,c
  1310  0001C6  0E9E               	movlw	158
  1311  0001C8  6E15               	movwf	(___flge@ff1+2)^0,c
  1312  0001CA  0E3E               	movlw	62
  1313  0001CC  6E16               	movwf	(___flge@ff1+3)^0,c
  1314  0001CE  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1315  0001D2  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1316  0001D6  6A07               	clrf	(___xxtofl@val+2)^0,c
  1317  0001D8  6A08               	clrf	(___xxtofl@val+3)^0,c
  1318  0001DA  0E00               	movlw	0
  1319  0001DC  ECCF  F008         	call	___xxtofl
  1320  0001E0  C005  F017         	movff	?___xxtofl,___flge@ff2
  1321  0001E4  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1322  0001E8  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1323  0001EC  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1324  0001F0  ECA9  F009         	call	___flge	;wreg free
  1325  0001F4  B0D8               	btfsc	status,0,c
  1326  0001F6  EFFF  F000         	goto	u3281
  1327  0001FA  EF01  F001         	goto	u3280
  1328  0001FE                     u3281:
  1329  0001FE  EF3B  F001         	goto	l3045
  1330  000202                     u3280:
  1331  000202  0E14               	movlw	20
  1332  000204  6E13               	movwf	___flge@ff1^0,c
  1333  000206  0EAE               	movlw	174
  1334  000208  6E14               	movwf	(___flge@ff1+1)^0,c
  1335  00020A  0E47               	movlw	71
  1336  00020C  6E15               	movwf	(___flge@ff1+2)^0,c
  1337  00020E  0E3E               	movlw	62
  1338  000210  6E16               	movwf	(___flge@ff1+3)^0,c
  1339  000212  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1340  000216  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1341  00021A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1342  00021C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1343  00021E  0E00               	movlw	0
  1344  000220  ECCF  F008         	call	___xxtofl
  1345  000224  C005  F017         	movff	?___xxtofl,___flge@ff2
  1346  000228  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1347  00022C  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1348  000230  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1349  000234  ECA9  F009         	call	___flge	;wreg free
  1350  000238  B0D8               	btfsc	status,0,c
  1351  00023A  EF21  F001         	goto	u3291
  1352  00023E  EF23  F001         	goto	u3290
  1353  000242                     u3291:
  1354  000242  EF3B  F001         	goto	l3045
  1355  000246                     u3290:
  1356  000246                     
  1357                           ;color_card.c: 19:         turnLeft(mL, mR, 90);
  1358  000246  C035  F01E         	movff	read_card@mL,turnLeft@mL
  1359  00024A  C036  F01F         	movff	read_card@mL+1,turnLeft@mL+1
  1360  00024E  C037  F020         	movff	read_card@mR,turnLeft@mR
  1361  000252  C038  F021         	movff	read_card@mR+1,turnLeft@mR+1
  1362  000256  0E5A               	movlw	90
  1363  000258  6E22               	movwf	turnLeft@deg^0,c
  1364  00025A  ECF2  F006         	call	_turnLeft	;wreg free
  1365                           
  1366                           ;color_card.c: 20:         stop(mL, mR);
  1367  00025E  C035  F01E         	movff	read_card@mL,stop@mL
  1368  000262  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1369  000266  C037  F020         	movff	read_card@mR,stop@mR
  1370  00026A  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1371  00026E  EC27  F00B         	call	_stop	;wreg free
  1372                           
  1373                           ;color_card.c: 22:     } else if ((R_rel<0.43) && (G_rel>0.30) && (B_rel>0.21)) {
  1374  000272  EF45  F004         	goto	l537
  1375  000276                     l3045:
  1376  000276  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1377  00027A  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1378  00027E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1379  000280  6A08               	clrf	(___xxtofl@val+3)^0,c
  1380  000282  0E00               	movlw	0
  1381  000284  ECCF  F008         	call	___xxtofl
  1382  000288  C005  F013         	movff	?___xxtofl,___flge@ff1
  1383  00028C  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1384  000290  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1385  000294  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1386  000298  0EF6               	movlw	246
  1387  00029A  6E17               	movwf	___flge@ff2^0,c
  1388  00029C  0E28               	movlw	40
  1389  00029E  6E18               	movwf	(___flge@ff2+1)^0,c
  1390  0002A0  0EDC               	movlw	220
  1391  0002A2  6E19               	movwf	(___flge@ff2+2)^0,c
  1392  0002A4  0E3E               	movlw	62
  1393  0002A6  6E1A               	movwf	(___flge@ff2+3)^0,c
  1394  0002A8  ECA9  F009         	call	___flge	;wreg free
  1395  0002AC  B0D8               	btfsc	status,0,c
  1396  0002AE  EF5B  F001         	goto	u3301
  1397  0002B2  EF5D  F001         	goto	u3300
  1398  0002B6                     u3301:
  1399  0002B6  EFB9  F001         	goto	l3053
  1400  0002BA                     u3300:
  1401  0002BA  0E9A               	movlw	154
  1402  0002BC  6E13               	movwf	___flge@ff1^0,c
  1403  0002BE  0E99               	movlw	153
  1404  0002C0  6E14               	movwf	(___flge@ff1+1)^0,c
  1405  0002C2  0E99               	movlw	153
  1406  0002C4  6E15               	movwf	(___flge@ff1+2)^0,c
  1407  0002C6  0E3E               	movlw	62
  1408  0002C8  6E16               	movwf	(___flge@ff1+3)^0,c
  1409  0002CA  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1410  0002CE  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1411  0002D2  6A07               	clrf	(___xxtofl@val+2)^0,c
  1412  0002D4  6A08               	clrf	(___xxtofl@val+3)^0,c
  1413  0002D6  0E00               	movlw	0
  1414  0002D8  ECCF  F008         	call	___xxtofl
  1415  0002DC  C005  F017         	movff	?___xxtofl,___flge@ff2
  1416  0002E0  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1417  0002E4  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1418  0002E8  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1419  0002EC  ECA9  F009         	call	___flge	;wreg free
  1420  0002F0  B0D8               	btfsc	status,0,c
  1421  0002F2  EF7D  F001         	goto	u3311
  1422  0002F6  EF7F  F001         	goto	u3310
  1423  0002FA                     u3311:
  1424  0002FA  EFB9  F001         	goto	l3053
  1425  0002FE                     u3310:
  1426  0002FE  0E3D               	movlw	61
  1427  000300  6E13               	movwf	___flge@ff1^0,c
  1428  000302  0E0A               	movlw	10
  1429  000304  6E14               	movwf	(___flge@ff1+1)^0,c
  1430  000306  0E57               	movlw	87
  1431  000308  6E15               	movwf	(___flge@ff1+2)^0,c
  1432  00030A  0E3E               	movlw	62
  1433  00030C  6E16               	movwf	(___flge@ff1+3)^0,c
  1434  00030E  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1435  000312  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1436  000316  6A07               	clrf	(___xxtofl@val+2)^0,c
  1437  000318  6A08               	clrf	(___xxtofl@val+3)^0,c
  1438  00031A  0E00               	movlw	0
  1439  00031C  ECCF  F008         	call	___xxtofl
  1440  000320  C005  F017         	movff	?___xxtofl,___flge@ff2
  1441  000324  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1442  000328  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1443  00032C  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1444  000330  ECA9  F009         	call	___flge	;wreg free
  1445  000334  B0D8               	btfsc	status,0,c
  1446  000336  EF9F  F001         	goto	u3321
  1447  00033A  EFA1  F001         	goto	u3320
  1448  00033E                     u3321:
  1449  00033E  EFB9  F001         	goto	l3053
  1450  000342                     u3320:
  1451  000342                     l3051:
  1452                           
  1453                           ;color_card.c: 24:         turnRight(mL, mR, 180);
  1454  000342  C035  F01E         	movff	read_card@mL,turnRight@mL
  1455  000346  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1456  00034A  C037  F020         	movff	read_card@mR,turnRight@mR
  1457  00034E  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1458  000352  0EB4               	movlw	180
  1459  000354  6E22               	movwf	turnRight@deg^0,c
  1460  000356  ECFF  F005         	call	_turnRight	;wreg free
  1461                           
  1462                           ;color_card.c: 25:         stop(mL, mR);
  1463  00035A  C035  F01E         	movff	read_card@mL,stop@mL
  1464  00035E  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1465  000362  C037  F020         	movff	read_card@mR,stop@mR
  1466  000366  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1467  00036A  EC27  F00B         	call	_stop	;wreg free
  1468                           
  1469                           ;color_card.c: 27:     } else if ((R_rel>0.49) && (G_rel>0.285) && (B_rel>0.18)) {
  1470  00036E  EF45  F004         	goto	l537
  1471  000372                     l3053:
  1472  000372  0E48               	movlw	72
  1473  000374  6E13               	movwf	___flge@ff1^0,c
  1474  000376  0EE1               	movlw	225
  1475  000378  6E14               	movwf	(___flge@ff1+1)^0,c
  1476  00037A  0EFA               	movlw	250
  1477  00037C  6E15               	movwf	(___flge@ff1+2)^0,c
  1478  00037E  0E3E               	movlw	62
  1479  000380  6E16               	movwf	(___flge@ff1+3)^0,c
  1480  000382  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1481  000386  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1482  00038A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1483  00038C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1484  00038E  0E00               	movlw	0
  1485  000390  ECCF  F008         	call	___xxtofl
  1486  000394  C005  F017         	movff	?___xxtofl,___flge@ff2
  1487  000398  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1488  00039C  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1489  0003A0  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1490  0003A4  ECA9  F009         	call	___flge	;wreg free
  1491  0003A8  B0D8               	btfsc	status,0,c
  1492  0003AA  EFD9  F001         	goto	u3331
  1493  0003AE  EFDB  F001         	goto	u3330
  1494  0003B2                     u3331:
  1495  0003B2  EF41  F002         	goto	l3061
  1496  0003B6                     u3330:
  1497  0003B6  0E85               	movlw	133
  1498  0003B8  6E13               	movwf	___flge@ff1^0,c
  1499  0003BA  0EEB               	movlw	235
  1500  0003BC  6E14               	movwf	(___flge@ff1+1)^0,c
  1501  0003BE  0E91               	movlw	145
  1502  0003C0  6E15               	movwf	(___flge@ff1+2)^0,c
  1503  0003C2  0E3E               	movlw	62
  1504  0003C4  6E16               	movwf	(___flge@ff1+3)^0,c
  1505  0003C6  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1506  0003CA  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1507  0003CE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1508  0003D0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1509  0003D2  0E00               	movlw	0
  1510  0003D4  ECCF  F008         	call	___xxtofl
  1511  0003D8  C005  F017         	movff	?___xxtofl,___flge@ff2
  1512  0003DC  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1513  0003E0  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1514  0003E4  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1515  0003E8  ECA9  F009         	call	___flge	;wreg free
  1516  0003EC  B0D8               	btfsc	status,0,c
  1517  0003EE  EFFB  F001         	goto	u3341
  1518  0003F2  EFFD  F001         	goto	u3340
  1519  0003F6                     u3341:
  1520  0003F6  EF41  F002         	goto	l3061
  1521  0003FA                     u3340:
  1522  0003FA  0EEC               	movlw	236
  1523  0003FC  6E13               	movwf	___flge@ff1^0,c
  1524  0003FE  0E51               	movlw	81
  1525  000400  6E14               	movwf	(___flge@ff1+1)^0,c
  1526  000402  0E38               	movlw	56
  1527  000404  6E15               	movwf	(___flge@ff1+2)^0,c
  1528  000406  0E3E               	movlw	62
  1529  000408  6E16               	movwf	(___flge@ff1+3)^0,c
  1530  00040A  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1531  00040E  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1532  000412  6A07               	clrf	(___xxtofl@val+2)^0,c
  1533  000414  6A08               	clrf	(___xxtofl@val+3)^0,c
  1534  000416  0E00               	movlw	0
  1535  000418  ECCF  F008         	call	___xxtofl
  1536  00041C  C005  F017         	movff	?___xxtofl,___flge@ff2
  1537  000420  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1538  000424  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1539  000428  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1540  00042C  ECA9  F009         	call	___flge	;wreg free
  1541  000430  B0D8               	btfsc	status,0,c
  1542  000432  EF1D  F002         	goto	u3351
  1543  000436  EF1F  F002         	goto	u3350
  1544  00043A                     u3351:
  1545  00043A  EF41  F002         	goto	l3061
  1546  00043E                     u3350:
  1547  00043E                     
  1548                           ;color_card.c: 29:         reverse(mL, mR);
  1549  00043E  C035  F01E         	movff	read_card@mL,reverse@mL
  1550  000442  C036  F01F         	movff	read_card@mL+1,reverse@mL+1
  1551  000446  C037  F020         	movff	read_card@mR,reverse@mR
  1552  00044A  C038  F021         	movff	read_card@mR+1,reverse@mR+1
  1553  00044E  EC8D  F00A         	call	_reverse	;wreg free
  1554                           
  1555                           ;color_card.c: 30:         turnRight(mL, mR, 90);
  1556  000452  C035  F01E         	movff	read_card@mL,turnRight@mL
  1557  000456  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1558  00045A  C037  F020         	movff	read_card@mR,turnRight@mR
  1559  00045E  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1560  000462  0E5A               	movlw	90
  1561  000464  6E22               	movwf	turnRight@deg^0,c
  1562  000466  ECFF  F005         	call	_turnRight	;wreg free
  1563                           
  1564                           ;color_card.c: 31:         stop(mL, mR);
  1565  00046A  C035  F01E         	movff	read_card@mL,stop@mL
  1566  00046E  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1567  000472  C037  F020         	movff	read_card@mR,stop@mR
  1568  000476  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1569  00047A  EC27  F00B         	call	_stop	;wreg free
  1570                           
  1571                           ;color_card.c: 33:     } else if ((R_rel>0.49) && (G_rel<0.275) && (B_rel>0.195)) {
  1572  00047E  EF45  F004         	goto	l537
  1573  000482                     l3061:
  1574  000482  0E48               	movlw	72
  1575  000484  6E13               	movwf	___flge@ff1^0,c
  1576  000486  0EE1               	movlw	225
  1577  000488  6E14               	movwf	(___flge@ff1+1)^0,c
  1578  00048A  0EFA               	movlw	250
  1579  00048C  6E15               	movwf	(___flge@ff1+2)^0,c
  1580  00048E  0E3E               	movlw	62
  1581  000490  6E16               	movwf	(___flge@ff1+3)^0,c
  1582  000492  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1583  000496  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1584  00049A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1585  00049C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1586  00049E  0E00               	movlw	0
  1587  0004A0  ECCF  F008         	call	___xxtofl
  1588  0004A4  C005  F017         	movff	?___xxtofl,___flge@ff2
  1589  0004A8  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1590  0004AC  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1591  0004B0  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1592  0004B4  ECA9  F009         	call	___flge	;wreg free
  1593  0004B8  B0D8               	btfsc	status,0,c
  1594  0004BA  EF61  F002         	goto	u3361
  1595  0004BE  EF63  F002         	goto	u3360
  1596  0004C2                     u3361:
  1597  0004C2  EFC9  F002         	goto	l3069
  1598  0004C6                     u3360:
  1599  0004C6  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1600  0004CA  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1601  0004CE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1602  0004D0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1603  0004D2  0E00               	movlw	0
  1604  0004D4  ECCF  F008         	call	___xxtofl
  1605  0004D8  C005  F013         	movff	?___xxtofl,___flge@ff1
  1606  0004DC  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1607  0004E0  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1608  0004E4  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1609  0004E8  0ECD               	movlw	205
  1610  0004EA  6E17               	movwf	___flge@ff2^0,c
  1611  0004EC  0ECC               	movlw	204
  1612  0004EE  6E18               	movwf	(___flge@ff2+1)^0,c
  1613  0004F0  0E8C               	movlw	140
  1614  0004F2  6E19               	movwf	(___flge@ff2+2)^0,c
  1615  0004F4  0E3E               	movlw	62
  1616  0004F6  6E1A               	movwf	(___flge@ff2+3)^0,c
  1617  0004F8  ECA9  F009         	call	___flge	;wreg free
  1618  0004FC  B0D8               	btfsc	status,0,c
  1619  0004FE  EF83  F002         	goto	u3371
  1620  000502  EF85  F002         	goto	u3370
  1621  000506                     u3371:
  1622  000506  EFC9  F002         	goto	l3069
  1623  00050A                     u3370:
  1624  00050A  0E14               	movlw	20
  1625  00050C  6E13               	movwf	___flge@ff1^0,c
  1626  00050E  0EAE               	movlw	174
  1627  000510  6E14               	movwf	(___flge@ff1+1)^0,c
  1628  000512  0E47               	movlw	71
  1629  000514  6E15               	movwf	(___flge@ff1+2)^0,c
  1630  000516  0E3E               	movlw	62
  1631  000518  6E16               	movwf	(___flge@ff1+3)^0,c
  1632  00051A  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1633  00051E  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1634  000522  6A07               	clrf	(___xxtofl@val+2)^0,c
  1635  000524  6A08               	clrf	(___xxtofl@val+3)^0,c
  1636  000526  0E00               	movlw	0
  1637  000528  ECCF  F008         	call	___xxtofl
  1638  00052C  C005  F017         	movff	?___xxtofl,___flge@ff2
  1639  000530  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1640  000534  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1641  000538  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1642  00053C  ECA9  F009         	call	___flge	;wreg free
  1643  000540  B0D8               	btfsc	status,0,c
  1644  000542  EFA5  F002         	goto	u3381
  1645  000546  EFA7  F002         	goto	u3380
  1646  00054A                     u3381:
  1647  00054A  EFC9  F002         	goto	l3069
  1648  00054E                     u3380:
  1649  00054E                     
  1650                           ;color_card.c: 35:         reverse(mL, mR);
  1651  00054E  C035  F01E         	movff	read_card@mL,reverse@mL
  1652  000552  C036  F01F         	movff	read_card@mL+1,reverse@mL+1
  1653  000556  C037  F020         	movff	read_card@mR,reverse@mR
  1654  00055A  C038  F021         	movff	read_card@mR+1,reverse@mR+1
  1655  00055E  EC8D  F00A         	call	_reverse	;wreg free
  1656                           
  1657                           ;color_card.c: 36:         turnLeft(mL, mR, 90);
  1658  000562  C035  F01E         	movff	read_card@mL,turnLeft@mL
  1659  000566  C036  F01F         	movff	read_card@mL+1,turnLeft@mL+1
  1660  00056A  C037  F020         	movff	read_card@mR,turnLeft@mR
  1661  00056E  C038  F021         	movff	read_card@mR+1,turnLeft@mR+1
  1662  000572  0E5A               	movlw	90
  1663  000574  6E22               	movwf	turnLeft@deg^0,c
  1664  000576  ECF2  F006         	call	_turnLeft	;wreg free
  1665                           
  1666                           ;color_card.c: 37:         stop(mL, mR);
  1667  00057A  C035  F01E         	movff	read_card@mL,stop@mL
  1668  00057E  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1669  000582  C037  F020         	movff	read_card@mR,stop@mR
  1670  000586  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1671  00058A  EC27  F00B         	call	_stop	;wreg free
  1672                           
  1673                           ;color_card.c: 39:     } else if ((R_rel>0.54) && (G_rel<0.24) && (B_rel<0.18)) {
  1674  00058E  EF45  F004         	goto	l537
  1675  000592                     l3069:
  1676  000592  0E71               	movlw	113
  1677  000594  6E13               	movwf	___flge@ff1^0,c
  1678  000596  0E3D               	movlw	61
  1679  000598  6E14               	movwf	(___flge@ff1+1)^0,c
  1680  00059A  0E0A               	movlw	10
  1681  00059C  6E15               	movwf	(___flge@ff1+2)^0,c
  1682  00059E  0E3F               	movlw	63
  1683  0005A0  6E16               	movwf	(___flge@ff1+3)^0,c
  1684  0005A2  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1685  0005A6  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1686  0005AA  6A07               	clrf	(___xxtofl@val+2)^0,c
  1687  0005AC  6A08               	clrf	(___xxtofl@val+3)^0,c
  1688  0005AE  0E00               	movlw	0
  1689  0005B0  ECCF  F008         	call	___xxtofl
  1690  0005B4  C005  F017         	movff	?___xxtofl,___flge@ff2
  1691  0005B8  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1692  0005BC  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1693  0005C0  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1694  0005C4  ECA9  F009         	call	___flge	;wreg free
  1695  0005C8  B0D8               	btfsc	status,0,c
  1696  0005CA  EFE9  F002         	goto	u3391
  1697  0005CE  EFEB  F002         	goto	u3390
  1698  0005D2                     u3391:
  1699  0005D2  EF47  F003         	goto	l3077
  1700  0005D6                     u3390:
  1701  0005D6  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1702  0005DA  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1703  0005DE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1704  0005E0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1705  0005E2  0E00               	movlw	0
  1706  0005E4  ECCF  F008         	call	___xxtofl
  1707  0005E8  C005  F013         	movff	?___xxtofl,___flge@ff1
  1708  0005EC  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1709  0005F0  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1710  0005F4  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1711  0005F8  0E8F               	movlw	143
  1712  0005FA  6E17               	movwf	___flge@ff2^0,c
  1713  0005FC  0EC2               	movlw	194
  1714  0005FE  6E18               	movwf	(___flge@ff2+1)^0,c
  1715  000600  0E75               	movlw	117
  1716  000602  6E19               	movwf	(___flge@ff2+2)^0,c
  1717  000604  0E3E               	movlw	62
  1718  000606  6E1A               	movwf	(___flge@ff2+3)^0,c
  1719  000608  ECA9  F009         	call	___flge	;wreg free
  1720  00060C  B0D8               	btfsc	status,0,c
  1721  00060E  EF0B  F003         	goto	u3401
  1722  000612  EF0D  F003         	goto	u3400
  1723  000616                     u3401:
  1724  000616  EF47  F003         	goto	l3077
  1725  00061A                     u3400:
  1726  00061A  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1727  00061E  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1728  000622  6A07               	clrf	(___xxtofl@val+2)^0,c
  1729  000624  6A08               	clrf	(___xxtofl@val+3)^0,c
  1730  000626  0E00               	movlw	0
  1731  000628  ECCF  F008         	call	___xxtofl
  1732  00062C  C005  F013         	movff	?___xxtofl,___flge@ff1
  1733  000630  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1734  000634  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1735  000638  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1736  00063C  0EEC               	movlw	236
  1737  00063E  6E17               	movwf	___flge@ff2^0,c
  1738  000640  0E51               	movlw	81
  1739  000642  6E18               	movwf	(___flge@ff2+1)^0,c
  1740  000644  0E38               	movlw	56
  1741  000646  6E19               	movwf	(___flge@ff2+2)^0,c
  1742  000648  0E3E               	movlw	62
  1743  00064A  6E1A               	movwf	(___flge@ff2+3)^0,c
  1744  00064C  ECA9  F009         	call	___flge	;wreg free
  1745  000650  B0D8               	btfsc	status,0,c
  1746  000652  EF2D  F003         	goto	u3411
  1747  000656  EF2F  F003         	goto	u3410
  1748  00065A                     u3411:
  1749  00065A  EF47  F003         	goto	l3077
  1750  00065E                     u3410:
  1751  00065E                     
  1752                           ;color_card.c: 41:         turnRight(mL, mR, 135);
  1753  00065E  C035  F01E         	movff	read_card@mL,turnRight@mL
  1754  000662  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1755  000666  C037  F020         	movff	read_card@mR,turnRight@mR
  1756  00066A  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1757  00066E  0E87               	movlw	135
  1758  000670  6E22               	movwf	turnRight@deg^0,c
  1759  000672  ECFF  F005         	call	_turnRight	;wreg free
  1760                           
  1761                           ;color_card.c: 42:         stop(mL, mR);
  1762  000676  C035  F01E         	movff	read_card@mL,stop@mL
  1763  00067A  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1764  00067E  C037  F020         	movff	read_card@mR,stop@mR
  1765  000682  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1766  000686  EC27  F00B         	call	_stop	;wreg free
  1767                           
  1768                           ;color_card.c: 44:     } else if ((R_rel<0.44) && (G_rel>0.305) && (B_rel>0.21)) {
  1769  00068A  EF45  F004         	goto	l537
  1770  00068E                     l3077:
  1771  00068E  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1772  000692  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1773  000696  6A07               	clrf	(___xxtofl@val+2)^0,c
  1774  000698  6A08               	clrf	(___xxtofl@val+3)^0,c
  1775  00069A  0E00               	movlw	0
  1776  00069C  ECCF  F008         	call	___xxtofl
  1777  0006A0  C005  F013         	movff	?___xxtofl,___flge@ff1
  1778  0006A4  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1779  0006A8  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1780  0006AC  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1781  0006B0  0EAE               	movlw	174
  1782  0006B2  6E17               	movwf	___flge@ff2^0,c
  1783  0006B4  0E47               	movlw	71
  1784  0006B6  6E18               	movwf	(___flge@ff2+1)^0,c
  1785  0006B8  0EE1               	movlw	225
  1786  0006BA  6E19               	movwf	(___flge@ff2+2)^0,c
  1787  0006BC  0E3E               	movlw	62
  1788  0006BE  6E1A               	movwf	(___flge@ff2+3)^0,c
  1789  0006C0  ECA9  F009         	call	___flge	;wreg free
  1790  0006C4  B0D8               	btfsc	status,0,c
  1791  0006C6  EF67  F003         	goto	u3421
  1792  0006CA  EF69  F003         	goto	u3420
  1793  0006CE                     u3421:
  1794  0006CE  EFC5  F003         	goto	l3085
  1795  0006D2                     u3420:
  1796  0006D2  0EF6               	movlw	246
  1797  0006D4  6E13               	movwf	___flge@ff1^0,c
  1798  0006D6  0E28               	movlw	40
  1799  0006D8  6E14               	movwf	(___flge@ff1+1)^0,c
  1800  0006DA  0E9C               	movlw	156
  1801  0006DC  6E15               	movwf	(___flge@ff1+2)^0,c
  1802  0006DE  0E3E               	movlw	62
  1803  0006E0  6E16               	movwf	(___flge@ff1+3)^0,c
  1804  0006E2  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1805  0006E6  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1806  0006EA  6A07               	clrf	(___xxtofl@val+2)^0,c
  1807  0006EC  6A08               	clrf	(___xxtofl@val+3)^0,c
  1808  0006EE  0E00               	movlw	0
  1809  0006F0  ECCF  F008         	call	___xxtofl
  1810  0006F4  C005  F017         	movff	?___xxtofl,___flge@ff2
  1811  0006F8  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1812  0006FC  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1813  000700  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1814  000704  ECA9  F009         	call	___flge	;wreg free
  1815  000708  B0D8               	btfsc	status,0,c
  1816  00070A  EF89  F003         	goto	u3431
  1817  00070E  EF8B  F003         	goto	u3430
  1818  000712                     u3431:
  1819  000712  EFC5  F003         	goto	l3085
  1820  000716                     u3430:
  1821  000716  0E3D               	movlw	61
  1822  000718  6E13               	movwf	___flge@ff1^0,c
  1823  00071A  0E0A               	movlw	10
  1824  00071C  6E14               	movwf	(___flge@ff1+1)^0,c
  1825  00071E  0E57               	movlw	87
  1826  000720  6E15               	movwf	(___flge@ff1+2)^0,c
  1827  000722  0E3E               	movlw	62
  1828  000724  6E16               	movwf	(___flge@ff1+3)^0,c
  1829  000726  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1830  00072A  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1831  00072E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1832  000730  6A08               	clrf	(___xxtofl@val+3)^0,c
  1833  000732  0E00               	movlw	0
  1834  000734  ECCF  F008         	call	___xxtofl
  1835  000738  C005  F017         	movff	?___xxtofl,___flge@ff2
  1836  00073C  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1837  000740  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1838  000744  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1839  000748  ECA9  F009         	call	___flge	;wreg free
  1840  00074C  B0D8               	btfsc	status,0,c
  1841  00074E  EFAB  F003         	goto	u3441
  1842  000752  EFAD  F003         	goto	u3440
  1843  000756                     u3441:
  1844  000756  EFC5  F003         	goto	l3085
  1845  00075A                     u3440:
  1846  00075A                     
  1847                           ;color_card.c: 46:         turnLeft(mL, mR, 135);
  1848  00075A  C035  F01E         	movff	read_card@mL,turnLeft@mL
  1849  00075E  C036  F01F         	movff	read_card@mL+1,turnLeft@mL+1
  1850  000762  C037  F020         	movff	read_card@mR,turnLeft@mR
  1851  000766  C038  F021         	movff	read_card@mR+1,turnLeft@mR+1
  1852  00076A  0E87               	movlw	135
  1853  00076C  6E22               	movwf	turnLeft@deg^0,c
  1854  00076E  ECF2  F006         	call	_turnLeft	;wreg free
  1855                           
  1856                           ;color_card.c: 47:         stop(mL, mR);
  1857  000772  C035  F01E         	movff	read_card@mL,stop@mL
  1858  000776  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1859  00077A  C037  F020         	movff	read_card@mR,stop@mR
  1860  00077E  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1861  000782  EC27  F00B         	call	_stop	;wreg free
  1862                           
  1863                           ;color_card.c: 49:     } else if ((R_rel<0.46) && (G_rel>0.295) && (B_rel>0.21)) {
  1864  000786  EF45  F004         	goto	l537
  1865  00078A                     l3085:
  1866  00078A  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1867  00078E  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1868  000792  6A07               	clrf	(___xxtofl@val+2)^0,c
  1869  000794  6A08               	clrf	(___xxtofl@val+3)^0,c
  1870  000796  0E00               	movlw	0
  1871  000798  ECCF  F008         	call	___xxtofl
  1872  00079C  C005  F013         	movff	?___xxtofl,___flge@ff1
  1873  0007A0  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1874  0007A4  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1875  0007A8  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1876  0007AC  0E1F               	movlw	31
  1877  0007AE  6E17               	movwf	___flge@ff2^0,c
  1878  0007B0  0E85               	movlw	133
  1879  0007B2  6E18               	movwf	(___flge@ff2+1)^0,c
  1880  0007B4  0EEB               	movlw	235
  1881  0007B6  6E19               	movwf	(___flge@ff2+2)^0,c
  1882  0007B8  0E3E               	movlw	62
  1883  0007BA  6E1A               	movwf	(___flge@ff2+3)^0,c
  1884  0007BC  ECA9  F009         	call	___flge	;wreg free
  1885  0007C0  B0D8               	btfsc	status,0,c
  1886  0007C2  EFE5  F003         	goto	u3451
  1887  0007C6  EFE7  F003         	goto	u3450
  1888  0007CA                     u3451:
  1889  0007CA  EF2D  F004         	goto	l3093
  1890  0007CE                     u3450:
  1891  0007CE  0E3D               	movlw	61
  1892  0007D0  6E13               	movwf	___flge@ff1^0,c
  1893  0007D2  0E0A               	movlw	10
  1894  0007D4  6E14               	movwf	(___flge@ff1+1)^0,c
  1895  0007D6  0E97               	movlw	151
  1896  0007D8  6E15               	movwf	(___flge@ff1+2)^0,c
  1897  0007DA  0E3E               	movlw	62
  1898  0007DC  6E16               	movwf	(___flge@ff1+3)^0,c
  1899  0007DE  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1900  0007E2  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1901  0007E6  6A07               	clrf	(___xxtofl@val+2)^0,c
  1902  0007E8  6A08               	clrf	(___xxtofl@val+3)^0,c
  1903  0007EA  0E00               	movlw	0
  1904  0007EC  ECCF  F008         	call	___xxtofl
  1905  0007F0  C005  F017         	movff	?___xxtofl,___flge@ff2
  1906  0007F4  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1907  0007F8  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1908  0007FC  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1909  000800  ECA9  F009         	call	___flge	;wreg free
  1910  000804  B0D8               	btfsc	status,0,c
  1911  000806  EF07  F004         	goto	u3461
  1912  00080A  EF09  F004         	goto	u3460
  1913  00080E                     u3461:
  1914  00080E  EF2D  F004         	goto	l3093
  1915  000812                     u3460:
  1916  000812  0E3D               	movlw	61
  1917  000814  6E13               	movwf	___flge@ff1^0,c
  1918  000816  0E0A               	movlw	10
  1919  000818  6E14               	movwf	(___flge@ff1+1)^0,c
  1920  00081A  0E57               	movlw	87
  1921  00081C  6E15               	movwf	(___flge@ff1+2)^0,c
  1922  00081E  0E3E               	movlw	62
  1923  000820  6E16               	movwf	(___flge@ff1+3)^0,c
  1924  000822  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1925  000826  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1926  00082A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1927  00082C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1928  00082E  0E00               	movlw	0
  1929  000830  ECCF  F008         	call	___xxtofl
  1930  000834  C005  F017         	movff	?___xxtofl,___flge@ff2
  1931  000838  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1932  00083C  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1933  000840  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1934  000844  ECA9  F009         	call	___flge	;wreg free
  1935  000848  B0D8               	btfsc	status,0,c
  1936  00084A  EF29  F004         	goto	u3471
  1937  00084E  EF2B  F004         	goto	u3470
  1938  000852                     u3471:
  1939  000852  EF2D  F004         	goto	l3093
  1940  000856                     u3470:
  1941  000856  EFA1  F001         	goto	l3051
  1942  00085A                     l3093:
  1943                           
  1944                           ;color_card.c: 56:         returnhome_flag = 1;
  1945  00085A  0E01               	movlw	1
  1946  00085C  6E57               	movwf	_returnhome_flag^0,c	;volatile
  1947  00085E                     
  1948                           ;color_card.c: 57:         turnRight(mL, mR, 180);
  1949  00085E  C035  F01E         	movff	read_card@mL,turnRight@mL
  1950  000862  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1951  000866  C037  F020         	movff	read_card@mR,turnRight@mR
  1952  00086A  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1953  00086E  0EB4               	movlw	180
  1954  000870  6E22               	movwf	turnRight@deg^0,c
  1955  000872  ECFF  F005         	call	_turnRight	;wreg free
  1956  000876                     
  1957                           ;color_card.c: 58:         stop(mL, mR);
  1958  000876  C035  F01E         	movff	read_card@mL,stop@mL
  1959  00087A  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1960  00087E  C037  F020         	movff	read_card@mR,stop@mR
  1961  000882  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1962  000886  EC27  F00B         	call	_stop	;wreg free
  1963  00088A                     l537:
  1964  00088A  0012               	return		;funcret
  1965  00088C                     __end_of_read_card:
  1966                           	callstack 0
  1967                           
  1968 ;; *************** function _turnRight *****************
  1969 ;; Defined at:
  1970 ;;		line 246 in file "dc_motor.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  mL              2   29[COMRAM] PTR struct .
  1973 ;;		 -> main@motorL(9), 
  1974 ;;  mR              2   31[COMRAM] PTR struct .
  1975 ;;		 -> main@motorR(9), 
  1976 ;;  deg             1   33[COMRAM] unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1988 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;Total ram usage:        7 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 7
  1995 ;; This function calls:
  1996 ;;		_setMotorPWM
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;;		_read_card
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text2
  2004  000BFE                     __ptext2:
  2005                           	callstack 0
  2006  000BFE                     _turnRight:
  2007                           	callstack 23
  2008  000BFE                     
  2009                           ;dc_motor.c: 246: void turnRight(DC_motor *mL, DC_motor *mR, unsigned char deg);dc_motor
      +                          .c: 247: {;dc_motor.c: 248:     if (returnhome_flag==0) {
  2010  000BFE  5057               	movf	_returnhome_flag^0,w,c	;volatile
  2011  000C00  A4D8               	btfss	status,2,c
  2012  000C02  EF05  F006         	goto	u2741
  2013  000C06  EF07  F006         	goto	u2740
  2014  000C0A                     u2741:
  2015  000C0A  EF7D  F006         	goto	l2839
  2016  000C0E                     u2740:
  2017  000C0E                     
  2018                           ;dc_motor.c: 250:         mL->direction = 1;
  2019  000C0E  EE20 F001          	lfsr	2,1
  2020  000C12  501E               	movf	turnRight@mL^0,w,c
  2021  000C14  26D9               	addwf	fsr2l,f,c
  2022  000C16  501F               	movf	(turnRight@mL+1)^0,w,c
  2023  000C18  22DA               	addwfc	fsr2h,f,c
  2024  000C1A  0E01               	movlw	1
  2025  000C1C  6EDF               	movwf	indf2,c
  2026                           
  2027                           ;dc_motor.c: 251:         mR->direction = 0;
  2028  000C1E  EE20 F001          	lfsr	2,1
  2029  000C22  5020               	movf	turnRight@mR^0,w,c
  2030  000C24  26D9               	addwf	fsr2l,f,c
  2031  000C26  5021               	movf	(turnRight@mR+1)^0,w,c
  2032  000C28  22DA               	addwfc	fsr2h,f,c
  2033  000C2A  0E00               	movlw	0
  2034  000C2C  6EDF               	movwf	indf2,c
  2035                           
  2036                           ;dc_motor.c: 254:         while(((mL->power)<50) || ((mR->power)<50)){
  2037  000C2E  EF62  F006         	goto	l277
  2038  000C32                     l2821:
  2039                           
  2040                           ;dc_motor.c: 256:             LATHbits.LATH0 = !LATHbits.LATH0;
  2041  000C32  A080               	btfss	128,0,c	;volatile
  2042  000C34  EF1E  F006         	goto	u2751
  2043  000C38  EF22  F006         	goto	u2750
  2044  000C3C                     u2751:
  2045  000C3C  6A23               	clrf	??_turnRight^0,c
  2046  000C3E  2A23               	incf	??_turnRight^0,f,c
  2047  000C40  EF23  F006         	goto	u2768
  2048  000C44                     u2750:
  2049  000C44  6A23               	clrf	??_turnRight^0,c
  2050  000C46                     u2768:
  2051  000C46  5080               	movf	128,w,c	;volatile
  2052  000C48  1823               	xorwf	??_turnRight^0,w,c
  2053  000C4A  0BFE               	andlw	-2
  2054  000C4C  1823               	xorwf	??_turnRight^0,w,c
  2055  000C4E  6E80               	movwf	128,c	;volatile
  2056  000C50                     
  2057                           ;dc_motor.c: 259:             if (mL->power<50) {mL->power+=1;}
  2058  000C50  C01E  FFD9         	movff	turnRight@mL,fsr2l
  2059  000C54  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  2060  000C58  0E32               	movlw	50
  2061  000C5A  60DF               	cpfslt	indf2,c
  2062  000C5C  EF32  F006         	goto	u2771
  2063  000C60  EF34  F006         	goto	u2770
  2064  000C64                     u2771:
  2065  000C64  EF39  F006         	goto	l2827
  2066  000C68                     u2770:
  2067  000C68  C01E  FFD9         	movff	turnRight@mL,fsr2l
  2068  000C6C  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  2069  000C70  2ADF               	incf	indf2,f,c
  2070  000C72                     l2827:
  2071                           
  2072                           ;dc_motor.c: 260:             if (mR->power<50) {mR->power+=1;}
  2073  000C72  C020  FFD9         	movff	turnRight@mR,fsr2l
  2074  000C76  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  2075  000C7A  0E32               	movlw	50
  2076  000C7C  60DF               	cpfslt	indf2,c
  2077  000C7E  EF43  F006         	goto	u2781
  2078  000C82  EF45  F006         	goto	u2780
  2079  000C86                     u2781:
  2080  000C86  EF4A  F006         	goto	l2831
  2081  000C8A                     u2780:
  2082  000C8A  C020  FFD9         	movff	turnRight@mR,fsr2l
  2083  000C8E  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  2084  000C92  2ADF               	incf	indf2,f,c
  2085  000C94                     l2831:
  2086                           
  2087                           ;dc_motor.c: 263:             setMotorPWM(mL);
  2088  000C94  C01E  F013         	movff	turnRight@mL,setMotorPWM@m
  2089  000C98  C01F  F014         	movff	turnRight@mL+1,setMotorPWM@m+1
  2090  000C9C  ECE5  F007         	call	_setMotorPWM	;wreg free
  2091  000CA0                     
  2092                           ;dc_motor.c: 264:             setMotorPWM(mR);
  2093  000CA0  C020  F013         	movff	turnRight@mR,setMotorPWM@m
  2094  000CA4  C021  F014         	movff	turnRight@mR+1,setMotorPWM@m+1
  2095  000CA8  ECE5  F007         	call	_setMotorPWM	;wreg free
  2096  000CAC                     
  2097                           ;dc_motor.c: 265:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2098  000CAC  0E09               	movlw	9
  2099  000CAE  6E24               	movwf	(??_turnRight+1)^0,c
  2100  000CB0  0E1E               	movlw	30
  2101  000CB2  6E23               	movwf	??_turnRight^0,c
  2102  000CB4  0EE4               	movlw	228
  2103  000CB6                     u3827:
  2104  000CB6  2EE8               	decfsz	wreg,f,c
  2105  000CB8  D7FE               	bra	u3827
  2106  000CBA  2E23               	decfsz	??_turnRight^0,f,c
  2107  000CBC  D7FC               	bra	u3827
  2108  000CBE  2E24               	decfsz	(??_turnRight+1)^0,f,c
  2109  000CC0  D7FA               	bra	u3827
  2110  000CC2  D000               	nop2	
  2111  000CC4                     l277:
  2112                           
  2113                           ;dc_motor.c: 254:         while(((mL->power)<50) || ((mR->power)<50)){
  2114  000CC4  C01E  FFD9         	movff	turnRight@mL,fsr2l
  2115  000CC8  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  2116  000CCC  0E31               	movlw	49
  2117  000CCE  64DF               	cpfsgt	indf2,c
  2118  000CD0  EF6C  F006         	goto	u2791
  2119  000CD4  EF6E  F006         	goto	u2790
  2120  000CD8                     u2791:
  2121  000CD8  EF19  F006         	goto	l2821
  2122  000CDC                     u2790:
  2123  000CDC  C020  FFD9         	movff	turnRight@mR,fsr2l
  2124  000CE0  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  2125  000CE4  0E31               	movlw	49
  2126  000CE6  64DF               	cpfsgt	indf2,c
  2127  000CE8  EF78  F006         	goto	u2801
  2128  000CEC  EF7A  F006         	goto	u2800
  2129  000CF0                     u2801:
  2130  000CF0  EF19  F006         	goto	l2821
  2131  000CF4                     u2800:
  2132  000CF4                     
  2133                           ;dc_motor.c: 268:         LATHbits.LATH0 = 0;
  2134  000CF4  9080               	bcf	128,0,c	;volatile
  2135                           
  2136                           ;dc_motor.c: 270:     } else {
  2137  000CF6  EFF1  F006         	goto	l288
  2138  000CFA                     l2839:
  2139                           
  2140                           ;dc_motor.c: 272:         mL->direction = 0;
  2141  000CFA  EE20 F001          	lfsr	2,1
  2142  000CFE  501E               	movf	turnRight@mL^0,w,c
  2143  000D00  26D9               	addwf	fsr2l,f,c
  2144  000D02  501F               	movf	(turnRight@mL+1)^0,w,c
  2145  000D04  22DA               	addwfc	fsr2h,f,c
  2146  000D06  0E00               	movlw	0
  2147  000D08  6EDF               	movwf	indf2,c
  2148                           
  2149                           ;dc_motor.c: 273:         mR->direction = 1;
  2150  000D0A  EE20 F001          	lfsr	2,1
  2151  000D0E  5020               	movf	turnRight@mR^0,w,c
  2152  000D10  26D9               	addwf	fsr2l,f,c
  2153  000D12  5021               	movf	(turnRight@mR+1)^0,w,c
  2154  000D14  22DA               	addwfc	fsr2h,f,c
  2155  000D16  0E01               	movlw	1
  2156  000D18  6EDF               	movwf	indf2,c
  2157                           
  2158                           ;dc_motor.c: 276:         while(((mL->power)<50) || ((mR->power)<50)){
  2159  000D1A  EFD8  F006         	goto	l283
  2160  000D1E                     l2841:
  2161                           
  2162                           ;dc_motor.c: 278:             LATFbits.LATF0 = !LATFbits.LATF0;
  2163  000D1E  A07E               	btfss	126,0,c	;volatile
  2164  000D20  EF94  F006         	goto	u2811
  2165  000D24  EF98  F006         	goto	u2810
  2166  000D28                     u2811:
  2167  000D28  6A23               	clrf	??_turnRight^0,c
  2168  000D2A  2A23               	incf	??_turnRight^0,f,c
  2169  000D2C  EF99  F006         	goto	u2828
  2170  000D30                     u2810:
  2171  000D30  6A23               	clrf	??_turnRight^0,c
  2172  000D32                     u2828:
  2173  000D32  507E               	movf	126,w,c	;volatile
  2174  000D34  1823               	xorwf	??_turnRight^0,w,c
  2175  000D36  0BFE               	andlw	-2
  2176  000D38  1823               	xorwf	??_turnRight^0,w,c
  2177  000D3A  6E7E               	movwf	126,c	;volatile
  2178  000D3C                     
  2179                           ;dc_motor.c: 281:             if (mL->power<50) {mL->power+=1;}
  2180  000D3C  C01E  FFD9         	movff	turnRight@mL,fsr2l
  2181  000D40  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  2182  000D44  0E32               	movlw	50
  2183  000D46  60DF               	cpfslt	indf2,c
  2184  000D48  EFA8  F006         	goto	u2831
  2185  000D4C  EFAA  F006         	goto	u2830
  2186  000D50                     u2831:
  2187  000D50  EFAF  F006         	goto	l2847
  2188  000D54                     u2830:
  2189  000D54  C01E  FFD9         	movff	turnRight@mL,fsr2l
  2190  000D58  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  2191  000D5C  2ADF               	incf	indf2,f,c
  2192  000D5E                     l2847:
  2193                           
  2194                           ;dc_motor.c: 282:             if (mR->power<50) {mR->power+=1;}
  2195  000D5E  C020  FFD9         	movff	turnRight@mR,fsr2l
  2196  000D62  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  2197  000D66  0E32               	movlw	50
  2198  000D68  60DF               	cpfslt	indf2,c
  2199  000D6A  EFB9  F006         	goto	u2841
  2200  000D6E  EFBB  F006         	goto	u2840
  2201  000D72                     u2841:
  2202  000D72  EFC0  F006         	goto	l2851
  2203  000D76                     u2840:
  2204  000D76  C020  FFD9         	movff	turnRight@mR,fsr2l
  2205  000D7A  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  2206  000D7E  2ADF               	incf	indf2,f,c
  2207  000D80                     l2851:
  2208                           
  2209                           ;dc_motor.c: 285:             setMotorPWM(mL);
  2210  000D80  C01E  F013         	movff	turnRight@mL,setMotorPWM@m
  2211  000D84  C01F  F014         	movff	turnRight@mL+1,setMotorPWM@m+1
  2212  000D88  ECE5  F007         	call	_setMotorPWM	;wreg free
  2213  000D8C                     
  2214                           ;dc_motor.c: 286:             setMotorPWM(mR);
  2215  000D8C  C020  F013         	movff	turnRight@mR,setMotorPWM@m
  2216  000D90  C021  F014         	movff	turnRight@mR+1,setMotorPWM@m+1
  2217  000D94  ECE5  F007         	call	_setMotorPWM	;wreg free
  2218  000D98                     
  2219                           ;dc_motor.c: 287:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2220  000D98  0E09               	movlw	9
  2221  000D9A  6E24               	movwf	(??_turnRight+1)^0,c
  2222  000D9C  0E1E               	movlw	30
  2223  000D9E  6E23               	movwf	??_turnRight^0,c
  2224  000DA0  0EE4               	movlw	228
  2225  000DA2                     u3837:
  2226  000DA2  2EE8               	decfsz	wreg,f,c
  2227  000DA4  D7FE               	bra	u3837
  2228  000DA6  2E23               	decfsz	??_turnRight^0,f,c
  2229  000DA8  D7FC               	bra	u3837
  2230  000DAA  2E24               	decfsz	(??_turnRight+1)^0,f,c
  2231  000DAC  D7FA               	bra	u3837
  2232  000DAE  D000               	nop2	
  2233  000DB0                     l283:
  2234                           
  2235                           ;dc_motor.c: 276:         while(((mL->power)<50) || ((mR->power)<50)){
  2236  000DB0  C01E  FFD9         	movff	turnRight@mL,fsr2l
  2237  000DB4  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  2238  000DB8  0E31               	movlw	49
  2239  000DBA  64DF               	cpfsgt	indf2,c
  2240  000DBC  EFE2  F006         	goto	u2851
  2241  000DC0  EFE4  F006         	goto	u2850
  2242  000DC4                     u2851:
  2243  000DC4  EF8F  F006         	goto	l2841
  2244  000DC8                     u2850:
  2245  000DC8  C020  FFD9         	movff	turnRight@mR,fsr2l
  2246  000DCC  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  2247  000DD0  0E31               	movlw	49
  2248  000DD2  64DF               	cpfsgt	indf2,c
  2249  000DD4  EFEE  F006         	goto	u2861
  2250  000DD8  EFF0  F006         	goto	u2860
  2251  000DDC                     u2861:
  2252  000DDC  EF8F  F006         	goto	l2841
  2253  000DE0                     u2860:
  2254  000DE0                     
  2255                           ;dc_motor.c: 290:         LATFbits.LATF0 = 0;
  2256  000DE0  907E               	bcf	126,0,c	;volatile
  2257  000DE2                     l288:
  2258  000DE2  0012               	return		;funcret
  2259  000DE4                     __end_of_turnRight:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _turnLeft *****************
  2263 ;; Defined at:
  2264 ;;		line 194 in file "dc_motor.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  mL              2   29[COMRAM] PTR struct .
  2267 ;;		 -> main@motorL(9), 
  2268 ;;  mR              2   31[COMRAM] PTR struct .
  2269 ;;		 -> main@motorR(9), 
  2270 ;;  deg             1   33[COMRAM] unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2282 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;Total ram usage:        7 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 7
  2289 ;; This function calls:
  2290 ;;		_setMotorPWM
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;;		_read_card
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text3
  2298  000DE4                     __ptext3:
  2299                           	callstack 0
  2300  000DE4                     _turnLeft:
  2301                           	callstack 23
  2302  000DE4                     
  2303                           ;dc_motor.c: 194: void turnLeft(DC_motor *mL, DC_motor *mR, unsigned char deg);dc_motor.
      +                          c: 195: {;dc_motor.c: 196:     if (returnhome_flag==0) {
  2304  000DE4  5057               	movf	_returnhome_flag^0,w,c	;volatile
  2305  000DE6  A4D8               	btfss	status,2,c
  2306  000DE8  EFF8  F006         	goto	u2871
  2307  000DEC  EFFA  F006         	goto	u2870
  2308  000DF0                     u2871:
  2309  000DF0  EF70  F007         	goto	l2881
  2310  000DF4                     u2870:
  2311  000DF4                     
  2312                           ;dc_motor.c: 198:         mL->direction = 0;
  2313  000DF4  EE20 F001          	lfsr	2,1
  2314  000DF8  501E               	movf	turnLeft@mL^0,w,c
  2315  000DFA  26D9               	addwf	fsr2l,f,c
  2316  000DFC  501F               	movf	(turnLeft@mL+1)^0,w,c
  2317  000DFE  22DA               	addwfc	fsr2h,f,c
  2318  000E00  0E00               	movlw	0
  2319  000E02  6EDF               	movwf	indf2,c
  2320                           
  2321                           ;dc_motor.c: 199:         mR->direction = 1;
  2322  000E04  EE20 F001          	lfsr	2,1
  2323  000E08  5020               	movf	turnLeft@mR^0,w,c
  2324  000E0A  26D9               	addwf	fsr2l,f,c
  2325  000E0C  5021               	movf	(turnLeft@mR+1)^0,w,c
  2326  000E0E  22DA               	addwfc	fsr2h,f,c
  2327  000E10  0E01               	movlw	1
  2328  000E12  6EDF               	movwf	indf2,c
  2329                           
  2330                           ;dc_motor.c: 202:         while(((mL->power)<50) || ((mR->power)<50)){
  2331  000E14  EF55  F007         	goto	l262
  2332  000E18                     l2863:
  2333                           
  2334                           ;dc_motor.c: 204:             LATFbits.LATF0 = !LATFbits.LATF0;
  2335  000E18  A07E               	btfss	126,0,c	;volatile
  2336  000E1A  EF11  F007         	goto	u2881
  2337  000E1E  EF15  F007         	goto	u2880
  2338  000E22                     u2881:
  2339  000E22  6A23               	clrf	??_turnLeft^0,c
  2340  000E24  2A23               	incf	??_turnLeft^0,f,c
  2341  000E26  EF16  F007         	goto	u2898
  2342  000E2A                     u2880:
  2343  000E2A  6A23               	clrf	??_turnLeft^0,c
  2344  000E2C                     u2898:
  2345  000E2C  507E               	movf	126,w,c	;volatile
  2346  000E2E  1823               	xorwf	??_turnLeft^0,w,c
  2347  000E30  0BFE               	andlw	-2
  2348  000E32  1823               	xorwf	??_turnLeft^0,w,c
  2349  000E34  6E7E               	movwf	126,c	;volatile
  2350  000E36                     
  2351                           ;dc_motor.c: 207:             if (mL->power<50) {mL->power+=1;}
  2352  000E36  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2353  000E3A  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2354  000E3E  0E32               	movlw	50
  2355  000E40  60DF               	cpfslt	indf2,c
  2356  000E42  EF25  F007         	goto	u2901
  2357  000E46  EF27  F007         	goto	u2900
  2358  000E4A                     u2901:
  2359  000E4A  EF2C  F007         	goto	l2869
  2360  000E4E                     u2900:
  2361  000E4E  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2362  000E52  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2363  000E56  2ADF               	incf	indf2,f,c
  2364  000E58                     l2869:
  2365                           
  2366                           ;dc_motor.c: 208:             if (mR->power<50) {mR->power+=1;}
  2367  000E58  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2368  000E5C  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2369  000E60  0E32               	movlw	50
  2370  000E62  60DF               	cpfslt	indf2,c
  2371  000E64  EF36  F007         	goto	u2911
  2372  000E68  EF38  F007         	goto	u2910
  2373  000E6C                     u2911:
  2374  000E6C  EF3D  F007         	goto	l2873
  2375  000E70                     u2910:
  2376  000E70  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2377  000E74  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2378  000E78  2ADF               	incf	indf2,f,c
  2379  000E7A                     l2873:
  2380                           
  2381                           ;dc_motor.c: 211:             setMotorPWM(mL);
  2382  000E7A  C01E  F013         	movff	turnLeft@mL,setMotorPWM@m
  2383  000E7E  C01F  F014         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2384  000E82  ECE5  F007         	call	_setMotorPWM	;wreg free
  2385  000E86                     
  2386                           ;dc_motor.c: 212:             setMotorPWM(mR);
  2387  000E86  C020  F013         	movff	turnLeft@mR,setMotorPWM@m
  2388  000E8A  C021  F014         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2389  000E8E  ECE5  F007         	call	_setMotorPWM	;wreg free
  2390  000E92                     
  2391                           ;dc_motor.c: 213:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2392  000E92  0E09               	movlw	9
  2393  000E94  6E24               	movwf	(??_turnLeft+1)^0,c
  2394  000E96  0E1E               	movlw	30
  2395  000E98  6E23               	movwf	??_turnLeft^0,c
  2396  000E9A  0EE4               	movlw	228
  2397  000E9C                     u3847:
  2398  000E9C  2EE8               	decfsz	wreg,f,c
  2399  000E9E  D7FE               	bra	u3847
  2400  000EA0  2E23               	decfsz	??_turnLeft^0,f,c
  2401  000EA2  D7FC               	bra	u3847
  2402  000EA4  2E24               	decfsz	(??_turnLeft+1)^0,f,c
  2403  000EA6  D7FA               	bra	u3847
  2404  000EA8  D000               	nop2	
  2405  000EAA                     l262:
  2406                           
  2407                           ;dc_motor.c: 202:         while(((mL->power)<50) || ((mR->power)<50)){
  2408  000EAA  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2409  000EAE  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2410  000EB2  0E31               	movlw	49
  2411  000EB4  64DF               	cpfsgt	indf2,c
  2412  000EB6  EF5F  F007         	goto	u2921
  2413  000EBA  EF61  F007         	goto	u2920
  2414  000EBE                     u2921:
  2415  000EBE  EF0C  F007         	goto	l2863
  2416  000EC2                     u2920:
  2417  000EC2  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2418  000EC6  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2419  000ECA  0E31               	movlw	49
  2420  000ECC  64DF               	cpfsgt	indf2,c
  2421  000ECE  EF6B  F007         	goto	u2931
  2422  000ED2  EF6D  F007         	goto	u2930
  2423  000ED6                     u2931:
  2424  000ED6  EF0C  F007         	goto	l2863
  2425  000EDA                     u2930:
  2426  000EDA                     
  2427                           ;dc_motor.c: 216:         LATFbits.LATF0 = 0;
  2428  000EDA  907E               	bcf	126,0,c	;volatile
  2429                           
  2430                           ;dc_motor.c: 218:     } else {
  2431  000EDC  EFE4  F007         	goto	l273
  2432  000EE0                     l2881:
  2433                           
  2434                           ;dc_motor.c: 220:         mL->direction = 1;
  2435  000EE0  EE20 F001          	lfsr	2,1
  2436  000EE4  501E               	movf	turnLeft@mL^0,w,c
  2437  000EE6  26D9               	addwf	fsr2l,f,c
  2438  000EE8  501F               	movf	(turnLeft@mL+1)^0,w,c
  2439  000EEA  22DA               	addwfc	fsr2h,f,c
  2440  000EEC  0E01               	movlw	1
  2441  000EEE  6EDF               	movwf	indf2,c
  2442                           
  2443                           ;dc_motor.c: 221:         mR->direction = 0;
  2444  000EF0  EE20 F001          	lfsr	2,1
  2445  000EF4  5020               	movf	turnLeft@mR^0,w,c
  2446  000EF6  26D9               	addwf	fsr2l,f,c
  2447  000EF8  5021               	movf	(turnLeft@mR+1)^0,w,c
  2448  000EFA  22DA               	addwfc	fsr2h,f,c
  2449  000EFC  0E00               	movlw	0
  2450  000EFE  6EDF               	movwf	indf2,c
  2451                           
  2452                           ;dc_motor.c: 224:         while(((mL->power)<50) || ((mR->power)<50)){
  2453  000F00  EFCB  F007         	goto	l268
  2454  000F04                     l2883:
  2455                           
  2456                           ;dc_motor.c: 226:             LATHbits.LATH0 = !LATHbits.LATH0;
  2457  000F04  A080               	btfss	128,0,c	;volatile
  2458  000F06  EF87  F007         	goto	u2941
  2459  000F0A  EF8B  F007         	goto	u2940
  2460  000F0E                     u2941:
  2461  000F0E  6A23               	clrf	??_turnLeft^0,c
  2462  000F10  2A23               	incf	??_turnLeft^0,f,c
  2463  000F12  EF8C  F007         	goto	u2958
  2464  000F16                     u2940:
  2465  000F16  6A23               	clrf	??_turnLeft^0,c
  2466  000F18                     u2958:
  2467  000F18  5080               	movf	128,w,c	;volatile
  2468  000F1A  1823               	xorwf	??_turnLeft^0,w,c
  2469  000F1C  0BFE               	andlw	-2
  2470  000F1E  1823               	xorwf	??_turnLeft^0,w,c
  2471  000F20  6E80               	movwf	128,c	;volatile
  2472  000F22                     
  2473                           ;dc_motor.c: 229:             if (mL->power<50) {mL->power+=1;}
  2474  000F22  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2475  000F26  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2476  000F2A  0E32               	movlw	50
  2477  000F2C  60DF               	cpfslt	indf2,c
  2478  000F2E  EF9B  F007         	goto	u2961
  2479  000F32  EF9D  F007         	goto	u2960
  2480  000F36                     u2961:
  2481  000F36  EFA2  F007         	goto	l2889
  2482  000F3A                     u2960:
  2483  000F3A  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2484  000F3E  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2485  000F42  2ADF               	incf	indf2,f,c
  2486  000F44                     l2889:
  2487                           
  2488                           ;dc_motor.c: 230:             if (mR->power<50) {mR->power+=1;}
  2489  000F44  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2490  000F48  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2491  000F4C  0E32               	movlw	50
  2492  000F4E  60DF               	cpfslt	indf2,c
  2493  000F50  EFAC  F007         	goto	u2971
  2494  000F54  EFAE  F007         	goto	u2970
  2495  000F58                     u2971:
  2496  000F58  EFB3  F007         	goto	l2893
  2497  000F5C                     u2970:
  2498  000F5C  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2499  000F60  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2500  000F64  2ADF               	incf	indf2,f,c
  2501  000F66                     l2893:
  2502                           
  2503                           ;dc_motor.c: 233:             setMotorPWM(mL);
  2504  000F66  C01E  F013         	movff	turnLeft@mL,setMotorPWM@m
  2505  000F6A  C01F  F014         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2506  000F6E  ECE5  F007         	call	_setMotorPWM	;wreg free
  2507  000F72                     
  2508                           ;dc_motor.c: 234:             setMotorPWM(mR);
  2509  000F72  C020  F013         	movff	turnLeft@mR,setMotorPWM@m
  2510  000F76  C021  F014         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2511  000F7A  ECE5  F007         	call	_setMotorPWM	;wreg free
  2512  000F7E                     
  2513                           ;dc_motor.c: 235:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2514  000F7E  0E09               	movlw	9
  2515  000F80  6E24               	movwf	(??_turnLeft+1)^0,c
  2516  000F82  0E1E               	movlw	30
  2517  000F84  6E23               	movwf	??_turnLeft^0,c
  2518  000F86  0EE4               	movlw	228
  2519  000F88                     u3857:
  2520  000F88  2EE8               	decfsz	wreg,f,c
  2521  000F8A  D7FE               	bra	u3857
  2522  000F8C  2E23               	decfsz	??_turnLeft^0,f,c
  2523  000F8E  D7FC               	bra	u3857
  2524  000F90  2E24               	decfsz	(??_turnLeft+1)^0,f,c
  2525  000F92  D7FA               	bra	u3857
  2526  000F94  D000               	nop2	
  2527  000F96                     l268:
  2528                           
  2529                           ;dc_motor.c: 224:         while(((mL->power)<50) || ((mR->power)<50)){
  2530  000F96  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2531  000F9A  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2532  000F9E  0E31               	movlw	49
  2533  000FA0  64DF               	cpfsgt	indf2,c
  2534  000FA2  EFD5  F007         	goto	u2981
  2535  000FA6  EFD7  F007         	goto	u2980
  2536  000FAA                     u2981:
  2537  000FAA  EF82  F007         	goto	l2883
  2538  000FAE                     u2980:
  2539  000FAE  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2540  000FB2  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2541  000FB6  0E31               	movlw	49
  2542  000FB8  64DF               	cpfsgt	indf2,c
  2543  000FBA  EFE1  F007         	goto	u2991
  2544  000FBE  EFE3  F007         	goto	u2990
  2545  000FC2                     u2991:
  2546  000FC2  EF82  F007         	goto	l2883
  2547  000FC6                     u2990:
  2548  000FC6                     
  2549                           ;dc_motor.c: 238:         LATHbits.LATH0 = 0;
  2550  000FC6  9080               	bcf	128,0,c	;volatile
  2551  000FC8                     l273:
  2552  000FC8  0012               	return		;funcret
  2553  000FCA                     __end_of_turnLeft:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function _stop *****************
  2557 ;; Defined at:
  2558 ;;		line 172 in file "dc_motor.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  mL              2   29[COMRAM] PTR struct .
  2561 ;;		 -> main@motorL(9), 
  2562 ;;  mR              2   31[COMRAM] PTR struct .
  2563 ;;		 -> main@motorR(9), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;Total ram usage:        6 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 7
  2582 ;; This function calls:
  2583 ;;		_setMotorPWM
  2584 ;; This function is called by:
  2585 ;;		_read_card
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text4
  2590  00164E                     __ptext4:
  2591                           	callstack 0
  2592  00164E                     _stop:
  2593                           	callstack 22
  2594  00164E                     
  2595                           ;dc_motor.c: 172: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 173: {;dc_motor.c: 1
      +                          74:     LATDbits.LATD4 = 1;
  2596  00164E  887C               	bsf	124,4,c	;volatile
  2597                           
  2598                           ;dc_motor.c: 177:     while(((mL->power)!=0) && ((mR->power)!=0)){
  2599  001650  EF58  F00B         	goto	l2923
  2600  001654                     l2915:
  2601                           
  2602                           ;dc_motor.c: 178:         mL->power = mL->power - 10;
  2603  001654  C01E  FFD9         	movff	stop@mL,fsr2l
  2604  001658  C01F  FFDA         	movff	stop@mL+1,fsr2h
  2605  00165C  50DF               	movf	indf2,w,c
  2606  00165E  0FF6               	addlw	246
  2607  001660  C01E  FFD9         	movff	stop@mL,fsr2l
  2608  001664  C01F  FFDA         	movff	stop@mL+1,fsr2h
  2609  001668  6EDF               	movwf	indf2,c
  2610                           
  2611                           ;dc_motor.c: 179:         mR->power = mR->power - 10;
  2612  00166A  C020  FFD9         	movff	stop@mR,fsr2l
  2613  00166E  C021  FFDA         	movff	stop@mR+1,fsr2h
  2614  001672  50DF               	movf	indf2,w,c
  2615  001674  0FF6               	addlw	246
  2616  001676  C020  FFD9         	movff	stop@mR,fsr2l
  2617  00167A  C021  FFDA         	movff	stop@mR+1,fsr2h
  2618  00167E  6EDF               	movwf	indf2,c
  2619  001680                     
  2620                           ;dc_motor.c: 182:         setMotorPWM(mL);
  2621  001680  C01E  F013         	movff	stop@mL,setMotorPWM@m
  2622  001684  C01F  F014         	movff	stop@mL+1,setMotorPWM@m+1
  2623  001688  ECE5  F007         	call	_setMotorPWM	;wreg free
  2624  00168C                     
  2625                           ;dc_motor.c: 183:         setMotorPWM(mR);
  2626  00168C  C020  F013         	movff	stop@mR,setMotorPWM@m
  2627  001690  C021  F014         	movff	stop@mR+1,setMotorPWM@m+1
  2628  001694  ECE5  F007         	call	_setMotorPWM	;wreg free
  2629  001698                     
  2630                           ;dc_motor.c: 184:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2631  001698  0E09               	movlw	9
  2632  00169A  6E23               	movwf	(??_stop+1)^0,c
  2633  00169C  0E1E               	movlw	30
  2634  00169E  6E22               	movwf	??_stop^0,c
  2635  0016A0  0EE4               	movlw	228
  2636  0016A2                     u3867:
  2637  0016A2  2EE8               	decfsz	wreg,f,c
  2638  0016A4  D7FE               	bra	u3867
  2639  0016A6  2E22               	decfsz	??_stop^0,f,c
  2640  0016A8  D7FC               	bra	u3867
  2641  0016AA  2E23               	decfsz	(??_stop+1)^0,f,c
  2642  0016AC  D7FA               	bra	u3867
  2643  0016AE  D000               	nop2	
  2644  0016B0                     l2923:
  2645                           
  2646                           ;dc_motor.c: 177:     while(((mL->power)!=0) && ((mR->power)!=0)){
  2647  0016B0  C01E  FFD9         	movff	stop@mL,fsr2l
  2648  0016B4  C01F  FFDA         	movff	stop@mL+1,fsr2h
  2649  0016B8  50DF               	movf	indf2,w,c
  2650  0016BA  B4D8               	btfsc	status,2,c
  2651  0016BC  EF62  F00B         	goto	u3021
  2652  0016C0  EF64  F00B         	goto	u3020
  2653  0016C4                     u3021:
  2654  0016C4  EF70  F00B         	goto	l257
  2655  0016C8                     u3020:
  2656  0016C8  C020  FFD9         	movff	stop@mR,fsr2l
  2657  0016CC  C021  FFDA         	movff	stop@mR+1,fsr2h
  2658  0016D0  50DF               	movf	indf2,w,c
  2659  0016D2  A4D8               	btfss	status,2,c
  2660  0016D4  EF6E  F00B         	goto	u3031
  2661  0016D8  EF70  F00B         	goto	u3030
  2662  0016DC                     u3031:
  2663  0016DC  EF2A  F00B         	goto	l2915
  2664  0016E0                     u3030:
  2665  0016E0                     l257:
  2666                           
  2667                           ;dc_motor.c: 187:     LATDbits.LATD4 = 0;
  2668  0016E0  987C               	bcf	124,4,c	;volatile
  2669  0016E2  0012               	return		;funcret
  2670  0016E4                     __end_of_stop:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _reverse *****************
  2674 ;; Defined at:
  2675 ;;		line 151 in file "dc_motor.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  mL              2   29[COMRAM] PTR struct .
  2678 ;;		 -> main@motorL(9), 
  2679 ;;  mR              2   31[COMRAM] PTR struct .
  2680 ;;		 -> main@motorR(9), 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;Total ram usage:        6 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 7
  2699 ;; This function calls:
  2700 ;;		_setMotorPWM
  2701 ;; This function is called by:
  2702 ;;		_read_card
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text5
  2707  00151A                     __ptext5:
  2708                           	callstack 0
  2709  00151A                     _reverse:
  2710                           	callstack 22
  2711  00151A                     
  2712                           ;dc_motor.c: 151: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_motor.c
      +                          : 154:     mL->direction = 0;
  2713  00151A  EE20 F001          	lfsr	2,1
  2714  00151E  501E               	movf	reverse@mL^0,w,c
  2715  001520  26D9               	addwf	fsr2l,f,c
  2716  001522  501F               	movf	(reverse@mL+1)^0,w,c
  2717  001524  22DA               	addwfc	fsr2h,f,c
  2718  001526  0E00               	movlw	0
  2719  001528  6EDF               	movwf	indf2,c
  2720                           
  2721                           ;dc_motor.c: 155:     mR->direction = 0;
  2722  00152A  EE20 F001          	lfsr	2,1
  2723  00152E  5020               	movf	reverse@mR^0,w,c
  2724  001530  26D9               	addwf	fsr2l,f,c
  2725  001532  5021               	movf	(reverse@mR+1)^0,w,c
  2726  001534  22DA               	addwfc	fsr2h,f,c
  2727  001536  0E00               	movlw	0
  2728  001538  6EDF               	movwf	indf2,c
  2729                           
  2730                           ;dc_motor.c: 158:     while(((mL->power)<100) && ((mR->power)<100)){
  2731  00153A  EFC1  F00A         	goto	l245
  2732  00153E                     l2903:
  2733                           
  2734                           ;dc_motor.c: 159:         mL->power+=1;
  2735  00153E  C01E  FFD9         	movff	reverse@mL,fsr2l
  2736  001542  C01F  FFDA         	movff	reverse@mL+1,fsr2h
  2737  001546  2ADF               	incf	indf2,f,c
  2738                           
  2739                           ;dc_motor.c: 160:         mR->power+=1;
  2740  001548  C020  FFD9         	movff	reverse@mR,fsr2l
  2741  00154C  C021  FFDA         	movff	reverse@mR+1,fsr2h
  2742  001550  2ADF               	incf	indf2,f,c
  2743  001552                     
  2744                           ;dc_motor.c: 162:         setMotorPWM(mL);
  2745  001552  C01E  F013         	movff	reverse@mL,setMotorPWM@m
  2746  001556  C01F  F014         	movff	reverse@mL+1,setMotorPWM@m+1
  2747  00155A  ECE5  F007         	call	_setMotorPWM	;wreg free
  2748  00155E                     
  2749                           ;dc_motor.c: 163:         setMotorPWM(mR);
  2750  00155E  C020  F013         	movff	reverse@mR,setMotorPWM@m
  2751  001562  C021  F014         	movff	reverse@mR+1,setMotorPWM@m+1
  2752  001566  ECE5  F007         	call	_setMotorPWM	;wreg free
  2753  00156A                     
  2754                           ;dc_motor.c: 164:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2755  00156A  0E09               	movlw	9
  2756  00156C  6E23               	movwf	(??_reverse+1)^0,c
  2757  00156E  0E1E               	movlw	30
  2758  001570  6E22               	movwf	??_reverse^0,c
  2759  001572  0EE4               	movlw	228
  2760  001574                     u3877:
  2761  001574  2EE8               	decfsz	wreg,f,c
  2762  001576  D7FE               	bra	u3877
  2763  001578  2E22               	decfsz	??_reverse^0,f,c
  2764  00157A  D7FC               	bra	u3877
  2765  00157C  2E23               	decfsz	(??_reverse+1)^0,f,c
  2766  00157E  D7FA               	bra	u3877
  2767  001580  D000               	nop2	
  2768  001582                     l245:
  2769                           
  2770                           ;dc_motor.c: 158:     while(((mL->power)<100) && ((mR->power)<100)){
  2771  001582  C01E  FFD9         	movff	reverse@mL,fsr2l
  2772  001586  C01F  FFDA         	movff	reverse@mL+1,fsr2h
  2773  00158A  0E64               	movlw	100
  2774  00158C  60DF               	cpfslt	indf2,c
  2775  00158E  EFCB  F00A         	goto	u3001
  2776  001592  EFCD  F00A         	goto	u3000
  2777  001596                     u3001:
  2778  001596  EFD9  F00A         	goto	l250
  2779  00159A                     u3000:
  2780  00159A  C020  FFD9         	movff	reverse@mR,fsr2l
  2781  00159E  C021  FFDA         	movff	reverse@mR+1,fsr2h
  2782  0015A2  0E63               	movlw	99
  2783  0015A4  64DF               	cpfsgt	indf2,c
  2784  0015A6  EFD7  F00A         	goto	u3011
  2785  0015AA  EFD9  F00A         	goto	u3010
  2786  0015AE                     u3011:
  2787  0015AE  EF9F  F00A         	goto	l2903
  2788  0015B2                     u3010:
  2789  0015B2                     l250:
  2790  0015B2  0012               	return		;funcret
  2791  0015B4                     __end_of_reverse:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function ___xxtofl *****************
  2795 ;; Defined at:
  2796 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  sign            1    wreg     unsigned char 
  2799 ;;  val             4    4[COMRAM] long 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  sign            1   12[COMRAM] unsigned char 
  2802 ;;  arg             4   14[COMRAM] unsigned long 
  2803 ;;  exp             1   13[COMRAM] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  4    4[COMRAM] unsigned char 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;Total ram usage:       14 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 5
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_read_card
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text6
  2828  00119E                     __ptext6:
  2829                           	callstack 0
  2830  00119E                     ___xxtofl:
  2831                           	callstack 24
  2832                           
  2833                           ;incstack = 0
  2834                           ;___xxtofl@sign stored from wreg
  2835  00119E  6E0D               	movwf	___xxtofl@sign^0,c
  2836  0011A0  500D               	movf	___xxtofl@sign^0,w,c
  2837  0011A2  B4D8               	btfsc	status,2,c
  2838  0011A4  EFD6  F008         	goto	u3121
  2839  0011A8  EFD8  F008         	goto	u3120
  2840  0011AC                     u3121:
  2841  0011AC  EFFA  F008         	goto	l1195
  2842  0011B0                     u3120:
  2843  0011B0  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  2844  0011B2  EFDF  F008         	goto	u3130
  2845  0011B6  EFDD  F008         	goto	u3131
  2846  0011BA                     u3131:
  2847  0011BA  EFFA  F008         	goto	l1195
  2848  0011BE                     u3130:
  2849  0011BE  C005  F009         	movff	___xxtofl@val,??___xxtofl
  2850  0011C2  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  2851  0011C6  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  2852  0011CA  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  2853  0011CE  1E09               	comf	??___xxtofl^0,f,c
  2854  0011D0  1E0A               	comf	(??___xxtofl+1)^0,f,c
  2855  0011D2  1E0B               	comf	(??___xxtofl+2)^0,f,c
  2856  0011D4  1E0C               	comf	(??___xxtofl+3)^0,f,c
  2857  0011D6  2A09               	incf	??___xxtofl^0,f,c
  2858  0011D8  0E00               	movlw	0
  2859  0011DA  220A               	addwfc	(??___xxtofl+1)^0,f,c
  2860  0011DC  220B               	addwfc	(??___xxtofl+2)^0,f,c
  2861  0011DE  220C               	addwfc	(??___xxtofl+3)^0,f,c
  2862  0011E0  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  2863  0011E4  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  2864  0011E8  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  2865  0011EC  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  2866  0011F0  EF02  F009         	goto	l2977
  2867  0011F4                     l1195:
  2868  0011F4  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  2869  0011F8  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2870  0011FC  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2871  001200  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2872  001204                     l2977:
  2873  001204  5005               	movf	___xxtofl@val^0,w,c
  2874  001206  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  2875  001208  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  2876  00120A  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  2877  00120C  A4D8               	btfss	status,2,c
  2878  00120E  EF0B  F009         	goto	u3141
  2879  001212  EF0D  F009         	goto	u3140
  2880  001216                     u3141:
  2881  001216  EF17  F009         	goto	l2983
  2882  00121A                     u3140:
  2883  00121A  0E00               	movlw	0
  2884  00121C  6E05               	movwf	?___xxtofl^0,c
  2885  00121E  0E00               	movlw	0
  2886  001220  6E06               	movwf	(?___xxtofl+1)^0,c
  2887  001222  0E00               	movlw	0
  2888  001224  6E07               	movwf	(?___xxtofl+2)^0,c
  2889  001226  0E00               	movlw	0
  2890  001228  6E08               	movwf	(?___xxtofl+3)^0,c
  2891  00122A  EFA8  F009         	goto	l1198
  2892  00122E                     l2983:
  2893  00122E  0E96               	movlw	150
  2894  001230  6E0E               	movwf	___xxtofl@exp^0,c
  2895  001232  EF21  F009         	goto	l2987
  2896  001236                     l2985:
  2897  001236  2A0E               	incf	___xxtofl@exp^0,f,c
  2898  001238  90D8               	bcf	status,0,c
  2899  00123A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2900  00123C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2901  00123E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2902  001240  320F               	rrcf	___xxtofl@arg^0,f,c
  2903  001242                     l2987:
  2904  001242  0E00               	movlw	0
  2905  001244  140F               	andwf	___xxtofl@arg^0,w,c
  2906  001246  6E09               	movwf	??___xxtofl^0,c
  2907  001248  0E00               	movlw	0
  2908  00124A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2909  00124C  6E0A               	movwf	(??___xxtofl+1)^0,c
  2910  00124E  0E00               	movlw	0
  2911  001250  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2912  001252  6E0B               	movwf	(??___xxtofl+2)^0,c
  2913  001254  0EFE               	movlw	254
  2914  001256  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2915  001258  6E0C               	movwf	(??___xxtofl+3)^0,c
  2916  00125A  5009               	movf	??___xxtofl^0,w,c
  2917  00125C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2918  00125E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2919  001260  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2920  001262  A4D8               	btfss	status,2,c
  2921  001264  EF36  F009         	goto	u3151
  2922  001268  EF38  F009         	goto	u3150
  2923  00126C                     u3151:
  2924  00126C  EF1B  F009         	goto	l2985
  2925  001270                     u3150:
  2926  001270  EF46  F009         	goto	l1202
  2927  001274                     l2989:
  2928  001274  2A0E               	incf	___xxtofl@exp^0,f,c
  2929  001276  0E01               	movlw	1
  2930  001278  260F               	addwf	___xxtofl@arg^0,f,c
  2931  00127A  0E00               	movlw	0
  2932  00127C  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  2933  00127E  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  2934  001280  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  2935  001282  90D8               	bcf	status,0,c
  2936  001284  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2937  001286  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2938  001288  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2939  00128A  320F               	rrcf	___xxtofl@arg^0,f,c
  2940  00128C                     l1202:
  2941  00128C  0E00               	movlw	0
  2942  00128E  140F               	andwf	___xxtofl@arg^0,w,c
  2943  001290  6E09               	movwf	??___xxtofl^0,c
  2944  001292  0E00               	movlw	0
  2945  001294  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2946  001296  6E0A               	movwf	(??___xxtofl+1)^0,c
  2947  001298  0E00               	movlw	0
  2948  00129A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2949  00129C  6E0B               	movwf	(??___xxtofl+2)^0,c
  2950  00129E  0EFF               	movlw	255
  2951  0012A0  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2952  0012A2  6E0C               	movwf	(??___xxtofl+3)^0,c
  2953  0012A4  5009               	movf	??___xxtofl^0,w,c
  2954  0012A6  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2955  0012A8  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2956  0012AA  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2957  0012AC  A4D8               	btfss	status,2,c
  2958  0012AE  EF5B  F009         	goto	u3161
  2959  0012B2  EF5D  F009         	goto	u3160
  2960  0012B6                     u3161:
  2961  0012B6  EF3A  F009         	goto	l2989
  2962  0012BA                     u3160:
  2963  0012BA  EF65  F009         	goto	l2997
  2964  0012BE                     l2995:
  2965  0012BE  060E               	decf	___xxtofl@exp^0,f,c
  2966  0012C0  90D8               	bcf	status,0,c
  2967  0012C2  360F               	rlcf	___xxtofl@arg^0,f,c
  2968  0012C4  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  2969  0012C6  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  2970  0012C8  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  2971  0012CA                     l2997:
  2972  0012CA  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  2973  0012CC  EF6A  F009         	goto	u3171
  2974  0012D0  EF6C  F009         	goto	u3170
  2975  0012D4                     u3171:
  2976  0012D4  EF74  F009         	goto	l1209
  2977  0012D8                     u3170:
  2978  0012D8  0E02               	movlw	2
  2979  0012DA  600E               	cpfslt	___xxtofl@exp^0,c
  2980  0012DC  EF72  F009         	goto	u3181
  2981  0012E0  EF74  F009         	goto	u3180
  2982  0012E4                     u3181:
  2983  0012E4  EF5F  F009         	goto	l2995
  2984  0012E8                     u3180:
  2985  0012E8                     l1209:
  2986  0012E8  B00E               	btfsc	___xxtofl@exp^0,0,c
  2987  0012EA  EF79  F009         	goto	u3191
  2988  0012EE  EF7B  F009         	goto	u3190
  2989  0012F2                     u3191:
  2990  0012F2  EF7C  F009         	goto	l3003
  2991  0012F6                     u3190:
  2992  0012F6  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  2993  0012F8                     l3003:
  2994  0012F8  90D8               	bcf	status,0,c
  2995  0012FA  320E               	rrcf	___xxtofl@exp^0,f,c
  2996  0012FC  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  2997  001300  6A0A               	clrf	(??___xxtofl+1)^0,c
  2998  001302  6A0B               	clrf	(??___xxtofl+2)^0,c
  2999  001304  6A0C               	clrf	(??___xxtofl+3)^0,c
  3000  001306  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  3001  00130A  6A0B               	clrf	(??___xxtofl+2)^0,c
  3002  00130C  6A0A               	clrf	(??___xxtofl+1)^0,c
  3003  00130E  6A09               	clrf	??___xxtofl^0,c
  3004  001310  5009               	movf	??___xxtofl^0,w,c
  3005  001312  120F               	iorwf	___xxtofl@arg^0,f,c
  3006  001314  500A               	movf	(??___xxtofl+1)^0,w,c
  3007  001316  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  3008  001318  500B               	movf	(??___xxtofl+2)^0,w,c
  3009  00131A  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  3010  00131C  500C               	movf	(??___xxtofl+3)^0,w,c
  3011  00131E  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  3012  001320  500D               	movf	___xxtofl@sign^0,w,c
  3013  001322  B4D8               	btfsc	status,2,c
  3014  001324  EF96  F009         	goto	u3201
  3015  001328  EF98  F009         	goto	u3200
  3016  00132C                     u3201:
  3017  00132C  EFA0  F009         	goto	l3013
  3018  001330                     u3200:
  3019  001330  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3020  001332  EF9F  F009         	goto	u3210
  3021  001336  EF9D  F009         	goto	u3211
  3022  00133A                     u3211:
  3023  00133A  EFA0  F009         	goto	l3013
  3024  00133E                     u3210:
  3025  00133E  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  3026  001340                     l3013:
  3027  001340  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  3028  001344  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  3029  001348  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  3030  00134C  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  3031  001350                     l1198:
  3032  001350  0012               	return		;funcret
  3033  001352                     __end_of___xxtofl:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function ___lwdiv *****************
  3037 ;; Defined at:
  3038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  dividend        2    4[COMRAM] unsigned int 
  3041 ;;  divisor         2    6[COMRAM] unsigned int 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  quotient        2    9[COMRAM] unsigned int 
  3044 ;;  counter         1    8[COMRAM] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2    4[COMRAM] unsigned int 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3055 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3057 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;Total ram usage:        7 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 5
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_read_card
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text7
  3069  0016E4                     __ptext7:
  3070                           	callstack 0
  3071  0016E4                     ___lwdiv:
  3072                           	callstack 24
  3073  0016E4  0E00               	movlw	0
  3074  0016E6  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  3075  0016E8  0E00               	movlw	0
  3076  0016EA  6E0A               	movwf	___lwdiv@quotient^0,c
  3077  0016EC  5007               	movf	___lwdiv@divisor^0,w,c
  3078  0016EE  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3079  0016F0  B4D8               	btfsc	status,2,c
  3080  0016F2  EF7D  F00B         	goto	u3091
  3081  0016F6  EF7F  F00B         	goto	u3090
  3082  0016FA                     u3091:
  3083  0016FA  EFA7  F00B         	goto	l1031
  3084  0016FE                     u3090:
  3085  0016FE  0E01               	movlw	1
  3086  001700  6E09               	movwf	___lwdiv@counter^0,c
  3087  001702  EF87  F00B         	goto	l2957
  3088  001706                     l2955:
  3089  001706  90D8               	bcf	status,0,c
  3090  001708  3607               	rlcf	___lwdiv@divisor^0,f,c
  3091  00170A  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3092  00170C  2A09               	incf	___lwdiv@counter^0,f,c
  3093  00170E                     l2957:
  3094  00170E  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
  3095  001710  EF8C  F00B         	goto	u3101
  3096  001714  EF8E  F00B         	goto	u3100
  3097  001718                     u3101:
  3098  001718  EF83  F00B         	goto	l2955
  3099  00171C                     u3100:
  3100  00171C                     l2959:
  3101  00171C  90D8               	bcf	status,0,c
  3102  00171E  360A               	rlcf	___lwdiv@quotient^0,f,c
  3103  001720  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3104  001722  5007               	movf	___lwdiv@divisor^0,w,c
  3105  001724  5C05               	subwf	___lwdiv@dividend^0,w,c
  3106  001726  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  3107  001728  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3108  00172A  A0D8               	btfss	status,0,c
  3109  00172C  EF9A  F00B         	goto	u3111
  3110  001730  EF9C  F00B         	goto	u3110
  3111  001734                     u3111:
  3112  001734  EFA1  F00B         	goto	l2967
  3113  001738                     u3110:
  3114  001738  5007               	movf	___lwdiv@divisor^0,w,c
  3115  00173A  5E05               	subwf	___lwdiv@dividend^0,f,c
  3116  00173C  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  3117  00173E  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3118  001740  800A               	bsf	___lwdiv@quotient^0,0,c
  3119  001742                     l2967:
  3120  001742  90D8               	bcf	status,0,c
  3121  001744  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3122  001746  3207               	rrcf	___lwdiv@divisor^0,f,c
  3123  001748  2E09               	decfsz	___lwdiv@counter^0,f,c
  3124  00174A  EF8E  F00B         	goto	l2959
  3125  00174E                     l1031:
  3126  00174E  C00A  F005         	movff	___lwdiv@quotient,?___lwdiv
  3127  001752  C00B  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3128  001756  0012               	return		;funcret
  3129  001758                     __end_of___lwdiv:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function ___flge *****************
  3133 ;; Defined at:
  3134 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  ff1             4   18[COMRAM] unsigned int 
  3137 ;;  ff2             4   22[COMRAM] unsigned int 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;		None               void
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3149 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;Total ram usage:       12 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 5
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_read_card
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text8
  3164  001352                     __ptext8:
  3165                           	callstack 0
  3166  001352                     ___flge:
  3167                           	callstack 24
  3168  001352  0E00               	movlw	0
  3169  001354  1413               	andwf	___flge@ff1^0,w,c
  3170  001356  6E1B               	movwf	??___flge^0,c
  3171  001358  0E00               	movlw	0
  3172  00135A  1414               	andwf	(___flge@ff1+1)^0,w,c
  3173  00135C  6E1C               	movwf	(??___flge+1)^0,c
  3174  00135E  0E80               	movlw	128
  3175  001360  1415               	andwf	(___flge@ff1+2)^0,w,c
  3176  001362  6E1D               	movwf	(??___flge+2)^0,c
  3177  001364  0E7F               	movlw	127
  3178  001366  1416               	andwf	(___flge@ff1+3)^0,w,c
  3179  001368  6E1E               	movwf	(??___flge+3)^0,c
  3180  00136A  501B               	movf	??___flge^0,w,c
  3181  00136C  101C               	iorwf	(??___flge+1)^0,w,c
  3182  00136E  101D               	iorwf	(??___flge+2)^0,w,c
  3183  001370  101E               	iorwf	(??___flge+3)^0,w,c
  3184  001372  A4D8               	btfss	status,2,c
  3185  001374  EFBE  F009         	goto	u3041
  3186  001378  EFC0  F009         	goto	u3040
  3187  00137C                     u3041:
  3188  00137C  EFC8  F009         	goto	l2931
  3189  001380                     u3040:
  3190  001380  0E00               	movlw	0
  3191  001382  6E13               	movwf	___flge@ff1^0,c
  3192  001384  0E00               	movlw	0
  3193  001386  6E14               	movwf	(___flge@ff1+1)^0,c
  3194  001388  0E00               	movlw	0
  3195  00138A  6E15               	movwf	(___flge@ff1+2)^0,c
  3196  00138C  0E00               	movlw	0
  3197  00138E  6E16               	movwf	(___flge@ff1+3)^0,c
  3198  001390                     l2931:
  3199  001390  0E00               	movlw	0
  3200  001392  1417               	andwf	___flge@ff2^0,w,c
  3201  001394  6E1B               	movwf	??___flge^0,c
  3202  001396  0E00               	movlw	0
  3203  001398  1418               	andwf	(___flge@ff2+1)^0,w,c
  3204  00139A  6E1C               	movwf	(??___flge+1)^0,c
  3205  00139C  0E80               	movlw	128
  3206  00139E  1419               	andwf	(___flge@ff2+2)^0,w,c
  3207  0013A0  6E1D               	movwf	(??___flge+2)^0,c
  3208  0013A2  0E7F               	movlw	127
  3209  0013A4  141A               	andwf	(___flge@ff2+3)^0,w,c
  3210  0013A6  6E1E               	movwf	(??___flge+3)^0,c
  3211  0013A8  501B               	movf	??___flge^0,w,c
  3212  0013AA  101C               	iorwf	(??___flge+1)^0,w,c
  3213  0013AC  101D               	iorwf	(??___flge+2)^0,w,c
  3214  0013AE  101E               	iorwf	(??___flge+3)^0,w,c
  3215  0013B0  A4D8               	btfss	status,2,c
  3216  0013B2  EFDD  F009         	goto	u3051
  3217  0013B6  EFDF  F009         	goto	u3050
  3218  0013BA                     u3051:
  3219  0013BA  EFE7  F009         	goto	l2935
  3220  0013BE                     u3050:
  3221  0013BE  0E00               	movlw	0
  3222  0013C0  6E17               	movwf	___flge@ff2^0,c
  3223  0013C2  0E00               	movlw	0
  3224  0013C4  6E18               	movwf	(___flge@ff2+1)^0,c
  3225  0013C6  0E00               	movlw	0
  3226  0013C8  6E19               	movwf	(___flge@ff2+2)^0,c
  3227  0013CA  0E00               	movlw	0
  3228  0013CC  6E1A               	movwf	(___flge@ff2+3)^0,c
  3229  0013CE                     l2935:
  3230  0013CE  AE16               	btfss	(___flge@ff1+3)^0,7,c
  3231  0013D0  EFEC  F009         	goto	u3061
  3232  0013D4  EFEE  F009         	goto	u3060
  3233  0013D8                     u3061:
  3234  0013D8  EFF7  F009         	goto	l2939
  3235  0013DC                     u3060:
  3236  0013DC  6C13               	negf	___flge@ff1^0,c
  3237  0013DE  1E14               	comf	(___flge@ff1+1)^0,f,c
  3238  0013E0  B0D8               	btfsc	status,0,c
  3239  0013E2  2A14               	incf	(___flge@ff1+1)^0,f,c
  3240  0013E4  1E15               	comf	(___flge@ff1+2)^0,f,c
  3241  0013E6  B0D8               	btfsc	status,0,c
  3242  0013E8  2A15               	incf	(___flge@ff1+2)^0,f,c
  3243  0013EA  0E80               	movlw	128
  3244  0013EC  5616               	subfwb	(___flge@ff1+3)^0,f,c
  3245  0013EE                     l2939:
  3246  0013EE  AE1A               	btfss	(___flge@ff2+3)^0,7,c
  3247  0013F0  EFFC  F009         	goto	u3071
  3248  0013F4  EFFE  F009         	goto	u3070
  3249  0013F8                     u3071:
  3250  0013F8  EF07  F00A         	goto	l805
  3251  0013FC                     u3070:
  3252  0013FC  6C17               	negf	___flge@ff2^0,c
  3253  0013FE  1E18               	comf	(___flge@ff2+1)^0,f,c
  3254  001400  B0D8               	btfsc	status,0,c
  3255  001402  2A18               	incf	(___flge@ff2+1)^0,f,c
  3256  001404  1E19               	comf	(___flge@ff2+2)^0,f,c
  3257  001406  B0D8               	btfsc	status,0,c
  3258  001408  2A19               	incf	(___flge@ff2+2)^0,f,c
  3259  00140A  0E80               	movlw	128
  3260  00140C  561A               	subfwb	(___flge@ff2+3)^0,f,c
  3261  00140E                     l805:
  3262  00140E  0E00               	movlw	0
  3263  001410  1A13               	xorwf	___flge@ff1^0,f,c
  3264  001412  0E00               	movlw	0
  3265  001414  1A14               	xorwf	(___flge@ff1+1)^0,f,c
  3266  001416  0E00               	movlw	0
  3267  001418  1A15               	xorwf	(___flge@ff1+2)^0,f,c
  3268  00141A  0E80               	movlw	128
  3269  00141C  1A16               	xorwf	(___flge@ff1+3)^0,f,c
  3270  00141E  0E00               	movlw	0
  3271  001420  1A17               	xorwf	___flge@ff2^0,f,c
  3272  001422  0E00               	movlw	0
  3273  001424  1A18               	xorwf	(___flge@ff2+1)^0,f,c
  3274  001426  0E00               	movlw	0
  3275  001428  1A19               	xorwf	(___flge@ff2+2)^0,f,c
  3276  00142A  0E80               	movlw	128
  3277  00142C  1A1A               	xorwf	(___flge@ff2+3)^0,f,c
  3278  00142E  5017               	movf	___flge@ff2^0,w,c
  3279  001430  5C13               	subwf	___flge@ff1^0,w,c
  3280  001432  5018               	movf	(___flge@ff2+1)^0,w,c
  3281  001434  5814               	subwfb	(___flge@ff1+1)^0,w,c
  3282  001436  5019               	movf	(___flge@ff2+2)^0,w,c
  3283  001438  5815               	subwfb	(___flge@ff1+2)^0,w,c
  3284  00143A  501A               	movf	(___flge@ff2+3)^0,w,c
  3285  00143C  5816               	subwfb	(___flge@ff1+3)^0,w,c
  3286  00143E  B0D8               	btfsc	status,0,c
  3287  001440  EF24  F00A         	goto	u3081
  3288  001444  EF26  F00A         	goto	u3080
  3289  001448                     u3081:
  3290  001448  EF29  F00A         	goto	l2945
  3291  00144C                     u3080:
  3292  00144C  90D8               	bcf	status,0,c
  3293  00144E  EF2A  F00A         	goto	l810
  3294  001452                     l2945:
  3295  001452  80D8               	bsf	status,0,c
  3296  001454                     l810:
  3297  001454  0012               	return		;funcret
  3298  001456                     __end_of___flge:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function _interrupts_init *****************
  3302 ;; Defined at:
  3303 ;;		line 18 in file "interrupts.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;Total ram usage:        1 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 8
  3324 ;; This function calls:
  3325 ;;		_colorclick_writetoaddr
  3326 ;;		_interrupts_clear
  3327 ;; This function is called by:
  3328 ;;		_main
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text9
  3333  001758                     __ptext9:
  3334                           	callstack 0
  3335  001758                     _interrupts_init:
  3336                           	callstack 22
  3337  001758                     
  3338                           ;interrupts.c: 19:     TRISBbits.TRISB1 = 1;
  3339  001758  8282               	bsf	130,1,c	;volatile
  3340                           
  3341                           ;interrupts.c: 20:     ANSELBbits.ANSELB1 = 0;
  3342  00175A  010E               	movlb	14	; () banked
  3343  00175C  939A               	bcf	154,1,b	;volatile
  3344  00175E                     
  3345                           ; BSR set to: 14
  3346                           ;interrupts.c: 21:     INT1PPS=0x09;
  3347  00175E  0E09               	movlw	9
  3348  001760  010D               	movlb	13	; () banked
  3349  001762  6FF1               	movwf	241,b	;volatile
  3350  001764                     
  3351                           ; BSR set to: 13
  3352                           ;interrupts.c: 23:     PIE0bits.INT1IE = 1;
  3353  001764  010E               	movlb	14	; () banked
  3354  001766  8329               	bsf	41,1,b	;volatile
  3355  001768                     
  3356                           ; BSR set to: 14
  3357                           ;interrupts.c: 26:     IPR0bits.INT1IP = 1;
  3358  001768  831F               	bsf	31,1,b	;volatile
  3359  00176A                     
  3360                           ; BSR set to: 14
  3361                           ;interrupts.c: 29:     interrupts_clear();
  3362  00176A  ECCE  F00D         	call	_interrupts_clear	;wreg free
  3363  00176E                     
  3364                           ;interrupts.c: 30:     colorclick_writetoaddr(0x00, 0b10011);
  3365  00176E  0E13               	movlw	19
  3366  001770  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3367  001772  0E00               	movlw	0
  3368  001774  ECA1  F00D         	call	_colorclick_writetoaddr
  3369  001778                     
  3370                           ;interrupts.c: 31:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3371  001778  0E3F               	movlw	63
  3372  00177A  6E09               	movwf	??_interrupts_init^0,c
  3373  00177C  0E55               	movlw	85
  3374  00177E                     u3887:
  3375  00177E  2EE8               	decfsz	wreg,f,c
  3376  001780  D7FE               	bra	u3887
  3377  001782  2E09               	decfsz	??_interrupts_init^0,f,c
  3378  001784  D7FC               	bra	u3887
  3379  001786  F000               	nop	
  3380  001788                     
  3381                           ;interrupts.c: 32:     colorclick_writetoaddr(0x0C, 0b0100);
  3382  001788  0E04               	movlw	4
  3383  00178A  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3384  00178C  0E0C               	movlw	12
  3385  00178E  ECA1  F00D         	call	_colorclick_writetoaddr
  3386  001792                     
  3387                           ;interrupts.c: 33:     colorclick_writetoaddr(0x04, 0x14);
  3388  001792  0E14               	movlw	20
  3389  001794  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3390  001796  0E04               	movlw	4
  3391  001798  ECA1  F00D         	call	_colorclick_writetoaddr
  3392  00179C                     
  3393                           ;interrupts.c: 34:     colorclick_writetoaddr(0x05, 0x05);
  3394  00179C  0E05               	movlw	5
  3395  00179E  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3396  0017A0  0E05               	movlw	5
  3397  0017A2  ECA1  F00D         	call	_colorclick_writetoaddr
  3398  0017A6                     
  3399                           ;interrupts.c: 35:     colorclick_writetoaddr(0x06, 0x6C);
  3400  0017A6  0E6C               	movlw	108
  3401  0017A8  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3402  0017AA  0E06               	movlw	6
  3403  0017AC  ECA1  F00D         	call	_colorclick_writetoaddr
  3404  0017B0                     
  3405                           ;interrupts.c: 36:     colorclick_writetoaddr(0x07, 0x07);
  3406  0017B0  0E07               	movlw	7
  3407  0017B2  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3408  0017B4  0E07               	movlw	7
  3409  0017B6  ECA1  F00D         	call	_colorclick_writetoaddr
  3410  0017BA                     
  3411                           ;interrupts.c: 38:     INTCONbits.IPEN = 1;
  3412  0017BA  8AF2               	bsf	242,5,c	;volatile
  3413  0017BC                     
  3414                           ;interrupts.c: 39:     INTCONbits.INT1EDG = 0;
  3415  0017BC  92F2               	bcf	242,1,c	;volatile
  3416  0017BE                     
  3417                           ;interrupts.c: 40:     INTCONbits.PEIE = 1;
  3418  0017BE  8CF2               	bsf	242,6,c	;volatile
  3419  0017C0                     
  3420                           ;interrupts.c: 41:     INTCONbits.GIE = 1;
  3421  0017C0  8EF2               	bsf	242,7,c	;volatile
  3422  0017C2  0012               	return		;funcret
  3423  0017C4                     __end_of_interrupts_init:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _interrupts_clear *****************
  3427 ;; Defined at:
  3428 ;;		line 47 in file "interrupts.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 7
  3449 ;; This function calls:
  3450 ;;		_I2C_2_Master_Start
  3451 ;;		_I2C_2_Master_Stop
  3452 ;;		_I2C_2_Master_Write
  3453 ;; This function is called by:
  3454 ;;		_interrupts_init
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text10
  3459  001B9C                     __ptext10:
  3460                           	callstack 0
  3461  001B9C                     _interrupts_clear:
  3462                           	callstack 22
  3463  001B9C                     
  3464                           ;interrupts.c: 48:     I2C_2_Master_Start();
  3465  001B9C  EC0B  F00E         	call	_I2C_2_Master_Start	;wreg free
  3466                           
  3467                           ;interrupts.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  3468  001BA0  0E52               	movlw	82
  3469  001BA2  ECEF  F00D         	call	_I2C_2_Master_Write
  3470                           
  3471                           ;interrupts.c: 50:     I2C_2_Master_Write(0b11100110);
  3472  001BA6  0EE6               	movlw	230
  3473  001BA8  ECEF  F00D         	call	_I2C_2_Master_Write
  3474                           
  3475                           ;interrupts.c: 51:     I2C_2_Master_Stop();
  3476  001BAC  EC06  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3477  001BB0  0012               	return		;funcret
  3478  001BB2                     __end_of_interrupts_clear:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _forward *****************
  3482 ;; Defined at:
  3483 ;;		line 130 in file "dc_motor.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  mL              2   29[COMRAM] PTR struct .
  3486 ;;		 -> main@motorL(9), 
  3487 ;;  mR              2   31[COMRAM] PTR struct .
  3488 ;;		 -> main@motorR(9), 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;Total ram usage:        6 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 7
  3507 ;; This function calls:
  3508 ;;		_setMotorPWM
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text11
  3515  0015B4                     __ptext11:
  3516                           	callstack 0
  3517  0015B4                     _forward:
  3518                           	callstack 23
  3519  0015B4                     
  3520                           ;dc_motor.c: 130: void forward(DC_motor *mL, DC_motor *mR);dc_motor.c: 131: {;dc_motor.c
      +                          : 133:     mL->direction = 1;
  3521  0015B4  EE20 F001          	lfsr	2,1
  3522  0015B8  501E               	movf	forward@mL^0,w,c
  3523  0015BA  26D9               	addwf	fsr2l,f,c
  3524  0015BC  501F               	movf	(forward@mL+1)^0,w,c
  3525  0015BE  22DA               	addwfc	fsr2h,f,c
  3526  0015C0  0E01               	movlw	1
  3527  0015C2  6EDF               	movwf	indf2,c
  3528                           
  3529                           ;dc_motor.c: 134:     mR->direction = 1;
  3530  0015C4  EE20 F001          	lfsr	2,1
  3531  0015C8  5020               	movf	forward@mR^0,w,c
  3532  0015CA  26D9               	addwf	fsr2l,f,c
  3533  0015CC  5021               	movf	(forward@mR+1)^0,w,c
  3534  0015CE  22DA               	addwfc	fsr2h,f,c
  3535  0015D0  0E01               	movlw	1
  3536  0015D2  6EDF               	movwf	indf2,c
  3537                           
  3538                           ;dc_motor.c: 137:     while(((mL->power)<100) && ((mR->power)<100)){
  3539  0015D4  EF0E  F00B         	goto	l237
  3540  0015D8                     l3019:
  3541                           
  3542                           ;dc_motor.c: 138:         mL->power+=1;
  3543  0015D8  C01E  FFD9         	movff	forward@mL,fsr2l
  3544  0015DC  C01F  FFDA         	movff	forward@mL+1,fsr2h
  3545  0015E0  2ADF               	incf	indf2,f,c
  3546                           
  3547                           ;dc_motor.c: 139:         mR->power+=1;
  3548  0015E2  C020  FFD9         	movff	forward@mR,fsr2l
  3549  0015E6  C021  FFDA         	movff	forward@mR+1,fsr2h
  3550  0015EA  2ADF               	incf	indf2,f,c
  3551  0015EC                     
  3552                           ;dc_motor.c: 141:         setMotorPWM(mL);
  3553  0015EC  C01E  F013         	movff	forward@mL,setMotorPWM@m
  3554  0015F0  C01F  F014         	movff	forward@mL+1,setMotorPWM@m+1
  3555  0015F4  ECE5  F007         	call	_setMotorPWM	;wreg free
  3556  0015F8                     
  3557                           ;dc_motor.c: 142:         setMotorPWM(mR);
  3558  0015F8  C020  F013         	movff	forward@mR,setMotorPWM@m
  3559  0015FC  C021  F014         	movff	forward@mR+1,setMotorPWM@m+1
  3560  001600  ECE5  F007         	call	_setMotorPWM	;wreg free
  3561  001604                     
  3562                           ;dc_motor.c: 143:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3563  001604  0E09               	movlw	9
  3564  001606  6E23               	movwf	(??_forward+1)^0,c
  3565  001608  0E1E               	movlw	30
  3566  00160A  6E22               	movwf	??_forward^0,c
  3567  00160C  0EE4               	movlw	228
  3568  00160E                     u3897:
  3569  00160E  2EE8               	decfsz	wreg,f,c
  3570  001610  D7FE               	bra	u3897
  3571  001612  2E22               	decfsz	??_forward^0,f,c
  3572  001614  D7FC               	bra	u3897
  3573  001616  2E23               	decfsz	(??_forward+1)^0,f,c
  3574  001618  D7FA               	bra	u3897
  3575  00161A  D000               	nop2	
  3576  00161C                     l237:
  3577                           
  3578                           ;dc_motor.c: 137:     while(((mL->power)<100) && ((mR->power)<100)){
  3579  00161C  C01E  FFD9         	movff	forward@mL,fsr2l
  3580  001620  C01F  FFDA         	movff	forward@mL+1,fsr2h
  3581  001624  0E64               	movlw	100
  3582  001626  60DF               	cpfslt	indf2,c
  3583  001628  EF18  F00B         	goto	u3221
  3584  00162C  EF1A  F00B         	goto	u3220
  3585  001630                     u3221:
  3586  001630  EF26  F00B         	goto	l242
  3587  001634                     u3220:
  3588  001634  C020  FFD9         	movff	forward@mR,fsr2l
  3589  001638  C021  FFDA         	movff	forward@mR+1,fsr2h
  3590  00163C  0E63               	movlw	99
  3591  00163E  64DF               	cpfsgt	indf2,c
  3592  001640  EF24  F00B         	goto	u3231
  3593  001644  EF26  F00B         	goto	u3230
  3594  001648                     u3231:
  3595  001648  EFEC  F00A         	goto	l3019
  3596  00164C                     u3230:
  3597  00164C                     l242:
  3598  00164C  0012               	return		;funcret
  3599  00164E                     __end_of_forward:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function _setMotorPWM *****************
  3603 ;; Defined at:
  3604 ;;		line 52 in file "dc_motor.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  m               2   18[COMRAM] PTR struct .
  3607 ;;		 -> main@motorR(9), main@motorL(9), 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  PWMduty         2   27[COMRAM] int 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;Total ram usage:       11 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 6
  3626 ;; This function calls:
  3627 ;;		___awdiv
  3628 ;;		___wmul
  3629 ;; This function is called by:
  3630 ;;		_forward
  3631 ;;		_reverse
  3632 ;;		_stop
  3633 ;;		_turnLeft
  3634 ;;		_turnRight
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text12
  3639  000FCA                     __ptext12:
  3640                           	callstack 0
  3641  000FCA                     _setMotorPWM:
  3642                           	callstack 23
  3643  000FCA                     
  3644                           ;dc_motor.c: 52: void setMotorPWM(DC_motor *m);dc_motor.c: 53: {;dc_motor.c: 54:  int PW
      +                          Mduty;;dc_motor.c: 56:  if (m->direction){
  3645  000FCA  EE20 F001          	lfsr	2,1
  3646  000FCE  5013               	movf	setMotorPWM@m^0,w,c
  3647  000FD0  26D9               	addwf	fsr2l,f,c
  3648  000FD2  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3649  000FD4  22DA               	addwfc	fsr2h,f,c
  3650  000FD6  50DF               	movf	indf2,w,c
  3651  000FD8  B4D8               	btfsc	status,2,c
  3652  000FDA  EFF1  F007         	goto	u2701
  3653  000FDE  EFF3  F007         	goto	u2700
  3654  000FE2                     u2701:
  3655  000FE2  EF24  F008         	goto	l2807
  3656  000FE6                     u2700:
  3657  000FE6                     
  3658                           ;dc_motor.c: 57:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  3659  000FE6  C013  FFD9         	movff	setMotorPWM@m,fsr2l
  3660  000FEA  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3661  000FEE  50DF               	movf	indf2,w,c
  3662  000FF0  6E15               	movwf	??_setMotorPWM^0,c
  3663  000FF2  5015               	movf	??_setMotorPWM^0,w,c
  3664  000FF4  6E05               	movwf	___wmul@multiplier^0,c
  3665  000FF6  6A06               	clrf	(___wmul@multiplier+1)^0,c
  3666  000FF8  EE20 F007          	lfsr	2,7
  3667  000FFC  5013               	movf	setMotorPWM@m^0,w,c
  3668  000FFE  26D9               	addwf	fsr2l,f,c
  3669  001000  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3670  001002  22DA               	addwfc	fsr2h,f,c
  3671  001004  CFDE F007          	movff	postinc2,___wmul@multiplicand
  3672  001008  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  3673  00100C  EC6C  F00D         	call	___wmul	;wreg free
  3674  001010  C005  F00B         	movff	?___wmul,___awdiv@dividend
  3675  001014  C006  F00C         	movff	?___wmul+1,___awdiv@dividend+1
  3676  001018  0E00               	movlw	0
  3677  00101A  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  3678  00101C  0E64               	movlw	100
  3679  00101E  6E0D               	movwf	___awdiv@divisor^0,c
  3680  001020  EC2B  F00A         	call	___awdiv	;wreg free
  3681  001024  EE20 F007          	lfsr	2,7
  3682  001028  5013               	movf	setMotorPWM@m^0,w,c
  3683  00102A  26D9               	addwf	fsr2l,f,c
  3684  00102C  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3685  00102E  22DA               	addwfc	fsr2h,f,c
  3686  001030  CFDE F016          	movff	postinc2,??_setMotorPWM+1
  3687  001034  CFDD F017          	movff	postdec2,??_setMotorPWM+2
  3688  001038  500B               	movf	?___awdiv^0,w,c
  3689  00103A  5C16               	subwf	(??_setMotorPWM+1)^0,w,c
  3690  00103C  6E1C               	movwf	setMotorPWM@PWMduty^0,c
  3691  00103E  500C               	movf	(?___awdiv+1)^0,w,c
  3692  001040  5817               	subwfb	(??_setMotorPWM+2)^0,w,c
  3693  001042  6E1D               	movwf	(setMotorPWM@PWMduty+1)^0,c
  3694                           
  3695                           ;dc_motor.c: 58:  } else {
  3696  001044  EF47  F008         	goto	l2809
  3697  001048                     l2807:
  3698                           
  3699                           ;dc_motor.c: 59:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3700  001048  C013  FFD9         	movff	setMotorPWM@m,fsr2l
  3701  00104C  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3702  001050  50DF               	movf	indf2,w,c
  3703  001052  6E15               	movwf	??_setMotorPWM^0,c
  3704  001054  5015               	movf	??_setMotorPWM^0,w,c
  3705  001056  6E05               	movwf	___wmul@multiplier^0,c
  3706  001058  6A06               	clrf	(___wmul@multiplier+1)^0,c
  3707  00105A  EE20 F007          	lfsr	2,7
  3708  00105E  5013               	movf	setMotorPWM@m^0,w,c
  3709  001060  26D9               	addwf	fsr2l,f,c
  3710  001062  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3711  001064  22DA               	addwfc	fsr2h,f,c
  3712  001066  CFDE F007          	movff	postinc2,___wmul@multiplicand
  3713  00106A  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  3714  00106E  EC6C  F00D         	call	___wmul	;wreg free
  3715  001072  C005  F00B         	movff	?___wmul,___awdiv@dividend
  3716  001076  C006  F00C         	movff	?___wmul+1,___awdiv@dividend+1
  3717  00107A  0E00               	movlw	0
  3718  00107C  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  3719  00107E  0E64               	movlw	100
  3720  001080  6E0D               	movwf	___awdiv@divisor^0,c
  3721  001082  EC2B  F00A         	call	___awdiv	;wreg free
  3722  001086  C00B  F01C         	movff	?___awdiv,setMotorPWM@PWMduty
  3723  00108A  C00C  F01D         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  3724  00108E                     l2809:
  3725                           
  3726                           ;dc_motor.c: 62:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  3727  00108E  EE20 F002          	lfsr	2,2
  3728  001092  5013               	movf	setMotorPWM@m^0,w,c
  3729  001094  26D9               	addwf	fsr2l,f,c
  3730  001096  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3731  001098  22DA               	addwfc	fsr2h,f,c
  3732  00109A  CFDE F015          	movff	postinc2,??_setMotorPWM
  3733  00109E  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  3734  0010A2  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  3735  0010A6  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3736  0010AA  C01C  FFDF         	movff	setMotorPWM@PWMduty,indf2
  3737  0010AE                     
  3738                           ;dc_motor.c: 64:  if (m->direction){
  3739  0010AE  EE20 F001          	lfsr	2,1
  3740  0010B2  5013               	movf	setMotorPWM@m^0,w,c
  3741  0010B4  26D9               	addwf	fsr2l,f,c
  3742  0010B6  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3743  0010B8  22DA               	addwfc	fsr2h,f,c
  3744  0010BA  50DF               	movf	indf2,w,c
  3745  0010BC  B4D8               	btfsc	status,2,c
  3746  0010BE  EF63  F008         	goto	u2711
  3747  0010C2  EF65  F008         	goto	u2710
  3748  0010C6                     u2711:
  3749  0010C6  EF9A  F008         	goto	l2815
  3750  0010CA                     u2710:
  3751  0010CA                     
  3752                           ;dc_motor.c: 65:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  3753  0010CA  EE20 F004          	lfsr	2,4
  3754  0010CE  5013               	movf	setMotorPWM@m^0,w,c
  3755  0010D0  26D9               	addwf	fsr2l,f,c
  3756  0010D2  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3757  0010D4  22DA               	addwfc	fsr2h,f,c
  3758  0010D6  CFDE F015          	movff	postinc2,??_setMotorPWM
  3759  0010DA  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  3760  0010DE  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  3761  0010E2  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3762  0010E6  EE10 F004          	lfsr	1,4
  3763  0010EA  5013               	movf	setMotorPWM@m^0,w,c
  3764  0010EC  26E1               	addwf	fsr1l,f,c
  3765  0010EE  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3766  0010F0  22E2               	addwfc	fsr1h,f,c
  3767  0010F2  CFE6 F017          	movff	postinc1,??_setMotorPWM+2
  3768  0010F6  CFE5 F018          	movff	postdec1,??_setMotorPWM+3
  3769  0010FA  C017  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3770  0010FE  C018  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3771  001102  50E7               	movf	indf1,w,c
  3772  001104  6E19               	movwf	(??_setMotorPWM+4)^0,c
  3773  001106  EE10 F006          	lfsr	1,6
  3774  00110A  5013               	movf	setMotorPWM@m^0,w,c
  3775  00110C  26E1               	addwf	fsr1l,f,c
  3776  00110E  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3777  001110  22E2               	addwfc	fsr1h,f,c
  3778  001112  50E7               	movf	indf1,w,c
  3779  001114  6E1A               	movwf	(??_setMotorPWM+5)^0,c
  3780  001116  0E01               	movlw	1
  3781  001118  6E1B               	movwf	(??_setMotorPWM+6)^0,c
  3782  00111A  2A1A               	incf	(??_setMotorPWM+5)^0,f,c
  3783  00111C  EF92  F008         	goto	u2724
  3784  001120                     u2725:
  3785  001120  90D8               	bcf	status,0,c
  3786  001122  361B               	rlcf	(??_setMotorPWM+6)^0,f,c
  3787  001124                     u2724:
  3788  001124  2E1A               	decfsz	(??_setMotorPWM+5)^0,f,c
  3789  001126  EF90  F008         	goto	u2725
  3790  00112A  501B               	movf	(??_setMotorPWM+6)^0,w,c
  3791  00112C  1019               	iorwf	(??_setMotorPWM+4)^0,w,c
  3792  00112E  6EDF               	movwf	indf2,c
  3793                           
  3794                           ;dc_motor.c: 66:  } else {
  3795  001130  EFCE  F008         	goto	l222
  3796  001134                     l2815:
  3797                           
  3798                           ;dc_motor.c: 67:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin))))
      +                          ;
  3799  001134  EE20 F004          	lfsr	2,4
  3800  001138  5013               	movf	setMotorPWM@m^0,w,c
  3801  00113A  26D9               	addwf	fsr2l,f,c
  3802  00113C  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3803  00113E  22DA               	addwfc	fsr2h,f,c
  3804  001140  CFDE F015          	movff	postinc2,??_setMotorPWM
  3805  001144  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  3806  001148  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  3807  00114C  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3808  001150  EE10 F004          	lfsr	1,4
  3809  001154  5013               	movf	setMotorPWM@m^0,w,c
  3810  001156  26E1               	addwf	fsr1l,f,c
  3811  001158  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3812  00115A  22E2               	addwfc	fsr1h,f,c
  3813  00115C  CFE6 F017          	movff	postinc1,??_setMotorPWM+2
  3814  001160  CFE5 F018          	movff	postdec1,??_setMotorPWM+3
  3815  001164  C017  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3816  001168  C018  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3817  00116C  50E7               	movf	indf1,w,c
  3818  00116E  6E19               	movwf	(??_setMotorPWM+4)^0,c
  3819  001170  EE10 F006          	lfsr	1,6
  3820  001174  5013               	movf	setMotorPWM@m^0,w,c
  3821  001176  26E1               	addwf	fsr1l,f,c
  3822  001178  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3823  00117A  22E2               	addwfc	fsr1h,f,c
  3824  00117C  50E7               	movf	indf1,w,c
  3825  00117E  6E1A               	movwf	(??_setMotorPWM+5)^0,c
  3826  001180  0E01               	movlw	1
  3827  001182  6E1B               	movwf	(??_setMotorPWM+6)^0,c
  3828  001184  2A1A               	incf	(??_setMotorPWM+5)^0,f,c
  3829  001186  EFC7  F008         	goto	u2734
  3830  00118A                     u2735:
  3831  00118A  90D8               	bcf	status,0,c
  3832  00118C  361B               	rlcf	(??_setMotorPWM+6)^0,f,c
  3833  00118E                     u2734:
  3834  00118E  2E1A               	decfsz	(??_setMotorPWM+5)^0,f,c
  3835  001190  EFC5  F008         	goto	u2735
  3836  001194  501B               	movf	(??_setMotorPWM+6)^0,w,c
  3837  001196  0AFF               	xorlw	255
  3838  001198  1419               	andwf	(??_setMotorPWM+4)^0,w,c
  3839  00119A  6EDF               	movwf	indf2,c
  3840  00119C                     l222:
  3841  00119C  0012               	return		;funcret
  3842  00119E                     __end_of_setMotorPWM:
  3843                           	callstack 0
  3844                           
  3845 ;; *************** function ___wmul *****************
  3846 ;; Defined at:
  3847 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  multiplier      2    4[COMRAM] unsigned int 
  3850 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  product         2    8[COMRAM] unsigned int 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  2    4[COMRAM] unsigned int 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, prodl, prodh
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3866 ;;Total ram usage:        6 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 5
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_setMotorPWM
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text13
  3877  001AD8                     __ptext13:
  3878                           	callstack 0
  3879  001AD8                     ___wmul:
  3880                           	callstack 23
  3881  001AD8  5005               	movf	___wmul@multiplier^0,w,c
  3882  001ADA  0207               	mulwf	___wmul@multiplicand^0,c
  3883  001ADC  CFF3 F009          	movff	prodl,___wmul@product
  3884  001AE0  CFF4 F00A          	movff	prodh,___wmul@product+1
  3885  001AE4  5005               	movf	___wmul@multiplier^0,w,c
  3886  001AE6  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3887  001AE8  50F3               	movf	243,w,c
  3888  001AEA  260A               	addwf	(___wmul@product+1)^0,f,c
  3889  001AEC  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3890  001AEE  0207               	mulwf	___wmul@multiplicand^0,c
  3891  001AF0  50F3               	movf	243,w,c
  3892  001AF2  260A               	addwf	(___wmul@product+1)^0,f,c
  3893  001AF4  C009  F005         	movff	___wmul@product,?___wmul
  3894  001AF8  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3895  001AFC  0012               	return		;funcret
  3896  001AFE                     __end_of___wmul:
  3897                           	callstack 0
  3898                           
  3899 ;; *************** function ___awdiv *****************
  3900 ;; Defined at:
  3901 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  dividend        2   10[COMRAM] int 
  3904 ;;  divisor         2   12[COMRAM] int 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  quotient        2   16[COMRAM] int 
  3907 ;;  sign            1   15[COMRAM] unsigned char 
  3908 ;;  counter         1   14[COMRAM] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  2   10[COMRAM] int 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;Total ram usage:        8 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 5
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_setMotorPWM
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text14
  3933  001456                     __ptext14:
  3934                           	callstack 0
  3935  001456                     ___awdiv:
  3936                           	callstack 23
  3937  001456  0E00               	movlw	0
  3938  001458  6E10               	movwf	___awdiv@sign^0,c
  3939  00145A  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
  3940  00145C  EF34  F00A         	goto	u2640
  3941  001460  EF32  F00A         	goto	u2641
  3942  001464                     u2641:
  3943  001464  EF3A  F00A         	goto	l2767
  3944  001468                     u2640:
  3945  001468  6C0D               	negf	___awdiv@divisor^0,c
  3946  00146A  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
  3947  00146C  B0D8               	btfsc	status,0,c
  3948  00146E  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
  3949  001470  0E01               	movlw	1
  3950  001472  6E10               	movwf	___awdiv@sign^0,c
  3951  001474                     l2767:
  3952  001474  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
  3953  001476  EF41  F00A         	goto	u2650
  3954  00147A  EF3F  F00A         	goto	u2651
  3955  00147E                     u2651:
  3956  00147E  EF47  F00A         	goto	l2773
  3957  001482                     u2650:
  3958  001482  6C0B               	negf	___awdiv@dividend^0,c
  3959  001484  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
  3960  001486  B0D8               	btfsc	status,0,c
  3961  001488  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
  3962  00148A  0E01               	movlw	1
  3963  00148C  1A10               	xorwf	___awdiv@sign^0,f,c
  3964  00148E                     l2773:
  3965  00148E  0E00               	movlw	0
  3966  001490  6E12               	movwf	(___awdiv@quotient+1)^0,c
  3967  001492  0E00               	movlw	0
  3968  001494  6E11               	movwf	___awdiv@quotient^0,c
  3969  001496  500D               	movf	___awdiv@divisor^0,w,c
  3970  001498  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
  3971  00149A  B4D8               	btfsc	status,2,c
  3972  00149C  EF52  F00A         	goto	u2661
  3973  0014A0  EF54  F00A         	goto	u2660
  3974  0014A4                     u2661:
  3975  0014A4  EF7C  F00A         	goto	l2795
  3976  0014A8                     u2660:
  3977  0014A8  0E01               	movlw	1
  3978  0014AA  6E0F               	movwf	___awdiv@counter^0,c
  3979  0014AC  EF5C  F00A         	goto	l2781
  3980  0014B0                     l2779:
  3981  0014B0  90D8               	bcf	status,0,c
  3982  0014B2  360D               	rlcf	___awdiv@divisor^0,f,c
  3983  0014B4  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
  3984  0014B6  2A0F               	incf	___awdiv@counter^0,f,c
  3985  0014B8                     l2781:
  3986  0014B8  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
  3987  0014BA  EF61  F00A         	goto	u2671
  3988  0014BE  EF63  F00A         	goto	u2670
  3989  0014C2                     u2671:
  3990  0014C2  EF58  F00A         	goto	l2779
  3991  0014C6                     u2670:
  3992  0014C6                     l2783:
  3993  0014C6  90D8               	bcf	status,0,c
  3994  0014C8  3611               	rlcf	___awdiv@quotient^0,f,c
  3995  0014CA  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
  3996  0014CC  500D               	movf	___awdiv@divisor^0,w,c
  3997  0014CE  5C0B               	subwf	___awdiv@dividend^0,w,c
  3998  0014D0  500E               	movf	(___awdiv@divisor+1)^0,w,c
  3999  0014D2  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
  4000  0014D4  A0D8               	btfss	status,0,c
  4001  0014D6  EF6F  F00A         	goto	u2681
  4002  0014DA  EF71  F00A         	goto	u2680
  4003  0014DE                     u2681:
  4004  0014DE  EF76  F00A         	goto	l2791
  4005  0014E2                     u2680:
  4006  0014E2  500D               	movf	___awdiv@divisor^0,w,c
  4007  0014E4  5E0B               	subwf	___awdiv@dividend^0,f,c
  4008  0014E6  500E               	movf	(___awdiv@divisor+1)^0,w,c
  4009  0014E8  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
  4010  0014EA  8011               	bsf	___awdiv@quotient^0,0,c
  4011  0014EC                     l2791:
  4012  0014EC  90D8               	bcf	status,0,c
  4013  0014EE  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
  4014  0014F0  320D               	rrcf	___awdiv@divisor^0,f,c
  4015  0014F2  2E0F               	decfsz	___awdiv@counter^0,f,c
  4016  0014F4  EF63  F00A         	goto	l2783
  4017  0014F8                     l2795:
  4018  0014F8  5010               	movf	___awdiv@sign^0,w,c
  4019  0014FA  B4D8               	btfsc	status,2,c
  4020  0014FC  EF82  F00A         	goto	u2691
  4021  001500  EF84  F00A         	goto	u2690
  4022  001504                     u2691:
  4023  001504  EF88  F00A         	goto	l2799
  4024  001508                     u2690:
  4025  001508  6C11               	negf	___awdiv@quotient^0,c
  4026  00150A  1E12               	comf	(___awdiv@quotient+1)^0,f,c
  4027  00150C  B0D8               	btfsc	status,0,c
  4028  00150E  2A12               	incf	(___awdiv@quotient+1)^0,f,c
  4029  001510                     l2799:
  4030  001510  C011  F00B         	movff	___awdiv@quotient,?___awdiv
  4031  001514  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
  4032  001518  0012               	return		;funcret
  4033  00151A                     __end_of___awdiv:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function _colorclick_readColour *****************
  4037 ;; Defined at:
  4038 ;;		line 169 in file "color_click.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  current         8   15[COMRAM] struct .
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  8   15[COMRAM] struct .
  4045 ;; Registers used:
  4046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4052 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;Total ram usage:        8 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 8
  4059 ;; This function calls:
  4060 ;;		_colorclick_readBlue
  4061 ;;		_colorclick_readClear
  4062 ;;		_colorclick_readGreen
  4063 ;;		_colorclick_readRed
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text15
  4070  001954                     __ptext15:
  4071                           	callstack 0
  4072  001954                     _colorclick_readColour:
  4073                           	callstack 22
  4074  001954                     
  4075                           ;color_click.c: 169: RGB_val colorclick_readColour(RGB_val current);color_click.c: 170: 
      +                          {;color_click.c: 171:     current.R = colorclick_readRed();
  4076  001954  ECE2  F00B         	call	_colorclick_readRed	;wreg free
  4077  001958  C009  F010         	movff	?_colorclick_readRed,colorclick_readColour@current
  4078  00195C  C00A  F011         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
  4079                           
  4080                           ;color_click.c: 172:     current.G = colorclick_readGreen();
  4081  001960  EC0A  F00C         	call	_colorclick_readGreen	;wreg free
  4082  001964  C009  F012         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
  4083  001968  C00A  F013         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
  4084                           
  4085                           ;color_click.c: 173:     current.B = colorclick_readBlue();
  4086  00196C  EC5A  F00C         	call	_colorclick_readBlue	;wreg free
  4087  001970  C009  F014         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
  4088  001974  C00A  F015         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
  4089                           
  4090                           ;color_click.c: 174:     current.C = colorclick_readClear();
  4091  001978  EC32  F00C         	call	_colorclick_readClear	;wreg free
  4092  00197C  C009  F016         	movff	?_colorclick_readClear,colorclick_readColour@current+6
  4093  001980  C00A  F017         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
  4094  001984                     
  4095                           ;color_click.c: 176:     return current;
  4096  001984  EE20  F010         	lfsr	2,colorclick_readColour@current
  4097  001988  EE00  F010         	lfsr	0,?_colorclick_readColour
  4098  00198C  0E07               	movlw	7
  4099  00198E                     u2041:
  4100  00198E  CFDB FFEB          	movff	plusw2,plusw0
  4101  001992  06E8               	decf	wreg,f,c
  4102  001994  E2FC               	bc	u2041
  4103  001996  0012               	return		;funcret
  4104  001998                     __end_of_colorclick_readColour:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function _colorclick_readRed *****************
  4108 ;; Defined at:
  4109 ;;		line 94 in file "color_click.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  tmp             2   13[COMRAM] unsigned int 
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  2    8[COMRAM] unsigned int 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4125 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4126 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4127 ;;Total ram usage:        7 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 7
  4130 ;; This function calls:
  4131 ;;		_I2C_2_Master_Read
  4132 ;;		_I2C_2_Master_RepStart
  4133 ;;		_I2C_2_Master_Start
  4134 ;;		_I2C_2_Master_Stop
  4135 ;;		_I2C_2_Master_Write
  4136 ;; This function is called by:
  4137 ;;		_colorclick_readColour
  4138 ;;		_colorclick_readColourRGBCLED
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text16
  4143  0017C4                     __ptext16:
  4144                           	callstack 0
  4145  0017C4                     _colorclick_readRed:
  4146                           	callstack 22
  4147  0017C4                     
  4148                           ;color_click.c: 96:  unsigned int tmp;;color_click.c: 97:  I2C_2_Master_Start();
  4149  0017C4  EC0B  F00E         	call	_I2C_2_Master_Start	;wreg free
  4150                           
  4151                           ;color_click.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  4152  0017C8  0E52               	movlw	82
  4153  0017CA  ECEF  F00D         	call	_I2C_2_Master_Write
  4154                           
  4155                           ;color_click.c: 99:  I2C_2_Master_Write(0xA0 | 0x16);
  4156  0017CE  0EB6               	movlw	182
  4157  0017D0  ECEF  F00D         	call	_I2C_2_Master_Write
  4158                           
  4159                           ;color_click.c: 100:  I2C_2_Master_RepStart();
  4160  0017D4  EC01  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  4161                           
  4162                           ;color_click.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  4163  0017D8  0E53               	movlw	83
  4164  0017DA  ECEF  F00D         	call	_I2C_2_Master_Write
  4165                           
  4166                           ;color_click.c: 102:  tmp=I2C_2_Master_Read(1);
  4167  0017DE  0E01               	movlw	1
  4168  0017E0  ECEE  F00C         	call	_I2C_2_Master_Read
  4169  0017E4  6E0B               	movwf	??_colorclick_readRed^0,c
  4170  0017E6  500B               	movf	??_colorclick_readRed^0,w,c
  4171  0017E8  6E0E               	movwf	colorclick_readRed@tmp^0,c
  4172  0017EA  6A0F               	clrf	(colorclick_readRed@tmp+1)^0,c
  4173                           
  4174                           ;color_click.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4175  0017EC  0E00               	movlw	0
  4176  0017EE  ECEE  F00C         	call	_I2C_2_Master_Read
  4177  0017F2  6E0B               	movwf	??_colorclick_readRed^0,c
  4178  0017F4  500B               	movf	??_colorclick_readRed^0,w,c
  4179  0017F6  6E0D               	movwf	(??_colorclick_readRed+2)^0,c
  4180  0017F8  6A0C               	clrf	(??_colorclick_readRed+1)^0,c
  4181  0017FA  500E               	movf	colorclick_readRed@tmp^0,w,c
  4182  0017FC  100C               	iorwf	(??_colorclick_readRed+1)^0,w,c
  4183  0017FE  6E0E               	movwf	colorclick_readRed@tmp^0,c
  4184  001800  500F               	movf	(colorclick_readRed@tmp+1)^0,w,c
  4185  001802  100D               	iorwf	(??_colorclick_readRed+2)^0,w,c
  4186  001804  6E0F               	movwf	(colorclick_readRed@tmp+1)^0,c
  4187                           
  4188                           ;color_click.c: 104:  I2C_2_Master_Stop();
  4189  001806  EC06  F00E         	call	_I2C_2_Master_Stop	;wreg free
  4190  00180A                     
  4191                           ;color_click.c: 105:  return tmp;
  4192  00180A  C00E  F009         	movff	colorclick_readRed@tmp,?_colorclick_readRed
  4193  00180E  C00F  F00A         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
  4194  001812  0012               	return		;funcret
  4195  001814                     __end_of_colorclick_readRed:
  4196                           	callstack 0
  4197                           
  4198 ;; *************** function _colorclick_readGreen *****************
  4199 ;; Defined at:
  4200 ;;		line 113 in file "color_click.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  tmp             2   13[COMRAM] unsigned int 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  2    8[COMRAM] unsigned int 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4217 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4218 ;;Total ram usage:        7 bytes
  4219 ;; Hardware stack levels used: 1
  4220 ;; Hardware stack levels required when called: 7
  4221 ;; This function calls:
  4222 ;;		_I2C_2_Master_Read
  4223 ;;		_I2C_2_Master_RepStart
  4224 ;;		_I2C_2_Master_Start
  4225 ;;		_I2C_2_Master_Stop
  4226 ;;		_I2C_2_Master_Write
  4227 ;; This function is called by:
  4228 ;;		_colorclick_readColour
  4229 ;;		_colorclick_readColourRGBCLED
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text17
  4234  001814                     __ptext17:
  4235                           	callstack 0
  4236  001814                     _colorclick_readGreen:
  4237                           	callstack 22
  4238  001814                     
  4239                           ;color_click.c: 115:  unsigned int tmp;;color_click.c: 116:  I2C_2_Master_Start();
  4240  001814  EC0B  F00E         	call	_I2C_2_Master_Start	;wreg free
  4241                           
  4242                           ;color_click.c: 117:  I2C_2_Master_Write(0x52 | 0x00);
  4243  001818  0E52               	movlw	82
  4244  00181A  ECEF  F00D         	call	_I2C_2_Master_Write
  4245                           
  4246                           ;color_click.c: 118:  I2C_2_Master_Write(0xA0 | 0x18);
  4247  00181E  0EB8               	movlw	184
  4248  001820  ECEF  F00D         	call	_I2C_2_Master_Write
  4249                           
  4250                           ;color_click.c: 119:  I2C_2_Master_RepStart();
  4251  001824  EC01  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  4252                           
  4253                           ;color_click.c: 120:  I2C_2_Master_Write(0x52 | 0x01);
  4254  001828  0E53               	movlw	83
  4255  00182A  ECEF  F00D         	call	_I2C_2_Master_Write
  4256                           
  4257                           ;color_click.c: 121:  tmp=I2C_2_Master_Read(1);
  4258  00182E  0E01               	movlw	1
  4259  001830  ECEE  F00C         	call	_I2C_2_Master_Read
  4260  001834  6E0B               	movwf	??_colorclick_readGreen^0,c
  4261  001836  500B               	movf	??_colorclick_readGreen^0,w,c
  4262  001838  6E0E               	movwf	colorclick_readGreen@tmp^0,c
  4263  00183A  6A0F               	clrf	(colorclick_readGreen@tmp+1)^0,c
  4264                           
  4265                           ;color_click.c: 122:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4266  00183C  0E00               	movlw	0
  4267  00183E  ECEE  F00C         	call	_I2C_2_Master_Read
  4268  001842  6E0B               	movwf	??_colorclick_readGreen^0,c
  4269  001844  500B               	movf	??_colorclick_readGreen^0,w,c
  4270  001846  6E0D               	movwf	(??_colorclick_readGreen+2)^0,c
  4271  001848  6A0C               	clrf	(??_colorclick_readGreen+1)^0,c
  4272  00184A  500E               	movf	colorclick_readGreen@tmp^0,w,c
  4273  00184C  100C               	iorwf	(??_colorclick_readGreen+1)^0,w,c
  4274  00184E  6E0E               	movwf	colorclick_readGreen@tmp^0,c
  4275  001850  500F               	movf	(colorclick_readGreen@tmp+1)^0,w,c
  4276  001852  100D               	iorwf	(??_colorclick_readGreen+2)^0,w,c
  4277  001854  6E0F               	movwf	(colorclick_readGreen@tmp+1)^0,c
  4278                           
  4279                           ;color_click.c: 123:  I2C_2_Master_Stop();
  4280  001856  EC06  F00E         	call	_I2C_2_Master_Stop	;wreg free
  4281  00185A                     
  4282                           ;color_click.c: 124:  return tmp;
  4283  00185A  C00E  F009         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
  4284  00185E  C00F  F00A         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
  4285  001862  0012               	return		;funcret
  4286  001864                     __end_of_colorclick_readGreen:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _colorclick_readClear *****************
  4290 ;; Defined at:
  4291 ;;		line 151 in file "color_click.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  tmp             2   13[COMRAM] unsigned int 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  2    8[COMRAM] unsigned int 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4308 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;Total ram usage:        7 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 7
  4312 ;; This function calls:
  4313 ;;		_I2C_2_Master_Read
  4314 ;;		_I2C_2_Master_RepStart
  4315 ;;		_I2C_2_Master_Start
  4316 ;;		_I2C_2_Master_Stop
  4317 ;;		_I2C_2_Master_Write
  4318 ;; This function is called by:
  4319 ;;		_colorclick_readColour
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text18
  4324  001864                     __ptext18:
  4325                           	callstack 0
  4326  001864                     _colorclick_readClear:
  4327                           	callstack 22
  4328  001864                     
  4329                           ;color_click.c: 153:  unsigned int tmp;;color_click.c: 154:  I2C_2_Master_Start();
  4330  001864  EC0B  F00E         	call	_I2C_2_Master_Start	;wreg free
  4331                           
  4332                           ;color_click.c: 155:  I2C_2_Master_Write(0x52 | 0x00);
  4333  001868  0E52               	movlw	82
  4334  00186A  ECEF  F00D         	call	_I2C_2_Master_Write
  4335                           
  4336                           ;color_click.c: 156:  I2C_2_Master_Write(0xA0 | 0x14);
  4337  00186E  0EB4               	movlw	180
  4338  001870  ECEF  F00D         	call	_I2C_2_Master_Write
  4339                           
  4340                           ;color_click.c: 157:  I2C_2_Master_RepStart();
  4341  001874  EC01  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  4342                           
  4343                           ;color_click.c: 158:  I2C_2_Master_Write(0x52 | 0x01);
  4344  001878  0E53               	movlw	83
  4345  00187A  ECEF  F00D         	call	_I2C_2_Master_Write
  4346                           
  4347                           ;color_click.c: 159:  tmp=I2C_2_Master_Read(1);
  4348  00187E  0E01               	movlw	1
  4349  001880  ECEE  F00C         	call	_I2C_2_Master_Read
  4350  001884  6E0B               	movwf	??_colorclick_readClear^0,c
  4351  001886  500B               	movf	??_colorclick_readClear^0,w,c
  4352  001888  6E0E               	movwf	colorclick_readClear@tmp^0,c
  4353  00188A  6A0F               	clrf	(colorclick_readClear@tmp+1)^0,c
  4354                           
  4355                           ;color_click.c: 160:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4356  00188C  0E00               	movlw	0
  4357  00188E  ECEE  F00C         	call	_I2C_2_Master_Read
  4358  001892  6E0B               	movwf	??_colorclick_readClear^0,c
  4359  001894  500B               	movf	??_colorclick_readClear^0,w,c
  4360  001896  6E0D               	movwf	(??_colorclick_readClear+2)^0,c
  4361  001898  6A0C               	clrf	(??_colorclick_readClear+1)^0,c
  4362  00189A  500E               	movf	colorclick_readClear@tmp^0,w,c
  4363  00189C  100C               	iorwf	(??_colorclick_readClear+1)^0,w,c
  4364  00189E  6E0E               	movwf	colorclick_readClear@tmp^0,c
  4365  0018A0  500F               	movf	(colorclick_readClear@tmp+1)^0,w,c
  4366  0018A2  100D               	iorwf	(??_colorclick_readClear+2)^0,w,c
  4367  0018A4  6E0F               	movwf	(colorclick_readClear@tmp+1)^0,c
  4368                           
  4369                           ;color_click.c: 161:  I2C_2_Master_Stop();
  4370  0018A6  EC06  F00E         	call	_I2C_2_Master_Stop	;wreg free
  4371  0018AA                     
  4372                           ;color_click.c: 162:  return tmp;
  4373  0018AA  C00E  F009         	movff	colorclick_readClear@tmp,?_colorclick_readClear
  4374  0018AE  C00F  F00A         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
  4375  0018B2  0012               	return		;funcret
  4376  0018B4                     __end_of_colorclick_readClear:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _colorclick_readBlue *****************
  4380 ;; Defined at:
  4381 ;;		line 132 in file "color_click.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;		None
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  tmp             2   13[COMRAM] unsigned int 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2    8[COMRAM] unsigned int 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0, cstack
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;Total ram usage:        7 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 7
  4402 ;; This function calls:
  4403 ;;		_I2C_2_Master_Read
  4404 ;;		_I2C_2_Master_RepStart
  4405 ;;		_I2C_2_Master_Start
  4406 ;;		_I2C_2_Master_Stop
  4407 ;;		_I2C_2_Master_Write
  4408 ;; This function is called by:
  4409 ;;		_colorclick_readColour
  4410 ;;		_colorclick_readColourRGBCLED
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text19
  4415  0018B4                     __ptext19:
  4416                           	callstack 0
  4417  0018B4                     _colorclick_readBlue:
  4418                           	callstack 22
  4419  0018B4                     
  4420                           ;color_click.c: 134:  unsigned int tmp;;color_click.c: 135:  I2C_2_Master_Start();
  4421  0018B4  EC0B  F00E         	call	_I2C_2_Master_Start	;wreg free
  4422                           
  4423                           ;color_click.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
  4424  0018B8  0E52               	movlw	82
  4425  0018BA  ECEF  F00D         	call	_I2C_2_Master_Write
  4426                           
  4427                           ;color_click.c: 137:  I2C_2_Master_Write(0xA0 | 0x1A);
  4428  0018BE  0EBA               	movlw	186
  4429  0018C0  ECEF  F00D         	call	_I2C_2_Master_Write
  4430                           
  4431                           ;color_click.c: 138:  I2C_2_Master_RepStart();
  4432  0018C4  EC01  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  4433                           
  4434                           ;color_click.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
  4435  0018C8  0E53               	movlw	83
  4436  0018CA  ECEF  F00D         	call	_I2C_2_Master_Write
  4437                           
  4438                           ;color_click.c: 140:  tmp=I2C_2_Master_Read(1);
  4439  0018CE  0E01               	movlw	1
  4440  0018D0  ECEE  F00C         	call	_I2C_2_Master_Read
  4441  0018D4  6E0B               	movwf	??_colorclick_readBlue^0,c
  4442  0018D6  500B               	movf	??_colorclick_readBlue^0,w,c
  4443  0018D8  6E0E               	movwf	colorclick_readBlue@tmp^0,c
  4444  0018DA  6A0F               	clrf	(colorclick_readBlue@tmp+1)^0,c
  4445                           
  4446                           ;color_click.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4447  0018DC  0E00               	movlw	0
  4448  0018DE  ECEE  F00C         	call	_I2C_2_Master_Read
  4449  0018E2  6E0B               	movwf	??_colorclick_readBlue^0,c
  4450  0018E4  500B               	movf	??_colorclick_readBlue^0,w,c
  4451  0018E6  6E0D               	movwf	(??_colorclick_readBlue+2)^0,c
  4452  0018E8  6A0C               	clrf	(??_colorclick_readBlue+1)^0,c
  4453  0018EA  500E               	movf	colorclick_readBlue@tmp^0,w,c
  4454  0018EC  100C               	iorwf	(??_colorclick_readBlue+1)^0,w,c
  4455  0018EE  6E0E               	movwf	colorclick_readBlue@tmp^0,c
  4456  0018F0  500F               	movf	(colorclick_readBlue@tmp+1)^0,w,c
  4457  0018F2  100D               	iorwf	(??_colorclick_readBlue+2)^0,w,c
  4458  0018F4  6E0F               	movwf	(colorclick_readBlue@tmp+1)^0,c
  4459                           
  4460                           ;color_click.c: 142:  I2C_2_Master_Stop();
  4461  0018F6  EC06  F00E         	call	_I2C_2_Master_Stop	;wreg free
  4462  0018FA                     
  4463                           ;color_click.c: 143:  return tmp;
  4464  0018FA  C00E  F009         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
  4465  0018FE  C00F  F00A         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
  4466  001902  0012               	return		;funcret
  4467  001904                     __end_of_colorclick_readBlue:
  4468                           	callstack 0
  4469                           
  4470 ;; *************** function _I2C_2_Master_RepStart *****************
  4471 ;; Defined at:
  4472 ;;		line 49 in file "i2c.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 6
  4493 ;; This function calls:
  4494 ;;		_I2C_2_Master_Idle
  4495 ;; This function is called by:
  4496 ;;		_colorclick_readRed
  4497 ;;		_colorclick_readGreen
  4498 ;;		_colorclick_readBlue
  4499 ;;		_colorclick_readClear
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text20
  4504  001C02                     __ptext20:
  4505                           	callstack 0
  4506  001C02                     _I2C_2_Master_RepStart:
  4507                           	callstack 22
  4508  001C02                     
  4509                           ;i2c.c: 51:   I2C_2_Master_Idle();
  4510  001C02  EC44  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4511  001C06                     
  4512                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  4513  001C06  010E               	movlb	14	; () banked
  4514  001C08  83DA               	bsf	218,1,b	;volatile
  4515  001C0A                     
  4516                           ; BSR set to: 14
  4517  001C0A  0012               	return		;funcret
  4518  001C0C                     __end_of_I2C_2_Master_RepStart:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _I2C_2_Master_Read *****************
  4522 ;; Defined at:
  4523 ;;		line 79 in file "i2c.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  ack             1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  ack             1    6[COMRAM] unsigned char 
  4528 ;;  tmp             1    7[COMRAM] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      unsigned char 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;Total ram usage:        3 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 6
  4545 ;; This function calls:
  4546 ;;		_I2C_2_Master_Idle
  4547 ;; This function is called by:
  4548 ;;		_colorclick_readRed
  4549 ;;		_colorclick_readGreen
  4550 ;;		_colorclick_readBlue
  4551 ;;		_colorclick_readClear
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text21
  4556  0019DC                     __ptext21:
  4557                           	callstack 0
  4558  0019DC                     _I2C_2_Master_Read:
  4559                           	callstack 22
  4560                           
  4561                           ; BSR set to: 14
  4562                           ;incstack = 0
  4563                           ;I2C_2_Master_Read@ack stored from wreg
  4564  0019DC  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  4565  0019DE                     
  4566                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  4567  0019DE  EC44  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4568  0019E2                     
  4569                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  4570  0019E2  010E               	movlb	14	; () banked
  4571  0019E4  87DA               	bsf	218,3,b	;volatile
  4572                           
  4573                           ;i2c.c: 84:   I2C_2_Master_Idle();
  4574  0019E6  EC44  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4575  0019EA                     
  4576                           ;i2c.c: 85:   tmp = SSP2BUF;
  4577  0019EA  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4578                           
  4579                           ;i2c.c: 86:   I2C_2_Master_Idle();
  4580  0019EE  EC44  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4581  0019F2                     
  4582                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  4583  0019F2  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  4584  0019F4  B4D8               	btfsc	status,2,c
  4585  0019F6  EFFF  F00C         	goto	u1451
  4586  0019FA  EF03  F00D         	goto	u1450
  4587  0019FE                     u1451:
  4588  0019FE  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4589  001A00  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  4590  001A02  EF04  F00D         	goto	u1468
  4591  001A06                     u1450:
  4592  001A06  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4593  001A08                     u1468:
  4594  001A08  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  4595  001A0A  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  4596  001A0C  010E               	movlb	14	; () banked
  4597  001A0E  51DA               	movf	218,w,b	;volatile
  4598  001A10  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4599  001A12  0BDF               	andlw	-33
  4600  001A14  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4601  001A16  6FDA               	movwf	218,b	;volatile
  4602  001A18                     
  4603                           ; BSR set to: 14
  4604                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  4605  001A18  89DA               	bsf	218,4,b	;volatile
  4606  001A1A                     
  4607                           ; BSR set to: 14
  4608                           ;i2c.c: 89:   return tmp;
  4609  001A1A  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  4610  001A1C                     
  4611                           ; BSR set to: 14
  4612  001A1C  0012               	return		;funcret
  4613  001A1E                     __end_of_I2C_2_Master_Read:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _colorclick_init *****************
  4617 ;; Defined at:
  4618 ;;		line 17 in file "color_click.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4636 ;;Total ram usage:        1 bytes
  4637 ;; Hardware stack levels used: 1
  4638 ;; Hardware stack levels required when called: 8
  4639 ;; This function calls:
  4640 ;;		_I2C_2_Master_Init
  4641 ;;		_colorclick_toggleClearLED
  4642 ;;		_colorclick_writetoaddr
  4643 ;; This function is called by:
  4644 ;;		_main
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text22
  4649  001A1E                     __ptext22:
  4650                           	callstack 0
  4651  001A1E                     _colorclick_init:
  4652                           	callstack 22
  4653  001A1E                     
  4654                           ;color_click.c: 20:     I2C_2_Master_Init();
  4655  001A1E  EC2F  F00D         	call	_I2C_2_Master_Init	;wreg free
  4656  001A22                     
  4657                           ;color_click.c: 23:   colorclick_writetoaddr(0x00, 0x01);
  4658  001A22  0E01               	movlw	1
  4659  001A24  6E07               	movwf	colorclick_writetoaddr@value^0,c
  4660  001A26  0E00               	movlw	0
  4661  001A28  ECA1  F00D         	call	_colorclick_writetoaddr
  4662  001A2C                     
  4663                           ;color_click.c: 24:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4664  001A2C  0E3F               	movlw	63
  4665  001A2E  6E09               	movwf	??_colorclick_init^0,c
  4666  001A30  0E55               	movlw	85
  4667  001A32                     u3907:
  4668  001A32  2EE8               	decfsz	wreg,f,c
  4669  001A34  D7FE               	bra	u3907
  4670  001A36  2E09               	decfsz	??_colorclick_init^0,f,c
  4671  001A38  D7FC               	bra	u3907
  4672  001A3A  F000               	nop	
  4673  001A3C                     
  4674                           ;color_click.c: 27:  colorclick_writetoaddr(0x00, 0x03);
  4675  001A3C  0E03               	movlw	3
  4676  001A3E  6E07               	movwf	colorclick_writetoaddr@value^0,c
  4677  001A40  0E00               	movlw	0
  4678  001A42  ECA1  F00D         	call	_colorclick_writetoaddr
  4679  001A46                     
  4680                           ;color_click.c: 30:  colorclick_writetoaddr(0x01, 0xD5);
  4681  001A46  0ED5               	movlw	213
  4682  001A48  6E07               	movwf	colorclick_writetoaddr@value^0,c
  4683  001A4A  0E01               	movlw	1
  4684  001A4C  ECA1  F00D         	call	_colorclick_writetoaddr
  4685  001A50                     
  4686                           ;color_click.c: 33:     TRISGbits.TRISG1 = 0;
  4687  001A50  9287               	bcf	135,1,c	;volatile
  4688  001A52                     
  4689                           ;color_click.c: 34:     TRISAbits.TRISA4 = 0;
  4690  001A52  9881               	bcf	129,4,c	;volatile
  4691  001A54                     
  4692                           ;color_click.c: 35:     TRISFbits.TRISF7 = 0;
  4693  001A54  9E86               	bcf	134,7,c	;volatile
  4694  001A56                     
  4695                           ;color_click.c: 38:     colorclick_toggleClearLED(0);
  4696  001A56  0E00               	movlw	0
  4697  001A58  EC90  F00D         	call	_colorclick_toggleClearLED
  4698  001A5C  0012               	return		;funcret
  4699  001A5E                     __end_of_colorclick_init:
  4700                           	callstack 0
  4701                           
  4702 ;; *************** function _colorclick_writetoaddr *****************
  4703 ;; Defined at:
  4704 ;;		line 80 in file "color_click.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  address         1    wreg     unsigned char 
  4707 ;;  value           1    6[COMRAM] unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  address         1    7[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2, status,0, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4719 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;Total ram usage:        2 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 7
  4726 ;; This function calls:
  4727 ;;		_I2C_2_Master_Start
  4728 ;;		_I2C_2_Master_Stop
  4729 ;;		_I2C_2_Master_Write
  4730 ;; This function is called by:
  4731 ;;		_interrupts_init
  4732 ;;		_colorclick_init
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text23
  4737  001B42                     __ptext23:
  4738                           	callstack 0
  4739  001B42                     _colorclick_writetoaddr:
  4740                           	callstack 22
  4741                           
  4742                           ;incstack = 0
  4743                           ;colorclick_writetoaddr@address stored from wreg
  4744  001B42  6E08               	movwf	colorclick_writetoaddr@address^0,c
  4745  001B44                     
  4746                           ;color_click.c: 80: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           81: {;color_click.c: 82:     I2C_2_Master_Start();
  4747  001B44  EC0B  F00E         	call	_I2C_2_Master_Start	;wreg free
  4748                           
  4749                           ;color_click.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  4750  001B48  0E52               	movlw	82
  4751  001B4A  ECEF  F00D         	call	_I2C_2_Master_Write
  4752                           
  4753                           ;color_click.c: 84:     I2C_2_Master_Write(0x80 | address);
  4754  001B4E  5008               	movf	colorclick_writetoaddr@address^0,w,c
  4755  001B50  0980               	iorlw	128
  4756  001B52  ECEF  F00D         	call	_I2C_2_Master_Write
  4757                           
  4758                           ;color_click.c: 85:     I2C_2_Master_Write(value);
  4759  001B56  5007               	movf	colorclick_writetoaddr@value^0,w,c
  4760  001B58  ECEF  F00D         	call	_I2C_2_Master_Write
  4761                           
  4762                           ;color_click.c: 86:     I2C_2_Master_Stop();
  4763  001B5C  EC06  F00E         	call	_I2C_2_Master_Stop	;wreg free
  4764  001B60  0012               	return		;funcret
  4765  001B62                     __end_of_colorclick_writetoaddr:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function _I2C_2_Master_Write *****************
  4769 ;; Defined at:
  4770 ;;		line 69 in file "i2c.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  data_byte       1    wreg     unsigned char 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  data_byte       1    5[COMRAM] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;Total ram usage:        1 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; Hardware stack levels required when called: 6
  4791 ;; This function calls:
  4792 ;;		_I2C_2_Master_Idle
  4793 ;; This function is called by:
  4794 ;;		_interrupts_clear
  4795 ;;		_colorclick_writetoaddr
  4796 ;;		_colorclick_readRed
  4797 ;;		_colorclick_readGreen
  4798 ;;		_colorclick_readBlue
  4799 ;;		_colorclick_readClear
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text24
  4804  001BDE                     __ptext24:
  4805                           	callstack 0
  4806  001BDE                     _I2C_2_Master_Write:
  4807                           	callstack 22
  4808                           
  4809                           ;incstack = 0
  4810                           ;I2C_2_Master_Write@data_byte stored from wreg
  4811  001BDE  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  4812  001BE0                     
  4813                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  4814  001BE0  EC44  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4815  001BE4                     
  4816                           ;i2c.c: 72:   SSP2BUF = data_byte;
  4817  001BE4  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4818  001BE8  0012               	return		;funcret
  4819  001BEA                     __end_of_I2C_2_Master_Write:
  4820                           	callstack 0
  4821                           
  4822 ;; *************** function _I2C_2_Master_Stop *****************
  4823 ;; Defined at:
  4824 ;;		line 59 in file "i2c.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      void 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;Total ram usage:        0 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 6
  4845 ;; This function calls:
  4846 ;;		_I2C_2_Master_Idle
  4847 ;; This function is called by:
  4848 ;;		_interrupts_clear
  4849 ;;		_colorclick_writetoaddr
  4850 ;;		_colorclick_readRed
  4851 ;;		_colorclick_readGreen
  4852 ;;		_colorclick_readBlue
  4853 ;;		_colorclick_readClear
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text25
  4858  001C0C                     __ptext25:
  4859                           	callstack 0
  4860  001C0C                     _I2C_2_Master_Stop:
  4861                           	callstack 22
  4862  001C0C                     
  4863                           ;i2c.c: 61:   I2C_2_Master_Idle();
  4864  001C0C  EC44  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4865  001C10                     
  4866                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  4867  001C10  010E               	movlb	14	; () banked
  4868  001C12  85DA               	bsf	218,2,b	;volatile
  4869  001C14                     
  4870                           ; BSR set to: 14
  4871  001C14  0012               	return		;funcret
  4872  001C16                     __end_of_I2C_2_Master_Stop:
  4873                           	callstack 0
  4874                           
  4875 ;; *************** function _I2C_2_Master_Start *****************
  4876 ;; Defined at:
  4877 ;;		line 39 in file "i2c.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, status,0, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;Total ram usage:        0 bytes
  4896 ;; Hardware stack levels used: 1
  4897 ;; Hardware stack levels required when called: 6
  4898 ;; This function calls:
  4899 ;;		_I2C_2_Master_Idle
  4900 ;; This function is called by:
  4901 ;;		_interrupts_clear
  4902 ;;		_colorclick_writetoaddr
  4903 ;;		_colorclick_readRed
  4904 ;;		_colorclick_readGreen
  4905 ;;		_colorclick_readBlue
  4906 ;;		_colorclick_readClear
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text26
  4911  001C16                     __ptext26:
  4912                           	callstack 0
  4913  001C16                     _I2C_2_Master_Start:
  4914                           	callstack 22
  4915  001C16                     
  4916                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4917  001C16  EC44  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4918  001C1A                     
  4919                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  4920  001C1A  010E               	movlb	14	; () banked
  4921  001C1C  81DA               	bsf	218,0,b	;volatile
  4922  001C1E                     
  4923                           ; BSR set to: 14
  4924  001C1E  0012               	return		;funcret
  4925  001C20                     __end_of_I2C_2_Master_Start:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _I2C_2_Master_Idle *****************
  4929 ;; Defined at:
  4930 ;;		line 30 in file "i2c.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;Total ram usage:        1 bytes
  4949 ;; Hardware stack levels used: 1
  4950 ;; Hardware stack levels required when called: 5
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_I2C_2_Master_Start
  4955 ;;		_I2C_2_Master_RepStart
  4956 ;;		_I2C_2_Master_Stop
  4957 ;;		_I2C_2_Master_Write
  4958 ;;		_I2C_2_Master_Read
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text27
  4963  001A88                     __ptext27:
  4964                           	callstack 0
  4965  001A88                     _I2C_2_Master_Idle:
  4966                           	callstack 22
  4967  001A88                     l30:
  4968  001A88  010E               	movlb	14	; () banked
  4969  001A8A  B5D8               	btfsc	216,2,b	;volatile
  4970  001A8C  EF4A  F00D         	goto	u1371
  4971  001A90  EF4C  F00D         	goto	u1370
  4972  001A94                     u1371:
  4973  001A94  EF44  F00D         	goto	l30
  4974  001A98                     u1370:
  4975  001A98                     
  4976                           ; BSR set to: 14
  4977  001A98  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4978  001A9C  0E1F               	movlw	31
  4979  001A9E  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4980  001AA0  A4D8               	btfss	status,2,c
  4981  001AA2  EF55  F00D         	goto	u1381
  4982  001AA6  EF57  F00D         	goto	u1380
  4983  001AAA                     u1381:
  4984  001AAA  EF44  F00D         	goto	l30
  4985  001AAE                     u1380:
  4986  001AAE                     
  4987                           ; BSR set to: 14
  4988  001AAE  0012               	return		;funcret
  4989  001AB0                     __end_of_I2C_2_Master_Idle:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function _colorclick_toggleClearLED *****************
  4993 ;; Defined at:
  4994 ;;		line 67 in file "color_click.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  toggle          1    wreg     unsigned char 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  toggle          1    4[COMRAM] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;Total ram usage:        1 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 5
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_main
  5019 ;;		_colorclick_init
  5020 ;;		_colorclick_readColourRGBCLED
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text28
  5025  001B20                     __ptext28:
  5026                           	callstack 0
  5027  001B20                     _colorclick_toggleClearLED:
  5028                           	callstack 25
  5029                           
  5030                           ; BSR set to: 14
  5031                           ;incstack = 0
  5032                           ;colorclick_toggleClearLED@toggle stored from wreg
  5033  001B20  6E05               	movwf	colorclick_toggleClearLED@toggle^0,c
  5034  001B22                     
  5035                           ;color_click.c: 67: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          68: {;color_click.c: 69:     LATGbits.LATG1 = toggle;
  5036  001B22  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5037  001B24  D002               	bra	u1795
  5038  001B26  927F               	bcf	127,1,c	;volatile
  5039  001B28  D001               	bra	u1796
  5040  001B2A                     u1795:
  5041  001B2A  827F               	bsf	127,1,c	;volatile
  5042  001B2C                     u1796:
  5043                           
  5044                           ;color_click.c: 70:     LATFbits.LATF7 = toggle;
  5045  001B2C  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5046  001B2E  D002               	bra	u1805
  5047  001B30  9E7E               	bcf	126,7,c	;volatile
  5048  001B32  D001               	bra	u1806
  5049  001B34                     u1805:
  5050  001B34  8E7E               	bsf	126,7,c	;volatile
  5051  001B36                     u1806:
  5052                           
  5053                           ;color_click.c: 71:     LATAbits.LATA4 = toggle;
  5054  001B36  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5055  001B38  D002               	bra	u1815
  5056  001B3A  9879               	bcf	121,4,c	;volatile
  5057  001B3C  D001               	bra	u1816
  5058  001B3E                     u1815:
  5059  001B3E  8879               	bsf	121,4,c	;volatile
  5060  001B40                     u1816:
  5061  001B40  0012               	return		;funcret
  5062  001B42                     __end_of_colorclick_toggleClearLED:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _I2C_2_Master_Init *****************
  5066 ;; Defined at:
  5067 ;;		line 8 in file "i2c.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 5
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_colorclick_init
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text29
  5096  001A5E                     __ptext29:
  5097                           	callstack 0
  5098  001A5E                     _I2C_2_Master_Init:
  5099                           	callstack 24
  5100  001A5E                     
  5101                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  5102  001A5E  010E               	movlb	14	; () banked
  5103  001A60  51D9               	movf	217,w,b	;volatile
  5104  001A62  0BF0               	andlw	-16
  5105  001A64  0908               	iorlw	8
  5106  001A66  6FD9               	movwf	217,b	;volatile
  5107  001A68                     
  5108                           ; BSR set to: 14
  5109                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  5110  001A68  8BD9               	bsf	217,5,b	;volatile
  5111                           
  5112                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  5113  001A6A  0E9F               	movlw	159
  5114  001A6C  6FD6               	movwf	214,b	;volatile
  5115  001A6E                     
  5116                           ; BSR set to: 14
  5117                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  5118  001A6E  8A84               	bsf	132,5,c	;volatile
  5119  001A70                     
  5120                           ; BSR set to: 14
  5121                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  5122  001A70  8C84               	bsf	132,6,c	;volatile
  5123  001A72                     
  5124                           ; BSR set to: 14
  5125                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  5126  001A72  9BA7               	bcf	167,5,b	;volatile
  5127  001A74                     
  5128                           ; BSR set to: 14
  5129                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  5130  001A74  9DA7               	bcf	167,6,b	;volatile
  5131                           
  5132                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  5133  001A76  0E1D               	movlw	29
  5134  001A78  6F1D               	movwf	29,b	;volatile
  5135                           
  5136                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  5137  001A7A  0E1E               	movlw	30
  5138  001A7C  6F1C               	movwf	28,b	;volatile
  5139                           
  5140                           ;i2c.c: 22:   RD5PPS=0x1C;
  5141  001A7E  0E1C               	movlw	28
  5142  001A80  6F6F               	movwf	111,b	;volatile
  5143                           
  5144                           ;i2c.c: 23:   RD6PPS=0x1B;
  5145  001A82  0E1B               	movlw	27
  5146  001A84  6F70               	movwf	112,b	;volatile
  5147  001A86                     
  5148                           ; BSR set to: 14
  5149  001A86  0012               	return		;funcret
  5150  001A88                     __end_of_I2C_2_Master_Init:
  5151                           	callstack 0
  5152                           
  5153 ;; *************** function _USART4_init *****************
  5154 ;; Defined at:
  5155 ;;		line 7 in file "serial.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;		None
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      void 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;Total ram usage:        0 bytes
  5174 ;; Hardware stack levels used: 1
  5175 ;; Hardware stack levels required when called: 5
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text30
  5184  001B62                     __ptext30:
  5185                           	callstack 0
  5186  001B62                     _USART4_init:
  5187                           	callstack 25
  5188  001B62                     
  5189                           ;serial.c: 10:     RC0PPS = 0x12;
  5190  001B62  0E12               	movlw	18
  5191  001B64  010E               	movlb	14	; () banked
  5192  001B66  6F62               	movwf	98,b	;volatile
  5193                           
  5194                           ;serial.c: 11:     RX4PPS = 0x11;
  5195  001B68  0E11               	movlw	17
  5196  001B6A  6F15               	movwf	21,b	;volatile
  5197  001B6C                     
  5198                           ; BSR set to: 14
  5199                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  5200  001B6C  8283               	bsf	131,1,c	;volatile
  5201  001B6E                     
  5202                           ; BSR set to: 14
  5203                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  5204  001B6E  97E9               	bcf	233,3,b	;volatile
  5205  001B70                     
  5206                           ; BSR set to: 14
  5207                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  5208  001B70  95E8               	bcf	232,2,b	;volatile
  5209                           
  5210                           ;serial.c: 16:     SP4BRGL = 51;
  5211  001B72  0E33               	movlw	51
  5212  001B74  6FE5               	movwf	229,b	;volatile
  5213                           
  5214                           ;serial.c: 17:     SP4BRGH = 0;
  5215  001B76  0E00               	movlw	0
  5216  001B78  6FE6               	movwf	230,b	;volatile
  5217  001B7A                     
  5218                           ; BSR set to: 14
  5219                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  5220  001B7A  89E7               	bsf	231,4,b	;volatile
  5221  001B7C                     
  5222                           ; BSR set to: 14
  5223                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  5224  001B7C  8BE8               	bsf	232,5,b	;volatile
  5225  001B7E                     
  5226                           ; BSR set to: 14
  5227                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  5228  001B7E  8FE7               	bsf	231,7,b	;volatile
  5229  001B80                     
  5230                           ; BSR set to: 14
  5231  001B80  0012               	return		;funcret
  5232  001B82                     __end_of_USART4_init:
  5233                           	callstack 0
  5234                           
  5235 ;; *************** function _DCmotors_init *****************
  5236 ;; Defined at:
  5237 ;;		line 11 in file "dc_motor.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  PWMperiod       1    wreg     unsigned char 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  PWMperiod       1    4[COMRAM] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;Total ram usage:        1 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; Hardware stack levels required when called: 6
  5258 ;; This function calls:
  5259 ;;		_buggyLEDs_init
  5260 ;;		_clicker2LEDs_init
  5261 ;;		_clicker2buttons_init
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text31
  5268  001904                     __ptext31:
  5269                           	callstack 0
  5270  001904                     _DCmotors_init:
  5271                           	callstack 24
  5272                           
  5273                           ; BSR set to: 14
  5274                           ;incstack = 0
  5275                           ;DCmotors_init@PWMperiod stored from wreg
  5276  001904  6E05               	movwf	DCmotors_init@PWMperiod^0,c
  5277  001906                     
  5278                           ;dc_motor.c: 11: void DCmotors_init(unsigned char PWMperiod);dc_motor.c: 12: {;dc_motor.
      +                          c: 14:     T2CONbits.CKPS=0b100;
  5279  001906  50BD               	movf	189,w,c	;volatile
  5280  001908  0B8F               	andlw	-113
  5281  00190A  0940               	iorlw	64
  5282  00190C  6EBD               	movwf	189,c	;volatile
  5283                           
  5284                           ;dc_motor.c: 15:     T2HLTbits.MODE=0b00000;
  5285  00190E  0EE0               	movlw	-32
  5286  001910  16BE               	andwf	190,f,c	;volatile
  5287                           
  5288                           ;dc_motor.c: 16:     T2CLKCONbits.CS=0b0001;
  5289  001912  50BF               	movf	191,w,c	;volatile
  5290  001914  0BF0               	andlw	-16
  5291  001916  0901               	iorlw	1
  5292  001918  6EBF               	movwf	191,c	;volatile
  5293  00191A                     
  5294                           ;dc_motor.c: 19:     T2PR=PWMperiod;
  5295  00191A  C005  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  5296  00191E                     
  5297                           ;dc_motor.c: 20:     T2CONbits.ON=1;
  5298  00191E  8EBD               	bsf	189,7,c	;volatile
  5299  001920                     
  5300                           ;dc_motor.c: 23:     TRISEbits.TRISE2=0;
  5301  001920  9485               	bcf	133,2,c	;volatile
  5302  001922                     
  5303                           ;dc_motor.c: 24:     TRISEbits.TRISE4=0;
  5304  001922  9885               	bcf	133,4,c	;volatile
  5305  001924                     
  5306                           ;dc_motor.c: 25:     TRISCbits.TRISC7=0;
  5307  001924  9E83               	bcf	131,7,c	;volatile
  5308  001926                     
  5309                           ;dc_motor.c: 26:     TRISGbits.TRISG6=0;
  5310  001926  9C87               	bcf	135,6,c	;volatile
  5311  001928                     
  5312                           ;dc_motor.c: 28:     LATEbits.LATE2=0;
  5313  001928  947D               	bcf	125,2,c	;volatile
  5314  00192A                     
  5315                           ;dc_motor.c: 29:     LATEbits.LATE4=0;
  5316  00192A  987D               	bcf	125,4,c	;volatile
  5317  00192C                     
  5318                           ;dc_motor.c: 30:     LATCbits.LATC7=0;
  5319  00192C  9E7B               	bcf	123,7,c	;volatile
  5320  00192E                     
  5321                           ;dc_motor.c: 31:     LATGbits.LATG6=0;
  5322  00192E  9C7F               	bcf	127,6,c	;volatile
  5323                           
  5324                           ;dc_motor.c: 33:     PWM6DCH=0;
  5325  001930  0E00               	movlw	0
  5326  001932  6EA3               	movwf	163,c	;volatile
  5327                           
  5328                           ;dc_motor.c: 34:     PWM7DCH=0;
  5329  001934  0E00               	movlw	0
  5330  001936  6EA0               	movwf	160,c	;volatile
  5331  001938                     
  5332                           ;dc_motor.c: 36:     PWM6CONbits.EN = 1;
  5333  001938  8EA4               	bsf	164,7,c	;volatile
  5334  00193A                     
  5335                           ;dc_motor.c: 37:     PWM7CONbits.EN = 1;
  5336  00193A  8EA1               	bsf	161,7,c	;volatile
  5337                           
  5338                           ;dc_motor.c: 39:     RE2PPS=0x0A;
  5339  00193C  0E0A               	movlw	10
  5340  00193E  010E               	movlb	14	; () banked
  5341  001940  6F74               	movwf	116,b	;volatile
  5342                           
  5343                           ;dc_motor.c: 40:     RC7PPS=0x0B;
  5344  001942  0E0B               	movlw	11
  5345  001944  6F69               	movwf	105,b	;volatile
  5346  001946                     
  5347                           ; BSR set to: 14
  5348                           ;dc_motor.c: 43:     clicker2buttons_init();
  5349  001946  ECF5  F00D         	call	_clicker2buttons_init	;wreg free
  5350  00194A                     
  5351                           ;dc_motor.c: 44:     clicker2LEDs_init();
  5352  00194A  EC10  F00E         	call	_clicker2LEDs_init	;wreg free
  5353  00194E                     
  5354                           ;dc_motor.c: 45:     buggyLEDs_init();
  5355  00194E  ECD9  F00D         	call	_buggyLEDs_init	;wreg free
  5356  001952  0012               	return		;funcret
  5357  001954                     __end_of_DCmotors_init:
  5358                           	callstack 0
  5359                           
  5360 ;; *************** function _clicker2buttons_init *****************
  5361 ;; Defined at:
  5362 ;;		line 74 in file "dc_motor.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		None
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 5
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_DCmotors_init
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text32
  5391  001BEA                     __ptext32:
  5392                           	callstack 0
  5393  001BEA                     _clicker2buttons_init:
  5394                           	callstack 24
  5395  001BEA                     
  5396                           ;dc_motor.c: 77:     TRISFbits.TRISF2=1;
  5397  001BEA  8486               	bsf	134,2,c	;volatile
  5398                           
  5399                           ;dc_motor.c: 78:     TRISFbits.TRISF3=1;
  5400  001BEC  8686               	bsf	134,3,c	;volatile
  5401                           
  5402                           ;dc_motor.c: 79:     ANSELFbits.ANSELF2=0;
  5403  001BEE  010E               	movlb	14	; () banked
  5404  001BF0  95B4               	bcf	180,2,b	;volatile
  5405                           
  5406                           ;dc_motor.c: 80:     ANSELFbits.ANSELF3=0;
  5407  001BF2  97B4               	bcf	180,3,b	;volatile
  5408  001BF4                     
  5409                           ; BSR set to: 14
  5410  001BF4  0012               	return		;funcret
  5411  001BF6                     __end_of_clicker2buttons_init:
  5412                           	callstack 0
  5413                           
  5414 ;; *************** function _clicker2LEDs_init *****************
  5415 ;; Defined at:
  5416 ;;		line 86 in file "dc_motor.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;		None
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		None
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5434 ;;Total ram usage:        0 bytes
  5435 ;; Hardware stack levels used: 1
  5436 ;; Hardware stack levels required when called: 5
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_DCmotors_init
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text33
  5445  001C20                     __ptext33:
  5446                           	callstack 0
  5447  001C20                     _clicker2LEDs_init:
  5448                           	callstack 24
  5449  001C20                     
  5450                           ;dc_motor.c: 88:     TRISDbits.TRISD7 = 0;
  5451  001C20  9E84               	bcf	132,7,c	;volatile
  5452                           
  5453                           ;dc_motor.c: 89:     TRISHbits.TRISH3 = 0;
  5454  001C22  9688               	bcf	136,3,c	;volatile
  5455                           
  5456                           ;dc_motor.c: 91:     LATDbits.LATD7 = 0;
  5457  001C24  9E7C               	bcf	124,7,c	;volatile
  5458                           
  5459                           ;dc_motor.c: 92:     LATHbits.LATH3 = 0;
  5460  001C26  9680               	bcf	128,3,c	;volatile
  5461  001C28  0012               	return		;funcret
  5462  001C2A                     __end_of_clicker2LEDs_init:
  5463                           	callstack 0
  5464                           
  5465 ;; *************** function _buggyLEDs_init *****************
  5466 ;; Defined at:
  5467 ;;		line 98 in file "dc_motor.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;		None
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		None
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5485 ;;Total ram usage:        0 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 5
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_DCmotors_init
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text34
  5496  001BB2                     __ptext34:
  5497                           	callstack 0
  5498  001BB2                     _buggyLEDs_init:
  5499                           	callstack 24
  5500  001BB2                     
  5501                           ;dc_motor.c: 100:     TRISHbits.TRISH1 = 0;
  5502  001BB2  9288               	bcf	136,1,c	;volatile
  5503                           
  5504                           ;dc_motor.c: 101:     TRISDbits.TRISD3 = 0;
  5505  001BB4  9684               	bcf	132,3,c	;volatile
  5506                           
  5507                           ;dc_motor.c: 102:     TRISDbits.TRISD4 = 0;
  5508  001BB6  9884               	bcf	132,4,c	;volatile
  5509                           
  5510                           ;dc_motor.c: 103:     TRISFbits.TRISF0 = 0;
  5511  001BB8  9086               	bcf	134,0,c	;volatile
  5512                           
  5513                           ;dc_motor.c: 104:     TRISHbits.TRISH0 = 0;
  5514  001BBA  9088               	bcf	136,0,c	;volatile
  5515                           
  5516                           ;dc_motor.c: 106:     LATHbits.LATH1 = 0;
  5517  001BBC  9280               	bcf	128,1,c	;volatile
  5518                           
  5519                           ;dc_motor.c: 107:     LATDbits.LATD3 = 0;
  5520  001BBE  967C               	bcf	124,3,c	;volatile
  5521                           
  5522                           ;dc_motor.c: 108:     LATDbits.LATD4 = 0;
  5523  001BC0  987C               	bcf	124,4,c	;volatile
  5524                           
  5525                           ;dc_motor.c: 109:     LATFbits.LATF0 = 0;
  5526  001BC2  907E               	bcf	126,0,c	;volatile
  5527                           
  5528                           ;dc_motor.c: 110:     LATHbits.LATH0 = 0;
  5529  001BC4  9080               	bcf	128,0,c	;volatile
  5530  001BC6  0012               	return		;funcret
  5531  001BC8                     __end_of_buggyLEDs_init:
  5532                           	callstack 0
  5533                           
  5534 ;; *************** function _ADC_init *****************
  5535 ;; Defined at:
  5536 ;;		line 8 in file "ADC.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5554 ;;Total ram usage:        0 bytes
  5555 ;; Hardware stack levels used: 1
  5556 ;; Hardware stack levels required when called: 5
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_main
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text35
  5565  001B82                     __ptext35:
  5566                           	callstack 0
  5567  001B82                     _ADC_init:
  5568                           	callstack 25
  5569  001B82                     
  5570                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  5571  001B82  8C86               	bsf	134,6,c	;volatile
  5572                           
  5573                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  5574  001B84  010E               	movlb	14	; () banked
  5575  001B86  8DB4               	bsf	180,6,b	;volatile
  5576                           
  5577                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  5578  001B88  010F               	movlb	15	; () banked
  5579  001B8A  9958               	bcf	88,4,b	;volatile
  5580  001B8C                     
  5581                           ; BSR set to: 15
  5582                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  5583  001B8C  0EFC               	movlw	-4
  5584  001B8E  1758               	andwf	88,f,b	;volatile
  5585                           
  5586                           ;ADC.c: 16:     ADPCH=0b101110;
  5587  001B90  0E2E               	movlw	46
  5588  001B92  6F5F               	movwf	95,b	;volatile
  5589  001B94                     
  5590                           ; BSR set to: 15
  5591                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  5592  001B94  9460               	bcf	96,2,c	;volatile
  5593  001B96                     
  5594                           ; BSR set to: 15
  5595                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  5596  001B96  8860               	bsf	96,4,c	;volatile
  5597  001B98                     
  5598                           ; BSR set to: 15
  5599                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  5600  001B98  8E60               	bsf	96,7,c	;volatile
  5601  001B9A                     
  5602                           ; BSR set to: 15
  5603  001B9A  0012               	return		;funcret
  5604  001B9C                     __end_of_ADC_init:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _LowISR *****************
  5608 ;; Defined at:
  5609 ;;		line 75 in file "interrupts.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		None
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5627 ;;Total ram usage:        1 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; Hardware stack levels required when called: 4
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		Interrupt level 1
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	intcodelo
  5638  000018                     __pintcodelo:
  5639                           	callstack 0
  5640  000018                     _LowISR:
  5641                           	callstack 22
  5642                           
  5643                           ; BSR set to: 15
  5644                           ;incstack = 0
  5645  000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5646  00001A  CFE0 F004          	movff	bsr,??_LowISR
  5647  00001E  C004  FFE0         	movff	??_LowISR,bsr
  5648  000022  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5649  000024  0010               	retfie	
  5650  000026                     __end_of_LowISR:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function _HighISR *****************
  5654 ;; Defined at:
  5655 ;;		line 60 in file "interrupts.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5672 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;Total ram usage:        1 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 3
  5676 ;; This function calls:
  5677 ;;		i2_interrupts_clear
  5678 ;; This function is called by:
  5679 ;;		Interrupt level 2
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	intcode
  5684  000008                     __pintcode:
  5685                           	callstack 0
  5686  000008                     _HighISR:
  5687                           	callstack 22
  5688                           
  5689                           ;incstack = 0
  5690  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5691  00000A  EFCC  F00C         	goto	int_func
  5692                           
  5693                           	psect	intcode_body
  5694  001998                     __pintcode_body:
  5695                           	callstack 22
  5696  001998                     int_func:
  5697                           	callstack 22
  5698  001998                     
  5699                           ;interrupts.c: 61:     if (PIR0bits.INT1IF) {
  5700  001998  010E               	movlb	14	; () banked
  5701  00199A  A333               	btfss	51,1,b	;volatile
  5702  00199C  EFD2  F00C         	goto	i2u259_41
  5703  0019A0  EFD4  F00C         	goto	i2u259_40
  5704  0019A4                     i2u259_41:
  5705  0019A4  EFEC  F00C         	goto	i2l332
  5706  0019A8                     i2u259_40:
  5707  0019A8                     
  5708                           ; BSR set to: 14
  5709                           ;interrupts.c: 62:         card_flag = 1;
  5710  0019A8  0E01               	movlw	1
  5711  0019AA  0100               	movlb	0	; () banked
  5712  0019AC  6F9D               	movwf	_card_flag& (0+255),b	;volatile
  5713  0019AE                     
  5714                           ; BSR set to: 0
  5715                           ;interrupts.c: 63:         LATDbits.LATD7 = !LATDbits.LATD7;
  5716  0019AE  AE7C               	btfss	124,7,c	;volatile
  5717  0019B0  EFDC  F00C         	goto	i2u260_41
  5718  0019B4  EFE0  F00C         	goto	i2u260_40
  5719  0019B8                     i2u260_41:
  5720  0019B8  6A03               	clrf	??_HighISR^0,c
  5721  0019BA  2A03               	incf	??_HighISR^0,f,c
  5722  0019BC  EFE1  F00C         	goto	i2u261_48
  5723  0019C0                     i2u260_40:
  5724  0019C0  6A03               	clrf	??_HighISR^0,c
  5725  0019C2                     i2u261_48:
  5726  0019C2  3203               	rrcf	??_HighISR^0,f,c
  5727  0019C4  3203               	rrcf	??_HighISR^0,f,c
  5728  0019C6  507C               	movf	124,w,c	;volatile
  5729  0019C8  1803               	xorwf	??_HighISR^0,w,c
  5730  0019CA  0B7F               	andlw	-129
  5731  0019CC  1803               	xorwf	??_HighISR^0,w,c
  5732  0019CE  6E7C               	movwf	124,c	;volatile
  5733  0019D0                     
  5734                           ;interrupts.c: 64:         interrupts_clear();
  5735  0019D0  ECE4  F00D         	call	i2_interrupts_clear	;wreg free
  5736  0019D4                     
  5737                           ;interrupts.c: 65:         PIR0bits.INT1IF = 0;
  5738  0019D4  010E               	movlb	14	; () banked
  5739  0019D6  9333               	bcf	51,1,b	;volatile
  5740  0019D8                     i2l332:
  5741                           
  5742                           ; BSR set to: 14
  5743  0019D8  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5744  0019DA  0011               	retfie		f
  5745  0019DC                     __end_of_HighISR:
  5746                           	callstack 0
  5747                           
  5748 ;; *************** function i2_interrupts_clear *****************
  5749 ;; Defined at:
  5750 ;;		line 47 in file "interrupts.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;Total ram usage:        0 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 2
  5771 ;; This function calls:
  5772 ;;		i2_I2C_2_Master_Start
  5773 ;;		i2_I2C_2_Master_Stop
  5774 ;;		i2_I2C_2_Master_Write
  5775 ;; This function is called by:
  5776 ;;		_HighISR
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text38
  5781  001BC8                     __ptext38:
  5782                           	callstack 0
  5783  001BC8                     i2_interrupts_clear:
  5784                           	callstack 22
  5785  001BC8                     
  5786                           ;interrupts.c: 48:     I2C_2_Master_Start();
  5787  001BC8  EC1A  F00E         	call	i2_I2C_2_Master_Start	;wreg free
  5788                           
  5789                           ;interrupts.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  5790  001BCC  0E52               	movlw	82
  5791  001BCE  ECFB  F00D         	call	i2_I2C_2_Master_Write
  5792                           
  5793                           ;interrupts.c: 50:     I2C_2_Master_Write(0b11100110);
  5794  001BD2  0EE6               	movlw	230
  5795  001BD4  ECFB  F00D         	call	i2_I2C_2_Master_Write
  5796                           
  5797                           ;interrupts.c: 51:     I2C_2_Master_Stop();
  5798  001BD8  EC15  F00E         	call	i2_I2C_2_Master_Stop	;wreg free
  5799  001BDC  0012               	return		;funcret
  5800  001BDE                     __end_ofi2_interrupts_clear:
  5801                           	callstack 0
  5802                           
  5803 ;; *************** function i2_I2C_2_Master_Write *****************
  5804 ;; Defined at:
  5805 ;;		line 69 in file "i2c.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  data_byte       1    wreg     unsigned char 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  data_byte       1    1[COMRAM] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5823 ;;Total ram usage:        1 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 1
  5826 ;; This function calls:
  5827 ;;		i2_I2C_2_Master_Idle
  5828 ;; This function is called by:
  5829 ;;		i2_interrupts_clear
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text39
  5834  001BF6                     __ptext39:
  5835                           	callstack 0
  5836  001BF6                     i2_I2C_2_Master_Write:
  5837                           	callstack 22
  5838                           
  5839                           ;incstack = 0
  5840                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5841  001BF6  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5842  001BF8                     
  5843                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  5844  001BF8  EC58  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  5845  001BFC                     
  5846                           ;i2c.c: 72:   SSP2BUF = data_byte;
  5847  001BFC  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5848  001C00  0012               	return		;funcret
  5849  001C02                     __end_ofi2_I2C_2_Master_Write:
  5850                           	callstack 0
  5851                           
  5852 ;; *************** function i2_I2C_2_Master_Stop *****************
  5853 ;; Defined at:
  5854 ;;		line 59 in file "i2c.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 1
  5875 ;; This function calls:
  5876 ;;		i2_I2C_2_Master_Idle
  5877 ;; This function is called by:
  5878 ;;		i2_interrupts_clear
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text40
  5883  001C2A                     __ptext40:
  5884                           	callstack 0
  5885  001C2A                     i2_I2C_2_Master_Stop:
  5886                           	callstack 22
  5887  001C2A                     
  5888                           ;i2c.c: 61:   I2C_2_Master_Idle();
  5889  001C2A  EC58  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  5890  001C2E                     
  5891                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  5892  001C2E  010E               	movlb	14	; () banked
  5893  001C30  85DA               	bsf	218,2,b	;volatile
  5894  001C32                     
  5895                           ; BSR set to: 14
  5896  001C32  0012               	return		;funcret
  5897  001C34                     __end_ofi2_I2C_2_Master_Stop:
  5898                           	callstack 0
  5899                           
  5900 ;; *************** function i2_I2C_2_Master_Start *****************
  5901 ;; Defined at:
  5902 ;;		line 39 in file "i2c.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5920 ;;Total ram usage:        0 bytes
  5921 ;; Hardware stack levels used: 1
  5922 ;; Hardware stack levels required when called: 1
  5923 ;; This function calls:
  5924 ;;		i2_I2C_2_Master_Idle
  5925 ;; This function is called by:
  5926 ;;		i2_interrupts_clear
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text41
  5931  001C34                     __ptext41:
  5932                           	callstack 0
  5933  001C34                     i2_I2C_2_Master_Start:
  5934                           	callstack 22
  5935  001C34                     
  5936                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5937  001C34  EC58  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  5938  001C38                     
  5939                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  5940  001C38  010E               	movlb	14	; () banked
  5941  001C3A  81DA               	bsf	218,0,b	;volatile
  5942  001C3C                     
  5943                           ; BSR set to: 14
  5944  001C3C  0012               	return		;funcret
  5945  001C3E                     __end_ofi2_I2C_2_Master_Start:
  5946                           	callstack 0
  5947                           
  5948 ;; *************** function i2_I2C_2_Master_Idle *****************
  5949 ;; Defined at:
  5950 ;;		line 30 in file "i2c.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      void 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5968 ;;Total ram usage:        1 bytes
  5969 ;; Hardware stack levels used: 1
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		i2_I2C_2_Master_Start
  5974 ;;		i2_I2C_2_Master_Stop
  5975 ;;		i2_I2C_2_Master_Write
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text42
  5980  001AB0                     __ptext42:
  5981                           	callstack 0
  5982  001AB0                     i2_I2C_2_Master_Idle:
  5983                           	callstack 22
  5984  001AB0                     i2l30:
  5985  001AB0  010E               	movlb	14	; () banked
  5986  001AB2  B5D8               	btfsc	216,2,b	;volatile
  5987  001AB4  EF5E  F00D         	goto	i2u151_41
  5988  001AB8  EF60  F00D         	goto	i2u151_40
  5989  001ABC                     i2u151_41:
  5990  001ABC  EF58  F00D         	goto	i2l30
  5991  001AC0                     i2u151_40:
  5992  001AC0                     
  5993                           ; BSR set to: 14
  5994  001AC0  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5995  001AC4  0E1F               	movlw	31
  5996  001AC6  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5997  001AC8  A4D8               	btfss	status,2,c
  5998  001ACA  EF69  F00D         	goto	i2u152_41
  5999  001ACE  EF6B  F00D         	goto	i2u152_40
  6000  001AD2                     i2u152_41:
  6001  001AD2  EF58  F00D         	goto	i2l30
  6002  001AD6                     i2u152_40:
  6003  001AD6                     
  6004                           ; BSR set to: 14
  6005  001AD6  0012               	return		;funcret
  6006  001AD8                     __end_ofi2_I2C_2_Master_Idle:
  6007                           	callstack 0
  6008  0000                     
  6009                           	psect	rparam
  6010  0000                     
  6011                           	psect	temp
  6012  000058                     btemp:
  6013                           	callstack 0
  6014  000058                     	ds	1
  6015  0000                     int$flags	set	btemp
  6016  0000                     wtemp8	set	btemp+1
  6017  0000                     ttemp5	set	btemp+1
  6018  0000                     ttemp6	set	btemp+4
  6019  0000                     ttemp7	set	btemp+8
  6020                           
  6021                           	psect	idloc
  6022                           
  6023                           ;Config register IDLOC0 @ 0x200000
  6024                           ;	unspecified, using default values
  6025  200000                     	org	2097152
  6026  200000  0FFF               	dw	4095
  6027                           
  6028                           ;Config register IDLOC1 @ 0x200002
  6029                           ;	unspecified, using default values
  6030  200002                     	org	2097154
  6031  200002  0FFF               	dw	4095
  6032                           
  6033                           ;Config register IDLOC2 @ 0x200004
  6034                           ;	unspecified, using default values
  6035  200004                     	org	2097156
  6036  200004  0FFF               	dw	4095
  6037                           
  6038                           ;Config register IDLOC3 @ 0x200006
  6039                           ;	unspecified, using default values
  6040  200006                     	org	2097158
  6041  200006  0FFF               	dw	4095
  6042                           
  6043                           ;Config register IDLOC4 @ 0x200008
  6044                           ;	unspecified, using default values
  6045  200008                     	org	2097160
  6046  200008  0FFF               	dw	4095
  6047                           
  6048                           ;Config register IDLOC5 @ 0x20000A
  6049                           ;	unspecified, using default values
  6050  20000A                     	org	2097162
  6051  20000A  0FFF               	dw	4095
  6052                           
  6053                           ;Config register IDLOC6 @ 0x20000C
  6054                           ;	unspecified, using default values
  6055  20000C                     	org	2097164
  6056  20000C  0FFF               	dw	4095
  6057                           
  6058                           ;Config register IDLOC7 @ 0x20000E
  6059                           ;	unspecified, using default values
  6060  20000E                     	org	2097166
  6061  20000E  0FFF               	dw	4095
  6062                           
  6063                           	psect	config
  6064                           
  6065                           ;Config register CONFIG1L @ 0x300000
  6066                           ;	External Oscillator mode Selection bits
  6067                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6068                           ;	Power-up default value for COSC bits
  6069                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6070  300000                     	org	3145728
  6071  300000  AA                 	db	170
  6072                           
  6073                           ;Config register CONFIG1H @ 0x300001
  6074                           ;	unspecified, using default values
  6075                           ;	Clock Out Enable bit
  6076                           ;	CLKOUTEN = 0x1, unprogrammed default
  6077                           ;	Clock Switch Enable bit
  6078                           ;	CSWEN = 0x1, unprogrammed default
  6079                           ;	Fail-Safe Clock Monitor Enable bit
  6080                           ;	FCMEN = 0x1, unprogrammed default
  6081  300001                     	org	3145729
  6082  300001  FF                 	db	255
  6083                           
  6084                           ;Config register CONFIG2L @ 0x300002
  6085                           ;	unspecified, using default values
  6086                           ;	Master Clear Enable bit
  6087                           ;	MCLRE = 0x1, unprogrammed default
  6088                           ;	Power-up Timer Enable bit
  6089                           ;	PWRTE = 0x1, unprogrammed default
  6090                           ;	Low-power BOR enable bit
  6091                           ;	LPBOREN = 0x1, unprogrammed default
  6092                           ;	Brown-out Reset Enable bits
  6093                           ;	BOREN = 0x3, unprogrammed default
  6094  300002                     	org	3145730
  6095  300002  FF                 	db	255
  6096                           
  6097                           ;Config register CONFIG2H @ 0x300003
  6098                           ;	unspecified, using default values
  6099                           ;	Brown Out Reset Voltage selection bits
  6100                           ;	BORV = 0x3, unprogrammed default
  6101                           ;	ZCD Disable bit
  6102                           ;	ZCD = 0x1, unprogrammed default
  6103                           ;	PPSLOCK bit One-Way Set Enable bit
  6104                           ;	PPS1WAY = 0x1, unprogrammed default
  6105                           ;	Stack Full/Underflow Reset Enable bit
  6106                           ;	STVREN = 0x1, unprogrammed default
  6107                           ;	Debugger Enable bit
  6108                           ;	DEBUG = 0x1, unprogrammed default
  6109                           ;	Extended Instruction Set Enable bit
  6110                           ;	XINST = 0x1, unprogrammed default
  6111  300003                     	org	3145731
  6112  300003  FF                 	db	255
  6113                           
  6114                           ;Config register CONFIG3L @ 0x300004
  6115                           ;	WDT Period Select bits
  6116                           ;	WDTCPS = 0x1F, unprogrammed default
  6117                           ;	WDT operating mode
  6118                           ;	WDTE = OFF, WDT Disabled
  6119  300004                     	org	3145732
  6120  300004  9F                 	db	159
  6121                           
  6122                           ;Config register CONFIG3H @ 0x300005
  6123                           ;	unspecified, using default values
  6124                           ;	WDT Window Select bits
  6125                           ;	WDTCWS = 0x7, unprogrammed default
  6126                           ;	WDT input clock selector
  6127                           ;	WDTCCS = 0x7, unprogrammed default
  6128  300005                     	org	3145733
  6129  300005  FF                 	db	255
  6130                           
  6131                           ;Config register CONFIG4L @ 0x300006
  6132                           ;	unspecified, using default values
  6133                           ;	Write Protection Block 0
  6134                           ;	WRT0 = 0x1, unprogrammed default
  6135                           ;	Write Protection Block 1
  6136                           ;	WRT1 = 0x1, unprogrammed default
  6137                           ;	Write Protection Block 2
  6138                           ;	WRT2 = 0x1, unprogrammed default
  6139                           ;	Write Protection Block 3
  6140                           ;	WRT3 = 0x1, unprogrammed default
  6141                           ;	Write Protection Block 3
  6142                           ;	WRT4 = 0x1, unprogrammed default
  6143                           ;	Write Protection Block 3
  6144                           ;	WRT5 = 0x1, unprogrammed default
  6145                           ;	Write Protection Block 3
  6146                           ;	WRT6 = 0x1, unprogrammed default
  6147                           ;	Write Protection Block 3
  6148                           ;	WRT7 = 0x1, unprogrammed default
  6149  300006                     	org	3145734
  6150  300006  FF                 	db	255
  6151                           
  6152                           ;Config register CONFIG4H @ 0x300007
  6153                           ;	unspecified, using default values
  6154                           ;	Configuration Register Write Protection bit
  6155                           ;	WRTC = 0x1, unprogrammed default
  6156                           ;	Boot Block Write Protection bit
  6157                           ;	WRTB = 0x1, unprogrammed default
  6158                           ;	Data EEPROM Write Protection bit
  6159                           ;	WRTD = 0x1, unprogrammed default
  6160                           ;	Scanner Enable bit
  6161                           ;	SCANE = 0x1, unprogrammed default
  6162                           ;	Low Voltage Programming Enable bit
  6163                           ;	LVP = 0x1, unprogrammed default
  6164  300007                     	org	3145735
  6165  300007  FF                 	db	255
  6166                           
  6167                           ;Config register CONFIG5L @ 0x300008
  6168                           ;	unspecified, using default values
  6169                           ;	UserNVM Program Memory Code Protection bit
  6170                           ;	CP = 0x1, unprogrammed default
  6171                           ;	DataNVM Memory Code Protection bit
  6172                           ;	CPD = 0x1, unprogrammed default
  6173  300008                     	org	3145736
  6174  300008  FF                 	db	255
  6175                           
  6176                           ;Config register CONFIG5H @ 0x300009
  6177                           ;	unspecified, using default values
  6178  300009                     	org	3145737
  6179  300009  FF                 	db	255
  6180                           
  6181                           ;Config register CONFIG6L @ 0x30000A
  6182                           ;	unspecified, using default values
  6183                           ;	Table Read Protection Block 0
  6184                           ;	EBTR0 = 0x1, unprogrammed default
  6185                           ;	Table Read Protection Block 1
  6186                           ;	EBTR1 = 0x1, unprogrammed default
  6187                           ;	Table Read Protection Block 2
  6188                           ;	EBTR2 = 0x1, unprogrammed default
  6189                           ;	Table Read Protection Block 3
  6190                           ;	EBTR3 = 0x1, unprogrammed default
  6191                           ;	Table Read Protection Block 4
  6192                           ;	EBTR4 = 0x1, unprogrammed default
  6193                           ;	Table Read Protection Block 5
  6194                           ;	EBTR5 = 0x1, unprogrammed default
  6195                           ;	Table Read Protection Block 6
  6196                           ;	EBTR6 = 0x1, unprogrammed default
  6197                           ;	Table Read Protection Block 7
  6198                           ;	EBTR7 = 0x1, unprogrammed default
  6199  30000A                     	org	3145738
  6200  30000A  FF                 	db	255
  6201                           
  6202                           ;Config register CONFIG6H @ 0x30000B
  6203                           ;	unspecified, using default values
  6204                           ;	Boot Block Table Read Protection bit
  6205                           ;	EBTRB = 0x1, unprogrammed default
  6206  30000B                     	org	3145739
  6207  30000B  FF                 	db	255
  6208                           tosu	equ	0xFFF
  6209                           tosh	equ	0xFFE
  6210                           tosl	equ	0xFFD
  6211                           stkptr	equ	0xFFC
  6212                           pclatu	equ	0xFFB
  6213                           pclath	equ	0xFFA
  6214                           pcl	equ	0xFF9
  6215                           tblptru	equ	0xFF8
  6216                           tblptrh	equ	0xFF7
  6217                           tblptrl	equ	0xFF6
  6218                           tablat	equ	0xFF5
  6219                           prodh	equ	0xFF4
  6220                           prodl	equ	0xFF3
  6221                           indf0	equ	0xFEF
  6222                           postinc0	equ	0xFEE
  6223                           postdec0	equ	0xFED
  6224                           preinc0	equ	0xFEC
  6225                           plusw0	equ	0xFEB
  6226                           fsr0h	equ	0xFEA
  6227                           fsr0l	equ	0xFE9
  6228                           wreg	equ	0xFE8
  6229                           indf1	equ	0xFE7
  6230                           postinc1	equ	0xFE6
  6231                           postdec1	equ	0xFE5
  6232                           preinc1	equ	0xFE4
  6233                           plusw1	equ	0xFE3
  6234                           fsr1h	equ	0xFE2
  6235                           fsr1l	equ	0xFE1
  6236                           bsr	equ	0xFE0
  6237                           indf2	equ	0xFDF
  6238                           postinc2	equ	0xFDE
  6239                           postdec2	equ	0xFDD
  6240                           preinc2	equ	0xFDC
  6241                           plusw2	equ	0xFDB
  6242                           fsr2h	equ	0xFDA
  6243                           fsr2l	equ	0xFD9
  6244                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      87
    BANK0           160     40     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    read_card@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    read_card@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S260$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S260$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_read_card
    _read_card->_turnLeft
    _read_card->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    ___flge->___xxtofl
    _interrupts_init->_colorclick_writetoaddr
    _interrupts_clear->_I2C_2_Master_Write
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_read_card

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   46240
                                             56 COMRAM     2     2      0
                                              6 BANK0     34    34      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                    _colorclick_init
              _colorclick_readColour
          _colorclick_toggleClearLED
                            _forward
                    _interrupts_init
                          _read_card
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _read_card                                           26     6     20   29155
                                             36 COMRAM    20     0     20
                                              0 BANK0      6     6      0
                             ___flge
                            ___lwdiv
                           ___xxtofl
                            _reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _turnRight                                            7     2      5    5398
                                             29 COMRAM     7     2      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             7     2      5    4588
                                             29 COMRAM     7     2      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4756
                                             29 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              6     2      4    3496
                                             29 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2636
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     781
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    4586
                                             18 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      1     1      0     772
                                              8 COMRAM     1     1      0
             _colorclick_writetoaddr
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _forward                                              6     2      4    3316
                                             29 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2888
                                             18 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     685
                                             10 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     775
                                             15 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     816
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colorclick_writetoaddr                               2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colorclick_toggleClearLED                            1     1      0      66
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              4 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _LowISR                                               1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              1     1      0      22
                                              2 COMRAM     1     1      0
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (7) i2_interrupts_clear                                   0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Idle                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colorclick_toggleClearLED
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _interrupts_init
     _colorclick_writetoaddr
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _read_card
     ___flge
       ___xxtofl (ARG)
     ___lwdiv
     ___xxtofl
     _reverse
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _turnLeft
   _turnRight

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      66       5       63.7%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      57       1       92.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD       8        0.0%
DATA                 0      0      BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 14:01:32 2021

        __end_of_colorclick_readRed 1814         __end_of_colorclick_readBlue 1904  
      __end_of_colorclick_readClear 18B4        __end_of_colorclick_readGreen 1864  
                                l30 1A88                                  l33 1AAE  
                                l42 1C14                                  l27 1A86  
                                l36 1C1E                                  l45 1BE8  
                                l39 1C0A                                  l48 1A1C  
             __end_of_DCmotors_init 1954                        ___awdiv@sign 0010  
                                bsr 000FE0                 ___wmul@multiplicand 0007  
    __size_of_colorclick_readColour 0044       __end_of_colorclick_readColour 1998  
            _colorclick_writetoaddr 1B42                                 l120 095A  
                               l130 09E2                                 l115 08FA  
                               l133 0A0C                                 l125 0998  
                               l222 119C                                 l150 0ADA  
                               l142 0A66                                 l231 1BC6  
                               l215 1952                                 l143 0A94  
                               l119 0916                                 l225 1BF4  
                               l129 09B4                                 l242 164C  
                               l250 15B2                                 l146 0ABE  
                               l138 0A4A                                 l323 17C2  
                               l228 1C28                                 l237 161C  
                               l245 1582                                 l502 18B2  
                               l326 1BB0                                 l262 0EAA  
                               l352 1B9A                                 l272 0FC6  
                               l505 1996                                 l257 16E0  
                               l273 0FC8                                 l281 0CF4  
                               l258 16E2                                 l266 0EDA  
                               l283 0DB0                                 l540 1AFC  
                               l268 0F96                                 l277 0CC4  
                               l287 0DE0                                 l288 0DE2  
                               l481 1A5C                                 l537 088A  
                               l490 1B60                                 l810 1454  
                               l397 1B80                                 l493 1812  
                               l805 140E                                 l487 1B40  
                               l496 1862                                 l499 1902  
                               l771 1518                                 wreg 000FE8  
                   _colorclick_init 1A1E                                l1031 174E  
                              l1202 128C                                l1038 1756  
                              l2015 1A88                                l2121 1A6E  
                              l2017 1A98                                l3001 12F6  
                              l1209 12E8                                l2123 1A70  
                              l3011 133E                                l3003 12F8  
                              l2125 1A72                                l2117 1A5E  
                              l2213 1B22                                l3021 15EC  
                              l3013 1340                                l3005 12FC  
                              l3101 089A                                l2215 1BEA  
                              l2127 1A74                                l2119 1A68  
                              l2071 1C1A                                l3023 15F8  
                              l3007 1320                                l3031 00C2  
                              l3111 08B0                                l3103 089E  
                              l2217 1C20                                l2081 1BE0  
                              l2401 1A54                                l2073 1C02  
                              l3025 1604                                l3017 15B4  
                              l3009 1330                                l3041 0202  
                              l3033 0106                                l3201 0B6A  
                              l3121 08CE                                l3113 08B6  
                              l3105 08A2                                l2219 1BB2  
                              l2083 1BE4                                l2403 1A56  
                              l2091 19F2                                l2075 1C06  
                              l2251 17C4                                l3027 1634  
                              l3019 15D8                                l2411 1768  
                              l1195 11F4                                l3051 0342  
                              l3043 0246                                l3035 014A  
                              l3211 0BEE                                l3203 0B7C  
                              l3131 08EE                                l3123 08D6  
                              l3115 08BA                                l3107 08A6  
                              l2069 1C16                                l2077 1C0C  
                              l2093 1A18                                l2085 19DE  
                              l2253 180A                                l2421 1792  
                              l2413 176A                                l2405 1758  
                              l3061 0482                                l3053 0372  
                              l3045 0276                                l3037 017A  
                              l3029 002A                                l3213 0BF2  
                              l3205 0BA0                                l3141 0956  
                              l3133 08F2                                l3125 08DA  
                              l3117 08C2                                l3109 08AC  
                              l1198 1350                                l2079 1C10  
                              l2095 1A1A                                l2087 19E2  
                              l2263 18B4                                l2271 18AA  
                              l2247 1B9C                                l2431 17BC  
                              l2423 179C                                l2415 176E  
                              l2407 175E                                l3071 05D6  
                              l3063 04C6                                l3055 03B6  
                              l3047 02BA                                l3039 01BE  
                              l3207 0BD8                                l3151 0994  
                              l3143 0958                                l3135 0908  
                              l3127 08DE                                l3119 08CA  
                              l2441 191E                                l2249 1B44  
                              l2089 19EA                                l2265 18FA  
                              l2257 1814                                l2433 17BE  
                              l2425 17A6                                l2417 1778  
                              l2409 1764                                l3081 0716  
                              l3073 061A                                l3065 050A  
                              l3057 03FA                                l3049 02FE  
                              l3209 0BDE                                l3161 09F0  
                              l3153 09A6                                l3145 0968  
                              l3137 091A                                l3129 08E6  
                              l2451 1928                                l2443 1920  
                              l2259 185A                                l2435 17C0  
                              l2427 17B0                                l2419 1788  
                              l3083 075A                                l3075 065E  
                              l3067 054E                                l3059 043E  
                              l3171 0A40                                l3163 09F2  
                              l3155 09C2                                l3147 0976  
                              l3139 093E                                l2381 1B94  
                              l2461 193A                                l2453 192A  
                              l2445 1922                                l2437 1906  
                              l2269 1864                                l2429 17BA  
                              l3093 085A                                l3085 078A  
                              l3077 068E                                l3069 0592  
                              l3181 0A8E                                l3173 0A46  
                              l3165 0A0A                                l3157 09C4  
                              l3149 098E                                l2383 1B96  
                              l2463 1946                                l2455 192C  
                              l2447 1924                                l2439 191A  
                              l2471 1B6C                                l2391 1A2C  
                              l3095 085E                                l3087 07CE  
                              l3079 06D2                                l3191 0ADC  
                              l3183 0AA2                                l3175 0A58  
                              l3167 0A1A                                l3159 09DC  
                              l2385 1B98                                l2377 1B82  
                              l2465 194A                                l2457 192E  
                              l2449 1926                                l2481 1B7E  
                              l2473 1B6E                                l2393 1A3C  
                              l3097 0876                                l3089 0812  
                              l3193 0AE2                                l3185 0AA4  
                              l3177 0A74                                l3169 0A28  
                              l2379 1B8C                                l2467 194E  
                              l2459 1938                                l2475 1B70  
                              l2395 1A46                                l2387 1A1E  
                              l2483 1954                                l2811 10AE  
                              l2803 0FCA                                l3195 0AFA  
                              l3187 0ABC                                l3179 0A76  
                              l3099 088C                                l2477 1B7A  
                              l2469 1B62                                l2397 1A50  
                              l2389 1A22                                l2485 1984  
                              l2813 10CA                                l2805 0FE6  
                              l2901 151A                                l2821 0C32  
                              l3197 0B0E                                l3189 0ACC  
                              l2479 1B7C                                l2399 1A52  
                              l2815 1134                                l2807 1048  
                              l2911 159A                                l2903 153E  
                              l2831 0C94                                l2823 0C50  
                              l3199 0B32                                l2761 145A  
                              l2753 1AD8                                l2809 108E  
                              l2905 1552                                l2921 1698  
                              l2913 164E                                l2841 0D1E  
                              l2833 0CA0                                l2825 0C68  
                              l2817 0BFE                                l2771 148A  
                              l2763 1468                                l2755 1AF4  
                              l2931 1390                                l2907 155E  
                              l2915 1654                                l2923 16B0  
                              l2851 0D80                                l2843 0D3C  
                              l2835 0CAC                                l2827 0C72  
                              l2819 0C0E                                l2781 14B8  
                              l2773 148E                                l2765 1470  
                              l2941 13FC                                l2933 13BE  
                              l2909 156A                                l2925 16C8  
                              l2917 1680                                l2861 0DF4  
                              l2853 0D8C                                l2845 0D54  
                              l2837 0CDC                                l2829 0C8A  
                              l2791 14EC                                l2783 14C6  
                              l2775 1496                                l2767 1474  
                              l2759 1456                                l2943 144C  
                              l2935 13CE                                l2927 1352  
                              l2951 16EC                                l2919 168C  
                              l2871 0E70                                l2863 0E18  
                              l2855 0D98                                l2847 0D5E  
                              l2839 0CFA                                l2793 14F2  
                              l2785 14CC                                l2777 14A8  
                              l2769 1482                                l2945 1452  
                              l2937 13DC                                l2929 1380  
                              l2961 1722                                l2953 16FE  
                              l2873 0E7A                                l2865 0E36  
                              l2881 0EE0                                l2857 0DC8  
                              l2849 0D76                                l2787 14E2  
                              l2779 14B0                                l2795 14F8  
                              l2939 13EE                                l2963 1738  
                              l2955 1706                                l2971 11A0  
                              l2891 0F5C                                l2883 0F04  
                              l2875 0E86                                l2867 0E4E  
                              l2859 0DE4                                l2797 1508  
                              l2789 14EA                                l2965 1740  
                              l2957 170E                                l2949 16E4  
                              l2973 11B0                                l2893 0F66  
                              l2885 0F22                                l2877 0E92  
                              l2869 0E58                                l2799 1510  
                              l2967 1742                                l2959 171C  
                              l2991 1276                                l2983 122E  
                              l2975 11BE                                l2895 0F72  
                              l2887 0F3A                                l2879 0EC2  
                              l2969 1748                                l2993 1282  
                              l2985 1236                                l2977 1204  
                              l2897 0F7E                                l2889 0F44  
                              l2995 12BE                                l2987 1242  
                              l2979 121A                                l2899 0FAE  
                              l2997 12CA                                l2989 1274  
                              l2999 12D8                                u3000 159A  
                              u2041 198E                                u3001 1596  
                              u3010 15B2                                u3011 15AE  
                              u3100 171C                                u3020 16C8  
                              u3101 1718                                u3021 16C4  
                              u3110 1738                                u3030 16E0  
                              u3111 1734                                u3031 16DC  
                              u3040 1380                                u3200 1330  
                              u3120 11B0                        _BAUD4CONbits 000EE9  
                              u3041 137C                                u3201 132C  
                              u3121 11AC                                _LATE 000F7D  
                              u1370 1A98                                u1450 1A06  
                              u3050 13BE                                u3210 133E  
                              u3130 11BE                                u1371 1A94  
                              u1451 19FE                                u3051 13BA  
                              u3211 133A                                u3131 11BA  
                              _LATG 000F7F                                u1380 1AAE  
                              u3220 1634                                u3060 13DC  
                              u3140 121A                                u3300 02BA  
                              u1381 1AAA                                u3221 1630  
                              u3061 13D8                                u3141 1216  
                              u3301 02B6                                u3230 164C  
                              u3070 13FC                                u3150 1270  
                              u3310 02FE                                u3231 1648  
                              u3071 13F8                                u3151 126C  
                              u3311 02FA                                u3080 144C  
                              u3160 12BA                                u3400 061A  
                              u3320 0342                                u3240 00C2  
                              u3081 1448                                u3161 12B6  
                              u3401 0616                                u3321 033E  
                              u3241 00BE                                u3090 16FE  
                              u3170 12D8                                u3410 065E  
                              u3330 03B6                                u3250 0106  
                              _T2PR 000FBC                                u3091 16FA  
                              u3171 12D4                                u3411 065A  
                              u3331 03B2                                u3251 0102  
                              u1468 1A08                                u2700 0FE6  
                              u3180 12E8                                u3420 06D2  
                              u3340 03FA                                u3260 014A  
                              u1805 1B34                                u2701 0FE2  
                              u3181 12E4                                u3421 06CE  
                              u3341 03F6                                u3261 0146  
                              u3501 0924                                u1806 1B36  
                              u2710 10CA                                u3190 12F6  
                              u3430 0716                                u3350 043E  
                              u3270 01BE                                u1815 1B3E  
                              u2711 10C6                                u3191 12F2  
                              u3431 0712                                u3351 043A  
                              u3271 01BA                                u3511 0936  
                              u1816 1B40                                u2640 1468  
                              u2800 0CF4                                u3440 075A  
                              u3360 04C6                                u3280 0202  
                              u3600 0A58                                u3520 0968  
                              u2641 1464                                u2801 0CF0  
                              u3441 0756                                u3361 04C2  
                              u3281 01FE                                u3601 0A54  
                              u3521 0964                                u2650 1482  
                              u2810 0D30                                u3450 07CE  
                              u3370 050A                                u3290 0246  
                              u3610 0A66                                u3530 0976  
                              u2651 147E                                u2811 0D28  
                              u3451 07CA                                u3371 0506  
                              u3291 0242                                u3611 0A62  
                              u3531 0972                                u2660 14A8  
                              u2724 1124                                u2900 0E4E  
                              u2740 0C0E                                u3460 0812  
                              u3380 054E                                u3700 0B7C  
                              u3620 0A74                                u3540 09A6  
                              u2661 14A4                                u2725 1120  
                              u2901 0E4A                                u2741 0C0A  
                              u3461 080E                                u3381 054A  
                              u3701 0B78                                u3621 0A70  
                              u3541 09A2                                u2670 14C6  
                              u2734 118E                                u2910 0E70  
                              u2830 0D54                                u2750 0C44  
                              u3470 0856                                u3390 05D6  
                              u3630 0AA2                                u3550 09B4  
                              u2671 14C2                                u2735 118A  
                              u2911 0E6C                                u2831 0D50  
                              u2751 0C3C                                u3471 0852  
                              u3391 05D2                                u3711 0B86  
                              u3631 0A9E                                u3551 09B0  
                              u2680 14E2                                u2920 0EC2  
                              u2840 0D76                                u3640 0ACC  
                              u3560 09C2                                u3480 0908  
                              u2681 14DE                                u2921 0EBE  
                              u2841 0D72                                u3721 0B98  
                              u3641 0AC8                                u3561 09BE  
                              u3481 0904                                u2690 1508  
                              u2930 0EDA                                u2850 0DC8  
                              u2770 0C68                                u3650 0ADA  
                              u3570 09F0                                u3490 0916  
                              u1795 1B2A                                u2691 1504  
                              u2931 0ED6                                u2851 0DC4  
                              u2771 0C64                                u3731 0BAA  
                              u3651 0AD6                                u3571 09EC  
                              u3491 0912                                u1796 1B2C  
                              u2940 0F16                                u2860 0DE0  
                              u2828 0D32                                u2780 0C8A  
                              u3580 0A1A                                u2941 0F0E  
                              u2861 0DDC                                u2781 0C86  
                              u3741 0BBC                                u3661 0B18  
                              u3581 0A16                                u2870 0DF4  
                              u2790 0CDC                                u3750 0BEE  
                              u3590 0A28                                u2871 0DF0  
                              u2791 0CD8                                u3751 0BEA  
                              u3671 0B2A                                u3807 0AAE  
                              u3591 0A24                                u2960 0F3A  
                              u2880 0E2A                                u2768 0C46  
                              u2961 0F36                                u2881 0E22  
                              u3681 0B3C                                u3817 0AEC  
                              u2970 0F5C                                u3907 1A32  
                              u2971 0F58                                u3827 0CB6  
                              u3691 0B4E                                u2980 0FAE  
                              u2981 0FAA                                u3837 0DA2  
                              i2l30 1AB0                                u2990 0FC6  
                              u2958 0F18                                u2991 0FC2  
                              u3847 0E9C                                u3767 0948  
                              i2l33 1AD6                                u3857 0F88  
                              u3777 09CE                                i2l42 1C32  
                              u2898 0E2C                                u3867 16A2  
                              u3787 09FC                                i2l36 1C3C  
                              i2l45 1C00                                u3877 1574  
                              u3797 0A80                                u3887 177E  
                              u3897 160E       colorclick_writetoaddr@address 0008  
                       main@current 00AC                         main@initial 00A4  
 __end_of_colorclick_toggleClearLED 1B42             __end_of_interrupts_init 17C4  
                              _main 088C                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0058  
                              _stop 164E                                prodh 000FF4  
                              prodl 000FF3                                start 0026  
                  __end_of_ADC_init 1B9C                     __end_of_HighISR 19DC  
                      ___param_bank 000000              ??_clicker2buttons_init 0005  
                             ?_main 0001                               _ADPCH 000F5F  
                   __end_of___awdiv 151A                               ?_stop 001E  
                   ___awdiv@divisor 000D                     __end_of___lwdiv 1758  
                             i1l337 001E                               i2l332 19D8  
                             i2l326 1BDC                     ___awdiv@counter 000F  
          __end_of_interrupts_clear 1BB2          __end_of_I2C_2_Master_Start 1C20  
        __end_of_I2C_2_Master_Write 1BEA                     __end_of_forward 164E  
                 _clicker2LEDs_init 1C20                     __end_of_reverse 15B4  
                             plusw0 000FEB                               plusw2 000FDB  
            DCmotors_init@PWMperiod 0005                  ?_clicker2LEDs_init 0001  
                             ttemp5 0059                               ttemp6 005C  
                             ttemp7 0060                               status 000FD8  
                             wtemp8 0059               _I2C_2_Master_RepStart 1C02  
                   __initialization 1AFE                 ??_clicker2LEDs_init 0005  
                      __end_of_main 0BFE                        __end_of_stop 16E4  
                            ??_main 0039             __end_of_colorclick_init 1A5E  
                            ??_stop 0022                       __activetblptr 000000  
      __size_ofi2_I2C_2_Master_Idle 0028        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 1C2A                        ?_setMotorPWM 0013  
                            _ADRESH 000F64                    ___awdiv@dividend 000B  
              _colorclick_readClear 1864                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              i2l2113 1AB0  
                            i2l2115 1AC0                              i2l2371 1C2E  
                            i2l2365 1C34                              i2l2373 1BF8  
                            i2l2367 1C38                              i2l2375 1BFC  
              _colorclick_readGreen 1814                              i2l2369 1C2A  
                            i2l2571 1BC8                              i2l2691 19A8  
                            i2l2693 19AE                              i2l2695 19D0  
                            i2l2697 19D4                              i2l2689 1998  
                  ?_interrupts_init 0001                           ??_HighISR 0003  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                  __end_of___xxtofl 1352                              _LowISR 0018  
                  read_card@current 002D                    read_card@initial 0025  
                            ___flge 1352                              ___wmul 1AD8  
                         ??___awdiv 000F                           ??___lwdiv 0009  
                  ??_buggyLEDs_init 0005                  i2_interrupts_clear 1BC8  
                            clear_0 1B04                              clear_1 1B10  
                  ___awdiv@quotient 0011                              isa$std 000001  
                       read_card@mL 0035                         read_card@mR 0037  
                         ??_forward 0022                 ?i2_interrupts_clear 0001  
   colorclick_toggleClearLED@toggle 0005                           ?_ADC_init 0001  
                         ??_reverse 0022                              stop@mL 001E  
                            stop@mR 0020                        ?_USART4_init 0001  
             ?_colorclick_readClear 0009               ?_colorclick_readGreen 0009  
                  __end_of_turnLeft 0FCA                          ___flge@ff1 0013  
                        ___flge@ff2 0017                        ___xxtofl@arg 000F  
                      ___xxtofl@exp 000E                        ___xxtofl@val 0005  
                        __accesstop 0060             __end_of__initialization 1B16  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
              ??i2_interrupts_clear 0003                      __pcstackCOMRAM 0001  
           ?_colorclick_writetoaddr 0007                    ?_colorclick_init 0001  
                _colorclick_readRed 17C4                          ??_ADC_init 0005  
        __size_of_clicker2LEDs_init 000A                 ?_colorclick_readRed 0009  
                        __pbssBANK0 0060                        _battery_flag 009C  
     __size_ofi2_I2C_2_Master_Start 000A                  __size_of_read_card 0862  
     __size_ofi2_I2C_2_Master_Write 000C                             ?_LowISR 0001  
                      _T2CLKCONbits 000FBF      __end_of_colorclick_writetoaddr 1B62  
                           ?___flge 0013                             ?___wmul 0005  
              ??_colorclick_readRed 000B        __size_of_colorclick_readBlue 0050  
                           _INT1PPS 000DF1               _colorclick_readColour 1954  
                         ?___xxtofl 0005                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                   ?_interrupts_clear 0001  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6              ??_colorclick_readClear 000B  
                           _SSP2BUF 000ED5              ??_colorclick_readGreen 000B  
                ??_interrupts_clear 0007                __size_of_setMotorPWM 01D4  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
        ?_colorclick_toggleClearLED 0001                  __size_of_turnRight 01E6  
                         _ADREFbits 000F58                  _I2C_2_Master_Start 1C16  
               i2_I2C_2_Master_Idle 1AB0                  _I2C_2_Master_Write 1BDE  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 1C2A  
                           __Lparam 0000                     __size_of_LowISR 000E  
                   __size_of___flge 0104                             ___awdiv 1456  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 16E4                 ?_I2C_2_Master_Write 0001  
                           __pcinit 1AFE             colorclick_readClear@tmp 000E  
                           __ramtop 0E00                           ?_turnLeft 001E  
                           __ptext0 088C                             __ptext1 002A  
                           __ptext2 0BFE                             __ptext3 0DE4  
                           __ptext4 164E                             __ptext5 151A  
                           __ptext6 119E                             __ptext7 16E4  
                           __ptext8 1352                             __ptext9 1758  
     __size_of_clicker2buttons_init 000C                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                             _forward 15B4  
                        ??___xxtofl 0009                   __end_of_read_card 088C  
              ?i2_I2C_2_Master_Stop 0001                           _T2HLTbits 000FBE  
                           _reverse 151A                       _RxBufWriteCnt 0056  
              ??_I2C_2_Master_Start 0006                ??_I2C_2_Master_Write 0006  
                    __pintcode_body 1998                end_of_initialization 1B16  
                setMotorPWM@PWMduty 001C             colorclick_readGreen@tmp 000E  
              __size_of_USART4_init 0020                             int_func 1998  
                      turnRight@deg 0022                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                     _DCmotors_init 1904                          ??_turnLeft 0023  
                         _PORTFbits 000F8E              ?_colorclick_readColour 0010  
             ??i2_I2C_2_Master_Idle 0001                   __end_of_turnRight 0DE4  
             ??i2_I2C_2_Master_Stop 0002                       ___xxtofl@sign 000D  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 0006  
                      _EUSART4RXbuf 003B                        _EUSART4TXbuf 0060  
                        main@motorL 00B4                          main@motorR 00BD  
                    __end_of_LowISR 0026            __size_of_interrupts_init 006C  
                    __end_of___flge 1456                      ?_DCmotors_init 0001  
                    __end_of___wmul 1AFE                 start_initialization 1AFE  
                     _TxBufWriteCnt 0054                     _returnhome_flag 0057  
               _colorclick_readBlue 18B4         __size_ofi2_interrupts_clear 0016  
                          ??_LowISR 0004                            ??___flge 001B  
                          ??___wmul 0009       i2I2C_2_Master_Write@data_byte 0002  
      __end_ofi2_I2C_2_Master_Start 1C3E                ?_colorclick_readBlue 0009  
      __end_ofi2_I2C_2_Master_Write 1C02                         __pbssCOMRAM 003B  
                     __pcstackBANK0 009E             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4            __size_of_colorclick_init 0040  
                          ?_HighISR 0001                           _card_flag 009D  
       ??_colorclick_toggleClearLED 0005           __size_of_interrupts_clear 0016  
                  ___lwdiv@dividend 0005                         _clear_lower 0051  
                       _clear_upper 004F                           __pintcode 0008  
                   ??_DCmotors_init 0005                            ?___awdiv 000B  
                          ?___lwdiv 0005         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018               ??_colorclick_readBlue 000B  
              I2C_2_Master_Read@ack 0007                   ??_interrupts_init 0009  
              I2C_2_Master_Read@tmp 0008                            ?_forward 001E  
                 __size_of_turnLeft 01E6                   _I2C_2_Master_Idle 1A88  
                 _I2C_2_Master_Init 1A5E                   _I2C_2_Master_Read 19DC  
                 _I2C_2_Master_Stop 1C0C                        _RxBufReadCnt 0055  
                          _ADC_init 1B82                            ?_reverse 001E  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0015  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000A  
                         _read_card 002A       __size_of_colorclick_readClear 0050  
            colorclick_readBlue@tmp 000E                         turnLeft@deg 0022  
     __size_of_colorclick_readGreen 0050        __end_of_clicker2buttons_init 1BF6  
               ??_I2C_2_Master_Idle 0005                 ??_I2C_2_Master_Init 0005  
               ??_I2C_2_Master_Read 0006                      ___wmul@product 0009  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0006  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F         colorclick_writetoaddr@value 0007  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                            _PIE4bits 000E2D  
                       turnRight@mL 001E                            i2u151_40 1AC0  
                          i2u151_41 1ABC                         turnRight@mR 0020  
                          i2u152_40 1AD6                            i2u152_41 1AD2  
                          i2u260_40 19C0                            i2u260_41 19B8  
                          i2u261_48 19C2                            _PIR0bits 000E33  
                          i2u259_40 19A8                            i2u259_41 19A4  
                          _PIR4bits 000E37                            _SSP2CON2 000EDA  
                          _SSP2STAT 000ED8             ??_colorclick_readColour 0018  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 1AB0  
         _colorclick_toggleClearLED 1B20           __end_of_I2C_2_Master_Init 1A88  
         __end_of_I2C_2_Master_Read 1A1E                   ___wmul@multiplier 0005  
         __end_of_I2C_2_Master_Stop 1C16                        setMotorPWM@m 0013  
       I2C_2_Master_Write@data_byte 0006                        _TxBufReadCnt 0053  
                         _turnRight 0BFE                       ??_USART4_init 0005  
                        ?_read_card 0025         __size_of_I2C_2_Master_Start 000A  
       __size_of_I2C_2_Master_Write 000C        colorclick_readColour@current 0010  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 1C0C  
          ??_colorclick_writetoaddr 0008                 __end_of_setMotorPWM 119E  
                    read_card@B_rel 00A2                    __size_of_HighISR 19D4  
                    read_card@G_rel 00A0                i2_I2C_2_Master_Start 1C34  
                    read_card@R_rel 009E                   ??_colorclick_init 0009  
              i2_I2C_2_Master_Write 1BF6                            __Hrparam 0000  
                          __Lrparam 0000                           forward@mL 001E  
                         forward@mR 0020         __end_ofi2_I2C_2_Master_Idle 1AD8  
       __end_ofi2_I2C_2_Master_Stop 1C34                    __size_of___awdiv 00C4  
                  __size_of___lwdiv 0074                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                          _ANSELFbits 000EB4  
                          ___xxtofl 119E                      _buggyLEDs_init 1BB2  
                  __size_of_forward 009A                     ___lwdiv@divisor 0007  
                   ___lwdiv@counter 0009                          ?_turnRight 001E  
                          __ptext10 1B9C                            __ptext11 15B4  
                          __ptext20 1C02                            __ptext12 0FCA  
                          __ptext21 19DC                            __ptext13 1AD8  
                          __ptext30 1B62                            __ptext22 1A1E  
                          __ptext14 1456                            __ptext31 1904  
                          __ptext23 1B42                            __ptext15 1954  
                          __ptext40 1C2A                            __ptext32 1BEA  
                          __ptext24 1BDE                            __ptext16 17C4  
                          __ptext41 1C34                            __ptext33 1C20  
                          __ptext25 1C0C                            __ptext17 1814  
                          __ptext42 1AB0                            __ptext34 1BB2  
                          __ptext26 1C16                            __ptext18 1864  
                          __ptext35 1B82                            __ptext27 1A88  
                          __ptext19 18B4                            __ptext28 1B20  
                          __ptext29 1A5E                            __ptext38 1BC8  
                          __ptext39 1BF6                    __size_of_reverse 009A  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                     __size_of_main 0372                       __size_of_stop 0096  
                        turnLeft@mL 001E                          turnLeft@mR 0020  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
               __end_of_USART4_init 1B82                    _interrupts_clear 1B9C  
             colorclick_readRed@tmp 000E                           reverse@mL 001E  
                         reverse@mR 0020                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0058  
                          _turnLeft 0DE4          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
              _clicker2buttons_init 1BEA          __size_of_I2C_2_Master_Stop 000A  
            __end_of_buggyLEDs_init 1BC8                          _INTCONbits 000FF2  
                       _setMotorPWM 0FCA                         ??_read_card 0039  
                       _PWM6CONbits 000FA4                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
        __end_ofi2_interrupts_clear 1BDE     __size_of_colorclick_writetoaddr 0020  
                   _interrupts_init 1758               ?_clicker2buttons_init 0001  
                   ?_buggyLEDs_init 0001                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                         ??_turnRight 0023  
__size_of_colorclick_toggleClearLED 0022                         _USART4_init 1B62  
                        _TX4STAbits 000EE8              ??i2_I2C_2_Master_Start 0002  
            ??i2_I2C_2_Master_Write 0002  
