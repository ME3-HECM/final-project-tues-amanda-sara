

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 13:11:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.20
    96                           ; Generated 05/05/2020 GMT
    97                           ; 
    98                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  00585A                     __pidataBANK1:
   132                           	callstack 0
   133                           
   134                           ;initializer for colourcards_testing@F14685
   135  00585A  75                 	db	117
   136  00585B  6E                 	db	110
   137  00585C  6B                 	db	107
   138  00585D  6E                 	db	110
   139  00585E  6F                 	db	111
   140  00585F  77                 	db	119
   141  005860  6E                 	db	110
   142  005861  00                 	db	0
   143                           
   144                           ;initializer for stoa@F1163
   145  005862  28                 	db	40
   146  005863  6E                 	db	110
   147  005864  75                 	db	117
   148  005865  6C                 	db	108
   149  005866  6C                 	db	108
   150  005867  29                 	db	41
   151  005868  00                 	db	0
   152                           
   153                           ;initializer for colourcards_testing@F14679
   154  005869  6F                 	db	111
   155  00586A  72                 	db	114
   156  00586B  61                 	db	97
   157  00586C  6E                 	db	110
   158  00586D  67                 	db	103
   159  00586E  65                 	db	101
   160  00586F  00                 	db	0
   161                           
   162                           ;initializer for colourcards_testing@F14675
   163  005870  79                 	db	121
   164  005871  65                 	db	101
   165  005872  6C                 	db	108
   166  005873  6C                 	db	108
   167  005874  6F                 	db	111
   168  005875  77                 	db	119
   169  005876  00                 	db	0
   170                           
   171                           ;initializer for colourcards_testing@F14683
   172  005877  77                 	db	119
   173  005878  68                 	db	104
   174  005879  69                 	db	105
   175  00587A  74                 	db	116
   176  00587B  65                 	db	101
   177  00587C  00                 	db	0
   178                           
   179                           ;initializer for colourcards_testing@F14671
   180  00587D  67                 	db	103
   181  00587E  72                 	db	114
   182  00587F  65                 	db	101
   183  005880  65                 	db	101
   184  005881  6E                 	db	110
   185  005882  00                 	db	0
   186                           
   187                           ;initializer for colourcards_testing@F14677
   188  005883  70                 	db	112
   189  005884  69                 	db	105
   190  005885  6E                 	db	110
   191  005886  6B                 	db	107
   192  005887  00                 	db	0
   193                           
   194                           ;initializer for colourcards_testing@F14673
   195  005888  62                 	db	98
   196  005889  6C                 	db	108
   197  00588A  75                 	db	117
   198  00588B  65                 	db	101
   199  00588C  00                 	db	0
   200                           
   201                           ;initializer for colourcards_testing@F14669
   202  00588D  72                 	db	114
   203  00588E  65                 	db	101
   204  00588F  64                 	db	100
   205  005890  00                 	db	0
   206                           
   207                           	psect	idataBANK2
   208  005A78                     __pidataBANK2:
   209                           	callstack 0
   210                           
   211                           ;initializer for colourcards_testing@F14681
   212  005A78  6C                 	db	108
   213  005A79  69                 	db	105
   214  005A7A  67                 	db	103
   215  005A7B  68                 	db	104
   216  005A7C  74                 	db	116
   217  005A7D  20                 	db	32
   218  005A7E  62                 	db	98
   219  005A7F  6C                 	db	108
   220  005A80  75                 	db	117
   221  005A81  65                 	db	101
   222  005A82  00                 	db	0
   223                           
   224                           	psect	nvBANK0
   225  0000FB                     __pnvBANK0:
   226                           	callstack 0
   227  0000FB                     _interrupts_upper:
   228                           	callstack 0
   229  0000FB                     	ds	2
   230  0000FD                     _DCmotors_upper:
   231                           	callstack 0
   232  0000FD                     	ds	1
   233  0000FE                     _DCmotors_lower:
   234                           	callstack 0
   235  0000FE                     	ds	1
   236  0000                     _CM1CON1bits	set	3793
   237  0000                     _CM1CON0bits	set	3792
   238  0000                     _CM1PCHbits	set	3795
   239  0000                     _CM1NCHbits	set	3794
   240  0000                     _DAC1CON1bits	set	3783
   241  0000                     _DAC1CON0bits	set	3782
   242  0000                     _RC7PPS	set	3689
   243  0000                     _RE2PPS	set	3700
   244  0000                     _PIE4bits	set	3629
   245  0000                     _TX4REG	set	3812
   246  0000                     _RC4REG	set	3811
   247  0000                     _PIR4bits	set	3639
   248  0000                     _RC4STAbits	set	3815
   249  0000                     _SP4BRGH	set	3814
   250  0000                     _SP4BRGL	set	3813
   251  0000                     _TX4STAbits	set	3816
   252  0000                     _BAUD4CONbits	set	3817
   253  0000                     _RX4PPS	set	3605
   254  0000                     _RC0PPS	set	3682
   255  0000                     _SSP2BUF	set	3797
   256  0000                     _SSP2CON2bits	set	3802
   257  0000                     _SSP2CON2	set	3802
   258  0000                     _SSP2STAT	set	3800
   259  0000                     _RD6PPS	set	3696
   260  0000                     _RD5PPS	set	3695
   261  0000                     _SSP2CLKPPS	set	3612
   262  0000                     _SSP2DATPPS	set	3613
   263  0000                     _ANSELDbits	set	3751
   264  0000                     _SSP2ADD	set	3798
   265  0000                     _SSP2CON1bits	set	3801
   266  0000                     _ANSELFbits	set	3764
   267  0000                     _PIR0bits	set	3635
   268  0000                     _PIE0bits	set	3625
   269  0000                     _ADPCH	set	3935
   270  0000                     _ADREFbits	set	3928
   271  0000                     _PWM7CONbits	set	4001
   272  0000                     _PWM6CONbits	set	4004
   273  0000                     _LATCbits	set	3963
   274  0000                     _LATEbits	set	3965
   275  0000                     _TRISEbits	set	3973
   276  0000                     _T2PR	set	4028
   277  0000                     _T2CLKCONbits	set	4031
   278  0000                     _T2HLTbits	set	4030
   279  0000                     _T2CONbits	set	4029
   280  0000                     _TRISCbits	set	3971
   281  0000                     _TRISAbits	set	3969
   282  0000                     _TRISGbits	set	3975
   283  0000                     _TRISHbits	set	3976
   284  0000                     _TRISDbits	set	3972
   285  0000                     _ADRESH	set	3940
   286  0000                     _ADCON0bits	set	3936
   287  0000                     _TRISFbits	set	3974
   288  0000                     _LATFbits	set	3966
   289  0000                     _LATAbits	set	3961
   290  0000                     _LATGbits	set	3967
   291  0000                     _INTCONbits	set	4082
   292  0000                     _LATHbits	set	3968
   293  0000                     _LATDbits	set	3964
   294  0000                     _PORTFbits	set	3982
   295  0000                     _LATG	set	3967
   296  0000                     _PWM7DCH	set	4000
   297  0000                     _LATE	set	3965
   298  0000                     _PWM6DCH	set	4003
   299                           
   300                           	psect	smallconst
   301  000E00                     __psmallconst:
   302                           	callstack 0
   303  000E00  00                 	db	0
   304  000E01                     STR_1:
   305                           
   306                           ; BSR set to: 15
   307  000E01  52                 	db	82	;'R'
   308  000E02  47                 	db	71	;'G'
   309  000E03  42                 	db	66	;'B'
   310  000E04  43                 	db	67	;'C'
   311  000E05  3A                 	db	58	;':'
   312  000E06  20                 	db	32
   313  000E07  25                 	db	37
   314  000E08  69                 	db	105	;'i'
   315  000E09  20                 	db	32
   316  000E0A  25                 	db	37
   317  000E0B  69                 	db	105	;'i'
   318  000E0C  20                 	db	32
   319  000E0D  25                 	db	37
   320  000E0E  69                 	db	105	;'i'
   321  000E0F  20                 	db	32
   322  000E10  25                 	db	37
   323  000E11  69                 	db	105	;'i'
   324  000E12  20                 	db	32
   325  000E13  20                 	db	32
   326  000E14  20                 	db	32
   327  000E15  20                 	db	32
   328  000E16  20                 	db	32
   329  000E17  52                 	db	82	;'R'
   330  000E18  47                 	db	71	;'G'
   331  000E19  42                 	db	66	;'B'
   332  000E1A  43                 	db	67	;'C'
   333  000E1B  5F                 	db	95	;'_'
   334  000E1C  72                 	db	114	;'r'
   335  000E1D  65                 	db	101	;'e'
   336  000E1E  6C                 	db	108	;'l'
   337  000E1F  3A                 	db	58	;':'
   338  000E20  20                 	db	32
   339  000E21  25                 	db	37
   340  000E22  2E                 	db	46
   341  000E23  33                 	db	51	;'3'
   342  000E24  66                 	db	102	;'f'
   343  000E25  20                 	db	32
   344  000E26  25                 	db	37
   345  000E27  2E                 	db	46
   346  000E28  33                 	db	51	;'3'
   347  000E29  66                 	db	102	;'f'
   348  000E2A  20                 	db	32
   349  000E2B  25                 	db	37
   350  000E2C  2E                 	db	46
   351  000E2D  33                 	db	51	;'3'
   352  000E2E  66                 	db	102	;'f'
   353  000E2F  20                 	db	32
   354  000E30  20                 	db	32
   355  000E31  20                 	db	32
   356  000E32  20                 	db	32
   357  000E33  20                 	db	32
   358  000E34  43                 	db	67	;'C'
   359  000E35  6F                 	db	111	;'o'
   360  000E36  6C                 	db	108	;'l'
   361  000E37  6F                 	db	111	;'o'
   362  000E38  75                 	db	117	;'u'
   363  000E39  72                 	db	114	;'r'
   364  000E3A  3A                 	db	58	;':'
   365  000E3B  20                 	db	32
   366  000E3C  25                 	db	37
   367  000E3D  73                 	db	115	;'s'
   368  000E3E  0A                 	db	10
   369  000E3F  0D                 	db	13
   370  000E40  00                 	db	0
   371  000E41                     STR_2:
   372                           
   373                           ; BSR set to: 15
   374  000E41  49                 	db	73	;'I'
   375  000E42  4E                 	db	78	;'N'
   376  000E43  46                 	db	70	;'F'
   377  000E44  00                 	db	0
   378  000E45                     STR_6:
   379                           
   380                           ; BSR set to: 15
   381  000E45  4E                 	db	78	;'N'
   382  000E46  41                 	db	65	;'A'
   383  000E47  4E                 	db	78	;'N'
   384  000E48  00                 	db	0
   385  000E49                     STR_3:
   386                           
   387                           ; BSR set to: 15
   388  000E49  69                 	db	105	;'i'
   389  000E4A  6E                 	db	110	;'n'
   390  000E4B  66                 	db	102	;'f'
   391  000E4C  00                 	db	0
   392  000E4D                     STR_7:
   393                           
   394                           ; BSR set to: 15
   395  000E4D  6E                 	db	110	;'n'
   396  000E4E  61                 	db	97	;'a'
   397  000E4F  6E                 	db	110	;'n'
   398  000E50  00                 	db	0
   399  000E51                     STR_10:
   400                           
   401                           ; BSR set to: 15
   402  000E51  6C                 	db	108	;'l'
   403  000E52  66                 	db	102	;'f'
   404  000E53  00                 	db	0
   405  000E54  00                 	db	0	; dummy byte at the end
   406  0000                     
   407                           ; #config settings
   408                           
   409                           	psect	cinit
   410  0051AE                     __pcinit:
   411                           	callstack 0
   412  0051AE                     start_initialization:
   413                           	callstack 0
   414  0051AE                     __initialization:
   415                           	callstack 0
   416                           
   417                           ; Initialize objects allocated to BANK2 (11 bytes)
   418                           ; load TBLPTR registers with __pidataBANK2
   419  0051AE  0E78               	movlw	low __pidataBANK2
   420  0051B0  6EF6               	movwf	tblptrl,c
   421  0051B2  0E5A               	movlw	high __pidataBANK2
   422  0051B4  6EF7               	movwf	tblptrh,c
   423  0051B6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   424  0051B8  6EF8               	movwf	tblptru,c
   425  0051BA  EE02  F0A0         	lfsr	0,__pdataBANK2
   426  0051BE  EE10 F00B          	lfsr	1,11
   427  0051C2                     copy_data0:
   428  0051C2  0009               	tblrd		*+
   429  0051C4  CFF5 FFEE          	movff	tablat,postinc0
   430  0051C8  50E5               	movf	postdec1,w,c
   431  0051CA  50E1               	movf	fsr1l,w,c
   432  0051CC  E1FA               	bnz	copy_data0
   433                           
   434                           ; Initialize objects allocated to BANK1 (55 bytes)
   435                           ; load TBLPTR registers with __pidataBANK1
   436  0051CE  0E5A               	movlw	low __pidataBANK1
   437  0051D0  6EF6               	movwf	tblptrl,c
   438  0051D2  0E58               	movlw	high __pidataBANK1
   439  0051D4  6EF7               	movwf	tblptrh,c
   440  0051D6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   441  0051D8  6EF8               	movwf	tblptru,c
   442  0051DA  EE01  F0BC         	lfsr	0,__pdataBANK1
   443  0051DE  EE10 F037          	lfsr	1,55
   444  0051E2                     copy_data1:
   445  0051E2  0009               	tblrd		*+
   446  0051E4  CFF5 FFEE          	movff	tablat,postinc0
   447  0051E8  50E5               	movf	postdec1,w,c
   448  0051EA  50E1               	movf	fsr1l,w,c
   449  0051EC  E1FA               	bnz	copy_data1
   450                           
   451                           ; Clear objects allocated to BANK2 (160 bytes)
   452  0051EE  EE02  F000         	lfsr	0,__pbssBANK2
   453  0051F2  0EA0               	movlw	160
   454  0051F4                     clear_0:
   455  0051F4  6AEE               	clrf	postinc0,c
   456  0051F6  06E8               	decf	wreg,f,c
   457  0051F8  E1FD               	bnz	clear_0
   458                           
   459                           ; Clear objects allocated to BANK1 (12 bytes)
   460  0051FA  EE01  F0F3         	lfsr	0,__pbssBANK1
   461  0051FE  0E0C               	movlw	12
   462  005200                     clear_1:
   463  005200  6AEE               	clrf	postinc0,c
   464  005202  06E8               	decf	wreg,f,c
   465  005204  E1FD               	bnz	clear_1
   466                           
   467                           ; Clear objects allocated to BANK0 (17 bytes)
   468  005206  EE00  F0EA         	lfsr	0,__pbssBANK0
   469  00520A  0E11               	movlw	17
   470  00520C                     clear_2:
   471  00520C  6AEE               	clrf	postinc0,c
   472  00520E  06E8               	decf	wreg,f,c
   473  005210  E1FD               	bnz	clear_2
   474  005212                     end_of_initialization:
   475                           	callstack 0
   476  005212                     __end_of__initialization:
   477                           	callstack 0
   478  005212  0100               	movlb	0
   479  005214  EF42  F025         	goto	_main	;jump to C main() function
   480                           
   481                           	psect	bssBANK0
   482  0000EA                     __pbssBANK0:
   483                           	callstack 0
   484  0000EA                     _nout:
   485                           	callstack 0
   486  0000EA                     	ds	2
   487  0000EC                     _width:
   488                           	callstack 0
   489  0000EC                     	ds	2
   490  0000EE                     _prec:
   491                           	callstack 0
   492  0000EE                     	ds	2
   493  0000F0                     _flags:
   494                           	callstack 0
   495  0000F0                     	ds	2
   496  0000F2                     _interrupts_lower:
   497                           	callstack 0
   498  0000F2                     	ds	2
   499  0000F4                     _returnhome_flag:
   500                           	callstack 0
   501  0000F4                     	ds	1
   502  0000F5                     _unknowncard_flag:
   503                           	callstack 0
   504  0000F5                     	ds	1
   505  0000F6                     _colourcard_flag:
   506                           	callstack 0
   507  0000F6                     	ds	1
   508  0000F7                     _TxBufReadCnt:
   509                           	callstack 0
   510  0000F7                     	ds	1
   511  0000F8                     _TxBufWriteCnt:
   512                           	callstack 0
   513  0000F8                     	ds	1
   514  0000F9                     _RxBufReadCnt:
   515                           	callstack 0
   516  0000F9                     	ds	1
   517  0000FA                     _RxBufWriteCnt:
   518                           	callstack 0
   519  0000FA                     	ds	1
   520                           
   521                           	psect	bssBANK1
   522  0001F3                     __pbssBANK1:
   523                           	callstack 0
   524  0001F3                     floorf@F527:
   525                           	callstack 0
   526  0001F3                     	ds	4
   527  0001F7                     ___fpclassifyf@F465:
   528                           	callstack 0
   529  0001F7                     	ds	4
   530  0001FB                     _clear_upper:
   531                           	callstack 0
   532  0001FB                     	ds	2
   533  0001FD                     _clear_lower:
   534                           	callstack 0
   535  0001FD                     	ds	2
   536                           
   537                           	psect	dataBANK1
   538  0001BC                     __pdataBANK1:
   539                           	callstack 0
   540  0001BC                     colourcards_testing@F14685:
   541                           	callstack 0
   542  0001BC                     	ds	8
   543  0001C4                     stoa@F1163:
   544                           	callstack 0
   545  0001C4                     	ds	7
   546  0001CB                     colourcards_testing@F14679:
   547                           	callstack 0
   548  0001CB                     	ds	7
   549  0001D2                     colourcards_testing@F14675:
   550                           	callstack 0
   551  0001D2                     	ds	7
   552  0001D9                     colourcards_testing@F14683:
   553                           	callstack 0
   554  0001D9                     	ds	6
   555  0001DF                     colourcards_testing@F14671:
   556                           	callstack 0
   557  0001DF                     	ds	6
   558  0001E5                     colourcards_testing@F14677:
   559                           	callstack 0
   560  0001E5                     	ds	5
   561  0001EA                     colourcards_testing@F14673:
   562                           	callstack 0
   563  0001EA                     	ds	5
   564  0001EF                     colourcards_testing@F14669:
   565                           	callstack 0
   566  0001EF                     	ds	4
   567                           
   568                           	psect	bssBANK2
   569  000200                     __pbssBANK2:
   570                           	callstack 0
   571  000200                     _EUSART4TXbuf:
   572                           	callstack 0
   573  000200                     	ds	60
   574  00023C                     _EUSART4RXbuf:
   575                           	callstack 0
   576  00023C                     	ds	20
   577  000250                     _dbuf:
   578                           	callstack 0
   579  000250                     	ds	80
   580                           
   581                           	psect	dataBANK2
   582  0002A0                     __pdataBANK2:
   583                           	callstack 0
   584  0002A0                     colourcards_testing@F14681:
   585                           	callstack 0
   586  0002A0                     	ds	11
   587                           
   588                           	psect	cstackBANK1
   589  000100                     __pcstackBANK1:
   590                           	callstack 0
   591  000100                     colourcards_testing@buf:
   592                           	callstack 0
   593                           
   594                           ; 100 bytes @ 0x0
   595  000100                     	ds	100
   596  000164                     colourcards_testing@colour_488:
   597                           	callstack 0
   598                           
   599                           ; 11 bytes @ 0x64
   600  000164                     	ds	11
   601  00016F                     colourcards_testing@colour_492:
   602                           	callstack 0
   603                           
   604                           ; 8 bytes @ 0x6F
   605  00016F                     	ds	8
   606  000177                     colourcards_testing@colour_482:
   607                           	callstack 0
   608                           
   609                           ; 7 bytes @ 0x77
   610  000177                     	ds	7
   611  00017E                     colourcards_testing@colour_486:
   612                           	callstack 0
   613                           
   614                           ; 7 bytes @ 0x7E
   615  00017E                     	ds	7
   616  000185                     colourcards_testing@colour_478:
   617                           	callstack 0
   618                           
   619                           ; 6 bytes @ 0x85
   620  000185                     	ds	6
   621  00018B                     colourcards_testing@colour_490:
   622                           	callstack 0
   623                           
   624                           ; 6 bytes @ 0x8B
   625  00018B                     	ds	6
   626  000191                     colourcards_testing@colour_480:
   627                           	callstack 0
   628                           
   629                           ; 5 bytes @ 0x91
   630  000191                     	ds	5
   631  000196                     colourcards_testing@colour_484:
   632                           	callstack 0
   633                           
   634                           ; 5 bytes @ 0x96
   635  000196                     	ds	5
   636  00019B                     colourcards_testing@colour_476:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x9B
   640  00019B                     	ds	4
   641  00019F                     colourcards_testing@colour:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x9F
   645  00019F                     	ds	1
   646  0001A0                     colourcards_testing@R:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0xA0
   650  0001A0                     	ds	4
   651  0001A4                     colourcards_testing@G:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0xA4
   655  0001A4                     	ds	4
   656  0001A8                     colourcards_testing@B:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0xA8
   660  0001A8                     	ds	4
   661  0001AC                     colourcards_testing@C:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0xAC
   665  0001AC                     	ds	4
   666  0001B0                     colourcards_testing@R_rel:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0xB0
   670  0001B0                     	ds	4
   671  0001B4                     colourcards_testing@G_rel:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0xB4
   675  0001B4                     	ds	4
   676  0001B8                     colourcards_testing@B_rel:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0xB8
   680  0001B8                     	ds	4
   681                           
   682                           	psect	cstackBANK0
   683  000060                     __pcstackBANK0:
   684                           	callstack 0
   685  000060                     _efgtoa$2969:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x0
   689  000060                     	ds	2
   690  000062                     _efgtoa$2970:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x2
   694  000062                     	ds	2
   695  000064                     _efgtoa$2974:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x4
   699  000064                     	ds	2
   700  000066                     _efgtoa$2978:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x6
   704  000066                     	ds	2
   705  000068                     _efgtoa$2979:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x8
   709  000068                     	ds	2
   710  00006A                     _efgtoa$2980:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0xA
   714  00006A                     	ds	2
   715  00006C                     efgtoa@t:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0xC
   719  00006C                     	ds	2
   720  00006E                     efgtoa@pp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0xE
   724  00006E                     	ds	2
   725  000070                     efgtoa@ne:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x10
   729  000070                     	ds	2
   730  000072                     efgtoa@m:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x12
   734  000072                     	ds	2
   735  000074                     efgtoa@ou:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x14
   739  000074                     	ds	4
   740  000078                     efgtoa@d:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x18
   744  000078                     	ds	2
   745  00007A                     efgtoa@sign:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x1A
   749  00007A                     	ds	2
   750  00007C                     efgtoa@p:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x1C
   754  00007C                     	ds	2
   755  00007E                     efgtoa@w:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x1E
   759  00007E                     	ds	2
   760  000080                     efgtoa@nmode:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x20
   764  000080                     	ds	1
   765  000081                     efgtoa@mode:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x21
   769  000081                     	ds	1
   770  000082                     efgtoa@h:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x22
   774  000082                     	ds	4
   775  000086                     efgtoa@l:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x26
   779  000086                     	ds	4
   780  00008A                     efgtoa@i:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x2A
   784  00008A                     	ds	2
   785  00008C                     efgtoa@g:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x2C
   789  00008C                     	ds	4
   790  000090                     efgtoa@e:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x30
   794  000090                     	ds	2
   795  000092                     efgtoa@n:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x32
   799  000092                     	ds	2
   800  000094                     efgtoa@u:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x34
   804  000094                     	ds	4
   805  000098                     ?_vfprintf:
   806                           	callstack 0
   807  000098                     vfprintf@fp:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x38
   811  000098                     	ds	2
   812  00009A                     vfprintf@fmt:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x3A
   816  00009A                     	ds	2
   817  00009C                     vfprintf@ap:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x3C
   821  00009C                     	ds	2
   822  00009E                     vfprintf@cfmt:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x3E
   826  00009E                     	ds	2
   827  0000A0                     ?_sprintf:
   828                           	callstack 0
   829  0000A0                     sprintf@s:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x40
   833  0000A0                     	ds	2
   834  0000A2                     sprintf@fmt:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x42
   838  0000A2                     	ds	32
   839  0000C2                     sprintf@ap:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x62
   843  0000C2                     	ds	2
   844  0000C4                     sprintf@f:
   845                           	callstack 0
   846                           
   847                           ; 6 bytes @ 0x64
   848  0000C4                     	ds	6
   849  0000CA                     colourcards_testing@tmpval:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x6A
   853  0000CA                     	ds	2
   854  0000CC                     ??_colourcards_testing:
   855                           
   856                           ; 1 bytes @ 0x6C
   857  0000CC                     	ds	2
   858  0000CE                     ??_main:
   859                           
   860                           ; 1 bytes @ 0x6E
   861  0000CE                     	ds	2
   862  0000D0                     main@current:
   863                           	callstack 0
   864                           
   865                           ; 8 bytes @ 0x70
   866  0000D0                     	ds	8
   867  0000D8                     main@motorL:
   868                           	callstack 0
   869                           
   870                           ; 9 bytes @ 0x78
   871  0000D8                     	ds	9
   872  0000E1                     main@motorR:
   873                           	callstack 0
   874                           
   875                           ; 9 bytes @ 0x81
   876  0000E1                     	ds	9
   877                           
   878                           	psect	cstackCOMRAM
   879  000001                     __pcstackCOMRAM:
   880                           	callstack 0
   881  000001                     ??_I2C_2_Master_Idle:
   882  000001                     ?_strlen:
   883                           	callstack 0
   884  000001                     ?___fpclassifyf:
   885                           	callstack 0
   886  000001                     ?_isupper:
   887                           	callstack 0
   888  000001                     ?_isdigit:
   889                           	callstack 0
   890  000001                     ?_strncmp:
   891                           	callstack 0
   892  000001                     ?_isspace:
   893                           	callstack 0
   894  000001                     ?___wmul:
   895                           	callstack 0
   896  000001                     ?___awmod:
   897                           	callstack 0
   898  000001                     ?___fladd:
   899                           	callstack 0
   900  000001                     ?___fldiv:
   901                           	callstack 0
   902  000001                     ?___flmul:
   903                           	callstack 0
   904  000001                     ?___flneg:
   905                           	callstack 0
   906  000001                     ?___fltol:
   907                           	callstack 0
   908  000001                     ?___xxtofl:
   909                           	callstack 0
   910  000001                     ?___aodiv:
   911                           	callstack 0
   912  000001                     ?___aomod:
   913                           	callstack 0
   914  000001                     ADC_getval@tmpval:
   915                           	callstack 0
   916  000001                     colourclickLEDs_C@tog:
   917                           	callstack 0
   918  000001                     sendCharSerial4@charToSend:
   919                           	callstack 0
   920  000001                     DCmotors_init@PWMperiod:
   921                           	callstack 0
   922  000001                     ___wmul@multiplier:
   923                           	callstack 0
   924  000001                     ___awmod@dividend:
   925                           	callstack 0
   926  000001                     isdigit@c:
   927                           	callstack 0
   928  000001                     isspace@c:
   929                           	callstack 0
   930  000001                     isupper@c:
   931                           	callstack 0
   932  000001                     fputc@c:
   933                           	callstack 0
   934  000001                     strcpy@dest:
   935                           	callstack 0
   936  000001                     strlen@s:
   937                           	callstack 0
   938  000001                     strncmp@_l:
   939                           	callstack 0
   940  000001                     ___fleq@ff1:
   941                           	callstack 0
   942  000001                     ___flneg@f1:
   943                           	callstack 0
   944  000001                     ___fltol@f1:
   945                           	callstack 0
   946  000001                     ___fladd@b:
   947                           	callstack 0
   948  000001                     ___fldiv@b:
   949                           	callstack 0
   950  000001                     ___flmul@b:
   951                           	callstack 0
   952  000001                     ___xxtofl@val:
   953                           	callstack 0
   954  000001                     ___fpclassifyf@x:
   955                           	callstack 0
   956  000001                     ___aodiv@dividend:
   957                           	callstack 0
   958  000001                     ___aomod@dividend:
   959                           	callstack 0
   960                           
   961                           ; 8 bytes @ 0x0
   962  000001                     	ds	1
   963  000002                     ??_I2C_2_Master_Read:
   964  000002                     I2C_2_Master_Write@data_byte:
   965                           	callstack 0
   966  000002                     checkbatterylevel@batterylevel:
   967                           	callstack 0
   968  000002                     sendStringSerial4@string:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x1
   972  000002                     	ds	1
   973  000003                     ??_isupper:
   974  000003                     ??_isdigit:
   975  000003                     ??_isspace:
   976  000003                     colourclick_writetoaddr@value:
   977                           	callstack 0
   978  000003                     I2C_2_Master_Read@ack:
   979                           	callstack 0
   980  000003                     ___wmul@multiplicand:
   981                           	callstack 0
   982  000003                     ___awmod@divisor:
   983                           	callstack 0
   984  000003                     fputc@fp:
   985                           	callstack 0
   986  000003                     strcpy@src:
   987                           	callstack 0
   988  000003                     strlen@a:
   989                           	callstack 0
   990  000003                     strncmp@_r:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x2
   994  000003                     	ds	1
   995  000004                     colourclick_writetoaddr@address:
   996                           	callstack 0
   997  000004                     I2C_2_Master_Read@tmp:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x3
  1001  000004                     	ds	1
  1002  000005                     ??_colourclick_init:
  1003  000005                     ??_fputc:
  1004  000005                     ??___fpclassifyf:
  1005  000005                     ??_strcpy:
  1006  000005                     ??___fltol:
  1007  000005                     ??___xxtofl:
  1008  000005                     ?_colourclick_readR:
  1009                           	callstack 0
  1010  000005                     ?_colourclick_readG:
  1011                           	callstack 0
  1012  000005                     ?_colourclick_readB:
  1013                           	callstack 0
  1014  000005                     ?_colourclick_readC:
  1015                           	callstack 0
  1016  000005                     ___awmod@counter:
  1017                           	callstack 0
  1018  000005                     ___wmul@product:
  1019                           	callstack 0
  1020  000005                     strncmp@n:
  1021                           	callstack 0
  1022  000005                     ___fleq@ff2:
  1023                           	callstack 0
  1024  000005                     ___fladd@a:
  1025                           	callstack 0
  1026  000005                     ___fldiv@a:
  1027                           	callstack 0
  1028  000005                     ___flmul@a:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x4
  1032  000005                     	ds	1
  1033  000006                     ___awmod@sign:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x5
  1037  000006                     	ds	1
  1038  000007                     ??_strncmp:
  1039  000007                     ??_colourclick_readR:
  1040  000007                     ??_colourclick_readG:
  1041  000007                     ??_colourclick_readB:
  1042  000007                     ??_colourclick_readC:
  1043  000007                     ?_tolower:
  1044                           	callstack 0
  1045  000007                     ?___awdiv:
  1046                           	callstack 0
  1047  000007                     _isspace$3078:
  1048                           	callstack 0
  1049  000007                     ___awdiv@dividend:
  1050                           	callstack 0
  1051  000007                     strcpy@s:
  1052                           	callstack 0
  1053  000007                     tolower@c:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x6
  1057  000007                     	ds	1
  1058  000008                     ?_atoi:
  1059                           	callstack 0
  1060  000008                     atoi@s:
  1061                           	callstack 0
  1062  000008                     strncmp@l:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x7
  1066  000008                     	ds	1
  1067  000009                     ??___fladd:
  1068  000009                     ??___fldiv:
  1069  000009                     ??___flmul:
  1070  000009                     ??_tolower:
  1071  000009                     ??___fleq:
  1072  000009                     ___fltol@sign1:
  1073                           	callstack 0
  1074  000009                     ___xxtofl@sign:
  1075                           	callstack 0
  1076  000009                     ___awdiv@divisor:
  1077                           	callstack 0
  1078  000009                     ___fpclassifyf@e:
  1079                           	callstack 0
  1080  000009                     strcpy@d:
  1081                           	callstack 0
  1082  000009                     ___aodiv@divisor:
  1083                           	callstack 0
  1084  000009                     ___aomod@divisor:
  1085                           	callstack 0
  1086                           
  1087                           ; 8 bytes @ 0x8
  1088  000009                     	ds	1
  1089  00000A                     ??_atoi:
  1090  00000A                     ?_stoa:
  1091                           	callstack 0
  1092  00000A                     ___fltol@exp1:
  1093                           	callstack 0
  1094  00000A                     ___xxtofl@exp:
  1095                           	callstack 0
  1096  00000A                     colourclick_readR@tmp:
  1097                           	callstack 0
  1098  00000A                     colourclick_readG@tmp:
  1099                           	callstack 0
  1100  00000A                     colourclick_readB@tmp:
  1101                           	callstack 0
  1102  00000A                     colourclick_readC@tmp:
  1103                           	callstack 0
  1104  00000A                     stoa@fp:
  1105                           	callstack 0
  1106  00000A                     fputs@s:
  1107                           	callstack 0
  1108  00000A                     strncmp@r:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x9
  1112  00000A                     	ds	1
  1113  00000B                     ___awdiv@counter:
  1114                           	callstack 0
  1115  00000B                     ___xxtofl@arg:
  1116                           	callstack 0
  1117  00000B                     ___fpclassifyf@u:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0xA
  1121  00000B                     	ds	1
  1122  00000C                     ___awdiv@sign:
  1123                           	callstack 0
  1124  00000C                     colourclick_readRGBC@tmpval:
  1125                           	callstack 0
  1126  00000C                     stoa@s:
  1127                           	callstack 0
  1128  00000C                     fputs@fp:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0xB
  1132  00000C                     	ds	1
  1133  00000D                     ___fladd@signs:
  1134                           	callstack 0
  1135  00000D                     ___flmul@sign:
  1136                           	callstack 0
  1137  00000D                     ___awdiv@quotient:
  1138                           	callstack 0
  1139  00000D                     _tolower$3141:
  1140                           	callstack 0
  1141  00000D                     ___fldiv@rem:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0xC
  1145  00000D                     	ds	1
  1146  00000E                     ??_stoa:
  1147  00000E                     ___fladd@aexp:
  1148                           	callstack 0
  1149  00000E                     fputs@c:
  1150                           	callstack 0
  1151  00000E                     atoi@neg:
  1152                           	callstack 0
  1153  00000E                     ___flmul@grs:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0xD
  1157  00000E                     	ds	1
  1158  00000F                     ___fladd@bexp:
  1159                           	callstack 0
  1160  00000F                     DCmotors_setPWM@m:
  1161                           	callstack 0
  1162  00000F                     fputs@i:
  1163                           	callstack 0
  1164  00000F                     stoa@nuls:
  1165                           	callstack 0
  1166                           
  1167                           ; 7 bytes @ 0xE
  1168  00000F                     	ds	1
  1169  000010                     ___fladd@grs:
  1170                           	callstack 0
  1171  000010                     _atoi$3047:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0xF
  1175  000010                     	ds	1
  1176  000011                     ??_DCmotors_setPWM:
  1177  000011                     ?_pad:
  1178                           	callstack 0
  1179  000011                     ___aodiv@counter:
  1180                           	callstack 0
  1181  000011                     ___aomod@counter:
  1182                           	callstack 0
  1183  000011                     ___fldiv@sign:
  1184                           	callstack 0
  1185  000011                     pad@fp:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x10
  1189  000011                     	ds	1
  1190  000012                     ___aodiv@sign:
  1191                           	callstack 0
  1192  000012                     ___aomod@sign:
  1193                           	callstack 0
  1194  000012                     ___flmul@aexp:
  1195                           	callstack 0
  1196  000012                     ___fldiv@new_exp:
  1197                           	callstack 0
  1198  000012                     _atoi$3049:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x11
  1202  000012                     	ds	1
  1203  000013                     ?_abs:
  1204                           	callstack 0
  1205  000013                     ___flmul@bexp:
  1206                           	callstack 0
  1207  000013                     pad@buf:
  1208                           	callstack 0
  1209  000013                     abs@a:
  1210                           	callstack 0
  1211  000013                     ___aodiv@quotient:
  1212                           	callstack 0
  1213                           
  1214                           ; 8 bytes @ 0x12
  1215  000013                     	ds	1
  1216  000014                     _atoi$3048:
  1217                           	callstack 0
  1218  000014                     ___fldiv@grs:
  1219                           	callstack 0
  1220  000014                     ___flmul@prod:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x13
  1224  000014                     	ds	1
  1225  000015                     ??_abs:
  1226  000015                     pad@p:
  1227                           	callstack 0
  1228  000015                     atoi@n:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x14
  1232  000015                     	ds	1
  1233  000016                     stoa@i:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x15
  1237  000016                     	ds	1
  1238  000017                     ??_pad:
  1239                           
  1240                           ; 1 bytes @ 0x16
  1241  000017                     	ds	1
  1242  000018                     ___fldiv@bexp:
  1243                           	callstack 0
  1244  000018                     DCmotors_setPWM@PWMduty:
  1245                           	callstack 0
  1246  000018                     ___flmul@temp:
  1247                           	callstack 0
  1248  000018                     pad@i:
  1249                           	callstack 0
  1250  000018                     stoa@w:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x17
  1254  000018                     	ds	1
  1255  000019                     ___fldiv@aexp:
  1256                           	callstack 0
  1257                           
  1258                           ; 1 bytes @ 0x18
  1259  000019                     	ds	1
  1260  00001A                     ?___flsub:
  1261                           	callstack 0
  1262  00001A                     ?_floorf:
  1263                           	callstack 0
  1264  00001A                     forward@mL:
  1265                           	callstack 0
  1266  00001A                     reverse@mL:
  1267                           	callstack 0
  1268  00001A                     stop@mL:
  1269                           	callstack 0
  1270  00001A                     left@mL:
  1271                           	callstack 0
  1272  00001A                     right@mL:
  1273                           	callstack 0
  1274  00001A                     pad@w:
  1275                           	callstack 0
  1276  00001A                     stoa@cp:
  1277                           	callstack 0
  1278  00001A                     ___flge@ff1:
  1279                           	callstack 0
  1280  00001A                     ___flsub@b:
  1281                           	callstack 0
  1282  00001A                     floorf@x:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x19
  1286  00001A                     	ds	2
  1287  00001C                     ?_dtoa:
  1288                           	callstack 0
  1289  00001C                     forward@mR:
  1290                           	callstack 0
  1291  00001C                     reverse@mR:
  1292                           	callstack 0
  1293  00001C                     stop@mR:
  1294                           	callstack 0
  1295  00001C                     left@mR:
  1296                           	callstack 0
  1297  00001C                     right@mR:
  1298                           	callstack 0
  1299  00001C                     dtoa@fp:
  1300                           	callstack 0
  1301  00001C                     stoa@p:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x1B
  1305  00001C                     	ds	2
  1306  00001E                     ??_reverse:
  1307  00001E                     ??_stop:
  1308  00001E                     ??_forward:
  1309  00001E                     ??_floorf:
  1310  00001E                     left@deg:
  1311                           	callstack 0
  1312  00001E                     right@deg:
  1313                           	callstack 0
  1314  00001E                     stoa@l:
  1315                           	callstack 0
  1316  00001E                     ___flge@ff2:
  1317                           	callstack 0
  1318  00001E                     ___flsub@a:
  1319                           	callstack 0
  1320  00001E                     dtoa@d:
  1321                           	callstack 0
  1322                           
  1323                           ; 8 bytes @ 0x1D
  1324  00001E                     	ds	2
  1325  000020                     ??_left:
  1326  000020                     ??_right:
  1327                           
  1328                           ; 1 bytes @ 0x1F
  1329  000020                     	ds	2
  1330  000022                     ??___flge:
  1331  000022                     turnleft@mL:
  1332                           	callstack 0
  1333  000022                     turnright@mL:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x21
  1337  000022                     	ds	2
  1338  000024                     turnleft@mR:
  1339                           	callstack 0
  1340  000024                     turnright@mR:
  1341                           	callstack 0
  1342  000024                     floorf@m:
  1343                           	callstack 0
  1344                           
  1345                           ; 4 bytes @ 0x23
  1346  000024                     	ds	2
  1347  000026                     ??_dtoa:
  1348  000026                     turnleft@deg:
  1349                           	callstack 0
  1350  000026                     turnright@deg:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x25
  1354  000026                     	ds	2
  1355  000028                     DCmotors_testing@mL:
  1356                           	callstack 0
  1357  000028                     floorf@e:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x27
  1361  000028                     	ds	2
  1362  00002A                     DCmotors_testing@mR:
  1363                           	callstack 0
  1364  00002A                     floorf@u:
  1365                           	callstack 0
  1366                           
  1367                           ; 4 bytes @ 0x29
  1368  00002A                     	ds	2
  1369  00002C                     ??_DCmotors_testing:
  1370                           
  1371                           ; 1 bytes @ 0x2B
  1372  00002C                     	ds	2
  1373  00002E                     ?_efgtoa:
  1374                           	callstack 0
  1375  00002E                     _dtoa$2945:
  1376                           	callstack 0
  1377  00002E                     efgtoa@fp:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x2D
  1381  00002E                     	ds	2
  1382  000030                     dtoa@p:
  1383                           	callstack 0
  1384  000030                     efgtoa@f:
  1385                           	callstack 0
  1386                           
  1387                           ; 4 bytes @ 0x2F
  1388  000030                     	ds	2
  1389  000032                     dtoa@w:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x31
  1393  000032                     	ds	2
  1394  000034                     efgtoa@c:
  1395                           	callstack 0
  1396  000034                     dtoa@s:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x33
  1400  000034                     	ds	1
  1401  000035                     ??_efgtoa:
  1402                           
  1403                           ; 1 bytes @ 0x34
  1404  000035                     	ds	1
  1405  000036                     dtoa@n:
  1406                           	callstack 0
  1407                           
  1408                           ; 8 bytes @ 0x35
  1409  000036                     	ds	8
  1410  00003E                     dtoa@i:
  1411                           	callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x3D
  1414  00003E                     	ds	2
  1415  000040                     ?_vfpfcnvrt:
  1416                           	callstack 0
  1417  000040                     vfpfcnvrt@fp:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x3F
  1421  000040                     	ds	2
  1422  000042                     vfpfcnvrt@fmt:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x41
  1426  000042                     	ds	2
  1427  000044                     vfpfcnvrt@ap:
  1428                           	callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x43
  1431  000044                     	ds	2
  1432  000046                     ??_vfpfcnvrt:
  1433                           
  1434                           ; 1 bytes @ 0x45
  1435  000046                     	ds	4
  1436  00004A                     vfpfcnvrt@ll:
  1437                           	callstack 0
  1438                           
  1439                           ; 8 bytes @ 0x49
  1440  00004A                     	ds	8
  1441  000052                     vfpfcnvrt@cp:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x51
  1445  000052                     	ds	2
  1446  000054                     _vfpfcnvrt$3005:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x53
  1450  000054                     	ds	2
  1451  000056                     _vfpfcnvrt$3010:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x55
  1455  000056                     	ds	2
  1456  000058                     vfpfcnvrt@f:
  1457                           	callstack 0
  1458                           
  1459                           ; 4 bytes @ 0x57
  1460  000058                     	ds	4
  1461  00005C                     vfpfcnvrt@ct:
  1462                           	callstack 0
  1463                           
  1464                           ; 3 bytes @ 0x5B
  1465  00005C                     	ds	3
  1466  00005F                     vfpfcnvrt@c:
  1467                           	callstack 0
  1468                           
  1469                           ; 1 bytes @ 0x5E
  1470  00005F                     	ds	1
  1471  000060                     
  1472                           ; 1 bytes @ 0x5F
  1473 ;;
  1474 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1475 ;;
  1476 ;; *************** function _main *****************
  1477 ;; Defined at:
  1478 ;;		line 7 in file "main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  motorR          9  129[BANK0 ] struct .
  1483 ;;  motorL          9  120[BANK0 ] struct .
  1484 ;;  current         8  112[BANK0 ] struct .
  1485 ;;  PWMperiod       1    0        unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;Total ram usage:       28 bytes
  1500 ;; Hardware stack levels required when called: 9
  1501 ;; This function calls:
  1502 ;;		_ADC_init
  1503 ;;		_DCmotors_init
  1504 ;;		_DCmotors_testing
  1505 ;;		_USART4_init
  1506 ;;		_checkbatterylevel
  1507 ;;		_colourcards_testing
  1508 ;;		_colourclickLEDs_C
  1509 ;;		_colourclick_init
  1510 ;; This function is called by:
  1511 ;;		Startup code after reset
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text0
  1516  004A84                     __ptext0:
  1517                           	callstack 0
  1518  004A84                     _main:
  1519                           	callstack 22
  1520  004A84                     
  1521                           ;main.c: 12:     interrupts_lower = 0;
  1522  004A84  0E00               	movlw	0
  1523  004A86  0100               	movlb	0	; () banked
  1524  004A88  6FF3               	movwf	(_interrupts_lower+1)& (0+255),b	;volatile
  1525  004A8A  0E00               	movlw	0
  1526  004A8C  6FF2               	movwf	_interrupts_lower& (0+255),b	;volatile
  1527  004A8E                     
  1528                           ; BSR set to: 0
  1529                           ;main.c: 13:     interrupts_upper = 65535;
  1530  004A8E  69FB               	setf	_interrupts_upper& (0+255),b	;volatile
  1531  004A90  69FC               	setf	(_interrupts_upper+1)& (0+255),b	;volatile
  1532                           
  1533                           ;main.c: 14:     DCmotors_lower = 50;
  1534  004A92  0E32               	movlw	50
  1535  004A94  6FFE               	movwf	_DCmotors_lower& (0+255),b	;volatile
  1536                           
  1537                           ;main.c: 15:     DCmotors_upper = 50;
  1538  004A96  0E32               	movlw	50
  1539  004A98  6FFD               	movwf	_DCmotors_upper& (0+255),b	;volatile
  1540                           
  1541                           ;main.c: 16:     colourcard_flag = 0;
  1542  004A9A  0E00               	movlw	0
  1543  004A9C  6FF6               	movwf	_colourcard_flag& (0+255),b	;volatile
  1544                           
  1545                           ;main.c: 17:     unknowncard_flag = 0;
  1546  004A9E  0E00               	movlw	0
  1547  004AA0  6FF5               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1548                           
  1549                           ;main.c: 18:     returnhome_flag = 0;
  1550  004AA2  0E00               	movlw	0
  1551  004AA4  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
  1552                           
  1553                           ;main.c: 20:     DC_motor motorL;;main.c: 21:     motorL.power=0;
  1554  004AA6  0E00               	movlw	0
  1555  004AA8  6FD8               	movwf	main@motorL& (0+255),b
  1556                           
  1557                           ;main.c: 22:     motorL.direction=1;
  1558  004AAA  0E01               	movlw	1
  1559  004AAC  6FD9               	movwf	(main@motorL+1)& (0+255),b
  1560  004AAE                     
  1561                           ; BSR set to: 0
  1562                           ;main.c: 23:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1563  004AAE  0EA3               	movlw	163
  1564  004AB0  6FDA               	movwf	(main@motorL+2)& (0+255),b
  1565  004AB2  0E0F               	movlw	15
  1566  004AB4  6FDB               	movwf	(main@motorL+3)& (0+255),b
  1567  004AB6                     
  1568                           ; BSR set to: 0
  1569                           ;main.c: 24:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1570  004AB6  0E7D               	movlw	125
  1571  004AB8  6FDC               	movwf	(main@motorL+4)& (0+255),b
  1572  004ABA  0E0F               	movlw	15
  1573  004ABC  6FDD               	movwf	(main@motorL+5)& (0+255),b
  1574                           
  1575                           ;main.c: 25:     motorL.dir_pin=4;
  1576  004ABE  0E04               	movlw	4
  1577  004AC0  6FDE               	movwf	(main@motorL+6)& (0+255),b
  1578  004AC2                     
  1579                           ; BSR set to: 0
  1580                           ;main.c: 26:     motorL.PWMperiod=PWMperiod;
  1581  004AC2  0E00               	movlw	0
  1582  004AC4  6FE0               	movwf	(main@motorL+8)& (0+255),b
  1583  004AC6  0E63               	movlw	99
  1584  004AC8  6FDF               	movwf	(main@motorL+7)& (0+255),b
  1585                           
  1586                           ;main.c: 28:     DC_motor motorR;;main.c: 29:     motorR.power=0;
  1587  004ACA  0E00               	movlw	0
  1588  004ACC  6FE1               	movwf	main@motorR& (0+255),b
  1589                           
  1590                           ;main.c: 30:     motorR.direction=1;
  1591  004ACE  0E01               	movlw	1
  1592  004AD0  6FE2               	movwf	(main@motorR+1)& (0+255),b
  1593  004AD2                     
  1594                           ; BSR set to: 0
  1595                           ;main.c: 31:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1596  004AD2  0EA0               	movlw	160
  1597  004AD4  6FE3               	movwf	(main@motorR+2)& (0+255),b
  1598  004AD6  0E0F               	movlw	15
  1599  004AD8  6FE4               	movwf	(main@motorR+3)& (0+255),b
  1600  004ADA                     
  1601                           ; BSR set to: 0
  1602                           ;main.c: 32:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1603  004ADA  0E7F               	movlw	127
  1604  004ADC  6FE5               	movwf	(main@motorR+4)& (0+255),b
  1605  004ADE  0E0F               	movlw	15
  1606  004AE0  6FE6               	movwf	(main@motorR+5)& (0+255),b
  1607                           
  1608                           ;main.c: 33:     motorR.dir_pin=6;
  1609  004AE2  0E06               	movlw	6
  1610  004AE4  6FE7               	movwf	(main@motorR+6)& (0+255),b
  1611  004AE6                     
  1612                           ; BSR set to: 0
  1613                           ;main.c: 34:     motorR.PWMperiod=PWMperiod;
  1614  004AE6  0E00               	movlw	0
  1615  004AE8  6FE9               	movwf	(main@motorR+8)& (0+255),b
  1616  004AEA  0E63               	movlw	99
  1617  004AEC  6FE8               	movwf	(main@motorR+7)& (0+255),b
  1618  004AEE                     
  1619                           ; BSR set to: 0
  1620                           ;main.c: 36:     ADC_init();
  1621  004AEE  ECF9  F02C         	call	_ADC_init	;wreg free
  1622  004AF2                     
  1623                           ;main.c: 37:     colourclick_init();
  1624  004AF2  ECBD  F02B         	call	_colourclick_init	;wreg free
  1625  004AF6                     
  1626                           ;main.c: 38:     DCmotors_init(PWMperiod);
  1627  004AF6  0E63               	movlw	99
  1628  004AF8  EC0F  F02B         	call	_DCmotors_init
  1629  004AFC                     
  1630                           ;main.c: 39:     USART4_init();
  1631  004AFC  ECE9  F02C         	call	_USART4_init	;wreg free
  1632  004B00                     
  1633                           ;main.c: 40:     checkbatterylevel();
  1634  004B00  ECD9  F02C         	call	_checkbatterylevel	;wreg free
  1635  004B04                     l61:
  1636  004B04  A48E               	btfss	142,2,c	;volatile
  1637  004B06  EF87  F025         	goto	u7541
  1638  004B0A  EF89  F025         	goto	u7540
  1639  004B0E                     u7541:
  1640  004B0E  EF90  F025         	goto	l65
  1641  004B12                     u7540:
  1642  004B12  B68E               	btfsc	142,3,c	;volatile
  1643  004B14  EF8E  F025         	goto	u7551
  1644  004B18  EF90  F025         	goto	u7550
  1645  004B1C                     u7551:
  1646  004B1C  EF82  F025         	goto	l61
  1647  004B20                     u7550:
  1648  004B20                     l65:
  1649                           
  1650                           ;main.c: 56:     LATDbits.LATD3 = 1;
  1651  004B20  867C               	bsf	124,3,c	;volatile
  1652  004B22                     
  1653                           ;main.c: 57:     colourclickLEDs_C(1);
  1654  004B22  0E01               	movlw	1
  1655  004B24  ECB8  F02C         	call	_colourclickLEDs_C
  1656  004B28                     
  1657                           ;main.c: 58:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1658  004B28  0E52               	movlw	82
  1659  004B2A  0100               	movlb	0	; () banked
  1660  004B2C  6FCF               	movwf	(??_main+1)& (0+255),b
  1661  004B2E  0E2B               	movlw	43
  1662  004B30  6FCE               	movwf	??_main& (0+255),b
  1663  004B32  0E00               	movlw	0
  1664  004B34                     u8087:
  1665  004B34  2EE8               	decfsz	wreg,f,c
  1666  004B36  D7FE               	bra	u8087
  1667  004B38  2FCE               	decfsz	??_main& (0+255),f,b
  1668  004B3A  D7FC               	bra	u8087
  1669  004B3C  2FCF               	decfsz	(??_main+1)& (0+255),f,b
  1670  004B3E  D7FA               	bra	u8087
  1671  004B40  F000               	nop	
  1672  004B42                     l5966:
  1673                           
  1674                           ;main.c: 70:         colourcards_testing(&current);
  1675  004B42  0ED0               	movlw	low main@current
  1676  004B44  0100               	movlb	0	; () banked
  1677  004B46  6FCA               	movwf	colourcards_testing@tmpval& (0+255),b
  1678  004B48  0E00               	movlw	high main@current
  1679  004B4A  6FCB               	movwf	(colourcards_testing@tmpval+1)& (0+255),b
  1680  004B4C  EC57  F00D         	call	_colourcards_testing	;wreg free
  1681  004B50                     
  1682                           ;main.c: 71:         DCmotors_testing(&motorL, &motorR);
  1683  004B50  0ED8               	movlw	low main@motorL
  1684  004B52  6E28               	movwf	DCmotors_testing@mL^0,c
  1685  004B54  0E00               	movlw	high main@motorL
  1686  004B56  6E29               	movwf	(DCmotors_testing@mL+1)^0,c
  1687  004B58  0EE1               	movlw	low main@motorR
  1688  004B5A  6E2A               	movwf	DCmotors_testing@mR^0,c
  1689  004B5C  0E00               	movlw	high main@motorR
  1690  004B5E  6E2B               	movwf	(DCmotors_testing@mR+1)^0,c
  1691  004B60  ECD5  F01B         	call	_DCmotors_testing	;wreg free
  1692  004B64  EFA1  F025         	goto	l5966
  1693  004B68  EF00  F000         	goto	start
  1694  004B6C                     __end_of_main:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _colourclick_init *****************
  1698 ;; Defined at:
  1699 ;;		line 18 in file "colour_click.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;Total ram usage:        1 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 3
  1720 ;; This function calls:
  1721 ;;		_I2C_2_Master_Init
  1722 ;;		_colourclickLEDs_init
  1723 ;;		_colourclick_writetoaddr
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text1
  1730  00577A                     __ptext1:
  1731                           	callstack 0
  1732  00577A                     _colourclick_init:
  1733                           	callstack 27
  1734  00577A                     
  1735                           ;colour_click.c: 21:     I2C_2_Master_Init();
  1736  00577A  EC7C  F02C         	call	_I2C_2_Master_Init	;wreg free
  1737  00577E                     
  1738                           ;colour_click.c: 24:   colourclick_writetoaddr(0x00, 0x01);
  1739  00577E  0E01               	movlw	1
  1740  005780  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1741  005782  0E00               	movlw	0
  1742  005784  ECC9  F02C         	call	_colourclick_writetoaddr
  1743  005788                     
  1744                           ;colour_click.c: 25:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1745  005788  0E3F               	movlw	63
  1746  00578A  6E05               	movwf	??_colourclick_init^0,c
  1747  00578C  0E55               	movlw	85
  1748  00578E                     u8097:
  1749  00578E  2EE8               	decfsz	wreg,f,c
  1750  005790  D7FE               	bra	u8097
  1751  005792  2E05               	decfsz	??_colourclick_init^0,f,c
  1752  005794  D7FC               	bra	u8097
  1753  005796  F000               	nop	
  1754  005798                     
  1755                           ;colour_click.c: 28:  colourclick_writetoaddr(0x00, 0x03);
  1756  005798  0E03               	movlw	3
  1757  00579A  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1758  00579C  0E00               	movlw	0
  1759  00579E  ECC9  F02C         	call	_colourclick_writetoaddr
  1760  0057A2                     
  1761                           ;colour_click.c: 31:  colourclick_writetoaddr(0x01, 0xD5);
  1762  0057A2  0ED5               	movlw	213
  1763  0057A4  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1764  0057A6  0E01               	movlw	1
  1765  0057A8  ECC9  F02C         	call	_colourclick_writetoaddr
  1766  0057AC                     
  1767                           ;colour_click.c: 33:     colourclickLEDs_init();
  1768  0057AC  EC29  F02D         	call	_colourclickLEDs_init	;wreg free
  1769  0057B0  0012               	return		;funcret
  1770  0057B2                     __end_of_colourclick_init:
  1771                           	callstack 0
  1772                           
  1773 ;; *************** function _colourclick_writetoaddr *****************
  1774 ;; Defined at:
  1775 ;;		line 42 in file "colour_click.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  address         1    wreg     unsigned char 
  1778 ;;  value           1    2[COMRAM] unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  address         1    3[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1790 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 2
  1797 ;; This function calls:
  1798 ;;		_I2C_2_Master_Start
  1799 ;;		_I2C_2_Master_Stop
  1800 ;;		_I2C_2_Master_Write
  1801 ;; This function is called by:
  1802 ;;		_colourclick_init
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text2
  1807  005992                     __ptext2:
  1808                           	callstack 0
  1809  005992                     _colourclick_writetoaddr:
  1810                           	callstack 27
  1811                           
  1812                           ;incstack = 0
  1813                           ;colourclick_writetoaddr@address stored from wreg
  1814  005992  6E04               	movwf	colourclick_writetoaddr@address^0,c
  1815  005994                     
  1816                           ;colour_click.c: 42: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 43: {;colour_click.c: 44:     I2C_2_Master_Start();
  1817  005994  EC47  F02D         	call	_I2C_2_Master_Start	;wreg free
  1818                           
  1819                           ;colour_click.c: 45:     I2C_2_Master_Write(0x52 | 0x00);
  1820  005998  0E52               	movlw	82
  1821  00599A  EC30  F02D         	call	_I2C_2_Master_Write
  1822                           
  1823                           ;colour_click.c: 46:     I2C_2_Master_Write(0x80 | address);
  1824  00599E  5004               	movf	colourclick_writetoaddr@address^0,w,c
  1825  0059A0  0980               	iorlw	128
  1826  0059A2  EC30  F02D         	call	_I2C_2_Master_Write
  1827                           
  1828                           ;colour_click.c: 47:     I2C_2_Master_Write(value);
  1829  0059A6  5003               	movf	colourclick_writetoaddr@value^0,w,c
  1830  0059A8  EC30  F02D         	call	_I2C_2_Master_Write
  1831                           
  1832                           ;colour_click.c: 48:     I2C_2_Master_Stop();
  1833  0059AC  EC42  F02D         	call	_I2C_2_Master_Stop	;wreg free
  1834  0059B0  0012               	return		;funcret
  1835  0059B2                     __end_of_colourclick_writetoaddr:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _colourclickLEDs_init *****************
  1839 ;; Defined at:
  1840 ;;		line 49 in file "buttons_n_LEDs.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 1
  1861 ;; This function calls:
  1862 ;;		_colourclickLEDs_C
  1863 ;; This function is called by:
  1864 ;;		_colourclick_init
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text3
  1869  005A52                     __ptext3:
  1870                           	callstack 0
  1871  005A52                     _colourclickLEDs_init:
  1872                           	callstack 28
  1873  005A52                     
  1874                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  1875  005A52  9287               	bcf	135,1,c	;volatile
  1876                           
  1877                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  1878  005A54  9881               	bcf	129,4,c	;volatile
  1879                           
  1880                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  1881  005A56  9E86               	bcf	134,7,c	;volatile
  1882  005A58                     
  1883                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  1884  005A58  0E00               	movlw	0
  1885  005A5A  ECB8  F02C         	call	_colourclickLEDs_C
  1886  005A5E  0012               	return		;funcret
  1887  005A60                     __end_of_colourclickLEDs_init:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _colourclickLEDs_C *****************
  1891 ;; Defined at:
  1892 ;;		line 84 in file "buttons_n_LEDs.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  tog             1    wreg     unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  tog             1    0[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;Total ram usage:        1 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;;		_colourclickLEDs_init
  1917 ;;		_colourclick_readRGBC2
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text4
  1922  005970                     __ptext4:
  1923                           	callstack 0
  1924  005970                     _colourclickLEDs_C:
  1925                           	callstack 28
  1926                           
  1927                           ;incstack = 0
  1928                           ;colourclickLEDs_C@tog stored from wreg
  1929  005970  6E01               	movwf	colourclickLEDs_C@tog^0,c
  1930  005972                     
  1931                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
  1932  005972  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1933  005974  D002               	bra	u6815
  1934  005976  927F               	bcf	127,1,c	;volatile
  1935  005978  D001               	bra	u6816
  1936  00597A                     u6815:
  1937  00597A  827F               	bsf	127,1,c	;volatile
  1938  00597C                     u6816:
  1939                           
  1940                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
  1941  00597C  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1942  00597E  D002               	bra	u6825
  1943  005980  9879               	bcf	121,4,c	;volatile
  1944  005982  D001               	bra	u6826
  1945  005984                     u6825:
  1946  005984  8879               	bsf	121,4,c	;volatile
  1947  005986                     u6826:
  1948                           
  1949                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
  1950  005986  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1951  005988  D002               	bra	u6835
  1952  00598A  9E7E               	bcf	126,7,c	;volatile
  1953  00598C  D001               	bra	u6836
  1954  00598E                     u6835:
  1955  00598E  8E7E               	bsf	126,7,c	;volatile
  1956  005990                     u6836:
  1957  005990  0012               	return		;funcret
  1958  005992                     __end_of_colourclickLEDs_C:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _I2C_2_Master_Init *****************
  1962 ;; Defined at:
  1963 ;;		line 8 in file "I2C.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_colourclick_init
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text5
  1991  0058F8                     __ptext5:
  1992                           	callstack 0
  1993  0058F8                     _I2C_2_Master_Init:
  1994                           	callstack 29
  1995  0058F8                     
  1996                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  1997  0058F8  010E               	movlb	14	; () banked
  1998  0058FA  51D9               	movf	217,w,b	;volatile
  1999  0058FC  0BF0               	andlw	-16
  2000  0058FE  0908               	iorlw	8
  2001  005900  6FD9               	movwf	217,b	;volatile
  2002  005902                     
  2003                           ; BSR set to: 14
  2004                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  2005  005902  8BD9               	bsf	217,5,b	;volatile
  2006                           
  2007                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  2008  005904  0E9F               	movlw	159
  2009  005906  6FD6               	movwf	214,b	;volatile
  2010  005908                     
  2011                           ; BSR set to: 14
  2012                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  2013  005908  8A84               	bsf	132,5,c	;volatile
  2014  00590A                     
  2015                           ; BSR set to: 14
  2016                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  2017  00590A  8C84               	bsf	132,6,c	;volatile
  2018  00590C                     
  2019                           ; BSR set to: 14
  2020                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  2021  00590C  9BA7               	bcf	167,5,b	;volatile
  2022  00590E                     
  2023                           ; BSR set to: 14
  2024                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  2025  00590E  9DA7               	bcf	167,6,b	;volatile
  2026                           
  2027                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  2028  005910  0E1D               	movlw	29
  2029  005912  6F1D               	movwf	29,b	;volatile
  2030                           
  2031                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  2032  005914  0E1E               	movlw	30
  2033  005916  6F1C               	movwf	28,b	;volatile
  2034                           
  2035                           ;I2C.c: 22:   RD5PPS=0x1C;
  2036  005918  0E1C               	movlw	28
  2037  00591A  6F6F               	movwf	111,b	;volatile
  2038                           
  2039                           ;I2C.c: 23:   RD6PPS=0x1B;
  2040  00591C  0E1B               	movlw	27
  2041  00591E  6F70               	movwf	112,b	;volatile
  2042  005920                     
  2043                           ; BSR set to: 14
  2044  005920  0012               	return		;funcret
  2045  005922                     __end_of_I2C_2_Master_Init:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _colourcards_testing *****************
  2049 ;; Defined at:
  2050 ;;		line 105 in file "colour_cards.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  tmpval          2  106[BANK0 ] PTR struct .
  2053 ;;		 -> main@current(8), 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  colour          8  111[BANK1 ] unsigned char [8]
  2056 ;;  colour          6  139[BANK1 ] unsigned char [6]
  2057 ;;  colour         11  100[BANK1 ] unsigned char [11]
  2058 ;;  colour          7  126[BANK1 ] unsigned char [7]
  2059 ;;  colour          5  150[BANK1 ] unsigned char [5]
  2060 ;;  colour          7  119[BANK1 ] unsigned char [7]
  2061 ;;  colour          5  145[BANK1 ] unsigned char [5]
  2062 ;;  colour          6  133[BANK1 ] unsigned char [6]
  2063 ;;  colour          4  155[BANK1 ] unsigned char [4]
  2064 ;;  buf           100    0[BANK1 ] unsigned char [100]
  2065 ;;  B_rel           4  184[BANK1 ] float 
  2066 ;;  G_rel           4  180[BANK1 ] float 
  2067 ;;  R_rel           4  176[BANK1 ] float 
  2068 ;;  C               4  172[BANK1 ] float 
  2069 ;;  B               4  168[BANK1 ] float 
  2070 ;;  G               4  164[BANK1 ] float 
  2071 ;;  R               4  160[BANK1 ] float 
  2072 ;;  colour          1  159[BANK1 ] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Locals:         0       0     188       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Totals:         0       4     188       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;Total ram usage:      192 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 8
  2089 ;; This function calls:
  2090 ;;		___fldiv
  2091 ;;		___flge
  2092 ;;		___xxtofl
  2093 ;;		_colourclick_readRGBC
  2094 ;;		_sendStringSerial4
  2095 ;;		_sprintf
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text6
  2102  001AAE                     __ptext6:
  2103                           	callstack 0
  2104  001AAE                     _colourcards_testing:
  2105                           	callstack 22
  2106  001AAE                     l160:
  2107  001AAE  B48E               	btfsc	142,2,c	;volatile
  2108  001AB0  EF5C  F00D         	goto	u7191
  2109  001AB4  EF5E  F00D         	goto	u7190
  2110  001AB8                     u7191:
  2111  001AB8  EF57  F00D         	goto	l160
  2112  001ABC                     u7190:
  2113  001ABC                     
  2114                           ;colour_cards.c: 108:     INTCONbits.GIE = 0;
  2115  001ABC  9EF2               	bcf	242,7,c	;volatile
  2116  001ABE                     
  2117                           ;colour_cards.c: 110:     colourclick_readRGBC(tmpval);
  2118  001ABE  C0CA  F00C         	movff	colourcards_testing@tmpval,colourclick_readRGBC@tmpval
  2119  001AC2  C0CB  F00D         	movff	colourcards_testing@tmpval+1,colourclick_readRGBC@tmpval+1
  2120  001AC6  EC9E  F029         	call	_colourclick_readRGBC	;wreg free
  2121                           
  2122                           ;colour_cards.c: 111:     float R = (float)tmpval->R;
  2123  001ACA  C0CA  FFD9         	movff	colourcards_testing@tmpval,fsr2l
  2124  001ACE  C0CB  FFDA         	movff	colourcards_testing@tmpval+1,fsr2h
  2125  001AD2  CFDE F0CC          	movff	postinc2,??_colourcards_testing
  2126  001AD6  CFDD F0CD          	movff	postdec2,??_colourcards_testing+1
  2127  001ADA  C0CC  F001         	movff	??_colourcards_testing,___xxtofl@val
  2128  001ADE  C0CD  F002         	movff	??_colourcards_testing+1,___xxtofl@val+1
  2129  001AE2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2130  001AE4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2131  001AE6  0E00               	movlw	0
  2132  001AE8  ECE3  F01E         	call	___xxtofl
  2133  001AEC  C001  F1A0         	movff	?___xxtofl,colourcards_testing@R
  2134  001AF0  C002  F1A1         	movff	?___xxtofl+1,colourcards_testing@R+1
  2135  001AF4  C003  F1A2         	movff	?___xxtofl+2,colourcards_testing@R+2
  2136  001AF8  C004  F1A3         	movff	?___xxtofl+3,colourcards_testing@R+3
  2137                           
  2138                           ;colour_cards.c: 112:     float G = (float)tmpval->G;
  2139  001AFC  0100               	movlb	0	; () banked
  2140  001AFE  EE20 F002          	lfsr	2,2
  2141  001B02  51CA               	movf	colourcards_testing@tmpval& (0+255),w,b
  2142  001B04  26D9               	addwf	fsr2l,f,c
  2143  001B06  51CB               	movf	(colourcards_testing@tmpval+1)& (0+255),w,b
  2144  001B08  22DA               	addwfc	fsr2h,f,c
  2145  001B0A  CFDE F0CC          	movff	postinc2,??_colourcards_testing
  2146  001B0E  CFDD F0CD          	movff	postdec2,??_colourcards_testing+1
  2147  001B12  C0CC  F001         	movff	??_colourcards_testing,___xxtofl@val
  2148  001B16  C0CD  F002         	movff	??_colourcards_testing+1,___xxtofl@val+1
  2149  001B1A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2150  001B1C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2151  001B1E  0E00               	movlw	0
  2152  001B20  ECE3  F01E         	call	___xxtofl
  2153  001B24  C001  F1A4         	movff	?___xxtofl,colourcards_testing@G
  2154  001B28  C002  F1A5         	movff	?___xxtofl+1,colourcards_testing@G+1
  2155  001B2C  C003  F1A6         	movff	?___xxtofl+2,colourcards_testing@G+2
  2156  001B30  C004  F1A7         	movff	?___xxtofl+3,colourcards_testing@G+3
  2157                           
  2158                           ;colour_cards.c: 113:     float B = (float)tmpval->B;
  2159  001B34  0100               	movlb	0	; () banked
  2160  001B36  EE20 F004          	lfsr	2,4
  2161  001B3A  51CA               	movf	colourcards_testing@tmpval& (0+255),w,b
  2162  001B3C  26D9               	addwf	fsr2l,f,c
  2163  001B3E  51CB               	movf	(colourcards_testing@tmpval+1)& (0+255),w,b
  2164  001B40  22DA               	addwfc	fsr2h,f,c
  2165  001B42  CFDE F0CC          	movff	postinc2,??_colourcards_testing
  2166  001B46  CFDD F0CD          	movff	postdec2,??_colourcards_testing+1
  2167  001B4A  C0CC  F001         	movff	??_colourcards_testing,___xxtofl@val
  2168  001B4E  C0CD  F002         	movff	??_colourcards_testing+1,___xxtofl@val+1
  2169  001B52  6A03               	clrf	(___xxtofl@val+2)^0,c
  2170  001B54  6A04               	clrf	(___xxtofl@val+3)^0,c
  2171  001B56  0E00               	movlw	0
  2172  001B58  ECE3  F01E         	call	___xxtofl
  2173  001B5C  C001  F1A8         	movff	?___xxtofl,colourcards_testing@B
  2174  001B60  C002  F1A9         	movff	?___xxtofl+1,colourcards_testing@B+1
  2175  001B64  C003  F1AA         	movff	?___xxtofl+2,colourcards_testing@B+2
  2176  001B68  C004  F1AB         	movff	?___xxtofl+3,colourcards_testing@B+3
  2177                           
  2178                           ;colour_cards.c: 114:     float C = (float)tmpval->C;
  2179  001B6C  0100               	movlb	0	; () banked
  2180  001B6E  EE20 F006          	lfsr	2,6
  2181  001B72  51CA               	movf	colourcards_testing@tmpval& (0+255),w,b
  2182  001B74  26D9               	addwf	fsr2l,f,c
  2183  001B76  51CB               	movf	(colourcards_testing@tmpval+1)& (0+255),w,b
  2184  001B78  22DA               	addwfc	fsr2h,f,c
  2185  001B7A  CFDE F0CC          	movff	postinc2,??_colourcards_testing
  2186  001B7E  CFDD F0CD          	movff	postdec2,??_colourcards_testing+1
  2187  001B82  C0CC  F001         	movff	??_colourcards_testing,___xxtofl@val
  2188  001B86  C0CD  F002         	movff	??_colourcards_testing+1,___xxtofl@val+1
  2189  001B8A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2190  001B8C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2191  001B8E  0E00               	movlw	0
  2192  001B90  ECE3  F01E         	call	___xxtofl
  2193  001B94  C001  F1AC         	movff	?___xxtofl,colourcards_testing@C
  2194  001B98  C002  F1AD         	movff	?___xxtofl+1,colourcards_testing@C+1
  2195  001B9C  C003  F1AE         	movff	?___xxtofl+2,colourcards_testing@C+2
  2196  001BA0  C004  F1AF         	movff	?___xxtofl+3,colourcards_testing@C+3
  2197  001BA4                     
  2198                           ;colour_cards.c: 115:     float R_rel = R/C;
  2199  001BA4  C1A0  F001         	movff	colourcards_testing@R,___fldiv@b
  2200  001BA8  C1A1  F002         	movff	colourcards_testing@R+1,___fldiv@b+1
  2201  001BAC  C1A2  F003         	movff	colourcards_testing@R+2,___fldiv@b+2
  2202  001BB0  C1A3  F004         	movff	colourcards_testing@R+3,___fldiv@b+3
  2203  001BB4  C1AC  F005         	movff	colourcards_testing@C,___fldiv@a
  2204  001BB8  C1AD  F006         	movff	colourcards_testing@C+1,___fldiv@a+1
  2205  001BBC  C1AE  F007         	movff	colourcards_testing@C+2,___fldiv@a+2
  2206  001BC0  C1AF  F008         	movff	colourcards_testing@C+3,___fldiv@a+3
  2207  001BC4  EC96  F018         	call	___fldiv	;wreg free
  2208  001BC8  C001  F1B0         	movff	?___fldiv,colourcards_testing@R_rel
  2209  001BCC  C002  F1B1         	movff	?___fldiv+1,colourcards_testing@R_rel+1
  2210  001BD0  C003  F1B2         	movff	?___fldiv+2,colourcards_testing@R_rel+2
  2211  001BD4  C004  F1B3         	movff	?___fldiv+3,colourcards_testing@R_rel+3
  2212  001BD8                     
  2213                           ;colour_cards.c: 116:     float G_rel = G/C;
  2214  001BD8  C1A4  F001         	movff	colourcards_testing@G,___fldiv@b
  2215  001BDC  C1A5  F002         	movff	colourcards_testing@G+1,___fldiv@b+1
  2216  001BE0  C1A6  F003         	movff	colourcards_testing@G+2,___fldiv@b+2
  2217  001BE4  C1A7  F004         	movff	colourcards_testing@G+3,___fldiv@b+3
  2218  001BE8  C1AC  F005         	movff	colourcards_testing@C,___fldiv@a
  2219  001BEC  C1AD  F006         	movff	colourcards_testing@C+1,___fldiv@a+1
  2220  001BF0  C1AE  F007         	movff	colourcards_testing@C+2,___fldiv@a+2
  2221  001BF4  C1AF  F008         	movff	colourcards_testing@C+3,___fldiv@a+3
  2222  001BF8  EC96  F018         	call	___fldiv	;wreg free
  2223  001BFC  C001  F1B4         	movff	?___fldiv,colourcards_testing@G_rel
  2224  001C00  C002  F1B5         	movff	?___fldiv+1,colourcards_testing@G_rel+1
  2225  001C04  C003  F1B6         	movff	?___fldiv+2,colourcards_testing@G_rel+2
  2226  001C08  C004  F1B7         	movff	?___fldiv+3,colourcards_testing@G_rel+3
  2227  001C0C                     
  2228                           ;colour_cards.c: 117:     float B_rel = B/C;
  2229  001C0C  C1A8  F001         	movff	colourcards_testing@B,___fldiv@b
  2230  001C10  C1A9  F002         	movff	colourcards_testing@B+1,___fldiv@b+1
  2231  001C14  C1AA  F003         	movff	colourcards_testing@B+2,___fldiv@b+2
  2232  001C18  C1AB  F004         	movff	colourcards_testing@B+3,___fldiv@b+3
  2233  001C1C  C1AC  F005         	movff	colourcards_testing@C,___fldiv@a
  2234  001C20  C1AD  F006         	movff	colourcards_testing@C+1,___fldiv@a+1
  2235  001C24  C1AE  F007         	movff	colourcards_testing@C+2,___fldiv@a+2
  2236  001C28  C1AF  F008         	movff	colourcards_testing@C+3,___fldiv@a+3
  2237  001C2C  EC96  F018         	call	___fldiv	;wreg free
  2238  001C30  C001  F1B8         	movff	?___fldiv,colourcards_testing@B_rel
  2239  001C34  C002  F1B9         	movff	?___fldiv+1,colourcards_testing@B_rel+1
  2240  001C38  C003  F1BA         	movff	?___fldiv+2,colourcards_testing@B_rel+2
  2241  001C3C  C004  F1BB         	movff	?___fldiv+3,colourcards_testing@B_rel+3
  2242  001C40                     
  2243                           ;colour_cards.c: 119:     char colour;;colour_cards.c: 120:     if ((R_rel>0.54) && (G_r
      +                          el<0.245) && (B_rel<0.18)) {
  2244  001C40  0E71               	movlw	113
  2245  001C42  6E1A               	movwf	___flge@ff1^0,c
  2246  001C44  0E3D               	movlw	61
  2247  001C46  6E1B               	movwf	(___flge@ff1+1)^0,c
  2248  001C48  0E0A               	movlw	10
  2249  001C4A  6E1C               	movwf	(___flge@ff1+2)^0,c
  2250  001C4C  0E3F               	movlw	63
  2251  001C4E  6E1D               	movwf	(___flge@ff1+3)^0,c
  2252  001C50  C1B0  F01E         	movff	colourcards_testing@R_rel,___flge@ff2
  2253  001C54  C1B1  F01F         	movff	colourcards_testing@R_rel+1,___flge@ff2+1
  2254  001C58  C1B2  F020         	movff	colourcards_testing@R_rel+2,___flge@ff2+2
  2255  001C5C  C1B3  F021         	movff	colourcards_testing@R_rel+3,___flge@ff2+3
  2256  001C60  EC4B  F023         	call	___flge	;wreg free
  2257  001C64  B0D8               	btfsc	status,0,c
  2258  001C66  EF37  F00E         	goto	u7201
  2259  001C6A  EF39  F00E         	goto	u7200
  2260  001C6E                     u7201:
  2261  001C6E  EF75  F00E         	goto	l5826
  2262  001C72                     u7200:
  2263  001C72  C1B4  F01A         	movff	colourcards_testing@G_rel,___flge@ff1
  2264  001C76  C1B5  F01B         	movff	colourcards_testing@G_rel+1,___flge@ff1+1
  2265  001C7A  C1B6  F01C         	movff	colourcards_testing@G_rel+2,___flge@ff1+2
  2266  001C7E  C1B7  F01D         	movff	colourcards_testing@G_rel+3,___flge@ff1+3
  2267  001C82  0E48               	movlw	72
  2268  001C84  6E1E               	movwf	___flge@ff2^0,c
  2269  001C86  0EE1               	movlw	225
  2270  001C88  6E1F               	movwf	(___flge@ff2+1)^0,c
  2271  001C8A  0E7A               	movlw	122
  2272  001C8C  6E20               	movwf	(___flge@ff2+2)^0,c
  2273  001C8E  0E3E               	movlw	62
  2274  001C90  6E21               	movwf	(___flge@ff2+3)^0,c
  2275  001C92  EC4B  F023         	call	___flge	;wreg free
  2276  001C96  B0D8               	btfsc	status,0,c
  2277  001C98  EF50  F00E         	goto	u7211
  2278  001C9C  EF52  F00E         	goto	u7210
  2279  001CA0                     u7211:
  2280  001CA0  EF75  F00E         	goto	l5826
  2281  001CA4                     u7210:
  2282  001CA4  C1B8  F01A         	movff	colourcards_testing@B_rel,___flge@ff1
  2283  001CA8  C1B9  F01B         	movff	colourcards_testing@B_rel+1,___flge@ff1+1
  2284  001CAC  C1BA  F01C         	movff	colourcards_testing@B_rel+2,___flge@ff1+2
  2285  001CB0  C1BB  F01D         	movff	colourcards_testing@B_rel+3,___flge@ff1+3
  2286  001CB4  0EEC               	movlw	236
  2287  001CB6  6E1E               	movwf	___flge@ff2^0,c
  2288  001CB8  0E51               	movlw	81
  2289  001CBA  6E1F               	movwf	(___flge@ff2+1)^0,c
  2290  001CBC  0E38               	movlw	56
  2291  001CBE  6E20               	movwf	(___flge@ff2+2)^0,c
  2292  001CC0  0E3E               	movlw	62
  2293  001CC2  6E21               	movwf	(___flge@ff2+3)^0,c
  2294  001CC4  EC4B  F023         	call	___flge	;wreg free
  2295  001CC8  B0D8               	btfsc	status,0,c
  2296  001CCA  EF69  F00E         	goto	u7221
  2297  001CCE  EF6B  F00E         	goto	u7220
  2298  001CD2                     u7221:
  2299  001CD2  EF75  F00E         	goto	l5826
  2300  001CD6                     u7220:
  2301  001CD6                     
  2302                           ;colour_cards.c: 122:         char colour[] = "red";
  2303  001CD6  C1EF  F19B         	movff	colourcards_testing@F14669,colourcards_testing@colour_476
  2304  001CDA  C1F0  F19C         	movff	colourcards_testing@F14669+1,colourcards_testing@colour_476+1
  2305  001CDE  C1F1  F19D         	movff	colourcards_testing@F14669+2,colourcards_testing@colour_476+2
  2306  001CE2  C1F2  F19E         	movff	colourcards_testing@F14669+3,colourcards_testing@colour_476+3
  2307                           
  2308                           ;colour_cards.c: 124:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
  2309  001CE6  EFD8  F010         	goto	l5884
  2310  001CEA                     l5826:
  2311  001CEA  C1B0  F01A         	movff	colourcards_testing@R_rel,___flge@ff1
  2312  001CEE  C1B1  F01B         	movff	colourcards_testing@R_rel+1,___flge@ff1+1
  2313  001CF2  C1B2  F01C         	movff	colourcards_testing@R_rel+2,___flge@ff1+2
  2314  001CF6  C1B3  F01D         	movff	colourcards_testing@R_rel+3,___flge@ff1+3
  2315  001CFA  0E52               	movlw	82
  2316  001CFC  6E1E               	movwf	___flge@ff2^0,c
  2317  001CFE  0EB8               	movlw	184
  2318  001D00  6E1F               	movwf	(___flge@ff2+1)^0,c
  2319  001D02  0EDE               	movlw	222
  2320  001D04  6E20               	movwf	(___flge@ff2+2)^0,c
  2321  001D06  0E3E               	movlw	62
  2322  001D08  6E21               	movwf	(___flge@ff2+3)^0,c
  2323  001D0A  EC4B  F023         	call	___flge	;wreg free
  2324  001D0E  B0D8               	btfsc	status,0,c
  2325  001D10  EF8C  F00E         	goto	u7231
  2326  001D14  EF8E  F00E         	goto	u7230
  2327  001D18                     u7231:
  2328  001D18  EFCB  F00E         	goto	l5834
  2329  001D1C                     u7230:
  2330  001D1C  0E52               	movlw	82
  2331  001D1E  6E1A               	movwf	___flge@ff1^0,c
  2332  001D20  0EB8               	movlw	184
  2333  001D22  6E1B               	movwf	(___flge@ff1+1)^0,c
  2334  001D24  0E9E               	movlw	158
  2335  001D26  6E1C               	movwf	(___flge@ff1+2)^0,c
  2336  001D28  0E3E               	movlw	62
  2337  001D2A  6E1D               	movwf	(___flge@ff1+3)^0,c
  2338  001D2C  C1B4  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2339  001D30  C1B5  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2340  001D34  C1B6  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2341  001D38  C1B7  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2342  001D3C  EC4B  F023         	call	___flge	;wreg free
  2343  001D40  B0D8               	btfsc	status,0,c
  2344  001D42  EFA5  F00E         	goto	u7241
  2345  001D46  EFA7  F00E         	goto	u7240
  2346  001D4A                     u7241:
  2347  001D4A  EFCB  F00E         	goto	l5834
  2348  001D4E                     u7240:
  2349  001D4E  0E14               	movlw	20
  2350  001D50  6E1A               	movwf	___flge@ff1^0,c
  2351  001D52  0EAE               	movlw	174
  2352  001D54  6E1B               	movwf	(___flge@ff1+1)^0,c
  2353  001D56  0E47               	movlw	71
  2354  001D58  6E1C               	movwf	(___flge@ff1+2)^0,c
  2355  001D5A  0E3E               	movlw	62
  2356  001D5C  6E1D               	movwf	(___flge@ff1+3)^0,c
  2357  001D5E  C1B8  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2358  001D62  C1B9  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2359  001D66  C1BA  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2360  001D6A  C1BB  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2361  001D6E  EC4B  F023         	call	___flge	;wreg free
  2362  001D72  B0D8               	btfsc	status,0,c
  2363  001D74  EFBE  F00E         	goto	u7251
  2364  001D78  EFC0  F00E         	goto	u7250
  2365  001D7C                     u7251:
  2366  001D7C  EFCB  F00E         	goto	l5834
  2367  001D80                     u7250:
  2368  001D80                     
  2369                           ;colour_cards.c: 126:         char colour[] = "green";
  2370  001D80  EE21  F0DF         	lfsr	2,colourcards_testing@F14671
  2371  001D84  EE11  F085         	lfsr	1,colourcards_testing@colour_478
  2372  001D88  0E05               	movlw	5
  2373  001D8A                     u7261:
  2374  001D8A  CFDB FFE3          	movff	plusw2,plusw1
  2375  001D8E  06E8               	decf	wreg,f,c
  2376  001D90  E2FC               	bc	u7261
  2377                           
  2378                           ;colour_cards.c: 128:     } else if ((R_rel<0.43) && (G_rel>0.30) && (B_rel>0.21)) {
  2379  001D92  EFD8  F010         	goto	l5884
  2380  001D96                     l5834:
  2381  001D96  C1B0  F01A         	movff	colourcards_testing@R_rel,___flge@ff1
  2382  001D9A  C1B1  F01B         	movff	colourcards_testing@R_rel+1,___flge@ff1+1
  2383  001D9E  C1B2  F01C         	movff	colourcards_testing@R_rel+2,___flge@ff1+2
  2384  001DA2  C1B3  F01D         	movff	colourcards_testing@R_rel+3,___flge@ff1+3
  2385  001DA6  0EF6               	movlw	246
  2386  001DA8  6E1E               	movwf	___flge@ff2^0,c
  2387  001DAA  0E28               	movlw	40
  2388  001DAC  6E1F               	movwf	(___flge@ff2+1)^0,c
  2389  001DAE  0EDC               	movlw	220
  2390  001DB0  6E20               	movwf	(___flge@ff2+2)^0,c
  2391  001DB2  0E3E               	movlw	62
  2392  001DB4  6E21               	movwf	(___flge@ff2+3)^0,c
  2393  001DB6  EC4B  F023         	call	___flge	;wreg free
  2394  001DBA  B0D8               	btfsc	status,0,c
  2395  001DBC  EFE2  F00E         	goto	u7271
  2396  001DC0  EFE4  F00E         	goto	u7270
  2397  001DC4                     u7271:
  2398  001DC4  EF21  F00F         	goto	l5842
  2399  001DC8                     u7270:
  2400  001DC8  0E9A               	movlw	154
  2401  001DCA  6E1A               	movwf	___flge@ff1^0,c
  2402  001DCC  0E99               	movlw	153
  2403  001DCE  6E1B               	movwf	(___flge@ff1+1)^0,c
  2404  001DD0  0E99               	movlw	153
  2405  001DD2  6E1C               	movwf	(___flge@ff1+2)^0,c
  2406  001DD4  0E3E               	movlw	62
  2407  001DD6  6E1D               	movwf	(___flge@ff1+3)^0,c
  2408  001DD8  C1B4  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2409  001DDC  C1B5  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2410  001DE0  C1B6  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2411  001DE4  C1B7  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2412  001DE8  EC4B  F023         	call	___flge	;wreg free
  2413  001DEC  B0D8               	btfsc	status,0,c
  2414  001DEE  EFFB  F00E         	goto	u7281
  2415  001DF2  EFFD  F00E         	goto	u7280
  2416  001DF6                     u7281:
  2417  001DF6  EF21  F00F         	goto	l5842
  2418  001DFA                     u7280:
  2419  001DFA  0E3D               	movlw	61
  2420  001DFC  6E1A               	movwf	___flge@ff1^0,c
  2421  001DFE  0E0A               	movlw	10
  2422  001E00  6E1B               	movwf	(___flge@ff1+1)^0,c
  2423  001E02  0E57               	movlw	87
  2424  001E04  6E1C               	movwf	(___flge@ff1+2)^0,c
  2425  001E06  0E3E               	movlw	62
  2426  001E08  6E1D               	movwf	(___flge@ff1+3)^0,c
  2427  001E0A  C1B8  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2428  001E0E  C1B9  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2429  001E12  C1BA  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2430  001E16  C1BB  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2431  001E1A  EC4B  F023         	call	___flge	;wreg free
  2432  001E1E  B0D8               	btfsc	status,0,c
  2433  001E20  EF14  F00F         	goto	u7291
  2434  001E24  EF16  F00F         	goto	u7290
  2435  001E28                     u7291:
  2436  001E28  EF21  F00F         	goto	l5842
  2437  001E2C                     u7290:
  2438  001E2C                     
  2439                           ;colour_cards.c: 130:         char colour[] = "blue";
  2440  001E2C  EE21  F0EA         	lfsr	2,colourcards_testing@F14673
  2441  001E30  EE11  F091         	lfsr	1,colourcards_testing@colour_480
  2442  001E34  0E04               	movlw	4
  2443  001E36                     u7301:
  2444  001E36  CFDB FFE3          	movff	plusw2,plusw1
  2445  001E3A  06E8               	decf	wreg,f,c
  2446  001E3C  E2FC               	bc	u7301
  2447                           
  2448                           ;colour_cards.c: 132:     } else if ((R_rel>0.49) && (G_rel>0.285) && (B_rel>0.18)) {
  2449  001E3E  EFD8  F010         	goto	l5884
  2450  001E42                     l5842:
  2451  001E42  0E48               	movlw	72
  2452  001E44  6E1A               	movwf	___flge@ff1^0,c
  2453  001E46  0EE1               	movlw	225
  2454  001E48  6E1B               	movwf	(___flge@ff1+1)^0,c
  2455  001E4A  0EFA               	movlw	250
  2456  001E4C  6E1C               	movwf	(___flge@ff1+2)^0,c
  2457  001E4E  0E3E               	movlw	62
  2458  001E50  6E1D               	movwf	(___flge@ff1+3)^0,c
  2459  001E52  C1B0  F01E         	movff	colourcards_testing@R_rel,___flge@ff2
  2460  001E56  C1B1  F01F         	movff	colourcards_testing@R_rel+1,___flge@ff2+1
  2461  001E5A  C1B2  F020         	movff	colourcards_testing@R_rel+2,___flge@ff2+2
  2462  001E5E  C1B3  F021         	movff	colourcards_testing@R_rel+3,___flge@ff2+3
  2463  001E62  EC4B  F023         	call	___flge	;wreg free
  2464  001E66  B0D8               	btfsc	status,0,c
  2465  001E68  EF38  F00F         	goto	u7311
  2466  001E6C  EF3A  F00F         	goto	u7310
  2467  001E70                     u7311:
  2468  001E70  EF77  F00F         	goto	l5850
  2469  001E74                     u7310:
  2470  001E74  0E85               	movlw	133
  2471  001E76  6E1A               	movwf	___flge@ff1^0,c
  2472  001E78  0EEB               	movlw	235
  2473  001E7A  6E1B               	movwf	(___flge@ff1+1)^0,c
  2474  001E7C  0E91               	movlw	145
  2475  001E7E  6E1C               	movwf	(___flge@ff1+2)^0,c
  2476  001E80  0E3E               	movlw	62
  2477  001E82  6E1D               	movwf	(___flge@ff1+3)^0,c
  2478  001E84  C1B4  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2479  001E88  C1B5  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2480  001E8C  C1B6  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2481  001E90  C1B7  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2482  001E94  EC4B  F023         	call	___flge	;wreg free
  2483  001E98  B0D8               	btfsc	status,0,c
  2484  001E9A  EF51  F00F         	goto	u7321
  2485  001E9E  EF53  F00F         	goto	u7320
  2486  001EA2                     u7321:
  2487  001EA2  EF77  F00F         	goto	l5850
  2488  001EA6                     u7320:
  2489  001EA6  0EEC               	movlw	236
  2490  001EA8  6E1A               	movwf	___flge@ff1^0,c
  2491  001EAA  0E51               	movlw	81
  2492  001EAC  6E1B               	movwf	(___flge@ff1+1)^0,c
  2493  001EAE  0E38               	movlw	56
  2494  001EB0  6E1C               	movwf	(___flge@ff1+2)^0,c
  2495  001EB2  0E3E               	movlw	62
  2496  001EB4  6E1D               	movwf	(___flge@ff1+3)^0,c
  2497  001EB6  C1B8  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2498  001EBA  C1B9  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2499  001EBE  C1BA  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2500  001EC2  C1BB  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2501  001EC6  EC4B  F023         	call	___flge	;wreg free
  2502  001ECA  B0D8               	btfsc	status,0,c
  2503  001ECC  EF6A  F00F         	goto	u7331
  2504  001ED0  EF6C  F00F         	goto	u7330
  2505  001ED4                     u7331:
  2506  001ED4  EF77  F00F         	goto	l5850
  2507  001ED8                     u7330:
  2508  001ED8                     
  2509                           ;colour_cards.c: 134:         char colour[] = "yellow";
  2510  001ED8  EE21  F0D2         	lfsr	2,colourcards_testing@F14675
  2511  001EDC  EE11  F077         	lfsr	1,colourcards_testing@colour_482
  2512  001EE0  0E06               	movlw	6
  2513  001EE2                     u7341:
  2514  001EE2  CFDB FFE3          	movff	plusw2,plusw1
  2515  001EE6  06E8               	decf	wreg,f,c
  2516  001EE8  E2FC               	bc	u7341
  2517                           
  2518                           ;colour_cards.c: 136:     } else if ((R_rel>0.49) && (G_rel<0.275) && (B_rel>0.195)) {
  2519  001EEA  EFD8  F010         	goto	l5884
  2520  001EEE                     l5850:
  2521  001EEE  0E48               	movlw	72
  2522  001EF0  6E1A               	movwf	___flge@ff1^0,c
  2523  001EF2  0EE1               	movlw	225
  2524  001EF4  6E1B               	movwf	(___flge@ff1+1)^0,c
  2525  001EF6  0EFA               	movlw	250
  2526  001EF8  6E1C               	movwf	(___flge@ff1+2)^0,c
  2527  001EFA  0E3E               	movlw	62
  2528  001EFC  6E1D               	movwf	(___flge@ff1+3)^0,c
  2529  001EFE  C1B0  F01E         	movff	colourcards_testing@R_rel,___flge@ff2
  2530  001F02  C1B1  F01F         	movff	colourcards_testing@R_rel+1,___flge@ff2+1
  2531  001F06  C1B2  F020         	movff	colourcards_testing@R_rel+2,___flge@ff2+2
  2532  001F0A  C1B3  F021         	movff	colourcards_testing@R_rel+3,___flge@ff2+3
  2533  001F0E  EC4B  F023         	call	___flge	;wreg free
  2534  001F12  B0D8               	btfsc	status,0,c
  2535  001F14  EF8E  F00F         	goto	u7351
  2536  001F18  EF90  F00F         	goto	u7350
  2537  001F1C                     u7351:
  2538  001F1C  EFCD  F00F         	goto	l5858
  2539  001F20                     u7350:
  2540  001F20  C1B4  F01A         	movff	colourcards_testing@G_rel,___flge@ff1
  2541  001F24  C1B5  F01B         	movff	colourcards_testing@G_rel+1,___flge@ff1+1
  2542  001F28  C1B6  F01C         	movff	colourcards_testing@G_rel+2,___flge@ff1+2
  2543  001F2C  C1B7  F01D         	movff	colourcards_testing@G_rel+3,___flge@ff1+3
  2544  001F30  0ECD               	movlw	205
  2545  001F32  6E1E               	movwf	___flge@ff2^0,c
  2546  001F34  0ECC               	movlw	204
  2547  001F36  6E1F               	movwf	(___flge@ff2+1)^0,c
  2548  001F38  0E8C               	movlw	140
  2549  001F3A  6E20               	movwf	(___flge@ff2+2)^0,c
  2550  001F3C  0E3E               	movlw	62
  2551  001F3E  6E21               	movwf	(___flge@ff2+3)^0,c
  2552  001F40  EC4B  F023         	call	___flge	;wreg free
  2553  001F44  B0D8               	btfsc	status,0,c
  2554  001F46  EFA7  F00F         	goto	u7361
  2555  001F4A  EFA9  F00F         	goto	u7360
  2556  001F4E                     u7361:
  2557  001F4E  EFCD  F00F         	goto	l5858
  2558  001F52                     u7360:
  2559  001F52  0E14               	movlw	20
  2560  001F54  6E1A               	movwf	___flge@ff1^0,c
  2561  001F56  0EAE               	movlw	174
  2562  001F58  6E1B               	movwf	(___flge@ff1+1)^0,c
  2563  001F5A  0E47               	movlw	71
  2564  001F5C  6E1C               	movwf	(___flge@ff1+2)^0,c
  2565  001F5E  0E3E               	movlw	62
  2566  001F60  6E1D               	movwf	(___flge@ff1+3)^0,c
  2567  001F62  C1B8  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2568  001F66  C1B9  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2569  001F6A  C1BA  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2570  001F6E  C1BB  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2571  001F72  EC4B  F023         	call	___flge	;wreg free
  2572  001F76  B0D8               	btfsc	status,0,c
  2573  001F78  EFC0  F00F         	goto	u7371
  2574  001F7C  EFC2  F00F         	goto	u7370
  2575  001F80                     u7371:
  2576  001F80  EFCD  F00F         	goto	l5858
  2577  001F84                     u7370:
  2578  001F84                     
  2579                           ;colour_cards.c: 138:         char colour[] = "pink";
  2580  001F84  EE21  F0E5         	lfsr	2,colourcards_testing@F14677
  2581  001F88  EE11  F096         	lfsr	1,colourcards_testing@colour_484
  2582  001F8C  0E04               	movlw	4
  2583  001F8E                     u7381:
  2584  001F8E  CFDB FFE3          	movff	plusw2,plusw1
  2585  001F92  06E8               	decf	wreg,f,c
  2586  001F94  E2FC               	bc	u7381
  2587                           
  2588                           ;colour_cards.c: 140:     } else if ((R_rel>0.54) && (G_rel<0.24) && (B_rel<0.18)) {
  2589  001F96  EFD8  F010         	goto	l5884
  2590  001F9A                     l5858:
  2591  001F9A  0E71               	movlw	113
  2592  001F9C  6E1A               	movwf	___flge@ff1^0,c
  2593  001F9E  0E3D               	movlw	61
  2594  001FA0  6E1B               	movwf	(___flge@ff1+1)^0,c
  2595  001FA2  0E0A               	movlw	10
  2596  001FA4  6E1C               	movwf	(___flge@ff1+2)^0,c
  2597  001FA6  0E3F               	movlw	63
  2598  001FA8  6E1D               	movwf	(___flge@ff1+3)^0,c
  2599  001FAA  C1B0  F01E         	movff	colourcards_testing@R_rel,___flge@ff2
  2600  001FAE  C1B1  F01F         	movff	colourcards_testing@R_rel+1,___flge@ff2+1
  2601  001FB2  C1B2  F020         	movff	colourcards_testing@R_rel+2,___flge@ff2+2
  2602  001FB6  C1B3  F021         	movff	colourcards_testing@R_rel+3,___flge@ff2+3
  2603  001FBA  EC4B  F023         	call	___flge	;wreg free
  2604  001FBE  B0D8               	btfsc	status,0,c
  2605  001FC0  EFE4  F00F         	goto	u7391
  2606  001FC4  EFE6  F00F         	goto	u7390
  2607  001FC8                     u7391:
  2608  001FC8  EF23  F010         	goto	l5866
  2609  001FCC                     u7390:
  2610  001FCC  C1B4  F01A         	movff	colourcards_testing@G_rel,___flge@ff1
  2611  001FD0  C1B5  F01B         	movff	colourcards_testing@G_rel+1,___flge@ff1+1
  2612  001FD4  C1B6  F01C         	movff	colourcards_testing@G_rel+2,___flge@ff1+2
  2613  001FD8  C1B7  F01D         	movff	colourcards_testing@G_rel+3,___flge@ff1+3
  2614  001FDC  0E8F               	movlw	143
  2615  001FDE  6E1E               	movwf	___flge@ff2^0,c
  2616  001FE0  0EC2               	movlw	194
  2617  001FE2  6E1F               	movwf	(___flge@ff2+1)^0,c
  2618  001FE4  0E75               	movlw	117
  2619  001FE6  6E20               	movwf	(___flge@ff2+2)^0,c
  2620  001FE8  0E3E               	movlw	62
  2621  001FEA  6E21               	movwf	(___flge@ff2+3)^0,c
  2622  001FEC  EC4B  F023         	call	___flge	;wreg free
  2623  001FF0  B0D8               	btfsc	status,0,c
  2624  001FF2  EFFD  F00F         	goto	u7401
  2625  001FF6  EFFF  F00F         	goto	u7400
  2626  001FFA                     u7401:
  2627  001FFA  EF23  F010         	goto	l5866
  2628  001FFE                     u7400:
  2629  001FFE  C1B8  F01A         	movff	colourcards_testing@B_rel,___flge@ff1
  2630  002002  C1B9  F01B         	movff	colourcards_testing@B_rel+1,___flge@ff1+1
  2631  002006  C1BA  F01C         	movff	colourcards_testing@B_rel+2,___flge@ff1+2
  2632  00200A  C1BB  F01D         	movff	colourcards_testing@B_rel+3,___flge@ff1+3
  2633  00200E  0EEC               	movlw	236
  2634  002010  6E1E               	movwf	___flge@ff2^0,c
  2635  002012  0E51               	movlw	81
  2636  002014  6E1F               	movwf	(___flge@ff2+1)^0,c
  2637  002016  0E38               	movlw	56
  2638  002018  6E20               	movwf	(___flge@ff2+2)^0,c
  2639  00201A  0E3E               	movlw	62
  2640  00201C  6E21               	movwf	(___flge@ff2+3)^0,c
  2641  00201E  EC4B  F023         	call	___flge	;wreg free
  2642  002022  B0D8               	btfsc	status,0,c
  2643  002024  EF16  F010         	goto	u7411
  2644  002028  EF18  F010         	goto	u7410
  2645  00202C                     u7411:
  2646  00202C  EF23  F010         	goto	l5866
  2647  002030                     u7410:
  2648  002030                     
  2649                           ;colour_cards.c: 142:         char colour[] = "orange";
  2650  002030  EE21  F0CB         	lfsr	2,colourcards_testing@F14679
  2651  002034  EE11  F07E         	lfsr	1,colourcards_testing@colour_486
  2652  002038  0E06               	movlw	6
  2653  00203A                     u7421:
  2654  00203A  CFDB FFE3          	movff	plusw2,plusw1
  2655  00203E  06E8               	decf	wreg,f,c
  2656  002040  E2FC               	bc	u7421
  2657                           
  2658                           ;colour_cards.c: 144:     } else if ((R_rel<0.44) && (G_rel>0.305) && (B_rel>0.21)) {
  2659  002042  EFD8  F010         	goto	l5884
  2660  002046                     l5866:
  2661  002046  C1B0  F01A         	movff	colourcards_testing@R_rel,___flge@ff1
  2662  00204A  C1B1  F01B         	movff	colourcards_testing@R_rel+1,___flge@ff1+1
  2663  00204E  C1B2  F01C         	movff	colourcards_testing@R_rel+2,___flge@ff1+2
  2664  002052  C1B3  F01D         	movff	colourcards_testing@R_rel+3,___flge@ff1+3
  2665  002056  0EAE               	movlw	174
  2666  002058  6E1E               	movwf	___flge@ff2^0,c
  2667  00205A  0E47               	movlw	71
  2668  00205C  6E1F               	movwf	(___flge@ff2+1)^0,c
  2669  00205E  0EE1               	movlw	225
  2670  002060  6E20               	movwf	(___flge@ff2+2)^0,c
  2671  002062  0E3E               	movlw	62
  2672  002064  6E21               	movwf	(___flge@ff2+3)^0,c
  2673  002066  EC4B  F023         	call	___flge	;wreg free
  2674  00206A  B0D8               	btfsc	status,0,c
  2675  00206C  EF3A  F010         	goto	u7431
  2676  002070  EF3C  F010         	goto	u7430
  2677  002074                     u7431:
  2678  002074  EF79  F010         	goto	l5874
  2679  002078                     u7430:
  2680  002078  0EF6               	movlw	246
  2681  00207A  6E1A               	movwf	___flge@ff1^0,c
  2682  00207C  0E28               	movlw	40
  2683  00207E  6E1B               	movwf	(___flge@ff1+1)^0,c
  2684  002080  0E9C               	movlw	156
  2685  002082  6E1C               	movwf	(___flge@ff1+2)^0,c
  2686  002084  0E3E               	movlw	62
  2687  002086  6E1D               	movwf	(___flge@ff1+3)^0,c
  2688  002088  C1B4  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2689  00208C  C1B5  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2690  002090  C1B6  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2691  002094  C1B7  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2692  002098  EC4B  F023         	call	___flge	;wreg free
  2693  00209C  B0D8               	btfsc	status,0,c
  2694  00209E  EF53  F010         	goto	u7441
  2695  0020A2  EF55  F010         	goto	u7440
  2696  0020A6                     u7441:
  2697  0020A6  EF79  F010         	goto	l5874
  2698  0020AA                     u7440:
  2699  0020AA  0E3D               	movlw	61
  2700  0020AC  6E1A               	movwf	___flge@ff1^0,c
  2701  0020AE  0E0A               	movlw	10
  2702  0020B0  6E1B               	movwf	(___flge@ff1+1)^0,c
  2703  0020B2  0E57               	movlw	87
  2704  0020B4  6E1C               	movwf	(___flge@ff1+2)^0,c
  2705  0020B6  0E3E               	movlw	62
  2706  0020B8  6E1D               	movwf	(___flge@ff1+3)^0,c
  2707  0020BA  C1B8  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2708  0020BE  C1B9  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2709  0020C2  C1BA  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2710  0020C6  C1BB  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2711  0020CA  EC4B  F023         	call	___flge	;wreg free
  2712  0020CE  B0D8               	btfsc	status,0,c
  2713  0020D0  EF6C  F010         	goto	u7451
  2714  0020D4  EF6E  F010         	goto	u7450
  2715  0020D8                     u7451:
  2716  0020D8  EF79  F010         	goto	l5874
  2717  0020DC                     u7450:
  2718  0020DC                     
  2719                           ;colour_cards.c: 146:         char colour[] = "light blue";
  2720  0020DC  EE22  F0A0         	lfsr	2,colourcards_testing@F14681
  2721  0020E0  EE11  F064         	lfsr	1,colourcards_testing@colour_488
  2722  0020E4  0E0A               	movlw	10
  2723  0020E6                     u7461:
  2724  0020E6  CFDB FFE3          	movff	plusw2,plusw1
  2725  0020EA  06E8               	decf	wreg,f,c
  2726  0020EC  E2FC               	bc	u7461
  2727                           
  2728                           ;colour_cards.c: 148:     } else if ((R_rel<0.46) && (G_rel>0.295) && (B_rel>0.21)) {
  2729  0020EE  EFD8  F010         	goto	l5884
  2730  0020F2                     l5874:
  2731  0020F2  C1B0  F01A         	movff	colourcards_testing@R_rel,___flge@ff1
  2732  0020F6  C1B1  F01B         	movff	colourcards_testing@R_rel+1,___flge@ff1+1
  2733  0020FA  C1B2  F01C         	movff	colourcards_testing@R_rel+2,___flge@ff1+2
  2734  0020FE  C1B3  F01D         	movff	colourcards_testing@R_rel+3,___flge@ff1+3
  2735  002102  0E1F               	movlw	31
  2736  002104  6E1E               	movwf	___flge@ff2^0,c
  2737  002106  0E85               	movlw	133
  2738  002108  6E1F               	movwf	(___flge@ff2+1)^0,c
  2739  00210A  0EEB               	movlw	235
  2740  00210C  6E20               	movwf	(___flge@ff2+2)^0,c
  2741  00210E  0E3E               	movlw	62
  2742  002110  6E21               	movwf	(___flge@ff2+3)^0,c
  2743  002112  EC4B  F023         	call	___flge	;wreg free
  2744  002116  B0D8               	btfsc	status,0,c
  2745  002118  EF90  F010         	goto	u7471
  2746  00211C  EF92  F010         	goto	u7470
  2747  002120                     u7471:
  2748  002120  EFCF  F010         	goto	l5882
  2749  002124                     u7470:
  2750  002124  0E3D               	movlw	61
  2751  002126  6E1A               	movwf	___flge@ff1^0,c
  2752  002128  0E0A               	movlw	10
  2753  00212A  6E1B               	movwf	(___flge@ff1+1)^0,c
  2754  00212C  0E97               	movlw	151
  2755  00212E  6E1C               	movwf	(___flge@ff1+2)^0,c
  2756  002130  0E3E               	movlw	62
  2757  002132  6E1D               	movwf	(___flge@ff1+3)^0,c
  2758  002134  C1B4  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2759  002138  C1B5  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2760  00213C  C1B6  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2761  002140  C1B7  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2762  002144  EC4B  F023         	call	___flge	;wreg free
  2763  002148  B0D8               	btfsc	status,0,c
  2764  00214A  EFA9  F010         	goto	u7481
  2765  00214E  EFAB  F010         	goto	u7480
  2766  002152                     u7481:
  2767  002152  EFCF  F010         	goto	l5882
  2768  002156                     u7480:
  2769  002156  0E3D               	movlw	61
  2770  002158  6E1A               	movwf	___flge@ff1^0,c
  2771  00215A  0E0A               	movlw	10
  2772  00215C  6E1B               	movwf	(___flge@ff1+1)^0,c
  2773  00215E  0E57               	movlw	87
  2774  002160  6E1C               	movwf	(___flge@ff1+2)^0,c
  2775  002162  0E3E               	movlw	62
  2776  002164  6E1D               	movwf	(___flge@ff1+3)^0,c
  2777  002166  C1B8  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2778  00216A  C1B9  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2779  00216E  C1BA  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2780  002172  C1BB  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2781  002176  EC4B  F023         	call	___flge	;wreg free
  2782  00217A  B0D8               	btfsc	status,0,c
  2783  00217C  EFC2  F010         	goto	u7491
  2784  002180  EFC4  F010         	goto	u7490
  2785  002184                     u7491:
  2786  002184  EFCF  F010         	goto	l5882
  2787  002188                     u7490:
  2788  002188                     
  2789                           ;colour_cards.c: 150:         char colour[] = "white";
  2790  002188  EE21  F0D9         	lfsr	2,colourcards_testing@F14683
  2791  00218C  EE11  F08B         	lfsr	1,colourcards_testing@colour_490
  2792  002190  0E05               	movlw	5
  2793  002192                     u7501:
  2794  002192  CFDB FFE3          	movff	plusw2,plusw1
  2795  002196  06E8               	decf	wreg,f,c
  2796  002198  E2FC               	bc	u7501
  2797                           
  2798                           ;colour_cards.c: 152:     } else {
  2799  00219A  EFD8  F010         	goto	l5884
  2800  00219E                     l5882:
  2801                           
  2802                           ;colour_cards.c: 154:         char colour[] = "unknown";
  2803  00219E  EE21  F0BC         	lfsr	2,colourcards_testing@F14685
  2804  0021A2  EE11  F06F         	lfsr	1,colourcards_testing@colour_492
  2805  0021A6  0E07               	movlw	7
  2806  0021A8                     u7511:
  2807  0021A8  CFDB FFE3          	movff	plusw2,plusw1
  2808  0021AC  06E8               	decf	wreg,f,c
  2809  0021AE  E2FC               	bc	u7511
  2810  0021B0                     l5884:
  2811                           
  2812                           ;colour_cards.c: 157:     char buf[100];;colour_cards.c: 158:     sprintf(buf,"RGBC: %i 
      +                          %i %i %i     RGBC_rel: %.3f %.3f %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_r
      +                          el, colour);
  2813  0021B0  0E00               	movlw	low colourcards_testing@buf
  2814  0021B2  0100               	movlb	0	; () banked
  2815  0021B4  6FA0               	movwf	sprintf@s& (0+255),b
  2816  0021B6  0E01               	movlw	high colourcards_testing@buf
  2817  0021B8  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  2818  0021BA  0E01               	movlw	low STR_1
  2819  0021BC  6FA2               	movwf	sprintf@fmt& (0+255),b
  2820  0021BE  0E0E               	movlw	high STR_1
  2821  0021C0  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  2822  0021C2  C1A0  F0A4         	movff	colourcards_testing@R,?_sprintf+4
  2823  0021C6  C1A1  F0A5         	movff	colourcards_testing@R+1,?_sprintf+5
  2824  0021CA  C1A2  F0A6         	movff	colourcards_testing@R+2,?_sprintf+6
  2825  0021CE  C1A3  F0A7         	movff	colourcards_testing@R+3,?_sprintf+7
  2826  0021D2  C1A4  F0A8         	movff	colourcards_testing@G,?_sprintf+8
  2827  0021D6  C1A5  F0A9         	movff	colourcards_testing@G+1,?_sprintf+9
  2828  0021DA  C1A6  F0AA         	movff	colourcards_testing@G+2,?_sprintf+10
  2829  0021DE  C1A7  F0AB         	movff	colourcards_testing@G+3,?_sprintf+11
  2830  0021E2  C1A8  F0AC         	movff	colourcards_testing@B,?_sprintf+12
  2831  0021E6  C1A9  F0AD         	movff	colourcards_testing@B+1,?_sprintf+13
  2832  0021EA  C1AA  F0AE         	movff	colourcards_testing@B+2,?_sprintf+14
  2833  0021EE  C1AB  F0AF         	movff	colourcards_testing@B+3,?_sprintf+15
  2834  0021F2  C1AC  F0B0         	movff	colourcards_testing@C,?_sprintf+16
  2835  0021F6  C1AD  F0B1         	movff	colourcards_testing@C+1,?_sprintf+17
  2836  0021FA  C1AE  F0B2         	movff	colourcards_testing@C+2,?_sprintf+18
  2837  0021FE  C1AF  F0B3         	movff	colourcards_testing@C+3,?_sprintf+19
  2838  002202  C1B0  F0B4         	movff	colourcards_testing@R_rel,?_sprintf+20
  2839  002206  C1B1  F0B5         	movff	colourcards_testing@R_rel+1,?_sprintf+21
  2840  00220A  C1B2  F0B6         	movff	colourcards_testing@R_rel+2,?_sprintf+22
  2841  00220E  C1B3  F0B7         	movff	colourcards_testing@R_rel+3,?_sprintf+23
  2842  002212  C1B4  F0B8         	movff	colourcards_testing@G_rel,?_sprintf+24
  2843  002216  C1B5  F0B9         	movff	colourcards_testing@G_rel+1,?_sprintf+25
  2844  00221A  C1B6  F0BA         	movff	colourcards_testing@G_rel+2,?_sprintf+26
  2845  00221E  C1B7  F0BB         	movff	colourcards_testing@G_rel+3,?_sprintf+27
  2846  002222  C1B8  F0BC         	movff	colourcards_testing@B_rel,?_sprintf+28
  2847  002226  C1B9  F0BD         	movff	colourcards_testing@B_rel+1,?_sprintf+29
  2848  00222A  C1BA  F0BE         	movff	colourcards_testing@B_rel+2,?_sprintf+30
  2849  00222E  C1BB  F0BF         	movff	colourcards_testing@B_rel+3,?_sprintf+31
  2850  002232  C19F  F0C0         	movff	colourcards_testing@colour,?_sprintf+32
  2851  002236  6BC1               	clrf	(?_sprintf+33)& (0+255),b
  2852  002238  ECCD  F029         	call	_sprintf	;wreg free
  2853  00223C                     
  2854                           ;colour_cards.c: 160:     sendStringSerial4(buf);
  2855  00223C  0E00               	movlw	low colourcards_testing@buf
  2856  00223E  6E02               	movwf	sendStringSerial4@string^0,c
  2857  002240  0E01               	movlw	high colourcards_testing@buf
  2858  002242  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2859  002244  EC64  F02C         	call	_sendStringSerial4	;wreg free
  2860  002248                     
  2861                           ;colour_cards.c: 161:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2862  002248  0E29               	movlw	41
  2863  00224A  0100               	movlb	0	; () banked
  2864  00224C  6FCD               	movwf	(??_colourcards_testing+1)& (0+255),b
  2865  00224E  0E96               	movlw	150
  2866  002250  6FCC               	movwf	??_colourcards_testing& (0+255),b
  2867  002252  0E7F               	movlw	127
  2868  002254                     u8107:
  2869  002254  2EE8               	decfsz	wreg,f,c
  2870  002256  D7FE               	bra	u8107
  2871  002258  2FCC               	decfsz	??_colourcards_testing& (0+255),f,b
  2872  00225A  D7FC               	bra	u8107
  2873  00225C  2FCD               	decfsz	(??_colourcards_testing+1)& (0+255),f,b
  2874  00225E  D7FA               	bra	u8107
  2875  002260                     
  2876                           ;colour_cards.c: 163:     INTCONbits.GIE = 1;
  2877  002260  8EF2               	bsf	242,7,c	;volatile
  2878  002262  0012               	return		;funcret
  2879  002264                     __end_of_colourcards_testing:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _sprintf *****************
  2883 ;; Defined at:
  2884 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  s               2   64[BANK0 ] PTR unsigned char 
  2887 ;;		 -> colourcards_testing@buf(100), 
  2888 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  2889 ;;		 -> STR_1(64), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  f               6  100[BANK0 ] struct _IO_FILE
  2892 ;;  ap              2   98[BANK0 ] PTR void [1]
  2893 ;;		 -> ?_sprintf(2), 
  2894 ;;  ret             2    0        int 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2   64[BANK0 ] int 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2904 ;;      Params:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;Total ram usage:       42 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 7
  2911 ;; This function calls:
  2912 ;;		_vfprintf
  2913 ;; This function is called by:
  2914 ;;		_colourcards_testing
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text7
  2919  00539A                     __ptext7:
  2920                           	callstack 0
  2921  00539A                     _sprintf:
  2922                           	callstack 22
  2923  00539A  0EA4               	movlw	low (?_sprintf+4)
  2924  00539C  0100               	movlb	0	; () banked
  2925  00539E  6FC2               	movwf	sprintf@ap& (0+255),b
  2926  0053A0  0E00               	movlw	high (?_sprintf+4)
  2927  0053A2  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  2928  0053A4  C0A0  F0C4         	movff	sprintf@s,sprintf@f
  2929  0053A8  C0A1  F0C5         	movff	sprintf@s+1,sprintf@f+1
  2930  0053AC                     
  2931                           ; BSR set to: 0
  2932  0053AC  0E00               	movlw	0
  2933  0053AE  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  2934  0053B0  0E00               	movlw	0
  2935  0053B2  6FC6               	movwf	(sprintf@f+2)& (0+255),b
  2936  0053B4                     
  2937                           ; BSR set to: 0
  2938  0053B4  0E00               	movlw	0
  2939  0053B6  6FC9               	movwf	(sprintf@f+5)& (0+255),b
  2940  0053B8  0E00               	movlw	0
  2941  0053BA  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  2942  0053BC                     
  2943                           ; BSR set to: 0
  2944  0053BC  0EC4               	movlw	low sprintf@f
  2945  0053BE  6F98               	movwf	vfprintf@fp& (0+255),b
  2946  0053C0  0E00               	movlw	high sprintf@f
  2947  0053C2  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  2948  0053C4  C0A2  F09A         	movff	sprintf@fmt,vfprintf@fmt
  2949  0053C8  C0A3  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2950  0053CC  0EC2               	movlw	low sprintf@ap
  2951  0053CE  6F9C               	movwf	vfprintf@ap& (0+255),b
  2952  0053D0  0E00               	movlw	high sprintf@ap
  2953  0053D2  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  2954  0053D4  EC0C  F029         	call	_vfprintf	;wreg free
  2955  0053D8  0100               	movlb	0	; () banked
  2956  0053DA  51C6               	movf	(sprintf@f+2)& (0+255),w,b
  2957  0053DC  25A0               	addwf	sprintf@s& (0+255),w,b
  2958  0053DE  6ED9               	movwf	fsr2l,c
  2959  0053E0  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  2960  0053E2  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2961  0053E4  6EDA               	movwf	fsr2h,c
  2962  0053E6  0E00               	movlw	0
  2963  0053E8  6EDF               	movwf	indf2,c
  2964  0053EA                     
  2965                           ; BSR set to: 0
  2966  0053EA  0012               	return		;funcret
  2967  0053EC                     __end_of_sprintf:
  2968                           	callstack 0
  2969                           
  2970 ;; *************** function _vfprintf *****************
  2971 ;; Defined at:
  2972 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  2975 ;;		 -> sprintf@f(6), 
  2976 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  2977 ;;		 -> STR_1(64), 
  2978 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2979 ;;		 -> sprintf@ap(2), 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  2982 ;;		 -> STR_1(64), 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2   56[BANK0 ] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2992 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2995 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2996 ;;Total ram usage:        8 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 6
  2999 ;; This function calls:
  3000 ;;		_vfpfcnvrt
  3001 ;; This function is called by:
  3002 ;;		_sprintf
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text8
  3007  005218                     __ptext8:
  3008                           	callstack 0
  3009  005218                     _vfprintf:
  3010                           	callstack 22
  3011  005218                     
  3012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3013  005218  C09A  F09E         	movff	vfprintf@fmt,vfprintf@cfmt
  3014  00521C  C09B  F09F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3015  005220                     
  3016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3017  005220  0E00               	movlw	0
  3018  005222  0100               	movlb	0	; () banked
  3019  005224  6FEB               	movwf	(_nout+1)& (0+255),b
  3020  005226  0E00               	movlw	0
  3021  005228  6FEA               	movwf	_nout& (0+255),b
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3024  00522A  EF2A  F029         	goto	l5584
  3025  00522E                     l5582:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3029  00522E  C098  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3030  005232  C099  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3031  005236  0E9E               	movlw	low vfprintf@cfmt
  3032  005238  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3033  00523A  0E00               	movlw	high vfprintf@cfmt
  3034  00523C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3035  00523E  C09C  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3036  005242  C09D  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3037  005246  EC32  F011         	call	_vfpfcnvrt	;wreg free
  3038  00524A  5040               	movf	?_vfpfcnvrt^0,w,c
  3039  00524C  0100               	movlb	0	; () banked
  3040  00524E  27EA               	addwf	_nout& (0+255),f,b
  3041  005250  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3042  005252  23EB               	addwfc	(_nout+1)& (0+255),f,b
  3043  005254                     l5584:
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3047  005254  C09E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3048  005258  C09F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3049  00525C                     	if	0	;tblptru may be non-zero
  3050  00525C                     	endif
  3051  00525C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3052  00525C  0E00               	movlw	low (__mediumconst shr (0+16))
  3053  00525E  6EF8               	movwf	tblptru,c
  3054  005260                     	endif
  3055  005260  0008               	tblrd		*
  3056  005262  50F5               	movf	tablat,w,c
  3057  005264  0900               	iorlw	0
  3058  005266  A4D8               	btfss	status,2,c
  3059  005268  EF38  F029         	goto	u6971
  3060  00526C  EF3A  F029         	goto	u6970
  3061  005270                     u6971:
  3062  005270  EF17  F029         	goto	l5582
  3063  005274                     u6970:
  3064  005274                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3067  005274  C0EA  F098         	movff	_nout,?_vfprintf
  3068  005278  C0EB  F099         	movff	_nout+1,?_vfprintf+1
  3069  00527C                     
  3070                           ; BSR set to: 0
  3071  00527C  0012               	return		;funcret
  3072  00527E                     __end_of_vfprintf:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _vfpfcnvrt *****************
  3076 ;; Defined at:
  3077 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3080 ;;		 -> sprintf@f(6), 
  3081 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3082 ;;		 -> vfprintf@cfmt(2), 
  3083 ;;  ap              2   67[COMRAM] PTR PTR void 
  3084 ;;		 -> sprintf@ap(2), 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  ll              8   73[COMRAM] long long 
  3087 ;;  llu             8    0        unsigned long long 
  3088 ;;  f               4   87[COMRAM] unsigned long long 
  3089 ;;  ct              3   91[COMRAM] unsigned char [3]
  3090 ;;  vp              3    0        PTR void 
  3091 ;;  cp              2   81[COMRAM] PTR unsigned char 
  3092 ;;		 -> ?_sprintf(2), 
  3093 ;;  i               2    0        int 
  3094 ;;  done            2    0        int 
  3095 ;;  c               1   94[COMRAM] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  2   63[COMRAM] int 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3105 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;Total ram usage:       32 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 5
  3112 ;; This function calls:
  3113 ;;		_atoi
  3114 ;;		_dtoa
  3115 ;;		_efgtoa
  3116 ;;		_fputc
  3117 ;;		_isdigit
  3118 ;;		_isupper
  3119 ;;		_stoa
  3120 ;;		_strncmp
  3121 ;;		_tolower
  3122 ;; This function is called by:
  3123 ;;		_vfprintf
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text9
  3128  002264                     __ptext9:
  3129                           	callstack 0
  3130  002264                     _vfpfcnvrt:
  3131                           	callstack 22
  3132  002264                     
  3133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3134  002264  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3135  002268  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3136  00226C  CFDE FFF6          	movff	postinc2,tblptrl
  3137  002270  CFDD FFF7          	movff	postdec2,tblptrh
  3138  002274                     	if	0	;tblptru may be non-zero
  3139  002274                     	endif
  3140  002274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3141  002274  0E00               	movlw	low (__mediumconst shr (0+16))
  3142  002276  6EF8               	movwf	tblptru,c
  3143  002278                     	endif
  3144  002278  0008               	tblrd		*
  3145  00227A  50F5               	movf	tablat,w,c
  3146  00227C  0A25               	xorlw	37
  3147  00227E  A4D8               	btfss	status,2,c
  3148  002280  EF44  F011         	goto	u6641
  3149  002284  EF46  F011         	goto	u6640
  3150  002288                     u6641:
  3151  002288  EF03  F014         	goto	l5500
  3152  00228C                     u6640:
  3153  00228C                     
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3155  00228C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3156  002290  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3157  002294  2ADE               	incf	postinc2,f,c
  3158  002296  0E00               	movlw	0
  3159  002298  22DD               	addwfc	postdec2,f,c
  3160  00229A                     
  3161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3162  00229A  0E00               	movlw	0
  3163  00229C  0100               	movlb	0	; () banked
  3164  00229E  6FED               	movwf	(_width+1)& (0+255),b
  3165  0022A0  0E00               	movlw	0
  3166  0022A2  6FEC               	movwf	_width& (0+255),b
  3167  0022A4  C0EC  F0F0         	movff	_width,_flags
  3168  0022A8  C0ED  F0F1         	movff	_width+1,_flags+1
  3169  0022AC                     
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3172  0022AC  69EE               	setf	_prec& (0+255),b
  3173  0022AE  69EF               	setf	(_prec+1)& (0+255),b
  3174  0022B0                     
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3177  0022B0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3178  0022B4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3179  0022B8  CFDE FFF6          	movff	postinc2,tblptrl
  3180  0022BC  CFDD FFF7          	movff	postdec2,tblptrh
  3181  0022C0                     	if	0	;tblptru may be non-zero
  3182  0022C0                     	endif
  3183  0022C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3184  0022C0  0E00               	movlw	low (__mediumconst shr (0+16))
  3185  0022C2  6EF8               	movwf	tblptru,c
  3186  0022C4                     	endif
  3187  0022C4  0008               	tblrd		*
  3188  0022C6  50F5               	movf	tablat,w,c
  3189  0022C8  0A2E               	xorlw	46
  3190  0022CA  A4D8               	btfss	status,2,c
  3191  0022CC  EF6A  F011         	goto	u6651
  3192  0022D0  EF6C  F011         	goto	u6650
  3193  0022D4                     u6651:
  3194  0022D4  EFED  F011         	goto	l5428
  3195  0022D8                     u6650:
  3196  0022D8                     
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3199  0022D8  0E00               	movlw	0
  3200  0022DA  6FEF               	movwf	(_prec+1)& (0+255),b
  3201  0022DC  0E00               	movlw	0
  3202  0022DE  6FEE               	movwf	_prec& (0+255),b
  3203  0022E0                     
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3206  0022E0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3207  0022E4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3208  0022E8  2ADE               	incf	postinc2,f,c
  3209  0022EA  0E00               	movlw	0
  3210  0022EC  22DD               	addwfc	postdec2,f,c
  3211  0022EE                     
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3214  0022EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3215  0022F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3216  0022F6  CFDE FFF6          	movff	postinc2,tblptrl
  3217  0022FA  CFDD FFF7          	movff	postdec2,tblptrh
  3218  0022FE                     	if	0	;tblptru may be non-zero
  3219  0022FE                     	endif
  3220  0022FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3221  0022FE  0E00               	movlw	low (__mediumconst shr (0+16))
  3222  002300  6EF8               	movwf	tblptru,c
  3223  002302                     	endif
  3224  002302  0008               	tblrd		*
  3225  002304  50F5               	movf	tablat,w,c
  3226  002306  0A2A               	xorlw	42
  3227  002308  A4D8               	btfss	status,2,c
  3228  00230A  EF89  F011         	goto	u6661
  3229  00230E  EF8B  F011         	goto	u6660
  3230  002312                     u6661:
  3231  002312  EFA8  F011         	goto	l5418
  3232  002316                     u6660:
  3233  002316                     
  3234                           ; BSR set to: 0
  3235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3236  002316  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3237  00231A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3238  00231E  2ADE               	incf	postinc2,f,c
  3239  002320  0E00               	movlw	0
  3240  002322  22DD               	addwfc	postdec2,f,c
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3243  002324  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3244  002328  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3245  00232C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3246  002330  0E02               	movlw	2
  3247  002332  26DE               	addwf	postinc2,f,c
  3248  002334  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3249  002338  0E00               	movlw	0
  3250  00233A  22DD               	addwfc	postdec2,f,c
  3251  00233C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3252  002340  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3253  002344  CFDE F0EE          	movff	postinc2,_prec
  3254  002348  CFDD F0EF          	movff	postdec2,_prec+1
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3257  00234C  EFED  F011         	goto	l5428
  3258  002350                     l5418:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3262  002350  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3263  002354  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3264  002358  CFDE F008          	movff	postinc2,atoi@s
  3265  00235C  CFDD F009          	movff	postdec2,atoi@s+1
  3266  002360  ECBD  F01F         	call	_atoi	;wreg free
  3267  002364  C008  F0EE         	movff	?_atoi,_prec
  3268  002368  C009  F0EF         	movff	?_atoi+1,_prec+1
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3271  00236C  EFBF  F011         	goto	l5422
  3272  002370                     l5420:
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3275  002370  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3276  002374  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3277  002378  2ADE               	incf	postinc2,f,c
  3278  00237A  0E00               	movlw	0
  3279  00237C  22DD               	addwfc	postdec2,f,c
  3280  00237E                     l5422:
  3281  00237E  0ED0               	movlw	208
  3282  002380  6E46               	movwf	??_vfpfcnvrt^0,c
  3283  002382  0EFF               	movlw	255
  3284  002384  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3285  002386  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3286  00238A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3287  00238E  CFDE FFF6          	movff	postinc2,tblptrl
  3288  002392  CFDD FFF7          	movff	postdec2,tblptrh
  3289  002396                     	if	0	;tblptru may be non-zero
  3290  002396                     	endif
  3291  002396                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3292  002396  0E00               	movlw	low (__mediumconst shr (0+16))
  3293  002398  6EF8               	movwf	tblptru,c
  3294  00239A                     	endif
  3295  00239A  0008               	tblrd		*
  3296  00239C  50F5               	movf	tablat,w,c
  3297  00239E  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3298  0023A0  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3299  0023A2  5046               	movf	??_vfpfcnvrt^0,w,c
  3300  0023A4  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3301  0023A6  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3302  0023A8  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3303  0023AA  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3304  0023AC  E10A               	bnz	u6670
  3305  0023AE  0E0A               	movlw	10
  3306  0023B0  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3307  0023B2  A0D8               	btfss	status,0,c
  3308  0023B4  EFDE  F011         	goto	u6671
  3309  0023B8  EFE1  F011         	goto	u6670
  3310  0023BC                     u6671:
  3311  0023BC  0E01               	movlw	1
  3312  0023BE  EFE2  F011         	goto	u6680
  3313  0023C2                     u6670:
  3314  0023C2  0E00               	movlw	0
  3315  0023C4                     u6680:
  3316  0023C4  6E54               	movwf	_vfpfcnvrt$3005^0,c
  3317  0023C6  6A55               	clrf	(_vfpfcnvrt$3005+1)^0,c
  3318  0023C8  5054               	movf	_vfpfcnvrt$3005^0,w,c
  3319  0023CA  1055               	iorwf	(_vfpfcnvrt$3005+1)^0,w,c
  3320  0023CC  A4D8               	btfss	status,2,c
  3321  0023CE  EFEB  F011         	goto	u6691
  3322  0023D2  EFED  F011         	goto	u6690
  3323  0023D6                     u6691:
  3324  0023D6  EFB8  F011         	goto	l5420
  3325  0023DA                     u6690:
  3326  0023DA                     l5428:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3329  0023DA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3330  0023DE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3331  0023E2  CFDE FFF6          	movff	postinc2,tblptrl
  3332  0023E6  CFDD FFF7          	movff	postdec2,tblptrh
  3333  0023EA                     	if	0	;tblptru may be non-zero
  3334  0023EA                     	endif
  3335  0023EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3336  0023EA  0E00               	movlw	low (__mediumconst shr (0+16))
  3337  0023EC  6EF8               	movwf	tblptru,c
  3338  0023EE                     	endif
  3339  0023EE  0008               	tblrd		*
  3340  0023F0  50F5               	movf	tablat,w,c
  3341  0023F2  6E07               	movwf	tolower@c^0,c
  3342  0023F4  6A08               	clrf	(tolower@c+1)^0,c
  3343  0023F6  EC3F  F029         	call	_tolower	;wreg free
  3344  0023FA  5007               	movf	?_tolower^0,w,c
  3345  0023FC  6E5C               	movwf	vfpfcnvrt@ct^0,c
  3346  0023FE                     
  3347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3348  0023FE  505C               	movf	vfpfcnvrt@ct^0,w,c
  3349  002400  B4D8               	btfsc	status,2,c
  3350  002402  EF05  F012         	goto	u6701
  3351  002406  EF07  F012         	goto	u6700
  3352  00240A                     u6701:
  3353  00240A  EF43  F012         	goto	l5438
  3354  00240E                     u6700:
  3355  00240E                     
  3356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3357  00240E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3358  002412  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3359  002416  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3360  00241A  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3361  00241E  0E01               	movlw	1
  3362  002420  2646               	addwf	??_vfpfcnvrt^0,f,c
  3363  002422  0E00               	movlw	0
  3364  002424  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3365  002426  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3366  00242A  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3367  00242E                     	if	0	;tblptru may be non-zero
  3368  00242E                     	endif
  3369  00242E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3370  00242E  0E00               	movlw	low (__mediumconst shr (0+16))
  3371  002430  6EF8               	movwf	tblptru,c
  3372  002432                     	endif
  3373  002432  0008               	tblrd		*
  3374  002434  50F5               	movf	tablat,w,c
  3375  002436  6E07               	movwf	tolower@c^0,c
  3376  002438  6A08               	clrf	(tolower@c+1)^0,c
  3377  00243A  EC3F  F029         	call	_tolower	;wreg free
  3378  00243E  5007               	movf	?_tolower^0,w,c
  3379  002440  6E5D               	movwf	(vfpfcnvrt@ct+1)^0,c
  3380  002442                     
  3381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3382  002442  505D               	movf	(vfpfcnvrt@ct+1)^0,w,c
  3383  002444  B4D8               	btfsc	status,2,c
  3384  002446  EF27  F012         	goto	u6711
  3385  00244A  EF29  F012         	goto	u6710
  3386  00244E                     u6711:
  3387  00244E  EF43  F012         	goto	l5438
  3388  002452                     u6710:
  3389  002452                     
  3390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3391  002452  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3392  002456  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3393  00245A  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3394  00245E  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3395  002462  0E02               	movlw	2
  3396  002464  2646               	addwf	??_vfpfcnvrt^0,f,c
  3397  002466  0E00               	movlw	0
  3398  002468  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3399  00246A  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3400  00246E  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3401  002472                     	if	0	;tblptru may be non-zero
  3402  002472                     	endif
  3403  002472                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3404  002472  0E00               	movlw	low (__mediumconst shr (0+16))
  3405  002474  6EF8               	movwf	tblptru,c
  3406  002476                     	endif
  3407  002476  0008               	tblrd		*
  3408  002478  50F5               	movf	tablat,w,c
  3409  00247A  6E07               	movwf	tolower@c^0,c
  3410  00247C  6A08               	clrf	(tolower@c+1)^0,c
  3411  00247E  EC3F  F029         	call	_tolower	;wreg free
  3412  002482  5007               	movf	?_tolower^0,w,c
  3413  002484  6E5E               	movwf	(vfpfcnvrt@ct+2)^0,c
  3414  002486                     l5438:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3417  002486  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3418  00248A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3419  00248E  CFDE FFF6          	movff	postinc2,tblptrl
  3420  002492  CFDD FFF7          	movff	postdec2,tblptrh
  3421  002496                     	if	0	;tblptru may be non-zero
  3422  002496                     	endif
  3423  002496                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3424  002496  0E00               	movlw	low (__mediumconst shr (0+16))
  3425  002498  6EF8               	movwf	tblptru,c
  3426  00249A                     	endif
  3427  00249A  0008               	tblrd		*
  3428  00249C  50F5               	movf	tablat,w,c
  3429  00249E  0A64               	xorlw	100
  3430  0024A0  B4D8               	btfsc	status,2,c
  3431  0024A2  EF55  F012         	goto	u6721
  3432  0024A6  EF57  F012         	goto	u6720
  3433  0024AA                     u6721:
  3434  0024AA  EF6B  F012         	goto	l5442
  3435  0024AE                     u6720:
  3436  0024AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3437  0024B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3438  0024B6  CFDE FFF6          	movff	postinc2,tblptrl
  3439  0024BA  CFDD FFF7          	movff	postdec2,tblptrh
  3440  0024BE                     	if	0	;tblptru may be non-zero
  3441  0024BE                     	endif
  3442  0024BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3443  0024BE  0E00               	movlw	low (__mediumconst shr (0+16))
  3444  0024C0  6EF8               	movwf	tblptru,c
  3445  0024C2                     	endif
  3446  0024C2  0008               	tblrd		*
  3447  0024C4  50F5               	movf	tablat,w,c
  3448  0024C6  0A69               	xorlw	105
  3449  0024C8  A4D8               	btfss	status,2,c
  3450  0024CA  EF69  F012         	goto	u6731
  3451  0024CE  EF6B  F012         	goto	u6730
  3452  0024D2                     u6731:
  3453  0024D2  EFAB  F012         	goto	l5448
  3454  0024D6                     u6730:
  3455  0024D6                     l5442:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3458  0024D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3459  0024DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3460  0024DE  2ADE               	incf	postinc2,f,c
  3461  0024E0  0E00               	movlw	0
  3462  0024E2  22DD               	addwfc	postdec2,f,c
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3465  0024E4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3466  0024E8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3467  0024EC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3468  0024F0  0E02               	movlw	2
  3469  0024F2  26DE               	addwf	postinc2,f,c
  3470  0024F4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3471  0024F8  0E00               	movlw	0
  3472  0024FA  22DD               	addwfc	postdec2,f,c
  3473  0024FC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3474  002500  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3475  002504  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  3476  002508  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  3477  00250C  0E00               	movlw	0
  3478  00250E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3479  002510  0EFF               	movlw	-1
  3480  002512  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  3481  002514  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  3482  002516  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  3483  002518  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  3484  00251A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  3485  00251C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  3486  00251E                     
  3487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3488  00251E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3489  002522  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3490  002526  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3491  00252A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3492  00252E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3493  002532  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3494  002536  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3495  00253A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3496  00253E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3497  002542  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3498  002546  EC63  F01A         	call	_dtoa	;wreg free
  3499  00254A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3500  00254E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3501  002552  EF20  F014         	goto	l1541
  3502  002556                     l5448:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3505  002556  0E66               	movlw	102
  3506  002558  185C               	xorwf	vfpfcnvrt@ct^0,w,c
  3507  00255A  A4D8               	btfss	status,2,c
  3508  00255C  EFB2  F012         	goto	u6741
  3509  002560  EFB4  F012         	goto	u6740
  3510  002564                     u6741:
  3511  002564  EFF6  F012         	goto	l5460
  3512  002568                     u6740:
  3513  002568                     
  3514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3515  002568  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3516  00256C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3517  002570  CFDE FFF6          	movff	postinc2,tblptrl
  3518  002574  CFDD FFF7          	movff	postdec2,tblptrh
  3519  002578                     	if	0	;tblptru may be non-zero
  3520  002578                     	endif
  3521  002578                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3522  002578  0E00               	movlw	low (__mediumconst shr (0+16))
  3523  00257A  6EF8               	movwf	tblptru,c
  3524  00257C                     	endif
  3525  00257C  0008               	tblrd		*
  3526  00257E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3527  002582                     
  3528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3529  002582  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3530  002586  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3531  00258A  2ADE               	incf	postinc2,f,c
  3532  00258C  0E00               	movlw	0
  3533  00258E  22DD               	addwfc	postdec2,f,c
  3534  002590                     
  3535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3536  002590  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3537  002594  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3538  002598  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3539  00259C  0E04               	movlw	4
  3540  00259E  26DE               	addwf	postinc2,f,c
  3541  0025A0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3542  0025A4  0E00               	movlw	0
  3543  0025A6  22DD               	addwfc	postdec2,f,c
  3544  0025A8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3545  0025AC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3546  0025B0  CFDE F058          	movff	postinc2,vfpfcnvrt@f
  3547  0025B4  CFDE F059          	movff	postinc2,vfpfcnvrt@f+1
  3548  0025B8  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+2
  3549  0025BC  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+3
  3550  0025C0                     l5456:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3553  0025C0  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3554  0025C4  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3555  0025C8  C058  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3556  0025CC  C059  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3557  0025D0  C05A  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3558  0025D4  C05B  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3559  0025D8  C05F  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3560  0025DC  EC2B  F007         	call	_efgtoa	;wreg free
  3561  0025E0  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  3562  0025E4  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3563  0025E8  EF20  F014         	goto	l1541
  3564  0025EC                     l5460:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3567  0025EC  0E5C               	movlw	low vfpfcnvrt@ct
  3568  0025EE  6E01               	movwf	strncmp@_l^0,c
  3569  0025F0  0E00               	movlw	high vfpfcnvrt@ct
  3570  0025F2  6E02               	movwf	(strncmp@_l+1)^0,c
  3571  0025F4  0E51               	movlw	low STR_10
  3572  0025F6  6E03               	movwf	strncmp@_r^0,c
  3573  0025F8  0E0E               	movlw	high STR_10
  3574  0025FA  6E04               	movwf	(strncmp@_r+1)^0,c
  3575  0025FC  0E00               	movlw	0
  3576  0025FE  6E06               	movwf	(strncmp@n+1)^0,c
  3577  002600  0E02               	movlw	2
  3578  002602  6E05               	movwf	strncmp@n^0,c
  3579  002604  ECB6  F025         	call	_strncmp	;wreg free
  3580  002608  5001               	movf	?_strncmp^0,w,c
  3581  00260A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3582  00260C  A4D8               	btfss	status,2,c
  3583  00260E  EF0B  F013         	goto	u6751
  3584  002612  EF0D  F013         	goto	u6750
  3585  002616                     u6751:
  3586  002616  EF8C  F013         	goto	l5476
  3587  00261A                     u6750:
  3588  00261A                     
  3589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3590  00261A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3591  00261E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3592  002622  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3593  002626  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3594  00262A  0E01               	movlw	1
  3595  00262C  2646               	addwf	??_vfpfcnvrt^0,f,c
  3596  00262E  0E00               	movlw	0
  3597  002630  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3598  002632  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3599  002636  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3600  00263A                     	if	0	;tblptru may be non-zero
  3601  00263A                     	endif
  3602  00263A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3603  00263A  0E00               	movlw	low (__mediumconst shr (0+16))
  3604  00263C  6EF8               	movwf	tblptru,c
  3605  00263E                     	endif
  3606  00263E  0008               	tblrd		*
  3607  002640  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3608  002644  0EBF               	movlw	191
  3609  002646  6E46               	movwf	??_vfpfcnvrt^0,c
  3610  002648  0EFF               	movlw	255
  3611  00264A  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3612  00264C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3613  002650  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3614  002654  CFDE FFF6          	movff	postinc2,tblptrl
  3615  002658  CFDD FFF7          	movff	postdec2,tblptrh
  3616  00265C                     	if	0	;tblptru may be non-zero
  3617  00265C                     	endif
  3618  00265C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3619  00265C  0E00               	movlw	low (__mediumconst shr (0+16))
  3620  00265E  6EF8               	movwf	tblptru,c
  3621  002660                     	endif
  3622  002660  0008               	tblrd		*
  3623  002662  50F5               	movf	tablat,w,c
  3624  002664  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3625  002666  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3626  002668  5046               	movf	??_vfpfcnvrt^0,w,c
  3627  00266A  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3628  00266C  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3629  00266E  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3630  002670  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3631  002672  E10A               	bnz	u6760
  3632  002674  0E1A               	movlw	26
  3633  002676  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3634  002678  A0D8               	btfss	status,0,c
  3635  00267A  EF41  F013         	goto	u6761
  3636  00267E  EF44  F013         	goto	u6760
  3637  002682                     u6761:
  3638  002682  0E01               	movlw	1
  3639  002684  EF45  F013         	goto	u6770
  3640  002688                     u6760:
  3641  002688  0E00               	movlw	0
  3642  00268A                     u6770:
  3643  00268A  6E56               	movwf	_vfpfcnvrt$3010^0,c
  3644  00268C  6A57               	clrf	(_vfpfcnvrt$3010+1)^0,c
  3645  00268E  5056               	movf	_vfpfcnvrt$3010^0,w,c
  3646  002690  1057               	iorwf	(_vfpfcnvrt$3010+1)^0,w,c
  3647  002692  B4D8               	btfsc	status,2,c
  3648  002694  EF4E  F013         	goto	u6781
  3649  002698  EF50  F013         	goto	u6780
  3650  00269C                     u6781:
  3651  00269C  EF6A  F013         	goto	l5470
  3652  0026A0                     u6780:
  3653  0026A0                     
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3655  0026A0  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3656  0026A4  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3657  0026A8  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3658  0026AC  0E04               	movlw	4
  3659  0026AE  26DE               	addwf	postinc2,f,c
  3660  0026B0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3661  0026B4  0E00               	movlw	0
  3662  0026B6  22DD               	addwfc	postdec2,f,c
  3663  0026B8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3664  0026BC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3665  0026C0  CFDE F058          	movff	postinc2,vfpfcnvrt@f
  3666  0026C4  CFDE F059          	movff	postinc2,vfpfcnvrt@f+1
  3667  0026C8  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+2
  3668  0026CC  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+3
  3669                           
  3670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3671  0026D0  EF82  F013         	goto	l1549
  3672  0026D4                     l5470:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3675  0026D4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3676  0026D8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3677  0026DC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3678  0026E0  0E04               	movlw	4
  3679  0026E2  26DE               	addwf	postinc2,f,c
  3680  0026E4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3681  0026E8  0E00               	movlw	0
  3682  0026EA  22DD               	addwfc	postdec2,f,c
  3683  0026EC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3684  0026F0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3685  0026F4  CFDE F058          	movff	postinc2,vfpfcnvrt@f
  3686  0026F8  CFDE F059          	movff	postinc2,vfpfcnvrt@f+1
  3687  0026FC  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+2
  3688  002700  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+3
  3689  002704                     l1549:
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3692  002704  0E02               	movlw	2
  3693  002706  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3694  00270A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3695  00270E  26DE               	addwf	postinc2,f,c
  3696  002710  0E00               	movlw	0
  3697  002712  22DD               	addwfc	postdec2,f,c
  3698  002714  EFE0  F012         	goto	l5456
  3699  002718                     l5476:
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  3702  002718  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3703  00271C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3704  002720  CFDE FFF6          	movff	postinc2,tblptrl
  3705  002724  CFDD FFF7          	movff	postdec2,tblptrh
  3706  002728                     	if	0	;tblptru may be non-zero
  3707  002728                     	endif
  3708  002728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3709  002728  0E00               	movlw	low (__mediumconst shr (0+16))
  3710  00272A  6EF8               	movwf	tblptru,c
  3711  00272C                     	endif
  3712  00272C  0008               	tblrd		*
  3713  00272E  50F5               	movf	tablat,w,c
  3714  002730  0A73               	xorlw	115
  3715  002732  A4D8               	btfss	status,2,c
  3716  002734  EF9E  F013         	goto	u6791
  3717  002738  EFA0  F013         	goto	u6790
  3718  00273C                     u6791:
  3719  00273C  EFCB  F013         	goto	l5484
  3720  002740                     u6790:
  3721  002740                     
  3722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  3723  002740  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3724  002744  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3725  002748  2ADE               	incf	postinc2,f,c
  3726  00274A  0E00               	movlw	0
  3727  00274C  22DD               	addwfc	postdec2,f,c
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3730  00274E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3731  002752  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3732  002756  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3733  00275A  0E02               	movlw	2
  3734  00275C  26DE               	addwf	postinc2,f,c
  3735  00275E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3736  002762  0E00               	movlw	0
  3737  002764  22DD               	addwfc	postdec2,f,c
  3738  002766  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3739  00276A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3740  00276E  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  3741  002772  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  3742  002776                     
  3743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  3744  002776  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3745  00277A  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3746  00277E  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3747  002782  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3748  002786  EC53  F021         	call	_stoa	;wreg free
  3749  00278A  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  3750  00278E  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  3751  002792  EF20  F014         	goto	l1541
  3752  002796                     l5484:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3755  002796  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3756  00279A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3757  00279E  CFDE FFF6          	movff	postinc2,tblptrl
  3758  0027A2  CFDD FFF7          	movff	postdec2,tblptrh
  3759  0027A6                     	if	0	;tblptru may be non-zero
  3760  0027A6                     	endif
  3761  0027A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3762  0027A6  0E00               	movlw	low (__mediumconst shr (0+16))
  3763  0027A8  6EF8               	movwf	tblptru,c
  3764  0027AA                     	endif
  3765  0027AA  0008               	tblrd		*
  3766  0027AC  50F5               	movf	tablat,w,c
  3767  0027AE  0A25               	xorlw	37
  3768  0027B0  A4D8               	btfss	status,2,c
  3769  0027B2  EFDD  F013         	goto	u6801
  3770  0027B6  EFDF  F013         	goto	u6800
  3771  0027BA                     u6801:
  3772  0027BA  EFF6  F013         	goto	l5494
  3773  0027BE                     u6800:
  3774  0027BE                     
  3775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3776  0027BE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3777  0027C2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  0027C6  2ADE               	incf	postinc2,f,c
  3779  0027C8  0E00               	movlw	0
  3780  0027CA  22DD               	addwfc	postdec2,f,c
  3781  0027CC                     
  3782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3783  0027CC  0E00               	movlw	0
  3784  0027CE  6E02               	movwf	(fputc@c+1)^0,c
  3785  0027D0  0E25               	movlw	37
  3786  0027D2  6E01               	movwf	fputc@c^0,c
  3787  0027D4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3788  0027D8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3789  0027DC  EC27  F026         	call	_fputc	;wreg free
  3790  0027E0                     l5490:
  3791                           
  3792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3793  0027E0  0E00               	movlw	0
  3794  0027E2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3795  0027E4  0E01               	movlw	1
  3796  0027E6  6E40               	movwf	?_vfpfcnvrt^0,c
  3797  0027E8  EF20  F014         	goto	l1541
  3798  0027EC                     l5494:
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3801  0027EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3802  0027F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3803  0027F4  2ADE               	incf	postinc2,f,c
  3804  0027F6  0E00               	movlw	0
  3805  0027F8  22DD               	addwfc	postdec2,f,c
  3806  0027FA                     
  3807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3808  0027FA  0E00               	movlw	0
  3809  0027FC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3810  0027FE  0E00               	movlw	0
  3811  002800  6E40               	movwf	?_vfpfcnvrt^0,c
  3812  002802  EF20  F014         	goto	l1541
  3813  002806                     l5500:
  3814                           
  3815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3816  002806  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3817  00280A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3818  00280E  CFDE FFF6          	movff	postinc2,tblptrl
  3819  002812  CFDD FFF7          	movff	postdec2,tblptrh
  3820  002816                     	if	0	;tblptru may be non-zero
  3821  002816                     	endif
  3822  002816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3823  002816  0E00               	movlw	low (__mediumconst shr (0+16))
  3824  002818  6EF8               	movwf	tblptru,c
  3825  00281A                     	endif
  3826  00281A  0008               	tblrd		*
  3827  00281C  50F5               	movf	tablat,w,c
  3828  00281E  6E01               	movwf	fputc@c^0,c
  3829  002820  6A02               	clrf	(fputc@c+1)^0,c
  3830  002822  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3831  002826  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3832  00282A  EC27  F026         	call	_fputc	;wreg free
  3833  00282E                     
  3834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3835  00282E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3836  002832  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3837  002836  2ADE               	incf	postinc2,f,c
  3838  002838  0E00               	movlw	0
  3839  00283A  22DD               	addwfc	postdec2,f,c
  3840  00283C  EFF0  F013         	goto	l5490
  3841  002840                     l1541:
  3842  002840  0012               	return		;funcret
  3843  002842                     __end_of_vfpfcnvrt:
  3844                           	callstack 0
  3845                           
  3846 ;; *************** function _strncmp *****************
  3847 ;; Defined at:
  3848 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3851 ;;		 -> vfpfcnvrt@ct(3), 
  3852 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3853 ;;		 -> STR_12(3), 
  3854 ;;  n               2    4[COMRAM] unsigned int 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3857 ;;		 -> STR_12(3), 
  3858 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3859 ;;		 -> vfpfcnvrt@ct(3), 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  2    0[COMRAM] int 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3869 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;Total ram usage:       11 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_vfpfcnvrt
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text10
  3883  004B6C                     __ptext10:
  3884                           	callstack 0
  3885  004B6C                     _strncmp:
  3886                           	callstack 26
  3887  004B6C  C001  F008         	movff	strncmp@_l,strncmp@l
  3888  004B70  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3889  004B74  C003  F00A         	movff	strncmp@_r,strncmp@r
  3890  004B78  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3891  004B7C  0605               	decf	strncmp@n^0,f,c
  3892  004B7E  A0D8               	btfss	status,0,c
  3893  004B80  0606               	decf	(strncmp@n+1)^0,f,c
  3894  004B82  2805               	incf	strncmp@n^0,w,c
  3895  004B84  E106               	bnz	u6531
  3896  004B86  2806               	incf	(strncmp@n+1)^0,w,c
  3897  004B88  A4D8               	btfss	status,2,c
  3898  004B8A  EFC9  F025         	goto	u6531
  3899  004B8E  EFCB  F025         	goto	u6530
  3900  004B92                     u6531:
  3901  004B92  EFD8  F025         	goto	l5344
  3902  004B96                     u6530:
  3903  004B96  0E00               	movlw	0
  3904  004B98  6E02               	movwf	(?_strncmp+1)^0,c
  3905  004B9A  0E00               	movlw	0
  3906  004B9C  6E01               	movwf	?_strncmp^0,c
  3907  004B9E  EF26  F026         	goto	l1678
  3908  004BA2                     l5342:
  3909  004BA2  4A08               	infsnz	strncmp@l^0,f,c
  3910  004BA4  2A09               	incf	(strncmp@l+1)^0,f,c
  3911  004BA6  4A0A               	infsnz	strncmp@r^0,f,c
  3912  004BA8  2A0B               	incf	(strncmp@r+1)^0,f,c
  3913  004BAA  0605               	decf	strncmp@n^0,f,c
  3914  004BAC  A0D8               	btfss	status,0,c
  3915  004BAE  0606               	decf	(strncmp@n+1)^0,f,c
  3916  004BB0                     l5344:
  3917  004BB0  C008  FFD9         	movff	strncmp@l,fsr2l
  3918  004BB4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3919  004BB8  50DF               	movf	indf2,w,c
  3920  004BBA  B4D8               	btfsc	status,2,c
  3921  004BBC  EFE2  F025         	goto	u6541
  3922  004BC0  EFE4  F025         	goto	u6540
  3923  004BC4                     u6541:
  3924  004BC4  EF13  F026         	goto	l5352
  3925  004BC8                     u6540:
  3926  004BC8  C00A  FFF6         	movff	strncmp@r,tblptrl
  3927  004BCC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3928  004BD0                     	if	0	;tblptru may be non-zero
  3929  004BD0                     	endif
  3930  004BD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3931  004BD0  0E00               	movlw	low (__mediumconst shr (0+16))
  3932  004BD2  6EF8               	movwf	tblptru,c
  3933  004BD4                     	endif
  3934  004BD4  0008               	tblrd		*
  3935  004BD6  50F5               	movf	tablat,w,c
  3936  004BD8  0900               	iorlw	0
  3937  004BDA  B4D8               	btfsc	status,2,c
  3938  004BDC  EFF2  F025         	goto	u6551
  3939  004BE0  EFF4  F025         	goto	u6550
  3940  004BE4                     u6551:
  3941  004BE4  EF13  F026         	goto	l5352
  3942  004BE8                     u6550:
  3943  004BE8  5005               	movf	strncmp@n^0,w,c
  3944  004BEA  1006               	iorwf	(strncmp@n+1)^0,w,c
  3945  004BEC  B4D8               	btfsc	status,2,c
  3946  004BEE  EFFB  F025         	goto	u6561
  3947  004BF2  EFFD  F025         	goto	u6560
  3948  004BF6                     u6561:
  3949  004BF6  EF13  F026         	goto	l5352
  3950  004BFA                     u6560:
  3951  004BFA  C008  FFD9         	movff	strncmp@l,fsr2l
  3952  004BFE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3953  004C02  50DF               	movf	indf2,w,c
  3954  004C04  6E07               	movwf	??_strncmp^0,c
  3955  004C06  C00A  FFF6         	movff	strncmp@r,tblptrl
  3956  004C0A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3957  004C0E                     	if	0	;tblptru may be non-zero
  3958  004C0E                     	endif
  3959  004C0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3960  004C0E  0E00               	movlw	low (__mediumconst shr (0+16))
  3961  004C10  6EF8               	movwf	tblptru,c
  3962  004C12                     	endif
  3963  004C12  0008               	tblrd		*
  3964  004C14  50F5               	movf	tablat,w,c
  3965  004C16  1807               	xorwf	??_strncmp^0,w,c
  3966  004C18  B4D8               	btfsc	status,2,c
  3967  004C1A  EF11  F026         	goto	u6571
  3968  004C1E  EF13  F026         	goto	u6570
  3969  004C22                     u6571:
  3970  004C22  EFD1  F025         	goto	l5342
  3971  004C26                     u6570:
  3972  004C26                     l5352:
  3973  004C26  C008  FFD9         	movff	strncmp@l,fsr2l
  3974  004C2A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3975  004C2E  50DF               	movf	indf2,w,c
  3976  004C30  6E07               	movwf	??_strncmp^0,c
  3977  004C32  C00A  FFF6         	movff	strncmp@r,tblptrl
  3978  004C36  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3979  004C3A                     	if	0	;tblptru may be non-zero
  3980  004C3A                     	endif
  3981  004C3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3982  004C3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3983  004C3C  6EF8               	movwf	tblptru,c
  3984  004C3E                     	endif
  3985  004C3E  0008               	tblrd		*
  3986  004C40  50F5               	movf	tablat,w,c
  3987  004C42  5C07               	subwf	??_strncmp^0,w,c
  3988  004C44  6E01               	movwf	?_strncmp^0,c
  3989  004C46  6A02               	clrf	(?_strncmp+1)^0,c
  3990  004C48  A0D8               	btfss	status,0,c
  3991  004C4A  0602               	decf	(?_strncmp+1)^0,f,c
  3992  004C4C                     l1678:
  3993  004C4C  0012               	return		;funcret
  3994  004C4E                     __end_of_strncmp:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _stoa *****************
  3998 ;; Defined at:
  3999 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4002 ;;		 -> sprintf@f(6), 
  4003 ;;  s               2   11[COMRAM] PTR unsigned char 
  4004 ;;		 -> ?_sprintf(2), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  nuls            7   14[COMRAM] unsigned char [7]
  4007 ;;  l               2   29[COMRAM] int 
  4008 ;;  p               2   27[COMRAM] int 
  4009 ;;  cp              2   25[COMRAM] PTR unsigned char 
  4010 ;;		 -> stoa@nuls(7), ?_sprintf(2), 
  4011 ;;  w               2   23[COMRAM] int 
  4012 ;;  i               2   21[COMRAM] int 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2    9[COMRAM] int 
  4015 ;; Registers used:
  4016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;Total ram usage:       22 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 2
  4029 ;; This function calls:
  4030 ;;		_fputc
  4031 ;;		_strlen
  4032 ;; This function is called by:
  4033 ;;		_vfpfcnvrt
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text11
  4038  0042A6                     __ptext11:
  4039                           	callstack 0
  4040  0042A6                     _stoa:
  4041                           	callstack 24
  4042  0042A6                     
  4043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  4044  0042A6  EE21  F0C4         	lfsr	2,stoa@F1163
  4045  0042AA  EE10  F00F         	lfsr	1,stoa@nuls
  4046  0042AE  0E06               	movlw	6
  4047  0042B0                     u6371:
  4048  0042B0  CFDB FFE3          	movff	plusw2,plusw1
  4049  0042B4  06E8               	decf	wreg,f,c
  4050  0042B6  E2FC               	bc	u6371
  4051  0042B8                     
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  4053  0042B8  C00C  F01A         	movff	stoa@s,stoa@cp
  4054  0042BC  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  4055  0042C0                     
  4056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  4057  0042C0  501A               	movf	stoa@cp^0,w,c
  4058  0042C2  101B               	iorwf	(stoa@cp+1)^0,w,c
  4059  0042C4  A4D8               	btfss	status,2,c
  4060  0042C6  EF67  F021         	goto	u6381
  4061  0042CA  EF69  F021         	goto	u6380
  4062  0042CE                     u6381:
  4063  0042CE  EF6D  F021         	goto	l5260
  4064  0042D2                     u6380:
  4065  0042D2                     
  4066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  4067  0042D2  0E0F               	movlw	low stoa@nuls
  4068  0042D4  6E1A               	movwf	stoa@cp^0,c
  4069  0042D6  0E00               	movlw	high stoa@nuls
  4070  0042D8  6E1B               	movwf	(stoa@cp+1)^0,c
  4071  0042DA                     l5260:
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  4074  0042DA  C01A  F001         	movff	stoa@cp,strlen@s
  4075  0042DE  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  4076  0042E2  EC49  F02C         	call	_strlen	;wreg free
  4077  0042E6  C001  F01E         	movff	?_strlen,stoa@l
  4078  0042EA  C002  F01F         	movff	?_strlen+1,stoa@l+1
  4079  0042EE                     
  4080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  4081  0042EE  C0EE  F01C         	movff	_prec,stoa@p
  4082  0042F2  C0EF  F01D         	movff	_prec+1,stoa@p+1
  4083  0042F6                     
  4084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  4085  0042F6  BE1D               	btfsc	(stoa@p+1)^0,7,c
  4086  0042F8  EF80  F021         	goto	u6391
  4087  0042FC  EF82  F021         	goto	u6390
  4088  004300                     u6391:
  4089  004300  EF97  F021         	goto	l1508
  4090  004304                     u6390:
  4091  004304  501E               	movf	stoa@l^0,w,c
  4092  004306  5C1C               	subwf	stoa@p^0,w,c
  4093  004308  501D               	movf	(stoa@p+1)^0,w,c
  4094  00430A  0A80               	xorlw	128
  4095  00430C  6E0E               	movwf	??_stoa^0,c
  4096  00430E  501F               	movf	(stoa@l+1)^0,w,c
  4097  004310  0A80               	xorlw	128
  4098  004312  580E               	subwfb	??_stoa^0,w,c
  4099  004314  A0D8               	btfss	status,0,c
  4100  004316  EF8F  F021         	goto	u6401
  4101  00431A  EF91  F021         	goto	u6400
  4102  00431E                     u6401:
  4103  00431E  EF93  F021         	goto	l1506
  4104  004322                     u6400:
  4105  004322  EF97  F021         	goto	l1508
  4106  004326                     l1506:
  4107  004326  C01C  F01E         	movff	stoa@p,stoa@l
  4108  00432A  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  4109  00432E                     l1508:
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  4112  00432E  C01E  F01C         	movff	stoa@l,stoa@p
  4113  004332  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  4116  004336  C0EC  F018         	movff	_width,stoa@w
  4117  00433A  C0ED  F019         	movff	_width+1,stoa@w+1
  4118                           
  4119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  4120  00433E  0100               	movlb	0	; () banked
  4121  004340  B1F0               	btfsc	_flags& (0+255),0,b
  4122  004342  EFA5  F021         	goto	u6411
  4123  004346  EFA7  F021         	goto	u6410
  4124  00434A                     u6411:
  4125  00434A  EFC4  F021         	goto	l5276
  4126  00434E                     u6410:
  4127  00434E  EFB5  F021         	goto	l5274
  4128  004352                     l5270:
  4129                           
  4130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  4131  004352  0E00               	movlw	0
  4132  004354  6E02               	movwf	(fputc@c+1)^0,c
  4133  004356  0E20               	movlw	32
  4134  004358  6E01               	movwf	fputc@c^0,c
  4135  00435A  C00A  F003         	movff	stoa@fp,fputc@fp
  4136  00435E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4137  004362  EC27  F026         	call	_fputc	;wreg free
  4138  004366                     
  4139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  4140  004366  4A1E               	infsnz	stoa@l^0,f,c
  4141  004368  2A1F               	incf	(stoa@l+1)^0,f,c
  4142  00436A                     l5274:
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  4145  00436A  5018               	movf	stoa@w^0,w,c
  4146  00436C  5C1E               	subwf	stoa@l^0,w,c
  4147  00436E  501F               	movf	(stoa@l+1)^0,w,c
  4148  004370  0A80               	xorlw	128
  4149  004372  6E0E               	movwf	??_stoa^0,c
  4150  004374  5019               	movf	(stoa@w+1)^0,w,c
  4151  004376  0A80               	xorlw	128
  4152  004378  580E               	subwfb	??_stoa^0,w,c
  4153  00437A  A0D8               	btfss	status,0,c
  4154  00437C  EFC2  F021         	goto	u6421
  4155  004380  EFC4  F021         	goto	u6420
  4156  004384                     u6421:
  4157  004384  EFA9  F021         	goto	l5270
  4158  004388                     u6420:
  4159  004388                     l5276:
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  4162  004388  0E00               	movlw	0
  4163  00438A  6E17               	movwf	(stoa@i+1)^0,c
  4164  00438C  0E00               	movlw	0
  4165  00438E  6E16               	movwf	stoa@i^0,c
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4168  004390  EFDD  F021         	goto	l5284
  4169  004394                     l5278:
  4170                           
  4171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  4172  004394  C01A  FFD9         	movff	stoa@cp,fsr2l
  4173  004398  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  4174  00439C  50DF               	movf	indf2,w,c
  4175  00439E  6E0E               	movwf	??_stoa^0,c
  4176  0043A0  500E               	movf	??_stoa^0,w,c
  4177  0043A2  6E01               	movwf	fputc@c^0,c
  4178  0043A4  6A02               	clrf	(fputc@c+1)^0,c
  4179  0043A6  C00A  F003         	movff	stoa@fp,fputc@fp
  4180  0043AA  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4181  0043AE  EC27  F026         	call	_fputc	;wreg free
  4182  0043B2                     
  4183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  4184  0043B2  4A1A               	infsnz	stoa@cp^0,f,c
  4185  0043B4  2A1B               	incf	(stoa@cp+1)^0,f,c
  4186  0043B6                     
  4187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  4188  0043B6  4A16               	infsnz	stoa@i^0,f,c
  4189  0043B8  2A17               	incf	(stoa@i+1)^0,f,c
  4190  0043BA                     l5284:
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4193  0043BA  501C               	movf	stoa@p^0,w,c
  4194  0043BC  5C16               	subwf	stoa@i^0,w,c
  4195  0043BE  5017               	movf	(stoa@i+1)^0,w,c
  4196  0043C0  0A80               	xorlw	128
  4197  0043C2  6E0E               	movwf	??_stoa^0,c
  4198  0043C4  501D               	movf	(stoa@p+1)^0,w,c
  4199  0043C6  0A80               	xorlw	128
  4200  0043C8  580E               	subwfb	??_stoa^0,w,c
  4201  0043CA  A0D8               	btfss	status,0,c
  4202  0043CC  EFEA  F021         	goto	u6431
  4203  0043D0  EFEC  F021         	goto	u6430
  4204  0043D4                     u6431:
  4205  0043D4  EFCA  F021         	goto	l5278
  4206  0043D8                     u6430:
  4207  0043D8                     
  4208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  4209  0043D8  0100               	movlb	0	; () banked
  4210  0043DA  A1F0               	btfss	_flags& (0+255),0,b
  4211  0043DC  EFF2  F021         	goto	u6441
  4212  0043E0  EFF4  F021         	goto	u6440
  4213  0043E4                     u6441:
  4214  0043E4  EF11  F022         	goto	l1518
  4215  0043E8                     u6440:
  4216  0043E8  EF02  F022         	goto	l5292
  4217  0043EC                     l5288:
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  4220  0043EC  0E00               	movlw	0
  4221  0043EE  6E02               	movwf	(fputc@c+1)^0,c
  4222  0043F0  0E20               	movlw	32
  4223  0043F2  6E01               	movwf	fputc@c^0,c
  4224  0043F4  C00A  F003         	movff	stoa@fp,fputc@fp
  4225  0043F8  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4226  0043FC  EC27  F026         	call	_fputc	;wreg free
  4227  004400                     
  4228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  4229  004400  4A1E               	infsnz	stoa@l^0,f,c
  4230  004402  2A1F               	incf	(stoa@l+1)^0,f,c
  4231  004404                     l5292:
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  4234  004404  5018               	movf	stoa@w^0,w,c
  4235  004406  5C1E               	subwf	stoa@l^0,w,c
  4236  004408  501F               	movf	(stoa@l+1)^0,w,c
  4237  00440A  0A80               	xorlw	128
  4238  00440C  6E0E               	movwf	??_stoa^0,c
  4239  00440E  5019               	movf	(stoa@w+1)^0,w,c
  4240  004410  0A80               	xorlw	128
  4241  004412  580E               	subwfb	??_stoa^0,w,c
  4242  004414  A0D8               	btfss	status,0,c
  4243  004416  EF0F  F022         	goto	u6451
  4244  00441A  EF11  F022         	goto	u6450
  4245  00441E                     u6451:
  4246  00441E  EFF6  F021         	goto	l5288
  4247  004422                     u6450:
  4248  004422                     l1518:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  4251  004422  C01E  F00A         	movff	stoa@l,?_stoa
  4252  004426  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  4253  00442A  0012               	return		;funcret
  4254  00442C                     __end_of_stoa:
  4255                           	callstack 0
  4256                           
  4257 ;; *************** function _efgtoa *****************
  4258 ;; Defined at:
  4259 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  4262 ;;		 -> sprintf@f(6), 
  4263 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  4264 ;;  c               1   51[COMRAM] unsigned char 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  u               4   52[BANK0 ] unsigned char 
  4267 ;;  g               4   44[BANK0 ] unsigned char 
  4268 ;;  l               4   38[BANK0 ] unsigned char 
  4269 ;;  h               4   34[BANK0 ] unsigned char 
  4270 ;;  ou              4   20[BANK0 ] unsigned char 
  4271 ;;  n               2   50[BANK0 ] int 
  4272 ;;  e               2   48[BANK0 ] int 
  4273 ;;  i               2   42[BANK0 ] int 
  4274 ;;  w               2   30[BANK0 ] int 
  4275 ;;  p               2   28[BANK0 ] int 
  4276 ;;  sign            2   26[BANK0 ] int 
  4277 ;;  d               2   24[BANK0 ] int 
  4278 ;;  m               2   18[BANK0 ] int 
  4279 ;;  ne              2   16[BANK0 ] int 
  4280 ;;  pp              2   14[BANK0 ] int 
  4281 ;;  t               2   12[BANK0 ] int 
  4282 ;;  mode            1   33[BANK0 ] unsigned char 
  4283 ;;  nmode           1   32[BANK0 ] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  2   45[COMRAM] int 
  4286 ;; Registers used:
  4287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4293 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4296 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4297 ;;Total ram usage:       68 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; Hardware stack levels required when called: 4
  4300 ;; This function calls:
  4301 ;;		___awdiv
  4302 ;;		___awmod
  4303 ;;		___fladd
  4304 ;;		___fldiv
  4305 ;;		___fleq
  4306 ;;		___flge
  4307 ;;		___flmul
  4308 ;;		___flneg
  4309 ;;		___flsub
  4310 ;;		___fltol
  4311 ;;		___fpclassifyf
  4312 ;;		_floorf
  4313 ;;		_isupper
  4314 ;;		_pad
  4315 ;;		_strcpy
  4316 ;;		_tolower
  4317 ;; This function is called by:
  4318 ;;		_vfpfcnvrt
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text12
  4323  000E56                     __ptext12:
  4324                           	callstack 0
  4325  000E56                     _efgtoa:
  4326                           	callstack 22
  4327  000E56                     
  4328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4329  000E56  0E00               	movlw	0
  4330  000E58  0100               	movlb	0	; () banked
  4331  000E5A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4332  000E5C  0E00               	movlw	0
  4333  000E5E  6F7A               	movwf	efgtoa@sign& (0+255),b
  4334  000E60                     
  4335                           ; BSR set to: 0
  4336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4337  000E60  C030  F08C         	movff	efgtoa@f,efgtoa@g
  4338  000E64  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4339  000E68  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4340  000E6C  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4341  000E70                     
  4342                           ; BSR set to: 0
  4343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4344  000E70  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4345  000E72  EF3F  F007         	goto	u5830
  4346  000E76  EF3D  F007         	goto	u5831
  4347  000E7A                     u5831:
  4348  000E7A  EF55  F007         	goto	l4954
  4349  000E7E                     u5830:
  4350  000E7E                     
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4353  000E7E  0E00               	movlw	0
  4354  000E80  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4355  000E82  0E01               	movlw	1
  4356  000E84  6F7A               	movwf	efgtoa@sign& (0+255),b
  4357  000E86                     
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4360  000E86  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4361  000E8A  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4362  000E8E  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4363  000E92  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4364  000E96  ECF5  F02B         	call	___flneg	;wreg free
  4365  000E9A  C001  F08C         	movff	?___flneg,efgtoa@g
  4366  000E9E  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4367  000EA2  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4368  000EA6  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4369  000EAA                     l4954:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4372  000EAA  0E00               	movlw	0
  4373  000EAC  0100               	movlb	0	; () banked
  4374  000EAE  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4375  000EB0  0E00               	movlw	0
  4376  000EB2  6F92               	movwf	efgtoa@n& (0+255),b
  4377  000EB4                     
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4380  000EB4  C0EC  F07E         	movff	_width,efgtoa@w
  4381  000EB8  C0ED  F07F         	movff	_width+1,efgtoa@w+1
  4382  000EBC                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4385  000EBC  517A               	movf	efgtoa@sign& (0+255),w,b
  4386  000EBE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4387  000EC0  A4D8               	btfss	status,2,c
  4388  000EC2  EF65  F007         	goto	u5841
  4389  000EC6  EF67  F007         	goto	u5840
  4390  000ECA                     u5841:
  4391  000ECA  EF6E  F007         	goto	l4962
  4392  000ECE                     u5840:
  4393  000ECE                     
  4394                           ; BSR set to: 0
  4395  000ECE  A5F0               	btfss	_flags& (0+255),2,b
  4396  000ED0  EF6C  F007         	goto	u5851
  4397  000ED4  EF6E  F007         	goto	u5850
  4398  000ED8                     u5851:
  4399  000ED8  EF88  F007         	goto	l4974
  4400  000EDC                     u5850:
  4401  000EDC                     l4962:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4405  000EDC  517A               	movf	efgtoa@sign& (0+255),w,b
  4406  000EDE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4407  000EE0  A4D8               	btfss	status,2,c
  4408  000EE2  EF75  F007         	goto	u5861
  4409  000EE6  EF77  F007         	goto	u5860
  4410  000EEA                     u5861:
  4411  000EEA  EF7D  F007         	goto	l4966
  4412  000EEE                     u5860:
  4413  000EEE                     
  4414                           ; BSR set to: 0
  4415  000EEE  0E00               	movlw	0
  4416  000EF0  6F61               	movwf	(_efgtoa$2969+1)& (0+255),b
  4417  000EF2  0E2B               	movlw	43
  4418  000EF4  6F60               	movwf	_efgtoa$2969& (0+255),b
  4419  000EF6  EF81  F007         	goto	l4968
  4420  000EFA                     l4966:
  4421                           
  4422                           ; BSR set to: 0
  4423  000EFA  0E00               	movlw	0
  4424  000EFC  6F61               	movwf	(_efgtoa$2969+1)& (0+255),b
  4425  000EFE  0E2D               	movlw	45
  4426  000F00  6F60               	movwf	_efgtoa$2969& (0+255),b
  4427  000F02                     l4968:
  4428                           
  4429                           ; BSR set to: 0
  4430  000F02  C060  F250         	movff	_efgtoa$2969,_dbuf
  4431  000F06                     
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4434  000F06  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4435  000F08  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4436  000F0A                     
  4437                           ; BSR set to: 0
  4438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4439  000F0A  077E               	decf	efgtoa@w& (0+255),f,b
  4440  000F0C  A0D8               	btfss	status,0,c
  4441  000F0E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4442  000F10                     l4974:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4446  000F10  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4447  000F14  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4448  000F18  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4449  000F1C  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4450  000F20  ECCD  F023         	call	___fpclassifyf	;wreg free
  4451  000F24  0401               	decf	?___fpclassifyf^0,w,c
  4452  000F26  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4453  000F28  A4D8               	btfss	status,2,c
  4454  000F2A  EF99  F007         	goto	u5871
  4455  000F2E  EF9B  F007         	goto	u5870
  4456  000F32                     u5871:
  4457  000F32  EFF2  F007         	goto	l4992
  4458  000F36                     u5870:
  4459  000F36  0EBF               	movlw	191
  4460  000F38  6E35               	movwf	??_efgtoa^0,c
  4461  000F3A  0EFF               	movlw	255
  4462  000F3C  6E36               	movwf	(??_efgtoa+1)^0,c
  4463  000F3E  5034               	movf	efgtoa@c^0,w,c
  4464  000F40  6E37               	movwf	(??_efgtoa+2)^0,c
  4465  000F42  6A38               	clrf	(??_efgtoa+3)^0,c
  4466  000F44  5035               	movf	??_efgtoa^0,w,c
  4467  000F46  2637               	addwf	(??_efgtoa+2)^0,f,c
  4468  000F48  5036               	movf	(??_efgtoa+1)^0,w,c
  4469  000F4A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4470  000F4C  5038               	movf	(??_efgtoa+3)^0,w,c
  4471  000F4E  E10A               	bnz	u5880
  4472  000F50  0E1A               	movlw	26
  4473  000F52  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4474  000F54  A0D8               	btfss	status,0,c
  4475  000F56  EFAF  F007         	goto	u5881
  4476  000F5A  EFB2  F007         	goto	u5880
  4477  000F5E                     u5881:
  4478  000F5E  0E01               	movlw	1
  4479  000F60  EFB3  F007         	goto	u5890
  4480  000F64                     u5880:
  4481  000F64  0E00               	movlw	0
  4482  000F66                     u5890:
  4483  000F66  0100               	movlb	0	; () banked
  4484  000F68  6F62               	movwf	_efgtoa$2970& (0+255),b
  4485  000F6A  6B63               	clrf	(_efgtoa$2970+1)& (0+255),b
  4486  000F6C                     
  4487                           ; BSR set to: 0
  4488  000F6C  5162               	movf	_efgtoa$2970& (0+255),w,b
  4489  000F6E  1163               	iorwf	(_efgtoa$2970+1)& (0+255),w,b
  4490  000F70  B4D8               	btfsc	status,2,c
  4491  000F72  EFBD  F007         	goto	u5901
  4492  000F76  EFBF  F007         	goto	u5900
  4493  000F7A                     u5901:
  4494  000F7A  EFCD  F007         	goto	l4984
  4495  000F7E                     u5900:
  4496  000F7E                     
  4497                           ; BSR set to: 0
  4498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4499  000F7E  0E50               	movlw	low _dbuf
  4500  000F80  2592               	addwf	efgtoa@n& (0+255),w,b
  4501  000F82  6E01               	movwf	strcpy@dest^0,c
  4502  000F84  0E02               	movlw	high _dbuf
  4503  000F86  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4504  000F88  6E02               	movwf	(strcpy@dest+1)^0,c
  4505  000F8A  0E41               	movlw	low STR_2
  4506  000F8C  6E03               	movwf	strcpy@src^0,c
  4507  000F8E  0E0E               	movlw	high STR_2
  4508  000F90  6E04               	movwf	(strcpy@src+1)^0,c
  4509  000F92  EC6F  F029         	call	_strcpy	;wreg free
  4510                           
  4511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4512  000F96  EFD9  F007         	goto	l4986
  4513  000F9A                     l4984:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4517  000F9A  0E50               	movlw	low _dbuf
  4518  000F9C  2592               	addwf	efgtoa@n& (0+255),w,b
  4519  000F9E  6E01               	movwf	strcpy@dest^0,c
  4520  000FA0  0E02               	movlw	high _dbuf
  4521  000FA2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4522  000FA4  6E02               	movwf	(strcpy@dest+1)^0,c
  4523  000FA6  0E49               	movlw	low STR_3
  4524  000FA8  6E03               	movwf	strcpy@src^0,c
  4525  000FAA  0E0E               	movlw	high STR_3
  4526  000FAC  6E04               	movwf	(strcpy@src+1)^0,c
  4527  000FAE  EC6F  F029         	call	_strcpy	;wreg free
  4528  000FB2                     l4986:
  4529                           
  4530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4531  000FB2  0100               	movlb	0	; () banked
  4532  000FB4  0EFD               	movlw	253
  4533  000FB6  277E               	addwf	efgtoa@w& (0+255),f,b
  4534  000FB8  0EFF               	movlw	255
  4535  000FBA  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4536  000FBC                     l4988:
  4537                           
  4538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4539  000FBC  C02E  F011         	movff	efgtoa@fp,pad@fp
  4540  000FC0  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4541  000FC4  0E50               	movlw	low _dbuf
  4542  000FC6  6E13               	movwf	pad@buf^0,c
  4543  000FC8  0E02               	movlw	high _dbuf
  4544  000FCA  6E14               	movwf	(pad@buf+1)^0,c
  4545  000FCC  C07E  F015         	movff	efgtoa@w,pad@p
  4546  000FD0  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  4547  000FD4  EC8C  F026         	call	_pad	;wreg free
  4548  000FD8  C011  F02E         	movff	?_pad,?_efgtoa
  4549  000FDC  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4550  000FE0  EF56  F00D         	goto	l1424
  4551  000FE4                     l4992:
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4554  000FE4  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4555  000FE8  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4556  000FEC  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4557  000FF0  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4558  000FF4  ECCD  F023         	call	___fpclassifyf	;wreg free
  4559  000FF8  5001               	movf	?___fpclassifyf^0,w,c
  4560  000FFA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4561  000FFC  A4D8               	btfss	status,2,c
  4562  000FFE  EF03  F008         	goto	u5911
  4563  001002  EF05  F008         	goto	u5910
  4564  001006                     u5911:
  4565  001006  EF45  F008         	goto	l5010
  4566  00100A                     u5910:
  4567  00100A  0EBF               	movlw	191
  4568  00100C  6E35               	movwf	??_efgtoa^0,c
  4569  00100E  0EFF               	movlw	255
  4570  001010  6E36               	movwf	(??_efgtoa+1)^0,c
  4571  001012  5034               	movf	efgtoa@c^0,w,c
  4572  001014  6E37               	movwf	(??_efgtoa+2)^0,c
  4573  001016  6A38               	clrf	(??_efgtoa+3)^0,c
  4574  001018  5035               	movf	??_efgtoa^0,w,c
  4575  00101A  2637               	addwf	(??_efgtoa+2)^0,f,c
  4576  00101C  5036               	movf	(??_efgtoa+1)^0,w,c
  4577  00101E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4578  001020  5038               	movf	(??_efgtoa+3)^0,w,c
  4579  001022  E10A               	bnz	u5920
  4580  001024  0E1A               	movlw	26
  4581  001026  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4582  001028  A0D8               	btfss	status,0,c
  4583  00102A  EF19  F008         	goto	u5921
  4584  00102E  EF1C  F008         	goto	u5920
  4585  001032                     u5921:
  4586  001032  0E01               	movlw	1
  4587  001034  EF1D  F008         	goto	u5930
  4588  001038                     u5920:
  4589  001038  0E00               	movlw	0
  4590  00103A                     u5930:
  4591  00103A  0100               	movlb	0	; () banked
  4592  00103C  6F64               	movwf	_efgtoa$2974& (0+255),b
  4593  00103E  6B65               	clrf	(_efgtoa$2974+1)& (0+255),b
  4594  001040                     
  4595                           ; BSR set to: 0
  4596  001040  5164               	movf	_efgtoa$2974& (0+255),w,b
  4597  001042  1165               	iorwf	(_efgtoa$2974+1)& (0+255),w,b
  4598  001044  B4D8               	btfsc	status,2,c
  4599  001046  EF27  F008         	goto	u5941
  4600  00104A  EF29  F008         	goto	u5940
  4601  00104E                     u5941:
  4602  00104E  EF37  F008         	goto	l5002
  4603  001052                     u5940:
  4604  001052                     
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4607  001052  0E50               	movlw	low _dbuf
  4608  001054  2592               	addwf	efgtoa@n& (0+255),w,b
  4609  001056  6E01               	movwf	strcpy@dest^0,c
  4610  001058  0E02               	movlw	high _dbuf
  4611  00105A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4612  00105C  6E02               	movwf	(strcpy@dest+1)^0,c
  4613  00105E  0E45               	movlw	low STR_6
  4614  001060  6E03               	movwf	strcpy@src^0,c
  4615  001062  0E0E               	movlw	high STR_6
  4616  001064  6E04               	movwf	(strcpy@src+1)^0,c
  4617  001066  EC6F  F029         	call	_strcpy	;wreg free
  4618                           
  4619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4620  00106A  EFD9  F007         	goto	l4986
  4621  00106E                     l5002:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4625  00106E  0E50               	movlw	low _dbuf
  4626  001070  2592               	addwf	efgtoa@n& (0+255),w,b
  4627  001072  6E01               	movwf	strcpy@dest^0,c
  4628  001074  0E02               	movlw	high _dbuf
  4629  001076  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4630  001078  6E02               	movwf	(strcpy@dest+1)^0,c
  4631  00107A  0E4D               	movlw	low STR_7
  4632  00107C  6E03               	movwf	strcpy@src^0,c
  4633  00107E  0E0E               	movlw	high STR_7
  4634  001080  6E04               	movwf	(strcpy@src+1)^0,c
  4635  001082  EC6F  F029         	call	_strcpy	;wreg free
  4636  001086  EFD9  F007         	goto	l4986
  4637  00108A                     l5010:
  4638                           
  4639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4640  00108A  0E00               	movlw	0
  4641  00108C  0100               	movlb	0	; () banked
  4642  00108E  6F94               	movwf	efgtoa@u& (0+255),b
  4643  001090  0E00               	movlw	0
  4644  001092  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4645  001094  0E80               	movlw	128
  4646  001096  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4647  001098  0E3F               	movlw	63
  4648  00109A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4649                           
  4650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4651  00109C  0E00               	movlw	0
  4652  00109E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4653  0010A0  0E00               	movlw	0
  4654  0010A2  6F90               	movwf	efgtoa@e& (0+255),b
  4655  0010A4                     
  4656                           ; BSR set to: 0
  4657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4658  0010A4  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4659  0010A8  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4660  0010AC  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4661  0010B0  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4662  0010B4  0E00               	movlw	0
  4663  0010B6  6E05               	movwf	___fleq@ff2^0,c
  4664  0010B8  0E00               	movlw	0
  4665  0010BA  6E06               	movwf	(___fleq@ff2+1)^0,c
  4666  0010BC  0E00               	movlw	0
  4667  0010BE  6E07               	movwf	(___fleq@ff2+2)^0,c
  4668  0010C0  0E00               	movlw	0
  4669  0010C2  6E08               	movwf	(___fleq@ff2+3)^0,c
  4670  0010C4  ECA9  F027         	call	___fleq	;wreg free
  4671  0010C8  B0D8               	btfsc	status,0,c
  4672  0010CA  EF69  F008         	goto	u5951
  4673  0010CE  EF6B  F008         	goto	u5950
  4674  0010D2                     u5951:
  4675  0010D2  EFEE  F008         	goto	l5028
  4676  0010D6                     u5950:
  4677  0010D6  EF8A  F008         	goto	l5020
  4678  0010DA                     l5016:
  4679                           
  4680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4681  0010DA  C094  F001         	movff	efgtoa@u,___flmul@b
  4682  0010DE  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4683  0010E2  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4684  0010E6  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4685  0010EA  0E00               	movlw	0
  4686  0010EC  6E05               	movwf	___flmul@a^0,c
  4687  0010EE  0E00               	movlw	0
  4688  0010F0  6E06               	movwf	(___flmul@a+1)^0,c
  4689  0010F2  0E20               	movlw	32
  4690  0010F4  6E07               	movwf	(___flmul@a+2)^0,c
  4691  0010F6  0E41               	movlw	65
  4692  0010F8  6E08               	movwf	(___flmul@a+3)^0,c
  4693  0010FA  EC81  F016         	call	___flmul	;wreg free
  4694  0010FE  C001  F094         	movff	?___flmul,efgtoa@u
  4695  001102  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  4696  001106  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  4697  00110A  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  4698  00110E                     
  4699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4700  00110E  0100               	movlb	0	; () banked
  4701  001110  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4702  001112  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4703  001114                     l5020:
  4704                           
  4705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4706  001114  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4707  001118  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4708  00111C  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4709  001120  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4710  001124  0E00               	movlw	0
  4711  001126  6E05               	movwf	___flmul@a^0,c
  4712  001128  0E00               	movlw	0
  4713  00112A  6E06               	movwf	(___flmul@a+1)^0,c
  4714  00112C  0E20               	movlw	32
  4715  00112E  6E07               	movwf	(___flmul@a+2)^0,c
  4716  001130  0E41               	movlw	65
  4717  001132  6E08               	movwf	(___flmul@a+3)^0,c
  4718  001134  C094  F001         	movff	efgtoa@u,___flmul@b
  4719  001138  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4720  00113C  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4721  001140  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4722  001144  EC81  F016         	call	___flmul	;wreg free
  4723  001148  C001  F01E         	movff	?___flmul,___flge@ff2
  4724  00114C  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4725  001150  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4726  001154  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4727  001158  EC4B  F023         	call	___flge	;wreg free
  4728  00115C  B0D8               	btfsc	status,0,c
  4729  00115E  EFB3  F008         	goto	u5961
  4730  001162  EFB5  F008         	goto	u5960
  4731  001166                     u5961:
  4732  001166  EF6D  F008         	goto	l5016
  4733  00116A                     u5960:
  4734  00116A  EFD5  F008         	goto	l5026
  4735  00116E                     l5022:
  4736                           
  4737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4738  00116E  C094  F001         	movff	efgtoa@u,___fldiv@b
  4739  001172  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4740  001176  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4741  00117A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4742  00117E  0E00               	movlw	0
  4743  001180  6E05               	movwf	___fldiv@a^0,c
  4744  001182  0E00               	movlw	0
  4745  001184  6E06               	movwf	(___fldiv@a+1)^0,c
  4746  001186  0E20               	movlw	32
  4747  001188  6E07               	movwf	(___fldiv@a+2)^0,c
  4748  00118A  0E41               	movlw	65
  4749  00118C  6E08               	movwf	(___fldiv@a+3)^0,c
  4750  00118E  EC96  F018         	call	___fldiv	;wreg free
  4751  001192  C001  F094         	movff	?___fldiv,efgtoa@u
  4752  001196  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4753  00119A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4754  00119E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4755  0011A2                     
  4756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4757  0011A2  0100               	movlb	0	; () banked
  4758  0011A4  0790               	decf	efgtoa@e& (0+255),f,b
  4759  0011A6  A0D8               	btfss	status,0,c
  4760  0011A8  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4761  0011AA                     l5026:
  4762                           
  4763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4764  0011AA  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4765  0011AE  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4766  0011B2  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4767  0011B6  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4768  0011BA  C094  F01E         	movff	efgtoa@u,___flge@ff2
  4769  0011BE  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4770  0011C2  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4771  0011C6  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4772  0011CA  EC4B  F023         	call	___flge	;wreg free
  4773  0011CE  A0D8               	btfss	status,0,c
  4774  0011D0  EFEC  F008         	goto	u5971
  4775  0011D4  EFEE  F008         	goto	u5970
  4776  0011D8                     u5971:
  4777  0011D8  EFB7  F008         	goto	l5022
  4778  0011DC                     u5970:
  4779  0011DC                     l5028:
  4780                           
  4781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4782  0011DC  C034  F007         	movff	efgtoa@c,tolower@c
  4783  0011E0  6A08               	clrf	(tolower@c+1)^0,c
  4784  0011E2  EC3F  F029         	call	_tolower	;wreg free
  4785  0011E6  5007               	movf	?_tolower^0,w,c
  4786  0011E8  0100               	movlb	0	; () banked
  4787  0011EA  6F81               	movwf	efgtoa@mode& (0+255),b
  4788  0011EC                     
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4791  0011EC  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  4792  0011F0                     
  4793                           ; BSR set to: 0
  4794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4795  0011F0  0E67               	movlw	103
  4796  0011F2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4797  0011F4  A4D8               	btfss	status,2,c
  4798  0011F6  EFFF  F008         	goto	u5981
  4799  0011FA  EF01  F009         	goto	u5980
  4800  0011FE                     u5981:
  4801  0011FE  EF27  F009         	goto	l5042
  4802  001202                     u5980:
  4803  001202                     
  4804                           ; BSR set to: 0
  4805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4806  001202  51EE               	movf	_prec& (0+255),w,b
  4807  001204  11EF               	iorwf	(_prec+1)& (0+255),w,b
  4808  001206  A4D8               	btfss	status,2,c
  4809  001208  EF08  F009         	goto	u5991
  4810  00120C  EF0A  F009         	goto	u5990
  4811  001210                     u5991:
  4812  001210  EF0E  F009         	goto	l5038
  4813  001214                     u5990:
  4814  001214                     
  4815                           ; BSR set to: 0
  4816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4817  001214  0E00               	movlw	0
  4818  001216  6FEF               	movwf	(_prec+1)& (0+255),b
  4819  001218  0E01               	movlw	1
  4820  00121A  6FEE               	movwf	_prec& (0+255),b
  4821  00121C                     l5038:
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4825  00121C  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  4826  00121E  EF1B  F009         	goto	u6000
  4827  001222  51EF               	movf	(_prec+1)& (0+255),w,b
  4828  001224  E106               	bnz	u6001
  4829  001226  05EE               	decf	_prec& (0+255),w,b
  4830  001228  B0D8               	btfsc	status,0,c
  4831  00122A  EF19  F009         	goto	u6001
  4832  00122E  EF1B  F009         	goto	u6000
  4833  001232                     u6001:
  4834  001232  EF21  F009         	goto	l1442
  4835  001236                     u6000:
  4836  001236                     l5040:
  4837                           
  4838                           ; BSR set to: 0
  4839  001236  0E00               	movlw	0
  4840  001238  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4841  00123A  0E06               	movlw	6
  4842  00123C  6F7C               	movwf	efgtoa@p& (0+255),b
  4843  00123E  EF30  F009         	goto	l5048
  4844  001242                     l1442:
  4845                           
  4846                           ; BSR set to: 0
  4847  001242  C0EE  F07C         	movff	_prec,efgtoa@p
  4848  001246  C0EF  F07D         	movff	_prec+1,efgtoa@p+1
  4849  00124A  EF30  F009         	goto	l5048
  4850  00124E                     l5042:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4854  00124E  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  4855  001250  EF2C  F009         	goto	u6011
  4856  001254  EF2E  F009         	goto	u6010
  4857  001258                     u6011:
  4858  001258  EF1B  F009         	goto	l5040
  4859  00125C                     u6010:
  4860  00125C  EF21  F009         	goto	l1442
  4861  001260                     l5048:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4865  001260  0E67               	movlw	103
  4866  001262  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4867  001264  A4D8               	btfss	status,2,c
  4868  001266  EF37  F009         	goto	u6021
  4869  00126A  EF39  F009         	goto	u6020
  4870  00126E                     u6021:
  4871  00126E  EF68  F009         	goto	l5058
  4872  001272                     u6020:
  4873  001272                     
  4874                           ; BSR set to: 0
  4875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4876  001272  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4877  001274  EF47  F009         	goto	u6030
  4878  001278  0EFC               	movlw	252
  4879  00127A  5D90               	subwf	efgtoa@e& (0+255),w,b
  4880  00127C  0EFF               	movlw	255
  4881  00127E  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4882  001280  A0D8               	btfss	status,0,c
  4883  001282  EF45  F009         	goto	u6031
  4884  001286  EF47  F009         	goto	u6030
  4885  00128A                     u6031:
  4886  00128A  EF66  F009         	goto	l5056
  4887  00128E                     u6030:
  4888  00128E                     
  4889                           ; BSR set to: 0
  4890  00128E  0EFF               	movlw	255
  4891  001290  6E35               	movwf	??_efgtoa^0,c
  4892  001292  0EFF               	movlw	255
  4893  001294  6E36               	movwf	(??_efgtoa+1)^0,c
  4894  001296  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  4895  00129A  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4896  00129E  5035               	movf	??_efgtoa^0,w,c
  4897  0012A0  2637               	addwf	(??_efgtoa+2)^0,f,c
  4898  0012A2  5036               	movf	(??_efgtoa+1)^0,w,c
  4899  0012A4  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4900  0012A6  5190               	movf	efgtoa@e& (0+255),w,b
  4901  0012A8  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4902  0012AA  5038               	movf	(??_efgtoa+3)^0,w,c
  4903  0012AC  0A80               	xorlw	128
  4904  0012AE  6E39               	movwf	(??_efgtoa+4)^0,c
  4905  0012B0  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4906  0012B2  0A80               	xorlw	128
  4907  0012B4  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4908  0012B6  A0D8               	btfss	status,0,c
  4909  0012B8  EF60  F009         	goto	u6041
  4910  0012BC  EF62  F009         	goto	u6040
  4911  0012C0                     u6041:
  4912  0012C0  EF66  F009         	goto	l5056
  4913  0012C4                     u6040:
  4914  0012C4                     
  4915                           ; BSR set to: 0
  4916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4917  0012C4  0E66               	movlw	102
  4918  0012C6  6F80               	movwf	efgtoa@nmode& (0+255),b
  4919                           
  4920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4921  0012C8  EF68  F009         	goto	l5058
  4922  0012CC                     l5056:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4926  0012CC  0E65               	movlw	101
  4927  0012CE  6F80               	movwf	efgtoa@nmode& (0+255),b
  4928  0012D0                     l5058:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4932  0012D0  C07C  F072         	movff	efgtoa@p,efgtoa@m
  4933  0012D4  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  4934  0012D8                     
  4935                           ; BSR set to: 0
  4936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4937  0012D8  0E67               	movlw	103
  4938  0012DA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4939  0012DC  A4D8               	btfss	status,2,c
  4940  0012DE  EF73  F009         	goto	u6051
  4941  0012E2  EF75  F009         	goto	u6050
  4942  0012E6                     u6051:
  4943  0012E6  EF85  F009         	goto	l5066
  4944  0012EA                     u6050:
  4945  0012EA                     
  4946                           ; BSR set to: 0
  4947  0012EA  0E66               	movlw	102
  4948  0012EC  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4949  0012EE  A4D8               	btfss	status,2,c
  4950  0012F0  EF7C  F009         	goto	u6061
  4951  0012F4  EF7E  F009         	goto	u6060
  4952  0012F8                     u6061:
  4953  0012F8  EF87  F009         	goto	l5068
  4954  0012FC                     u6060:
  4955  0012FC                     
  4956                           ; BSR set to: 0
  4957  0012FC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4958  0012FE  EF85  F009         	goto	u6070
  4959  001302  EF83  F009         	goto	u6071
  4960  001306                     u6071:
  4961  001306  EF87  F009         	goto	l5068
  4962  00130A                     u6070:
  4963  00130A                     l5066:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4967  00130A  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4968  00130C  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4969  00130E                     l5068:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4973  00130E  0E66               	movlw	102
  4974  001310  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4975  001312  A4D8               	btfss	status,2,c
  4976  001314  EF8E  F009         	goto	u6081
  4977  001318  EF90  F009         	goto	u6080
  4978  00131C                     u6081:
  4979  00131C  EFB0  F009         	goto	l5078
  4980  001320                     u6080:
  4981  001320                     
  4982                           ; BSR set to: 0
  4983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4984  001320  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4985  001322  EF97  F009         	goto	u6090
  4986  001326  EF95  F009         	goto	u6091
  4987  00132A                     u6091:
  4988  00132A  EFA3  F009         	goto	l5074
  4989  00132E                     u6090:
  4990  00132E                     
  4991                           ; BSR set to: 0
  4992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4993  00132E  0E00               	movlw	0
  4994  001330  6F94               	movwf	efgtoa@u& (0+255),b
  4995  001332  0E00               	movlw	0
  4996  001334  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4997  001336  0E80               	movlw	128
  4998  001338  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4999  00133A  0E3F               	movlw	63
  5000  00133C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5001                           
  5002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5003  00133E  0E00               	movlw	0
  5004  001340  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5005  001342  0E00               	movlw	0
  5006  001344  6F90               	movwf	efgtoa@e& (0+255),b
  5007  001346                     l5074:
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5011  001346  0E67               	movlw	103
  5012  001348  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5013  00134A  B4D8               	btfsc	status,2,c
  5014  00134C  EFAA  F009         	goto	u6101
  5015  001350  EFAC  F009         	goto	u6100
  5016  001354                     u6101:
  5017  001354  EFB0  F009         	goto	l5078
  5018  001358                     u6100:
  5019  001358                     
  5020                           ; BSR set to: 0
  5021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5022  001358  5190               	movf	efgtoa@e& (0+255),w,b
  5023  00135A  2772               	addwf	efgtoa@m& (0+255),f,b
  5024  00135C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5025  00135E  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5026  001360                     l5078:
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5030  001360  0E00               	movlw	0
  5031  001362  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5032  001364  0E00               	movlw	0
  5033  001366  6F8A               	movwf	efgtoa@i& (0+255),b
  5034  001368                     
  5035                           ; BSR set to: 0
  5036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5037  001368  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5038  00136C  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5039  001370  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5040  001374  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5041  001378                     
  5042                           ; BSR set to: 0
  5043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5044  001378  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5045  00137C  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5046  001380  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5047  001384  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5048                           
  5049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5050  001388  EF41  F00A         	goto	l5092
  5051  00138C                     l5084:
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5055  00138C  C082  F001         	movff	efgtoa@h,___fldiv@b
  5056  001390  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5057  001394  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5058  001398  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5059  00139C  C094  F005         	movff	efgtoa@u,___fldiv@a
  5060  0013A0  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5061  0013A4  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5062  0013A8  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5063  0013AC  EC96  F018         	call	___fldiv	;wreg free
  5064  0013B0  C001  F01A         	movff	?___fldiv,floorf@x
  5065  0013B4  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5066  0013B8  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5067  0013BC  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5068  0013C0  ECF0  F01C         	call	_floorf	;wreg free
  5069  0013C4  C01A  F086         	movff	?_floorf,efgtoa@l
  5070  0013C8  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5071  0013CC  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5072  0013D0  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5073                           
  5074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5075  0013D4  C086  F001         	movff	efgtoa@l,___fltol@f1
  5076  0013D8  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5077  0013DC  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5078  0013E0  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5079  0013E4  ECC8  F022         	call	___fltol	;wreg free
  5080  0013E8  C001  F078         	movff	?___fltol,efgtoa@d
  5081  0013EC  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5082  0013F0                     
  5083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5084  0013F0  C082  F01A         	movff	efgtoa@h,___flsub@b
  5085  0013F4  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5086  0013F8  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5087  0013FC  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5088  001400  C094  F005         	movff	efgtoa@u,___flmul@a
  5089  001404  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5090  001408  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5091  00140C  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5092  001410  C086  F001         	movff	efgtoa@l,___flmul@b
  5093  001414  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5094  001418  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5095  00141C  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5096  001420  EC81  F016         	call	___flmul	;wreg free
  5097  001424  C001  F01E         	movff	?___flmul,___flsub@a
  5098  001428  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5099  00142C  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5100  001430  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5101  001434  EC37  F02B         	call	___flsub	;wreg free
  5102  001438  C01A  F082         	movff	?___flsub,efgtoa@h
  5103  00143C  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5104  001440  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5105  001444  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5106  001448                     
  5107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5108  001448  C094  F001         	movff	efgtoa@u,___fldiv@b
  5109  00144C  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5110  001450  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5111  001454  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5112  001458  0E00               	movlw	0
  5113  00145A  6E05               	movwf	___fldiv@a^0,c
  5114  00145C  0E00               	movlw	0
  5115  00145E  6E06               	movwf	(___fldiv@a+1)^0,c
  5116  001460  0E20               	movlw	32
  5117  001462  6E07               	movwf	(___fldiv@a+2)^0,c
  5118  001464  0E41               	movlw	65
  5119  001466  6E08               	movwf	(___fldiv@a+3)^0,c
  5120  001468  EC96  F018         	call	___fldiv	;wreg free
  5121  00146C  C001  F094         	movff	?___fldiv,efgtoa@u
  5122  001470  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5123  001474  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5124  001478  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5125  00147C                     
  5126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5127  00147C  0100               	movlb	0	; () banked
  5128  00147E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5129  001480  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5130  001482                     l5092:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5134  001482  5172               	movf	efgtoa@m& (0+255),w,b
  5135  001484  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5136  001486  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5137  001488  0A80               	xorlw	128
  5138  00148A  6E35               	movwf	??_efgtoa^0,c
  5139  00148C  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5140  00148E  0A80               	xorlw	128
  5141  001490  5835               	subwfb	??_efgtoa^0,w,c
  5142  001492  A0D8               	btfss	status,0,c
  5143  001494  EF4E  F00A         	goto	u6111
  5144  001498  EF50  F00A         	goto	u6110
  5145  00149C                     u6111:
  5146  00149C  EFC6  F009         	goto	l5084
  5147  0014A0                     u6110:
  5148  0014A0                     
  5149                           ; BSR set to: 0
  5150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5151  0014A0  C094  F001         	movff	efgtoa@u,___flmul@b
  5152  0014A4  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5153  0014A8  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5154  0014AC  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5155  0014B0  0E00               	movlw	0
  5156  0014B2  6E05               	movwf	___flmul@a^0,c
  5157  0014B4  0E00               	movlw	0
  5158  0014B6  6E06               	movwf	(___flmul@a+1)^0,c
  5159  0014B8  0EA0               	movlw	160
  5160  0014BA  6E07               	movwf	(___flmul@a+2)^0,c
  5161  0014BC  0E40               	movlw	64
  5162  0014BE  6E08               	movwf	(___flmul@a+3)^0,c
  5163  0014C0  EC81  F016         	call	___flmul	;wreg free
  5164  0014C4  C001  F086         	movff	?___flmul,efgtoa@l
  5165  0014C8  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  5166  0014CC  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  5167  0014D0  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  5168  0014D4                     
  5169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5170  0014D4  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5171  0014D8  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5172  0014DC  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5173  0014E0  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5174  0014E4  C086  F01E         	movff	efgtoa@l,___flge@ff2
  5175  0014E8  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  5176  0014EC  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  5177  0014F0  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  5178  0014F4  EC4B  F023         	call	___flge	;wreg free
  5179  0014F8  B0D8               	btfsc	status,0,c
  5180  0014FA  EF81  F00A         	goto	u6121
  5181  0014FE  EF83  F00A         	goto	u6120
  5182  001502                     u6121:
  5183  001502  EF8E  F00A         	goto	l5100
  5184  001506                     u6120:
  5185  001506                     
  5186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5187  001506  0E00               	movlw	0
  5188  001508  0100               	movlb	0	; () banked
  5189  00150A  6F86               	movwf	efgtoa@l& (0+255),b
  5190  00150C  0E00               	movlw	0
  5191  00150E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5192  001510  0E00               	movlw	0
  5193  001512  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5194  001514  0E00               	movlw	0
  5195  001516  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5198  001518  EFB7  F00A         	goto	l5106
  5199  00151C                     l5100:
  5200                           
  5201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5202  00151C  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5203  001520  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5204  001524  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5205  001528  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5206  00152C  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5207  001530  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5208  001534  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5209  001538  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5210  00153C  ECA9  F027         	call	___fleq	;wreg free
  5211  001540  A0D8               	btfss	status,0,c
  5212  001542  EFA5  F00A         	goto	u6131
  5213  001546  EFA7  F00A         	goto	u6130
  5214  00154A                     u6131:
  5215  00154A  EFB7  F00A         	goto	l5106
  5216  00154E                     u6130:
  5217  00154E  0100               	movlb	0	; () banked
  5218  001550  B178               	btfsc	efgtoa@d& (0+255),0,b
  5219  001552  EFAD  F00A         	goto	u6141
  5220  001556  EFAF  F00A         	goto	u6140
  5221  00155A                     u6141:
  5222  00155A  EFB7  F00A         	goto	l5106
  5223  00155E                     u6140:
  5224  00155E                     
  5225                           ; BSR set to: 0
  5226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5227  00155E  0E00               	movlw	0
  5228  001560  6F86               	movwf	efgtoa@l& (0+255),b
  5229  001562  0E00               	movlw	0
  5230  001564  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5231  001566  0E00               	movlw	0
  5232  001568  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5233  00156A  0E00               	movlw	0
  5234  00156C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5235  00156E                     l5106:
  5236                           
  5237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5238  00156E  C08C  F001         	movff	efgtoa@g,___fladd@b
  5239  001572  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5240  001576  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5241  00157A  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5242  00157E  C086  F005         	movff	efgtoa@l,___fladd@a
  5243  001582  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5244  001586  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5245  00158A  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5246  00158E  EC21  F014         	call	___fladd	;wreg free
  5247  001592  C001  F082         	movff	?___fladd,efgtoa@h
  5248  001596  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5249  00159A  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5250  00159E  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5251  0015A2                     
  5252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5253  0015A2  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5254  0015A6  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5255  0015AA  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5256  0015AE  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5257  0015B2  0E00               	movlw	0
  5258  0015B4  6E05               	movwf	___flmul@a^0,c
  5259  0015B6  0E00               	movlw	0
  5260  0015B8  6E06               	movwf	(___flmul@a+1)^0,c
  5261  0015BA  0E20               	movlw	32
  5262  0015BC  6E07               	movwf	(___flmul@a+2)^0,c
  5263  0015BE  0E41               	movlw	65
  5264  0015C0  6E08               	movwf	(___flmul@a+3)^0,c
  5265  0015C2  C074  F001         	movff	efgtoa@ou,___flmul@b
  5266  0015C6  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5267  0015CA  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5268  0015CE  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5269  0015D2  EC81  F016         	call	___flmul	;wreg free
  5270  0015D6  C001  F01E         	movff	?___flmul,___flge@ff2
  5271  0015DA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5272  0015DE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5273  0015E2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5274  0015E6  EC4B  F023         	call	___flge	;wreg free
  5275  0015EA  A0D8               	btfss	status,0,c
  5276  0015EC  EFFA  F00A         	goto	u6151
  5277  0015F0  EFFC  F00A         	goto	u6150
  5278  0015F4                     u6151:
  5279  0015F4  EF25  F00B         	goto	l5118
  5280  0015F8                     u6150:
  5281  0015F8                     
  5282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5283  0015F8  0100               	movlb	0	; () banked
  5284  0015FA  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5285  0015FC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5286  0015FE                     
  5287                           ; BSR set to: 0
  5288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5289  0015FE  C074  F001         	movff	efgtoa@ou,___flmul@b
  5290  001602  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5291  001606  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5292  00160A  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5293  00160E  0E00               	movlw	0
  5294  001610  6E05               	movwf	___flmul@a^0,c
  5295  001612  0E00               	movlw	0
  5296  001614  6E06               	movwf	(___flmul@a+1)^0,c
  5297  001616  0E20               	movlw	32
  5298  001618  6E07               	movwf	(___flmul@a+2)^0,c
  5299  00161A  0E41               	movlw	65
  5300  00161C  6E08               	movwf	(___flmul@a+3)^0,c
  5301  00161E  EC81  F016         	call	___flmul	;wreg free
  5302  001622  C001  F074         	movff	?___flmul,efgtoa@ou
  5303  001626  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  5304  00162A  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  5305  00162E  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  5306  001632                     
  5307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5308  001632  0E66               	movlw	102
  5309  001634  0100               	movlb	0	; () banked
  5310  001636  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5311  001638  A4D8               	btfss	status,2,c
  5312  00163A  EF21  F00B         	goto	u6161
  5313  00163E  EF23  F00B         	goto	u6160
  5314  001642                     u6161:
  5315  001642  EF25  F00B         	goto	l5118
  5316  001646                     u6160:
  5317  001646                     
  5318                           ; BSR set to: 0
  5319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5320  001646  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5321  001648  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5322  00164A                     l5118:
  5323                           
  5324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5325  00164A  C074  F094         	movff	efgtoa@ou,efgtoa@u
  5326  00164E  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5327  001652  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5328  001656  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5329  00165A                     
  5330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5331  00165A  0E65               	movlw	101
  5332  00165C  0100               	movlb	0	; () banked
  5333  00165E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5334  001660  B4D8               	btfsc	status,2,c
  5335  001662  EF35  F00B         	goto	u6171
  5336  001666  EF37  F00B         	goto	u6170
  5337  00166A                     u6171:
  5338  00166A  EF3D  F00B         	goto	l5124
  5339  00166E                     u6170:
  5340  00166E                     
  5341                           ; BSR set to: 0
  5342  00166E  C090  F070         	movff	efgtoa@e,efgtoa@ne
  5343  001672  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  5344  001676  EF41  F00B         	goto	l1470
  5345  00167A                     l5124:
  5346                           
  5347                           ; BSR set to: 0
  5348  00167A  0E00               	movlw	0
  5349  00167C  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  5350  00167E  0E00               	movlw	0
  5351  001680  6F70               	movwf	efgtoa@ne& (0+255),b
  5352  001682                     l1470:
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5356  001682  0E00               	movlw	0
  5357  001684  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5358  001686  0E00               	movlw	0
  5359  001688  6F6E               	movwf	efgtoa@pp& (0+255),b
  5360                           
  5361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5362  00168A  0E00               	movlw	0
  5363  00168C  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5364  00168E  0E00               	movlw	0
  5365  001690  6F6C               	movwf	efgtoa@t& (0+255),b
  5366                           
  5367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5368  001692  0E00               	movlw	0
  5369  001694  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5370  001696  0E00               	movlw	0
  5371  001698  6F8A               	movwf	efgtoa@i& (0+255),b
  5372                           
  5373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5374  00169A  EF3C  F00C         	goto	l5174
  5375  00169E                     l5126:
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5379  00169E  C082  F001         	movff	efgtoa@h,___fldiv@b
  5380  0016A2  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5381  0016A6  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5382  0016AA  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5383  0016AE  C094  F005         	movff	efgtoa@u,___fldiv@a
  5384  0016B2  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5385  0016B6  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5386  0016BA  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5387  0016BE  EC96  F018         	call	___fldiv	;wreg free
  5388  0016C2  C001  F01A         	movff	?___fldiv,floorf@x
  5389  0016C6  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5390  0016CA  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5391  0016CE  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5392  0016D2  ECF0  F01C         	call	_floorf	;wreg free
  5393  0016D6  C01A  F086         	movff	?_floorf,efgtoa@l
  5394  0016DA  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5395  0016DE  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5396  0016E2  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5397                           
  5398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5399  0016E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  5400  0016EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5401  0016EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5402  0016F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5403  0016F6  ECC8  F022         	call	___fltol	;wreg free
  5404  0016FA  C001  F078         	movff	?___fltol,efgtoa@d
  5405  0016FE  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5406  001702                     
  5407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5408  001702  0100               	movlb	0	; () banked
  5409  001704  B9F0               	btfsc	_flags& (0+255),4,b
  5410  001706  EF87  F00B         	goto	u6181
  5411  00170A  EF89  F00B         	goto	u6180
  5412  00170E                     u6181:
  5413  00170E  EFA6  F00B         	goto	l5138
  5414  001712                     u6180:
  5415  001712                     
  5416                           ; BSR set to: 0
  5417  001712  5178               	movf	efgtoa@d& (0+255),w,b
  5418  001714  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5419  001716  A4D8               	btfss	status,2,c
  5420  001718  EF90  F00B         	goto	u6191
  5421  00171C  EF92  F00B         	goto	u6190
  5422  001720                     u6191:
  5423  001720  EFA6  F00B         	goto	l5138
  5424  001724                     u6190:
  5425  001724                     
  5426                           ; BSR set to: 0
  5427  001724  0E67               	movlw	103
  5428  001726  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5429  001728  A4D8               	btfss	status,2,c
  5430  00172A  EF99  F00B         	goto	u6201
  5431  00172E  EF9B  F00B         	goto	u6200
  5432  001732                     u6201:
  5433  001732  EFA6  F00B         	goto	l5138
  5434  001736                     u6200:
  5435  001736                     
  5436                           ; BSR set to: 0
  5437  001736  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5438  001738  EFA2  F00B         	goto	u6210
  5439  00173C  EFA0  F00B         	goto	u6211
  5440  001740                     u6211:
  5441  001740  EFA6  F00B         	goto	l5138
  5442  001744                     u6210:
  5443  001744                     
  5444                           ; BSR set to: 0
  5445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5446  001744  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  5447  001746  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  5448                           
  5449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5450  001748  EFF0  F00B         	goto	l5166
  5451  00174C                     l5138:
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5455  00174C  516E               	movf	efgtoa@pp& (0+255),w,b
  5456  00174E  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5457  001750  A4D8               	btfss	status,2,c
  5458  001752  EFAD  F00B         	goto	u6221
  5459  001756  EFAF  F00B         	goto	u6220
  5460  00175A                     u6221:
  5461  00175A  EFD9  F00B         	goto	l5158
  5462  00175E                     u6220:
  5463  00175E                     
  5464                           ; BSR set to: 0
  5465  00175E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5466  001760  EFB6  F00B         	goto	u6230
  5467  001764  EFB4  F00B         	goto	u6231
  5468  001768                     u6231:
  5469  001768  EFD9  F00B         	goto	l5158
  5470  00176C                     u6230:
  5471  00176C                     
  5472                           ; BSR set to: 0
  5473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5474  00176C  0E50               	movlw	low _dbuf
  5475  00176E  2592               	addwf	efgtoa@n& (0+255),w,b
  5476  001770  6ED9               	movwf	fsr2l,c
  5477  001772  0E02               	movlw	high _dbuf
  5478  001774  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5479  001776  6EDA               	movwf	fsr2h,c
  5480  001778  0E2E               	movlw	46
  5481  00177A  6EDF               	movwf	indf2,c
  5482  00177C                     
  5483                           ; BSR set to: 0
  5484  00177C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5485  00177E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5486  001780                     
  5487                           ; BSR set to: 0
  5488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5489  001780  077E               	decf	efgtoa@w& (0+255),f,b
  5490  001782  A0D8               	btfss	status,0,c
  5491  001784  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5492  001786                     
  5493                           ; BSR set to: 0
  5494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5495  001786  0E00               	movlw	0
  5496  001788  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5497  00178A  0E01               	movlw	1
  5498  00178C  6F6E               	movwf	efgtoa@pp& (0+255),b
  5499  00178E  EFD9  F00B         	goto	l5158
  5500  001792                     l5150:
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5504  001792  0E50               	movlw	low _dbuf
  5505  001794  2592               	addwf	efgtoa@n& (0+255),w,b
  5506  001796  6ED9               	movwf	fsr2l,c
  5507  001798  0E02               	movlw	high _dbuf
  5508  00179A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5509  00179C  6EDA               	movwf	fsr2h,c
  5510  00179E  0E30               	movlw	48
  5511  0017A0  6EDF               	movwf	indf2,c
  5512  0017A2                     
  5513                           ; BSR set to: 0
  5514  0017A2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5515  0017A4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5516  0017A6                     
  5517                           ; BSR set to: 0
  5518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5519  0017A6  077E               	decf	efgtoa@w& (0+255),f,b
  5520  0017A8  A0D8               	btfss	status,0,c
  5521  0017AA  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5522  0017AC                     
  5523                           ; BSR set to: 0
  5524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5525  0017AC  076C               	decf	efgtoa@t& (0+255),f,b
  5526  0017AE  A0D8               	btfss	status,0,c
  5527  0017B0  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  5528  0017B2                     l5158:
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5532  0017B2  516C               	movf	efgtoa@t& (0+255),w,b
  5533  0017B4  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5534  0017B6  A4D8               	btfss	status,2,c
  5535  0017B8  EFE0  F00B         	goto	u6241
  5536  0017BC  EFE2  F00B         	goto	u6240
  5537  0017C0                     u6241:
  5538  0017C0  EFC9  F00B         	goto	l5150
  5539  0017C4                     u6240:
  5540  0017C4                     
  5541                           ; BSR set to: 0
  5542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5543  0017C4  0E50               	movlw	low _dbuf
  5544  0017C6  2592               	addwf	efgtoa@n& (0+255),w,b
  5545  0017C8  6ED9               	movwf	fsr2l,c
  5546  0017CA  0E02               	movlw	high _dbuf
  5547  0017CC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5548  0017CE  6EDA               	movwf	fsr2h,c
  5549  0017D0  5178               	movf	efgtoa@d& (0+255),w,b
  5550  0017D2  0F30               	addlw	48
  5551  0017D4  6EDF               	movwf	indf2,c
  5552  0017D6                     
  5553                           ; BSR set to: 0
  5554  0017D6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5555  0017D8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5556  0017DA                     
  5557                           ; BSR set to: 0
  5558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5559  0017DA  077E               	decf	efgtoa@w& (0+255),f,b
  5560  0017DC  A0D8               	btfss	status,0,c
  5561  0017DE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5562  0017E0                     l5166:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5566  0017E0  C082  F01A         	movff	efgtoa@h,___flsub@b
  5567  0017E4  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5568  0017E8  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5569  0017EC  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5570  0017F0  C094  F005         	movff	efgtoa@u,___flmul@a
  5571  0017F4  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5572  0017F8  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5573  0017FC  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5574  001800  C086  F001         	movff	efgtoa@l,___flmul@b
  5575  001804  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5576  001808  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5577  00180C  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5578  001810  EC81  F016         	call	___flmul	;wreg free
  5579  001814  C001  F01E         	movff	?___flmul,___flsub@a
  5580  001818  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5581  00181C  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5582  001820  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5583  001824  EC37  F02B         	call	___flsub	;wreg free
  5584  001828  C01A  F082         	movff	?___flsub,efgtoa@h
  5585  00182C  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5586  001830  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5587  001834  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5588  001838                     
  5589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5590  001838  C094  F001         	movff	efgtoa@u,___fldiv@b
  5591  00183C  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5592  001840  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5593  001844  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5594  001848  0E00               	movlw	0
  5595  00184A  6E05               	movwf	___fldiv@a^0,c
  5596  00184C  0E00               	movlw	0
  5597  00184E  6E06               	movwf	(___fldiv@a+1)^0,c
  5598  001850  0E20               	movlw	32
  5599  001852  6E07               	movwf	(___fldiv@a+2)^0,c
  5600  001854  0E41               	movlw	65
  5601  001856  6E08               	movwf	(___fldiv@a+3)^0,c
  5602  001858  EC96  F018         	call	___fldiv	;wreg free
  5603  00185C  C001  F094         	movff	?___fldiv,efgtoa@u
  5604  001860  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5605  001864  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5606  001868  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5607  00186C                     
  5608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5609  00186C  0100               	movlb	0	; () banked
  5610  00186E  0770               	decf	efgtoa@ne& (0+255),f,b
  5611  001870  A0D8               	btfss	status,0,c
  5612  001872  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  5613  001874                     
  5614                           ; BSR set to: 0
  5615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5616  001874  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5617  001876  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5618  001878                     l5174:
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5622  001878  5172               	movf	efgtoa@m& (0+255),w,b
  5623  00187A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5624  00187C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5625  00187E  0A80               	xorlw	128
  5626  001880  6E35               	movwf	??_efgtoa^0,c
  5627  001882  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5628  001884  0A80               	xorlw	128
  5629  001886  5835               	subwfb	??_efgtoa^0,w,c
  5630  001888  B0D8               	btfsc	status,0,c
  5631  00188A  EF49  F00C         	goto	u6251
  5632  00188E  EF4B  F00C         	goto	u6250
  5633  001892                     u6251:
  5634  001892  EF59  F00C         	goto	l5178
  5635  001896                     u6250:
  5636  001896                     
  5637                           ; BSR set to: 0
  5638  001896  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5639  001898  EF57  F00C         	goto	u6261
  5640  00189C  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5641  00189E  E109               	bnz	u6260
  5642  0018A0  0E4B               	movlw	75
  5643  0018A2  5D92               	subwf	efgtoa@n& (0+255),w,b
  5644  0018A4  A0D8               	btfss	status,0,c
  5645  0018A6  EF57  F00C         	goto	u6261
  5646  0018AA  EF59  F00C         	goto	u6260
  5647  0018AE                     u6261:
  5648  0018AE  EF4F  F00B         	goto	l5126
  5649  0018B2                     u6260:
  5650  0018B2                     l5178:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5654  0018B2  516E               	movf	efgtoa@pp& (0+255),w,b
  5655  0018B4  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5656  0018B6  A4D8               	btfss	status,2,c
  5657  0018B8  EF60  F00C         	goto	u6271
  5658  0018BC  EF62  F00C         	goto	u6270
  5659  0018C0                     u6271:
  5660  0018C0  EF73  F00C         	goto	l5186
  5661  0018C4                     u6270:
  5662  0018C4                     
  5663                           ; BSR set to: 0
  5664  0018C4  A9F0               	btfss	_flags& (0+255),4,b
  5665  0018C6  EF67  F00C         	goto	u6281
  5666  0018CA  EF69  F00C         	goto	u6280
  5667  0018CE                     u6281:
  5668  0018CE  EF73  F00C         	goto	l5186
  5669  0018D2                     u6280:
  5670  0018D2                     
  5671                           ; BSR set to: 0
  5672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5673  0018D2  0E50               	movlw	low _dbuf
  5674  0018D4  2592               	addwf	efgtoa@n& (0+255),w,b
  5675  0018D6  6ED9               	movwf	fsr2l,c
  5676  0018D8  0E02               	movlw	high _dbuf
  5677  0018DA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5678  0018DC  6EDA               	movwf	fsr2h,c
  5679  0018DE  0E2E               	movlw	46
  5680  0018E0  6EDF               	movwf	indf2,c
  5681  0018E2                     
  5682                           ; BSR set to: 0
  5683  0018E2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5684  0018E4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5685  0018E6                     l5186:
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5689  0018E6  0E50               	movlw	low _dbuf
  5690  0018E8  2592               	addwf	efgtoa@n& (0+255),w,b
  5691  0018EA  6ED9               	movwf	fsr2l,c
  5692  0018EC  0E02               	movlw	high _dbuf
  5693  0018EE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5694  0018F0  6EDA               	movwf	fsr2h,c
  5695  0018F2  0E00               	movlw	0
  5696  0018F4  6EDF               	movwf	indf2,c
  5697  0018F6                     
  5698                           ; BSR set to: 0
  5699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5700  0018F6  0E65               	movlw	101
  5701  0018F8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5702  0018FA  A4D8               	btfss	status,2,c
  5703  0018FC  EF82  F00C         	goto	u6291
  5704  001900  EF84  F00C         	goto	u6290
  5705  001904                     u6291:
  5706  001904  EFDE  F007         	goto	l4988
  5707  001908                     u6290:
  5708  001908                     
  5709                           ; BSR set to: 0
  5710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5711  001908  0E00               	movlw	0
  5712  00190A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5713  00190C  0E4F               	movlw	79
  5714  00190E  6F8A               	movwf	efgtoa@i& (0+255),b
  5715  001910                     
  5716                           ; BSR set to: 0
  5717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5718  001910  0E50               	movlw	low _dbuf
  5719  001912  258A               	addwf	efgtoa@i& (0+255),w,b
  5720  001914  6ED9               	movwf	fsr2l,c
  5721  001916  0E02               	movlw	high _dbuf
  5722  001918  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5723  00191A  6EDA               	movwf	fsr2h,c
  5724  00191C  0E00               	movlw	0
  5725  00191E  6EDF               	movwf	indf2,c
  5726  001920                     
  5727                           ; BSR set to: 0
  5728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5729  001920  0E00               	movlw	0
  5730  001922  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5731  001924  0E00               	movlw	0
  5732  001926  6F7A               	movwf	efgtoa@sign& (0+255),b
  5733  001928                     
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5736  001928  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5737  00192A  EF9B  F00C         	goto	u6300
  5738  00192E  EF99  F00C         	goto	u6301
  5739  001932                     u6301:
  5740  001932  EFA3  F00C         	goto	l5202
  5741  001936                     u6300:
  5742  001936                     
  5743                           ; BSR set to: 0
  5744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5745  001936  0E00               	movlw	0
  5746  001938  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5747  00193A  0E01               	movlw	1
  5748  00193C  6F7A               	movwf	efgtoa@sign& (0+255),b
  5749  00193E                     
  5750                           ; BSR set to: 0
  5751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5752  00193E  6D90               	negf	efgtoa@e& (0+255),b
  5753  001940  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5754  001942  B0D8               	btfsc	status,0,c
  5755  001944  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5756  001946                     l5202:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5760  001946  0E00               	movlw	0
  5761  001948  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5762  00194A  0E02               	movlw	2
  5763  00194C  6F7C               	movwf	efgtoa@p& (0+255),b
  5764                           
  5765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5766  00194E  EFD4  F00C         	goto	l5214
  5767  001952                     l5204:
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5771  001952  078A               	decf	efgtoa@i& (0+255),f,b
  5772  001954  A0D8               	btfss	status,0,c
  5773  001956  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5774  001958                     
  5775                           ; BSR set to: 0
  5776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5777  001958  0E50               	movlw	low _dbuf
  5778  00195A  258A               	addwf	efgtoa@i& (0+255),w,b
  5779  00195C  6ED9               	movwf	fsr2l,c
  5780  00195E  0E02               	movlw	high _dbuf
  5781  001960  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5782  001962  6EDA               	movwf	fsr2h,c
  5783  001964  C090  F001         	movff	efgtoa@e,___awmod@dividend
  5784  001968  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5785  00196C  0E00               	movlw	0
  5786  00196E  6E04               	movwf	(___awmod@divisor+1)^0,c
  5787  001970  0E0A               	movlw	10
  5788  001972  6E03               	movwf	___awmod@divisor^0,c
  5789  001974  EC51  F027         	call	___awmod	;wreg free
  5790  001978  5001               	movf	?___awmod^0,w,c
  5791  00197A  0F30               	addlw	48
  5792  00197C  6EDF               	movwf	indf2,c
  5793  00197E                     
  5794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5795  00197E  C090  F007         	movff	efgtoa@e,___awdiv@dividend
  5796  001982  C091  F008         	movff	efgtoa@e+1,___awdiv@dividend+1
  5797  001986  0E00               	movlw	0
  5798  001988  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5799  00198A  0E0A               	movlw	10
  5800  00198C  6E09               	movwf	___awdiv@divisor^0,c
  5801  00198E  ECEF  F026         	call	___awdiv	;wreg free
  5802  001992  C007  F090         	movff	?___awdiv,efgtoa@e
  5803  001996  C008  F091         	movff	?___awdiv+1,efgtoa@e+1
  5804  00199A                     
  5805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5806  00199A  0100               	movlb	0	; () banked
  5807  00199C  077C               	decf	efgtoa@p& (0+255),f,b
  5808  00199E  A0D8               	btfss	status,0,c
  5809  0019A0  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  5810  0019A2                     
  5811                           ; BSR set to: 0
  5812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5813  0019A2  077E               	decf	efgtoa@w& (0+255),f,b
  5814  0019A4  A0D8               	btfss	status,0,c
  5815  0019A6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5816  0019A8                     l5214:
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5820  0019A8  5190               	movf	efgtoa@e& (0+255),w,b
  5821  0019AA  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5822  0019AC  A4D8               	btfss	status,2,c
  5823  0019AE  EFDB  F00C         	goto	u6311
  5824  0019B2  EFDD  F00C         	goto	u6310
  5825  0019B6                     u6311:
  5826  0019B6  EFA9  F00C         	goto	l5204
  5827  0019BA                     u6310:
  5828  0019BA                     
  5829                           ; BSR set to: 0
  5830  0019BA  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5831  0019BC  EFEA  F00C         	goto	u6320
  5832  0019C0  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  5833  0019C2  E106               	bnz	u6321
  5834  0019C4  057C               	decf	efgtoa@p& (0+255),w,b
  5835  0019C6  B0D8               	btfsc	status,0,c
  5836  0019C8  EFE8  F00C         	goto	u6321
  5837  0019CC  EFEA  F00C         	goto	u6320
  5838  0019D0                     u6321:
  5839  0019D0  EFA9  F00C         	goto	l5204
  5840  0019D4                     u6320:
  5841  0019D4                     
  5842                           ; BSR set to: 0
  5843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5844  0019D4  078A               	decf	efgtoa@i& (0+255),f,b
  5845  0019D6  A0D8               	btfss	status,0,c
  5846  0019D8  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5847  0019DA                     
  5848                           ; BSR set to: 0
  5849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5850  0019DA  517A               	movf	efgtoa@sign& (0+255),w,b
  5851  0019DC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5852  0019DE  A4D8               	btfss	status,2,c
  5853  0019E0  EFF4  F00C         	goto	u6331
  5854  0019E4  EFF6  F00C         	goto	u6330
  5855  0019E8                     u6331:
  5856  0019E8  EFFC  F00C         	goto	l5224
  5857  0019EC                     u6330:
  5858  0019EC                     
  5859                           ; BSR set to: 0
  5860  0019EC  0E00               	movlw	0
  5861  0019EE  6F67               	movwf	(_efgtoa$2978+1)& (0+255),b
  5862  0019F0  0E2B               	movlw	43
  5863  0019F2  6F66               	movwf	_efgtoa$2978& (0+255),b
  5864  0019F4  EF00  F00D         	goto	l5226
  5865  0019F8                     l5224:
  5866                           
  5867                           ; BSR set to: 0
  5868  0019F8  0E00               	movlw	0
  5869  0019FA  6F67               	movwf	(_efgtoa$2978+1)& (0+255),b
  5870  0019FC  0E2D               	movlw	45
  5871  0019FE  6F66               	movwf	_efgtoa$2978& (0+255),b
  5872  001A00                     l5226:
  5873                           
  5874                           ; BSR set to: 0
  5875  001A00  0E50               	movlw	low _dbuf
  5876  001A02  258A               	addwf	efgtoa@i& (0+255),w,b
  5877  001A04  6ED9               	movwf	fsr2l,c
  5878  001A06  0E02               	movlw	high _dbuf
  5879  001A08  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5880  001A0A  6EDA               	movwf	fsr2h,c
  5881  001A0C  C066  FFDF         	movff	_efgtoa$2978,indf2
  5882  001A10                     
  5883                           ; BSR set to: 0
  5884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5885  001A10  077E               	decf	efgtoa@w& (0+255),f,b
  5886  001A12  A0D8               	btfss	status,0,c
  5887  001A14  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5888  001A16                     
  5889                           ; BSR set to: 0
  5890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5891  001A16  078A               	decf	efgtoa@i& (0+255),f,b
  5892  001A18  A0D8               	btfss	status,0,c
  5893  001A1A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5894  001A1C                     
  5895                           ; BSR set to: 0
  5896  001A1C  0EBF               	movlw	191
  5897  001A1E  6E35               	movwf	??_efgtoa^0,c
  5898  001A20  0EFF               	movlw	255
  5899  001A22  6E36               	movwf	(??_efgtoa+1)^0,c
  5900  001A24  5034               	movf	efgtoa@c^0,w,c
  5901  001A26  6E37               	movwf	(??_efgtoa+2)^0,c
  5902  001A28  6A38               	clrf	(??_efgtoa+3)^0,c
  5903  001A2A  5035               	movf	??_efgtoa^0,w,c
  5904  001A2C  2637               	addwf	(??_efgtoa+2)^0,f,c
  5905  001A2E  5036               	movf	(??_efgtoa+1)^0,w,c
  5906  001A30  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5907  001A32  5038               	movf	(??_efgtoa+3)^0,w,c
  5908  001A34  E10A               	bnz	u6340
  5909  001A36  0E1A               	movlw	26
  5910  001A38  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5911  001A3A  A0D8               	btfss	status,0,c
  5912  001A3C  EF22  F00D         	goto	u6341
  5913  001A40  EF25  F00D         	goto	u6340
  5914  001A44                     u6341:
  5915  001A44  0E01               	movlw	1
  5916  001A46  EF26  F00D         	goto	u6350
  5917  001A4A                     u6340:
  5918  001A4A  0E00               	movlw	0
  5919  001A4C                     u6350:
  5920  001A4C  6F6A               	movwf	_efgtoa$2980& (0+255),b
  5921  001A4E  6B6B               	clrf	(_efgtoa$2980+1)& (0+255),b
  5922  001A50                     
  5923                           ; BSR set to: 0
  5924  001A50  516A               	movf	_efgtoa$2980& (0+255),w,b
  5925  001A52  116B               	iorwf	(_efgtoa$2980+1)& (0+255),w,b
  5926  001A54  A4D8               	btfss	status,2,c
  5927  001A56  EF2F  F00D         	goto	u6361
  5928  001A5A  EF31  F00D         	goto	u6360
  5929  001A5E                     u6361:
  5930  001A5E  EF37  F00D         	goto	l5240
  5931  001A62                     u6360:
  5932  001A62                     
  5933                           ; BSR set to: 0
  5934  001A62  0E00               	movlw	0
  5935  001A64  6F69               	movwf	(_efgtoa$2979+1)& (0+255),b
  5936  001A66  0E65               	movlw	101
  5937  001A68  6F68               	movwf	_efgtoa$2979& (0+255),b
  5938  001A6A  EF3B  F00D         	goto	l5242
  5939  001A6E                     l5240:
  5940                           
  5941                           ; BSR set to: 0
  5942  001A6E  0E00               	movlw	0
  5943  001A70  6F69               	movwf	(_efgtoa$2979+1)& (0+255),b
  5944  001A72  0E45               	movlw	69
  5945  001A74  6F68               	movwf	_efgtoa$2979& (0+255),b
  5946  001A76                     l5242:
  5947                           
  5948                           ; BSR set to: 0
  5949  001A76  0E50               	movlw	low _dbuf
  5950  001A78  258A               	addwf	efgtoa@i& (0+255),w,b
  5951  001A7A  6ED9               	movwf	fsr2l,c
  5952  001A7C  0E02               	movlw	high _dbuf
  5953  001A7E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5954  001A80  6EDA               	movwf	fsr2h,c
  5955  001A82  C068  FFDF         	movff	_efgtoa$2979,indf2
  5956  001A86                     
  5957                           ; BSR set to: 0
  5958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5959  001A86  077E               	decf	efgtoa@w& (0+255),f,b
  5960  001A88  A0D8               	btfss	status,0,c
  5961  001A8A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5962  001A8C                     
  5963                           ; BSR set to: 0
  5964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5965  001A8C  0E50               	movlw	low _dbuf
  5966  001A8E  2592               	addwf	efgtoa@n& (0+255),w,b
  5967  001A90  6E01               	movwf	strcpy@dest^0,c
  5968  001A92  0E02               	movlw	high _dbuf
  5969  001A94  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5970  001A96  6E02               	movwf	(strcpy@dest+1)^0,c
  5971  001A98  0E50               	movlw	low _dbuf
  5972  001A9A  258A               	addwf	efgtoa@i& (0+255),w,b
  5973  001A9C  6E03               	movwf	strcpy@src^0,c
  5974  001A9E  0E02               	movlw	high _dbuf
  5975  001AA0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5976  001AA2  6E04               	movwf	(strcpy@src+1)^0,c
  5977  001AA4  EC6F  F029         	call	_strcpy	;wreg free
  5978  001AA8  EFDE  F007         	goto	l4988
  5979  001AAC                     l1424:
  5980  001AAC  0012               	return		;funcret
  5981  001AAE                     __end_of_efgtoa:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _tolower *****************
  5985 ;; Defined at:
  5986 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  c               2    6[COMRAM] int 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  2    6[COMRAM] int 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6002 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;Total ram usage:        8 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 1
  6007 ;; This function calls:
  6008 ;;		_isupper
  6009 ;; This function is called by:
  6010 ;;		_efgtoa
  6011 ;;		_vfpfcnvrt
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text13
  6016  00527E                     __ptext13:
  6017                           	callstack 0
  6018  00527E                     _tolower:
  6019                           	callstack 25
  6020  00527E  0EBF               	movlw	191
  6021  005280  6E09               	movwf	??_tolower^0,c
  6022  005282  0EFF               	movlw	255
  6023  005284  6E0A               	movwf	(??_tolower+1)^0,c
  6024  005286  C007  F00B         	movff	tolower@c,??_tolower+2
  6025  00528A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6026  00528E  5009               	movf	??_tolower^0,w,c
  6027  005290  260B               	addwf	(??_tolower+2)^0,f,c
  6028  005292  500A               	movf	(??_tolower+1)^0,w,c
  6029  005294  220C               	addwfc	(??_tolower+3)^0,f,c
  6030  005296  500C               	movf	(??_tolower+3)^0,w,c
  6031  005298  E10A               	bnz	u5490
  6032  00529A  0E1A               	movlw	26
  6033  00529C  5C0B               	subwf	(??_tolower+2)^0,w,c
  6034  00529E  A0D8               	btfss	status,0,c
  6035  0052A0  EF54  F029         	goto	u5491
  6036  0052A4  EF57  F029         	goto	u5490
  6037  0052A8                     u5491:
  6038  0052A8  0E01               	movlw	1
  6039  0052AA  EF58  F029         	goto	u5500
  6040  0052AE                     u5490:
  6041  0052AE  0E00               	movlw	0
  6042  0052B0                     u5500:
  6043  0052B0  6E0D               	movwf	_tolower$3141^0,c
  6044  0052B2  6A0E               	clrf	(_tolower$3141+1)^0,c
  6045  0052B4  500D               	movf	_tolower$3141^0,w,c
  6046  0052B6  100E               	iorwf	(_tolower$3141+1)^0,w,c
  6047  0052B8  B4D8               	btfsc	status,2,c
  6048  0052BA  EF61  F029         	goto	u5511
  6049  0052BE  EF63  F029         	goto	u5510
  6050  0052C2                     u5511:
  6051  0052C2  EF6A  F029         	goto	l1688
  6052  0052C6                     u5510:
  6053  0052C6  0E20               	movlw	32
  6054  0052C8  1007               	iorwf	tolower@c^0,w,c
  6055  0052CA  6E07               	movwf	?_tolower^0,c
  6056  0052CC  5008               	movf	(tolower@c+1)^0,w,c
  6057  0052CE  6E08               	movwf	(?_tolower+1)^0,c
  6058  0052D0  EF6E  F029         	goto	l1693
  6059  0052D4                     l1688:
  6060  0052D4  C007  F007         	movff	tolower@c,?_tolower
  6061  0052D8  C008  F008         	movff	tolower@c+1,?_tolower+1
  6062  0052DC                     l1693:
  6063  0052DC  0012               	return		;funcret
  6064  0052DE                     __end_of_tolower:
  6065                           	callstack 0
  6066                           
  6067 ;; *************** function _isupper *****************
  6068 ;; Defined at:
  6069 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  c               2    0[COMRAM] int 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  2    0[COMRAM] int 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6087 ;;Total ram usage:        6 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		_efgtoa
  6093 ;;		_vfpfcnvrt
  6094 ;;		_tolower
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text14
  6099  0057B2                     __ptext14:
  6100                           	callstack 0
  6101  0057B2                     _isupper:
  6102                           	callstack 25
  6103  0057B2  0EBF               	movlw	191
  6104  0057B4  6E03               	movwf	??_isupper^0,c
  6105  0057B6  0EFF               	movlw	255
  6106  0057B8  6E04               	movwf	(??_isupper+1)^0,c
  6107  0057BA  C001  F005         	movff	isupper@c,??_isupper+2
  6108  0057BE  C002  F006         	movff	isupper@c+1,??_isupper+3
  6109  0057C2  5003               	movf	??_isupper^0,w,c
  6110  0057C4  2605               	addwf	(??_isupper+2)^0,f,c
  6111  0057C6  5004               	movf	(??_isupper+1)^0,w,c
  6112  0057C8  2206               	addwfc	(??_isupper+3)^0,f,c
  6113  0057CA  5006               	movf	(??_isupper+3)^0,w,c
  6114  0057CC  E10A               	bnz	u4500
  6115  0057CE  0E1A               	movlw	26
  6116  0057D0  5C05               	subwf	(??_isupper+2)^0,w,c
  6117  0057D2  A0D8               	btfss	status,0,c
  6118  0057D4  EFEE  F02B         	goto	u4501
  6119  0057D8  EFF1  F02B         	goto	u4500
  6120  0057DC                     u4501:
  6121  0057DC  0E01               	movlw	1
  6122  0057DE  EFF2  F02B         	goto	u4510
  6123  0057E2                     u4500:
  6124  0057E2  0E00               	movlw	0
  6125  0057E4                     u4510:
  6126  0057E4  6E01               	movwf	?_isupper^0,c
  6127  0057E6  6A02               	clrf	(?_isupper+1)^0,c
  6128  0057E8  0012               	return		;funcret
  6129  0057EA                     __end_of_isupper:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _strcpy *****************
  6133 ;; Defined at:
  6134 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6137 ;;		 -> dbuf(80), 
  6138 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6139 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  6140 ;;		 -> dbuf(80), 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  d               2    8[COMRAM] PTR unsigned char 
  6143 ;;		 -> dbuf(80), 
  6144 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6145 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  6146 ;;		 -> dbuf(80), 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  2    0[COMRAM] PTR unsigned char 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6157 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6159 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;Total ram usage:       10 bytes
  6161 ;; Hardware stack levels used: 1
  6162 ;; This function calls:
  6163 ;;		Nothing
  6164 ;; This function is called by:
  6165 ;;		_efgtoa
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text15
  6170  0052DE                     __ptext15:
  6171                           	callstack 0
  6172  0052DE                     _strcpy:
  6173                           	callstack 25
  6174  0052DE  C003  F007         	movff	strcpy@src,strcpy@s
  6175  0052E2  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6176  0052E6  C001  F009         	movff	strcpy@dest,strcpy@d
  6177  0052EA  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6178  0052EE                     l4822:
  6179  0052EE  5007               	movf	strcpy@s^0,w,c
  6180  0052F0  6E05               	movwf	??_strcpy^0,c
  6181  0052F2  5008               	movf	(strcpy@s+1)^0,w,c
  6182  0052F4  6E06               	movwf	(??_strcpy+1)^0,c
  6183  0052F6  4A07               	infsnz	strcpy@s^0,f,c
  6184  0052F8  2A08               	incf	(strcpy@s+1)^0,f,c
  6185  0052FA  C005  FFF6         	movff	??_strcpy,tblptrl
  6186  0052FE  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6187  005302  0E00               	movlw	low (__smallconst shr (0+16))
  6188  005304  6EF8               	movwf	tblptru,c
  6189  005306  C009  FFD9         	movff	strcpy@d,fsr2l
  6190  00530A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6191  00530E  4A09               	infsnz	strcpy@d^0,f,c
  6192  005310  2A0A               	incf	(strcpy@d+1)^0,f,c
  6193  005312  0E0D               	movlw	(high __ramtop+-1)
  6194  005314  64F7               	cpfsgt	tblptrh,c
  6195  005316  D003               	bra	u5477
  6196  005318  0008               	tblrd		*
  6197  00531A  50F5               	movf	tablat,w,c
  6198  00531C  D005               	bra	u5470
  6199  00531E                     u5477:
  6200  00531E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6201  005322  CFF7 FFEA          	movff	tblptrh,fsr0h
  6202  005326  50EF               	movf	indf0,w,c
  6203  005328                     u5470:
  6204  005328  6EDF               	movwf	indf2,c
  6205  00532A  50DF               	movf	indf2,w,c
  6206  00532C  A4D8               	btfss	status,2,c
  6207  00532E  EF9B  F029         	goto	u5481
  6208  005332  EF9D  F029         	goto	u5480
  6209  005336                     u5481:
  6210  005336  EF77  F029         	goto	l4822
  6211  00533A                     u5480:
  6212  00533A  0012               	return		;funcret
  6213  00533C                     __end_of_strcpy:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _floorf *****************
  6217 ;; Defined at:
  6218 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  x               4   25[COMRAM] float 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  u               4   41[COMRAM] struct .
  6223 ;;  m               4   35[COMRAM] unsigned long 
  6224 ;;  e               2   39[COMRAM] int 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  4   25[COMRAM] float 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6235 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6236 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6237 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6238 ;;Total ram usage:       20 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_efgtoa
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text16
  6248  0039E0                     __ptext16:
  6249                           	callstack 0
  6250  0039E0                     _floorf:
  6251                           	callstack 25
  6252  0039E0  C1F3  F02A         	movff	floorf@F527,floorf@u
  6253  0039E4  C1F4  F02B         	movff	floorf@F527+1,floorf@u+1
  6254  0039E8  C1F5  F02C         	movff	floorf@F527+2,floorf@u+2
  6255  0039EC  C1F6  F02D         	movff	floorf@F527+3,floorf@u+3
  6256  0039F0  C01A  F02A         	movff	floorf@x,floorf@u
  6257  0039F4  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6258  0039F8  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6259  0039FC  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6260  003A00  0E81               	movlw	129
  6261  003A02  6E1E               	movwf	??_floorf^0,c
  6262  003A04  0EFF               	movlw	255
  6263  003A06  6E1F               	movwf	(??_floorf+1)^0,c
  6264  003A08  C02A  F020         	movff	floorf@u,??_floorf+2
  6265  003A0C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6266  003A10  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6267  003A14  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6268  003A18  0E18               	movlw	24
  6269  003A1A  EF14  F01D         	goto	u5520
  6270  003A1E                     u5525:
  6271  003A1E  90D8               	bcf	status,0,c
  6272  003A20  3223               	rrcf	(??_floorf+5)^0,f,c
  6273  003A22  3222               	rrcf	(??_floorf+4)^0,f,c
  6274  003A24  3221               	rrcf	(??_floorf+3)^0,f,c
  6275  003A26  3220               	rrcf	(??_floorf+2)^0,f,c
  6276  003A28                     u5520:
  6277  003A28  2EE8               	decfsz	wreg,f,c
  6278  003A2A  EF0F  F01D         	goto	u5525
  6279  003A2E  5020               	movf	(??_floorf+2)^0,w,c
  6280  003A30  241E               	addwf	??_floorf^0,w,c
  6281  003A32  6E28               	movwf	floorf@e^0,c
  6282  003A34  0E00               	movlw	0
  6283  003A36  201F               	addwfc	(??_floorf+1)^0,w,c
  6284  003A38  6E29               	movwf	(floorf@e+1)^0,c
  6285  003A3A  BE29               	btfsc	(floorf@e+1)^0,7,c
  6286  003A3C  EF29  F01D         	goto	u5531
  6287  003A40  5029               	movf	(floorf@e+1)^0,w,c
  6288  003A42  E109               	bnz	u5530
  6289  003A44  0E17               	movlw	23
  6290  003A46  5C28               	subwf	floorf@e^0,w,c
  6291  003A48  A0D8               	btfss	status,0,c
  6292  003A4A  EF29  F01D         	goto	u5531
  6293  003A4E  EF2B  F01D         	goto	u5530
  6294  003A52                     u5531:
  6295  003A52  EF35  F01D         	goto	l4840
  6296  003A56                     u5530:
  6297  003A56                     l4838:
  6298  003A56  C01A  F01A         	movff	floorf@x,?_floorf
  6299  003A5A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6300  003A5E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6301  003A62  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6302  003A66  EFF8  F01D         	goto	l1612
  6303  003A6A                     l4840:
  6304  003A6A  BE29               	btfsc	(floorf@e+1)^0,7,c
  6305  003A6C  EF3A  F01D         	goto	u5541
  6306  003A70  EF3C  F01D         	goto	u5540
  6307  003A74                     u5541:
  6308  003A74  EFAC  F01D         	goto	l4850
  6309  003A78                     u5540:
  6310  003A78  C028  F01E         	movff	floorf@e,??_floorf
  6311  003A7C  0EFF               	movlw	255
  6312  003A7E  6E1F               	movwf	(??_floorf+1)^0,c
  6313  003A80  0EFF               	movlw	255
  6314  003A82  6E20               	movwf	(??_floorf+2)^0,c
  6315  003A84  0E7F               	movlw	127
  6316  003A86  6E21               	movwf	(??_floorf+3)^0,c
  6317  003A88  0E00               	movlw	0
  6318  003A8A  6E22               	movwf	(??_floorf+4)^0,c
  6319  003A8C                     u5555:
  6320  003A8C  661E               	tstfsz	??_floorf^0,c
  6321  003A8E  EF4B  F01D         	goto	u5556
  6322  003A92  EF53  F01D         	goto	u5557
  6323  003A96                     u5556:
  6324  003A96  3422               	rlcf	(??_floorf+4)^0,w,c
  6325  003A98  3222               	rrcf	(??_floorf+4)^0,f,c
  6326  003A9A  3221               	rrcf	(??_floorf+3)^0,f,c
  6327  003A9C  3220               	rrcf	(??_floorf+2)^0,f,c
  6328  003A9E  321F               	rrcf	(??_floorf+1)^0,f,c
  6329  003AA0  2E1E               	decfsz	??_floorf^0,f,c
  6330  003AA2  EF46  F01D         	goto	u5555
  6331  003AA6                     u5557:
  6332  003AA6  C01F  F024         	movff	??_floorf+1,floorf@m
  6333  003AAA  C020  F025         	movff	??_floorf+2,floorf@m+1
  6334  003AAE  C021  F026         	movff	??_floorf+3,floorf@m+2
  6335  003AB2  C022  F027         	movff	??_floorf+4,floorf@m+3
  6336  003AB6  5024               	movf	floorf@m^0,w,c
  6337  003AB8  142A               	andwf	floorf@u^0,w,c
  6338  003ABA  6E1E               	movwf	??_floorf^0,c
  6339  003ABC  5025               	movf	(floorf@m+1)^0,w,c
  6340  003ABE  142B               	andwf	(floorf@u+1)^0,w,c
  6341  003AC0  6E1F               	movwf	(??_floorf+1)^0,c
  6342  003AC2  5026               	movf	(floorf@m+2)^0,w,c
  6343  003AC4  142C               	andwf	(floorf@u+2)^0,w,c
  6344  003AC6  6E20               	movwf	(??_floorf+2)^0,c
  6345  003AC8  5027               	movf	(floorf@m+3)^0,w,c
  6346  003ACA  142D               	andwf	(floorf@u+3)^0,w,c
  6347  003ACC  6E21               	movwf	(??_floorf+3)^0,c
  6348  003ACE  501E               	movf	??_floorf^0,w,c
  6349  003AD0  101F               	iorwf	(??_floorf+1)^0,w,c
  6350  003AD2  1020               	iorwf	(??_floorf+2)^0,w,c
  6351  003AD4  1021               	iorwf	(??_floorf+3)^0,w,c
  6352  003AD6  A4D8               	btfss	status,2,c
  6353  003AD8  EF70  F01D         	goto	u5561
  6354  003ADC  EF72  F01D         	goto	u5560
  6355  003AE0                     u5561:
  6356  003AE0  EF74  F01D         	goto	l4846
  6357  003AE4                     u5560:
  6358  003AE4  EF2B  F01D         	goto	l4838
  6359  003AE8                     l4846:
  6360  003AE8  C02A  F01E         	movff	floorf@u,??_floorf
  6361  003AEC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6362  003AF0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6363  003AF4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6364  003AF8  0E20               	movlw	32
  6365  003AFA  EF84  F01D         	goto	u5570
  6366  003AFE                     u5575:
  6367  003AFE  90D8               	bcf	status,0,c
  6368  003B00  3221               	rrcf	(??_floorf+3)^0,f,c
  6369  003B02  3220               	rrcf	(??_floorf+2)^0,f,c
  6370  003B04  321F               	rrcf	(??_floorf+1)^0,f,c
  6371  003B06  321E               	rrcf	??_floorf^0,f,c
  6372  003B08                     u5570:
  6373  003B08  2EE8               	decfsz	wreg,f,c
  6374  003B0A  EF7F  F01D         	goto	u5575
  6375  003B0E  501E               	movf	??_floorf^0,w,c
  6376  003B10  101F               	iorwf	(??_floorf+1)^0,w,c
  6377  003B12  1020               	iorwf	(??_floorf+2)^0,w,c
  6378  003B14  1021               	iorwf	(??_floorf+3)^0,w,c
  6379  003B16  B4D8               	btfsc	status,2,c
  6380  003B18  EF90  F01D         	goto	u5581
  6381  003B1C  EF92  F01D         	goto	u5580
  6382  003B20                     u5581:
  6383  003B20  EF9A  F01D         	goto	l1615
  6384  003B24                     u5580:
  6385  003B24  5024               	movf	floorf@m^0,w,c
  6386  003B26  262A               	addwf	floorf@u^0,f,c
  6387  003B28  5025               	movf	(floorf@m+1)^0,w,c
  6388  003B2A  222B               	addwfc	(floorf@u+1)^0,f,c
  6389  003B2C  5026               	movf	(floorf@m+2)^0,w,c
  6390  003B2E  222C               	addwfc	(floorf@u+2)^0,f,c
  6391  003B30  5027               	movf	(floorf@m+3)^0,w,c
  6392  003B32  222D               	addwfc	(floorf@u+3)^0,f,c
  6393  003B34                     l1615:
  6394  003B34  1C24               	comf	floorf@m^0,w,c
  6395  003B36  6E1E               	movwf	??_floorf^0,c
  6396  003B38  1C25               	comf	(floorf@m+1)^0,w,c
  6397  003B3A  6E1F               	movwf	(??_floorf+1)^0,c
  6398  003B3C  1C26               	comf	(floorf@m+2)^0,w,c
  6399  003B3E  6E20               	movwf	(??_floorf+2)^0,c
  6400  003B40  1C27               	comf	(floorf@m+3)^0,w,c
  6401  003B42  6E21               	movwf	(??_floorf+3)^0,c
  6402  003B44  501E               	movf	??_floorf^0,w,c
  6403  003B46  162A               	andwf	floorf@u^0,f,c
  6404  003B48  501F               	movf	(??_floorf+1)^0,w,c
  6405  003B4A  162B               	andwf	(floorf@u+1)^0,f,c
  6406  003B4C  5020               	movf	(??_floorf+2)^0,w,c
  6407  003B4E  162C               	andwf	(floorf@u+2)^0,f,c
  6408  003B50  5021               	movf	(??_floorf+3)^0,w,c
  6409  003B52  162D               	andwf	(floorf@u+3)^0,f,c
  6410  003B54  EFF0  F01D         	goto	l4858
  6411  003B58                     l4850:
  6412  003B58  C02A  F01E         	movff	floorf@u,??_floorf
  6413  003B5C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6414  003B60  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6415  003B64  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6416  003B68  0E20               	movlw	32
  6417  003B6A  EFBC  F01D         	goto	u5590
  6418  003B6E                     u5595:
  6419  003B6E  90D8               	bcf	status,0,c
  6420  003B70  3221               	rrcf	(??_floorf+3)^0,f,c
  6421  003B72  3220               	rrcf	(??_floorf+2)^0,f,c
  6422  003B74  321F               	rrcf	(??_floorf+1)^0,f,c
  6423  003B76  321E               	rrcf	??_floorf^0,f,c
  6424  003B78                     u5590:
  6425  003B78  2EE8               	decfsz	wreg,f,c
  6426  003B7A  EFB7  F01D         	goto	u5595
  6427  003B7E  501E               	movf	??_floorf^0,w,c
  6428  003B80  101F               	iorwf	(??_floorf+1)^0,w,c
  6429  003B82  1020               	iorwf	(??_floorf+2)^0,w,c
  6430  003B84  1021               	iorwf	(??_floorf+3)^0,w,c
  6431  003B86  A4D8               	btfss	status,2,c
  6432  003B88  EFC8  F01D         	goto	u5601
  6433  003B8C  EFCA  F01D         	goto	u5600
  6434  003B90                     u5601:
  6435  003B90  EFD4  F01D         	goto	l4854
  6436  003B94                     u5600:
  6437  003B94  0E00               	movlw	0
  6438  003B96  6E2A               	movwf	floorf@u^0,c
  6439  003B98  0E00               	movlw	0
  6440  003B9A  6E2B               	movwf	(floorf@u+1)^0,c
  6441  003B9C  0E00               	movlw	0
  6442  003B9E  6E2C               	movwf	(floorf@u+2)^0,c
  6443  003BA0  0E00               	movlw	0
  6444  003BA2  6E2D               	movwf	(floorf@u+3)^0,c
  6445  003BA4  EFF0  F01D         	goto	l4858
  6446  003BA8                     l4854:
  6447  003BA8  90D8               	bcf	status,0,c
  6448  003BAA  342A               	rlcf	floorf@u^0,w,c
  6449  003BAC  6E1E               	movwf	??_floorf^0,c
  6450  003BAE  342B               	rlcf	(floorf@u+1)^0,w,c
  6451  003BB0  6E1F               	movwf	(??_floorf+1)^0,c
  6452  003BB2  342C               	rlcf	(floorf@u+2)^0,w,c
  6453  003BB4  6E20               	movwf	(??_floorf+2)^0,c
  6454  003BB6  342D               	rlcf	(floorf@u+3)^0,w,c
  6455  003BB8  6E21               	movwf	(??_floorf+3)^0,c
  6456  003BBA  501E               	movf	??_floorf^0,w,c
  6457  003BBC  101F               	iorwf	(??_floorf+1)^0,w,c
  6458  003BBE  1020               	iorwf	(??_floorf+2)^0,w,c
  6459  003BC0  1021               	iorwf	(??_floorf+3)^0,w,c
  6460  003BC2  B4D8               	btfsc	status,2,c
  6461  003BC4  EFE6  F01D         	goto	u5611
  6462  003BC8  EFE8  F01D         	goto	u5610
  6463  003BCC                     u5611:
  6464  003BCC  EFF0  F01D         	goto	l4858
  6465  003BD0                     u5610:
  6466  003BD0  0E00               	movlw	0
  6467  003BD2  6E2A               	movwf	floorf@u^0,c
  6468  003BD4  0E00               	movlw	0
  6469  003BD6  6E2B               	movwf	(floorf@u+1)^0,c
  6470  003BD8  0E80               	movlw	128
  6471  003BDA  6E2C               	movwf	(floorf@u+2)^0,c
  6472  003BDC  0EBF               	movlw	191
  6473  003BDE  6E2D               	movwf	(floorf@u+3)^0,c
  6474  003BE0                     l4858:
  6475  003BE0  C02A  F01A         	movff	floorf@u,?_floorf
  6476  003BE4  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6477  003BE8  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6478  003BEC  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6479  003BF0                     l1612:
  6480  003BF0  0012               	return		;funcret
  6481  003BF2                     __end_of_floorf:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function ___fpclassifyf *****************
  6485 ;; Defined at:
  6486 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  x               4    0[COMRAM] float 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  u               4   10[COMRAM] struct .
  6491 ;;  e               2    8[COMRAM] int 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  2    0[COMRAM] int 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6502 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6504 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6505 ;;Total ram usage:       14 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_efgtoa
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text17
  6515  00479A                     __ptext17:
  6516                           	callstack 0
  6517  00479A                     ___fpclassifyf:
  6518                           	callstack 25
  6519  00479A  C1F7  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6520  00479E  C1F8  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6521  0047A2  C1F9  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6522  0047A6  C1FA  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6523  0047AA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6524  0047AE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6525  0047B2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6526  0047B6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6527  0047BA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6528  0047BE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6529  0047C2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6530  0047C6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6531  0047CA  0E18               	movlw	24
  6532  0047CC  EFED  F023         	goto	u5400
  6533  0047D0                     u5405:
  6534  0047D0  90D8               	bcf	status,0,c
  6535  0047D2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6536  0047D4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6537  0047D6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6538  0047D8  3205               	rrcf	??___fpclassifyf^0,f,c
  6539  0047DA                     u5400:
  6540  0047DA  2EE8               	decfsz	wreg,f,c
  6541  0047DC  EFE8  F023         	goto	u5405
  6542  0047E0  5005               	movf	??___fpclassifyf^0,w,c
  6543  0047E2  6E09               	movwf	___fpclassifyf@e^0,c
  6544  0047E4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6545  0047E6  5009               	movf	___fpclassifyf@e^0,w,c
  6546  0047E8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6547  0047EA  A4D8               	btfss	status,2,c
  6548  0047EC  EFFA  F023         	goto	u5411
  6549  0047F0  EFFC  F023         	goto	u5410
  6550  0047F4                     u5411:
  6551  0047F4  EF1C  F024         	goto	l4810
  6552  0047F8                     u5410:
  6553  0047F8  90D8               	bcf	status,0,c
  6554  0047FA  340B               	rlcf	___fpclassifyf@u^0,w,c
  6555  0047FC  6E05               	movwf	??___fpclassifyf^0,c
  6556  0047FE  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6557  004800  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6558  004802  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6559  004804  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6560  004806  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6561  004808  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6562  00480A  5005               	movf	??___fpclassifyf^0,w,c
  6563  00480C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6564  00480E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6565  004810  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6566  004812  A4D8               	btfss	status,2,c
  6567  004814  EF0E  F024         	goto	u5421
  6568  004818  EF10  F024         	goto	u5420
  6569  00481C                     u5421:
  6570  00481C  EF16  F024         	goto	l4806
  6571  004820                     u5420:
  6572  004820  0E00               	movlw	0
  6573  004822  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6574  004824  0E02               	movlw	2
  6575  004826  6E01               	movwf	?___fpclassifyf^0,c
  6576  004828  EF4B  F024         	goto	l1567
  6577  00482C                     l4806:
  6578  00482C  0E00               	movlw	0
  6579  00482E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6580  004830  0E03               	movlw	3
  6581  004832  6E01               	movwf	?___fpclassifyf^0,c
  6582  004834  EF4B  F024         	goto	l1567
  6583  004838                     l4810:
  6584  004838  2809               	incf	___fpclassifyf@e^0,w,c
  6585  00483A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6586  00483C  A4D8               	btfss	status,2,c
  6587  00483E  EF23  F024         	goto	u5431
  6588  004842  EF25  F024         	goto	u5430
  6589  004846                     u5431:
  6590  004846  EF47  F024         	goto	l4816
  6591  00484A                     u5430:
  6592  00484A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6593  00484E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6594  004852  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6595  004856  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6596  00485A  0E09               	movlw	9
  6597  00485C                     u5445:
  6598  00485C  90D8               	bcf	status,0,c
  6599  00485E  3605               	rlcf	??___fpclassifyf^0,f,c
  6600  004860  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6601  004862  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6602  004864  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6603  004866  2EE8               	decfsz	wreg,f,c
  6604  004868  EF2E  F024         	goto	u5445
  6605  00486C  5005               	movf	??___fpclassifyf^0,w,c
  6606  00486E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6607  004870  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6608  004872  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6609  004874  B4D8               	btfsc	status,2,c
  6610  004876  EF3F  F024         	goto	u5451
  6611  00487A  EF42  F024         	goto	u5450
  6612  00487E                     u5451:
  6613  00487E  0E01               	movlw	1
  6614  004880  EF43  F024         	goto	u5460
  6615  004884                     u5450:
  6616  004884  0E00               	movlw	0
  6617  004886                     u5460:
  6618  004886  6E01               	movwf	?___fpclassifyf^0,c
  6619  004888  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6620  00488A  EF4B  F024         	goto	l1567
  6621  00488E                     l4816:
  6622  00488E  0E00               	movlw	0
  6623  004890  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6624  004892  0E04               	movlw	4
  6625  004894  6E01               	movwf	?___fpclassifyf^0,c
  6626  004896                     l1567:
  6627  004896  0012               	return		;funcret
  6628  004898                     __end_of___fpclassifyf:
  6629                           	callstack 0
  6630                           
  6631 ;; *************** function ___fltol *****************
  6632 ;; Defined at:
  6633 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  f1              4    0[COMRAM] int 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  exp1            1    9[COMRAM] unsigned char 
  6638 ;;  sign1           1    8[COMRAM] unsigned char 
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  4    0[COMRAM] long 
  6641 ;; Registers used:
  6642 ;;		wreg, status,2, status,0
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6652 ;;Total ram usage:       10 bytes
  6653 ;; Hardware stack levels used: 1
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_efgtoa
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text18
  6662  004590                     __ptext18:
  6663                           	callstack 0
  6664  004590                     ___fltol:
  6665                           	callstack 25
  6666  004590  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6667  004592  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6668  004594  6E0A               	movwf	___fltol@exp1^0,c
  6669  004596  500A               	movf	___fltol@exp1^0,w,c
  6670  004598  A4D8               	btfss	status,2,c
  6671  00459A  EFD1  F022         	goto	u5281
  6672  00459E  EFD3  F022         	goto	u5280
  6673  0045A2                     u5281:
  6674  0045A2  EFDD  F022         	goto	l4734
  6675  0045A6                     u5280:
  6676  0045A6                     l4730:
  6677  0045A6  0E00               	movlw	0
  6678  0045A8  6E01               	movwf	?___fltol^0,c
  6679  0045AA  0E00               	movlw	0
  6680  0045AC  6E02               	movwf	(?___fltol+1)^0,c
  6681  0045AE  0E00               	movlw	0
  6682  0045B0  6E03               	movwf	(?___fltol+2)^0,c
  6683  0045B2  0E00               	movlw	0
  6684  0045B4  6E04               	movwf	(?___fltol+3)^0,c
  6685  0045B6  EF4A  F023         	goto	l951
  6686  0045BA                     l4734:
  6687  0045BA  C001  F005         	movff	___fltol@f1,??___fltol
  6688  0045BE  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6689  0045C2  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6690  0045C6  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6691  0045CA  0E20               	movlw	32
  6692  0045CC  EFED  F022         	goto	u5290
  6693  0045D0                     u5295:
  6694  0045D0  90D8               	bcf	status,0,c
  6695  0045D2  3208               	rrcf	(??___fltol+3)^0,f,c
  6696  0045D4  3207               	rrcf	(??___fltol+2)^0,f,c
  6697  0045D6  3206               	rrcf	(??___fltol+1)^0,f,c
  6698  0045D8  3205               	rrcf	??___fltol^0,f,c
  6699  0045DA                     u5290:
  6700  0045DA  2EE8               	decfsz	wreg,f,c
  6701  0045DC  EFE8  F022         	goto	u5295
  6702  0045E0  5005               	movf	??___fltol^0,w,c
  6703  0045E2  6E09               	movwf	___fltol@sign1^0,c
  6704  0045E4  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6705  0045E6  0EFF               	movlw	255
  6706  0045E8  1601               	andwf	___fltol@f1^0,f,c
  6707  0045EA  0EFF               	movlw	255
  6708  0045EC  1602               	andwf	(___fltol@f1+1)^0,f,c
  6709  0045EE  0EFF               	movlw	255
  6710  0045F0  1603               	andwf	(___fltol@f1+2)^0,f,c
  6711  0045F2  0E00               	movlw	0
  6712  0045F4  1604               	andwf	(___fltol@f1+3)^0,f,c
  6713  0045F6  0E96               	movlw	150
  6714  0045F8  5E0A               	subwf	___fltol@exp1^0,f,c
  6715  0045FA  BE0A               	btfsc	___fltol@exp1^0,7,c
  6716  0045FC  EF04  F023         	goto	u5300
  6717  004600  EF02  F023         	goto	u5301
  6718  004604                     u5301:
  6719  004604  EF1A  F023         	goto	l4754
  6720  004608                     u5300:
  6721  004608  500A               	movf	___fltol@exp1^0,w,c
  6722  00460A  0A80               	xorlw	128
  6723  00460C  0F97               	addlw	151
  6724  00460E  B0D8               	btfsc	status,0,c
  6725  004610  EF0C  F023         	goto	u5311
  6726  004614  EF0E  F023         	goto	u5310
  6727  004618                     u5311:
  6728  004618  EF10  F023         	goto	l4750
  6729  00461C                     u5310:
  6730  00461C  EFD3  F022         	goto	l4730
  6731  004620                     l4750:
  6732  004620  90D8               	bcf	status,0,c
  6733  004622  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6734  004624  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6735  004626  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6736  004628  3201               	rrcf	___fltol@f1^0,f,c
  6737  00462A  3E0A               	incfsz	___fltol@exp1^0,f,c
  6738  00462C  EF10  F023         	goto	l4750
  6739  004630  EF32  F023         	goto	l4764
  6740  004634                     l4754:
  6741  004634  0E1F               	movlw	31
  6742  004636  640A               	cpfsgt	___fltol@exp1^0,c
  6743  004638  EF20  F023         	goto	u5321
  6744  00463C  EF22  F023         	goto	u5320
  6745  004640                     u5321:
  6746  004640  EF2A  F023         	goto	l4762
  6747  004644                     u5320:
  6748  004644  EFD3  F022         	goto	l4730
  6749  004648                     l4760:
  6750  004648  90D8               	bcf	status,0,c
  6751  00464A  3601               	rlcf	___fltol@f1^0,f,c
  6752  00464C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6753  00464E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6754  004650  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6755  004652  060A               	decf	___fltol@exp1^0,f,c
  6756  004654                     l4762:
  6757  004654  500A               	movf	___fltol@exp1^0,w,c
  6758  004656  A4D8               	btfss	status,2,c
  6759  004658  EF30  F023         	goto	u5331
  6760  00465C  EF32  F023         	goto	u5330
  6761  004660                     u5331:
  6762  004660  EF24  F023         	goto	l4760
  6763  004664                     u5330:
  6764  004664                     l4764:
  6765  004664  5009               	movf	___fltol@sign1^0,w,c
  6766  004666  B4D8               	btfsc	status,2,c
  6767  004668  EF38  F023         	goto	u5341
  6768  00466C  EF3A  F023         	goto	u5340
  6769  004670                     u5341:
  6770  004670  EF42  F023         	goto	l4768
  6771  004674                     u5340:
  6772  004674  1E04               	comf	(___fltol@f1+3)^0,f,c
  6773  004676  1E03               	comf	(___fltol@f1+2)^0,f,c
  6774  004678  1E02               	comf	(___fltol@f1+1)^0,f,c
  6775  00467A  6C01               	negf	___fltol@f1^0,c
  6776  00467C  0E00               	movlw	0
  6777  00467E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6778  004680  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6779  004682  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6780  004684                     l4768:
  6781  004684  C001  F001         	movff	___fltol@f1,?___fltol
  6782  004688  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6783  00468C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6784  004690  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6785  004694                     l951:
  6786  004694  0012               	return		;funcret
  6787  004696                     __end_of___fltol:
  6788                           	callstack 0
  6789                           
  6790 ;; *************** function ___flsub *****************
  6791 ;; Defined at:
  6792 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  b               4   25[COMRAM] long 
  6795 ;;  a               4   29[COMRAM] long 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;		None
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  4   25[COMRAM] long 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;Total ram usage:        8 bytes
  6812 ;; Hardware stack levels used: 1
  6813 ;; Hardware stack levels required when called: 1
  6814 ;; This function calls:
  6815 ;;		___fladd
  6816 ;; This function is called by:
  6817 ;;		_efgtoa
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text19
  6822  00566E                     __ptext19:
  6823                           	callstack 0
  6824  00566E                     ___flsub:
  6825                           	callstack 24
  6826  00566E  0E00               	movlw	0
  6827  005670  1A1E               	xorwf	___flsub@a^0,f,c
  6828  005672  0E00               	movlw	0
  6829  005674  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6830  005676  0E00               	movlw	0
  6831  005678  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6832  00567A  0E80               	movlw	128
  6833  00567C  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6834  00567E  C01A  F001         	movff	___flsub@b,___fladd@b
  6835  005682  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6836  005686  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6837  00568A  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6838  00568E  C01E  F005         	movff	___flsub@a,___fladd@a
  6839  005692  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6840  005696  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6841  00569A  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6842  00569E  EC21  F014         	call	___fladd	;wreg free
  6843  0056A2  C001  F01A         	movff	?___fladd,?___flsub
  6844  0056A6  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6845  0056AA  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6846  0056AE  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6847  0056B2  0012               	return		;funcret
  6848  0056B4                     __end_of___flsub:
  6849                           	callstack 0
  6850                           
  6851 ;; *************** function ___fladd *****************
  6852 ;; Defined at:
  6853 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  b               4    0[COMRAM] long 
  6856 ;;  a               4    4[COMRAM] long 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  grs             1   15[COMRAM] unsigned char 
  6859 ;;  bexp            1   14[COMRAM] unsigned char 
  6860 ;;  aexp            1   13[COMRAM] unsigned char 
  6861 ;;  signs           1   12[COMRAM] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  4    0[COMRAM] unsigned char 
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6871 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;Total ram usage:       16 bytes
  6876 ;; Hardware stack levels used: 1
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		___flsub
  6881 ;;		_efgtoa
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text20
  6886  002842                     __ptext20:
  6887                           	callstack 0
  6888  002842                     ___fladd:
  6889                           	callstack 24
  6890  002842  5004               	movf	(___fladd@b+3)^0,w,c
  6891  002844  0B80               	andlw	128
  6892  002846  6E0D               	movwf	___fladd@signs^0,c
  6893  002848  5004               	movf	(___fladd@b+3)^0,w,c
  6894  00284A  2404               	addwf	(___fladd@b+3)^0,w,c
  6895  00284C  6E0F               	movwf	___fladd@bexp^0,c
  6896  00284E  AE03               	btfss	(___fladd@b+2)^0,7,c
  6897  002850  EF2C  F014         	goto	u4091
  6898  002854  EF2E  F014         	goto	u4090
  6899  002858                     u4091:
  6900  002858  EF2F  F014         	goto	l4024
  6901  00285C                     u4090:
  6902  00285C  800F               	bsf	___fladd@bexp^0,0,c
  6903  00285E                     l4024:
  6904  00285E  500F               	movf	___fladd@bexp^0,w,c
  6905  002860  B4D8               	btfsc	status,2,c
  6906  002862  EF35  F014         	goto	u4101
  6907  002866  EF37  F014         	goto	u4100
  6908  00286A                     u4101:
  6909  00286A  EF4C  F014         	goto	l4034
  6910  00286E                     u4100:
  6911  00286E  280F               	incf	___fladd@bexp^0,w,c
  6912  002870  A4D8               	btfss	status,2,c
  6913  002872  EF3D  F014         	goto	u4111
  6914  002876  EF3F  F014         	goto	u4110
  6915  00287A                     u4111:
  6916  00287A  EF47  F014         	goto	l4030
  6917  00287E                     u4110:
  6918  00287E  0E00               	movlw	0
  6919  002880  6E01               	movwf	___fladd@b^0,c
  6920  002882  0E00               	movlw	0
  6921  002884  6E02               	movwf	(___fladd@b+1)^0,c
  6922  002886  0E00               	movlw	0
  6923  002888  6E03               	movwf	(___fladd@b+2)^0,c
  6924  00288A  0E00               	movlw	0
  6925  00288C  6E04               	movwf	(___fladd@b+3)^0,c
  6926  00288E                     l4030:
  6927  00288E  8E03               	bsf	(___fladd@b+2)^0,7,c
  6928  002890  0E00               	movlw	0
  6929  002892  6E04               	movwf	(___fladd@b+3)^0,c
  6930  002894  EF54  F014         	goto	l4036
  6931  002898                     l4034:
  6932  002898  0E00               	movlw	0
  6933  00289A  6E01               	movwf	___fladd@b^0,c
  6934  00289C  0E00               	movlw	0
  6935  00289E  6E02               	movwf	(___fladd@b+1)^0,c
  6936  0028A0  0E00               	movlw	0
  6937  0028A2  6E03               	movwf	(___fladd@b+2)^0,c
  6938  0028A4  0E00               	movlw	0
  6939  0028A6  6E04               	movwf	(___fladd@b+3)^0,c
  6940  0028A8                     l4036:
  6941  0028A8  5008               	movf	(___fladd@a+3)^0,w,c
  6942  0028AA  0B80               	andlw	128
  6943  0028AC  6E0E               	movwf	___fladd@aexp^0,c
  6944  0028AE  500D               	movf	___fladd@signs^0,w,c
  6945  0028B0  180E               	xorwf	___fladd@aexp^0,w,c
  6946  0028B2  B4D8               	btfsc	status,2,c
  6947  0028B4  EF5E  F014         	goto	u4121
  6948  0028B8  EF60  F014         	goto	u4120
  6949  0028BC                     u4121:
  6950  0028BC  EF61  F014         	goto	l4042
  6951  0028C0                     u4120:
  6952  0028C0  8C0D               	bsf	___fladd@signs^0,6,c
  6953  0028C2                     l4042:
  6954  0028C2  5008               	movf	(___fladd@a+3)^0,w,c
  6955  0028C4  2408               	addwf	(___fladd@a+3)^0,w,c
  6956  0028C6  6E0E               	movwf	___fladd@aexp^0,c
  6957  0028C8  AE07               	btfss	(___fladd@a+2)^0,7,c
  6958  0028CA  EF69  F014         	goto	u4131
  6959  0028CE  EF6B  F014         	goto	u4130
  6960  0028D2                     u4131:
  6961  0028D2  EF6C  F014         	goto	l4048
  6962  0028D6                     u4130:
  6963  0028D6  800E               	bsf	___fladd@aexp^0,0,c
  6964  0028D8                     l4048:
  6965  0028D8  500E               	movf	___fladd@aexp^0,w,c
  6966  0028DA  B4D8               	btfsc	status,2,c
  6967  0028DC  EF72  F014         	goto	u4141
  6968  0028E0  EF74  F014         	goto	u4140
  6969  0028E4                     u4141:
  6970  0028E4  EF89  F014         	goto	l4058
  6971  0028E8                     u4140:
  6972  0028E8  280E               	incf	___fladd@aexp^0,w,c
  6973  0028EA  A4D8               	btfss	status,2,c
  6974  0028EC  EF7A  F014         	goto	u4151
  6975  0028F0  EF7C  F014         	goto	u4150
  6976  0028F4                     u4151:
  6977  0028F4  EF84  F014         	goto	l4054
  6978  0028F8                     u4150:
  6979  0028F8  0E00               	movlw	0
  6980  0028FA  6E05               	movwf	___fladd@a^0,c
  6981  0028FC  0E00               	movlw	0
  6982  0028FE  6E06               	movwf	(___fladd@a+1)^0,c
  6983  002900  0E00               	movlw	0
  6984  002902  6E07               	movwf	(___fladd@a+2)^0,c
  6985  002904  0E00               	movlw	0
  6986  002906  6E08               	movwf	(___fladd@a+3)^0,c
  6987  002908                     l4054:
  6988  002908  8E07               	bsf	(___fladd@a+2)^0,7,c
  6989  00290A  0E00               	movlw	0
  6990  00290C  6E08               	movwf	(___fladd@a+3)^0,c
  6991  00290E  EF91  F014         	goto	l4060
  6992  002912                     l4058:
  6993  002912  0E00               	movlw	0
  6994  002914  6E05               	movwf	___fladd@a^0,c
  6995  002916  0E00               	movlw	0
  6996  002918  6E06               	movwf	(___fladd@a+1)^0,c
  6997  00291A  0E00               	movlw	0
  6998  00291C  6E07               	movwf	(___fladd@a+2)^0,c
  6999  00291E  0E00               	movlw	0
  7000  002920  6E08               	movwf	(___fladd@a+3)^0,c
  7001  002922                     l4060:
  7002  002922  500F               	movf	___fladd@bexp^0,w,c
  7003  002924  5C0E               	subwf	___fladd@aexp^0,w,c
  7004  002926  B0D8               	btfsc	status,0,c
  7005  002928  EF98  F014         	goto	u4161
  7006  00292C  EF9A  F014         	goto	u4160
  7007  002930                     u4161:
  7008  002930  EFC1  F014         	goto	l4096
  7009  002934                     u4160:
  7010  002934  AC0D               	btfss	___fladd@signs^0,6,c
  7011  002936  EF9F  F014         	goto	u4171
  7012  00293A  EFA1  F014         	goto	u4170
  7013  00293E                     u4171:
  7014  00293E  EFA3  F014         	goto	l4066
  7015  002942                     u4170:
  7016  002942  0E80               	movlw	128
  7017  002944  1A0D               	xorwf	___fladd@signs^0,f,c
  7018  002946                     l4066:
  7019  002946  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7020  00294A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7021  00294E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7022  002952  C001  F010         	movff	___fladd@b,___fladd@grs
  7023  002956  C005  F001         	movff	___fladd@a,___fladd@b
  7024  00295A  C010  F005         	movff	___fladd@grs,___fladd@a
  7025  00295E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7026  002962  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7027  002966  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7028  00296A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7029  00296E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7030  002972  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7031  002976  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7032  00297A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7033  00297E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7034  002982                     l4096:
  7035  002982  0E00               	movlw	0
  7036  002984  6E10               	movwf	___fladd@grs^0,c
  7037  002986  500F               	movf	___fladd@bexp^0,w,c
  7038  002988  C00E  F009         	movff	___fladd@aexp,??___fladd
  7039  00298C  6A0A               	clrf	(??___fladd+1)^0,c
  7040  00298E  5E09               	subwf	??___fladd^0,f,c
  7041  002990  0E00               	movlw	0
  7042  002992  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7043  002994  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7044  002996  EFD6  F014         	goto	u4181
  7045  00299A  500A               	movf	(??___fladd+1)^0,w,c
  7046  00299C  E109               	bnz	u4180
  7047  00299E  0E1A               	movlw	26
  7048  0029A0  5C09               	subwf	??___fladd^0,w,c
  7049  0029A2  A0D8               	btfss	status,0,c
  7050  0029A4  EFD6  F014         	goto	u4181
  7051  0029A8  EFD8  F014         	goto	u4180
  7052  0029AC                     u4181:
  7053  0029AC  EF0F  F015         	goto	l1183
  7054  0029B0                     u4180:
  7055  0029B0  5001               	movf	___fladd@b^0,w,c
  7056  0029B2  1002               	iorwf	(___fladd@b+1)^0,w,c
  7057  0029B4  1003               	iorwf	(___fladd@b+2)^0,w,c
  7058  0029B6  1004               	iorwf	(___fladd@b+3)^0,w,c
  7059  0029B8  A4D8               	btfss	status,2,c
  7060  0029BA  EFE1  F014         	goto	u4191
  7061  0029BE  EFE4  F014         	goto	u4190
  7062  0029C2                     u4191:
  7063  0029C2  0E01               	movlw	1
  7064  0029C4  EFE5  F014         	goto	u4200
  7065  0029C8                     u4190:
  7066  0029C8  0E00               	movlw	0
  7067  0029CA                     u4200:
  7068  0029CA  6E10               	movwf	___fladd@grs^0,c
  7069  0029CC  0E00               	movlw	0
  7070  0029CE  6E01               	movwf	___fladd@b^0,c
  7071  0029D0  0E00               	movlw	0
  7072  0029D2  6E02               	movwf	(___fladd@b+1)^0,c
  7073  0029D4  0E00               	movlw	0
  7074  0029D6  6E03               	movwf	(___fladd@b+2)^0,c
  7075  0029D8  0E00               	movlw	0
  7076  0029DA  6E04               	movwf	(___fladd@b+3)^0,c
  7077  0029DC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7078  0029E0  EF18  F015         	goto	l1182
  7079  0029E4                     l1184:
  7080  0029E4  A010               	btfss	___fladd@grs^0,0,c
  7081  0029E6  EFF7  F014         	goto	u4211
  7082  0029EA  EFF9  F014         	goto	u4210
  7083  0029EE                     u4211:
  7084  0029EE  EFFF  F014         	goto	l4108
  7085  0029F2                     u4210:
  7086  0029F2  90D8               	bcf	status,0,c
  7087  0029F4  3010               	rrcf	___fladd@grs^0,w,c
  7088  0029F6  0901               	iorlw	1
  7089  0029F8  6E10               	movwf	___fladd@grs^0,c
  7090  0029FA  EF01  F015         	goto	l4110
  7091  0029FE                     l4108:
  7092  0029FE  90D8               	bcf	status,0,c
  7093  002A00  3210               	rrcf	___fladd@grs^0,f,c
  7094  002A02                     l4110:
  7095  002A02  A001               	btfss	___fladd@b^0,0,c
  7096  002A04  EF06  F015         	goto	u4221
  7097  002A08  EF08  F015         	goto	u4220
  7098  002A0C                     u4221:
  7099  002A0C  EF09  F015         	goto	l4114
  7100  002A10                     u4220:
  7101  002A10  8E10               	bsf	___fladd@grs^0,7,c
  7102  002A12                     l4114:
  7103  002A12  3404               	rlcf	(___fladd@b+3)^0,w,c
  7104  002A14  3204               	rrcf	(___fladd@b+3)^0,f,c
  7105  002A16  3203               	rrcf	(___fladd@b+2)^0,f,c
  7106  002A18  3202               	rrcf	(___fladd@b+1)^0,f,c
  7107  002A1A  3201               	rrcf	___fladd@b^0,f,c
  7108  002A1C  2A0F               	incf	___fladd@bexp^0,f,c
  7109  002A1E                     l1183:
  7110  002A1E  500E               	movf	___fladd@aexp^0,w,c
  7111  002A20  5C0F               	subwf	___fladd@bexp^0,w,c
  7112  002A22  A0D8               	btfss	status,0,c
  7113  002A24  EF16  F015         	goto	u4231
  7114  002A28  EF18  F015         	goto	u4230
  7115  002A2C                     u4231:
  7116  002A2C  EFF2  F014         	goto	l1184
  7117  002A30                     u4230:
  7118  002A30                     l1182:
  7119  002A30  BC0D               	btfsc	___fladd@signs^0,6,c
  7120  002A32  EF1D  F015         	goto	u4241
  7121  002A36  EF1F  F015         	goto	u4240
  7122  002A3A                     u4241:
  7123  002A3A  EF5F  F015         	goto	l4142
  7124  002A3E                     u4240:
  7125  002A3E  500F               	movf	___fladd@bexp^0,w,c
  7126  002A40  A4D8               	btfss	status,2,c
  7127  002A42  EF25  F015         	goto	u4251
  7128  002A46  EF27  F015         	goto	u4250
  7129  002A4A                     u4251:
  7130  002A4A  EF31  F015         	goto	l4124
  7131  002A4E                     u4250:
  7132  002A4E  0E00               	movlw	0
  7133  002A50  6E01               	movwf	?___fladd^0,c
  7134  002A52  0E00               	movlw	0
  7135  002A54  6E02               	movwf	(?___fladd+1)^0,c
  7136  002A56  0E00               	movlw	0
  7137  002A58  6E03               	movwf	(?___fladd+2)^0,c
  7138  002A5A  0E00               	movlw	0
  7139  002A5C  6E04               	movwf	(?___fladd+3)^0,c
  7140  002A5E  EF80  F016         	goto	l1191
  7141  002A62                     l4124:
  7142  002A62  5005               	movf	___fladd@a^0,w,c
  7143  002A64  2601               	addwf	___fladd@b^0,f,c
  7144  002A66  5006               	movf	(___fladd@a+1)^0,w,c
  7145  002A68  2202               	addwfc	(___fladd@b+1)^0,f,c
  7146  002A6A  5007               	movf	(___fladd@a+2)^0,w,c
  7147  002A6C  2203               	addwfc	(___fladd@b+2)^0,f,c
  7148  002A6E  5008               	movf	(___fladd@a+3)^0,w,c
  7149  002A70  2204               	addwfc	(___fladd@b+3)^0,f,c
  7150  002A72  A004               	btfss	(___fladd@b+3)^0,0,c
  7151  002A74  EF3E  F015         	goto	u4261
  7152  002A78  EF40  F015         	goto	u4260
  7153  002A7C                     u4261:
  7154  002A7C  EFEC  F015         	goto	l4178
  7155  002A80                     u4260:
  7156  002A80  A010               	btfss	___fladd@grs^0,0,c
  7157  002A82  EF45  F015         	goto	u4271
  7158  002A86  EF47  F015         	goto	u4270
  7159  002A8A                     u4271:
  7160  002A8A  EF4D  F015         	goto	l4132
  7161  002A8E                     u4270:
  7162  002A8E  90D8               	bcf	status,0,c
  7163  002A90  3010               	rrcf	___fladd@grs^0,w,c
  7164  002A92  0901               	iorlw	1
  7165  002A94  6E10               	movwf	___fladd@grs^0,c
  7166  002A96  EF4F  F015         	goto	l4134
  7167  002A9A                     l4132:
  7168  002A9A  90D8               	bcf	status,0,c
  7169  002A9C  3210               	rrcf	___fladd@grs^0,f,c
  7170  002A9E                     l4134:
  7171  002A9E  A001               	btfss	___fladd@b^0,0,c
  7172  002AA0  EF54  F015         	goto	u4281
  7173  002AA4  EF56  F015         	goto	u4280
  7174  002AA8                     u4281:
  7175  002AA8  EF57  F015         	goto	l4138
  7176  002AAC                     u4280:
  7177  002AAC  8E10               	bsf	___fladd@grs^0,7,c
  7178  002AAE                     l4138:
  7179  002AAE  3404               	rlcf	(___fladd@b+3)^0,w,c
  7180  002AB0  3204               	rrcf	(___fladd@b+3)^0,f,c
  7181  002AB2  3203               	rrcf	(___fladd@b+2)^0,f,c
  7182  002AB4  3202               	rrcf	(___fladd@b+1)^0,f,c
  7183  002AB6  3201               	rrcf	___fladd@b^0,f,c
  7184  002AB8  2A0F               	incf	___fladd@bexp^0,f,c
  7185  002ABA  EFEC  F015         	goto	l4178
  7186  002ABE                     l4142:
  7187  002ABE  5005               	movf	___fladd@a^0,w,c
  7188  002AC0  5C01               	subwf	___fladd@b^0,w,c
  7189  002AC2  5006               	movf	(___fladd@a+1)^0,w,c
  7190  002AC4  5802               	subwfb	(___fladd@b+1)^0,w,c
  7191  002AC6  5007               	movf	(___fladd@a+2)^0,w,c
  7192  002AC8  5803               	subwfb	(___fladd@b+2)^0,w,c
  7193  002ACA  5004               	movf	(___fladd@b+3)^0,w,c
  7194  002ACC  0A80               	xorlw	128
  7195  002ACE  6E09               	movwf	??___fladd^0,c
  7196  002AD0  5008               	movf	(___fladd@a+3)^0,w,c
  7197  002AD2  0A80               	xorlw	128
  7198  002AD4  5809               	subwfb	??___fladd^0,w,c
  7199  002AD6  B0D8               	btfsc	status,0,c
  7200  002AD8  EF70  F015         	goto	u4291
  7201  002ADC  EF72  F015         	goto	u4290
  7202  002AE0                     u4291:
  7203  002AE0  EF9D  F015         	goto	l4152
  7204  002AE4                     u4290:
  7205  002AE4  5001               	movf	___fladd@b^0,w,c
  7206  002AE6  5C05               	subwf	___fladd@a^0,w,c
  7207  002AE8  6E09               	movwf	??___fladd^0,c
  7208  002AEA  5002               	movf	(___fladd@b+1)^0,w,c
  7209  002AEC  5806               	subwfb	(___fladd@a+1)^0,w,c
  7210  002AEE  6E0A               	movwf	(??___fladd+1)^0,c
  7211  002AF0  5003               	movf	(___fladd@b+2)^0,w,c
  7212  002AF2  5807               	subwfb	(___fladd@a+2)^0,w,c
  7213  002AF4  6E0B               	movwf	(??___fladd+2)^0,c
  7214  002AF6  5004               	movf	(___fladd@b+3)^0,w,c
  7215  002AF8  5808               	subwfb	(___fladd@a+3)^0,w,c
  7216  002AFA  6E0C               	movwf	(??___fladd+3)^0,c
  7217  002AFC  0EFF               	movlw	255
  7218  002AFE  2409               	addwf	??___fladd^0,w,c
  7219  002B00  6E01               	movwf	___fladd@b^0,c
  7220  002B02  0EFF               	movlw	255
  7221  002B04  200A               	addwfc	(??___fladd+1)^0,w,c
  7222  002B06  6E02               	movwf	(___fladd@b+1)^0,c
  7223  002B08  0EFF               	movlw	255
  7224  002B0A  200B               	addwfc	(??___fladd+2)^0,w,c
  7225  002B0C  6E03               	movwf	(___fladd@b+2)^0,c
  7226  002B0E  0EFF               	movlw	255
  7227  002B10  200C               	addwfc	(??___fladd+3)^0,w,c
  7228  002B12  6E04               	movwf	(___fladd@b+3)^0,c
  7229  002B14  0E80               	movlw	128
  7230  002B16  1A0D               	xorwf	___fladd@signs^0,f,c
  7231  002B18  6C10               	negf	___fladd@grs^0,c
  7232  002B1A  5010               	movf	___fladd@grs^0,w,c
  7233  002B1C  A4D8               	btfss	status,2,c
  7234  002B1E  EF93  F015         	goto	u4301
  7235  002B22  EF95  F015         	goto	u4300
  7236  002B26                     u4301:
  7237  002B26  EFA5  F015         	goto	l1199
  7238  002B2A                     u4300:
  7239  002B2A  0E01               	movlw	1
  7240  002B2C  2601               	addwf	___fladd@b^0,f,c
  7241  002B2E  0E00               	movlw	0
  7242  002B30  2202               	addwfc	(___fladd@b+1)^0,f,c
  7243  002B32  2203               	addwfc	(___fladd@b+2)^0,f,c
  7244  002B34  2204               	addwfc	(___fladd@b+3)^0,f,c
  7245  002B36  EFA5  F015         	goto	l1199
  7246  002B3A                     l4152:
  7247  002B3A  5005               	movf	___fladd@a^0,w,c
  7248  002B3C  5E01               	subwf	___fladd@b^0,f,c
  7249  002B3E  5006               	movf	(___fladd@a+1)^0,w,c
  7250  002B40  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7251  002B42  5007               	movf	(___fladd@a+2)^0,w,c
  7252  002B44  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7253  002B46  5008               	movf	(___fladd@a+3)^0,w,c
  7254  002B48  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7255  002B4A                     l1199:
  7256  002B4A  5001               	movf	___fladd@b^0,w,c
  7257  002B4C  1002               	iorwf	(___fladd@b+1)^0,w,c
  7258  002B4E  1003               	iorwf	(___fladd@b+2)^0,w,c
  7259  002B50  1004               	iorwf	(___fladd@b+3)^0,w,c
  7260  002B52  A4D8               	btfss	status,2,c
  7261  002B54  EFAE  F015         	goto	u4311
  7262  002B58  EFB0  F015         	goto	u4310
  7263  002B5C                     u4311:
  7264  002B5C  EFE5  F015         	goto	l4176
  7265  002B60                     u4310:
  7266  002B60  5010               	movf	___fladd@grs^0,w,c
  7267  002B62  A4D8               	btfss	status,2,c
  7268  002B64  EFB6  F015         	goto	u4321
  7269  002B68  EFB8  F015         	goto	u4320
  7270  002B6C                     u4321:
  7271  002B6C  EFE5  F015         	goto	l4176
  7272  002B70                     u4320:
  7273  002B70  0E00               	movlw	0
  7274  002B72  6E01               	movwf	?___fladd^0,c
  7275  002B74  0E00               	movlw	0
  7276  002B76  6E02               	movwf	(?___fladd+1)^0,c
  7277  002B78  0E00               	movlw	0
  7278  002B7A  6E03               	movwf	(?___fladd+2)^0,c
  7279  002B7C  0E00               	movlw	0
  7280  002B7E  6E04               	movwf	(?___fladd+3)^0,c
  7281  002B80  EF80  F016         	goto	l1191
  7282  002B84                     l4160:
  7283  002B84  90D8               	bcf	status,0,c
  7284  002B86  3601               	rlcf	___fladd@b^0,f,c
  7285  002B88  3602               	rlcf	(___fladd@b+1)^0,f,c
  7286  002B8A  3603               	rlcf	(___fladd@b+2)^0,f,c
  7287  002B8C  3604               	rlcf	(___fladd@b+3)^0,f,c
  7288  002B8E  AE10               	btfss	___fladd@grs^0,7,c
  7289  002B90  EFCC  F015         	goto	u4331
  7290  002B94  EFCE  F015         	goto	u4330
  7291  002B98                     u4331:
  7292  002B98  EFCF  F015         	goto	l4166
  7293  002B9C                     u4330:
  7294  002B9C  8001               	bsf	___fladd@b^0,0,c
  7295  002B9E                     l4166:
  7296  002B9E  A010               	btfss	___fladd@grs^0,0,c
  7297  002BA0  EFD4  F015         	goto	u4341
  7298  002BA4  EFD6  F015         	goto	u4340
  7299  002BA8                     u4341:
  7300  002BA8  EFDA  F015         	goto	l4170
  7301  002BAC                     u4340:
  7302  002BAC  80D8               	bsf	status,0,c
  7303  002BAE  3610               	rlcf	___fladd@grs^0,f,c
  7304  002BB0  EFDC  F015         	goto	l4172
  7305  002BB4                     l4170:
  7306  002BB4  90D8               	bcf	status,0,c
  7307  002BB6  3610               	rlcf	___fladd@grs^0,f,c
  7308  002BB8                     l4172:
  7309  002BB8  500F               	movf	___fladd@bexp^0,w,c
  7310  002BBA  B4D8               	btfsc	status,2,c
  7311  002BBC  EFE2  F015         	goto	u4351
  7312  002BC0  EFE4  F015         	goto	u4350
  7313  002BC4                     u4351:
  7314  002BC4  EFE5  F015         	goto	l4176
  7315  002BC8                     u4350:
  7316  002BC8  060F               	decf	___fladd@bexp^0,f,c
  7317  002BCA                     l4176:
  7318  002BCA  AE03               	btfss	(___fladd@b+2)^0,7,c
  7319  002BCC  EFEA  F015         	goto	u4361
  7320  002BD0  EFEC  F015         	goto	u4360
  7321  002BD4                     u4361:
  7322  002BD4  EFC2  F015         	goto	l4160
  7323  002BD8                     u4360:
  7324  002BD8                     l4178:
  7325  002BD8  0E00               	movlw	0
  7326  002BDA  6E0E               	movwf	___fladd@aexp^0,c
  7327  002BDC  AE10               	btfss	___fladd@grs^0,7,c
  7328  002BDE  EFF3  F015         	goto	u4371
  7329  002BE2  EFF5  F015         	goto	u4370
  7330  002BE6                     u4371:
  7331  002BE6  EF0D  F016         	goto	l1208
  7332  002BEA                     u4370:
  7333  002BEA  C010  F009         	movff	___fladd@grs,??___fladd
  7334  002BEE  0E7F               	movlw	127
  7335  002BF0  1609               	andwf	??___fladd^0,f,c
  7336  002BF2  B4D8               	btfsc	status,2,c
  7337  002BF4  EFFE  F015         	goto	u4381
  7338  002BF8  EF00  F016         	goto	u4380
  7339  002BFC                     u4381:
  7340  002BFC  EF04  F016         	goto	l1209
  7341  002C00                     u4380:
  7342  002C00                     l4184:
  7343  002C00  0E01               	movlw	1
  7344  002C02  6E0E               	movwf	___fladd@aexp^0,c
  7345  002C04  EF0D  F016         	goto	l1208
  7346  002C08                     l1209:
  7347  002C08  A001               	btfss	___fladd@b^0,0,c
  7348  002C0A  EF09  F016         	goto	u4391
  7349  002C0E  EF0B  F016         	goto	u4390
  7350  002C12                     u4391:
  7351  002C12  EF0D  F016         	goto	l1208
  7352  002C16                     u4390:
  7353  002C16  EF00  F016         	goto	l4184
  7354  002C1A                     l1208:
  7355  002C1A  500E               	movf	___fladd@aexp^0,w,c
  7356  002C1C  B4D8               	btfsc	status,2,c
  7357  002C1E  EF13  F016         	goto	u4401
  7358  002C22  EF15  F016         	goto	u4400
  7359  002C26                     u4401:
  7360  002C26  EF40  F016         	goto	l4196
  7361  002C2A                     u4400:
  7362  002C2A  0E01               	movlw	1
  7363  002C2C  2601               	addwf	___fladd@b^0,f,c
  7364  002C2E  0E00               	movlw	0
  7365  002C30  2202               	addwfc	(___fladd@b+1)^0,f,c
  7366  002C32  2203               	addwfc	(___fladd@b+2)^0,f,c
  7367  002C34  2204               	addwfc	(___fladd@b+3)^0,f,c
  7368  002C36  A004               	btfss	(___fladd@b+3)^0,0,c
  7369  002C38  EF20  F016         	goto	u4411
  7370  002C3C  EF22  F016         	goto	u4410
  7371  002C40                     u4411:
  7372  002C40  EF40  F016         	goto	l4196
  7373  002C44                     u4410:
  7374  002C44  C001  F009         	movff	___fladd@b,??___fladd
  7375  002C48  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7376  002C4C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7377  002C50  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7378  002C54  340C               	rlcf	(??___fladd+3)^0,w,c
  7379  002C56  320C               	rrcf	(??___fladd+3)^0,f,c
  7380  002C58  320B               	rrcf	(??___fladd+2)^0,f,c
  7381  002C5A  320A               	rrcf	(??___fladd+1)^0,f,c
  7382  002C5C  3209               	rrcf	??___fladd^0,f,c
  7383  002C5E  C009  F001         	movff	??___fladd,___fladd@b
  7384  002C62  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7385  002C66  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7386  002C6A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7387  002C6E  280F               	incf	___fladd@bexp^0,w,c
  7388  002C70  B4D8               	btfsc	status,2,c
  7389  002C72  EF3D  F016         	goto	u4421
  7390  002C76  EF3F  F016         	goto	u4420
  7391  002C7A                     u4421:
  7392  002C7A  EF40  F016         	goto	l4196
  7393  002C7E                     u4420:
  7394  002C7E  2A0F               	incf	___fladd@bexp^0,f,c
  7395  002C80                     l4196:
  7396  002C80  280F               	incf	___fladd@bexp^0,w,c
  7397  002C82  B4D8               	btfsc	status,2,c
  7398  002C84  EF46  F016         	goto	u4431
  7399  002C88  EF48  F016         	goto	u4430
  7400  002C8C                     u4431:
  7401  002C8C  EF50  F016         	goto	l4200
  7402  002C90                     u4430:
  7403  002C90  500F               	movf	___fladd@bexp^0,w,c
  7404  002C92  A4D8               	btfss	status,2,c
  7405  002C94  EF4E  F016         	goto	u4441
  7406  002C98  EF50  F016         	goto	u4440
  7407  002C9C                     u4441:
  7408  002C9C  EF62  F016         	goto	l4204
  7409  002CA0                     u4440:
  7410  002CA0                     l4200:
  7411  002CA0  0E00               	movlw	0
  7412  002CA2  6E01               	movwf	___fladd@b^0,c
  7413  002CA4  0E00               	movlw	0
  7414  002CA6  6E02               	movwf	(___fladd@b+1)^0,c
  7415  002CA8  0E00               	movlw	0
  7416  002CAA  6E03               	movwf	(___fladd@b+2)^0,c
  7417  002CAC  0E00               	movlw	0
  7418  002CAE  6E04               	movwf	(___fladd@b+3)^0,c
  7419  002CB0  500F               	movf	___fladd@bexp^0,w,c
  7420  002CB2  A4D8               	btfss	status,2,c
  7421  002CB4  EF5E  F016         	goto	u4451
  7422  002CB8  EF60  F016         	goto	u4450
  7423  002CBC                     u4451:
  7424  002CBC  EF62  F016         	goto	l4204
  7425  002CC0                     u4450:
  7426  002CC0  0E00               	movlw	0
  7427  002CC2  6E0D               	movwf	___fladd@signs^0,c
  7428  002CC4                     l4204:
  7429  002CC4  A00F               	btfss	___fladd@bexp^0,0,c
  7430  002CC6  EF67  F016         	goto	u4461
  7431  002CCA  EF69  F016         	goto	u4460
  7432  002CCE                     u4461:
  7433  002CCE  EF6C  F016         	goto	l4208
  7434  002CD2                     u4460:
  7435  002CD2  8E03               	bsf	(___fladd@b+2)^0,7,c
  7436  002CD4  EF6D  F016         	goto	l4210
  7437  002CD8                     l4208:
  7438  002CD8  9E03               	bcf	(___fladd@b+2)^0,7,c
  7439  002CDA                     l4210:
  7440  002CDA  90D8               	bcf	status,0,c
  7441  002CDC  300F               	rrcf	___fladd@bexp^0,w,c
  7442  002CDE  6E04               	movwf	(___fladd@b+3)^0,c
  7443  002CE0  AE0D               	btfss	___fladd@signs^0,7,c
  7444  002CE2  EF75  F016         	goto	u4471
  7445  002CE6  EF77  F016         	goto	u4470
  7446  002CEA                     u4471:
  7447  002CEA  EF78  F016         	goto	l4216
  7448  002CEE                     u4470:
  7449  002CEE  8E04               	bsf	(___fladd@b+3)^0,7,c
  7450  002CF0                     l4216:
  7451  002CF0  C001  F001         	movff	___fladd@b,?___fladd
  7452  002CF4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7453  002CF8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7454  002CFC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7455  002D00                     l1191:
  7456  002D00  0012               	return		;funcret
  7457  002D02                     __end_of___fladd:
  7458                           	callstack 0
  7459                           
  7460 ;; *************** function ___flneg *****************
  7461 ;; Defined at:
  7462 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  f1              4    0[COMRAM] unsigned char 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;		None
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  4    0[COMRAM] unsigned char 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7480 ;;Total ram usage:        4 bytes
  7481 ;; Hardware stack levels used: 1
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_efgtoa
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text21
  7490  0057EA                     __ptext21:
  7491                           	callstack 0
  7492  0057EA                     ___flneg:
  7493                           	callstack 25
  7494  0057EA  5001               	movf	___flneg@f1^0,w,c
  7495  0057EC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7496  0057EE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7497  0057F0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7498  0057F2  B4D8               	btfsc	status,2,c
  7499  0057F4  EFFE  F02B         	goto	u5271
  7500  0057F8  EF00  F02C         	goto	u5270
  7501  0057FC                     u5271:
  7502  0057FC  EF08  F02C         	goto	l4724
  7503  005800                     u5270:
  7504  005800  0E00               	movlw	0
  7505  005802  1A01               	xorwf	___flneg@f1^0,f,c
  7506  005804  0E00               	movlw	0
  7507  005806  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7508  005808  0E00               	movlw	0
  7509  00580A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7510  00580C  0E80               	movlw	128
  7511  00580E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7512  005810                     l4724:
  7513  005810  C001  F001         	movff	___flneg@f1,?___flneg
  7514  005814  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7515  005818  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7516  00581C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7517  005820  0012               	return		;funcret
  7518  005822                     __end_of___flneg:
  7519                           	callstack 0
  7520                           
  7521 ;; *************** function ___flmul *****************
  7522 ;; Defined at:
  7523 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  b               4    0[COMRAM] unsigned char 
  7526 ;;  a               4    4[COMRAM] unsigned char 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  prod            4   19[COMRAM] struct .
  7529 ;;  grs             4   13[COMRAM] unsigned long 
  7530 ;;  temp            2   23[COMRAM] struct .
  7531 ;;  bexp            1   18[COMRAM] unsigned char 
  7532 ;;  aexp            1   17[COMRAM] unsigned char 
  7533 ;;  sign            1   12[COMRAM] unsigned char 
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  4    0[COMRAM] unsigned char 
  7536 ;; Registers used:
  7537 ;;		wreg, status,2, status,0, prodl, prodh
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7543 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7544 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7545 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7546 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7547 ;;Total ram usage:       25 bytes
  7548 ;; Hardware stack levels used: 1
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_efgtoa
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text22
  7557  002D02                     __ptext22:
  7558                           	callstack 0
  7559  002D02                     ___flmul:
  7560                           	callstack 25
  7561  002D02  5004               	movf	(___flmul@b+3)^0,w,c
  7562  002D04  0B80               	andlw	128
  7563  002D06  6E0D               	movwf	___flmul@sign^0,c
  7564  002D08  5004               	movf	(___flmul@b+3)^0,w,c
  7565  002D0A  2404               	addwf	(___flmul@b+3)^0,w,c
  7566  002D0C  6E13               	movwf	___flmul@bexp^0,c
  7567  002D0E  AE03               	btfss	(___flmul@b+2)^0,7,c
  7568  002D10  EF8C  F016         	goto	u4881
  7569  002D14  EF8E  F016         	goto	u4880
  7570  002D18                     u4881:
  7571  002D18  EF8F  F016         	goto	l4472
  7572  002D1C                     u4880:
  7573  002D1C  8013               	bsf	___flmul@bexp^0,0,c
  7574  002D1E                     l4472:
  7575  002D1E  5013               	movf	___flmul@bexp^0,w,c
  7576  002D20  B4D8               	btfsc	status,2,c
  7577  002D22  EF95  F016         	goto	u4891
  7578  002D26  EF97  F016         	goto	u4890
  7579  002D2A                     u4891:
  7580  002D2A  EFAA  F016         	goto	l4480
  7581  002D2E                     u4890:
  7582  002D2E  2813               	incf	___flmul@bexp^0,w,c
  7583  002D30  A4D8               	btfss	status,2,c
  7584  002D32  EF9D  F016         	goto	u4901
  7585  002D36  EF9F  F016         	goto	u4900
  7586  002D3A                     u4901:
  7587  002D3A  EFA7  F016         	goto	l4478
  7588  002D3E                     u4900:
  7589  002D3E  0E00               	movlw	0
  7590  002D40  6E01               	movwf	___flmul@b^0,c
  7591  002D42  0E00               	movlw	0
  7592  002D44  6E02               	movwf	(___flmul@b+1)^0,c
  7593  002D46  0E00               	movlw	0
  7594  002D48  6E03               	movwf	(___flmul@b+2)^0,c
  7595  002D4A  0E00               	movlw	0
  7596  002D4C  6E04               	movwf	(___flmul@b+3)^0,c
  7597  002D4E                     l4478:
  7598  002D4E  8E03               	bsf	(___flmul@b+2)^0,7,c
  7599  002D50  EFB2  F016         	goto	l4482
  7600  002D54                     l4480:
  7601  002D54  0E00               	movlw	0
  7602  002D56  6E01               	movwf	___flmul@b^0,c
  7603  002D58  0E00               	movlw	0
  7604  002D5A  6E02               	movwf	(___flmul@b+1)^0,c
  7605  002D5C  0E00               	movlw	0
  7606  002D5E  6E03               	movwf	(___flmul@b+2)^0,c
  7607  002D60  0E00               	movlw	0
  7608  002D62  6E04               	movwf	(___flmul@b+3)^0,c
  7609  002D64                     l4482:
  7610  002D64  5008               	movf	(___flmul@a+3)^0,w,c
  7611  002D66  0B80               	andlw	128
  7612  002D68  1A0D               	xorwf	___flmul@sign^0,f,c
  7613  002D6A  5008               	movf	(___flmul@a+3)^0,w,c
  7614  002D6C  2408               	addwf	(___flmul@a+3)^0,w,c
  7615  002D6E  6E12               	movwf	___flmul@aexp^0,c
  7616  002D70  AE07               	btfss	(___flmul@a+2)^0,7,c
  7617  002D72  EFBD  F016         	goto	u4911
  7618  002D76  EFBF  F016         	goto	u4910
  7619  002D7A                     u4911:
  7620  002D7A  EFC0  F016         	goto	l4490
  7621  002D7E                     u4910:
  7622  002D7E  8012               	bsf	___flmul@aexp^0,0,c
  7623  002D80                     l4490:
  7624  002D80  5012               	movf	___flmul@aexp^0,w,c
  7625  002D82  B4D8               	btfsc	status,2,c
  7626  002D84  EFC6  F016         	goto	u4921
  7627  002D88  EFC8  F016         	goto	u4920
  7628  002D8C                     u4921:
  7629  002D8C  EFDB  F016         	goto	l4498
  7630  002D90                     u4920:
  7631  002D90  2812               	incf	___flmul@aexp^0,w,c
  7632  002D92  A4D8               	btfss	status,2,c
  7633  002D94  EFCE  F016         	goto	u4931
  7634  002D98  EFD0  F016         	goto	u4930
  7635  002D9C                     u4931:
  7636  002D9C  EFD8  F016         	goto	l4496
  7637  002DA0                     u4930:
  7638  002DA0  0E00               	movlw	0
  7639  002DA2  6E05               	movwf	___flmul@a^0,c
  7640  002DA4  0E00               	movlw	0
  7641  002DA6  6E06               	movwf	(___flmul@a+1)^0,c
  7642  002DA8  0E00               	movlw	0
  7643  002DAA  6E07               	movwf	(___flmul@a+2)^0,c
  7644  002DAC  0E00               	movlw	0
  7645  002DAE  6E08               	movwf	(___flmul@a+3)^0,c
  7646  002DB0                     l4496:
  7647  002DB0  8E07               	bsf	(___flmul@a+2)^0,7,c
  7648  002DB2  EFE3  F016         	goto	l1268
  7649  002DB6                     l4498:
  7650  002DB6  0E00               	movlw	0
  7651  002DB8  6E05               	movwf	___flmul@a^0,c
  7652  002DBA  0E00               	movlw	0
  7653  002DBC  6E06               	movwf	(___flmul@a+1)^0,c
  7654  002DBE  0E00               	movlw	0
  7655  002DC0  6E07               	movwf	(___flmul@a+2)^0,c
  7656  002DC2  0E00               	movlw	0
  7657  002DC4  6E08               	movwf	(___flmul@a+3)^0,c
  7658  002DC6                     l1268:
  7659  002DC6  5012               	movf	___flmul@aexp^0,w,c
  7660  002DC8  B4D8               	btfsc	status,2,c
  7661  002DCA  EFE9  F016         	goto	u4941
  7662  002DCE  EFEB  F016         	goto	u4940
  7663  002DD2                     u4941:
  7664  002DD2  EFF3  F016         	goto	l4502
  7665  002DD6                     u4940:
  7666  002DD6  5013               	movf	___flmul@bexp^0,w,c
  7667  002DD8  A4D8               	btfss	status,2,c
  7668  002DDA  EFF1  F016         	goto	u4951
  7669  002DDE  EFF3  F016         	goto	u4950
  7670  002DE2                     u4951:
  7671  002DE2  EFFD  F016         	goto	l4506
  7672  002DE6                     u4950:
  7673  002DE6                     l4502:
  7674  002DE6  0E00               	movlw	0
  7675  002DE8  6E01               	movwf	?___flmul^0,c
  7676  002DEA  0E00               	movlw	0
  7677  002DEC  6E02               	movwf	(?___flmul+1)^0,c
  7678  002DEE  0E00               	movlw	0
  7679  002DF0  6E03               	movwf	(?___flmul+2)^0,c
  7680  002DF2  0E00               	movlw	0
  7681  002DF4  6E04               	movwf	(?___flmul+3)^0,c
  7682  002DF6  EF95  F018         	goto	l1272
  7683  002DFA                     l4506:
  7684  002DFA  5007               	movf	(___flmul@a+2)^0,w,c
  7685  002DFC  0201               	mulwf	___flmul@b^0,c
  7686  002DFE  CFF3 F018          	movff	prodl,___flmul@temp
  7687  002E02  CFF4 F019          	movff	prodh,___flmul@temp+1
  7688  002E06  5018               	movf	___flmul@temp^0,w,c
  7689  002E08  6E0E               	movwf	___flmul@grs^0,c
  7690  002E0A  6A0F               	clrf	(___flmul@grs+1)^0,c
  7691  002E0C  6A10               	clrf	(___flmul@grs+2)^0,c
  7692  002E0E  6A11               	clrf	(___flmul@grs+3)^0,c
  7693  002E10  5019               	movf	(___flmul@temp+1)^0,w,c
  7694  002E12  6E14               	movwf	___flmul@prod^0,c
  7695  002E14  6A15               	clrf	(___flmul@prod+1)^0,c
  7696  002E16  6A16               	clrf	(___flmul@prod+2)^0,c
  7697  002E18  6A17               	clrf	(___flmul@prod+3)^0,c
  7698  002E1A  5006               	movf	(___flmul@a+1)^0,w,c
  7699  002E1C  0202               	mulwf	(___flmul@b+1)^0,c
  7700  002E1E  CFF3 F018          	movff	prodl,___flmul@temp
  7701  002E22  CFF4 F019          	movff	prodh,___flmul@temp+1
  7702  002E26  5018               	movf	___flmul@temp^0,w,c
  7703  002E28  260E               	addwf	___flmul@grs^0,f,c
  7704  002E2A  0E00               	movlw	0
  7705  002E2C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7706  002E2E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7707  002E30  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7708  002E32  5019               	movf	(___flmul@temp+1)^0,w,c
  7709  002E34  2614               	addwf	___flmul@prod^0,f,c
  7710  002E36  0E00               	movlw	0
  7711  002E38  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7712  002E3A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7713  002E3C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7714  002E3E  5005               	movf	___flmul@a^0,w,c
  7715  002E40  0203               	mulwf	(___flmul@b+2)^0,c
  7716  002E42  CFF3 F018          	movff	prodl,___flmul@temp
  7717  002E46  CFF4 F019          	movff	prodh,___flmul@temp+1
  7718  002E4A  5018               	movf	___flmul@temp^0,w,c
  7719  002E4C  260E               	addwf	___flmul@grs^0,f,c
  7720  002E4E  0E00               	movlw	0
  7721  002E50  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7722  002E52  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7723  002E54  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7724  002E56  5019               	movf	(___flmul@temp+1)^0,w,c
  7725  002E58  2614               	addwf	___flmul@prod^0,f,c
  7726  002E5A  0E00               	movlw	0
  7727  002E5C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7728  002E5E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7729  002E60  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7730  002E62  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7731  002E66  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7732  002E6A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7733  002E6E  6A0E               	clrf	___flmul@grs^0,c
  7734  002E70  5005               	movf	___flmul@a^0,w,c
  7735  002E72  0202               	mulwf	(___flmul@b+1)^0,c
  7736  002E74  CFF3 F018          	movff	prodl,___flmul@temp
  7737  002E78  CFF4 F019          	movff	prodh,___flmul@temp+1
  7738  002E7C  5018               	movf	___flmul@temp^0,w,c
  7739  002E7E  260E               	addwf	___flmul@grs^0,f,c
  7740  002E80  5019               	movf	(___flmul@temp+1)^0,w,c
  7741  002E82  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7742  002E84  0E00               	movlw	0
  7743  002E86  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7744  002E88  0E00               	movlw	0
  7745  002E8A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7746  002E8C  5006               	movf	(___flmul@a+1)^0,w,c
  7747  002E8E  0201               	mulwf	___flmul@b^0,c
  7748  002E90  CFF3 F018          	movff	prodl,___flmul@temp
  7749  002E94  CFF4 F019          	movff	prodh,___flmul@temp+1
  7750  002E98  5018               	movf	___flmul@temp^0,w,c
  7751  002E9A  260E               	addwf	___flmul@grs^0,f,c
  7752  002E9C  5019               	movf	(___flmul@temp+1)^0,w,c
  7753  002E9E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7754  002EA0  0E00               	movlw	0
  7755  002EA2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7756  002EA4  0E00               	movlw	0
  7757  002EA6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7758  002EA8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7759  002EAC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7760  002EB0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7761  002EB4  6A0E               	clrf	___flmul@grs^0,c
  7762  002EB6  5005               	movf	___flmul@a^0,w,c
  7763  002EB8  0201               	mulwf	___flmul@b^0,c
  7764  002EBA  CFF3 F018          	movff	prodl,___flmul@temp
  7765  002EBE  CFF4 F019          	movff	prodh,___flmul@temp+1
  7766  002EC2  5018               	movf	___flmul@temp^0,w,c
  7767  002EC4  260E               	addwf	___flmul@grs^0,f,c
  7768  002EC6  5019               	movf	(___flmul@temp+1)^0,w,c
  7769  002EC8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7770  002ECA  0E00               	movlw	0
  7771  002ECC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7772  002ECE  0E00               	movlw	0
  7773  002ED0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7774  002ED2  5007               	movf	(___flmul@a+2)^0,w,c
  7775  002ED4  0202               	mulwf	(___flmul@b+1)^0,c
  7776  002ED6  CFF3 F018          	movff	prodl,___flmul@temp
  7777  002EDA  CFF4 F019          	movff	prodh,___flmul@temp+1
  7778  002EDE  5018               	movf	___flmul@temp^0,w,c
  7779  002EE0  2614               	addwf	___flmul@prod^0,f,c
  7780  002EE2  5019               	movf	(___flmul@temp+1)^0,w,c
  7781  002EE4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7782  002EE6  0E00               	movlw	0
  7783  002EE8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7784  002EEA  0E00               	movlw	0
  7785  002EEC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7786  002EEE  5006               	movf	(___flmul@a+1)^0,w,c
  7787  002EF0  0203               	mulwf	(___flmul@b+2)^0,c
  7788  002EF2  CFF3 F018          	movff	prodl,___flmul@temp
  7789  002EF6  CFF4 F019          	movff	prodh,___flmul@temp+1
  7790  002EFA  5018               	movf	___flmul@temp^0,w,c
  7791  002EFC  2614               	addwf	___flmul@prod^0,f,c
  7792  002EFE  5019               	movf	(___flmul@temp+1)^0,w,c
  7793  002F00  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7794  002F02  0E00               	movlw	0
  7795  002F04  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7796  002F06  0E00               	movlw	0
  7797  002F08  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7798  002F0A  5007               	movf	(___flmul@a+2)^0,w,c
  7799  002F0C  0203               	mulwf	(___flmul@b+2)^0,c
  7800  002F0E  CFF3 F018          	movff	prodl,___flmul@temp
  7801  002F12  CFF4 F019          	movff	prodh,___flmul@temp+1
  7802  002F16  5018               	movf	___flmul@temp^0,w,c
  7803  002F18  6E09               	movwf	??___flmul^0,c
  7804  002F1A  5019               	movf	(___flmul@temp+1)^0,w,c
  7805  002F1C  6E0A               	movwf	(??___flmul+1)^0,c
  7806  002F1E  6A0B               	clrf	(??___flmul+2)^0,c
  7807  002F20  6A0C               	clrf	(??___flmul+3)^0,c
  7808  002F22  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7809  002F26  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7810  002F2A  C009  F00A         	movff	??___flmul,??___flmul+1
  7811  002F2E  6A09               	clrf	??___flmul^0,c
  7812  002F30  5009               	movf	??___flmul^0,w,c
  7813  002F32  2614               	addwf	___flmul@prod^0,f,c
  7814  002F34  500A               	movf	(??___flmul+1)^0,w,c
  7815  002F36  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7816  002F38  500B               	movf	(??___flmul+2)^0,w,c
  7817  002F3A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7818  002F3C  500C               	movf	(??___flmul+3)^0,w,c
  7819  002F3E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7820  002F40  C00E  F009         	movff	___flmul@grs,??___flmul
  7821  002F44  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7822  002F48  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7823  002F4C  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7824  002F50  0E19               	movlw	25
  7825  002F52  EFB0  F017         	goto	u4960
  7826  002F56                     u4965:
  7827  002F56  90D8               	bcf	status,0,c
  7828  002F58  320C               	rrcf	(??___flmul+3)^0,f,c
  7829  002F5A  320B               	rrcf	(??___flmul+2)^0,f,c
  7830  002F5C  320A               	rrcf	(??___flmul+1)^0,f,c
  7831  002F5E  3209               	rrcf	??___flmul^0,f,c
  7832  002F60                     u4960:
  7833  002F60  2EE8               	decfsz	wreg,f,c
  7834  002F62  EFAB  F017         	goto	u4965
  7835  002F66  5009               	movf	??___flmul^0,w,c
  7836  002F68  2614               	addwf	___flmul@prod^0,f,c
  7837  002F6A  500A               	movf	(??___flmul+1)^0,w,c
  7838  002F6C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7839  002F6E  500B               	movf	(??___flmul+2)^0,w,c
  7840  002F70  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7841  002F72  500C               	movf	(??___flmul+3)^0,w,c
  7842  002F74  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7843  002F76  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7844  002F7A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7845  002F7E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7846  002F82  6A0E               	clrf	___flmul@grs^0,c
  7847  002F84  5012               	movf	___flmul@aexp^0,w,c
  7848  002F86  C013  F009         	movff	___flmul@bexp,??___flmul
  7849  002F8A  6A0A               	clrf	(??___flmul+1)^0,c
  7850  002F8C  2609               	addwf	??___flmul^0,f,c
  7851  002F8E  0E00               	movlw	0
  7852  002F90  220A               	addwfc	(??___flmul+1)^0,f,c
  7853  002F92  0E82               	movlw	130
  7854  002F94  2409               	addwf	??___flmul^0,w,c
  7855  002F96  6E18               	movwf	___flmul@temp^0,c
  7856  002F98  0EFF               	movlw	255
  7857  002F9A  200A               	addwfc	(??___flmul+1)^0,w,c
  7858  002F9C  6E19               	movwf	(___flmul@temp+1)^0,c
  7859  002F9E  EFE6  F017         	goto	l4554
  7860  002FA2                     l4548:
  7861  002FA2  90D8               	bcf	status,0,c
  7862  002FA4  3614               	rlcf	___flmul@prod^0,f,c
  7863  002FA6  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7864  002FA8  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7865  002FAA  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7866  002FAC  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7867  002FAE  EFDB  F017         	goto	u4971
  7868  002FB2  EFDD  F017         	goto	u4970
  7869  002FB6                     u4971:
  7870  002FB6  EFDE  F017         	goto	l1275
  7871  002FBA                     u4970:
  7872  002FBA  8014               	bsf	___flmul@prod^0,0,c
  7873  002FBC                     l1275:
  7874  002FBC  90D8               	bcf	status,0,c
  7875  002FBE  360E               	rlcf	___flmul@grs^0,f,c
  7876  002FC0  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7877  002FC2  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7878  002FC4  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7879  002FC6  0618               	decf	___flmul@temp^0,f,c
  7880  002FC8  A0D8               	btfss	status,0,c
  7881  002FCA  0619               	decf	(___flmul@temp+1)^0,f,c
  7882  002FCC                     l4554:
  7883  002FCC  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7884  002FCE  EFEB  F017         	goto	u4981
  7885  002FD2  EFED  F017         	goto	u4980
  7886  002FD6                     u4981:
  7887  002FD6  EFD1  F017         	goto	l4548
  7888  002FDA                     u4980:
  7889  002FDA  0E00               	movlw	0
  7890  002FDC  6E12               	movwf	___flmul@aexp^0,c
  7891  002FDE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7892  002FE0  EFF4  F017         	goto	u4991
  7893  002FE4  EFF6  F017         	goto	u4990
  7894  002FE8                     u4991:
  7895  002FE8  EF1A  F018         	goto	l1277
  7896  002FEC                     u4990:
  7897  002FEC  0EFF               	movlw	255
  7898  002FEE  140E               	andwf	___flmul@grs^0,w,c
  7899  002FF0  6E09               	movwf	??___flmul^0,c
  7900  002FF2  0EFF               	movlw	255
  7901  002FF4  140F               	andwf	(___flmul@grs+1)^0,w,c
  7902  002FF6  6E0A               	movwf	(??___flmul+1)^0,c
  7903  002FF8  0EFF               	movlw	255
  7904  002FFA  1410               	andwf	(___flmul@grs+2)^0,w,c
  7905  002FFC  6E0B               	movwf	(??___flmul+2)^0,c
  7906  002FFE  0E7F               	movlw	127
  7907  003000  1411               	andwf	(___flmul@grs+3)^0,w,c
  7908  003002  6E0C               	movwf	(??___flmul+3)^0,c
  7909  003004  5009               	movf	??___flmul^0,w,c
  7910  003006  100A               	iorwf	(??___flmul+1)^0,w,c
  7911  003008  100B               	iorwf	(??___flmul+2)^0,w,c
  7912  00300A  100C               	iorwf	(??___flmul+3)^0,w,c
  7913  00300C  B4D8               	btfsc	status,2,c
  7914  00300E  EF0B  F018         	goto	u5001
  7915  003012  EF0D  F018         	goto	u5000
  7916  003016                     u5001:
  7917  003016  EF11  F018         	goto	l1278
  7918  00301A                     u5000:
  7919  00301A                     l4562:
  7920  00301A  0E01               	movlw	1
  7921  00301C  6E12               	movwf	___flmul@aexp^0,c
  7922  00301E  EF1A  F018         	goto	l1277
  7923  003022                     l1278:
  7924  003022  A014               	btfss	___flmul@prod^0,0,c
  7925  003024  EF16  F018         	goto	u5011
  7926  003028  EF18  F018         	goto	u5010
  7927  00302C                     u5011:
  7928  00302C  EF1A  F018         	goto	l1277
  7929  003030                     u5010:
  7930  003030  EF0D  F018         	goto	l4562
  7931  003034                     l1277:
  7932  003034  5012               	movf	___flmul@aexp^0,w,c
  7933  003036  B4D8               	btfsc	status,2,c
  7934  003038  EF20  F018         	goto	u5021
  7935  00303C  EF22  F018         	goto	u5020
  7936  003040                     u5021:
  7937  003040  EF46  F018         	goto	l4574
  7938  003044                     u5020:
  7939  003044  0E01               	movlw	1
  7940  003046  2614               	addwf	___flmul@prod^0,f,c
  7941  003048  0E00               	movlw	0
  7942  00304A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7943  00304C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7944  00304E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7945  003050  A017               	btfss	(___flmul@prod+3)^0,0,c
  7946  003052  EF2D  F018         	goto	u5031
  7947  003056  EF2F  F018         	goto	u5030
  7948  00305A                     u5031:
  7949  00305A  EF46  F018         	goto	l4574
  7950  00305E                     u5030:
  7951  00305E  C014  F009         	movff	___flmul@prod,??___flmul
  7952  003062  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7953  003066  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7954  00306A  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7955  00306E  340C               	rlcf	(??___flmul+3)^0,w,c
  7956  003070  320C               	rrcf	(??___flmul+3)^0,f,c
  7957  003072  320B               	rrcf	(??___flmul+2)^0,f,c
  7958  003074  320A               	rrcf	(??___flmul+1)^0,f,c
  7959  003076  3209               	rrcf	??___flmul^0,f,c
  7960  003078  C009  F014         	movff	??___flmul,___flmul@prod
  7961  00307C  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7962  003080  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7963  003084  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7964  003088  4A18               	infsnz	___flmul@temp^0,f,c
  7965  00308A  2A19               	incf	(___flmul@temp+1)^0,f,c
  7966  00308C                     l4574:
  7967  00308C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7968  00308E  EF51  F018         	goto	u5041
  7969  003092  5019               	movf	(___flmul@temp+1)^0,w,c
  7970  003094  E108               	bnz	u5040
  7971  003096  2818               	incf	___flmul@temp^0,w,c
  7972  003098  A0D8               	btfss	status,0,c
  7973  00309A  EF51  F018         	goto	u5041
  7974  00309E  EF53  F018         	goto	u5040
  7975  0030A2                     u5041:
  7976  0030A2  EF5D  F018         	goto	l4578
  7977  0030A6                     u5040:
  7978  0030A6  0E00               	movlw	0
  7979  0030A8  6E14               	movwf	___flmul@prod^0,c
  7980  0030AA  0E00               	movlw	0
  7981  0030AC  6E15               	movwf	(___flmul@prod+1)^0,c
  7982  0030AE  0E80               	movlw	128
  7983  0030B0  6E16               	movwf	(___flmul@prod+2)^0,c
  7984  0030B2  0E7F               	movlw	127
  7985  0030B4  6E17               	movwf	(___flmul@prod+3)^0,c
  7986  0030B6  EF8B  F018         	goto	l4590
  7987  0030BA                     l4578:
  7988  0030BA  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7989  0030BC  EF6A  F018         	goto	u5050
  7990  0030C0  5019               	movf	(___flmul@temp+1)^0,w,c
  7991  0030C2  E106               	bnz	u5051
  7992  0030C4  0418               	decf	___flmul@temp^0,w,c
  7993  0030C6  B0D8               	btfsc	status,0,c
  7994  0030C8  EF68  F018         	goto	u5051
  7995  0030CC  EF6A  F018         	goto	u5050
  7996  0030D0                     u5051:
  7997  0030D0  EF76  F018         	goto	l1285
  7998  0030D4                     u5050:
  7999  0030D4  0E00               	movlw	0
  8000  0030D6  6E14               	movwf	___flmul@prod^0,c
  8001  0030D8  0E00               	movlw	0
  8002  0030DA  6E15               	movwf	(___flmul@prod+1)^0,c
  8003  0030DC  0E00               	movlw	0
  8004  0030DE  6E16               	movwf	(___flmul@prod+2)^0,c
  8005  0030E0  0E00               	movlw	0
  8006  0030E2  6E17               	movwf	(___flmul@prod+3)^0,c
  8007  0030E4  0E00               	movlw	0
  8008  0030E6  6E0D               	movwf	___flmul@sign^0,c
  8009  0030E8  EF8B  F018         	goto	l4590
  8010  0030EC                     l1285:
  8011  0030EC  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8012  0030F0  0EFF               	movlw	255
  8013  0030F2  1614               	andwf	___flmul@prod^0,f,c
  8014  0030F4  0EFF               	movlw	255
  8015  0030F6  1615               	andwf	(___flmul@prod+1)^0,f,c
  8016  0030F8  0E7F               	movlw	127
  8017  0030FA  1616               	andwf	(___flmul@prod+2)^0,f,c
  8018  0030FC  0E00               	movlw	0
  8019  0030FE  1617               	andwf	(___flmul@prod+3)^0,f,c
  8020  003100  A013               	btfss	___flmul@bexp^0,0,c
  8021  003102  EF85  F018         	goto	u5061
  8022  003106  EF87  F018         	goto	u5060
  8023  00310A                     u5061:
  8024  00310A  EF88  F018         	goto	l4588
  8025  00310E                     u5060:
  8026  00310E  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8027  003110                     l4588:
  8028  003110  90D8               	bcf	status,0,c
  8029  003112  3013               	rrcf	___flmul@bexp^0,w,c
  8030  003114  6E17               	movwf	(___flmul@prod+3)^0,c
  8031  003116                     l4590:
  8032  003116  500D               	movf	___flmul@sign^0,w,c
  8033  003118  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8034  00311A  C014  F001         	movff	___flmul@prod,?___flmul
  8035  00311E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8036  003122  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8037  003126  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8038  00312A                     l1272:
  8039  00312A  0012               	return		;funcret
  8040  00312C                     __end_of___flmul:
  8041                           	callstack 0
  8042                           
  8043 ;; *************** function ___flge *****************
  8044 ;; Defined at:
  8045 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  ff1             4   25[COMRAM] unsigned char 
  8048 ;;  ff2             4   29[COMRAM] unsigned char 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;		None               void
  8053 ;; Registers used:
  8054 ;;		wreg, status,2, status,0
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8060 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8062 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8064 ;;Total ram usage:       12 bytes
  8065 ;; Hardware stack levels used: 1
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_colourcards_testing
  8070 ;;		_efgtoa
  8071 ;;		_colourcards_readRGBC
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text23
  8076  004696                     __ptext23:
  8077                           	callstack 0
  8078  004696                     ___flge:
  8079                           	callstack 25
  8080  004696  0E00               	movlw	0
  8081  004698  141A               	andwf	___flge@ff1^0,w,c
  8082  00469A  6E22               	movwf	??___flge^0,c
  8083  00469C  0E00               	movlw	0
  8084  00469E  141B               	andwf	(___flge@ff1+1)^0,w,c
  8085  0046A0  6E23               	movwf	(??___flge+1)^0,c
  8086  0046A2  0E80               	movlw	128
  8087  0046A4  141C               	andwf	(___flge@ff1+2)^0,w,c
  8088  0046A6  6E24               	movwf	(??___flge+2)^0,c
  8089  0046A8  0E7F               	movlw	127
  8090  0046AA  141D               	andwf	(___flge@ff1+3)^0,w,c
  8091  0046AC  6E25               	movwf	(??___flge+3)^0,c
  8092  0046AE  5022               	movf	??___flge^0,w,c
  8093  0046B0  1023               	iorwf	(??___flge+1)^0,w,c
  8094  0046B2  1024               	iorwf	(??___flge+2)^0,w,c
  8095  0046B4  1025               	iorwf	(??___flge+3)^0,w,c
  8096  0046B6  A4D8               	btfss	status,2,c
  8097  0046B8  EF60  F023         	goto	u5221
  8098  0046BC  EF62  F023         	goto	u5220
  8099  0046C0                     u5221:
  8100  0046C0  EF6A  F023         	goto	l4702
  8101  0046C4                     u5220:
  8102  0046C4  0E00               	movlw	0
  8103  0046C6  6E1A               	movwf	___flge@ff1^0,c
  8104  0046C8  0E00               	movlw	0
  8105  0046CA  6E1B               	movwf	(___flge@ff1+1)^0,c
  8106  0046CC  0E00               	movlw	0
  8107  0046CE  6E1C               	movwf	(___flge@ff1+2)^0,c
  8108  0046D0  0E00               	movlw	0
  8109  0046D2  6E1D               	movwf	(___flge@ff1+3)^0,c
  8110  0046D4                     l4702:
  8111  0046D4  0E00               	movlw	0
  8112  0046D6  141E               	andwf	___flge@ff2^0,w,c
  8113  0046D8  6E22               	movwf	??___flge^0,c
  8114  0046DA  0E00               	movlw	0
  8115  0046DC  141F               	andwf	(___flge@ff2+1)^0,w,c
  8116  0046DE  6E23               	movwf	(??___flge+1)^0,c
  8117  0046E0  0E80               	movlw	128
  8118  0046E2  1420               	andwf	(___flge@ff2+2)^0,w,c
  8119  0046E4  6E24               	movwf	(??___flge+2)^0,c
  8120  0046E6  0E7F               	movlw	127
  8121  0046E8  1421               	andwf	(___flge@ff2+3)^0,w,c
  8122  0046EA  6E25               	movwf	(??___flge+3)^0,c
  8123  0046EC  5022               	movf	??___flge^0,w,c
  8124  0046EE  1023               	iorwf	(??___flge+1)^0,w,c
  8125  0046F0  1024               	iorwf	(??___flge+2)^0,w,c
  8126  0046F2  1025               	iorwf	(??___flge+3)^0,w,c
  8127  0046F4  A4D8               	btfss	status,2,c
  8128  0046F6  EF7F  F023         	goto	u5231
  8129  0046FA  EF81  F023         	goto	u5230
  8130  0046FE                     u5231:
  8131  0046FE  EF89  F023         	goto	l4706
  8132  004702                     u5230:
  8133  004702  0E00               	movlw	0
  8134  004704  6E1E               	movwf	___flge@ff2^0,c
  8135  004706  0E00               	movlw	0
  8136  004708  6E1F               	movwf	(___flge@ff2+1)^0,c
  8137  00470A  0E00               	movlw	0
  8138  00470C  6E20               	movwf	(___flge@ff2+2)^0,c
  8139  00470E  0E00               	movlw	0
  8140  004710  6E21               	movwf	(___flge@ff2+3)^0,c
  8141  004712                     l4706:
  8142  004712  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  8143  004714  EF8E  F023         	goto	u5241
  8144  004718  EF90  F023         	goto	u5240
  8145  00471C                     u5241:
  8146  00471C  EF99  F023         	goto	l4710
  8147  004720                     u5240:
  8148  004720  6C1A               	negf	___flge@ff1^0,c
  8149  004722  1E1B               	comf	(___flge@ff1+1)^0,f,c
  8150  004724  B0D8               	btfsc	status,0,c
  8151  004726  2A1B               	incf	(___flge@ff1+1)^0,f,c
  8152  004728  1E1C               	comf	(___flge@ff1+2)^0,f,c
  8153  00472A  B0D8               	btfsc	status,0,c
  8154  00472C  2A1C               	incf	(___flge@ff1+2)^0,f,c
  8155  00472E  0E80               	movlw	128
  8156  004730  561D               	subfwb	(___flge@ff1+3)^0,f,c
  8157  004732                     l4710:
  8158  004732  AE21               	btfss	(___flge@ff2+3)^0,7,c
  8159  004734  EF9E  F023         	goto	u5251
  8160  004738  EFA0  F023         	goto	u5250
  8161  00473C                     u5251:
  8162  00473C  EFA9  F023         	goto	l919
  8163  004740                     u5250:
  8164  004740  6C1E               	negf	___flge@ff2^0,c
  8165  004742  1E1F               	comf	(___flge@ff2+1)^0,f,c
  8166  004744  B0D8               	btfsc	status,0,c
  8167  004746  2A1F               	incf	(___flge@ff2+1)^0,f,c
  8168  004748  1E20               	comf	(___flge@ff2+2)^0,f,c
  8169  00474A  B0D8               	btfsc	status,0,c
  8170  00474C  2A20               	incf	(___flge@ff2+2)^0,f,c
  8171  00474E  0E80               	movlw	128
  8172  004750  5621               	subfwb	(___flge@ff2+3)^0,f,c
  8173  004752                     l919:
  8174  004752  0E00               	movlw	0
  8175  004754  1A1A               	xorwf	___flge@ff1^0,f,c
  8176  004756  0E00               	movlw	0
  8177  004758  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  8178  00475A  0E00               	movlw	0
  8179  00475C  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  8180  00475E  0E80               	movlw	128
  8181  004760  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  8182  004762  0E00               	movlw	0
  8183  004764  1A1E               	xorwf	___flge@ff2^0,f,c
  8184  004766  0E00               	movlw	0
  8185  004768  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  8186  00476A  0E00               	movlw	0
  8187  00476C  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  8188  00476E  0E80               	movlw	128
  8189  004770  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  8190  004772  501E               	movf	___flge@ff2^0,w,c
  8191  004774  5C1A               	subwf	___flge@ff1^0,w,c
  8192  004776  501F               	movf	(___flge@ff2+1)^0,w,c
  8193  004778  581B               	subwfb	(___flge@ff1+1)^0,w,c
  8194  00477A  5020               	movf	(___flge@ff2+2)^0,w,c
  8195  00477C  581C               	subwfb	(___flge@ff1+2)^0,w,c
  8196  00477E  5021               	movf	(___flge@ff2+3)^0,w,c
  8197  004780  581D               	subwfb	(___flge@ff1+3)^0,w,c
  8198  004782  B0D8               	btfsc	status,0,c
  8199  004784  EFC6  F023         	goto	u5261
  8200  004788  EFC8  F023         	goto	u5260
  8201  00478C                     u5261:
  8202  00478C  EFCB  F023         	goto	l4716
  8203  004790                     u5260:
  8204  004790  90D8               	bcf	status,0,c
  8205  004792  EFCC  F023         	goto	l924
  8206  004796                     l4716:
  8207  004796  80D8               	bsf	status,0,c
  8208  004798                     l924:
  8209  004798  0012               	return		;funcret
  8210  00479A                     __end_of___flge:
  8211                           	callstack 0
  8212                           
  8213 ;; *************** function ___fleq *****************
  8214 ;; Defined at:
  8215 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;  ff1             4    0[COMRAM] unsigned char 
  8218 ;;  ff2             4    4[COMRAM] unsigned char 
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;		None
  8221 ;; Return value:  Size  Location     Type
  8222 ;;		None               void
  8223 ;; Registers used:
  8224 ;;		wreg, status,2, status,0
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8230 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8232 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8234 ;;Total ram usage:       12 bytes
  8235 ;; Hardware stack levels used: 1
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		_efgtoa
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           	psect	text24
  8244  004F52                     __ptext24:
  8245                           	callstack 0
  8246  004F52                     ___fleq:
  8247                           	callstack 25
  8248  004F52  0E00               	movlw	0
  8249  004F54  1401               	andwf	___fleq@ff1^0,w,c
  8250  004F56  6E09               	movwf	??___fleq^0,c
  8251  004F58  0E00               	movlw	0
  8252  004F5A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8253  004F5C  6E0A               	movwf	(??___fleq+1)^0,c
  8254  004F5E  0E80               	movlw	128
  8255  004F60  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8256  004F62  6E0B               	movwf	(??___fleq+2)^0,c
  8257  004F64  0E7F               	movlw	127
  8258  004F66  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8259  004F68  6E0C               	movwf	(??___fleq+3)^0,c
  8260  004F6A  5009               	movf	??___fleq^0,w,c
  8261  004F6C  100A               	iorwf	(??___fleq+1)^0,w,c
  8262  004F6E  100B               	iorwf	(??___fleq+2)^0,w,c
  8263  004F70  100C               	iorwf	(??___fleq+3)^0,w,c
  8264  004F72  A4D8               	btfss	status,2,c
  8265  004F74  EFBE  F027         	goto	u5191
  8266  004F78  EFC0  F027         	goto	u5190
  8267  004F7C                     u5191:
  8268  004F7C  EFC8  F027         	goto	l4686
  8269  004F80                     u5190:
  8270  004F80  0E00               	movlw	0
  8271  004F82  6E01               	movwf	___fleq@ff1^0,c
  8272  004F84  0E00               	movlw	0
  8273  004F86  6E02               	movwf	(___fleq@ff1+1)^0,c
  8274  004F88  0E00               	movlw	0
  8275  004F8A  6E03               	movwf	(___fleq@ff1+2)^0,c
  8276  004F8C  0E00               	movlw	0
  8277  004F8E  6E04               	movwf	(___fleq@ff1+3)^0,c
  8278  004F90                     l4686:
  8279  004F90  0E00               	movlw	0
  8280  004F92  1405               	andwf	___fleq@ff2^0,w,c
  8281  004F94  6E09               	movwf	??___fleq^0,c
  8282  004F96  0E00               	movlw	0
  8283  004F98  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8284  004F9A  6E0A               	movwf	(??___fleq+1)^0,c
  8285  004F9C  0E80               	movlw	128
  8286  004F9E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8287  004FA0  6E0B               	movwf	(??___fleq+2)^0,c
  8288  004FA2  0E7F               	movlw	127
  8289  004FA4  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8290  004FA6  6E0C               	movwf	(??___fleq+3)^0,c
  8291  004FA8  5009               	movf	??___fleq^0,w,c
  8292  004FAA  100A               	iorwf	(??___fleq+1)^0,w,c
  8293  004FAC  100B               	iorwf	(??___fleq+2)^0,w,c
  8294  004FAE  100C               	iorwf	(??___fleq+3)^0,w,c
  8295  004FB0  A4D8               	btfss	status,2,c
  8296  004FB2  EFDD  F027         	goto	u5201
  8297  004FB6  EFDF  F027         	goto	u5200
  8298  004FBA                     u5201:
  8299  004FBA  EFE7  F027         	goto	l4690
  8300  004FBE                     u5200:
  8301  004FBE  0E00               	movlw	0
  8302  004FC0  6E05               	movwf	___fleq@ff2^0,c
  8303  004FC2  0E00               	movlw	0
  8304  004FC4  6E06               	movwf	(___fleq@ff2+1)^0,c
  8305  004FC6  0E00               	movlw	0
  8306  004FC8  6E07               	movwf	(___fleq@ff2+2)^0,c
  8307  004FCA  0E00               	movlw	0
  8308  004FCC  6E08               	movwf	(___fleq@ff2+3)^0,c
  8309  004FCE                     l4690:
  8310  004FCE  5005               	movf	___fleq@ff2^0,w,c
  8311  004FD0  1801               	xorwf	___fleq@ff1^0,w,c
  8312  004FD2  E10F               	bnz	u5210
  8313  004FD4  5006               	movf	(___fleq@ff2+1)^0,w,c
  8314  004FD6  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8315  004FD8  E10C               	bnz	u5210
  8316  004FDA  5007               	movf	(___fleq@ff2+2)^0,w,c
  8317  004FDC  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8318  004FDE  E109               	bnz	u5210
  8319  004FE0  5008               	movf	(___fleq@ff2+3)^0,w,c
  8320  004FE2  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8321  004FE4  B4D8               	btfsc	status,2,c
  8322  004FE6  EFF7  F027         	goto	u5211
  8323  004FEA  EFF9  F027         	goto	u5210
  8324  004FEE                     u5211:
  8325  004FEE  EFFC  F027         	goto	l4694
  8326  004FF2                     u5210:
  8327  004FF2  90D8               	bcf	status,0,c
  8328  004FF4  EFFD  F027         	goto	l913
  8329  004FF8                     l4694:
  8330  004FF8  80D8               	bsf	status,0,c
  8331  004FFA                     l913:
  8332  004FFA  0012               	return		;funcret
  8333  004FFC                     __end_of___fleq:
  8334                           	callstack 0
  8335                           
  8336 ;; *************** function ___fldiv *****************
  8337 ;; Defined at:
  8338 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  b               4    0[COMRAM] unsigned char 
  8341 ;;  a               4    4[COMRAM] unsigned char 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  grs             4   19[COMRAM] unsigned long 
  8344 ;;  rem             4   12[COMRAM] unsigned long 
  8345 ;;  new_exp         2   17[COMRAM] short 
  8346 ;;  aexp            1   24[COMRAM] unsigned char 
  8347 ;;  bexp            1   23[COMRAM] unsigned char 
  8348 ;;  sign            1   16[COMRAM] unsigned char 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  4    0[COMRAM] unsigned char 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8359 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;Total ram usage:       25 bytes
  8363 ;; Hardware stack levels used: 1
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_colourcards_testing
  8368 ;;		_efgtoa
  8369 ;;		_colourcards_readRGBC
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text25
  8374  00312C                     __ptext25:
  8375                           	callstack 0
  8376  00312C                     ___fldiv:
  8377                           	callstack 25
  8378  00312C  5004               	movf	(___fldiv@b+3)^0,w,c
  8379  00312E  0B80               	andlw	128
  8380  003130  6E11               	movwf	___fldiv@sign^0,c
  8381  003132  5004               	movf	(___fldiv@b+3)^0,w,c
  8382  003134  2404               	addwf	(___fldiv@b+3)^0,w,c
  8383  003136  6E18               	movwf	___fldiv@bexp^0,c
  8384  003138  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8385  00313A  EFA1  F018         	goto	u4651
  8386  00313E  EFA3  F018         	goto	u4650
  8387  003142                     u4651:
  8388  003142  EFA4  F018         	goto	l4334
  8389  003146                     u4650:
  8390  003146  8018               	bsf	___fldiv@bexp^0,0,c
  8391  003148                     l4334:
  8392  003148  5018               	movf	___fldiv@bexp^0,w,c
  8393  00314A  B4D8               	btfsc	status,2,c
  8394  00314C  EFAA  F018         	goto	u4661
  8395  003150  EFAC  F018         	goto	u4660
  8396  003154                     u4661:
  8397  003154  EFC1  F018         	goto	l4344
  8398  003158                     u4660:
  8399  003158  2818               	incf	___fldiv@bexp^0,w,c
  8400  00315A  A4D8               	btfss	status,2,c
  8401  00315C  EFB2  F018         	goto	u4671
  8402  003160  EFB4  F018         	goto	u4670
  8403  003164                     u4671:
  8404  003164  EFBC  F018         	goto	l4340
  8405  003168                     u4670:
  8406  003168  0E00               	movlw	0
  8407  00316A  6E01               	movwf	___fldiv@b^0,c
  8408  00316C  0E00               	movlw	0
  8409  00316E  6E02               	movwf	(___fldiv@b+1)^0,c
  8410  003170  0E00               	movlw	0
  8411  003172  6E03               	movwf	(___fldiv@b+2)^0,c
  8412  003174  0E00               	movlw	0
  8413  003176  6E04               	movwf	(___fldiv@b+3)^0,c
  8414  003178                     l4340:
  8415  003178  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8416  00317A  0E00               	movlw	0
  8417  00317C  6E04               	movwf	(___fldiv@b+3)^0,c
  8418  00317E  EFC9  F018         	goto	l4346
  8419  003182                     l4344:
  8420  003182  0E00               	movlw	0
  8421  003184  6E01               	movwf	___fldiv@b^0,c
  8422  003186  0E00               	movlw	0
  8423  003188  6E02               	movwf	(___fldiv@b+1)^0,c
  8424  00318A  0E00               	movlw	0
  8425  00318C  6E03               	movwf	(___fldiv@b+2)^0,c
  8426  00318E  0E00               	movlw	0
  8427  003190  6E04               	movwf	(___fldiv@b+3)^0,c
  8428  003192                     l4346:
  8429  003192  5008               	movf	(___fldiv@a+3)^0,w,c
  8430  003194  0B80               	andlw	128
  8431  003196  1A11               	xorwf	___fldiv@sign^0,f,c
  8432  003198  5008               	movf	(___fldiv@a+3)^0,w,c
  8433  00319A  2408               	addwf	(___fldiv@a+3)^0,w,c
  8434  00319C  6E19               	movwf	___fldiv@aexp^0,c
  8435  00319E  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8436  0031A0  EFD4  F018         	goto	u4681
  8437  0031A4  EFD6  F018         	goto	u4680
  8438  0031A8                     u4681:
  8439  0031A8  EFD7  F018         	goto	l4354
  8440  0031AC                     u4680:
  8441  0031AC  8019               	bsf	___fldiv@aexp^0,0,c
  8442  0031AE                     l4354:
  8443  0031AE  5019               	movf	___fldiv@aexp^0,w,c
  8444  0031B0  B4D8               	btfsc	status,2,c
  8445  0031B2  EFDD  F018         	goto	u4691
  8446  0031B6  EFDF  F018         	goto	u4690
  8447  0031BA                     u4691:
  8448  0031BA  EFF4  F018         	goto	l4364
  8449  0031BE                     u4690:
  8450  0031BE  2819               	incf	___fldiv@aexp^0,w,c
  8451  0031C0  A4D8               	btfss	status,2,c
  8452  0031C2  EFE5  F018         	goto	u4701
  8453  0031C6  EFE7  F018         	goto	u4700
  8454  0031CA                     u4701:
  8455  0031CA  EFEF  F018         	goto	l4360
  8456  0031CE                     u4700:
  8457  0031CE  0E00               	movlw	0
  8458  0031D0  6E05               	movwf	___fldiv@a^0,c
  8459  0031D2  0E00               	movlw	0
  8460  0031D4  6E06               	movwf	(___fldiv@a+1)^0,c
  8461  0031D6  0E00               	movlw	0
  8462  0031D8  6E07               	movwf	(___fldiv@a+2)^0,c
  8463  0031DA  0E00               	movlw	0
  8464  0031DC  6E08               	movwf	(___fldiv@a+3)^0,c
  8465  0031DE                     l4360:
  8466  0031DE  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8467  0031E0  0E00               	movlw	0
  8468  0031E2  6E08               	movwf	(___fldiv@a+3)^0,c
  8469  0031E4  EFFC  F018         	goto	l4366
  8470  0031E8                     l4364:
  8471  0031E8  0E00               	movlw	0
  8472  0031EA  6E05               	movwf	___fldiv@a^0,c
  8473  0031EC  0E00               	movlw	0
  8474  0031EE  6E06               	movwf	(___fldiv@a+1)^0,c
  8475  0031F0  0E00               	movlw	0
  8476  0031F2  6E07               	movwf	(___fldiv@a+2)^0,c
  8477  0031F4  0E00               	movlw	0
  8478  0031F6  6E08               	movwf	(___fldiv@a+3)^0,c
  8479  0031F8                     l4366:
  8480  0031F8  5005               	movf	___fldiv@a^0,w,c
  8481  0031FA  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8482  0031FC  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8483  0031FE  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8484  003200  A4D8               	btfss	status,2,c
  8485  003202  EF05  F019         	goto	u4711
  8486  003206  EF07  F019         	goto	u4710
  8487  00320A                     u4711:
  8488  00320A  EF1F  F019         	goto	l4378
  8489  00320E                     u4710:
  8490  00320E  0E00               	movlw	0
  8491  003210  6E01               	movwf	___fldiv@b^0,c
  8492  003212  0E00               	movlw	0
  8493  003214  6E02               	movwf	(___fldiv@b+1)^0,c
  8494  003216  0E00               	movlw	0
  8495  003218  6E03               	movwf	(___fldiv@b+2)^0,c
  8496  00321A  0E00               	movlw	0
  8497  00321C  6E04               	movwf	(___fldiv@b+3)^0,c
  8498  00321E  0E80               	movlw	128
  8499  003220  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8500  003222  0E7F               	movlw	127
  8501  003224  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8502  003226                     l4372:
  8503  003226  5011               	movf	___fldiv@sign^0,w,c
  8504  003228  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8505  00322A  C001  F001         	movff	___fldiv@b,?___fldiv
  8506  00322E  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8507  003232  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8508  003236  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8509  00323A  EF62  F01A         	goto	l1236
  8510  00323E                     l4378:
  8511  00323E  5018               	movf	___fldiv@bexp^0,w,c
  8512  003240  A4D8               	btfss	status,2,c
  8513  003242  EF25  F019         	goto	u4721
  8514  003246  EF27  F019         	goto	u4720
  8515  00324A                     u4721:
  8516  00324A  EF31  F019         	goto	l4386
  8517  00324E                     u4720:
  8518  00324E  0E00               	movlw	0
  8519  003250  6E01               	movwf	?___fldiv^0,c
  8520  003252  0E00               	movlw	0
  8521  003254  6E02               	movwf	(?___fldiv+1)^0,c
  8522  003256  0E00               	movlw	0
  8523  003258  6E03               	movwf	(?___fldiv+2)^0,c
  8524  00325A  0E00               	movlw	0
  8525  00325C  6E04               	movwf	(?___fldiv+3)^0,c
  8526  00325E  EF62  F01A         	goto	l1236
  8527  003262                     l4386:
  8528  003262  5019               	movf	___fldiv@aexp^0,w,c
  8529  003264  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8530  003268  6A0A               	clrf	(??___fldiv+1)^0,c
  8531  00326A  5E09               	subwf	??___fldiv^0,f,c
  8532  00326C  0E00               	movlw	0
  8533  00326E  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8534  003270  0E7F               	movlw	127
  8535  003272  2409               	addwf	??___fldiv^0,w,c
  8536  003274  6E12               	movwf	___fldiv@new_exp^0,c
  8537  003276  0E00               	movlw	0
  8538  003278  200A               	addwfc	(??___fldiv+1)^0,w,c
  8539  00327A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8540  00327C  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8541  003280  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8542  003284  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8543  003288  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8544  00328C  0E00               	movlw	0
  8545  00328E  6E01               	movwf	___fldiv@b^0,c
  8546  003290  0E00               	movlw	0
  8547  003292  6E02               	movwf	(___fldiv@b+1)^0,c
  8548  003294  0E00               	movlw	0
  8549  003296  6E03               	movwf	(___fldiv@b+2)^0,c
  8550  003298  0E00               	movlw	0
  8551  00329A  6E04               	movwf	(___fldiv@b+3)^0,c
  8552  00329C  0E00               	movlw	0
  8553  00329E  6E14               	movwf	___fldiv@grs^0,c
  8554  0032A0  0E00               	movlw	0
  8555  0032A2  6E15               	movwf	(___fldiv@grs+1)^0,c
  8556  0032A4  0E00               	movlw	0
  8557  0032A6  6E16               	movwf	(___fldiv@grs+2)^0,c
  8558  0032A8  0E00               	movlw	0
  8559  0032AA  6E17               	movwf	(___fldiv@grs+3)^0,c
  8560  0032AC  0E00               	movlw	0
  8561  0032AE  6E19               	movwf	___fldiv@aexp^0,c
  8562  0032B0  EF92  F019         	goto	l1238
  8563  0032B4                     l4396:
  8564  0032B4  5019               	movf	___fldiv@aexp^0,w,c
  8565  0032B6  B4D8               	btfsc	status,2,c
  8566  0032B8  EF60  F019         	goto	u4731
  8567  0032BC  EF62  F019         	goto	u4730
  8568  0032C0                     u4731:
  8569  0032C0  EF79  F019         	goto	l4404
  8570  0032C4                     u4730:
  8571  0032C4  90D8               	bcf	status,0,c
  8572  0032C6  360D               	rlcf	___fldiv@rem^0,f,c
  8573  0032C8  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8574  0032CA  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8575  0032CC  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8576  0032CE  90D8               	bcf	status,0,c
  8577  0032D0  3601               	rlcf	___fldiv@b^0,f,c
  8578  0032D2  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8579  0032D4  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8580  0032D6  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8581  0032D8  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8582  0032DA  EF71  F019         	goto	u4741
  8583  0032DE  EF73  F019         	goto	u4740
  8584  0032E2                     u4741:
  8585  0032E2  EF74  F019         	goto	l1241
  8586  0032E6                     u4740:
  8587  0032E6  8001               	bsf	___fldiv@b^0,0,c
  8588  0032E8                     l1241:
  8589  0032E8  90D8               	bcf	status,0,c
  8590  0032EA  3614               	rlcf	___fldiv@grs^0,f,c
  8591  0032EC  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8592  0032EE  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8593  0032F0  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8594  0032F2                     l4404:
  8595  0032F2  5005               	movf	___fldiv@a^0,w,c
  8596  0032F4  5C0D               	subwf	___fldiv@rem^0,w,c
  8597  0032F6  5006               	movf	(___fldiv@a+1)^0,w,c
  8598  0032F8  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8599  0032FA  5007               	movf	(___fldiv@a+2)^0,w,c
  8600  0032FC  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8601  0032FE  5008               	movf	(___fldiv@a+3)^0,w,c
  8602  003300  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8603  003302  A0D8               	btfss	status,0,c
  8604  003304  EF86  F019         	goto	u4751
  8605  003308  EF88  F019         	goto	u4750
  8606  00330C                     u4751:
  8607  00330C  EF91  F019         	goto	l4410
  8608  003310                     u4750:
  8609  003310  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8610  003312  5005               	movf	___fldiv@a^0,w,c
  8611  003314  5E0D               	subwf	___fldiv@rem^0,f,c
  8612  003316  5006               	movf	(___fldiv@a+1)^0,w,c
  8613  003318  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8614  00331A  5007               	movf	(___fldiv@a+2)^0,w,c
  8615  00331C  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8616  00331E  5008               	movf	(___fldiv@a+3)^0,w,c
  8617  003320  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8618  003322                     l4410:
  8619  003322  2A19               	incf	___fldiv@aexp^0,f,c
  8620  003324                     l1238:
  8621  003324  0E19               	movlw	25
  8622  003326  6419               	cpfsgt	___fldiv@aexp^0,c
  8623  003328  EF98  F019         	goto	u4761
  8624  00332C  EF9A  F019         	goto	u4760
  8625  003330                     u4761:
  8626  003330  EF5A  F019         	goto	l4396
  8627  003334                     u4760:
  8628  003334  500D               	movf	___fldiv@rem^0,w,c
  8629  003336  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8630  003338  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8631  00333A  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8632  00333C  B4D8               	btfsc	status,2,c
  8633  00333E  EFA3  F019         	goto	u4771
  8634  003342  EFA5  F019         	goto	u4770
  8635  003346                     u4771:
  8636  003346  EFBD  F019         	goto	l4422
  8637  00334A                     u4770:
  8638  00334A  8014               	bsf	___fldiv@grs^0,0,c
  8639  00334C  EFBD  F019         	goto	l4422
  8640  003350                     l4416:
  8641  003350  90D8               	bcf	status,0,c
  8642  003352  3601               	rlcf	___fldiv@b^0,f,c
  8643  003354  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8644  003356  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8645  003358  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8646  00335A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8647  00335C  EFB2  F019         	goto	u4781
  8648  003360  EFB4  F019         	goto	u4780
  8649  003364                     u4781:
  8650  003364  EFB5  F019         	goto	l1247
  8651  003368                     u4780:
  8652  003368  8001               	bsf	___fldiv@b^0,0,c
  8653  00336A                     l1247:
  8654  00336A  90D8               	bcf	status,0,c
  8655  00336C  3614               	rlcf	___fldiv@grs^0,f,c
  8656  00336E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8657  003370  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8658  003372  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8659  003374  0612               	decf	___fldiv@new_exp^0,f,c
  8660  003376  A0D8               	btfss	status,0,c
  8661  003378  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8662  00337A                     l4422:
  8663  00337A  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8664  00337C  EFC2  F019         	goto	u4791
  8665  003380  EFC4  F019         	goto	u4790
  8666  003384                     u4791:
  8667  003384  EFA8  F019         	goto	l4416
  8668  003388                     u4790:
  8669  003388  0E00               	movlw	0
  8670  00338A  6E19               	movwf	___fldiv@aexp^0,c
  8671  00338C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8672  00338E  EFCB  F019         	goto	u4801
  8673  003392  EFCD  F019         	goto	u4800
  8674  003396                     u4801:
  8675  003396  EFF1  F019         	goto	l1249
  8676  00339A                     u4800:
  8677  00339A  0EFF               	movlw	255
  8678  00339C  1414               	andwf	___fldiv@grs^0,w,c
  8679  00339E  6E09               	movwf	??___fldiv^0,c
  8680  0033A0  0EFF               	movlw	255
  8681  0033A2  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8682  0033A4  6E0A               	movwf	(??___fldiv+1)^0,c
  8683  0033A6  0EFF               	movlw	255
  8684  0033A8  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8685  0033AA  6E0B               	movwf	(??___fldiv+2)^0,c
  8686  0033AC  0E7F               	movlw	127
  8687  0033AE  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8688  0033B0  6E0C               	movwf	(??___fldiv+3)^0,c
  8689  0033B2  5009               	movf	??___fldiv^0,w,c
  8690  0033B4  100A               	iorwf	(??___fldiv+1)^0,w,c
  8691  0033B6  100B               	iorwf	(??___fldiv+2)^0,w,c
  8692  0033B8  100C               	iorwf	(??___fldiv+3)^0,w,c
  8693  0033BA  B4D8               	btfsc	status,2,c
  8694  0033BC  EFE2  F019         	goto	u4811
  8695  0033C0  EFE4  F019         	goto	u4810
  8696  0033C4                     u4811:
  8697  0033C4  EFE8  F019         	goto	l1250
  8698  0033C8                     u4810:
  8699  0033C8                     l4430:
  8700  0033C8  0E01               	movlw	1
  8701  0033CA  6E19               	movwf	___fldiv@aexp^0,c
  8702  0033CC  EFF1  F019         	goto	l1249
  8703  0033D0                     l1250:
  8704  0033D0  A001               	btfss	___fldiv@b^0,0,c
  8705  0033D2  EFED  F019         	goto	u4821
  8706  0033D6  EFEF  F019         	goto	u4820
  8707  0033DA                     u4821:
  8708  0033DA  EFF1  F019         	goto	l1249
  8709  0033DE                     u4820:
  8710  0033DE  EFE4  F019         	goto	l4430
  8711  0033E2                     l1249:
  8712  0033E2  5019               	movf	___fldiv@aexp^0,w,c
  8713  0033E4  B4D8               	btfsc	status,2,c
  8714  0033E6  EFF7  F019         	goto	u4831
  8715  0033EA  EFF9  F019         	goto	u4830
  8716  0033EE                     u4831:
  8717  0033EE  EF1D  F01A         	goto	l4442
  8718  0033F2                     u4830:
  8719  0033F2  0E01               	movlw	1
  8720  0033F4  2601               	addwf	___fldiv@b^0,f,c
  8721  0033F6  0E00               	movlw	0
  8722  0033F8  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8723  0033FA  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8724  0033FC  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8725  0033FE  A004               	btfss	(___fldiv@b+3)^0,0,c
  8726  003400  EF04  F01A         	goto	u4841
  8727  003404  EF06  F01A         	goto	u4840
  8728  003408                     u4841:
  8729  003408  EF1D  F01A         	goto	l4442
  8730  00340C                     u4840:
  8731  00340C  C001  F009         	movff	___fldiv@b,??___fldiv
  8732  003410  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8733  003414  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8734  003418  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8735  00341C  340C               	rlcf	(??___fldiv+3)^0,w,c
  8736  00341E  320C               	rrcf	(??___fldiv+3)^0,f,c
  8737  003420  320B               	rrcf	(??___fldiv+2)^0,f,c
  8738  003422  320A               	rrcf	(??___fldiv+1)^0,f,c
  8739  003424  3209               	rrcf	??___fldiv^0,f,c
  8740  003426  C009  F001         	movff	??___fldiv,___fldiv@b
  8741  00342A  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8742  00342E  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8743  003432  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8744  003436  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8745  003438  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8746  00343A                     l4442:
  8747  00343A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8748  00343C  EF28  F01A         	goto	u4851
  8749  003440  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8750  003442  E108               	bnz	u4850
  8751  003444  2812               	incf	___fldiv@new_exp^0,w,c
  8752  003446  A0D8               	btfss	status,0,c
  8753  003448  EF28  F01A         	goto	u4851
  8754  00344C  EF2A  F01A         	goto	u4850
  8755  003450                     u4851:
  8756  003450  EF35  F01A         	goto	l4446
  8757  003454                     u4850:
  8758  003454  0E00               	movlw	0
  8759  003456  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8760  003458  6812               	setf	___fldiv@new_exp^0,c
  8761  00345A  0E00               	movlw	0
  8762  00345C  6E01               	movwf	___fldiv@b^0,c
  8763  00345E  0E00               	movlw	0
  8764  003460  6E02               	movwf	(___fldiv@b+1)^0,c
  8765  003462  0E00               	movlw	0
  8766  003464  6E03               	movwf	(___fldiv@b+2)^0,c
  8767  003466  0E00               	movlw	0
  8768  003468  6E04               	movwf	(___fldiv@b+3)^0,c
  8769  00346A                     l4446:
  8770  00346A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8771  00346C  EF42  F01A         	goto	u4860
  8772  003470  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8773  003472  E106               	bnz	u4861
  8774  003474  0412               	decf	___fldiv@new_exp^0,w,c
  8775  003476  B0D8               	btfsc	status,0,c
  8776  003478  EF40  F01A         	goto	u4861
  8777  00347C  EF42  F01A         	goto	u4860
  8778  003480                     u4861:
  8779  003480  EF50  F01A         	goto	l4450
  8780  003484                     u4860:
  8781  003484  0E00               	movlw	0
  8782  003486  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8783  003488  0E00               	movlw	0
  8784  00348A  6E12               	movwf	___fldiv@new_exp^0,c
  8785  00348C  0E00               	movlw	0
  8786  00348E  6E01               	movwf	___fldiv@b^0,c
  8787  003490  0E00               	movlw	0
  8788  003492  6E02               	movwf	(___fldiv@b+1)^0,c
  8789  003494  0E00               	movlw	0
  8790  003496  6E03               	movwf	(___fldiv@b+2)^0,c
  8791  003498  0E00               	movlw	0
  8792  00349A  6E04               	movwf	(___fldiv@b+3)^0,c
  8793  00349C  0E00               	movlw	0
  8794  00349E  6E11               	movwf	___fldiv@sign^0,c
  8795  0034A0                     l4450:
  8796  0034A0  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8797  0034A4  A018               	btfss	___fldiv@bexp^0,0,c
  8798  0034A6  EF57  F01A         	goto	u4871
  8799  0034AA  EF59  F01A         	goto	u4870
  8800  0034AE                     u4871:
  8801  0034AE  EF5C  F01A         	goto	l4456
  8802  0034B2                     u4870:
  8803  0034B2  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8804  0034B4  EF5D  F01A         	goto	l4458
  8805  0034B8                     l4456:
  8806  0034B8  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8807  0034BA                     l4458:
  8808  0034BA  90D8               	bcf	status,0,c
  8809  0034BC  3018               	rrcf	___fldiv@bexp^0,w,c
  8810  0034BE  6E04               	movwf	(___fldiv@b+3)^0,c
  8811  0034C0  EF13  F019         	goto	l4372
  8812  0034C4                     l1236:
  8813  0034C4  0012               	return		;funcret
  8814  0034C6                     __end_of___fldiv:
  8815                           	callstack 0
  8816                           
  8817 ;; *************** function ___awmod *****************
  8818 ;; Defined at:
  8819 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  dividend        2    0[COMRAM] int 
  8822 ;;  divisor         2    2[COMRAM] int 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  sign            1    5[COMRAM] unsigned char 
  8825 ;;  counter         1    4[COMRAM] unsigned char 
  8826 ;; Return value:  Size  Location     Type
  8827 ;;                  2    0[COMRAM] int 
  8828 ;; Registers used:
  8829 ;;		wreg, status,2, status,0
  8830 ;; Tracked objects:
  8831 ;;		On entry : 0/0
  8832 ;;		On exit  : 0/0
  8833 ;;		Unchanged: 0/0
  8834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8839 ;;Total ram usage:        6 bytes
  8840 ;; Hardware stack levels used: 1
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_efgtoa
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text26
  8849  004EA2                     __ptext26:
  8850                           	callstack 0
  8851  004EA2                     ___awmod:
  8852                           	callstack 25
  8853  004EA2  0E00               	movlw	0
  8854  004EA4  6E06               	movwf	___awmod@sign^0,c
  8855  004EA6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8856  004EA8  EF5A  F027         	goto	u5130
  8857  004EAC  EF58  F027         	goto	u5131
  8858  004EB0                     u5131:
  8859  004EB0  EF60  F027         	goto	l4654
  8860  004EB4                     u5130:
  8861  004EB4  6C01               	negf	___awmod@dividend^0,c
  8862  004EB6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8863  004EB8  B0D8               	btfsc	status,0,c
  8864  004EBA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8865  004EBC  0E01               	movlw	1
  8866  004EBE  6E06               	movwf	___awmod@sign^0,c
  8867  004EC0                     l4654:
  8868  004EC0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8869  004EC2  EF67  F027         	goto	u5140
  8870  004EC6  EF65  F027         	goto	u5141
  8871  004ECA                     u5141:
  8872  004ECA  EF6B  F027         	goto	l4658
  8873  004ECE                     u5140:
  8874  004ECE  6C03               	negf	___awmod@divisor^0,c
  8875  004ED0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8876  004ED2  B0D8               	btfsc	status,0,c
  8877  004ED4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8878  004ED6                     l4658:
  8879  004ED6  5003               	movf	___awmod@divisor^0,w,c
  8880  004ED8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8881  004EDA  B4D8               	btfsc	status,2,c
  8882  004EDC  EF72  F027         	goto	u5151
  8883  004EE0  EF74  F027         	goto	u5150
  8884  004EE4                     u5151:
  8885  004EE4  EF98  F027         	goto	l4674
  8886  004EE8                     u5150:
  8887  004EE8  0E01               	movlw	1
  8888  004EEA  6E05               	movwf	___awmod@counter^0,c
  8889  004EEC  EF7C  F027         	goto	l4664
  8890  004EF0                     l4662:
  8891  004EF0  90D8               	bcf	status,0,c
  8892  004EF2  3603               	rlcf	___awmod@divisor^0,f,c
  8893  004EF4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8894  004EF6  2A05               	incf	___awmod@counter^0,f,c
  8895  004EF8                     l4664:
  8896  004EF8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8897  004EFA  EF81  F027         	goto	u5161
  8898  004EFE  EF83  F027         	goto	u5160
  8899  004F02                     u5161:
  8900  004F02  EF78  F027         	goto	l4662
  8901  004F06                     u5160:
  8902  004F06                     l4666:
  8903  004F06  5003               	movf	___awmod@divisor^0,w,c
  8904  004F08  5C01               	subwf	___awmod@dividend^0,w,c
  8905  004F0A  5004               	movf	(___awmod@divisor+1)^0,w,c
  8906  004F0C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8907  004F0E  A0D8               	btfss	status,0,c
  8908  004F10  EF8C  F027         	goto	u5171
  8909  004F14  EF8E  F027         	goto	u5170
  8910  004F18                     u5171:
  8911  004F18  EF92  F027         	goto	l4670
  8912  004F1C                     u5170:
  8913  004F1C  5003               	movf	___awmod@divisor^0,w,c
  8914  004F1E  5E01               	subwf	___awmod@dividend^0,f,c
  8915  004F20  5004               	movf	(___awmod@divisor+1)^0,w,c
  8916  004F22  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8917  004F24                     l4670:
  8918  004F24  90D8               	bcf	status,0,c
  8919  004F26  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8920  004F28  3203               	rrcf	___awmod@divisor^0,f,c
  8921  004F2A  2E05               	decfsz	___awmod@counter^0,f,c
  8922  004F2C  EF83  F027         	goto	l4666
  8923  004F30                     l4674:
  8924  004F30  5006               	movf	___awmod@sign^0,w,c
  8925  004F32  B4D8               	btfsc	status,2,c
  8926  004F34  EF9E  F027         	goto	u5181
  8927  004F38  EFA0  F027         	goto	u5180
  8928  004F3C                     u5181:
  8929  004F3C  EFA4  F027         	goto	l4678
  8930  004F40                     u5180:
  8931  004F40  6C01               	negf	___awmod@dividend^0,c
  8932  004F42  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8933  004F44  B0D8               	btfsc	status,0,c
  8934  004F46  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8935  004F48                     l4678:
  8936  004F48  C001  F001         	movff	___awmod@dividend,?___awmod
  8937  004F4C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8938  004F50  0012               	return		;funcret
  8939  004F52                     __end_of___awmod:
  8940                           	callstack 0
  8941                           
  8942 ;; *************** function _dtoa *****************
  8943 ;; Defined at:
  8944 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8947 ;;		 -> sprintf@f(6), 
  8948 ;;  d               8   29[COMRAM] long long 
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;  n               8   53[COMRAM] long long 
  8951 ;;  i               2   61[COMRAM] int 
  8952 ;;  s               2   51[COMRAM] int 
  8953 ;;  w               2   49[COMRAM] int 
  8954 ;;  p               2   47[COMRAM] int 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  2   27[COMRAM] int 
  8957 ;; Registers used:
  8958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8964 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8966 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;Total ram usage:       36 bytes
  8969 ;; Hardware stack levels used: 1
  8970 ;; Hardware stack levels required when called: 4
  8971 ;; This function calls:
  8972 ;;		___aodiv
  8973 ;;		___aomod
  8974 ;;		_abs
  8975 ;;		_pad
  8976 ;; This function is called by:
  8977 ;;		_vfpfcnvrt
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text27
  8982  0034C6                     __ptext27:
  8983                           	callstack 0
  8984  0034C6                     _dtoa:
  8985                           	callstack 22
  8986  0034C6                     
  8987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8988  0034C6  C01E  F036         	movff	dtoa@d,dtoa@n
  8989  0034CA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8990  0034CE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8991  0034D2  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8992  0034D6  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8993  0034DA  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8994  0034DE  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8995  0034E2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8996  0034E6                     
  8997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8998  0034E6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8999  0034E8  EF78  F01A         	goto	u5681
  9000  0034EC  EF7B  F01A         	goto	u5680
  9001  0034F0                     u5681:
  9002  0034F0  0E01               	movlw	1
  9003  0034F2  EF7C  F01A         	goto	u5690
  9004  0034F6                     u5680:
  9005  0034F6  0E00               	movlw	0
  9006  0034F8                     u5690:
  9007  0034F8  6E34               	movwf	dtoa@s^0,c
  9008  0034FA  6A35               	clrf	(dtoa@s+1)^0,c
  9009                           
  9010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9011  0034FC  5034               	movf	dtoa@s^0,w,c
  9012  0034FE  1035               	iorwf	(dtoa@s+1)^0,w,c
  9013  003500  B4D8               	btfsc	status,2,c
  9014  003502  EF85  F01A         	goto	u5701
  9015  003506  EF87  F01A         	goto	u5700
  9016  00350A                     u5701:
  9017  00350A  EF97  F01A         	goto	l4888
  9018  00350E                     u5700:
  9019  00350E                     
  9020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9021  00350E  1E3D               	comf	(dtoa@n+7)^0,f,c
  9022  003510  1E3C               	comf	(dtoa@n+6)^0,f,c
  9023  003512  1E3B               	comf	(dtoa@n+5)^0,f,c
  9024  003514  1E3A               	comf	(dtoa@n+4)^0,f,c
  9025  003516  1E39               	comf	(dtoa@n+3)^0,f,c
  9026  003518  1E38               	comf	(dtoa@n+2)^0,f,c
  9027  00351A  1E37               	comf	(dtoa@n+1)^0,f,c
  9028  00351C  6C36               	negf	dtoa@n^0,c
  9029  00351E  0E00               	movlw	0
  9030  003520  2237               	addwfc	(dtoa@n+1)^0,f,c
  9031  003522  2238               	addwfc	(dtoa@n+2)^0,f,c
  9032  003524  2239               	addwfc	(dtoa@n+3)^0,f,c
  9033  003526  223A               	addwfc	(dtoa@n+4)^0,f,c
  9034  003528  223B               	addwfc	(dtoa@n+5)^0,f,c
  9035  00352A  223C               	addwfc	(dtoa@n+6)^0,f,c
  9036  00352C  223D               	addwfc	(dtoa@n+7)^0,f,c
  9037  00352E                     l4888:
  9038                           
  9039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9040  00352E  0100               	movlb	0	; () banked
  9041  003530  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  9042  003532  EF9D  F01A         	goto	u5711
  9043  003536  EF9F  F01A         	goto	u5710
  9044  00353A                     u5711:
  9045  00353A  EFA0  F01A         	goto	l4892
  9046  00353E                     u5710:
  9047  00353E                     
  9048                           ; BSR set to: 0
  9049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9050  00353E  93F0               	bcf	_flags& (0+255),1,b
  9051  003540                     l4892:
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9055  003540  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  9056  003542  EFAD  F01A         	goto	u5720
  9057  003546  51EF               	movf	(_prec+1)& (0+255),w,b
  9058  003548  E106               	bnz	u5721
  9059  00354A  05EE               	decf	_prec& (0+255),w,b
  9060  00354C  B0D8               	btfsc	status,0,c
  9061  00354E  EFAB  F01A         	goto	u5721
  9062  003552  EFAD  F01A         	goto	u5720
  9063  003556                     u5721:
  9064  003556  EFB3  F01A         	goto	l1386
  9065  00355A                     u5720:
  9066  00355A                     
  9067                           ; BSR set to: 0
  9068  00355A  0E00               	movlw	0
  9069  00355C  6E31               	movwf	(dtoa@p+1)^0,c
  9070  00355E  0E01               	movlw	1
  9071  003560  6E30               	movwf	dtoa@p^0,c
  9072  003562  EFB7  F01A         	goto	l1388
  9073  003566                     l1386:
  9074                           
  9075                           ; BSR set to: 0
  9076  003566  C0EE  F030         	movff	_prec,dtoa@p
  9077  00356A  C0EF  F031         	movff	_prec+1,dtoa@p+1
  9078  00356E                     l1388:
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9082  00356E  C0EC  F032         	movff	_width,dtoa@w
  9083  003572  C0ED  F033         	movff	_width+1,dtoa@w+1
  9084  003576                     
  9085                           ; BSR set to: 0
  9086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9087  003576  5034               	movf	dtoa@s^0,w,c
  9088  003578  1035               	iorwf	(dtoa@s+1)^0,w,c
  9089  00357A  A4D8               	btfss	status,2,c
  9090  00357C  EFC2  F01A         	goto	u5731
  9091  003580  EFC4  F01A         	goto	u5730
  9092  003584                     u5731:
  9093  003584  EFCB  F01A         	goto	l4900
  9094  003588                     u5730:
  9095  003588                     
  9096                           ; BSR set to: 0
  9097  003588  A5F0               	btfss	_flags& (0+255),2,b
  9098  00358A  EFC9  F01A         	goto	u5741
  9099  00358E  EFCB  F01A         	goto	u5740
  9100  003592                     u5741:
  9101  003592  EFCE  F01A         	goto	l4902
  9102  003596                     u5740:
  9103  003596                     l4900:
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  9107  003596  0632               	decf	dtoa@w^0,f,c
  9108  003598  A0D8               	btfss	status,0,c
  9109  00359A  0633               	decf	(dtoa@w+1)^0,f,c
  9110  00359C                     l4902:
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9114  00359C  0E00               	movlw	0
  9115  00359E  6E3F               	movwf	(dtoa@i+1)^0,c
  9116  0035A0  0E4F               	movlw	79
  9117  0035A2  6E3E               	movwf	dtoa@i^0,c
  9118  0035A4                     
  9119                           ; BSR set to: 0
  9120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9121  0035A4  0E00               	movlw	0
  9122  0035A6  0102               	movlb	2	; () banked
  9123  0035A8  6F9F               	movwf	(_dbuf+79)& (0+255),b
  9124                           
  9125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9126  0035AA  EF53  F01B         	goto	l4916
  9127  0035AE                     l4906:
  9128                           
  9129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  9130  0035AE  063E               	decf	dtoa@i^0,f,c
  9131  0035B0  A0D8               	btfss	status,0,c
  9132  0035B2  063F               	decf	(dtoa@i+1)^0,f,c
  9133  0035B4                     
  9134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9135  0035B4  0E50               	movlw	low _dbuf
  9136  0035B6  243E               	addwf	dtoa@i^0,w,c
  9137  0035B8  6ED9               	movwf	fsr2l,c
  9138  0035BA  0E02               	movlw	high _dbuf
  9139  0035BC  203F               	addwfc	(dtoa@i+1)^0,w,c
  9140  0035BE  6EDA               	movwf	fsr2h,c
  9141  0035C0  C036  F001         	movff	dtoa@n,___aomod@dividend
  9142  0035C4  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9143  0035C8  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9144  0035CC  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9145  0035D0  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9146  0035D4  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9147  0035D8  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9148  0035DC  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9149  0035E0  0E0A               	movlw	10
  9150  0035E2  6E09               	movwf	___aomod@divisor^0,c
  9151  0035E4  0E00               	movlw	0
  9152  0035E6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9153  0035E8  0E00               	movlw	0
  9154  0035EA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9155  0035EC  0E00               	movlw	0
  9156  0035EE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9157  0035F0  0E00               	movlw	0
  9158  0035F2  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9159  0035F4  0E00               	movlw	0
  9160  0035F6  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9161  0035F8  0E00               	movlw	0
  9162  0035FA  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9163  0035FC  0E00               	movlw	0
  9164  0035FE  6E10               	movwf	(___aomod@divisor+7)^0,c
  9165  003600  EC16  F022         	call	___aomod	;wreg free
  9166  003604  C001  F026         	movff	?___aomod,??_dtoa
  9167  003608  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9168  00360C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9169  003610  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9170  003614  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9171  003618  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9172  00361C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9173  003620  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9174  003624  C026  F013         	movff	??_dtoa,abs@a
  9175  003628  C028  F014         	movff	??_dtoa+2,abs@a+1
  9176  00362C  EC9D  F02B         	call	_abs	;wreg free
  9177  003630  5013               	movf	?_abs^0,w,c
  9178  003632  0F30               	addlw	48
  9179  003634  6EDF               	movwf	indf2,c
  9180  003636                     
  9181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  9182  003636  0630               	decf	dtoa@p^0,f,c
  9183  003638  A0D8               	btfss	status,0,c
  9184  00363A  0631               	decf	(dtoa@p+1)^0,f,c
  9185  00363C                     
  9186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  9187  00363C  0632               	decf	dtoa@w^0,f,c
  9188  00363E  A0D8               	btfss	status,0,c
  9189  003640  0633               	decf	(dtoa@w+1)^0,f,c
  9190  003642                     
  9191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9192  003642  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9193  003646  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9194  00364A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9195  00364E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9196  003652  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9197  003656  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9198  00365A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9199  00365E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9200  003662  0E0A               	movlw	10
  9201  003664  6E09               	movwf	___aodiv@divisor^0,c
  9202  003666  0E00               	movlw	0
  9203  003668  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9204  00366A  0E00               	movlw	0
  9205  00366C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9206  00366E  0E00               	movlw	0
  9207  003670  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9208  003672  0E00               	movlw	0
  9209  003674  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9210  003676  0E00               	movlw	0
  9211  003678  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9212  00367A  0E00               	movlw	0
  9213  00367C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9214  00367E  0E00               	movlw	0
  9215  003680  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9216  003682  EC8F  F020         	call	___aodiv	;wreg free
  9217  003686  C001  F036         	movff	?___aodiv,dtoa@n
  9218  00368A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9219  00368E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9220  003692  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9221  003696  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9222  00369A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9223  00369E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9224  0036A2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9225  0036A6                     l4916:
  9226                           
  9227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9228  0036A6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9229  0036A8  EF5E  F01B         	goto	u5751
  9230  0036AC  503F               	movf	(dtoa@i+1)^0,w,c
  9231  0036AE  E108               	bnz	u5750
  9232  0036B0  043E               	decf	dtoa@i^0,w,c
  9233  0036B2  A0D8               	btfss	status,0,c
  9234  0036B4  EF5E  F01B         	goto	u5751
  9235  0036B8  EF60  F01B         	goto	u5750
  9236  0036BC                     u5751:
  9237  0036BC  EF91  F01B         	goto	l4926
  9238  0036C0                     u5750:
  9239  0036C0  5036               	movf	dtoa@n^0,w,c
  9240  0036C2  1037               	iorwf	(dtoa@n+1)^0,w,c
  9241  0036C4  1038               	iorwf	(dtoa@n+2)^0,w,c
  9242  0036C6  1039               	iorwf	(dtoa@n+3)^0,w,c
  9243  0036C8  103A               	iorwf	(dtoa@n+4)^0,w,c
  9244  0036CA  103B               	iorwf	(dtoa@n+5)^0,w,c
  9245  0036CC  103C               	iorwf	(dtoa@n+6)^0,w,c
  9246  0036CE  103D               	iorwf	(dtoa@n+7)^0,w,c
  9247  0036D0  A4D8               	btfss	status,2,c
  9248  0036D2  EF6D  F01B         	goto	u5761
  9249  0036D6  EF6F  F01B         	goto	u5760
  9250  0036DA                     u5761:
  9251  0036DA  EFD7  F01A         	goto	l4906
  9252  0036DE                     u5760:
  9253  0036DE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9254  0036E0  EF7C  F01B         	goto	u5770
  9255  0036E4  5031               	movf	(dtoa@p+1)^0,w,c
  9256  0036E6  E106               	bnz	u5771
  9257  0036E8  0430               	decf	dtoa@p^0,w,c
  9258  0036EA  B0D8               	btfsc	status,0,c
  9259  0036EC  EF7A  F01B         	goto	u5771
  9260  0036F0  EF7C  F01B         	goto	u5770
  9261  0036F4                     u5771:
  9262  0036F4  EFD7  F01A         	goto	l4906
  9263  0036F8                     u5770:
  9264  0036F8  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9265  0036FA  EF87  F01B         	goto	u5781
  9266  0036FE  5033               	movf	(dtoa@w+1)^0,w,c
  9267  003700  E108               	bnz	u5780
  9268  003702  0432               	decf	dtoa@w^0,w,c
  9269  003704  A0D8               	btfss	status,0,c
  9270  003706  EF87  F01B         	goto	u5781
  9271  00370A  EF89  F01B         	goto	u5780
  9272  00370E                     u5781:
  9273  00370E  EF91  F01B         	goto	l4926
  9274  003712                     u5780:
  9275  003712  0100               	movlb	0	; () banked
  9276  003714  B3F0               	btfsc	_flags& (0+255),1,b
  9277  003716  EF8F  F01B         	goto	u5791
  9278  00371A  EF91  F01B         	goto	u5790
  9279  00371E                     u5791:
  9280  00371E  EFD7  F01A         	goto	l4906
  9281  003722                     u5790:
  9282  003722                     l4926:
  9283                           
  9284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9285  003722  5034               	movf	dtoa@s^0,w,c
  9286  003724  1035               	iorwf	(dtoa@s+1)^0,w,c
  9287  003726  A4D8               	btfss	status,2,c
  9288  003728  EF98  F01B         	goto	u5801
  9289  00372C  EF9A  F01B         	goto	u5800
  9290  003730                     u5801:
  9291  003730  EFA2  F01B         	goto	l4930
  9292  003734                     u5800:
  9293  003734  0100               	movlb	0	; () banked
  9294  003736  A5F0               	btfss	_flags& (0+255),2,b
  9295  003738  EFA0  F01B         	goto	u5811
  9296  00373C  EFA2  F01B         	goto	u5810
  9297  003740                     u5811:
  9298  003740  EFC0  F01B         	goto	l4940
  9299  003744                     u5810:
  9300  003744                     l4930:
  9301                           
  9302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  9303  003744  063E               	decf	dtoa@i^0,f,c
  9304  003746  A0D8               	btfss	status,0,c
  9305  003748  063F               	decf	(dtoa@i+1)^0,f,c
  9306  00374A                     
  9307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9308  00374A  5034               	movf	dtoa@s^0,w,c
  9309  00374C  1035               	iorwf	(dtoa@s+1)^0,w,c
  9310  00374E  A4D8               	btfss	status,2,c
  9311  003750  EFAC  F01B         	goto	u5821
  9312  003754  EFAE  F01B         	goto	u5820
  9313  003758                     u5821:
  9314  003758  EFB4  F01B         	goto	l4936
  9315  00375C                     u5820:
  9316  00375C  0E00               	movlw	0
  9317  00375E  6E2F               	movwf	(_dtoa$2945+1)^0,c
  9318  003760  0E2B               	movlw	43
  9319  003762  6E2E               	movwf	_dtoa$2945^0,c
  9320  003764  EFB8  F01B         	goto	l4938
  9321  003768                     l4936:
  9322  003768  0E00               	movlw	0
  9323  00376A  6E2F               	movwf	(_dtoa$2945+1)^0,c
  9324  00376C  0E2D               	movlw	45
  9325  00376E  6E2E               	movwf	_dtoa$2945^0,c
  9326  003770                     l4938:
  9327  003770  0E50               	movlw	low _dbuf
  9328  003772  243E               	addwf	dtoa@i^0,w,c
  9329  003774  6ED9               	movwf	fsr2l,c
  9330  003776  0E02               	movlw	high _dbuf
  9331  003778  203F               	addwfc	(dtoa@i+1)^0,w,c
  9332  00377A  6EDA               	movwf	fsr2h,c
  9333  00377C  C02E  FFDF         	movff	_dtoa$2945,indf2
  9334  003780                     l4940:
  9335                           
  9336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9337  003780  C01C  F011         	movff	dtoa@fp,pad@fp
  9338  003784  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9339  003788  0E50               	movlw	low _dbuf
  9340  00378A  243E               	addwf	dtoa@i^0,w,c
  9341  00378C  6E13               	movwf	pad@buf^0,c
  9342  00378E  0E02               	movlw	high _dbuf
  9343  003790  203F               	addwfc	(dtoa@i+1)^0,w,c
  9344  003792  6E14               	movwf	(pad@buf+1)^0,c
  9345  003794  C032  F015         	movff	dtoa@w,pad@p
  9346  003798  C033  F016         	movff	dtoa@w+1,pad@p+1
  9347  00379C  EC8C  F026         	call	_pad	;wreg free
  9348  0037A0  C011  F01C         	movff	?_pad,?_dtoa
  9349  0037A4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9350  0037A8  0012               	return		;funcret
  9351  0037AA                     __end_of_dtoa:
  9352                           	callstack 0
  9353                           
  9354 ;; *************** function _pad *****************
  9355 ;; Defined at:
  9356 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9359 ;;		 -> sprintf@f(6), 
  9360 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9361 ;;		 -> dbuf(80), 
  9362 ;;  p               2   20[COMRAM] int 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;  w               2   25[COMRAM] int 
  9365 ;;  i               2   23[COMRAM] int 
  9366 ;; Return value:  Size  Location     Type
  9367 ;;                  2   16[COMRAM] int 
  9368 ;; Registers used:
  9369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9370 ;; Tracked objects:
  9371 ;;		On entry : 0/0
  9372 ;;		On exit  : 0/0
  9373 ;;		Unchanged: 0/0
  9374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9375 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9378 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9379 ;;Total ram usage:       11 bytes
  9380 ;; Hardware stack levels used: 1
  9381 ;; Hardware stack levels required when called: 3
  9382 ;; This function calls:
  9383 ;;		_fputc
  9384 ;;		_fputs
  9385 ;;		_strlen
  9386 ;; This function is called by:
  9387 ;;		_dtoa
  9388 ;;		_efgtoa
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           
  9392                           	psect	text28
  9393  004D18                     __ptext28:
  9394                           	callstack 0
  9395  004D18                     _pad:
  9396                           	callstack 22
  9397  004D18                     
  9398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9399  004D18  0100               	movlb	0	; () banked
  9400  004D1A  A1F0               	btfss	_flags& (0+255),0,b
  9401  004D1C  EF92  F026         	goto	u5351
  9402  004D20  EF94  F026         	goto	u5350
  9403  004D24                     u5351:
  9404  004D24  EF9E  F026         	goto	l4776
  9405  004D28                     u5350:
  9406  004D28                     
  9407                           ; BSR set to: 0
  9408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9409  004D28  C013  F00A         	movff	pad@buf,fputs@s
  9410  004D2C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9411  004D30  C011  F00C         	movff	pad@fp,fputs@fp
  9412  004D34  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9413  004D38  EC5A  F02B         	call	_fputs	;wreg free
  9414  004D3C                     l4776:
  9415                           
  9416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9417  004D3C  BE16               	btfsc	(pad@p+1)^0,7,c
  9418  004D3E  EFA3  F026         	goto	u5361
  9419  004D42  EFA5  F026         	goto	u5360
  9420  004D46                     u5361:
  9421  004D46  EFAB  F026         	goto	l4780
  9422  004D4A                     u5360:
  9423  004D4A  C015  F01A         	movff	pad@p,pad@w
  9424  004D4E  C016  F01B         	movff	pad@p+1,pad@w+1
  9425  004D52  EFAF  F026         	goto	l1375
  9426  004D56                     l4780:
  9427  004D56  0E00               	movlw	0
  9428  004D58  6E1B               	movwf	(pad@w+1)^0,c
  9429  004D5A  0E00               	movlw	0
  9430  004D5C  6E1A               	movwf	pad@w^0,c
  9431  004D5E                     l1375:
  9432                           
  9433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9434  004D5E  0E00               	movlw	0
  9435  004D60  6E19               	movwf	(pad@i+1)^0,c
  9436  004D62  0E00               	movlw	0
  9437  004D64  6E18               	movwf	pad@i^0,c
  9438                           
  9439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9440  004D66  EFC1  F026         	goto	l4786
  9441  004D6A                     l4782:
  9442                           
  9443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9444  004D6A  0E00               	movlw	0
  9445  004D6C  6E02               	movwf	(fputc@c+1)^0,c
  9446  004D6E  0E20               	movlw	32
  9447  004D70  6E01               	movwf	fputc@c^0,c
  9448  004D72  C011  F003         	movff	pad@fp,fputc@fp
  9449  004D76  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9450  004D7A  EC27  F026         	call	_fputc	;wreg free
  9451  004D7E                     
  9452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9453  004D7E  4A18               	infsnz	pad@i^0,f,c
  9454  004D80  2A19               	incf	(pad@i+1)^0,f,c
  9455  004D82                     l4786:
  9456                           
  9457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9458  004D82  501A               	movf	pad@w^0,w,c
  9459  004D84  5C18               	subwf	pad@i^0,w,c
  9460  004D86  5019               	movf	(pad@i+1)^0,w,c
  9461  004D88  0A80               	xorlw	128
  9462  004D8A  6E17               	movwf	??_pad^0,c
  9463  004D8C  501B               	movf	(pad@w+1)^0,w,c
  9464  004D8E  0A80               	xorlw	128
  9465  004D90  5817               	subwfb	??_pad^0,w,c
  9466  004D92  A0D8               	btfss	status,0,c
  9467  004D94  EFCE  F026         	goto	u5371
  9468  004D98  EFD0  F026         	goto	u5370
  9469  004D9C                     u5371:
  9470  004D9C  EFB5  F026         	goto	l4782
  9471  004DA0                     u5370:
  9472  004DA0                     
  9473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9474  004DA0  0100               	movlb	0	; () banked
  9475  004DA2  B1F0               	btfsc	_flags& (0+255),0,b
  9476  004DA4  EFD6  F026         	goto	u5381
  9477  004DA8  EFD8  F026         	goto	u5380
  9478  004DAC                     u5381:
  9479  004DAC  EFE2  F026         	goto	l4790
  9480  004DB0                     u5380:
  9481  004DB0                     
  9482                           ; BSR set to: 0
  9483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9484  004DB0  C013  F00A         	movff	pad@buf,fputs@s
  9485  004DB4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9486  004DB8  C011  F00C         	movff	pad@fp,fputs@fp
  9487  004DBC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9488  004DC0  EC5A  F02B         	call	_fputs	;wreg free
  9489  004DC4                     l4790:
  9490                           
  9491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9492  004DC4  C013  F001         	movff	pad@buf,strlen@s
  9493  004DC8  C014  F002         	movff	pad@buf+1,strlen@s+1
  9494  004DCC  EC49  F02C         	call	_strlen	;wreg free
  9495  004DD0  501A               	movf	pad@w^0,w,c
  9496  004DD2  2401               	addwf	?_strlen^0,w,c
  9497  004DD4  6E11               	movwf	?_pad^0,c
  9498  004DD6  501B               	movf	(pad@w+1)^0,w,c
  9499  004DD8  2002               	addwfc	(?_strlen+1)^0,w,c
  9500  004DDA  6E12               	movwf	(?_pad+1)^0,c
  9501  004DDC  0012               	return		;funcret
  9502  004DDE                     __end_of_pad:
  9503                           	callstack 0
  9504                           
  9505 ;; *************** function _strlen *****************
  9506 ;; Defined at:
  9507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9510 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9513 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), 
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  2    0[COMRAM] unsigned int 
  9516 ;; Registers used:
  9517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9527 ;;Total ram usage:        4 bytes
  9528 ;; Hardware stack levels used: 1
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_pad
  9533 ;;		_stoa
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text29
  9538  005892                     __ptext29:
  9539                           	callstack 0
  9540  005892                     _strlen:
  9541                           	callstack 25
  9542  005892  C001  F003         	movff	strlen@s,strlen@a
  9543  005896  C002  F004         	movff	strlen@s+1,strlen@a+1
  9544  00589A  EF51  F02C         	goto	l4232
  9545  00589E                     l4230:
  9546  00589E  4A01               	infsnz	strlen@s^0,f,c
  9547  0058A0  2A02               	incf	(strlen@s+1)^0,f,c
  9548  0058A2                     l4232:
  9549  0058A2  C001  FFD9         	movff	strlen@s,fsr2l
  9550  0058A6  C002  FFDA         	movff	strlen@s+1,fsr2h
  9551  0058AA  50DF               	movf	indf2,w,c
  9552  0058AC  A4D8               	btfss	status,2,c
  9553  0058AE  EF5B  F02C         	goto	u4491
  9554  0058B2  EF5D  F02C         	goto	u4490
  9555  0058B6                     u4491:
  9556  0058B6  EF4F  F02C         	goto	l4230
  9557  0058BA                     u4490:
  9558  0058BA  5003               	movf	strlen@a^0,w,c
  9559  0058BC  5C01               	subwf	strlen@s^0,w,c
  9560  0058BE  6E01               	movwf	?_strlen^0,c
  9561  0058C0  5004               	movf	(strlen@a+1)^0,w,c
  9562  0058C2  5802               	subwfb	(strlen@s+1)^0,w,c
  9563  0058C4  6E02               	movwf	(?_strlen+1)^0,c
  9564  0058C6  0012               	return		;funcret
  9565  0058C8                     __end_of_strlen:
  9566                           	callstack 0
  9567                           
  9568 ;; *************** function _fputs *****************
  9569 ;; Defined at:
  9570 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9573 ;;		 -> dbuf(80), 
  9574 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9575 ;;		 -> sprintf@f(6), 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  i               2   14[COMRAM] int 
  9578 ;;  c               1   13[COMRAM] unsigned char 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  2    9[COMRAM] int 
  9581 ;; Registers used:
  9582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9589 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9591 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9592 ;;Total ram usage:        7 bytes
  9593 ;; Hardware stack levels used: 1
  9594 ;; Hardware stack levels required when called: 2
  9595 ;; This function calls:
  9596 ;;		_fputc
  9597 ;; This function is called by:
  9598 ;;		_pad
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           	psect	text30
  9603  0056B4                     __ptext30:
  9604                           	callstack 0
  9605  0056B4                     _fputs:
  9606                           	callstack 22
  9607  0056B4  0E00               	movlw	0
  9608  0056B6  6E10               	movwf	(fputs@i+1)^0,c
  9609  0056B8  0E00               	movlw	0
  9610  0056BA  6E0F               	movwf	fputs@i^0,c
  9611  0056BC  EF6B  F02B         	goto	l4226
  9612  0056C0                     l4222:
  9613  0056C0  C00E  F001         	movff	fputs@c,fputc@c
  9614  0056C4  6A02               	clrf	(fputc@c+1)^0,c
  9615  0056C6  C00C  F003         	movff	fputs@fp,fputc@fp
  9616  0056CA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9617  0056CE  EC27  F026         	call	_fputc	;wreg free
  9618  0056D2  4A0F               	infsnz	fputs@i^0,f,c
  9619  0056D4  2A10               	incf	(fputs@i+1)^0,f,c
  9620  0056D6                     l4226:
  9621  0056D6  500F               	movf	fputs@i^0,w,c
  9622  0056D8  240A               	addwf	fputs@s^0,w,c
  9623  0056DA  6ED9               	movwf	fsr2l,c
  9624  0056DC  5010               	movf	(fputs@i+1)^0,w,c
  9625  0056DE  200B               	addwfc	(fputs@s+1)^0,w,c
  9626  0056E0  6EDA               	movwf	fsr2h,c
  9627  0056E2  50DF               	movf	indf2,w,c
  9628  0056E4  6E0E               	movwf	fputs@c^0,c
  9629  0056E6  500E               	movf	fputs@c^0,w,c
  9630  0056E8  A4D8               	btfss	status,2,c
  9631  0056EA  EF79  F02B         	goto	u4481
  9632  0056EE  EF7B  F02B         	goto	u4480
  9633  0056F2                     u4481:
  9634  0056F2  EF60  F02B         	goto	l4222
  9635  0056F6                     u4480:
  9636  0056F6  0012               	return		;funcret
  9637  0056F8                     __end_of_fputs:
  9638                           	callstack 0
  9639                           
  9640 ;; *************** function _fputc *****************
  9641 ;; Defined at:
  9642 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;  c               2    0[COMRAM] int 
  9645 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9646 ;;		 -> sprintf@f(6), 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  2    0[COMRAM] int 
  9651 ;; Registers used:
  9652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9660 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9661 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9662 ;;Total ram usage:        9 bytes
  9663 ;; Hardware stack levels used: 1
  9664 ;; Hardware stack levels required when called: 1
  9665 ;; This function calls:
  9666 ;;		_putch
  9667 ;; This function is called by:
  9668 ;;		_pad
  9669 ;;		_stoa
  9670 ;;		_vfpfcnvrt
  9671 ;;		_fputs
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text31
  9676  004C4E                     __ptext31:
  9677                           	callstack 0
  9678  004C4E                     _fputc:
  9679                           	callstack 24
  9680  004C4E  5003               	movf	fputc@fp^0,w,c
  9681  004C50  1004               	iorwf	(fputc@fp+1)^0,w,c
  9682  004C52  B4D8               	btfsc	status,2,c
  9683  004C54  EF2E  F026         	goto	u4051
  9684  004C58  EF30  F026         	goto	u4050
  9685  004C5C                     u4051:
  9686  004C5C  EF39  F026         	goto	l4008
  9687  004C60                     u4050:
  9688  004C60  5003               	movf	fputc@fp^0,w,c
  9689  004C62  1004               	iorwf	(fputc@fp+1)^0,w,c
  9690  004C64  A4D8               	btfss	status,2,c
  9691  004C66  EF37  F026         	goto	u4061
  9692  004C6A  EF39  F026         	goto	u4060
  9693  004C6E                     u4061:
  9694  004C6E  EF3E  F026         	goto	l4010
  9695  004C72                     u4060:
  9696  004C72                     l4008:
  9697  004C72  5001               	movf	fputc@c^0,w,c
  9698  004C74  EC56  F02D         	call	_putch
  9699  004C78  EF8B  F026         	goto	l1651
  9700  004C7C                     l4010:
  9701  004C7C  EE20 F004          	lfsr	2,4
  9702  004C80  5003               	movf	fputc@fp^0,w,c
  9703  004C82  26D9               	addwf	fsr2l,f,c
  9704  004C84  5004               	movf	(fputc@fp+1)^0,w,c
  9705  004C86  22DA               	addwfc	fsr2h,f,c
  9706  004C88  50DE               	movf	postinc2,w,c
  9707  004C8A  10DE               	iorwf	postinc2,w,c
  9708  004C8C  B4D8               	btfsc	status,2,c
  9709  004C8E  EF4B  F026         	goto	u4071
  9710  004C92  EF4D  F026         	goto	u4070
  9711  004C96                     u4071:
  9712  004C96  EF68  F026         	goto	l4014
  9713  004C9A                     u4070:
  9714  004C9A  EE20 F004          	lfsr	2,4
  9715  004C9E  5003               	movf	fputc@fp^0,w,c
  9716  004CA0  26D9               	addwf	fsr2l,f,c
  9717  004CA2  5004               	movf	(fputc@fp+1)^0,w,c
  9718  004CA4  22DA               	addwfc	fsr2h,f,c
  9719  004CA6  EE10 F002          	lfsr	1,2
  9720  004CAA  5003               	movf	fputc@fp^0,w,c
  9721  004CAC  26E1               	addwf	fsr1l,f,c
  9722  004CAE  5004               	movf	(fputc@fp+1)^0,w,c
  9723  004CB0  22E2               	addwfc	fsr1h,f,c
  9724  004CB2  50DE               	movf	postinc2,w,c
  9725  004CB4  5CE6               	subwf	postinc1,w,c
  9726  004CB6  50E6               	movf	postinc1,w,c
  9727  004CB8  0A80               	xorlw	128
  9728  004CBA  6E09               	movwf	(??_fputc+4)^0,c
  9729  004CBC  50DE               	movf	postinc2,w,c
  9730  004CBE  0A80               	xorlw	128
  9731  004CC0  5809               	subwfb	(??_fputc+4)^0,w,c
  9732  004CC2  B0D8               	btfsc	status,0,c
  9733  004CC4  EF66  F026         	goto	u4081
  9734  004CC8  EF68  F026         	goto	u4080
  9735  004CCC                     u4081:
  9736  004CCC  EF8B  F026         	goto	l1651
  9737  004CD0                     u4080:
  9738  004CD0                     l4014:
  9739  004CD0  EE20 F002          	lfsr	2,2
  9740  004CD4  5003               	movf	fputc@fp^0,w,c
  9741  004CD6  26D9               	addwf	fsr2l,f,c
  9742  004CD8  5004               	movf	(fputc@fp+1)^0,w,c
  9743  004CDA  22DA               	addwfc	fsr2h,f,c
  9744  004CDC  CFDE F005          	movff	postinc2,??_fputc
  9745  004CE0  CFDD F006          	movff	postdec2,??_fputc+1
  9746  004CE4  C003  FFD9         	movff	fputc@fp,fsr2l
  9747  004CE8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9748  004CEC  CFDE F007          	movff	postinc2,??_fputc+2
  9749  004CF0  CFDD F008          	movff	postdec2,??_fputc+3
  9750  004CF4  5005               	movf	??_fputc^0,w,c
  9751  004CF6  2407               	addwf	(??_fputc+2)^0,w,c
  9752  004CF8  6ED9               	movwf	fsr2l,c
  9753  004CFA  5006               	movf	(??_fputc+1)^0,w,c
  9754  004CFC  2008               	addwfc	(??_fputc+3)^0,w,c
  9755  004CFE  6EDA               	movwf	fsr2h,c
  9756  004D00  C001  FFDF         	movff	fputc@c,indf2
  9757  004D04  EE20 F002          	lfsr	2,2
  9758  004D08  5003               	movf	fputc@fp^0,w,c
  9759  004D0A  26D9               	addwf	fsr2l,f,c
  9760  004D0C  5004               	movf	(fputc@fp+1)^0,w,c
  9761  004D0E  22DA               	addwfc	fsr2h,f,c
  9762  004D10  2ADE               	incf	postinc2,f,c
  9763  004D12  0E00               	movlw	0
  9764  004D14  22DD               	addwfc	postdec2,f,c
  9765  004D16                     l1651:
  9766  004D16  0012               	return		;funcret
  9767  004D18                     __end_of_fputc:
  9768                           	callstack 0
  9769                           
  9770 ;; *************** function _putch *****************
  9771 ;; Defined at:
  9772 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;  c               1    wreg     unsigned char 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;  c               1    0[COMRAM] unsigned char 
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;Total ram usage:        0 bytes
  9791 ;; Hardware stack levels used: 1
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		_fputc
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text32
  9800  005AAC                     __ptext32:
  9801                           	callstack 0
  9802  005AAC                     _putch:
  9803                           	callstack 24
  9804  005AAC  0012               	return		;funcret
  9805  005AAE                     __end_of_putch:
  9806                           	callstack 0
  9807                           
  9808 ;; *************** function _abs *****************
  9809 ;; Defined at:
  9810 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  a               2   18[COMRAM] int 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  2   18[COMRAM] int 
  9817 ;; Registers used:
  9818 ;;		wreg, status,2, status,0
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;Total ram usage:        4 bytes
  9829 ;; Hardware stack levels used: 1
  9830 ;; This function calls:
  9831 ;;		Nothing
  9832 ;; This function is called by:
  9833 ;;		_dtoa
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           	psect	text33
  9838  00573A                     __ptext33:
  9839                           	callstack 0
  9840  00573A                     _abs:
  9841                           	callstack 25
  9842  00573A  BE14               	btfsc	(abs@a+1)^0,7,c
  9843  00573C  EFAA  F02B         	goto	u5390
  9844  005740  5014               	movf	(abs@a+1)^0,w,c
  9845  005742  E106               	bnz	u5391
  9846  005744  0413               	decf	abs@a^0,w,c
  9847  005746  B0D8               	btfsc	status,0,c
  9848  005748  EFA8  F02B         	goto	u5391
  9849  00574C  EFAA  F02B         	goto	u5390
  9850  005750                     u5391:
  9851  005750  EFB8  F02B         	goto	l1572
  9852  005754                     u5390:
  9853  005754  C013  F015         	movff	abs@a,??_abs
  9854  005758  C014  F016         	movff	abs@a+1,??_abs+1
  9855  00575C  1E15               	comf	??_abs^0,f,c
  9856  00575E  1E16               	comf	(??_abs+1)^0,f,c
  9857  005760  4A15               	infsnz	??_abs^0,f,c
  9858  005762  2A16               	incf	(??_abs+1)^0,f,c
  9859  005764  C015  F013         	movff	??_abs,?_abs
  9860  005768  C016  F014         	movff	??_abs+1,?_abs+1
  9861  00576C  EFBC  F02B         	goto	l1575
  9862  005770                     l1572:
  9863  005770  C013  F013         	movff	abs@a,?_abs
  9864  005774  C014  F014         	movff	abs@a+1,?_abs+1
  9865  005778                     l1575:
  9866  005778  0012               	return		;funcret
  9867  00577A                     __end_of_abs:
  9868                           	callstack 0
  9869                           
  9870 ;; *************** function ___aomod *****************
  9871 ;; Defined at:
  9872 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  dividend        8    0[COMRAM] long long 
  9875 ;;  divisor         8    8[COMRAM] long long 
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;  sign            1   17[COMRAM] unsigned char 
  9878 ;;  counter         1   16[COMRAM] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  8    0[COMRAM] long long 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9888 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9892 ;;Total ram usage:       18 bytes
  9893 ;; Hardware stack levels used: 1
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_dtoa
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text34
  9902  00442C                     __ptext34:
  9903                           	callstack 0
  9904  00442C                     ___aomod:
  9905                           	callstack 25
  9906  00442C  0E00               	movlw	0
  9907  00442E  6E12               	movwf	___aomod@sign^0,c
  9908  004430  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9909  004432  EF1F  F022         	goto	u4590
  9910  004436  EF1D  F022         	goto	u4591
  9911  00443A                     u4591:
  9912  00443A  EF31  F022         	goto	l4300
  9913  00443E                     u4590:
  9914  00443E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9915  004440  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9916  004442  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9917  004444  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9918  004446  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9919  004448  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9920  00444A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9921  00444C  6C01               	negf	___aomod@dividend^0,c
  9922  00444E  0E00               	movlw	0
  9923  004450  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9924  004452  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9925  004454  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9926  004456  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9927  004458  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9928  00445A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9929  00445C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9930  00445E  0E01               	movlw	1
  9931  004460  6E12               	movwf	___aomod@sign^0,c
  9932  004462                     l4300:
  9933  004462  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9934  004464  EF38  F022         	goto	u4600
  9935  004468  EF36  F022         	goto	u4601
  9936  00446C                     u4601:
  9937  00446C  EF48  F022         	goto	l4304
  9938  004470                     u4600:
  9939  004470  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9940  004472  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9941  004474  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9942  004476  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9943  004478  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9944  00447A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9945  00447C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9946  00447E  6C09               	negf	___aomod@divisor^0,c
  9947  004480  0E00               	movlw	0
  9948  004482  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9949  004484  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9950  004486  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9951  004488  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9952  00448A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9953  00448C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9954  00448E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9955  004490                     l4304:
  9956  004490  5009               	movf	___aomod@divisor^0,w,c
  9957  004492  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9958  004494  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9959  004496  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9960  004498  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9961  00449A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9962  00449C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9963  00449E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9964  0044A0  B4D8               	btfsc	status,2,c
  9965  0044A2  EF55  F022         	goto	u4611
  9966  0044A6  EF57  F022         	goto	u4610
  9967  0044AA                     u4611:
  9968  0044AA  EF9F  F022         	goto	l4320
  9969  0044AE                     u4610:
  9970  0044AE  0E01               	movlw	1
  9971  0044B0  6E11               	movwf	___aomod@counter^0,c
  9972  0044B2  EF65  F022         	goto	l4310
  9973  0044B6                     l4308:
  9974  0044B6  90D8               	bcf	status,0,c
  9975  0044B8  3609               	rlcf	___aomod@divisor^0,f,c
  9976  0044BA  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9977  0044BC  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9978  0044BE  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9979  0044C0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9980  0044C2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9981  0044C4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9982  0044C6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9983  0044C8  2A11               	incf	___aomod@counter^0,f,c
  9984  0044CA                     l4310:
  9985  0044CA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9986  0044CC  EF6A  F022         	goto	u4621
  9987  0044D0  EF6C  F022         	goto	u4620
  9988  0044D4                     u4621:
  9989  0044D4  EF5B  F022         	goto	l4308
  9990  0044D8                     u4620:
  9991  0044D8                     l4312:
  9992  0044D8  5009               	movf	___aomod@divisor^0,w,c
  9993  0044DA  5C01               	subwf	___aomod@dividend^0,w,c
  9994  0044DC  500A               	movf	(___aomod@divisor+1)^0,w,c
  9995  0044DE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9996  0044E0  500B               	movf	(___aomod@divisor+2)^0,w,c
  9997  0044E2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9998  0044E4  500C               	movf	(___aomod@divisor+3)^0,w,c
  9999  0044E6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10000  0044E8  500D               	movf	(___aomod@divisor+4)^0,w,c
 10001  0044EA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10002  0044EC  500E               	movf	(___aomod@divisor+5)^0,w,c
 10003  0044EE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10004  0044F0  500F               	movf	(___aomod@divisor+6)^0,w,c
 10005  0044F2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10006  0044F4  5010               	movf	(___aomod@divisor+7)^0,w,c
 10007  0044F6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10008  0044F8  A0D8               	btfss	status,0,c
 10009  0044FA  EF81  F022         	goto	u4631
 10010  0044FE  EF83  F022         	goto	u4630
 10011  004502                     u4631:
 10012  004502  EF93  F022         	goto	l4316
 10013  004506                     u4630:
 10014  004506  5009               	movf	___aomod@divisor^0,w,c
 10015  004508  5E01               	subwf	___aomod@dividend^0,f,c
 10016  00450A  500A               	movf	(___aomod@divisor+1)^0,w,c
 10017  00450C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10018  00450E  500B               	movf	(___aomod@divisor+2)^0,w,c
 10019  004510  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10020  004512  500C               	movf	(___aomod@divisor+3)^0,w,c
 10021  004514  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10022  004516  500D               	movf	(___aomod@divisor+4)^0,w,c
 10023  004518  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10024  00451A  500E               	movf	(___aomod@divisor+5)^0,w,c
 10025  00451C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10026  00451E  500F               	movf	(___aomod@divisor+6)^0,w,c
 10027  004520  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10028  004522  5010               	movf	(___aomod@divisor+7)^0,w,c
 10029  004524  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10030  004526                     l4316:
 10031  004526  90D8               	bcf	status,0,c
 10032  004528  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10033  00452A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10034  00452C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10035  00452E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10036  004530  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10037  004532  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10038  004534  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10039  004536  3209               	rrcf	___aomod@divisor^0,f,c
 10040  004538  2E11               	decfsz	___aomod@counter^0,f,c
 10041  00453A  EF6C  F022         	goto	l4312
 10042  00453E                     l4320:
 10043  00453E  5012               	movf	___aomod@sign^0,w,c
 10044  004540  B4D8               	btfsc	status,2,c
 10045  004542  EFA5  F022         	goto	u4641
 10046  004546  EFA7  F022         	goto	u4640
 10047  00454A                     u4641:
 10048  00454A  EFB7  F022         	goto	l4324
 10049  00454E                     u4640:
 10050  00454E  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10051  004550  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10052  004552  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10053  004554  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10054  004556  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10055  004558  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10056  00455A  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10057  00455C  6C01               	negf	___aomod@dividend^0,c
 10058  00455E  0E00               	movlw	0
 10059  004560  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10060  004562  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10061  004564  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10062  004566  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10063  004568  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10064  00456A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10065  00456C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10066  00456E                     l4324:
 10067  00456E  C001  F001         	movff	___aomod@dividend,?___aomod
 10068  004572  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10069  004576  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10070  00457A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10071  00457E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10072  004582  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10073  004586  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10074  00458A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10075  00458E  0012               	return		;funcret
 10076  004590                     __end_of___aomod:
 10077                           	callstack 0
 10078                           
 10079 ;; *************** function ___aodiv *****************
 10080 ;; Defined at:
 10081 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  dividend        8    0[COMRAM] long long 
 10084 ;;  divisor         8    8[COMRAM] long long 
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;  quotient        8   18[COMRAM] long long 
 10087 ;;  sign            1   17[COMRAM] unsigned char 
 10088 ;;  counter         1   16[COMRAM] unsigned char 
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  8    0[COMRAM] long long 
 10091 ;; Registers used:
 10092 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10098 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10099 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10101 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;Total ram usage:       26 bytes
 10103 ;; Hardware stack levels used: 1
 10104 ;; This function calls:
 10105 ;;		Nothing
 10106 ;; This function is called by:
 10107 ;;		_dtoa
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text35
 10112  00411E                     __ptext35:
 10113                           	callstack 0
 10114  00411E                     ___aodiv:
 10115                           	callstack 25
 10116  00411E  0E00               	movlw	0
 10117  004120  6E12               	movwf	___aodiv@sign^0,c
 10118  004122  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10119  004124  EF98  F020         	goto	u4520
 10120  004128  EF96  F020         	goto	u4521
 10121  00412C                     u4521:
 10122  00412C  EFAA  F020         	goto	l4256
 10123  004130                     u4520:
 10124  004130  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10125  004132  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10126  004134  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10127  004136  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10128  004138  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10129  00413A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10130  00413C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10131  00413E  6C09               	negf	___aodiv@divisor^0,c
 10132  004140  0E00               	movlw	0
 10133  004142  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10134  004144  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10135  004146  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10136  004148  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10137  00414A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10138  00414C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10139  00414E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10140  004150  0E01               	movlw	1
 10141  004152  6E12               	movwf	___aodiv@sign^0,c
 10142  004154                     l4256:
 10143  004154  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10144  004156  EFB1  F020         	goto	u4530
 10145  00415A  EFAF  F020         	goto	u4531
 10146  00415E                     u4531:
 10147  00415E  EFC3  F020         	goto	l4262
 10148  004162                     u4530:
 10149  004162  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10150  004164  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10151  004166  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10152  004168  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10153  00416A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10154  00416C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10155  00416E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10156  004170  6C01               	negf	___aodiv@dividend^0,c
 10157  004172  0E00               	movlw	0
 10158  004174  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10159  004176  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10160  004178  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10161  00417A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10162  00417C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10163  00417E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10164  004180  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10165  004182  0E01               	movlw	1
 10166  004184  1A12               	xorwf	___aodiv@sign^0,f,c
 10167  004186                     l4262:
 10168  004186  EE20  F013         	lfsr	2,___aodiv@quotient
 10169  00418A  0E07               	movlw	7
 10170  00418C                     u4541:
 10171  00418C  6ADE               	clrf	postinc2,c
 10172  00418E  06E8               	decf	wreg,f,c
 10173  004190  E2FD               	bc	u4541
 10174  004192  5009               	movf	___aodiv@divisor^0,w,c
 10175  004194  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10176  004196  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10177  004198  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10178  00419A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10179  00419C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10180  00419E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10181  0041A0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10182  0041A2  B4D8               	btfsc	status,2,c
 10183  0041A4  EFD6  F020         	goto	u4551
 10184  0041A8  EFD8  F020         	goto	u4550
 10185  0041AC                     u4551:
 10186  0041AC  EF2A  F021         	goto	l4284
 10187  0041B0                     u4550:
 10188  0041B0  0E01               	movlw	1
 10189  0041B2  6E11               	movwf	___aodiv@counter^0,c
 10190  0041B4  EFE6  F020         	goto	l4270
 10191  0041B8                     l4268:
 10192  0041B8  90D8               	bcf	status,0,c
 10193  0041BA  3609               	rlcf	___aodiv@divisor^0,f,c
 10194  0041BC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10195  0041BE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10196  0041C0  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10197  0041C2  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10198  0041C4  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10199  0041C6  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10200  0041C8  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10201  0041CA  2A11               	incf	___aodiv@counter^0,f,c
 10202  0041CC                     l4270:
 10203  0041CC  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10204  0041CE  EFEB  F020         	goto	u4561
 10205  0041D2  EFED  F020         	goto	u4560
 10206  0041D6                     u4561:
 10207  0041D6  EFDC  F020         	goto	l4268
 10208  0041DA                     u4560:
 10209  0041DA                     l4272:
 10210  0041DA  90D8               	bcf	status,0,c
 10211  0041DC  3613               	rlcf	___aodiv@quotient^0,f,c
 10212  0041DE  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10213  0041E0  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10214  0041E2  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10215  0041E4  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10216  0041E6  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10217  0041E8  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10218  0041EA  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10219  0041EC  5009               	movf	___aodiv@divisor^0,w,c
 10220  0041EE  5C01               	subwf	___aodiv@dividend^0,w,c
 10221  0041F0  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10222  0041F2  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10223  0041F4  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10224  0041F6  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10225  0041F8  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10226  0041FA  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10227  0041FC  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10228  0041FE  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10229  004200  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10230  004202  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10231  004204  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10232  004206  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10233  004208  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10234  00420A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10235  00420C  A0D8               	btfss	status,0,c
 10236  00420E  EF0B  F021         	goto	u4571
 10237  004212  EF0D  F021         	goto	u4570
 10238  004216                     u4571:
 10239  004216  EF1E  F021         	goto	l4280
 10240  00421A                     u4570:
 10241  00421A  5009               	movf	___aodiv@divisor^0,w,c
 10242  00421C  5E01               	subwf	___aodiv@dividend^0,f,c
 10243  00421E  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10244  004220  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10245  004222  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10246  004224  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10247  004226  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10248  004228  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10249  00422A  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10250  00422C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10251  00422E  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10252  004230  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10253  004232  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10254  004234  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10255  004236  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10256  004238  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10257  00423A  8013               	bsf	___aodiv@quotient^0,0,c
 10258  00423C                     l4280:
 10259  00423C  90D8               	bcf	status,0,c
 10260  00423E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10261  004240  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10262  004242  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10263  004244  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10264  004246  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10265  004248  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10266  00424A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10267  00424C  3209               	rrcf	___aodiv@divisor^0,f,c
 10268  00424E  2E11               	decfsz	___aodiv@counter^0,f,c
 10269  004250  EFED  F020         	goto	l4272
 10270  004254                     l4284:
 10271  004254  5012               	movf	___aodiv@sign^0,w,c
 10272  004256  B4D8               	btfsc	status,2,c
 10273  004258  EF30  F021         	goto	u4581
 10274  00425C  EF32  F021         	goto	u4580
 10275  004260                     u4581:
 10276  004260  EF42  F021         	goto	l4288
 10277  004264                     u4580:
 10278  004264  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10279  004266  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10280  004268  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10281  00426A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10282  00426C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10283  00426E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10284  004270  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10285  004272  6C13               	negf	___aodiv@quotient^0,c
 10286  004274  0E00               	movlw	0
 10287  004276  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10288  004278  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10289  00427A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10290  00427C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10291  00427E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10292  004280  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10293  004282  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10294  004284                     l4288:
 10295  004284  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10296  004288  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10297  00428C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10298  004290  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10299  004294  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10300  004298  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10301  00429C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10302  0042A0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10303  0042A4  0012               	return		;funcret
 10304  0042A6                     __end_of___aodiv:
 10305                           	callstack 0
 10306                           
 10307 ;; *************** function _atoi *****************
 10308 ;; Defined at:
 10309 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10312 ;;		 -> STR_1(64), 
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  n               2   20[COMRAM] int 
 10315 ;;  neg             2   13[COMRAM] int 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  2    7[COMRAM] int 
 10318 ;; Registers used:
 10319 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;Total ram usage:       15 bytes
 10330 ;; Hardware stack levels used: 1
 10331 ;; Hardware stack levels required when called: 1
 10332 ;; This function calls:
 10333 ;;		___wmul
 10334 ;;		_isdigit
 10335 ;;		_isspace
 10336 ;; This function is called by:
 10337 ;;		_vfpfcnvrt
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text36
 10342  003F7A                     __ptext36:
 10343                           	callstack 0
 10344  003F7A                     _atoi:
 10345                           	callstack 25
 10346  003F7A  0E00               	movlw	0
 10347  003F7C  6E16               	movwf	(atoi@n+1)^0,c
 10348  003F7E  0E00               	movlw	0
 10349  003F80  6E15               	movwf	atoi@n^0,c
 10350  003F82  0E00               	movlw	0
 10351  003F84  6E0F               	movwf	(atoi@neg+1)^0,c
 10352  003F86  0E00               	movlw	0
 10353  003F88  6E0E               	movwf	atoi@neg^0,c
 10354  003F8A  EFC9  F01F         	goto	l5298
 10355  003F8E                     l5296:
 10356  003F8E  4A08               	infsnz	atoi@s^0,f,c
 10357  003F90  2A09               	incf	(atoi@s+1)^0,f,c
 10358  003F92                     l5298:
 10359  003F92  0E01               	movlw	1
 10360  003F94  6E14               	movwf	_atoi$3048^0,c
 10361  003F96  C008  FFF6         	movff	atoi@s,tblptrl
 10362  003F9A  C009  FFF7         	movff	atoi@s+1,tblptrh
 10363  003F9E                     	if	0	;tblptru may be non-zero
 10364  003F9E                     	endif
 10365  003F9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10366  003F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 10367  003FA0  6EF8               	movwf	tblptru,c
 10368  003FA2                     	endif
 10369  003FA2  0008               	tblrd		*
 10370  003FA4  50F5               	movf	tablat,w,c
 10371  003FA6  0A20               	xorlw	32
 10372  003FA8  B4D8               	btfsc	status,2,c
 10373  003FAA  EFD9  F01F         	goto	u6461
 10374  003FAE  EFDB  F01F         	goto	u6460
 10375  003FB2                     u6461:
 10376  003FB2  EFFA  F01F         	goto	l5306
 10377  003FB6                     u6460:
 10378  003FB6  0EF7               	movlw	247
 10379  003FB8  6E0A               	movwf	??_atoi^0,c
 10380  003FBA  0EFF               	movlw	255
 10381  003FBC  6E0B               	movwf	(??_atoi+1)^0,c
 10382  003FBE  C008  FFF6         	movff	atoi@s,tblptrl
 10383  003FC2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10384  003FC6                     	if	0	;tblptru may be non-zero
 10385  003FC6                     	endif
 10386  003FC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10387  003FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 10388  003FC8  6EF8               	movwf	tblptru,c
 10389  003FCA                     	endif
 10390  003FCA  0008               	tblrd		*
 10391  003FCC  50F5               	movf	tablat,w,c
 10392  003FCE  6E0C               	movwf	(??_atoi+2)^0,c
 10393  003FD0  6A0D               	clrf	(??_atoi+3)^0,c
 10394  003FD2  500A               	movf	??_atoi^0,w,c
 10395  003FD4  260C               	addwf	(??_atoi+2)^0,f,c
 10396  003FD6  500B               	movf	(??_atoi+1)^0,w,c
 10397  003FD8  220D               	addwfc	(??_atoi+3)^0,f,c
 10398  003FDA  500D               	movf	(??_atoi+3)^0,w,c
 10399  003FDC  E109               	bnz	u6470
 10400  003FDE  0E05               	movlw	5
 10401  003FE0  5C0C               	subwf	(??_atoi+2)^0,w,c
 10402  003FE2  A0D8               	btfss	status,0,c
 10403  003FE4  EFF6  F01F         	goto	u6471
 10404  003FE8  EFF8  F01F         	goto	u6470
 10405  003FEC                     u6471:
 10406  003FEC  EFFA  F01F         	goto	l5306
 10407  003FF0                     u6470:
 10408  003FF0  0E00               	movlw	0
 10409  003FF2  6E14               	movwf	_atoi$3048^0,c
 10410  003FF4                     l5306:
 10411  003FF4  C014  F010         	movff	_atoi$3048,_atoi$3047
 10412  003FF8  6A11               	clrf	(_atoi$3047+1)^0,c
 10413  003FFA  5010               	movf	_atoi$3047^0,w,c
 10414  003FFC  1011               	iorwf	(_atoi$3047+1)^0,w,c
 10415  003FFE  A4D8               	btfss	status,2,c
 10416  004000  EF04  F020         	goto	u6481
 10417  004004  EF06  F020         	goto	u6480
 10418  004008                     u6481:
 10419  004008  EFC7  F01F         	goto	l5296
 10420  00400C                     u6480:
 10421  00400C  EF10  F020         	goto	l5316
 10422  004010                     l5312:
 10423  004010  0E00               	movlw	0
 10424  004012  6E0F               	movwf	(atoi@neg+1)^0,c
 10425  004014  0E01               	movlw	1
 10426  004016  6E0E               	movwf	atoi@neg^0,c
 10427  004018                     l5314:
 10428  004018  4A08               	infsnz	atoi@s^0,f,c
 10429  00401A  2A09               	incf	(atoi@s+1)^0,f,c
 10430  00401C  EF49  F020         	goto	l5322
 10431  004020                     l5316:
 10432  004020  C008  FFF6         	movff	atoi@s,tblptrl
 10433  004024  C009  FFF7         	movff	atoi@s+1,tblptrh
 10434  004028                     	if	0	;tblptru may be non-zero
 10435  004028                     	endif
 10436  004028                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10437  004028  0E00               	movlw	low (__mediumconst shr (0+16))
 10438  00402A  6EF8               	movwf	tblptru,c
 10439  00402C                     	endif
 10440  00402C  0008               	tblrd		*
 10441  00402E  50F5               	movf	tablat,w,c
 10442  004030  6E0A               	movwf	??_atoi^0,c
 10443  004032  6A0B               	clrf	(??_atoi+1)^0,c
 10444                           
 10445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10446                           ; Switch size 1, requested type "simple"
 10447                           ; Number of cases is 1, Range of values is 0 to 0
 10448                           ; switch strategies available:
 10449                           ; Name         Instructions Cycles
 10450                           ; simple_byte            4     3 (average)
 10451                           ;	Chosen strategy is simple_byte
 10452  004034  500B               	movf	(??_atoi+1)^0,w,c
 10453  004036  0A00               	xorlw	0	; case 0
 10454  004038  B4D8               	btfsc	status,2,c
 10455  00403A  EF21  F020         	goto	l6268
 10456  00403E  EF49  F020         	goto	l5322
 10457  004042                     l6268:
 10458                           
 10459                           ; Switch size 1, requested type "simple"
 10460                           ; Number of cases is 2, Range of values is 43 to 45
 10461                           ; switch strategies available:
 10462                           ; Name         Instructions Cycles
 10463                           ; simple_byte            7     4 (average)
 10464                           ;	Chosen strategy is simple_byte
 10465  004042  500A               	movf	??_atoi^0,w,c
 10466  004044  0A2B               	xorlw	43	; case 43
 10467  004046  B4D8               	btfsc	status,2,c
 10468  004048  EF0C  F020         	goto	l5314
 10469  00404C  0A06               	xorlw	6	; case 45
 10470  00404E  B4D8               	btfsc	status,2,c
 10471  004050  EF08  F020         	goto	l5312
 10472  004054  EF49  F020         	goto	l5322
 10473  004058                     l5318:
 10474  004058  C015  F001         	movff	atoi@n,___wmul@multiplier
 10475  00405C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10476  004060  0E00               	movlw	0
 10477  004062  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10478  004064  0E0A               	movlw	10
 10479  004066  6E03               	movwf	___wmul@multiplicand^0,c
 10480  004068  ECA5  F02C         	call	___wmul	;wreg free
 10481  00406C  C008  FFF6         	movff	atoi@s,tblptrl
 10482  004070  C009  FFF7         	movff	atoi@s+1,tblptrh
 10483  004074                     	if	0	;tblptru may be non-zero
 10484  004074                     	endif
 10485  004074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10486  004074  0E00               	movlw	low (__mediumconst shr (0+16))
 10487  004076  6EF8               	movwf	tblptru,c
 10488  004078                     	endif
 10489  004078  0008               	tblrd		*
 10490  00407A  50F5               	movf	tablat,w,c
 10491  00407C  5E01               	subwf	?___wmul^0,f,c
 10492  00407E  0E00               	movlw	0
 10493  004080  5A02               	subwfb	(?___wmul+1)^0,f,c
 10494  004082  0E30               	movlw	48
 10495  004084  2401               	addwf	?___wmul^0,w,c
 10496  004086  6E15               	movwf	atoi@n^0,c
 10497  004088  0E00               	movlw	0
 10498  00408A  2002               	addwfc	(?___wmul+1)^0,w,c
 10499  00408C  6E16               	movwf	(atoi@n+1)^0,c
 10500  00408E  EF0C  F020         	goto	l5314
 10501  004092                     l5322:
 10502  004092  0ED0               	movlw	208
 10503  004094  6E0A               	movwf	??_atoi^0,c
 10504  004096  0EFF               	movlw	255
 10505  004098  6E0B               	movwf	(??_atoi+1)^0,c
 10506  00409A  C008  FFF6         	movff	atoi@s,tblptrl
 10507  00409E  C009  FFF7         	movff	atoi@s+1,tblptrh
 10508  0040A2                     	if	0	;tblptru may be non-zero
 10509  0040A2                     	endif
 10510  0040A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10511  0040A2  0E00               	movlw	low (__mediumconst shr (0+16))
 10512  0040A4  6EF8               	movwf	tblptru,c
 10513  0040A6                     	endif
 10514  0040A6  0008               	tblrd		*
 10515  0040A8  50F5               	movf	tablat,w,c
 10516  0040AA  6E0C               	movwf	(??_atoi+2)^0,c
 10517  0040AC  6A0D               	clrf	(??_atoi+3)^0,c
 10518  0040AE  500A               	movf	??_atoi^0,w,c
 10519  0040B0  260C               	addwf	(??_atoi+2)^0,f,c
 10520  0040B2  500B               	movf	(??_atoi+1)^0,w,c
 10521  0040B4  220D               	addwfc	(??_atoi+3)^0,f,c
 10522  0040B6  500D               	movf	(??_atoi+3)^0,w,c
 10523  0040B8  E10A               	bnz	u6490
 10524  0040BA  0E0A               	movlw	10
 10525  0040BC  5C0C               	subwf	(??_atoi+2)^0,w,c
 10526  0040BE  A0D8               	btfss	status,0,c
 10527  0040C0  EF64  F020         	goto	u6491
 10528  0040C4  EF67  F020         	goto	u6490
 10529  0040C8                     u6491:
 10530  0040C8  0E01               	movlw	1
 10531  0040CA  EF68  F020         	goto	u6500
 10532  0040CE                     u6490:
 10533  0040CE  0E00               	movlw	0
 10534  0040D0                     u6500:
 10535  0040D0  6E12               	movwf	_atoi$3049^0,c
 10536  0040D2  6A13               	clrf	(_atoi$3049+1)^0,c
 10537  0040D4  5012               	movf	_atoi$3049^0,w,c
 10538  0040D6  1013               	iorwf	(_atoi$3049+1)^0,w,c
 10539  0040D8  A4D8               	btfss	status,2,c
 10540  0040DA  EF71  F020         	goto	u6511
 10541  0040DE  EF73  F020         	goto	u6510
 10542  0040E2                     u6511:
 10543  0040E2  EF2C  F020         	goto	l5318
 10544  0040E6                     u6510:
 10545  0040E6  500E               	movf	atoi@neg^0,w,c
 10546  0040E8  100F               	iorwf	(atoi@neg+1)^0,w,c
 10547  0040EA  A4D8               	btfss	status,2,c
 10548  0040EC  EF7A  F020         	goto	u6521
 10549  0040F0  EF7C  F020         	goto	u6520
 10550  0040F4                     u6521:
 10551  0040F4  EF8A  F020         	goto	l1603
 10552  0040F8                     u6520:
 10553  0040F8  C015  F00A         	movff	atoi@n,??_atoi
 10554  0040FC  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10555  004100  1E0A               	comf	??_atoi^0,f,c
 10556  004102  1E0B               	comf	(??_atoi+1)^0,f,c
 10557  004104  4A0A               	infsnz	??_atoi^0,f,c
 10558  004106  2A0B               	incf	(??_atoi+1)^0,f,c
 10559  004108  C00A  F008         	movff	??_atoi,?_atoi
 10560  00410C  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10561  004110  EF8E  F020         	goto	l1606
 10562  004114                     l1603:
 10563  004114  C015  F008         	movff	atoi@n,?_atoi
 10564  004118  C016  F009         	movff	atoi@n+1,?_atoi+1
 10565  00411C                     l1606:
 10566  00411C  0012               	return		;funcret
 10567  00411E                     __end_of_atoi:
 10568                           	callstack 0
 10569                           
 10570 ;; *************** function _isspace *****************
 10571 ;; Defined at:
 10572 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  c               2    0[COMRAM] int 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;		None
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  2    0[COMRAM] int 
 10579 ;; Registers used:
 10580 ;;		wreg, status,2, status,0
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;Total ram usage:        7 bytes
 10591 ;; Hardware stack levels used: 1
 10592 ;; This function calls:
 10593 ;;		Nothing
 10594 ;; This function is called by:
 10595 ;;		_atoi
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text37
 10600  0053EC                     __ptext37:
 10601                           	callstack 0
 10602  0053EC                     _isspace:
 10603                           	callstack 25
 10604  0053EC  0E01               	movlw	1
 10605  0053EE  6E07               	movwf	_isspace$3078^0,c
 10606  0053F0  0E20               	movlw	32
 10607  0053F2  1801               	xorwf	isspace@c^0,w,c
 10608  0053F4  1002               	iorwf	(isspace@c+1)^0,w,c
 10609  0053F6  B4D8               	btfsc	status,2,c
 10610  0053F8  EF00  F02A         	goto	u5641
 10611  0053FC  EF02  F02A         	goto	u5640
 10612  005400                     u5641:
 10613  005400  EF1B  F02A         	goto	l4874
 10614  005404                     u5640:
 10615  005404  0EF7               	movlw	247
 10616  005406  6E03               	movwf	??_isspace^0,c
 10617  005408  0EFF               	movlw	255
 10618  00540A  6E04               	movwf	(??_isspace+1)^0,c
 10619  00540C  C001  F005         	movff	isspace@c,??_isspace+2
 10620  005410  C002  F006         	movff	isspace@c+1,??_isspace+3
 10621  005414  5003               	movf	??_isspace^0,w,c
 10622  005416  2605               	addwf	(??_isspace+2)^0,f,c
 10623  005418  5004               	movf	(??_isspace+1)^0,w,c
 10624  00541A  2206               	addwfc	(??_isspace+3)^0,f,c
 10625  00541C  5006               	movf	(??_isspace+3)^0,w,c
 10626  00541E  E109               	bnz	u5650
 10627  005420  0E05               	movlw	5
 10628  005422  5C05               	subwf	(??_isspace+2)^0,w,c
 10629  005424  A0D8               	btfss	status,0,c
 10630  005426  EF17  F02A         	goto	u5651
 10631  00542A  EF19  F02A         	goto	u5650
 10632  00542E                     u5651:
 10633  00542E  EF1B  F02A         	goto	l4874
 10634  005432                     u5650:
 10635  005432  0E00               	movlw	0
 10636  005434  6E07               	movwf	_isspace$3078^0,c
 10637  005436                     l4874:
 10638  005436  C007  F001         	movff	_isspace$3078,?_isspace
 10639  00543A  6A02               	clrf	(?_isspace+1)^0,c
 10640  00543C  0012               	return		;funcret
 10641  00543E                     __end_of_isspace:
 10642                           	callstack 0
 10643                           
 10644 ;; *************** function _isdigit *****************
 10645 ;; Defined at:
 10646 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  c               2    0[COMRAM] int 
 10649 ;; Auto vars:     Size  Location     Type
 10650 ;;		None
 10651 ;; Return value:  Size  Location     Type
 10652 ;;                  2    0[COMRAM] int 
 10653 ;; Registers used:
 10654 ;;		wreg, status,2, status,0
 10655 ;; Tracked objects:
 10656 ;;		On entry : 0/0
 10657 ;;		On exit  : 0/0
 10658 ;;		Unchanged: 0/0
 10659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10664 ;;Total ram usage:        6 bytes
 10665 ;; Hardware stack levels used: 1
 10666 ;; This function calls:
 10667 ;;		Nothing
 10668 ;; This function is called by:
 10669 ;;		_vfpfcnvrt
 10670 ;;		_atoi
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674                           	psect	text38
 10675  005822                     __ptext38:
 10676                           	callstack 0
 10677  005822                     _isdigit:
 10678                           	callstack 26
 10679  005822  0ED0               	movlw	208
 10680  005824  6E03               	movwf	??_isdigit^0,c
 10681  005826  0EFF               	movlw	255
 10682  005828  6E04               	movwf	(??_isdigit+1)^0,c
 10683  00582A  C001  F005         	movff	isdigit@c,??_isdigit+2
 10684  00582E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10685  005832  5003               	movf	??_isdigit^0,w,c
 10686  005834  2605               	addwf	(??_isdigit+2)^0,f,c
 10687  005836  5004               	movf	(??_isdigit+1)^0,w,c
 10688  005838  2206               	addwfc	(??_isdigit+3)^0,f,c
 10689  00583A  5006               	movf	(??_isdigit+3)^0,w,c
 10690  00583C  E10A               	bnz	u5620
 10691  00583E  0E0A               	movlw	10
 10692  005840  5C05               	subwf	(??_isdigit+2)^0,w,c
 10693  005842  A0D8               	btfss	status,0,c
 10694  005844  EF26  F02C         	goto	u5621
 10695  005848  EF29  F02C         	goto	u5620
 10696  00584C                     u5621:
 10697  00584C  0E01               	movlw	1
 10698  00584E  EF2A  F02C         	goto	u5630
 10699  005852                     u5620:
 10700  005852  0E00               	movlw	0
 10701  005854                     u5630:
 10702  005854  6E01               	movwf	?_isdigit^0,c
 10703  005856  6A02               	clrf	(?_isdigit+1)^0,c
 10704  005858  0012               	return		;funcret
 10705  00585A                     __end_of_isdigit:
 10706                           	callstack 0
 10707                           
 10708 ;; *************** function _sendStringSerial4 *****************
 10709 ;; Defined at:
 10710 ;;		line 46 in file "serial_comm.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;  string          2    1[COMRAM] PTR unsigned char 
 10713 ;;		 -> colourcards_testing@buf(100), 
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;		None
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  1    wreg      void 
 10718 ;; Registers used:
 10719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10729 ;;Total ram usage:        2 bytes
 10730 ;; Hardware stack levels used: 1
 10731 ;; Hardware stack levels required when called: 1
 10732 ;; This function calls:
 10733 ;;		_sendCharSerial4
 10734 ;; This function is called by:
 10735 ;;		_colourcards_testing
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           	psect	text39
 10740  0058C8                     __ptext39:
 10741                           	callstack 0
 10742  0058C8                     _sendStringSerial4:
 10743                           	callstack 28
 10744  0058C8                     
 10745                           ;serial_comm.c: 48:     while (*string != 0) {
 10746  0058C8  EF6F  F02C         	goto	l5656
 10747  0058CC                     l5652:
 10748                           
 10749                           ;serial_comm.c: 49:         sendCharSerial4(*string++);
 10750  0058CC  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10751  0058D0  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10752  0058D4  50DF               	movf	indf2,w,c
 10753  0058D6  EC06  F02D         	call	_sendCharSerial4
 10754  0058DA  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10755  0058DC  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10756  0058DE                     l5656:
 10757                           
 10758                           ;serial_comm.c: 48:     while (*string != 0) {
 10759  0058DE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10760  0058E2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10761  0058E6  50DF               	movf	indf2,w,c
 10762  0058E8  A4D8               	btfss	status,2,c
 10763  0058EA  EF79  F02C         	goto	u7061
 10764  0058EE  EF7B  F02C         	goto	u7060
 10765  0058F2                     u7061:
 10766  0058F2  EF66  F02C         	goto	l5652
 10767  0058F6                     u7060:
 10768  0058F6  0012               	return		;funcret
 10769  0058F8                     __end_of_sendStringSerial4:
 10770                           	callstack 0
 10771                           
 10772 ;; *************** function _sendCharSerial4 *****************
 10773 ;; Defined at:
 10774 ;;		line 37 in file "serial_comm.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  charToSend      1    wreg     unsigned char 
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;  charToSend      1    0[COMRAM] unsigned char 
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      void 
 10781 ;; Registers used:
 10782 ;;		wreg
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10792 ;;Total ram usage:        1 bytes
 10793 ;; Hardware stack levels used: 1
 10794 ;; This function calls:
 10795 ;;		Nothing
 10796 ;; This function is called by:
 10797 ;;		_sendStringSerial4
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text40
 10802  005A0C                     __ptext40:
 10803                           	callstack 0
 10804  005A0C                     _sendCharSerial4:
 10805                           	callstack 28
 10806                           
 10807                           ;incstack = 0
 10808                           ;sendCharSerial4@charToSend stored from wreg
 10809  005A0C  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10810  005A0E                     l434:
 10811  005A0E  010E               	movlb	14	; () banked
 10812  005A10  A537               	btfss	55,2,b	;volatile
 10813  005A12  EF0D  F02D         	goto	u6841
 10814  005A16  EF0F  F02D         	goto	u6840
 10815  005A1A                     u6841:
 10816  005A1A  EF07  F02D         	goto	l434
 10817  005A1E                     u6840:
 10818  005A1E                     
 10819                           ; BSR set to: 14
 10820                           ;serial_comm.c: 39:     TX4REG = charToSend;
 10821  005A1E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10822  005A22                     
 10823                           ; BSR set to: 14
 10824  005A22  0012               	return		;funcret
 10825  005A24                     __end_of_sendCharSerial4:
 10826                           	callstack 0
 10827                           
 10828 ;; *************** function _colourclick_readRGBC *****************
 10829 ;; Defined at:
 10830 ;;		line 131 in file "colour_click.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  tmpval          2   11[COMRAM] PTR struct .
 10833 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), main@current(8), 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;		None
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  1    wreg      void 
 10838 ;; Registers used:
 10839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10849 ;;Total ram usage:        2 bytes
 10850 ;; Hardware stack levels used: 1
 10851 ;; Hardware stack levels required when called: 3
 10852 ;; This function calls:
 10853 ;;		_colourclick_readB
 10854 ;;		_colourclick_readC
 10855 ;;		_colourclick_readG
 10856 ;;		_colourclick_readR
 10857 ;; This function is called by:
 10858 ;;		_colourcards_testing
 10859 ;;		_colourcards_readRGBC
 10860 ;;		_colourclick_calibration
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text41
 10865  00533C                     __ptext41:
 10866                           	callstack 0
 10867  00533C                     _colourclick_readRGBC:
 10868                           	callstack 26
 10869  00533C                     
 10870                           ;colour_click.c: 131: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 132: {
      +                          ;colour_click.c: 133:     tmpval->R = colourclick_readR();
 10871  00533C  EC1F  F02A         	call	_colourclick_readR	;wreg free
 10872  005340  C00C  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
 10873  005344  C00D  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
 10874  005348  C005  FFDE         	movff	?_colourclick_readR,postinc2
 10875  00534C  C006  FFDD         	movff	?_colourclick_readR+1,postdec2
 10876                           
 10877                           ;colour_click.c: 134:     tmpval->G = colourclick_readG();
 10878  005350  EC47  F02A         	call	_colourclick_readG	;wreg free
 10879  005354  EE20 F002          	lfsr	2,2
 10880  005358  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 10881  00535A  26D9               	addwf	fsr2l,f,c
 10882  00535C  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10883  00535E  22DA               	addwfc	fsr2h,f,c
 10884  005360  C005  FFDE         	movff	?_colourclick_readG,postinc2
 10885  005364  C006  FFDD         	movff	?_colourclick_readG+1,postdec2
 10886                           
 10887                           ;colour_click.c: 135:     tmpval->B = colourclick_readB();
 10888  005368  EC97  F02A         	call	_colourclick_readB	;wreg free
 10889  00536C  EE20 F004          	lfsr	2,4
 10890  005370  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 10891  005372  26D9               	addwf	fsr2l,f,c
 10892  005374  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10893  005376  22DA               	addwfc	fsr2h,f,c
 10894  005378  C005  FFDE         	movff	?_colourclick_readB,postinc2
 10895  00537C  C006  FFDD         	movff	?_colourclick_readB+1,postdec2
 10896                           
 10897                           ;colour_click.c: 136:     tmpval->C = colourclick_readC();
 10898  005380  EC6F  F02A         	call	_colourclick_readC	;wreg free
 10899  005384  EE20 F006          	lfsr	2,6
 10900  005388  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 10901  00538A  26D9               	addwf	fsr2l,f,c
 10902  00538C  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10903  00538E  22DA               	addwfc	fsr2h,f,c
 10904  005390  C005  FFDE         	movff	?_colourclick_readC,postinc2
 10905  005394  C006  FFDD         	movff	?_colourclick_readC+1,postdec2
 10906  005398  0012               	return		;funcret
 10907  00539A                     __end_of_colourclick_readRGBC:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _colourclick_readR *****************
 10911 ;; Defined at:
 10912 ;;		line 56 in file "colour_click.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;		None
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  tmp             2    9[COMRAM] unsigned int 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  2    4[COMRAM] unsigned int 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10929 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10930 ;;Total ram usage:        7 bytes
 10931 ;; Hardware stack levels used: 1
 10932 ;; Hardware stack levels required when called: 2
 10933 ;; This function calls:
 10934 ;;		_I2C_2_Master_Read
 10935 ;;		_I2C_2_Master_RepStart
 10936 ;;		_I2C_2_Master_Start
 10937 ;;		_I2C_2_Master_Stop
 10938 ;;		_I2C_2_Master_Write
 10939 ;; This function is called by:
 10940 ;;		_colourclick_readRGBC
 10941 ;;		_colourclick_readRGBC2
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text42
 10946  00543E                     __ptext42:
 10947                           	callstack 0
 10948  00543E                     _colourclick_readR:
 10949                           	callstack 26
 10950  00543E                     
 10951                           ;colour_click.c: 58:  unsigned int tmp;;colour_click.c: 59:  I2C_2_Master_Start();
 10952  00543E  EC47  F02D         	call	_I2C_2_Master_Start	;wreg free
 10953                           
 10954                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
 10955  005442  0E52               	movlw	82
 10956  005444  EC30  F02D         	call	_I2C_2_Master_Write
 10957                           
 10958                           ;colour_click.c: 61:  I2C_2_Master_Write(0xA0 | 0x16);
 10959  005448  0EB6               	movlw	182
 10960  00544A  EC30  F02D         	call	_I2C_2_Master_Write
 10961                           
 10962                           ;colour_click.c: 62:  I2C_2_Master_RepStart();
 10963  00544E  EC4C  F02D         	call	_I2C_2_Master_RepStart	;wreg free
 10964                           
 10965                           ;colour_click.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
 10966  005452  0E53               	movlw	83
 10967  005454  EC30  F02D         	call	_I2C_2_Master_Write
 10968                           
 10969                           ;colour_click.c: 64:  tmp=I2C_2_Master_Read(1);
 10970  005458  0E01               	movlw	1
 10971  00545A  EC7C  F02B         	call	_I2C_2_Master_Read
 10972  00545E  6E07               	movwf	??_colourclick_readR^0,c
 10973  005460  5007               	movf	??_colourclick_readR^0,w,c
 10974  005462  6E0A               	movwf	colourclick_readR@tmp^0,c
 10975  005464  6A0B               	clrf	(colourclick_readR@tmp+1)^0,c
 10976                           
 10977                           ;colour_click.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10978  005466  0E00               	movlw	0
 10979  005468  EC7C  F02B         	call	_I2C_2_Master_Read
 10980  00546C  6E07               	movwf	??_colourclick_readR^0,c
 10981  00546E  5007               	movf	??_colourclick_readR^0,w,c
 10982  005470  6E09               	movwf	(??_colourclick_readR+2)^0,c
 10983  005472  6A08               	clrf	(??_colourclick_readR+1)^0,c
 10984  005474  500A               	movf	colourclick_readR@tmp^0,w,c
 10985  005476  1008               	iorwf	(??_colourclick_readR+1)^0,w,c
 10986  005478  6E0A               	movwf	colourclick_readR@tmp^0,c
 10987  00547A  500B               	movf	(colourclick_readR@tmp+1)^0,w,c
 10988  00547C  1009               	iorwf	(??_colourclick_readR+2)^0,w,c
 10989  00547E  6E0B               	movwf	(colourclick_readR@tmp+1)^0,c
 10990                           
 10991                           ;colour_click.c: 66:  I2C_2_Master_Stop();
 10992  005480  EC42  F02D         	call	_I2C_2_Master_Stop	;wreg free
 10993  005484                     
 10994                           ;colour_click.c: 67:  return tmp;
 10995  005484  C00A  F005         	movff	colourclick_readR@tmp,?_colourclick_readR
 10996  005488  C00B  F006         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
 10997  00548C  0012               	return		;funcret
 10998  00548E                     __end_of_colourclick_readR:
 10999                           	callstack 0
 11000                           
 11001 ;; *************** function _colourclick_readG *****************
 11002 ;; Defined at:
 11003 ;;		line 75 in file "colour_click.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;		None
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;  tmp             2    9[COMRAM] unsigned int 
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  2    4[COMRAM] unsigned int 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2, status,0, cstack
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11019 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11020 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11021 ;;Total ram usage:        7 bytes
 11022 ;; Hardware stack levels used: 1
 11023 ;; Hardware stack levels required when called: 2
 11024 ;; This function calls:
 11025 ;;		_I2C_2_Master_Read
 11026 ;;		_I2C_2_Master_RepStart
 11027 ;;		_I2C_2_Master_Start
 11028 ;;		_I2C_2_Master_Stop
 11029 ;;		_I2C_2_Master_Write
 11030 ;; This function is called by:
 11031 ;;		_colourclick_readRGBC
 11032 ;;		_colourclick_readRGBC2
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           
 11036                           	psect	text43
 11037  00548E                     __ptext43:
 11038                           	callstack 0
 11039  00548E                     _colourclick_readG:
 11040                           	callstack 26
 11041  00548E                     
 11042                           ;colour_click.c: 77:  unsigned int tmp;;colour_click.c: 78:  I2C_2_Master_Start();
 11043  00548E  EC47  F02D         	call	_I2C_2_Master_Start	;wreg free
 11044                           
 11045                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
 11046  005492  0E52               	movlw	82
 11047  005494  EC30  F02D         	call	_I2C_2_Master_Write
 11048                           
 11049                           ;colour_click.c: 80:  I2C_2_Master_Write(0xA0 | 0x18);
 11050  005498  0EB8               	movlw	184
 11051  00549A  EC30  F02D         	call	_I2C_2_Master_Write
 11052                           
 11053                           ;colour_click.c: 81:  I2C_2_Master_RepStart();
 11054  00549E  EC4C  F02D         	call	_I2C_2_Master_RepStart	;wreg free
 11055                           
 11056                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
 11057  0054A2  0E53               	movlw	83
 11058  0054A4  EC30  F02D         	call	_I2C_2_Master_Write
 11059                           
 11060                           ;colour_click.c: 83:  tmp=I2C_2_Master_Read(1);
 11061  0054A8  0E01               	movlw	1
 11062  0054AA  EC7C  F02B         	call	_I2C_2_Master_Read
 11063  0054AE  6E07               	movwf	??_colourclick_readG^0,c
 11064  0054B0  5007               	movf	??_colourclick_readG^0,w,c
 11065  0054B2  6E0A               	movwf	colourclick_readG@tmp^0,c
 11066  0054B4  6A0B               	clrf	(colourclick_readG@tmp+1)^0,c
 11067                           
 11068                           ;colour_click.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11069  0054B6  0E00               	movlw	0
 11070  0054B8  EC7C  F02B         	call	_I2C_2_Master_Read
 11071  0054BC  6E07               	movwf	??_colourclick_readG^0,c
 11072  0054BE  5007               	movf	??_colourclick_readG^0,w,c
 11073  0054C0  6E09               	movwf	(??_colourclick_readG+2)^0,c
 11074  0054C2  6A08               	clrf	(??_colourclick_readG+1)^0,c
 11075  0054C4  500A               	movf	colourclick_readG@tmp^0,w,c
 11076  0054C6  1008               	iorwf	(??_colourclick_readG+1)^0,w,c
 11077  0054C8  6E0A               	movwf	colourclick_readG@tmp^0,c
 11078  0054CA  500B               	movf	(colourclick_readG@tmp+1)^0,w,c
 11079  0054CC  1009               	iorwf	(??_colourclick_readG+2)^0,w,c
 11080  0054CE  6E0B               	movwf	(colourclick_readG@tmp+1)^0,c
 11081                           
 11082                           ;colour_click.c: 85:  I2C_2_Master_Stop();
 11083  0054D0  EC42  F02D         	call	_I2C_2_Master_Stop	;wreg free
 11084  0054D4                     
 11085                           ;colour_click.c: 86:  return tmp;
 11086  0054D4  C00A  F005         	movff	colourclick_readG@tmp,?_colourclick_readG
 11087  0054D8  C00B  F006         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
 11088  0054DC  0012               	return		;funcret
 11089  0054DE                     __end_of_colourclick_readG:
 11090                           	callstack 0
 11091                           
 11092 ;; *************** function _colourclick_readC *****************
 11093 ;; Defined at:
 11094 ;;		line 113 in file "colour_click.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;  tmp             2    9[COMRAM] unsigned int 
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  2    4[COMRAM] unsigned int 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2, status,0, cstack
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11110 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11111 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11112 ;;Total ram usage:        7 bytes
 11113 ;; Hardware stack levels used: 1
 11114 ;; Hardware stack levels required when called: 2
 11115 ;; This function calls:
 11116 ;;		_I2C_2_Master_Read
 11117 ;;		_I2C_2_Master_RepStart
 11118 ;;		_I2C_2_Master_Start
 11119 ;;		_I2C_2_Master_Stop
 11120 ;;		_I2C_2_Master_Write
 11121 ;; This function is called by:
 11122 ;;		_colourclick_readRGBC
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           	psect	text44
 11127  0054DE                     __ptext44:
 11128                           	callstack 0
 11129  0054DE                     _colourclick_readC:
 11130                           	callstack 26
 11131  0054DE                     
 11132                           ;colour_click.c: 115:  unsigned int tmp;;colour_click.c: 116:  I2C_2_Master_Start();
 11133  0054DE  EC47  F02D         	call	_I2C_2_Master_Start	;wreg free
 11134                           
 11135                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x00);
 11136  0054E2  0E52               	movlw	82
 11137  0054E4  EC30  F02D         	call	_I2C_2_Master_Write
 11138                           
 11139                           ;colour_click.c: 118:  I2C_2_Master_Write(0xA0 | 0x14);
 11140  0054E8  0EB4               	movlw	180
 11141  0054EA  EC30  F02D         	call	_I2C_2_Master_Write
 11142                           
 11143                           ;colour_click.c: 119:  I2C_2_Master_RepStart();
 11144  0054EE  EC4C  F02D         	call	_I2C_2_Master_RepStart	;wreg free
 11145                           
 11146                           ;colour_click.c: 120:  I2C_2_Master_Write(0x52 | 0x01);
 11147  0054F2  0E53               	movlw	83
 11148  0054F4  EC30  F02D         	call	_I2C_2_Master_Write
 11149                           
 11150                           ;colour_click.c: 121:  tmp=I2C_2_Master_Read(1);
 11151  0054F8  0E01               	movlw	1
 11152  0054FA  EC7C  F02B         	call	_I2C_2_Master_Read
 11153  0054FE  6E07               	movwf	??_colourclick_readC^0,c
 11154  005500  5007               	movf	??_colourclick_readC^0,w,c
 11155  005502  6E0A               	movwf	colourclick_readC@tmp^0,c
 11156  005504  6A0B               	clrf	(colourclick_readC@tmp+1)^0,c
 11157                           
 11158                           ;colour_click.c: 122:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11159  005506  0E00               	movlw	0
 11160  005508  EC7C  F02B         	call	_I2C_2_Master_Read
 11161  00550C  6E07               	movwf	??_colourclick_readC^0,c
 11162  00550E  5007               	movf	??_colourclick_readC^0,w,c
 11163  005510  6E09               	movwf	(??_colourclick_readC+2)^0,c
 11164  005512  6A08               	clrf	(??_colourclick_readC+1)^0,c
 11165  005514  500A               	movf	colourclick_readC@tmp^0,w,c
 11166  005516  1008               	iorwf	(??_colourclick_readC+1)^0,w,c
 11167  005518  6E0A               	movwf	colourclick_readC@tmp^0,c
 11168  00551A  500B               	movf	(colourclick_readC@tmp+1)^0,w,c
 11169  00551C  1009               	iorwf	(??_colourclick_readC+2)^0,w,c
 11170  00551E  6E0B               	movwf	(colourclick_readC@tmp+1)^0,c
 11171                           
 11172                           ;colour_click.c: 123:  I2C_2_Master_Stop();
 11173  005520  EC42  F02D         	call	_I2C_2_Master_Stop	;wreg free
 11174  005524                     
 11175                           ;colour_click.c: 124:  return tmp;
 11176  005524  C00A  F005         	movff	colourclick_readC@tmp,?_colourclick_readC
 11177  005528  C00B  F006         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
 11178  00552C  0012               	return		;funcret
 11179  00552E                     __end_of_colourclick_readC:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _colourclick_readB *****************
 11183 ;; Defined at:
 11184 ;;		line 94 in file "colour_click.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;		None
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  tmp             2    9[COMRAM] unsigned int 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  2    4[COMRAM] unsigned int 
 11191 ;; Registers used:
 11192 ;;		wreg, status,2, status,0, cstack
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11200 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11201 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11202 ;;Total ram usage:        7 bytes
 11203 ;; Hardware stack levels used: 1
 11204 ;; Hardware stack levels required when called: 2
 11205 ;; This function calls:
 11206 ;;		_I2C_2_Master_Read
 11207 ;;		_I2C_2_Master_RepStart
 11208 ;;		_I2C_2_Master_Start
 11209 ;;		_I2C_2_Master_Stop
 11210 ;;		_I2C_2_Master_Write
 11211 ;; This function is called by:
 11212 ;;		_colourclick_readRGBC
 11213 ;;		_colourclick_readRGBC2
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text45
 11218  00552E                     __ptext45:
 11219                           	callstack 0
 11220  00552E                     _colourclick_readB:
 11221                           	callstack 26
 11222  00552E                     
 11223                           ;colour_click.c: 96:  unsigned int tmp;;colour_click.c: 97:  I2C_2_Master_Start();
 11224  00552E  EC47  F02D         	call	_I2C_2_Master_Start	;wreg free
 11225                           
 11226                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
 11227  005532  0E52               	movlw	82
 11228  005534  EC30  F02D         	call	_I2C_2_Master_Write
 11229                           
 11230                           ;colour_click.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
 11231  005538  0EBA               	movlw	186
 11232  00553A  EC30  F02D         	call	_I2C_2_Master_Write
 11233                           
 11234                           ;colour_click.c: 100:  I2C_2_Master_RepStart();
 11235  00553E  EC4C  F02D         	call	_I2C_2_Master_RepStart	;wreg free
 11236                           
 11237                           ;colour_click.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
 11238  005542  0E53               	movlw	83
 11239  005544  EC30  F02D         	call	_I2C_2_Master_Write
 11240                           
 11241                           ;colour_click.c: 102:  tmp=I2C_2_Master_Read(1);
 11242  005548  0E01               	movlw	1
 11243  00554A  EC7C  F02B         	call	_I2C_2_Master_Read
 11244  00554E  6E07               	movwf	??_colourclick_readB^0,c
 11245  005550  5007               	movf	??_colourclick_readB^0,w,c
 11246  005552  6E0A               	movwf	colourclick_readB@tmp^0,c
 11247  005554  6A0B               	clrf	(colourclick_readB@tmp+1)^0,c
 11248                           
 11249                           ;colour_click.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11250  005556  0E00               	movlw	0
 11251  005558  EC7C  F02B         	call	_I2C_2_Master_Read
 11252  00555C  6E07               	movwf	??_colourclick_readB^0,c
 11253  00555E  5007               	movf	??_colourclick_readB^0,w,c
 11254  005560  6E09               	movwf	(??_colourclick_readB+2)^0,c
 11255  005562  6A08               	clrf	(??_colourclick_readB+1)^0,c
 11256  005564  500A               	movf	colourclick_readB@tmp^0,w,c
 11257  005566  1008               	iorwf	(??_colourclick_readB+1)^0,w,c
 11258  005568  6E0A               	movwf	colourclick_readB@tmp^0,c
 11259  00556A  500B               	movf	(colourclick_readB@tmp+1)^0,w,c
 11260  00556C  1009               	iorwf	(??_colourclick_readB+2)^0,w,c
 11261  00556E  6E0B               	movwf	(colourclick_readB@tmp+1)^0,c
 11262                           
 11263                           ;colour_click.c: 104:  I2C_2_Master_Stop();
 11264  005570  EC42  F02D         	call	_I2C_2_Master_Stop	;wreg free
 11265  005574                     
 11266                           ;colour_click.c: 105:  return tmp;
 11267  005574  C00A  F005         	movff	colourclick_readB@tmp,?_colourclick_readB
 11268  005578  C00B  F006         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
 11269  00557C  0012               	return		;funcret
 11270  00557E                     __end_of_colourclick_readB:
 11271                           	callstack 0
 11272                           
 11273 ;; *************** function _I2C_2_Master_Write *****************
 11274 ;; Defined at:
 11275 ;;		line 69 in file "I2C.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  data_byte       1    wreg     unsigned char 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;  data_byte       1    1[COMRAM] unsigned char 
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg, status,2, status,0, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11293 ;;Total ram usage:        1 bytes
 11294 ;; Hardware stack levels used: 1
 11295 ;; Hardware stack levels required when called: 1
 11296 ;; This function calls:
 11297 ;;		_I2C_2_Master_Idle
 11298 ;; This function is called by:
 11299 ;;		_colourclick_writetoaddr
 11300 ;;		_colourclick_readR
 11301 ;;		_colourclick_readG
 11302 ;;		_colourclick_readB
 11303 ;;		_colourclick_readC
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           	psect	text46
 11308  005A60                     __ptext46:
 11309                           	callstack 0
 11310  005A60                     _I2C_2_Master_Write:
 11311                           	callstack 27
 11312                           
 11313                           ;incstack = 0
 11314                           ;I2C_2_Master_Write@data_byte stored from wreg
 11315  005A60  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 11316  005A62                     
 11317                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 11318  005A62  EC91  F02C         	call	_I2C_2_Master_Idle	;wreg free
 11319  005A66                     
 11320                           ;I2C.c: 72:   SSP2BUF = data_byte;
 11321  005A66  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 11322  005A6A  0012               	return		;funcret
 11323  005A6C                     __end_of_I2C_2_Master_Write:
 11324                           	callstack 0
 11325                           
 11326 ;; *************** function _I2C_2_Master_Stop *****************
 11327 ;; Defined at:
 11328 ;;		line 59 in file "I2C.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;		None
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;		None
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1    wreg      void 
 11335 ;; Registers used:
 11336 ;;		wreg, status,2, status,0, cstack
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11346 ;;Total ram usage:        0 bytes
 11347 ;; Hardware stack levels used: 1
 11348 ;; Hardware stack levels required when called: 1
 11349 ;; This function calls:
 11350 ;;		_I2C_2_Master_Idle
 11351 ;; This function is called by:
 11352 ;;		_colourclick_writetoaddr
 11353 ;;		_colourclick_readR
 11354 ;;		_colourclick_readG
 11355 ;;		_colourclick_readB
 11356 ;;		_colourclick_readC
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360                           	psect	text47
 11361  005A84                     __ptext47:
 11362                           	callstack 0
 11363  005A84                     _I2C_2_Master_Stop:
 11364                           	callstack 27
 11365  005A84                     
 11366                           ;I2C.c: 61:   I2C_2_Master_Idle();
 11367  005A84  EC91  F02C         	call	_I2C_2_Master_Idle	;wreg free
 11368  005A88                     
 11369                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 11370  005A88  010E               	movlb	14	; () banked
 11371  005A8A  85DA               	bsf	218,2,b	;volatile
 11372  005A8C                     
 11373                           ; BSR set to: 14
 11374  005A8C  0012               	return		;funcret
 11375  005A8E                     __end_of_I2C_2_Master_Stop:
 11376                           	callstack 0
 11377                           
 11378 ;; *************** function _I2C_2_Master_Start *****************
 11379 ;; Defined at:
 11380 ;;		line 39 in file "I2C.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;		None
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;		None
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  1    wreg      void 
 11387 ;; Registers used:
 11388 ;;		wreg, status,2, status,0, cstack
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11398 ;;Total ram usage:        0 bytes
 11399 ;; Hardware stack levels used: 1
 11400 ;; Hardware stack levels required when called: 1
 11401 ;; This function calls:
 11402 ;;		_I2C_2_Master_Idle
 11403 ;; This function is called by:
 11404 ;;		_colourclick_writetoaddr
 11405 ;;		_colourclick_readR
 11406 ;;		_colourclick_readG
 11407 ;;		_colourclick_readB
 11408 ;;		_colourclick_readC
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text48
 11413  005A8E                     __ptext48:
 11414                           	callstack 0
 11415  005A8E                     _I2C_2_Master_Start:
 11416                           	callstack 27
 11417  005A8E                     
 11418                           ;I2C.c: 41:   I2C_2_Master_Idle();
 11419  005A8E  EC91  F02C         	call	_I2C_2_Master_Idle	;wreg free
 11420  005A92                     
 11421                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 11422  005A92  010E               	movlb	14	; () banked
 11423  005A94  81DA               	bsf	218,0,b	;volatile
 11424  005A96                     
 11425                           ; BSR set to: 14
 11426  005A96  0012               	return		;funcret
 11427  005A98                     __end_of_I2C_2_Master_Start:
 11428                           	callstack 0
 11429                           
 11430 ;; *************** function _I2C_2_Master_RepStart *****************
 11431 ;; Defined at:
 11432 ;;		line 49 in file "I2C.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;		None
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;		None
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  1    wreg      void 
 11439 ;; Registers used:
 11440 ;;		wreg, status,2, status,0, cstack
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/0
 11443 ;;		On exit  : 0/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11450 ;;Total ram usage:        0 bytes
 11451 ;; Hardware stack levels used: 1
 11452 ;; Hardware stack levels required when called: 1
 11453 ;; This function calls:
 11454 ;;		_I2C_2_Master_Idle
 11455 ;; This function is called by:
 11456 ;;		_colourclick_readR
 11457 ;;		_colourclick_readG
 11458 ;;		_colourclick_readB
 11459 ;;		_colourclick_readC
 11460 ;; This function uses a non-reentrant model
 11461 ;;
 11462                           
 11463                           	psect	text49
 11464  005A98                     __ptext49:
 11465                           	callstack 0
 11466  005A98                     _I2C_2_Master_RepStart:
 11467                           	callstack 26
 11468  005A98                     
 11469                           ;I2C.c: 51:   I2C_2_Master_Idle();
 11470  005A98  EC91  F02C         	call	_I2C_2_Master_Idle	;wreg free
 11471  005A9C                     
 11472                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
 11473  005A9C  010E               	movlb	14	; () banked
 11474  005A9E  83DA               	bsf	218,1,b	;volatile
 11475  005AA0                     
 11476                           ; BSR set to: 14
 11477  005AA0  0012               	return		;funcret
 11478  005AA2                     __end_of_I2C_2_Master_RepStart:
 11479                           	callstack 0
 11480                           
 11481 ;; *************** function _I2C_2_Master_Read *****************
 11482 ;; Defined at:
 11483 ;;		line 79 in file "I2C.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  ack             1    wreg     unsigned char 
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;  ack             1    2[COMRAM] unsigned char 
 11488 ;;  tmp             1    3[COMRAM] unsigned char 
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      unsigned char 
 11491 ;; Registers used:
 11492 ;;		wreg, status,2, status,0, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11501 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11502 ;;Total ram usage:        3 bytes
 11503 ;; Hardware stack levels used: 1
 11504 ;; Hardware stack levels required when called: 1
 11505 ;; This function calls:
 11506 ;;		_I2C_2_Master_Idle
 11507 ;; This function is called by:
 11508 ;;		_colourclick_readR
 11509 ;;		_colourclick_readG
 11510 ;;		_colourclick_readB
 11511 ;;		_colourclick_readC
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text50
 11516  0056F8                     __ptext50:
 11517                           	callstack 0
 11518  0056F8                     _I2C_2_Master_Read:
 11519                           	callstack 26
 11520                           
 11521                           ; BSR set to: 14
 11522                           ;incstack = 0
 11523                           ;I2C_2_Master_Read@ack stored from wreg
 11524  0056F8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 11525  0056FA                     
 11526                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
 11527  0056FA  EC91  F02C         	call	_I2C_2_Master_Idle	;wreg free
 11528  0056FE                     
 11529                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
 11530  0056FE  010E               	movlb	14	; () banked
 11531  005700  87DA               	bsf	218,3,b	;volatile
 11532                           
 11533                           ;I2C.c: 84:   I2C_2_Master_Idle();
 11534  005702  EC91  F02C         	call	_I2C_2_Master_Idle	;wreg free
 11535  005706                     
 11536                           ;I2C.c: 85:   tmp = SSP2BUF;
 11537  005706  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 11538                           
 11539                           ;I2C.c: 86:   I2C_2_Master_Idle();
 11540  00570A  EC91  F02C         	call	_I2C_2_Master_Idle	;wreg free
 11541  00570E                     
 11542                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
 11543  00570E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 11544  005710  B4D8               	btfsc	status,2,c
 11545  005712  EF8D  F02B         	goto	u6581
 11546  005716  EF91  F02B         	goto	u6580
 11547  00571A                     u6581:
 11548  00571A  6A02               	clrf	??_I2C_2_Master_Read^0,c
 11549  00571C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 11550  00571E  EF92  F02B         	goto	u6598
 11551  005722                     u6580:
 11552  005722  6A02               	clrf	??_I2C_2_Master_Read^0,c
 11553  005724                     u6598:
 11554  005724  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 11555  005726  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 11556  005728  010E               	movlb	14	; () banked
 11557  00572A  51DA               	movf	218,w,b	;volatile
 11558  00572C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 11559  00572E  0BDF               	andlw	-33
 11560  005730  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 11561  005732  6FDA               	movwf	218,b	;volatile
 11562  005734                     
 11563                           ; BSR set to: 14
 11564                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
 11565  005734  89DA               	bsf	218,4,b	;volatile
 11566  005736                     
 11567                           ; BSR set to: 14
 11568                           ;I2C.c: 89:   return tmp;
 11569  005736  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 11570  005738                     
 11571                           ; BSR set to: 14
 11572  005738  0012               	return		;funcret
 11573  00573A                     __end_of_I2C_2_Master_Read:
 11574                           	callstack 0
 11575                           
 11576 ;; *************** function _I2C_2_Master_Idle *****************
 11577 ;; Defined at:
 11578 ;;		line 30 in file "I2C.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;		None
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;		None
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      void 
 11585 ;; Registers used:
 11586 ;;		wreg, status,2, status,0
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11596 ;;Total ram usage:        1 bytes
 11597 ;; Hardware stack levels used: 1
 11598 ;; This function calls:
 11599 ;;		Nothing
 11600 ;; This function is called by:
 11601 ;;		_I2C_2_Master_Start
 11602 ;;		_I2C_2_Master_RepStart
 11603 ;;		_I2C_2_Master_Stop
 11604 ;;		_I2C_2_Master_Write
 11605 ;;		_I2C_2_Master_Read
 11606 ;; This function uses a non-reentrant model
 11607 ;;
 11608                           
 11609                           	psect	text51
 11610  005922                     __ptext51:
 11611                           	callstack 0
 11612  005922                     _I2C_2_Master_Idle:
 11613                           	callstack 27
 11614  005922                     l368:
 11615  005922  010E               	movlb	14	; () banked
 11616  005924  B5D8               	btfsc	216,2,b	;volatile
 11617  005926  EF97  F02C         	goto	u5661
 11618  00592A  EF99  F02C         	goto	u5660
 11619  00592E                     u5661:
 11620  00592E  EF91  F02C         	goto	l368
 11621  005932                     u5660:
 11622  005932                     
 11623                           ; BSR set to: 14
 11624  005932  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11625  005936  0E1F               	movlw	31
 11626  005938  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11627  00593A  A4D8               	btfss	status,2,c
 11628  00593C  EFA2  F02C         	goto	u5671
 11629  005940  EFA4  F02C         	goto	u5670
 11630  005944                     u5671:
 11631  005944  EF91  F02C         	goto	l368
 11632  005948                     u5670:
 11633  005948                     
 11634                           ; BSR set to: 14
 11635  005948  0012               	return		;funcret
 11636  00594A                     __end_of_I2C_2_Master_Idle:
 11637                           	callstack 0
 11638                           
 11639 ;; *************** function ___xxtofl *****************
 11640 ;; Defined at:
 11641 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;  sign            1    wreg     unsigned char 
 11644 ;;  val             4    0[COMRAM] long 
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;  sign            1    8[COMRAM] unsigned char 
 11647 ;;  arg             4   10[COMRAM] unsigned long 
 11648 ;;  exp             1    9[COMRAM] unsigned char 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  4    0[COMRAM] unsigned char 
 11651 ;; Registers used:
 11652 ;;		wreg, status,2, status,0
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11659 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11661 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11662 ;;Total ram usage:       14 bytes
 11663 ;; Hardware stack levels used: 1
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		_colourcards_testing
 11668 ;;		_colourcards_readRGBC
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           	psect	text52
 11673  003DC6                     __ptext52:
 11674                           	callstack 0
 11675  003DC6                     ___xxtofl:
 11676                           	callstack 29
 11677                           
 11678                           ; BSR set to: 14
 11679                           ;incstack = 0
 11680                           ;___xxtofl@sign stored from wreg
 11681  003DC6  6E09               	movwf	___xxtofl@sign^0,c
 11682  003DC8  5009               	movf	___xxtofl@sign^0,w,c
 11683  003DCA  B4D8               	btfsc	status,2,c
 11684  003DCC  EFEA  F01E         	goto	u7081
 11685  003DD0  EFEC  F01E         	goto	u7080
 11686  003DD4                     u7081:
 11687  003DD4  EF0E  F01F         	goto	l1309
 11688  003DD8                     u7080:
 11689  003DD8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11690  003DDA  EFF3  F01E         	goto	u7090
 11691  003DDE  EFF1  F01E         	goto	u7091
 11692  003DE2                     u7091:
 11693  003DE2  EF0E  F01F         	goto	l1309
 11694  003DE6                     u7090:
 11695  003DE6  C001  F005         	movff	___xxtofl@val,??___xxtofl
 11696  003DEA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 11697  003DEE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 11698  003DF2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 11699  003DF6  1E05               	comf	??___xxtofl^0,f,c
 11700  003DF8  1E06               	comf	(??___xxtofl+1)^0,f,c
 11701  003DFA  1E07               	comf	(??___xxtofl+2)^0,f,c
 11702  003DFC  1E08               	comf	(??___xxtofl+3)^0,f,c
 11703  003DFE  2A05               	incf	??___xxtofl^0,f,c
 11704  003E00  0E00               	movlw	0
 11705  003E02  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11706  003E04  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11707  003E06  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11708  003E08  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 11709  003E0C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11710  003E10  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11711  003E14  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11712  003E18  EF16  F01F         	goto	l5694
 11713  003E1C                     l1309:
 11714  003E1C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 11715  003E20  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11716  003E24  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11717  003E28  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11718  003E2C                     l5694:
 11719  003E2C  5001               	movf	___xxtofl@val^0,w,c
 11720  003E2E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11721  003E30  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11722  003E32  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11723  003E34  A4D8               	btfss	status,2,c
 11724  003E36  EF1F  F01F         	goto	u7101
 11725  003E3A  EF21  F01F         	goto	u7100
 11726  003E3E                     u7101:
 11727  003E3E  EF2B  F01F         	goto	l5700
 11728  003E42                     u7100:
 11729  003E42  0E00               	movlw	0
 11730  003E44  6E01               	movwf	?___xxtofl^0,c
 11731  003E46  0E00               	movlw	0
 11732  003E48  6E02               	movwf	(?___xxtofl+1)^0,c
 11733  003E4A  0E00               	movlw	0
 11734  003E4C  6E03               	movwf	(?___xxtofl+2)^0,c
 11735  003E4E  0E00               	movlw	0
 11736  003E50  6E04               	movwf	(?___xxtofl+3)^0,c
 11737  003E52  EFBC  F01F         	goto	l1312
 11738  003E56                     l5700:
 11739  003E56  0E96               	movlw	150
 11740  003E58  6E0A               	movwf	___xxtofl@exp^0,c
 11741  003E5A  EF35  F01F         	goto	l5704
 11742  003E5E                     l5702:
 11743  003E5E  2A0A               	incf	___xxtofl@exp^0,f,c
 11744  003E60  90D8               	bcf	status,0,c
 11745  003E62  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11746  003E64  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11747  003E66  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11748  003E68  320B               	rrcf	___xxtofl@arg^0,f,c
 11749  003E6A                     l5704:
 11750  003E6A  0E00               	movlw	0
 11751  003E6C  140B               	andwf	___xxtofl@arg^0,w,c
 11752  003E6E  6E05               	movwf	??___xxtofl^0,c
 11753  003E70  0E00               	movlw	0
 11754  003E72  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11755  003E74  6E06               	movwf	(??___xxtofl+1)^0,c
 11756  003E76  0E00               	movlw	0
 11757  003E78  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11758  003E7A  6E07               	movwf	(??___xxtofl+2)^0,c
 11759  003E7C  0EFE               	movlw	254
 11760  003E7E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11761  003E80  6E08               	movwf	(??___xxtofl+3)^0,c
 11762  003E82  5005               	movf	??___xxtofl^0,w,c
 11763  003E84  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11764  003E86  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11765  003E88  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11766  003E8A  A4D8               	btfss	status,2,c
 11767  003E8C  EF4A  F01F         	goto	u7111
 11768  003E90  EF4C  F01F         	goto	u7110
 11769  003E94                     u7111:
 11770  003E94  EF2F  F01F         	goto	l5702
 11771  003E98                     u7110:
 11772  003E98  EF5A  F01F         	goto	l1316
 11773  003E9C                     l5706:
 11774  003E9C  2A0A               	incf	___xxtofl@exp^0,f,c
 11775  003E9E  0E01               	movlw	1
 11776  003EA0  260B               	addwf	___xxtofl@arg^0,f,c
 11777  003EA2  0E00               	movlw	0
 11778  003EA4  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11779  003EA6  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11780  003EA8  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11781  003EAA  90D8               	bcf	status,0,c
 11782  003EAC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11783  003EAE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11784  003EB0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11785  003EB2  320B               	rrcf	___xxtofl@arg^0,f,c
 11786  003EB4                     l1316:
 11787  003EB4  0E00               	movlw	0
 11788  003EB6  140B               	andwf	___xxtofl@arg^0,w,c
 11789  003EB8  6E05               	movwf	??___xxtofl^0,c
 11790  003EBA  0E00               	movlw	0
 11791  003EBC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11792  003EBE  6E06               	movwf	(??___xxtofl+1)^0,c
 11793  003EC0  0E00               	movlw	0
 11794  003EC2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11795  003EC4  6E07               	movwf	(??___xxtofl+2)^0,c
 11796  003EC6  0EFF               	movlw	255
 11797  003EC8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11798  003ECA  6E08               	movwf	(??___xxtofl+3)^0,c
 11799  003ECC  5005               	movf	??___xxtofl^0,w,c
 11800  003ECE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11801  003ED0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11802  003ED2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11803  003ED4  A4D8               	btfss	status,2,c
 11804  003ED6  EF6F  F01F         	goto	u7121
 11805  003EDA  EF71  F01F         	goto	u7120
 11806  003EDE                     u7121:
 11807  003EDE  EF4E  F01F         	goto	l5706
 11808  003EE2                     u7120:
 11809  003EE2  EF79  F01F         	goto	l5714
 11810  003EE6                     l5712:
 11811  003EE6  060A               	decf	___xxtofl@exp^0,f,c
 11812  003EE8  90D8               	bcf	status,0,c
 11813  003EEA  360B               	rlcf	___xxtofl@arg^0,f,c
 11814  003EEC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 11815  003EEE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 11816  003EF0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 11817  003EF2                     l5714:
 11818  003EF2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 11819  003EF4  EF7E  F01F         	goto	u7131
 11820  003EF8  EF80  F01F         	goto	u7130
 11821  003EFC                     u7131:
 11822  003EFC  EF88  F01F         	goto	l1323
 11823  003F00                     u7130:
 11824  003F00  0E02               	movlw	2
 11825  003F02  600A               	cpfslt	___xxtofl@exp^0,c
 11826  003F04  EF86  F01F         	goto	u7141
 11827  003F08  EF88  F01F         	goto	u7140
 11828  003F0C                     u7141:
 11829  003F0C  EF73  F01F         	goto	l5712
 11830  003F10                     u7140:
 11831  003F10                     l1323:
 11832  003F10  B00A               	btfsc	___xxtofl@exp^0,0,c
 11833  003F12  EF8D  F01F         	goto	u7151
 11834  003F16  EF8F  F01F         	goto	u7150
 11835  003F1A                     u7151:
 11836  003F1A  EF90  F01F         	goto	l5720
 11837  003F1E                     u7150:
 11838  003F1E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 11839  003F20                     l5720:
 11840  003F20  90D8               	bcf	status,0,c
 11841  003F22  320A               	rrcf	___xxtofl@exp^0,f,c
 11842  003F24  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 11843  003F28  6A06               	clrf	(??___xxtofl+1)^0,c
 11844  003F2A  6A07               	clrf	(??___xxtofl+2)^0,c
 11845  003F2C  6A08               	clrf	(??___xxtofl+3)^0,c
 11846  003F2E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 11847  003F32  6A07               	clrf	(??___xxtofl+2)^0,c
 11848  003F34  6A06               	clrf	(??___xxtofl+1)^0,c
 11849  003F36  6A05               	clrf	??___xxtofl^0,c
 11850  003F38  5005               	movf	??___xxtofl^0,w,c
 11851  003F3A  120B               	iorwf	___xxtofl@arg^0,f,c
 11852  003F3C  5006               	movf	(??___xxtofl+1)^0,w,c
 11853  003F3E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 11854  003F40  5007               	movf	(??___xxtofl+2)^0,w,c
 11855  003F42  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 11856  003F44  5008               	movf	(??___xxtofl+3)^0,w,c
 11857  003F46  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 11858  003F48  5009               	movf	___xxtofl@sign^0,w,c
 11859  003F4A  B4D8               	btfsc	status,2,c
 11860  003F4C  EFAA  F01F         	goto	u7161
 11861  003F50  EFAC  F01F         	goto	u7160
 11862  003F54                     u7161:
 11863  003F54  EFB4  F01F         	goto	l5730
 11864  003F58                     u7160:
 11865  003F58  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11866  003F5A  EFB3  F01F         	goto	u7170
 11867  003F5E  EFB1  F01F         	goto	u7171
 11868  003F62                     u7171:
 11869  003F62  EFB4  F01F         	goto	l5730
 11870  003F66                     u7170:
 11871  003F66  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 11872  003F68                     l5730:
 11873  003F68  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 11874  003F6C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 11875  003F70  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 11876  003F74  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 11877  003F78                     l1312:
 11878  003F78  0012               	return		;funcret
 11879  003F7A                     __end_of___xxtofl:
 11880                           	callstack 0
 11881                           
 11882 ;; *************** function _checkbatterylevel *****************
 11883 ;; Defined at:
 11884 ;;		line 73 in file "DC_motors.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;		None
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  batterylevel    1    1[COMRAM] unsigned char 
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1    wreg      void 
 11891 ;; Registers used:
 11892 ;;		wreg, status,2, status,0, cstack
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11902 ;;Total ram usage:        1 bytes
 11903 ;; Hardware stack levels used: 1
 11904 ;; Hardware stack levels required when called: 1
 11905 ;; This function calls:
 11906 ;;		_ADC_getval
 11907 ;; This function is called by:
 11908 ;;		_main
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text53
 11913  0059B2                     __ptext53:
 11914                           	callstack 0
 11915  0059B2                     _checkbatterylevel:
 11916                           	callstack 29
 11917  0059B2                     
 11918                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
 11919  0059B2  EC12  F02D         	call	_ADC_getval	;wreg free
 11920  0059B6  6E02               	movwf	checkbatterylevel@batterylevel^0,c
 11921  0059B8                     
 11922                           ;DC_motors.c: 77:     if (batterylevel<200) {
 11923  0059B8  0EC8               	movlw	200
 11924  0059BA  6002               	cpfslt	checkbatterylevel@batterylevel^0,c
 11925  0059BC  EFE2  F02C         	goto	u7181
 11926  0059C0  EFE4  F02C         	goto	u7180
 11927  0059C4                     u7181:
 11928  0059C4  EFE7  F02C         	goto	l545
 11929  0059C8                     u7180:
 11930  0059C8                     
 11931                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
 11932  0059C8  8E7C               	bsf	124,7,c	;volatile
 11933                           
 11934                           ;DC_motors.c: 79:     } else {
 11935  0059CA  EFE8  F02C         	goto	l547
 11936  0059CE                     l545:
 11937                           
 11938                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
 11939  0059CE  9E7C               	bcf	124,7,c	;volatile
 11940  0059D0                     l547:
 11941  0059D0  0012               	return		;funcret
 11942  0059D2                     __end_of_checkbatterylevel:
 11943                           	callstack 0
 11944                           
 11945 ;; *************** function _ADC_getval *****************
 11946 ;; Defined at:
 11947 ;;		line 26 in file "ADC.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;  tmpval          1    0[COMRAM] unsigned char 
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      unsigned char 
 11954 ;; Registers used:
 11955 ;;		wreg, status,2
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11965 ;;Total ram usage:        1 bytes
 11966 ;; Hardware stack levels used: 1
 11967 ;; This function calls:
 11968 ;;		Nothing
 11969 ;; This function is called by:
 11970 ;;		_checkbatterylevel
 11971 ;; This function uses a non-reentrant model
 11972 ;;
 11973                           
 11974                           	psect	text54
 11975  005A24                     __ptext54:
 11976                           	callstack 0
 11977  005A24                     _ADC_getval:
 11978                           	callstack 29
 11979  005A24                     
 11980                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
 11981  005A24  8060               	bsf	96,0,c	;volatile
 11982  005A26                     l291:
 11983  005A26  B060               	btfsc	96,0,c	;volatile
 11984  005A28  EF18  F02D         	goto	u7071
 11985  005A2C  EF1A  F02D         	goto	u7070
 11986  005A30                     u7071:
 11987  005A30  EF13  F02D         	goto	l291
 11988  005A34                     u7070:
 11989  005A34                     
 11990                           ;ADC.c: 31:     tmpval = ADRESH;
 11991  005A34  CF64 F001          	movff	3940,ADC_getval@tmpval	;volatile
 11992  005A38                     
 11993                           ;ADC.c: 34:     return tmpval;
 11994  005A38  5001               	movf	ADC_getval@tmpval^0,w,c
 11995  005A3A  0012               	return		;funcret
 11996  005A3C                     __end_of_ADC_getval:
 11997                           	callstack 0
 11998                           
 11999 ;; *************** function _USART4_init *****************
 12000 ;; Defined at:
 12001 ;;		line 7 in file "serial_comm.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;		None
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;		None
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      void 
 12008 ;; Registers used:
 12009 ;;		wreg, status,2
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12019 ;;Total ram usage:        0 bytes
 12020 ;; Hardware stack levels used: 1
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_main
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text55
 12029  0059D2                     __ptext55:
 12030                           	callstack 0
 12031  0059D2                     _USART4_init:
 12032                           	callstack 30
 12033  0059D2                     
 12034                           ;serial_comm.c: 10:     RC0PPS = 0x12;
 12035  0059D2  0E12               	movlw	18
 12036  0059D4  010E               	movlb	14	; () banked
 12037  0059D6  6F62               	movwf	98,b	;volatile
 12038                           
 12039                           ;serial_comm.c: 11:     RX4PPS = 0x11;
 12040  0059D8  0E11               	movlw	17
 12041  0059DA  6F15               	movwf	21,b	;volatile
 12042  0059DC                     
 12043                           ; BSR set to: 14
 12044                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
 12045  0059DC  8283               	bsf	131,1,c	;volatile
 12046  0059DE                     
 12047                           ; BSR set to: 14
 12048                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
 12049  0059DE  97E9               	bcf	233,3,b	;volatile
 12050  0059E0                     
 12051                           ; BSR set to: 14
 12052                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
 12053  0059E0  95E8               	bcf	232,2,b	;volatile
 12054                           
 12055                           ;serial_comm.c: 16:     SP4BRGL = 51;
 12056  0059E2  0E33               	movlw	51
 12057  0059E4  6FE5               	movwf	229,b	;volatile
 12058                           
 12059                           ;serial_comm.c: 17:     SP4BRGH = 0;
 12060  0059E6  0E00               	movlw	0
 12061  0059E8  6FE6               	movwf	230,b	;volatile
 12062  0059EA                     
 12063                           ; BSR set to: 14
 12064                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
 12065  0059EA  89E7               	bsf	231,4,b	;volatile
 12066  0059EC                     
 12067                           ; BSR set to: 14
 12068                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
 12069  0059EC  8BE8               	bsf	232,5,b	;volatile
 12070  0059EE                     
 12071                           ; BSR set to: 14
 12072                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
 12073  0059EE  8FE7               	bsf	231,7,b	;volatile
 12074  0059F0                     
 12075                           ; BSR set to: 14
 12076  0059F0  0012               	return		;funcret
 12077  0059F2                     __end_of_USART4_init:
 12078                           	callstack 0
 12079                           
 12080 ;; *************** function _DCmotors_testing *****************
 12081 ;; Defined at:
 12082 ;;		line 281 in file "DC_motors.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;  mL              2   39[COMRAM] PTR struct .
 12085 ;;		 -> main@motorL(9), 
 12086 ;;  mR              2   41[COMRAM] PTR struct .
 12087 ;;		 -> main@motorR(9), 
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;		None
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  1    wreg      void 
 12092 ;; Registers used:
 12093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12094 ;; Tracked objects:
 12095 ;;		On entry : 0/0
 12096 ;;		On exit  : 0/0
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12101 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12102 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12103 ;;Total ram usage:        6 bytes
 12104 ;; Hardware stack levels used: 1
 12105 ;; Hardware stack levels required when called: 4
 12106 ;; This function calls:
 12107 ;;		_forward
 12108 ;;		_reverse
 12109 ;;		_stop
 12110 ;;		_turnleft
 12111 ;;		_turnright
 12112 ;; This function is called by:
 12113 ;;		_main
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           	psect	text56
 12118  0037AA                     __ptext56:
 12119                           	callstack 0
 12120  0037AA                     _DCmotors_testing:
 12121                           	callstack 26
 12122  0037AA                     
 12123                           ;DC_motors.c: 281: void DCmotors_testing(DC_motor *mL, DC_motor *mR);DC_motors.c: 282: {
      +                          ;DC_motors.c: 283:     INTCONbits.GIE = 0;
 12124  0037AA  9EF2               	bcf	242,7,c	;volatile
 12125  0037AC                     
 12126                           ;DC_motors.c: 285:     forward(mL, mR);
 12127  0037AC  C028  F01A         	movff	DCmotors_testing@mL,forward@mL
 12128  0037B0  C029  F01B         	movff	DCmotors_testing@mL+1,forward@mL+1
 12129  0037B4  C02A  F01C         	movff	DCmotors_testing@mR,forward@mR
 12130  0037B8  C02B  F01D         	movff	DCmotors_testing@mR+1,forward@mR+1
 12131  0037BC  EC4B  F028         	call	_forward	;wreg free
 12132                           
 12133                           ;DC_motors.c: 286:     stop(mL, mR);
 12134  0037C0  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12135  0037C4  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12136  0037C8  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12137  0037CC  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12138  0037D0  EC98  F028         	call	_stop	;wreg free
 12139  0037D4                     
 12140                           ;DC_motors.c: 287:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12141  0037D4  0E52               	movlw	82
 12142  0037D6  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12143  0037D8  0E2B               	movlw	43
 12144  0037DA  6E2C               	movwf	??_DCmotors_testing^0,c
 12145  0037DC  0E00               	movlw	0
 12146  0037DE                     u8117:
 12147  0037DE  2EE8               	decfsz	wreg,f,c
 12148  0037E0  D7FE               	bra	u8117
 12149  0037E2  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12150  0037E4  D7FC               	bra	u8117
 12151  0037E6  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12152  0037E8  D7FA               	bra	u8117
 12153  0037EA  D000               	nop2	
 12154  0037EC                     
 12155                           ;DC_motors.c: 289:     reverse(mL, mR);
 12156  0037EC  C028  F01A         	movff	DCmotors_testing@mL,reverse@mL
 12157  0037F0  C029  F01B         	movff	DCmotors_testing@mL+1,reverse@mL+1
 12158  0037F4  C02A  F01C         	movff	DCmotors_testing@mR,reverse@mR
 12159  0037F8  C02B  F01D         	movff	DCmotors_testing@mR+1,reverse@mR+1
 12160  0037FC  ECFE  F027         	call	_reverse	;wreg free
 12161  003800                     
 12162                           ;DC_motors.c: 290:     stop(mL, mR);
 12163  003800  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12164  003804  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12165  003808  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12166  00380C  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12167  003810  EC98  F028         	call	_stop	;wreg free
 12168  003814                     
 12169                           ;DC_motors.c: 291:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12170  003814  0E52               	movlw	82
 12171  003816  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12172  003818  0E2B               	movlw	43
 12173  00381A  6E2C               	movwf	??_DCmotors_testing^0,c
 12174  00381C  0E00               	movlw	0
 12175  00381E                     u8127:
 12176  00381E  2EE8               	decfsz	wreg,f,c
 12177  003820  D7FE               	bra	u8127
 12178  003822  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12179  003824  D7FC               	bra	u8127
 12180  003826  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12181  003828  D7FA               	bra	u8127
 12182  00382A  D000               	nop2	
 12183                           
 12184                           ;DC_motors.c: 293:     turnright(mL, mR, 90);
 12185  00382C  C028  F022         	movff	DCmotors_testing@mL,turnright@mL
 12186  003830  C029  F023         	movff	DCmotors_testing@mL+1,turnright@mL+1
 12187  003834  C02A  F024         	movff	DCmotors_testing@mR,turnright@mR
 12188  003838  C02B  F025         	movff	DCmotors_testing@mR+1,turnright@mR+1
 12189  00383C  0E00               	movlw	0
 12190  00383E  6E27               	movwf	(turnright@deg+1)^0,c
 12191  003840  0E5A               	movlw	90
 12192  003842  6E26               	movwf	turnright@deg^0,c
 12193  003844  ECBF  F02A         	call	_turnright	;wreg free
 12194                           
 12195                           ;DC_motors.c: 294:     stop(mL, mR);
 12196  003848  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12197  00384C  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12198  003850  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12199  003854  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12200  003858  EC98  F028         	call	_stop	;wreg free
 12201  00385C                     
 12202                           ;DC_motors.c: 295:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12203  00385C  0E52               	movlw	82
 12204  00385E  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12205  003860  0E2B               	movlw	43
 12206  003862  6E2C               	movwf	??_DCmotors_testing^0,c
 12207  003864  0E00               	movlw	0
 12208  003866                     u8137:
 12209  003866  2EE8               	decfsz	wreg,f,c
 12210  003868  D7FE               	bra	u8137
 12211  00386A  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12212  00386C  D7FC               	bra	u8137
 12213  00386E  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12214  003870  D7FA               	bra	u8137
 12215  003872  D000               	nop2	
 12216  003874                     
 12217                           ;DC_motors.c: 297:     turnleft(mL, mR, 90);
 12218  003874  C028  F022         	movff	DCmotors_testing@mL,turnleft@mL
 12219  003878  C029  F023         	movff	DCmotors_testing@mL+1,turnleft@mL+1
 12220  00387C  C02A  F024         	movff	DCmotors_testing@mR,turnleft@mR
 12221  003880  C02B  F025         	movff	DCmotors_testing@mR+1,turnleft@mR+1
 12222  003884  0E00               	movlw	0
 12223  003886  6E27               	movwf	(turnleft@deg+1)^0,c
 12224  003888  0E5A               	movlw	90
 12225  00388A  6E26               	movwf	turnleft@deg^0,c
 12226  00388C  ECE7  F02A         	call	_turnleft	;wreg free
 12227  003890                     
 12228                           ;DC_motors.c: 298:     stop(mL, mR);
 12229  003890  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12230  003894  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12231  003898  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12232  00389C  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12233  0038A0  EC98  F028         	call	_stop	;wreg free
 12234  0038A4                     
 12235                           ;DC_motors.c: 299:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12236  0038A4  0E52               	movlw	82
 12237  0038A6  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12238  0038A8  0E2B               	movlw	43
 12239  0038AA  6E2C               	movwf	??_DCmotors_testing^0,c
 12240  0038AC  0E00               	movlw	0
 12241  0038AE                     u8147:
 12242  0038AE  2EE8               	decfsz	wreg,f,c
 12243  0038B0  D7FE               	bra	u8147
 12244  0038B2  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12245  0038B4  D7FC               	bra	u8147
 12246  0038B6  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12247  0038B8  D7FA               	bra	u8147
 12248  0038BA  D000               	nop2	
 12249                           
 12250                           ;DC_motors.c: 301:     turnright(mL, mR, 180);
 12251  0038BC  C028  F022         	movff	DCmotors_testing@mL,turnright@mL
 12252  0038C0  C029  F023         	movff	DCmotors_testing@mL+1,turnright@mL+1
 12253  0038C4  C02A  F024         	movff	DCmotors_testing@mR,turnright@mR
 12254  0038C8  C02B  F025         	movff	DCmotors_testing@mR+1,turnright@mR+1
 12255  0038CC  0E00               	movlw	0
 12256  0038CE  6E27               	movwf	(turnright@deg+1)^0,c
 12257  0038D0  0EB4               	movlw	180
 12258  0038D2  6E26               	movwf	turnright@deg^0,c
 12259  0038D4  ECBF  F02A         	call	_turnright	;wreg free
 12260                           
 12261                           ;DC_motors.c: 302:     stop(mL, mR);
 12262  0038D8  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12263  0038DC  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12264  0038E0  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12265  0038E4  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12266  0038E8  EC98  F028         	call	_stop	;wreg free
 12267  0038EC                     
 12268                           ;DC_motors.c: 303:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12269  0038EC  0E52               	movlw	82
 12270  0038EE  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12271  0038F0  0E2B               	movlw	43
 12272  0038F2  6E2C               	movwf	??_DCmotors_testing^0,c
 12273  0038F4  0E00               	movlw	0
 12274  0038F6                     u8157:
 12275  0038F6  2EE8               	decfsz	wreg,f,c
 12276  0038F8  D7FE               	bra	u8157
 12277  0038FA  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12278  0038FC  D7FC               	bra	u8157
 12279  0038FE  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12280  003900  D7FA               	bra	u8157
 12281  003902  D000               	nop2	
 12282  003904                     
 12283                           ;DC_motors.c: 305:     turnleft(mL, mR, 180);
 12284  003904  C028  F022         	movff	DCmotors_testing@mL,turnleft@mL
 12285  003908  C029  F023         	movff	DCmotors_testing@mL+1,turnleft@mL+1
 12286  00390C  C02A  F024         	movff	DCmotors_testing@mR,turnleft@mR
 12287  003910  C02B  F025         	movff	DCmotors_testing@mR+1,turnleft@mR+1
 12288  003914  0E00               	movlw	0
 12289  003916  6E27               	movwf	(turnleft@deg+1)^0,c
 12290  003918  0EB4               	movlw	180
 12291  00391A  6E26               	movwf	turnleft@deg^0,c
 12292  00391C  ECE7  F02A         	call	_turnleft	;wreg free
 12293  003920                     
 12294                           ;DC_motors.c: 306:     stop(mL, mR);
 12295  003920  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12296  003924  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12297  003928  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12298  00392C  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12299  003930  EC98  F028         	call	_stop	;wreg free
 12300  003934                     
 12301                           ;DC_motors.c: 307:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12302  003934  0E52               	movlw	82
 12303  003936  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12304  003938  0E2B               	movlw	43
 12305  00393A  6E2C               	movwf	??_DCmotors_testing^0,c
 12306  00393C  0E00               	movlw	0
 12307  00393E                     u8167:
 12308  00393E  2EE8               	decfsz	wreg,f,c
 12309  003940  D7FE               	bra	u8167
 12310  003942  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12311  003944  D7FC               	bra	u8167
 12312  003946  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12313  003948  D7FA               	bra	u8167
 12314  00394A  D000               	nop2	
 12315                           
 12316                           ;DC_motors.c: 309:     turnright(mL, mR, 135);
 12317  00394C  C028  F022         	movff	DCmotors_testing@mL,turnright@mL
 12318  003950  C029  F023         	movff	DCmotors_testing@mL+1,turnright@mL+1
 12319  003954  C02A  F024         	movff	DCmotors_testing@mR,turnright@mR
 12320  003958  C02B  F025         	movff	DCmotors_testing@mR+1,turnright@mR+1
 12321  00395C  0E00               	movlw	0
 12322  00395E  6E27               	movwf	(turnright@deg+1)^0,c
 12323  003960  0E87               	movlw	135
 12324  003962  6E26               	movwf	turnright@deg^0,c
 12325  003964  ECBF  F02A         	call	_turnright	;wreg free
 12326                           
 12327                           ;DC_motors.c: 310:     stop(mL, mR);
 12328  003968  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12329  00396C  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12330  003970  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12331  003974  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12332  003978  EC98  F028         	call	_stop	;wreg free
 12333  00397C                     
 12334                           ;DC_motors.c: 311:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12335  00397C  0E52               	movlw	82
 12336  00397E  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12337  003980  0E2B               	movlw	43
 12338  003982  6E2C               	movwf	??_DCmotors_testing^0,c
 12339  003984  0E00               	movlw	0
 12340  003986                     u8177:
 12341  003986  2EE8               	decfsz	wreg,f,c
 12342  003988  D7FE               	bra	u8177
 12343  00398A  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12344  00398C  D7FC               	bra	u8177
 12345  00398E  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12346  003990  D7FA               	bra	u8177
 12347  003992  D000               	nop2	
 12348  003994                     
 12349                           ;DC_motors.c: 313:     turnleft(mL, mR, 135);
 12350  003994  C028  F022         	movff	DCmotors_testing@mL,turnleft@mL
 12351  003998  C029  F023         	movff	DCmotors_testing@mL+1,turnleft@mL+1
 12352  00399C  C02A  F024         	movff	DCmotors_testing@mR,turnleft@mR
 12353  0039A0  C02B  F025         	movff	DCmotors_testing@mR+1,turnleft@mR+1
 12354  0039A4  0E00               	movlw	0
 12355  0039A6  6E27               	movwf	(turnleft@deg+1)^0,c
 12356  0039A8  0E87               	movlw	135
 12357  0039AA  6E26               	movwf	turnleft@deg^0,c
 12358  0039AC  ECE7  F02A         	call	_turnleft	;wreg free
 12359  0039B0                     
 12360                           ;DC_motors.c: 314:     stop(mL, mR);
 12361  0039B0  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12362  0039B4  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12363  0039B8  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12364  0039BC  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12365  0039C0  EC98  F028         	call	_stop	;wreg free
 12366  0039C4                     
 12367                           ;DC_motors.c: 315:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12368  0039C4  0E52               	movlw	82
 12369  0039C6  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12370  0039C8  0E2B               	movlw	43
 12371  0039CA  6E2C               	movwf	??_DCmotors_testing^0,c
 12372  0039CC  0E00               	movlw	0
 12373  0039CE                     u8187:
 12374  0039CE  2EE8               	decfsz	wreg,f,c
 12375  0039D0  D7FE               	bra	u8187
 12376  0039D2  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12377  0039D4  D7FC               	bra	u8187
 12378  0039D6  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12379  0039D8  D7FA               	bra	u8187
 12380  0039DA  D000               	nop2	
 12381  0039DC                     
 12382                           ;DC_motors.c: 317:     INTCONbits.GIE = 1;
 12383  0039DC  8EF2               	bsf	242,7,c	;volatile
 12384  0039DE  0012               	return		;funcret
 12385  0039E0                     __end_of_DCmotors_testing:
 12386                           	callstack 0
 12387                           
 12388 ;; *************** function _turnright *****************
 12389 ;; Defined at:
 12390 ;;		line 218 in file "DC_motors.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;  mL              2   33[COMRAM] PTR struct .
 12393 ;;		 -> main@motorL(9), 
 12394 ;;  mR              2   35[COMRAM] PTR struct .
 12395 ;;		 -> main@motorR(9), 
 12396 ;;  deg             2   37[COMRAM] unsigned int 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;		None
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1    wreg      void 
 12401 ;; Registers used:
 12402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/0
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12408 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12411 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12412 ;;Total ram usage:        6 bytes
 12413 ;; Hardware stack levels used: 1
 12414 ;; Hardware stack levels required when called: 3
 12415 ;; This function calls:
 12416 ;;		_left
 12417 ;;		_right
 12418 ;; This function is called by:
 12419 ;;		_DCmotors_testing
 12420 ;;		_colourcards_readRGBC
 12421 ;;		_DCmotors_calibration
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           	psect	text57
 12426  00557E                     __ptext57:
 12427                           	callstack 0
 12428  00557E                     _turnright:
 12429                           	callstack 26
 12430  00557E                     
 12431                           ;DC_motors.c: 218: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {
 12432  00557E  0100               	movlb	0	; () banked
 12433  005580  51F4               	movf	_returnhome_flag& (0+255),w,b	;volatile
 12434  005582  A4D8               	btfss	status,2,c
 12435  005584  EFC6  F02A         	goto	u6981
 12436  005588  EFC8  F02A         	goto	u6980
 12437  00558C                     u6981:
 12438  00558C  EFD8  F02A         	goto	l5592
 12439  005590                     u6980:
 12440  005590                     
 12441                           ; BSR set to: 0
 12442                           ;DC_motors.c: 221:         right(mL, mR, deg);
 12443  005590  C022  F01A         	movff	turnright@mL,right@mL
 12444  005594  C023  F01B         	movff	turnright@mL+1,right@mL+1
 12445  005598  C024  F01C         	movff	turnright@mR,right@mR
 12446  00559C  C025  F01D         	movff	turnright@mR+1,right@mR+1
 12447  0055A0  C026  F01E         	movff	turnright@deg,right@deg
 12448  0055A4  C027  F01F         	movff	turnright@deg+1,right@deg+1
 12449  0055A8  EC4C  F024         	call	_right	;wreg free
 12450                           
 12451                           ;DC_motors.c: 222:     } else {
 12452  0055AC  EFE6  F02A         	goto	l597
 12453  0055B0                     l5592:
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;DC_motors.c: 223:         left(mL, mR, deg);
 12457  0055B0  C022  F01A         	movff	turnright@mL,left@mL
 12458  0055B4  C023  F01B         	movff	turnright@mL+1,left@mL+1
 12459  0055B8  C024  F01C         	movff	turnright@mR,left@mR
 12460  0055BC  C025  F01D         	movff	turnright@mR+1,left@mR+1
 12461  0055C0  C026  F01E         	movff	turnright@deg,left@deg
 12462  0055C4  C027  F01F         	movff	turnright@deg+1,left@deg+1
 12463  0055C8  ECC7  F024         	call	_left	;wreg free
 12464  0055CC                     l597:
 12465  0055CC  0012               	return		;funcret
 12466  0055CE                     __end_of_turnright:
 12467                           	callstack 0
 12468                           
 12469 ;; *************** function _turnleft *****************
 12470 ;; Defined at:
 12471 ;;		line 205 in file "DC_motors.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;  mL              2   33[COMRAM] PTR struct .
 12474 ;;		 -> main@motorL(9), 
 12475 ;;  mR              2   35[COMRAM] PTR struct .
 12476 ;;		 -> main@motorR(9), 
 12477 ;;  deg             2   37[COMRAM] unsigned int 
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;		None
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  1    wreg      void 
 12482 ;; Registers used:
 12483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12489 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12493 ;;Total ram usage:        6 bytes
 12494 ;; Hardware stack levels used: 1
 12495 ;; Hardware stack levels required when called: 3
 12496 ;; This function calls:
 12497 ;;		_left
 12498 ;;		_right
 12499 ;; This function is called by:
 12500 ;;		_DCmotors_testing
 12501 ;;		_colourcards_readRGBC
 12502 ;;		_DCmotors_calibration
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           	psect	text58
 12507  0055CE                     __ptext58:
 12508                           	callstack 0
 12509  0055CE                     _turnleft:
 12510                           	callstack 26
 12511  0055CE                     
 12512                           ;DC_motors.c: 205: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 206: {;DC_motors.c: 207:     if (returnhome_flag==0) {
 12513  0055CE  0100               	movlb	0	; () banked
 12514  0055D0  51F4               	movf	_returnhome_flag& (0+255),w,b	;volatile
 12515  0055D2  A4D8               	btfss	status,2,c
 12516  0055D4  EFEE  F02A         	goto	u6991
 12517  0055D8  EFF0  F02A         	goto	u6990
 12518  0055DC                     u6991:
 12519  0055DC  EF00  F02B         	goto	l5598
 12520  0055E0                     u6990:
 12521  0055E0                     
 12522                           ; BSR set to: 0
 12523                           ;DC_motors.c: 208:         left(mL, mR, deg);
 12524  0055E0  C022  F01A         	movff	turnleft@mL,left@mL
 12525  0055E4  C023  F01B         	movff	turnleft@mL+1,left@mL+1
 12526  0055E8  C024  F01C         	movff	turnleft@mR,left@mR
 12527  0055EC  C025  F01D         	movff	turnleft@mR+1,left@mR+1
 12528  0055F0  C026  F01E         	movff	turnleft@deg,left@deg
 12529  0055F4  C027  F01F         	movff	turnleft@deg+1,left@deg+1
 12530  0055F8  ECC7  F024         	call	_left	;wreg free
 12531                           
 12532                           ;DC_motors.c: 209:     } else {
 12533  0055FC  EF0E  F02B         	goto	l592
 12534  005600                     l5598:
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;DC_motors.c: 210:         right(mL, mR, deg);
 12538  005600  C022  F01A         	movff	turnleft@mL,right@mL
 12539  005604  C023  F01B         	movff	turnleft@mL+1,right@mL+1
 12540  005608  C024  F01C         	movff	turnleft@mR,right@mR
 12541  00560C  C025  F01D         	movff	turnleft@mR+1,right@mR+1
 12542  005610  C026  F01E         	movff	turnleft@deg,right@deg
 12543  005614  C027  F01F         	movff	turnleft@deg+1,right@deg+1
 12544  005618  EC4C  F024         	call	_right	;wreg free
 12545  00561C                     l592:
 12546  00561C  0012               	return		;funcret
 12547  00561E                     __end_of_turnleft:
 12548                           	callstack 0
 12549                           
 12550 ;; *************** function _right *****************
 12551 ;; Defined at:
 12552 ;;		line 177 in file "DC_motors.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;  mL              2   25[COMRAM] PTR struct .
 12555 ;;		 -> main@motorL(9), 
 12556 ;;  mR              2   27[COMRAM] PTR struct .
 12557 ;;		 -> main@motorR(9), 
 12558 ;;  deg             2   29[COMRAM] unsigned int 
 12559 ;; Auto vars:     Size  Location     Type
 12560 ;;		None
 12561 ;; Return value:  Size  Location     Type
 12562 ;;                  1    wreg      void 
 12563 ;; Registers used:
 12564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12565 ;; Tracked objects:
 12566 ;;		On entry : 0/0
 12567 ;;		On exit  : 0/0
 12568 ;;		Unchanged: 0/0
 12569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12570 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12573 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12574 ;;Total ram usage:        8 bytes
 12575 ;; Hardware stack levels used: 1
 12576 ;; Hardware stack levels required when called: 2
 12577 ;; This function calls:
 12578 ;;		_DCmotors_setPWM
 12579 ;; This function is called by:
 12580 ;;		_turnleft
 12581 ;;		_turnright
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           
 12585                           	psect	text59
 12586  004898                     __ptext59:
 12587                           	callstack 0
 12588  004898                     _right:
 12589                           	callstack 26
 12590  004898                     
 12591                           ;DC_motors.c: 177: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           178: {;DC_motors.c: 180:     mL->direction = 1;
 12592  004898  EE20 F001          	lfsr	2,1
 12593  00489C  501A               	movf	right@mL^0,w,c
 12594  00489E  26D9               	addwf	fsr2l,f,c
 12595  0048A0  501B               	movf	(right@mL+1)^0,w,c
 12596  0048A2  22DA               	addwfc	fsr2h,f,c
 12597  0048A4  0E01               	movlw	1
 12598  0048A6  6EDF               	movwf	indf2,c
 12599                           
 12600                           ;DC_motors.c: 181:     mR->direction = 0;
 12601  0048A8  EE20 F001          	lfsr	2,1
 12602  0048AC  501C               	movf	right@mR^0,w,c
 12603  0048AE  26D9               	addwf	fsr2l,f,c
 12604  0048B0  501D               	movf	(right@mR+1)^0,w,c
 12605  0048B2  22DA               	addwfc	fsr2h,f,c
 12606  0048B4  0E00               	movlw	0
 12607  0048B6  6EDF               	movwf	indf2,c
 12608                           
 12609                           ;DC_motors.c: 184:     while((mL->power < DCmotors_upper) || (mR->power < DCmotors_lower
      +                          )){
 12610  0048B8  EFAA  F024         	goto	l582
 12611  0048BC                     l5560:
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;DC_motors.c: 186:         LATHbits.LATH0 = !LATHbits.LATH0;
 12615  0048BC  A080               	btfss	128,0,c	;volatile
 12616  0048BE  EF63  F024         	goto	u6911
 12617  0048C2  EF67  F024         	goto	u6910
 12618  0048C6                     u6911:
 12619  0048C6  6A20               	clrf	??_right^0,c
 12620  0048C8  2A20               	incf	??_right^0,f,c
 12621  0048CA  EF68  F024         	goto	u6928
 12622  0048CE                     u6910:
 12623  0048CE  6A20               	clrf	??_right^0,c
 12624  0048D0                     u6928:
 12625  0048D0  5080               	movf	128,w,c	;volatile
 12626  0048D2  1820               	xorwf	??_right^0,w,c
 12627  0048D4  0BFE               	andlw	-2
 12628  0048D6  1820               	xorwf	??_right^0,w,c
 12629  0048D8  6E80               	movwf	128,c	;volatile
 12630  0048DA                     
 12631                           ;DC_motors.c: 189:         if (mL->power < DCmotors_upper) {mL->power += 1;}
 12632  0048DA  C01A  FFD9         	movff	right@mL,fsr2l
 12633  0048DE  C01B  FFDA         	movff	right@mL+1,fsr2h
 12634  0048E2  0100               	movlb	0	; () banked
 12635  0048E4  51FD               	movf	_DCmotors_upper& (0+255),w,b	;volatile
 12636  0048E6  5CDE               	subwf	postinc2,w,c
 12637  0048E8  B0D8               	btfsc	status,0,c
 12638  0048EA  EF79  F024         	goto	u6931
 12639  0048EE  EF7B  F024         	goto	u6930
 12640  0048F2                     u6931:
 12641  0048F2  EF80  F024         	goto	l5566
 12642  0048F6                     u6930:
 12643  0048F6                     
 12644                           ; BSR set to: 0
 12645  0048F6  C01A  FFD9         	movff	right@mL,fsr2l
 12646  0048FA  C01B  FFDA         	movff	right@mL+1,fsr2h
 12647  0048FE  2ADF               	incf	indf2,f,c
 12648  004900                     l5566:
 12649                           
 12650                           ; BSR set to: 0
 12651                           ;DC_motors.c: 190:         if (mR->power < DCmotors_lower) {mR->power += 1;}
 12652  004900  C01C  FFD9         	movff	right@mR,fsr2l
 12653  004904  C01D  FFDA         	movff	right@mR+1,fsr2h
 12654  004908  51FE               	movf	_DCmotors_lower& (0+255),w,b	;volatile
 12655  00490A  5CDE               	subwf	postinc2,w,c
 12656  00490C  B0D8               	btfsc	status,0,c
 12657  00490E  EF8B  F024         	goto	u6941
 12658  004912  EF8D  F024         	goto	u6940
 12659  004916                     u6941:
 12660  004916  EF92  F024         	goto	l5570
 12661  00491A                     u6940:
 12662  00491A                     
 12663                           ; BSR set to: 0
 12664  00491A  C01C  FFD9         	movff	right@mR,fsr2l
 12665  00491E  C01D  FFDA         	movff	right@mR+1,fsr2h
 12666  004922  2ADF               	incf	indf2,f,c
 12667  004924                     l5570:
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;DC_motors.c: 193:         DCmotors_setPWM(mL);
 12671  004924  C01A  F00F         	movff	right@mL,DCmotors_setPWM@m
 12672  004928  C01B  F010         	movff	right@mL+1,DCmotors_setPWM@m+1
 12673  00492C  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 12674  004930                     
 12675                           ;DC_motors.c: 194:         DCmotors_setPWM(mR);
 12676  004930  C01C  F00F         	movff	right@mR,DCmotors_setPWM@m
 12677  004934  C01D  F010         	movff	right@mR+1,DCmotors_setPWM@m+1
 12678  004938  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 12679  00493C                     
 12680                           ;DC_motors.c: 195:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12681  00493C  0E09               	movlw	9
 12682  00493E  6E21               	movwf	(??_right+1)^0,c
 12683  004940  0E1E               	movlw	30
 12684  004942  6E20               	movwf	??_right^0,c
 12685  004944  0EE4               	movlw	228
 12686  004946                     u8197:
 12687  004946  2EE8               	decfsz	wreg,f,c
 12688  004948  D7FE               	bra	u8197
 12689  00494A  2E20               	decfsz	??_right^0,f,c
 12690  00494C  D7FC               	bra	u8197
 12691  00494E  2E21               	decfsz	(??_right+1)^0,f,c
 12692  004950  D7FA               	bra	u8197
 12693  004952  D000               	nop2	
 12694  004954                     l582:
 12695                           
 12696                           ;DC_motors.c: 184:     while((mL->power < DCmotors_upper) || (mR->power < DCmotors_lower
      +                          )){
 12697  004954  C01A  FFD9         	movff	right@mL,fsr2l
 12698  004958  C01B  FFDA         	movff	right@mL+1,fsr2h
 12699  00495C  0100               	movlb	0	; () banked
 12700  00495E  51FD               	movf	_DCmotors_upper& (0+255),w,b	;volatile
 12701  004960  5CDE               	subwf	postinc2,w,c
 12702  004962  A0D8               	btfss	status,0,c
 12703  004964  EFB6  F024         	goto	u6951
 12704  004968  EFB8  F024         	goto	u6950
 12705  00496C                     u6951:
 12706  00496C  EF5E  F024         	goto	l5560
 12707  004970                     u6950:
 12708  004970                     
 12709                           ; BSR set to: 0
 12710  004970  C01C  FFD9         	movff	right@mR,fsr2l
 12711  004974  C01D  FFDA         	movff	right@mR+1,fsr2h
 12712  004978  51FE               	movf	_DCmotors_lower& (0+255),w,b	;volatile
 12713  00497A  5CDE               	subwf	postinc2,w,c
 12714  00497C  A0D8               	btfss	status,0,c
 12715  00497E  EFC3  F024         	goto	u6961
 12716  004982  EFC5  F024         	goto	u6960
 12717  004986                     u6961:
 12718  004986  EF5E  F024         	goto	l5560
 12719  00498A                     u6960:
 12720  00498A                     
 12721                           ; BSR set to: 0
 12722                           ;DC_motors.c: 198:     LATHbits.LATH0 = 0;
 12723  00498A  9080               	bcf	128,0,c	;volatile
 12724  00498C                     
 12725                           ; BSR set to: 0
 12726  00498C  0012               	return		;funcret
 12727  00498E                     __end_of_right:
 12728                           	callstack 0
 12729                           
 12730 ;; *************** function _left *****************
 12731 ;; Defined at:
 12732 ;;		line 150 in file "DC_motors.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;  mL              2   25[COMRAM] PTR struct .
 12735 ;;		 -> main@motorL(9), 
 12736 ;;  mR              2   27[COMRAM] PTR struct .
 12737 ;;		 -> main@motorR(9), 
 12738 ;;  deg             2   29[COMRAM] unsigned int 
 12739 ;; Auto vars:     Size  Location     Type
 12740 ;;		None
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  1    wreg      void 
 12743 ;; Registers used:
 12744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12750 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12753 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12754 ;;Total ram usage:        8 bytes
 12755 ;; Hardware stack levels used: 1
 12756 ;; Hardware stack levels required when called: 2
 12757 ;; This function calls:
 12758 ;;		_DCmotors_setPWM
 12759 ;; This function is called by:
 12760 ;;		_turnleft
 12761 ;;		_turnright
 12762 ;; This function uses a non-reentrant model
 12763 ;;
 12764                           
 12765                           	psect	text60
 12766  00498E                     __ptext60:
 12767                           	callstack 0
 12768  00498E                     _left:
 12769                           	callstack 26
 12770  00498E                     
 12771                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     mL->direction = 0;
 12772  00498E  EE20 F001          	lfsr	2,1
 12773  004992  501A               	movf	left@mL^0,w,c
 12774  004994  26D9               	addwf	fsr2l,f,c
 12775  004996  501B               	movf	(left@mL+1)^0,w,c
 12776  004998  22DA               	addwfc	fsr2h,f,c
 12777  00499A  0E00               	movlw	0
 12778  00499C  6EDF               	movwf	indf2,c
 12779                           
 12780                           ;DC_motors.c: 154:     mR->direction = 1;
 12781  00499E  EE20 F001          	lfsr	2,1
 12782  0049A2  501C               	movf	left@mR^0,w,c
 12783  0049A4  26D9               	addwf	fsr2l,f,c
 12784  0049A6  501D               	movf	(left@mR+1)^0,w,c
 12785  0049A8  22DA               	addwfc	fsr2h,f,c
 12786  0049AA  0E01               	movlw	1
 12787  0049AC  6EDF               	movwf	indf2,c
 12788                           
 12789                           ;DC_motors.c: 157:     while((mL->power < DCmotors_lower) || (mR->power < DCmotors_upper
      +                          )){
 12790  0049AE  EF25  F025         	goto	l574
 12791  0049B2                     l5540:
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;DC_motors.c: 159:         LATFbits.LATF0 = !LATFbits.LATF0;
 12795  0049B2  A07E               	btfss	126,0,c	;volatile
 12796  0049B4  EFDE  F024         	goto	u6851
 12797  0049B8  EFE2  F024         	goto	u6850
 12798  0049BC                     u6851:
 12799  0049BC  6A20               	clrf	??_left^0,c
 12800  0049BE  2A20               	incf	??_left^0,f,c
 12801  0049C0  EFE3  F024         	goto	u6868
 12802  0049C4                     u6850:
 12803  0049C4  6A20               	clrf	??_left^0,c
 12804  0049C6                     u6868:
 12805  0049C6  507E               	movf	126,w,c	;volatile
 12806  0049C8  1820               	xorwf	??_left^0,w,c
 12807  0049CA  0BFE               	andlw	-2
 12808  0049CC  1820               	xorwf	??_left^0,w,c
 12809  0049CE  6E7E               	movwf	126,c	;volatile
 12810  0049D0                     
 12811                           ;DC_motors.c: 162:         if (mL->power < DCmotors_lower) {mL->power += 1;}
 12812  0049D0  C01A  FFD9         	movff	left@mL,fsr2l
 12813  0049D4  C01B  FFDA         	movff	left@mL+1,fsr2h
 12814  0049D8  0100               	movlb	0	; () banked
 12815  0049DA  51FE               	movf	_DCmotors_lower& (0+255),w,b	;volatile
 12816  0049DC  5CDE               	subwf	postinc2,w,c
 12817  0049DE  B0D8               	btfsc	status,0,c
 12818  0049E0  EFF4  F024         	goto	u6871
 12819  0049E4  EFF6  F024         	goto	u6870
 12820  0049E8                     u6871:
 12821  0049E8  EFFB  F024         	goto	l5546
 12822  0049EC                     u6870:
 12823  0049EC                     
 12824                           ; BSR set to: 0
 12825  0049EC  C01A  FFD9         	movff	left@mL,fsr2l
 12826  0049F0  C01B  FFDA         	movff	left@mL+1,fsr2h
 12827  0049F4  2ADF               	incf	indf2,f,c
 12828  0049F6                     l5546:
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;DC_motors.c: 163:         if (mR->power < DCmotors_upper) {mR->power += 1;}
 12832  0049F6  C01C  FFD9         	movff	left@mR,fsr2l
 12833  0049FA  C01D  FFDA         	movff	left@mR+1,fsr2h
 12834  0049FE  51FD               	movf	_DCmotors_upper& (0+255),w,b	;volatile
 12835  004A00  5CDE               	subwf	postinc2,w,c
 12836  004A02  B0D8               	btfsc	status,0,c
 12837  004A04  EF06  F025         	goto	u6881
 12838  004A08  EF08  F025         	goto	u6880
 12839  004A0C                     u6881:
 12840  004A0C  EF0D  F025         	goto	l5550
 12841  004A10                     u6880:
 12842  004A10                     
 12843                           ; BSR set to: 0
 12844  004A10  C01C  FFD9         	movff	left@mR,fsr2l
 12845  004A14  C01D  FFDA         	movff	left@mR+1,fsr2h
 12846  004A18  2ADF               	incf	indf2,f,c
 12847  004A1A                     l5550:
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;DC_motors.c: 166:         DCmotors_setPWM(mL);
 12851  004A1A  C01A  F00F         	movff	left@mL,DCmotors_setPWM@m
 12852  004A1E  C01B  F010         	movff	left@mL+1,DCmotors_setPWM@m+1
 12853  004A22  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 12854  004A26                     
 12855                           ;DC_motors.c: 167:         DCmotors_setPWM(mR);
 12856  004A26  C01C  F00F         	movff	left@mR,DCmotors_setPWM@m
 12857  004A2A  C01D  F010         	movff	left@mR+1,DCmotors_setPWM@m+1
 12858  004A2E  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 12859  004A32                     
 12860                           ;DC_motors.c: 168:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12861  004A32  0E09               	movlw	9
 12862  004A34  6E21               	movwf	(??_left+1)^0,c
 12863  004A36  0E1E               	movlw	30
 12864  004A38  6E20               	movwf	??_left^0,c
 12865  004A3A  0EE4               	movlw	228
 12866  004A3C                     u8207:
 12867  004A3C  2EE8               	decfsz	wreg,f,c
 12868  004A3E  D7FE               	bra	u8207
 12869  004A40  2E20               	decfsz	??_left^0,f,c
 12870  004A42  D7FC               	bra	u8207
 12871  004A44  2E21               	decfsz	(??_left+1)^0,f,c
 12872  004A46  D7FA               	bra	u8207
 12873  004A48  D000               	nop2	
 12874  004A4A                     l574:
 12875                           
 12876                           ;DC_motors.c: 157:     while((mL->power < DCmotors_lower) || (mR->power < DCmotors_upper
      +                          )){
 12877  004A4A  C01A  FFD9         	movff	left@mL,fsr2l
 12878  004A4E  C01B  FFDA         	movff	left@mL+1,fsr2h
 12879  004A52  0100               	movlb	0	; () banked
 12880  004A54  51FE               	movf	_DCmotors_lower& (0+255),w,b	;volatile
 12881  004A56  5CDE               	subwf	postinc2,w,c
 12882  004A58  A0D8               	btfss	status,0,c
 12883  004A5A  EF31  F025         	goto	u6891
 12884  004A5E  EF33  F025         	goto	u6890
 12885  004A62                     u6891:
 12886  004A62  EFD9  F024         	goto	l5540
 12887  004A66                     u6890:
 12888  004A66                     
 12889                           ; BSR set to: 0
 12890  004A66  C01C  FFD9         	movff	left@mR,fsr2l
 12891  004A6A  C01D  FFDA         	movff	left@mR+1,fsr2h
 12892  004A6E  51FD               	movf	_DCmotors_upper& (0+255),w,b	;volatile
 12893  004A70  5CDE               	subwf	postinc2,w,c
 12894  004A72  A0D8               	btfss	status,0,c
 12895  004A74  EF3E  F025         	goto	u6901
 12896  004A78  EF40  F025         	goto	u6900
 12897  004A7C                     u6901:
 12898  004A7C  EFD9  F024         	goto	l5540
 12899  004A80                     u6900:
 12900  004A80                     
 12901                           ; BSR set to: 0
 12902                           ;DC_motors.c: 171:     LATFbits.LATF0 = 0;
 12903  004A80  907E               	bcf	126,0,c	;volatile
 12904  004A82                     
 12905                           ; BSR set to: 0
 12906  004A82  0012               	return		;funcret
 12907  004A84                     __end_of_left:
 12908                           	callstack 0
 12909                           
 12910 ;; *************** function _stop *****************
 12911 ;; Defined at:
 12912 ;;		line 129 in file "DC_motors.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;  mL              2   25[COMRAM] PTR struct .
 12915 ;;		 -> main@motorL(9), 
 12916 ;;  mR              2   27[COMRAM] PTR struct .
 12917 ;;		 -> main@motorR(9), 
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;		None
 12920 ;; Return value:  Size  Location     Type
 12921 ;;                  1    wreg      void 
 12922 ;; Registers used:
 12923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12932 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12933 ;;Total ram usage:        6 bytes
 12934 ;; Hardware stack levels used: 1
 12935 ;; Hardware stack levels required when called: 2
 12936 ;; This function calls:
 12937 ;;		_DCmotors_setPWM
 12938 ;; This function is called by:
 12939 ;;		_DCmotors_testing
 12940 ;;		_colourcards_readRGBC
 12941 ;;		_DCmotors_calibration
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           	psect	text61
 12946  005130                     __ptext61:
 12947                           	callstack 0
 12948  005130                     _stop:
 12949                           	callstack 27
 12950  005130                     
 12951                           ;DC_motors.c: 129: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 130: {;DC_motors.c
      +                          : 131:     LATDbits.LATD4 = 1;
 12952  005130  887C               	bsf	124,4,c	;volatile
 12953                           
 12954                           ;DC_motors.c: 134:     while(((mL->power)>0) && ((mR->power)>0)){
 12955  005132  EFBD  F028         	goto	l5622
 12956  005136                     l5614:
 12957                           
 12958                           ;DC_motors.c: 135:         mL->power-=1;
 12959  005136  C01A  FFD9         	movff	stop@mL,fsr2l
 12960  00513A  C01B  FFDA         	movff	stop@mL+1,fsr2h
 12961  00513E  06DF               	decf	indf2,f,c
 12962                           
 12963                           ;DC_motors.c: 136:         mR->power-=1;
 12964  005140  C01C  FFD9         	movff	stop@mR,fsr2l
 12965  005144  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12966  005148  06DF               	decf	indf2,f,c
 12967  00514A                     
 12968                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
 12969  00514A  C01A  F00F         	movff	stop@mL,DCmotors_setPWM@m
 12970  00514E  C01B  F010         	movff	stop@mL+1,DCmotors_setPWM@m+1
 12971  005152  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 12972  005156                     
 12973                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
 12974  005156  C01C  F00F         	movff	stop@mR,DCmotors_setPWM@m
 12975  00515A  C01D  F010         	movff	stop@mR+1,DCmotors_setPWM@m+1
 12976  00515E  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 12977  005162                     
 12978                           ;DC_motors.c: 141:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12979  005162  0E09               	movlw	9
 12980  005164  6E1F               	movwf	(??_stop+1)^0,c
 12981  005166  0E1E               	movlw	30
 12982  005168  6E1E               	movwf	??_stop^0,c
 12983  00516A  0EE4               	movlw	228
 12984  00516C                     u8217:
 12985  00516C  2EE8               	decfsz	wreg,f,c
 12986  00516E  D7FE               	bra	u8217
 12987  005170  2E1E               	decfsz	??_stop^0,f,c
 12988  005172  D7FC               	bra	u8217
 12989  005174  2E1F               	decfsz	(??_stop+1)^0,f,c
 12990  005176  D7FA               	bra	u8217
 12991  005178  D000               	nop2	
 12992  00517A                     l5622:
 12993                           
 12994                           ;DC_motors.c: 134:     while(((mL->power)>0) && ((mR->power)>0)){
 12995  00517A  C01A  FFD9         	movff	stop@mL,fsr2l
 12996  00517E  C01B  FFDA         	movff	stop@mL+1,fsr2h
 12997  005182  50DF               	movf	indf2,w,c
 12998  005184  B4D8               	btfsc	status,2,c
 12999  005186  EFC7  F028         	goto	u7021
 13000  00518A  EFC9  F028         	goto	u7020
 13001  00518E                     u7021:
 13002  00518E  EFD5  F028         	goto	l570
 13003  005192                     u7020:
 13004  005192  C01C  FFD9         	movff	stop@mR,fsr2l
 13005  005196  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13006  00519A  50DF               	movf	indf2,w,c
 13007  00519C  A4D8               	btfss	status,2,c
 13008  00519E  EFD3  F028         	goto	u7031
 13009  0051A2  EFD5  F028         	goto	u7030
 13010  0051A6                     u7031:
 13011  0051A6  EF9B  F028         	goto	l5614
 13012  0051AA                     u7030:
 13013  0051AA                     l570:
 13014                           
 13015                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
 13016  0051AA  987C               	bcf	124,4,c	;volatile
 13017  0051AC  0012               	return		;funcret
 13018  0051AE                     __end_of_stop:
 13019                           	callstack 0
 13020                           
 13021 ;; *************** function _reverse *****************
 13022 ;; Defined at:
 13023 ;;		line 108 in file "DC_motors.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;  mL              2   25[COMRAM] PTR struct .
 13026 ;;		 -> main@motorL(9), 
 13027 ;;  mR              2   27[COMRAM] PTR struct .
 13028 ;;		 -> main@motorR(9), 
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;		None
 13031 ;; Return value:  Size  Location     Type
 13032 ;;                  1    wreg      void 
 13033 ;; Registers used:
 13034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13035 ;; Tracked objects:
 13036 ;;		On entry : 0/0
 13037 ;;		On exit  : 0/0
 13038 ;;		Unchanged: 0/0
 13039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13043 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13044 ;;Total ram usage:        6 bytes
 13045 ;; Hardware stack levels used: 1
 13046 ;; Hardware stack levels required when called: 2
 13047 ;; This function calls:
 13048 ;;		_DCmotors_setPWM
 13049 ;; This function is called by:
 13050 ;;		_DCmotors_testing
 13051 ;;		_colourcards_readRGBC
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           	psect	text62
 13056  004FFC                     __ptext62:
 13057                           	callstack 0
 13058  004FFC                     _reverse:
 13059                           	callstack 27
 13060  004FFC                     
 13061                           ;DC_motors.c: 108: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 109: {;DC_motor
      +                          s.c: 111:     mL->direction = 0;
 13062  004FFC  EE20 F001          	lfsr	2,1
 13063  005000  501A               	movf	reverse@mL^0,w,c
 13064  005002  26D9               	addwf	fsr2l,f,c
 13065  005004  501B               	movf	(reverse@mL+1)^0,w,c
 13066  005006  22DA               	addwfc	fsr2h,f,c
 13067  005008  0E00               	movlw	0
 13068  00500A  6EDF               	movwf	indf2,c
 13069                           
 13070                           ;DC_motors.c: 112:     mR->direction = 0;
 13071  00500C  EE20 F001          	lfsr	2,1
 13072  005010  501C               	movf	reverse@mR^0,w,c
 13073  005012  26D9               	addwf	fsr2l,f,c
 13074  005014  501D               	movf	(reverse@mR+1)^0,w,c
 13075  005016  22DA               	addwfc	fsr2h,f,c
 13076  005018  0E00               	movlw	0
 13077  00501A  6EDF               	movwf	indf2,c
 13078                           
 13079                           ;DC_motors.c: 115:     while((mL->power < 100) && (mR->power < 100)){
 13080  00501C  EF32  F028         	goto	l558
 13081  005020                     l5602:
 13082                           
 13083                           ;DC_motors.c: 116:         mL->power += 1;
 13084  005020  C01A  FFD9         	movff	reverse@mL,fsr2l
 13085  005024  C01B  FFDA         	movff	reverse@mL+1,fsr2h
 13086  005028  2ADF               	incf	indf2,f,c
 13087                           
 13088                           ;DC_motors.c: 117:         mR->power += 1;
 13089  00502A  C01C  FFD9         	movff	reverse@mR,fsr2l
 13090  00502E  C01D  FFDA         	movff	reverse@mR+1,fsr2h
 13091  005032  2ADF               	incf	indf2,f,c
 13092  005034                     
 13093                           ;DC_motors.c: 119:         DCmotors_setPWM(mL);
 13094  005034  C01A  F00F         	movff	reverse@mL,DCmotors_setPWM@m
 13095  005038  C01B  F010         	movff	reverse@mL+1,DCmotors_setPWM@m+1
 13096  00503C  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 13097  005040                     
 13098                           ;DC_motors.c: 120:         DCmotors_setPWM(mR);
 13099  005040  C01C  F00F         	movff	reverse@mR,DCmotors_setPWM@m
 13100  005044  C01D  F010         	movff	reverse@mR+1,DCmotors_setPWM@m+1
 13101  005048  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 13102  00504C                     
 13103                           ;DC_motors.c: 121:         _delay((unsigned long)((100)*(64000000/4000.0)));
 13104  00504C  0E09               	movlw	9
 13105  00504E  6E1F               	movwf	(??_reverse+1)^0,c
 13106  005050  0E1E               	movlw	30
 13107  005052  6E1E               	movwf	??_reverse^0,c
 13108  005054  0EE4               	movlw	228
 13109  005056                     u8227:
 13110  005056  2EE8               	decfsz	wreg,f,c
 13111  005058  D7FE               	bra	u8227
 13112  00505A  2E1E               	decfsz	??_reverse^0,f,c
 13113  00505C  D7FC               	bra	u8227
 13114  00505E  2E1F               	decfsz	(??_reverse+1)^0,f,c
 13115  005060  D7FA               	bra	u8227
 13116  005062  D000               	nop2	
 13117  005064                     l558:
 13118                           
 13119                           ;DC_motors.c: 115:     while((mL->power < 100) && (mR->power < 100)){
 13120  005064  C01A  FFD9         	movff	reverse@mL,fsr2l
 13121  005068  C01B  FFDA         	movff	reverse@mL+1,fsr2h
 13122  00506C  0E64               	movlw	100
 13123  00506E  60DF               	cpfslt	indf2,c
 13124  005070  EF3C  F028         	goto	u7001
 13125  005074  EF3E  F028         	goto	u7000
 13126  005078                     u7001:
 13127  005078  EF4A  F028         	goto	l563
 13128  00507C                     u7000:
 13129  00507C  C01C  FFD9         	movff	reverse@mR,fsr2l
 13130  005080  C01D  FFDA         	movff	reverse@mR+1,fsr2h
 13131  005084  0E63               	movlw	99
 13132  005086  64DF               	cpfsgt	indf2,c
 13133  005088  EF48  F028         	goto	u7011
 13134  00508C  EF4A  F028         	goto	u7010
 13135  005090                     u7011:
 13136  005090  EF10  F028         	goto	l5602
 13137  005094                     u7010:
 13138  005094                     l563:
 13139  005094  0012               	return		;funcret
 13140  005096                     __end_of_reverse:
 13141                           	callstack 0
 13142                           
 13143 ;; *************** function _forward *****************
 13144 ;; Defined at:
 13145 ;;		line 88 in file "DC_motors.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;  mL              2   25[COMRAM] PTR struct .
 13148 ;;		 -> main@motorL(9), 
 13149 ;;  mR              2   27[COMRAM] PTR struct .
 13150 ;;		 -> main@motorR(9), 
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;		None
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1    wreg      void 
 13155 ;; Registers used:
 13156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13166 ;;Total ram usage:        6 bytes
 13167 ;; Hardware stack levels used: 1
 13168 ;; Hardware stack levels required when called: 2
 13169 ;; This function calls:
 13170 ;;		_DCmotors_setPWM
 13171 ;; This function is called by:
 13172 ;;		_DCmotors_testing
 13173 ;;		_colourcards_readRGBC
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text63
 13178  005096                     __ptext63:
 13179                           	callstack 0
 13180  005096                     _forward:
 13181                           	callstack 27
 13182  005096                     
 13183                           ;DC_motors.c: 88: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 89: {;DC_motors.
      +                          c: 90:     mL->direction = 1;
 13184  005096  EE20 F001          	lfsr	2,1
 13185  00509A  501A               	movf	forward@mL^0,w,c
 13186  00509C  26D9               	addwf	fsr2l,f,c
 13187  00509E  501B               	movf	(forward@mL+1)^0,w,c
 13188  0050A0  22DA               	addwfc	fsr2h,f,c
 13189  0050A2  0E01               	movlw	1
 13190  0050A4  6EDF               	movwf	indf2,c
 13191                           
 13192                           ;DC_motors.c: 91:     mR->direction = 1;
 13193  0050A6  EE20 F001          	lfsr	2,1
 13194  0050AA  501C               	movf	forward@mR^0,w,c
 13195  0050AC  26D9               	addwf	fsr2l,f,c
 13196  0050AE  501D               	movf	(forward@mR+1)^0,w,c
 13197  0050B0  22DA               	addwfc	fsr2h,f,c
 13198  0050B2  0E01               	movlw	1
 13199  0050B4  6EDF               	movwf	indf2,c
 13200                           
 13201                           ;DC_motors.c: 94:     while((mL->power < 100) && (mR->power < 100)){
 13202  0050B6  EF7F  F028         	goto	l550
 13203  0050BA                     l5628:
 13204                           
 13205                           ;DC_motors.c: 95:         mL->power += 1;
 13206  0050BA  C01A  FFD9         	movff	forward@mL,fsr2l
 13207  0050BE  C01B  FFDA         	movff	forward@mL+1,fsr2h
 13208  0050C2  2ADF               	incf	indf2,f,c
 13209                           
 13210                           ;DC_motors.c: 96:         mR->power += 1;
 13211  0050C4  C01C  FFD9         	movff	forward@mR,fsr2l
 13212  0050C8  C01D  FFDA         	movff	forward@mR+1,fsr2h
 13213  0050CC  2ADF               	incf	indf2,f,c
 13214  0050CE                     
 13215                           ;DC_motors.c: 98:         DCmotors_setPWM(mL);
 13216  0050CE  C01A  F00F         	movff	forward@mL,DCmotors_setPWM@m
 13217  0050D2  C01B  F010         	movff	forward@mL+1,DCmotors_setPWM@m+1
 13218  0050D6  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 13219  0050DA                     
 13220                           ;DC_motors.c: 99:         DCmotors_setPWM(mR);
 13221  0050DA  C01C  F00F         	movff	forward@mR,DCmotors_setPWM@m
 13222  0050DE  C01D  F010         	movff	forward@mR+1,DCmotors_setPWM@m+1
 13223  0050E2  ECF9  F01D         	call	_DCmotors_setPWM	;wreg free
 13224  0050E6                     
 13225                           ;DC_motors.c: 100:         _delay((unsigned long)((100)*(64000000/4000.0)));
 13226  0050E6  0E09               	movlw	9
 13227  0050E8  6E1F               	movwf	(??_forward+1)^0,c
 13228  0050EA  0E1E               	movlw	30
 13229  0050EC  6E1E               	movwf	??_forward^0,c
 13230  0050EE  0EE4               	movlw	228
 13231  0050F0                     u8237:
 13232  0050F0  2EE8               	decfsz	wreg,f,c
 13233  0050F2  D7FE               	bra	u8237
 13234  0050F4  2E1E               	decfsz	??_forward^0,f,c
 13235  0050F6  D7FC               	bra	u8237
 13236  0050F8  2E1F               	decfsz	(??_forward+1)^0,f,c
 13237  0050FA  D7FA               	bra	u8237
 13238  0050FC  D000               	nop2	
 13239  0050FE                     l550:
 13240                           
 13241                           ;DC_motors.c: 94:     while((mL->power < 100) && (mR->power < 100)){
 13242  0050FE  C01A  FFD9         	movff	forward@mL,fsr2l
 13243  005102  C01B  FFDA         	movff	forward@mL+1,fsr2h
 13244  005106  0E64               	movlw	100
 13245  005108  60DF               	cpfslt	indf2,c
 13246  00510A  EF89  F028         	goto	u7041
 13247  00510E  EF8B  F028         	goto	u7040
 13248  005112                     u7041:
 13249  005112  EF97  F028         	goto	l555
 13250  005116                     u7040:
 13251  005116  C01C  FFD9         	movff	forward@mR,fsr2l
 13252  00511A  C01D  FFDA         	movff	forward@mR+1,fsr2h
 13253  00511E  0E63               	movlw	99
 13254  005120  64DF               	cpfsgt	indf2,c
 13255  005122  EF95  F028         	goto	u7051
 13256  005126  EF97  F028         	goto	u7050
 13257  00512A                     u7051:
 13258  00512A  EF5D  F028         	goto	l5628
 13259  00512E                     u7050:
 13260  00512E                     l555:
 13261  00512E  0012               	return		;funcret
 13262  005130                     __end_of_forward:
 13263                           	callstack 0
 13264                           
 13265 ;; *************** function _DCmotors_setPWM *****************
 13266 ;; Defined at:
 13267 ;;		line 51 in file "DC_motors.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;  m               2   14[COMRAM] PTR struct .
 13270 ;;		 -> main@motorR(9), main@motorL(9), 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;  PWMduty         2   23[COMRAM] int 
 13273 ;; Return value:  Size  Location     Type
 13274 ;;                  1    wreg      void 
 13275 ;; Registers used:
 13276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13277 ;; Tracked objects:
 13278 ;;		On entry : 0/0
 13279 ;;		On exit  : 0/0
 13280 ;;		Unchanged: 0/0
 13281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13284 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13285 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13286 ;;Total ram usage:       11 bytes
 13287 ;; Hardware stack levels used: 1
 13288 ;; Hardware stack levels required when called: 1
 13289 ;; This function calls:
 13290 ;;		___awdiv
 13291 ;;		___wmul
 13292 ;; This function is called by:
 13293 ;;		_forward
 13294 ;;		_reverse
 13295 ;;		_stop
 13296 ;;		_left
 13297 ;;		_right
 13298 ;; This function uses a non-reentrant model
 13299 ;;
 13300                           
 13301                           	psect	text64
 13302  003BF2                     __ptext64:
 13303                           	callstack 0
 13304  003BF2                     _DCmotors_setPWM:
 13305                           	callstack 26
 13306  003BF2                     
 13307                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
 13308  003BF2  EE20 F001          	lfsr	2,1
 13309  003BF6  500F               	movf	DCmotors_setPWM@m^0,w,c
 13310  003BF8  26D9               	addwf	fsr2l,f,c
 13311  003BFA  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13312  003BFC  22DA               	addwfc	fsr2h,f,c
 13313  003BFE  50DF               	movf	indf2,w,c
 13314  003C00  B4D8               	btfsc	status,2,c
 13315  003C02  EF05  F01E         	goto	u6601
 13316  003C06  EF07  F01E         	goto	u6600
 13317  003C0A                     u6601:
 13318  003C0A  EF38  F01E         	goto	l5390
 13319  003C0E                     u6600:
 13320  003C0E                     
 13321                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
 13322  003C0E  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 13323  003C12  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 13324  003C16  50DF               	movf	indf2,w,c
 13325  003C18  6E11               	movwf	??_DCmotors_setPWM^0,c
 13326  003C1A  5011               	movf	??_DCmotors_setPWM^0,w,c
 13327  003C1C  6E01               	movwf	___wmul@multiplier^0,c
 13328  003C1E  6A02               	clrf	(___wmul@multiplier+1)^0,c
 13329  003C20  EE20 F007          	lfsr	2,7
 13330  003C24  500F               	movf	DCmotors_setPWM@m^0,w,c
 13331  003C26  26D9               	addwf	fsr2l,f,c
 13332  003C28  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13333  003C2A  22DA               	addwfc	fsr2h,f,c
 13334  003C2C  CFDE F003          	movff	postinc2,___wmul@multiplicand
 13335  003C30  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 13336  003C34  ECA5  F02C         	call	___wmul	;wreg free
 13337  003C38  C001  F007         	movff	?___wmul,___awdiv@dividend
 13338  003C3C  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 13339  003C40  0E00               	movlw	0
 13340  003C42  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 13341  003C44  0E64               	movlw	100
 13342  003C46  6E09               	movwf	___awdiv@divisor^0,c
 13343  003C48  ECEF  F026         	call	___awdiv	;wreg free
 13344  003C4C  EE20 F007          	lfsr	2,7
 13345  003C50  500F               	movf	DCmotors_setPWM@m^0,w,c
 13346  003C52  26D9               	addwf	fsr2l,f,c
 13347  003C54  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13348  003C56  22DA               	addwfc	fsr2h,f,c
 13349  003C58  CFDE F012          	movff	postinc2,??_DCmotors_setPWM+1
 13350  003C5C  CFDD F013          	movff	postdec2,??_DCmotors_setPWM+2
 13351  003C60  5007               	movf	?___awdiv^0,w,c
 13352  003C62  5C12               	subwf	(??_DCmotors_setPWM+1)^0,w,c
 13353  003C64  6E18               	movwf	DCmotors_setPWM@PWMduty^0,c
 13354  003C66  5008               	movf	(?___awdiv+1)^0,w,c
 13355  003C68  5813               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
 13356  003C6A  6E19               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
 13357                           
 13358                           ;DC_motors.c: 57:  } else {
 13359  003C6C  EF5B  F01E         	goto	l5392
 13360  003C70                     l5390:
 13361                           
 13362                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 13363  003C70  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 13364  003C74  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 13365  003C78  50DF               	movf	indf2,w,c
 13366  003C7A  6E11               	movwf	??_DCmotors_setPWM^0,c
 13367  003C7C  5011               	movf	??_DCmotors_setPWM^0,w,c
 13368  003C7E  6E01               	movwf	___wmul@multiplier^0,c
 13369  003C80  6A02               	clrf	(___wmul@multiplier+1)^0,c
 13370  003C82  EE20 F007          	lfsr	2,7
 13371  003C86  500F               	movf	DCmotors_setPWM@m^0,w,c
 13372  003C88  26D9               	addwf	fsr2l,f,c
 13373  003C8A  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13374  003C8C  22DA               	addwfc	fsr2h,f,c
 13375  003C8E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 13376  003C92  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 13377  003C96  ECA5  F02C         	call	___wmul	;wreg free
 13378  003C9A  C001  F007         	movff	?___wmul,___awdiv@dividend
 13379  003C9E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 13380  003CA2  0E00               	movlw	0
 13381  003CA4  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 13382  003CA6  0E64               	movlw	100
 13383  003CA8  6E09               	movwf	___awdiv@divisor^0,c
 13384  003CAA  ECEF  F026         	call	___awdiv	;wreg free
 13385  003CAE  C007  F018         	movff	?___awdiv,DCmotors_setPWM@PWMduty
 13386  003CB2  C008  F019         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
 13387  003CB6                     l5392:
 13388                           
 13389                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
 13390  003CB6  EE20 F002          	lfsr	2,2
 13391  003CBA  500F               	movf	DCmotors_setPWM@m^0,w,c
 13392  003CBC  26D9               	addwf	fsr2l,f,c
 13393  003CBE  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13394  003CC0  22DA               	addwfc	fsr2h,f,c
 13395  003CC2  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 13396  003CC6  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 13397  003CCA  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 13398  003CCE  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 13399  003CD2  C018  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
 13400  003CD6                     
 13401                           ;DC_motors.c: 63:  if (m->direction){
 13402  003CD6  EE20 F001          	lfsr	2,1
 13403  003CDA  500F               	movf	DCmotors_setPWM@m^0,w,c
 13404  003CDC  26D9               	addwf	fsr2l,f,c
 13405  003CDE  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13406  003CE0  22DA               	addwfc	fsr2h,f,c
 13407  003CE2  50DF               	movf	indf2,w,c
 13408  003CE4  B4D8               	btfsc	status,2,c
 13409  003CE6  EF77  F01E         	goto	u6611
 13410  003CEA  EF79  F01E         	goto	u6610
 13411  003CEE                     u6611:
 13412  003CEE  EFAE  F01E         	goto	l5398
 13413  003CF2                     u6610:
 13414  003CF2                     
 13415                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
 13416  003CF2  EE20 F004          	lfsr	2,4
 13417  003CF6  500F               	movf	DCmotors_setPWM@m^0,w,c
 13418  003CF8  26D9               	addwf	fsr2l,f,c
 13419  003CFA  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13420  003CFC  22DA               	addwfc	fsr2h,f,c
 13421  003CFE  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 13422  003D02  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 13423  003D06  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 13424  003D0A  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 13425  003D0E  EE10 F004          	lfsr	1,4
 13426  003D12  500F               	movf	DCmotors_setPWM@m^0,w,c
 13427  003D14  26E1               	addwf	fsr1l,f,c
 13428  003D16  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13429  003D18  22E2               	addwfc	fsr1h,f,c
 13430  003D1A  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
 13431  003D1E  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
 13432  003D22  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 13433  003D26  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 13434  003D2A  50E7               	movf	indf1,w,c
 13435  003D2C  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
 13436  003D2E  EE10 F006          	lfsr	1,6
 13437  003D32  500F               	movf	DCmotors_setPWM@m^0,w,c
 13438  003D34  26E1               	addwf	fsr1l,f,c
 13439  003D36  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13440  003D38  22E2               	addwfc	fsr1h,f,c
 13441  003D3A  50E7               	movf	indf1,w,c
 13442  003D3C  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
 13443  003D3E  0E01               	movlw	1
 13444  003D40  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
 13445  003D42  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
 13446  003D44  EFA6  F01E         	goto	u6624
 13447  003D48                     u6625:
 13448  003D48  90D8               	bcf	status,0,c
 13449  003D4A  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 13450  003D4C                     u6624:
 13451  003D4C  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 13452  003D4E  EFA4  F01E         	goto	u6625
 13453  003D52  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
 13454  003D54  1015               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
 13455  003D56  6EDF               	movwf	indf2,c
 13456                           
 13457                           ;DC_motors.c: 65:  } else {
 13458  003D58  EFE2  F01E         	goto	l542
 13459  003D5C                     l5398:
 13460                           
 13461                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
 13462  003D5C  EE20 F004          	lfsr	2,4
 13463  003D60  500F               	movf	DCmotors_setPWM@m^0,w,c
 13464  003D62  26D9               	addwf	fsr2l,f,c
 13465  003D64  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13466  003D66  22DA               	addwfc	fsr2h,f,c
 13467  003D68  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 13468  003D6C  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 13469  003D70  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 13470  003D74  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 13471  003D78  EE10 F004          	lfsr	1,4
 13472  003D7C  500F               	movf	DCmotors_setPWM@m^0,w,c
 13473  003D7E  26E1               	addwf	fsr1l,f,c
 13474  003D80  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13475  003D82  22E2               	addwfc	fsr1h,f,c
 13476  003D84  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
 13477  003D88  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
 13478  003D8C  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 13479  003D90  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 13480  003D94  50E7               	movf	indf1,w,c
 13481  003D96  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
 13482  003D98  EE10 F006          	lfsr	1,6
 13483  003D9C  500F               	movf	DCmotors_setPWM@m^0,w,c
 13484  003D9E  26E1               	addwf	fsr1l,f,c
 13485  003DA0  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13486  003DA2  22E2               	addwfc	fsr1h,f,c
 13487  003DA4  50E7               	movf	indf1,w,c
 13488  003DA6  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
 13489  003DA8  0E01               	movlw	1
 13490  003DAA  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
 13491  003DAC  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
 13492  003DAE  EFDB  F01E         	goto	u6634
 13493  003DB2                     u6635:
 13494  003DB2  90D8               	bcf	status,0,c
 13495  003DB4  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 13496  003DB6                     u6634:
 13497  003DB6  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 13498  003DB8  EFD9  F01E         	goto	u6635
 13499  003DBC  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
 13500  003DBE  0AFF               	xorlw	255
 13501  003DC0  1415               	andwf	(??_DCmotors_setPWM+4)^0,w,c
 13502  003DC2  6EDF               	movwf	indf2,c
 13503  003DC4                     l542:
 13504  003DC4  0012               	return		;funcret
 13505  003DC6                     __end_of_DCmotors_setPWM:
 13506                           	callstack 0
 13507                           
 13508 ;; *************** function ___wmul *****************
 13509 ;; Defined at:
 13510 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;  multiplier      2    0[COMRAM] unsigned int 
 13513 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13514 ;; Auto vars:     Size  Location     Type
 13515 ;;  product         2    4[COMRAM] unsigned int 
 13516 ;; Return value:  Size  Location     Type
 13517 ;;                  2    0[COMRAM] unsigned int 
 13518 ;; Registers used:
 13519 ;;		wreg, status,2, status,0, prodl, prodh
 13520 ;; Tracked objects:
 13521 ;;		On entry : 0/0
 13522 ;;		On exit  : 0/0
 13523 ;;		Unchanged: 0/0
 13524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13528 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13529 ;;Total ram usage:        6 bytes
 13530 ;; Hardware stack levels used: 1
 13531 ;; This function calls:
 13532 ;;		Nothing
 13533 ;; This function is called by:
 13534 ;;		_DCmotors_setPWM
 13535 ;;		_atoi
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text65
 13540  00594A                     __ptext65:
 13541                           	callstack 0
 13542  00594A                     ___wmul:
 13543                           	callstack 25
 13544  00594A  5001               	movf	___wmul@multiplier^0,w,c
 13545  00594C  0203               	mulwf	___wmul@multiplicand^0,c
 13546  00594E  CFF3 F005          	movff	prodl,___wmul@product
 13547  005952  CFF4 F006          	movff	prodh,___wmul@product+1
 13548  005956  5001               	movf	___wmul@multiplier^0,w,c
 13549  005958  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13550  00595A  50F3               	movf	243,w,c
 13551  00595C  2606               	addwf	(___wmul@product+1)^0,f,c
 13552  00595E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13553  005960  0203               	mulwf	___wmul@multiplicand^0,c
 13554  005962  50F3               	movf	243,w,c
 13555  005964  2606               	addwf	(___wmul@product+1)^0,f,c
 13556  005966  C005  F001         	movff	___wmul@product,?___wmul
 13557  00596A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13558  00596E  0012               	return		;funcret
 13559  005970                     __end_of___wmul:
 13560                           	callstack 0
 13561                           
 13562 ;; *************** function ___awdiv *****************
 13563 ;; Defined at:
 13564 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;  dividend        2    6[COMRAM] int 
 13567 ;;  divisor         2    8[COMRAM] int 
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;  quotient        2   12[COMRAM] int 
 13570 ;;  sign            1   11[COMRAM] unsigned char 
 13571 ;;  counter         1   10[COMRAM] unsigned char 
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  2    6[COMRAM] int 
 13574 ;; Registers used:
 13575 ;;		wreg, status,2, status,0
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/0
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13582 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13584 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13585 ;;Total ram usage:        8 bytes
 13586 ;; Hardware stack levels used: 1
 13587 ;; This function calls:
 13588 ;;		Nothing
 13589 ;; This function is called by:
 13590 ;;		_DCmotors_setPWM
 13591 ;;		_efgtoa
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595                           	psect	text66
 13596  004DDE                     __ptext66:
 13597                           	callstack 0
 13598  004DDE                     ___awdiv:
 13599                           	callstack 25
 13600  004DDE  0E00               	movlw	0
 13601  004DE0  6E0C               	movwf	___awdiv@sign^0,c
 13602  004DE2  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 13603  004DE4  EFF8  F026         	goto	u5070
 13604  004DE8  EFF6  F026         	goto	u5071
 13605  004DEC                     u5071:
 13606  004DEC  EFFE  F026         	goto	l4610
 13607  004DF0                     u5070:
 13608  004DF0  6C09               	negf	___awdiv@divisor^0,c
 13609  004DF2  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 13610  004DF4  B0D8               	btfsc	status,0,c
 13611  004DF6  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 13612  004DF8  0E01               	movlw	1
 13613  004DFA  6E0C               	movwf	___awdiv@sign^0,c
 13614  004DFC                     l4610:
 13615  004DFC  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 13616  004DFE  EF05  F027         	goto	u5080
 13617  004E02  EF03  F027         	goto	u5081
 13618  004E06                     u5081:
 13619  004E06  EF0B  F027         	goto	l4616
 13620  004E0A                     u5080:
 13621  004E0A  6C07               	negf	___awdiv@dividend^0,c
 13622  004E0C  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 13623  004E0E  B0D8               	btfsc	status,0,c
 13624  004E10  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 13625  004E12  0E01               	movlw	1
 13626  004E14  1A0C               	xorwf	___awdiv@sign^0,f,c
 13627  004E16                     l4616:
 13628  004E16  0E00               	movlw	0
 13629  004E18  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 13630  004E1A  0E00               	movlw	0
 13631  004E1C  6E0D               	movwf	___awdiv@quotient^0,c
 13632  004E1E  5009               	movf	___awdiv@divisor^0,w,c
 13633  004E20  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 13634  004E22  B4D8               	btfsc	status,2,c
 13635  004E24  EF16  F027         	goto	u5091
 13636  004E28  EF18  F027         	goto	u5090
 13637  004E2C                     u5091:
 13638  004E2C  EF40  F027         	goto	l4638
 13639  004E30                     u5090:
 13640  004E30  0E01               	movlw	1
 13641  004E32  6E0B               	movwf	___awdiv@counter^0,c
 13642  004E34  EF20  F027         	goto	l4624
 13643  004E38                     l4622:
 13644  004E38  90D8               	bcf	status,0,c
 13645  004E3A  3609               	rlcf	___awdiv@divisor^0,f,c
 13646  004E3C  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 13647  004E3E  2A0B               	incf	___awdiv@counter^0,f,c
 13648  004E40                     l4624:
 13649  004E40  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 13650  004E42  EF25  F027         	goto	u5101
 13651  004E46  EF27  F027         	goto	u5100
 13652  004E4A                     u5101:
 13653  004E4A  EF1C  F027         	goto	l4622
 13654  004E4E                     u5100:
 13655  004E4E                     l4626:
 13656  004E4E  90D8               	bcf	status,0,c
 13657  004E50  360D               	rlcf	___awdiv@quotient^0,f,c
 13658  004E52  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 13659  004E54  5009               	movf	___awdiv@divisor^0,w,c
 13660  004E56  5C07               	subwf	___awdiv@dividend^0,w,c
 13661  004E58  500A               	movf	(___awdiv@divisor+1)^0,w,c
 13662  004E5A  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 13663  004E5C  A0D8               	btfss	status,0,c
 13664  004E5E  EF33  F027         	goto	u5111
 13665  004E62  EF35  F027         	goto	u5110
 13666  004E66                     u5111:
 13667  004E66  EF3A  F027         	goto	l4634
 13668  004E6A                     u5110:
 13669  004E6A  5009               	movf	___awdiv@divisor^0,w,c
 13670  004E6C  5E07               	subwf	___awdiv@dividend^0,f,c
 13671  004E6E  500A               	movf	(___awdiv@divisor+1)^0,w,c
 13672  004E70  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 13673  004E72  800D               	bsf	___awdiv@quotient^0,0,c
 13674  004E74                     l4634:
 13675  004E74  90D8               	bcf	status,0,c
 13676  004E76  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 13677  004E78  3209               	rrcf	___awdiv@divisor^0,f,c
 13678  004E7A  2E0B               	decfsz	___awdiv@counter^0,f,c
 13679  004E7C  EF27  F027         	goto	l4626
 13680  004E80                     l4638:
 13681  004E80  500C               	movf	___awdiv@sign^0,w,c
 13682  004E82  B4D8               	btfsc	status,2,c
 13683  004E84  EF46  F027         	goto	u5121
 13684  004E88  EF48  F027         	goto	u5120
 13685  004E8C                     u5121:
 13686  004E8C  EF4C  F027         	goto	l4642
 13687  004E90                     u5120:
 13688  004E90  6C0D               	negf	___awdiv@quotient^0,c
 13689  004E92  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 13690  004E94  B0D8               	btfsc	status,0,c
 13691  004E96  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 13692  004E98                     l4642:
 13693  004E98  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 13694  004E9C  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 13695  004EA0  0012               	return		;funcret
 13696  004EA2                     __end_of___awdiv:
 13697                           	callstack 0
 13698                           
 13699 ;; *************** function _DCmotors_init *****************
 13700 ;; Defined at:
 13701 ;;		line 10 in file "DC_motors.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  PWMperiod       1    wreg     unsigned char 
 13704 ;; Auto vars:     Size  Location     Type
 13705 ;;  PWMperiod       1    0[COMRAM] unsigned char 
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  1    wreg      void 
 13708 ;; Registers used:
 13709 ;;		wreg, status,2, cstack
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13719 ;;Total ram usage:        1 bytes
 13720 ;; Hardware stack levels used: 1
 13721 ;; Hardware stack levels required when called: 1
 13722 ;; This function calls:
 13723 ;;		_buggyLEDs_init
 13724 ;;		_clicker2LEDs_init
 13725 ;;		_clicker2buttons_init
 13726 ;; This function is called by:
 13727 ;;		_main
 13728 ;; This function uses a non-reentrant model
 13729 ;;
 13730                           
 13731                           	psect	text67
 13732  00561E                     __ptext67:
 13733                           	callstack 0
 13734  00561E                     _DCmotors_init:
 13735                           	callstack 29
 13736                           
 13737                           ;incstack = 0
 13738                           ;DCmotors_init@PWMperiod stored from wreg
 13739  00561E  6E01               	movwf	DCmotors_init@PWMperiod^0,c
 13740  005620                     
 13741                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
 13742  005620  50BD               	movf	189,w,c	;volatile
 13743  005622  0B8F               	andlw	-113
 13744  005624  0940               	iorlw	64
 13745  005626  6EBD               	movwf	189,c	;volatile
 13746                           
 13747                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
 13748  005628  0EE0               	movlw	-32
 13749  00562A  16BE               	andwf	190,f,c	;volatile
 13750                           
 13751                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
 13752  00562C  50BF               	movf	191,w,c	;volatile
 13753  00562E  0BF0               	andlw	-16
 13754  005630  0901               	iorlw	1
 13755  005632  6EBF               	movwf	191,c	;volatile
 13756  005634                     
 13757                           ;DC_motors.c: 18:     T2PR=PWMperiod;
 13758  005634  C001  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 13759  005638                     
 13760                           ;DC_motors.c: 19:     T2CONbits.ON=1;
 13761  005638  8EBD               	bsf	189,7,c	;volatile
 13762  00563A                     
 13763                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
 13764  00563A  9485               	bcf	133,2,c	;volatile
 13765  00563C                     
 13766                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
 13767  00563C  9885               	bcf	133,4,c	;volatile
 13768  00563E                     
 13769                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
 13770  00563E  9E83               	bcf	131,7,c	;volatile
 13771  005640                     
 13772                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
 13773  005640  9C87               	bcf	135,6,c	;volatile
 13774  005642                     
 13775                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
 13776  005642  947D               	bcf	125,2,c	;volatile
 13777  005644                     
 13778                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
 13779  005644  987D               	bcf	125,4,c	;volatile
 13780  005646                     
 13781                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
 13782  005646  9E7B               	bcf	123,7,c	;volatile
 13783  005648                     
 13784                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
 13785  005648  9C7F               	bcf	127,6,c	;volatile
 13786                           
 13787                           ;DC_motors.c: 32:     PWM6DCH=0;
 13788  00564A  0E00               	movlw	0
 13789  00564C  6EA3               	movwf	163,c	;volatile
 13790                           
 13791                           ;DC_motors.c: 33:     PWM7DCH=0;
 13792  00564E  0E00               	movlw	0
 13793  005650  6EA0               	movwf	160,c	;volatile
 13794  005652                     
 13795                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
 13796  005652  8EA4               	bsf	164,7,c	;volatile
 13797  005654                     
 13798                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
 13799  005654  8EA1               	bsf	161,7,c	;volatile
 13800                           
 13801                           ;DC_motors.c: 38:     RE2PPS=0x0A;
 13802  005656  0E0A               	movlw	10
 13803  005658  010E               	movlb	14	; () banked
 13804  00565A  6F74               	movwf	116,b	;volatile
 13805                           
 13806                           ;DC_motors.c: 39:     RC7PPS=0x0B;
 13807  00565C  0E0B               	movlw	11
 13808  00565E  6F69               	movwf	105,b	;volatile
 13809  005660                     
 13810                           ; BSR set to: 14
 13811                           ;DC_motors.c: 42:     clicker2buttons_init();
 13812  005660  EC36  F02D         	call	_clicker2buttons_init	;wreg free
 13813  005664                     
 13814                           ;DC_motors.c: 43:     clicker2LEDs_init();
 13815  005664  EC51  F02D         	call	_clicker2LEDs_init	;wreg free
 13816  005668                     
 13817                           ;DC_motors.c: 44:     buggyLEDs_init();
 13818  005668  EC1E  F02D         	call	_buggyLEDs_init	;wreg free
 13819  00566C  0012               	return		;funcret
 13820  00566E                     __end_of_DCmotors_init:
 13821                           	callstack 0
 13822                           
 13823 ;; *************** function _clicker2buttons_init *****************
 13824 ;; Defined at:
 13825 ;;		line 7 in file "buttons_n_LEDs.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;		None
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;		None
 13830 ;; Return value:  Size  Location     Type
 13831 ;;                  1    wreg      void 
 13832 ;; Registers used:
 13833 ;;		None
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13843 ;;Total ram usage:        0 bytes
 13844 ;; Hardware stack levels used: 1
 13845 ;; This function calls:
 13846 ;;		Nothing
 13847 ;; This function is called by:
 13848 ;;		_DCmotors_init
 13849 ;; This function uses a non-reentrant model
 13850 ;;
 13851                           
 13852                           	psect	text68
 13853  005A6C                     __ptext68:
 13854                           	callstack 0
 13855  005A6C                     _clicker2buttons_init:
 13856                           	callstack 29
 13857  005A6C                     
 13858                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
 13859  005A6C  8486               	bsf	134,2,c	;volatile
 13860                           
 13861                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
 13862  005A6E  8686               	bsf	134,3,c	;volatile
 13863                           
 13864                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
 13865  005A70  010E               	movlb	14	; () banked
 13866  005A72  95B4               	bcf	180,2,b	;volatile
 13867                           
 13868                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
 13869  005A74  97B4               	bcf	180,3,b	;volatile
 13870  005A76                     
 13871                           ; BSR set to: 14
 13872  005A76  0012               	return		;funcret
 13873  005A78                     __end_of_clicker2buttons_init:
 13874                           	callstack 0
 13875                           
 13876 ;; *************** function _clicker2LEDs_init *****************
 13877 ;; Defined at:
 13878 ;;		line 19 in file "buttons_n_LEDs.c"
 13879 ;; Parameters:    Size  Location     Type
 13880 ;;		None
 13881 ;; Auto vars:     Size  Location     Type
 13882 ;;		None
 13883 ;; Return value:  Size  Location     Type
 13884 ;;                  1    wreg      void 
 13885 ;; Registers used:
 13886 ;;		None
 13887 ;; Tracked objects:
 13888 ;;		On entry : 0/0
 13889 ;;		On exit  : 0/0
 13890 ;;		Unchanged: 0/0
 13891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13896 ;;Total ram usage:        0 bytes
 13897 ;; Hardware stack levels used: 1
 13898 ;; This function calls:
 13899 ;;		Nothing
 13900 ;; This function is called by:
 13901 ;;		_DCmotors_init
 13902 ;; This function uses a non-reentrant model
 13903 ;;
 13904                           
 13905                           	psect	text69
 13906  005AA2                     __ptext69:
 13907                           	callstack 0
 13908  005AA2                     _clicker2LEDs_init:
 13909                           	callstack 29
 13910  005AA2                     
 13911                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
 13912  005AA2  9E84               	bcf	132,7,c	;volatile
 13913                           
 13914                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
 13915  005AA4  9688               	bcf	136,3,c	;volatile
 13916                           
 13917                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
 13918  005AA6  9E7C               	bcf	124,7,c	;volatile
 13919                           
 13920                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
 13921  005AA8  9680               	bcf	128,3,c	;volatile
 13922  005AAA  0012               	return		;funcret
 13923  005AAC                     __end_of_clicker2LEDs_init:
 13924                           	callstack 0
 13925                           
 13926 ;; *************** function _buggyLEDs_init *****************
 13927 ;; Defined at:
 13928 ;;		line 31 in file "buttons_n_LEDs.c"
 13929 ;; Parameters:    Size  Location     Type
 13930 ;;		None
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;		None
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  1    wreg      void 
 13935 ;; Registers used:
 13936 ;;		None
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13946 ;;Total ram usage:        0 bytes
 13947 ;; Hardware stack levels used: 1
 13948 ;; This function calls:
 13949 ;;		Nothing
 13950 ;; This function is called by:
 13951 ;;		_DCmotors_init
 13952 ;; This function uses a non-reentrant model
 13953 ;;
 13954                           
 13955                           	psect	text70
 13956  005A3C                     __ptext70:
 13957                           	callstack 0
 13958  005A3C                     _buggyLEDs_init:
 13959                           	callstack 29
 13960  005A3C                     
 13961                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
 13962  005A3C  9288               	bcf	136,1,c	;volatile
 13963                           
 13964                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
 13965  005A3E  9684               	bcf	132,3,c	;volatile
 13966                           
 13967                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
 13968  005A40  9884               	bcf	132,4,c	;volatile
 13969                           
 13970                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
 13971  005A42  9086               	bcf	134,0,c	;volatile
 13972                           
 13973                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
 13974  005A44  9088               	bcf	136,0,c	;volatile
 13975                           
 13976                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
 13977  005A46  9280               	bcf	128,1,c	;volatile
 13978                           
 13979                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
 13980  005A48  967C               	bcf	124,3,c	;volatile
 13981                           
 13982                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
 13983  005A4A  987C               	bcf	124,4,c	;volatile
 13984                           
 13985                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
 13986  005A4C  907E               	bcf	126,0,c	;volatile
 13987                           
 13988                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
 13989  005A4E  9080               	bcf	128,0,c	;volatile
 13990  005A50  0012               	return		;funcret
 13991  005A52                     __end_of_buggyLEDs_init:
 13992                           	callstack 0
 13993                           
 13994 ;; *************** function _ADC_init *****************
 13995 ;; Defined at:
 13996 ;;		line 8 in file "ADC.c"
 13997 ;; Parameters:    Size  Location     Type
 13998 ;;		None
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;		None
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  1    wreg      void 
 14003 ;; Registers used:
 14004 ;;		wreg, status,2
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14014 ;;Total ram usage:        0 bytes
 14015 ;; Hardware stack levels used: 1
 14016 ;; This function calls:
 14017 ;;		Nothing
 14018 ;; This function is called by:
 14019 ;;		_main
 14020 ;; This function uses a non-reentrant model
 14021 ;;
 14022                           
 14023                           	psect	text71
 14024  0059F2                     __ptext71:
 14025                           	callstack 0
 14026  0059F2                     _ADC_init:
 14027                           	callstack 30
 14028  0059F2                     
 14029                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 14030  0059F2  8C86               	bsf	134,6,c	;volatile
 14031                           
 14032                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 14033  0059F4  010E               	movlb	14	; () banked
 14034  0059F6  8DB4               	bsf	180,6,b	;volatile
 14035                           
 14036                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 14037  0059F8  010F               	movlb	15	; () banked
 14038  0059FA  9958               	bcf	88,4,b	;volatile
 14039  0059FC                     
 14040                           ; BSR set to: 15
 14041                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 14042  0059FC  0EFC               	movlw	-4
 14043  0059FE  1758               	andwf	88,f,b	;volatile
 14044                           
 14045                           ;ADC.c: 16:     ADPCH=0b101110;
 14046  005A00  0E2E               	movlw	46
 14047  005A02  6F5F               	movwf	95,b	;volatile
 14048  005A04                     
 14049                           ; BSR set to: 15
 14050                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 14051  005A04  9460               	bcf	96,2,c	;volatile
 14052  005A06                     
 14053                           ; BSR set to: 15
 14054                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 14055  005A06  8860               	bsf	96,4,c	;volatile
 14056  005A08                     
 14057                           ; BSR set to: 15
 14058                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 14059  005A08  8E60               	bsf	96,7,c	;volatile
 14060  005A0A                     
 14061                           ; BSR set to: 15
 14062  005A0A  0012               	return		;funcret
 14063  005A0C                     __end_of_ADC_init:
 14064                           	callstack 0
 14065                           
 14066                           	psect	rparam
 14067  0000                     
 14068                           	psect	idloc
 14069                           
 14070                           ;Config register IDLOC0 @ 0x200000
 14071                           ;	unspecified, using default values
 14072  200000                     	org	2097152
 14073  200000  0FFF               	dw	4095
 14074                           
 14075                           ;Config register IDLOC1 @ 0x200002
 14076                           ;	unspecified, using default values
 14077  200002                     	org	2097154
 14078  200002  0FFF               	dw	4095
 14079                           
 14080                           ;Config register IDLOC2 @ 0x200004
 14081                           ;	unspecified, using default values
 14082  200004                     	org	2097156
 14083  200004  0FFF               	dw	4095
 14084                           
 14085                           ;Config register IDLOC3 @ 0x200006
 14086                           ;	unspecified, using default values
 14087  200006                     	org	2097158
 14088  200006  0FFF               	dw	4095
 14089                           
 14090                           ;Config register IDLOC4 @ 0x200008
 14091                           ;	unspecified, using default values
 14092  200008                     	org	2097160
 14093  200008  0FFF               	dw	4095
 14094                           
 14095                           ;Config register IDLOC5 @ 0x20000A
 14096                           ;	unspecified, using default values
 14097  20000A                     	org	2097162
 14098  20000A  0FFF               	dw	4095
 14099                           
 14100                           ;Config register IDLOC6 @ 0x20000C
 14101                           ;	unspecified, using default values
 14102  20000C                     	org	2097164
 14103  20000C  0FFF               	dw	4095
 14104                           
 14105                           ;Config register IDLOC7 @ 0x20000E
 14106                           ;	unspecified, using default values
 14107  20000E                     	org	2097166
 14108  20000E  0FFF               	dw	4095
 14109                           
 14110                           	psect	config
 14111                           
 14112                           ;Config register CONFIG1L @ 0x300000
 14113                           ;	External Oscillator mode Selection bits
 14114                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14115                           ;	Power-up default value for COSC bits
 14116                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14117  300000                     	org	3145728
 14118  300000  AA                 	db	170
 14119                           
 14120                           ;Config register CONFIG1H @ 0x300001
 14121                           ;	unspecified, using default values
 14122                           ;	Clock Out Enable bit
 14123                           ;	CLKOUTEN = 0x1, unprogrammed default
 14124                           ;	Clock Switch Enable bit
 14125                           ;	CSWEN = 0x1, unprogrammed default
 14126                           ;	Fail-Safe Clock Monitor Enable bit
 14127                           ;	FCMEN = 0x1, unprogrammed default
 14128  300001                     	org	3145729
 14129  300001  FF                 	db	255
 14130                           
 14131                           ;Config register CONFIG2L @ 0x300002
 14132                           ;	unspecified, using default values
 14133                           ;	Master Clear Enable bit
 14134                           ;	MCLRE = 0x1, unprogrammed default
 14135                           ;	Power-up Timer Enable bit
 14136                           ;	PWRTE = 0x1, unprogrammed default
 14137                           ;	Low-power BOR enable bit
 14138                           ;	LPBOREN = 0x1, unprogrammed default
 14139                           ;	Brown-out Reset Enable bits
 14140                           ;	BOREN = 0x3, unprogrammed default
 14141  300002                     	org	3145730
 14142  300002  FF                 	db	255
 14143                           
 14144                           ;Config register CONFIG2H @ 0x300003
 14145                           ;	unspecified, using default values
 14146                           ;	Brown Out Reset Voltage selection bits
 14147                           ;	BORV = 0x3, unprogrammed default
 14148                           ;	ZCD Disable bit
 14149                           ;	ZCD = 0x1, unprogrammed default
 14150                           ;	PPSLOCK bit One-Way Set Enable bit
 14151                           ;	PPS1WAY = 0x1, unprogrammed default
 14152                           ;	Stack Full/Underflow Reset Enable bit
 14153                           ;	STVREN = 0x1, unprogrammed default
 14154                           ;	Debugger Enable bit
 14155                           ;	DEBUG = 0x1, unprogrammed default
 14156                           ;	Extended Instruction Set Enable bit
 14157                           ;	XINST = 0x1, unprogrammed default
 14158  300003                     	org	3145731
 14159  300003  FF                 	db	255
 14160                           
 14161                           ;Config register CONFIG3L @ 0x300004
 14162                           ;	WDT Period Select bits
 14163                           ;	WDTCPS = 0x1F, unprogrammed default
 14164                           ;	WDT operating mode
 14165                           ;	WDTE = OFF, WDT Disabled
 14166  300004                     	org	3145732
 14167  300004  9F                 	db	159
 14168                           
 14169                           ;Config register CONFIG3H @ 0x300005
 14170                           ;	unspecified, using default values
 14171                           ;	WDT Window Select bits
 14172                           ;	WDTCWS = 0x7, unprogrammed default
 14173                           ;	WDT input clock selector
 14174                           ;	WDTCCS = 0x7, unprogrammed default
 14175  300005                     	org	3145733
 14176  300005  FF                 	db	255
 14177                           
 14178                           ;Config register CONFIG4L @ 0x300006
 14179                           ;	unspecified, using default values
 14180                           ;	Write Protection Block 0
 14181                           ;	WRT0 = 0x1, unprogrammed default
 14182                           ;	Write Protection Block 1
 14183                           ;	WRT1 = 0x1, unprogrammed default
 14184                           ;	Write Protection Block 2
 14185                           ;	WRT2 = 0x1, unprogrammed default
 14186                           ;	Write Protection Block 3
 14187                           ;	WRT3 = 0x1, unprogrammed default
 14188                           ;	Write Protection Block 3
 14189                           ;	WRT4 = 0x1, unprogrammed default
 14190                           ;	Write Protection Block 3
 14191                           ;	WRT5 = 0x1, unprogrammed default
 14192                           ;	Write Protection Block 3
 14193                           ;	WRT6 = 0x1, unprogrammed default
 14194                           ;	Write Protection Block 3
 14195                           ;	WRT7 = 0x1, unprogrammed default
 14196  300006                     	org	3145734
 14197  300006  FF                 	db	255
 14198                           
 14199                           ;Config register CONFIG4H @ 0x300007
 14200                           ;	unspecified, using default values
 14201                           ;	Configuration Register Write Protection bit
 14202                           ;	WRTC = 0x1, unprogrammed default
 14203                           ;	Boot Block Write Protection bit
 14204                           ;	WRTB = 0x1, unprogrammed default
 14205                           ;	Data EEPROM Write Protection bit
 14206                           ;	WRTD = 0x1, unprogrammed default
 14207                           ;	Scanner Enable bit
 14208                           ;	SCANE = 0x1, unprogrammed default
 14209                           ;	Low Voltage Programming Enable bit
 14210                           ;	LVP = 0x1, unprogrammed default
 14211  300007                     	org	3145735
 14212  300007  FF                 	db	255
 14213                           
 14214                           ;Config register CONFIG5L @ 0x300008
 14215                           ;	unspecified, using default values
 14216                           ;	UserNVM Program Memory Code Protection bit
 14217                           ;	CP = 0x1, unprogrammed default
 14218                           ;	DataNVM Memory Code Protection bit
 14219                           ;	CPD = 0x1, unprogrammed default
 14220  300008                     	org	3145736
 14221  300008  FF                 	db	255
 14222                           
 14223                           ;Config register CONFIG5H @ 0x300009
 14224                           ;	unspecified, using default values
 14225  300009                     	org	3145737
 14226  300009  FF                 	db	255
 14227                           
 14228                           ;Config register CONFIG6L @ 0x30000A
 14229                           ;	unspecified, using default values
 14230                           ;	Table Read Protection Block 0
 14231                           ;	EBTR0 = 0x1, unprogrammed default
 14232                           ;	Table Read Protection Block 1
 14233                           ;	EBTR1 = 0x1, unprogrammed default
 14234                           ;	Table Read Protection Block 2
 14235                           ;	EBTR2 = 0x1, unprogrammed default
 14236                           ;	Table Read Protection Block 3
 14237                           ;	EBTR3 = 0x1, unprogrammed default
 14238                           ;	Table Read Protection Block 4
 14239                           ;	EBTR4 = 0x1, unprogrammed default
 14240                           ;	Table Read Protection Block 5
 14241                           ;	EBTR5 = 0x1, unprogrammed default
 14242                           ;	Table Read Protection Block 6
 14243                           ;	EBTR6 = 0x1, unprogrammed default
 14244                           ;	Table Read Protection Block 7
 14245                           ;	EBTR7 = 0x1, unprogrammed default
 14246  30000A                     	org	3145738
 14247  30000A  FF                 	db	255
 14248                           
 14249                           ;Config register CONFIG6H @ 0x30000B
 14250                           ;	unspecified, using default values
 14251                           ;	Boot Block Table Read Protection bit
 14252                           ;	EBTRB = 0x1, unprogrammed default
 14253  30000B                     	org	3145739
 14254  30000B  FF                 	db	255
 14255                           tosu	equ	0xFFF
 14256                           tosh	equ	0xFFE
 14257                           tosl	equ	0xFFD
 14258                           stkptr	equ	0xFFC
 14259                           pclatu	equ	0xFFB
 14260                           pclath	equ	0xFFA
 14261                           pcl	equ	0xFF9
 14262                           tblptru	equ	0xFF8
 14263                           tblptrh	equ	0xFF7
 14264                           tblptrl	equ	0xFF6
 14265                           tablat	equ	0xFF5
 14266                           prodh	equ	0xFF4
 14267                           prodl	equ	0xFF3
 14268                           indf0	equ	0xFEF
 14269                           postinc0	equ	0xFEE
 14270                           postdec0	equ	0xFED
 14271                           preinc0	equ	0xFEC
 14272                           plusw0	equ	0xFEB
 14273                           fsr0h	equ	0xFEA
 14274                           fsr0l	equ	0xFE9
 14275                           wreg	equ	0xFE8
 14276                           indf1	equ	0xFE7
 14277                           postinc1	equ	0xFE6
 14278                           postdec1	equ	0xFE5
 14279                           preinc1	equ	0xFE4
 14280                           plusw1	equ	0xFE3
 14281                           fsr1h	equ	0xFE2
 14282                           fsr1l	equ	0xFE1
 14283                           bsr	equ	0xFE0
 14284                           indf2	equ	0xFDF
 14285                           postinc2	equ	0xFDE
 14286                           postdec2	equ	0xFDD
 14287                           preinc2	equ	0xFDC
 14288                           plusw2	equ	0xFDB
 14289                           fsr2h	equ	0xFDA
 14290                           fsr2l	equ	0xFD9
 14291                           status	equ	0xFD8

Data Sizes:
    Strings     83
    Constant    0
    Data        66
    BSS         189
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    138     159
    BANK1           256    188     255
    BANK2           256      0     171
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), ?_sprintf(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), ?_sprintf(BANK0[2]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_1(CODE[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_1(CODE[64]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 64
		 -> STR_1(CODE[64]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_1(CODE[64]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2829_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    DCmotors_testing@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    DCmotors_testing@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(COMRAM[8]), colourclick_calibration@initial(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_testing@tmpval	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _checkbatterylevel->_ADC_getval
    _DCmotors_testing->_turnleft
    _DCmotors_testing->_turnright
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->_DCmotors_setPWM
    _left->_DCmotors_setPWM
    _stop->_DCmotors_setPWM
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_colourcards_testing
    _colourcards_testing->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_colourcards_testing

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   89502
                                            110 BANK0     28    28      0
                           _ADC_init
                      _DCmotors_init
                   _DCmotors_testing
                        _USART4_init
                  _checkbatterylevel
                _colourcards_testing
                  _colourclickLEDs_C
                   _colourclick_init
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     360
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colourclick_writetoaddr                              2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourcards_testing                                192   190      2   61080
                                            106 BANK0      4     2      2
                                              0 BANK1    188   188      0
                            ___fldiv
                             ___flge
                           ___xxtofl
               _colourclick_readRGBC
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             44    10     34   46950
                                             64 BANK0     42     8     34
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   46589
                                             56 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    41      6   46210
                                             63 COMRAM    32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31708
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    8086
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2919
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6030
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4381
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1486
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC                                 2     0      2     920
                                             11 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (3) _colourclick_readR                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readG                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readC                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readB                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     974
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                              1 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_testing                                     6     2      4   27463
                                             39 COMRAM     6     2      4
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6    8534
                                             33 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6    7850
                                             33 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                                8     2      6    3061
                                             25 COMRAM     8     2      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                 8     2      6    3061
                                             25 COMRAM     8     2      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4341
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              6     2      4    3017
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              6     2      4    2865
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (4) _DCmotors_setPWM                                     11     9      2    2385
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     645
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     648
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              0 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _DCmotors_testing
     _forward
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _reverse
       _DCmotors_setPWM
     _stop
       _DCmotors_setPWM
     _turnleft
       _left
         _DCmotors_setPWM
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_testing
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _stoa
             _fputc
             _strlen
           _strncmp
           _tolower
   _colourclickLEDs_C
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      AB      10       66.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BC      FF       7       99.6%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8A      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A8       8        0.0%
DATA                 0      0     2A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 13:11:37 2021

                    ___fldiv@aexp 0019                      ___fldiv@bexp 0018  
                    ___fldiv@sign 0011                                l61 4B04  
                              l65 4B20             __end_of_DCmotors_init 566E  
                    ___awdiv@sign 000C               ___wmul@multiplicand 0003  
                             l160 1AAE                               l241 59B0  
                             l250 557C                               l162 1ABC  
                             l323 5A76                               l244 548C  
                             l332 5A5E                               l253 552C  
                             l326 5AAA                               l238 57B0  
                             l247 54DC                               l256 5398  
                             l329 5A50                               l425 59F0  
                             l434 5A0E                               l338 5990  
                             l291 5A26                               l371 5948  
                             l443 58F6                               l380 5A8C  
                             l293 5A34                               l437 5A22  
                             l197 2262                               l365 5920  
                             l542 3DC4                               l550 50FE  
                             l294 5A3A                               l374 5A96  
                             l535 566C                               l631 39DE  
                             l383 5A6A                               l288 5A0A  
                             l368 5922                               l545 59CE  
                             l377 5AA0                               l570 51AA  
                             l386 5738                               l555 512E  
                             l563 5094                               l571 51AC  
                             l547 59D0                               l654 596E  
                             l558 5064                               l574 4A4A  
                             l582 4954                               l592 561C  
                             l913 4FFA                               l578 4A80  
                             l586 498A                               l579 4A82  
                             l587 498C                               l924 4798  
                             l597 55CC                               l781 458E  
                             l919 4752                               l951 4694  
                             l768 42A4                               l928 5820  
                             l885 4EA0                               l898 4F50  
                             _abs 573A                               _pad 4D18  
                    ___awmod@sign 0006                               wreg 000FE8  
                    ___flmul@aexp 0012                      ___flmul@bexp 0013  
                    ___flmul@sign 000D                      ___flmul@temp 0018  
           ?_colourclick_readRGBC 000C                      ___flmul@prod 0014  
             __size_of_ADC_getval 0018                      ___fltol@exp1 000A  
                            ?_abs 0013                              l1312 3F78  
                            l1208 2C1A                              l1224 56B2  
                            l1241 32E8                              l1209 2C08  
                            l1250 33D0                              l1323 3F10  
                            l1316 3EB4                              l1236 34C4  
                            l1332 53EA                              l1309 3E1C  
                            l1406 37A8                              l1238 3324  
                            l1182 2A30                              l1247 336A  
                            l1191 2D00                              l1183 2A1E  
                            l1272 312A                              l1184 29E4  
                            l1424 1AAC                              l1249 33E2  
                            l4010 4C7C                              l1442 1242  
                            l1522 442A                              l1506 4326  
                            l1603 4114                              l1275 2FBC  
                            l4012 4C9A                              l4004 4C4E  
                            l1380 4DDC                              l1268 2DC6  
                            l4100 29B0                              l4020 284E  
                            l1612 3BF0                              l1508 432E  
                            l1285 30EC                              l1277 3034  
                            l1517 43D8                              l1541 2840  
                            l1622 5858                              l1630 543C  
                            l1606 411C                              l4014 4CD0  
                            l4006 4C60                              l1278 3022  
                            l4110 2A02                              l4102 29CC  
                            l4030 288E                              l4022 285C  
                            l1470 1682                              l1518 4422  
                            l1375 4D5E                              l1199 2B4A  
                            l1615 3B34                              l4008 4C72  
                            l4200 2CA0                              l4120 2A4E  
                            l4112 2A10                              l4104 29DC  
                            l4040 28C0                              l4032 2890  
                            l4024 285E                              l5000 1052  
                            l1378 4DA0                              l1386 3566  
                            l4210 2CDA                              l4202 2CC0  
                            l4130 2A8E                              l4114 2A12  
                            l4106 29F2                              l4050 28E8  
                            l4042 28C2                              l4026 286E  
                            l4034 2898                              l4018 2842  
                            l5002 106E                              l5010 108A  
                            l1651 4D16                              l4300 4462  
                            l1572 5770                              l4220 56B4  
                            l1388 356E                              l4212 2CE0  
                            l4204 2CC4                              l4140 2AB8  
                            l4132 2A9A                              l4124 2A62  
                            l4116 2A1C                              l4108 29FE  
                            l4060 2922                              l4052 28F8  
                            l4044 28C8                              l4036 28A8  
                            l4028 287E                              l1636 57E8  
                            l5100 151C                              l5020 1114  
                            l5012 10A4                              l1556 5274  
                            l1549 2704                              l1557 527C  
                            l4310 44CA                              l4302 4470  
                            l1662 5AAC                              l4222 56C0  
                            l4230 589E                              l4214 2CEE  
                            l4206 2CD2                              l4150 2B2A  
                            l4134 2A9E                              l4126 2A72  
                            l4118 2A3E                              l4142 2ABE  
                            l4070 294E                              l4062 2934  
                            l4054 2908                              l4046 28D6  
                            l4038 28AE                              l5110 15F8  
                            l5102 154E                              l5030 11EC  
                            l5022 116E                              l1575 5778  
                            l1567 4896                              l4312 44D8  
                            l4320 453E                              l4304 4490  
                            l4224 56D2                              l4232 58A2  
                            l4400 32D8                              l4216 2CF0  
                            l4208 2CD8                              l4160 2B84  
                            l4144 2AE4                              l4152 2B3A  
                            l4136 2AAC                              l4128 2A80  
                            l4080 2962                              l4072 2952  
                            l4064 2942                              l4056 290A  
                            l4048 28D8                              l5200 193E  
                            l5120 165A                              l5112 15FE  
                            l5104 155E                              l5040 1236  
                            l5032 11F0                              l5024 11A2  
                            l5016 10DA                              l4242 594A  
                            l4250 4122                              l4322 454E  
                            l4314 4506                              l4306 44AE  
                            l4226 56D6                              l1674 58C6  
                            l4234 58BA                              l4410 3322  
                            l4402 32E6                              l4330 3138  
                            l4170 2BB4                              l4162 2B8E  
                            l4154 2B60                              l4146 2B18  
                            l4138 2AAE                              l4090 2976  
                            l4082 2966                              l4074 2956  
                            l4066 2946                              l4058 2912  
                            l5210 199A                              l5202 1946  
                            l5130 1712                              l5122 166E  
                            l5114 1632                              l5106 156E  
                            l5050 1272                              l5034 1202  
                            l5042 124E                              l5026 11AA  
                            l5018 110E                              l1659 56F6  
                            l4244 5966                              l5300 3F96  
                            l4260 4182                              l4252 4130  
                            l4324 456E                              l4316 4526  
                            l4308 44B6                              l4228 5892  
                            l4420 3368                              l4412 3334  
                            l4404 32F2                              l4340 3178  
                            l4332 3146                              l4500 2DD6  
                            l4180 2BDC                              l4172 2BB8  
                            l4164 2B9C                              l4156 2B70  
                            l4148 2B1A                              l4092 297A  
                            l4084 296A                              l4076 295A  
                            l4068 294A                              l1668 533A  
                            l5220 19DA                              l5212 19A2  
                            l5204 1952                              l5140 175E  
                            l5132 1724                              l5124 167A  
                            l5116 1646                              l5108 15A2  
                            l5060 12D8                              l5052 128E  
                            l5036 1214                              l5028 11DC  
                            l1693 52DC                              l5310 3FFA  
                            l5302 3FB6                              l4270 41CC  
                            l4262 4186                              l4254 4150  
                            l4318 4538                              l4430 33C8  
                            l4414 334A                              l4422 337A  
                            l4406 3310                              l4350 319E  
                            l4342 317A                              l4334 3148  
                            l4510 2E10                              l4502 2DE6  
                            l4190 2C36                              l4182 2BEA  
                            l4174 2BC8                              l4166 2B9E  
                            l4094 297E                              l4086 296E  
                            l4078 295E                              l4238 57B2  
                            l5230 1A16                              l5222 19EC  
                            l5206 1958                              l5214 19A8  
                            l5150 1792                              l5142 176C  
                            l5134 1736                              l5126 169E  
                            l5118 164A                              l5070 1320  
                            l5062 12EA                              l5054 12C4  
                            l5038 121C                              l1678 4C4C  
                            l5312 4010                              l5304 3FF0  
                            l4280 423C                              l4272 41DA  
                            l4264 4192                              l4256 4154  
                            l4248 411E                              l4440 3436  
                            l4424 3388                              l4416 3350  
                            l4408 3312                              l4360 31DE  
                            l4352 31AC                              l4336 3158  
                            l4344 3182                              l4328 312C  
                            l4520 2E62                              l4512 2E26  
                            l4192 2C44                              l4184 2C00  
                            l4168 2BAC                              l4176 2BCA  
                            l4088 2972                              l4096 2982  
                            l1688 52D4                              l5240 1A6E  
                            l5232 1A1C                              l5224 19F8  
                            l5216 19BA                              l5208 197E  
                            l5160 17C4                              l5152 17A2  
                            l5144 177C                              l5136 1744  
                            l5128 1702                              l5080 1368  
                            l5072 132E                              l5064 12FC  
                            l5056 12CC                              l5048 1260  
                            l5400 2264                              l4610 4DFC  
                            l4602 4DDE                              l5330 40F8  
                            l5322 4092                              l5314 4018  
                            l5306 3FF4                              l4282 424E  
                            l4274 41EC                              l4266 41B0  
                            l4258 4162                              l4450 34A0  
                            l4434 33F2                              l4442 343A  
                            l4426 338C                              l4418 335A  
                            l4370 321E                              l4362 31E0  
                            l4354 31AE                              l4346 3192  
                            l4338 3168                              l4530 2EA8  
                            l4522 2E70                              l4514 2E32  
                            l4506 2DFA                              l4194 2C7E  
                            l4178 2BD8                              l4098 2986  
                            l5242 1A76                              l5226 1A00  
                            l5218 19D4                              l5170 186C  
                            l5162 17D6                              l5154 17A6  
                            l5146 1780                              l5138 174C  
                            l5090 147C                              l5082 1378  
                            l5074 1346                              l5066 130A  
                            l5058 12D0                              l5410 22D8  
                            l5402 228C                              l4620 4E30  
                            l4612 4E0A                              l4604 4DE2  
                            l5316 4020                              l4276 421A  
                            l4268 41B8                              l4284 4254  
                            l4292 442C                              l4452 34A4  
                            l4444 3454                              l4436 33FE  
                            l4428 339A                              l4380 324E  
                            l4372 3226                              l4356 31BE  
                            l4364 31E8                              l4348 3198  
                            l4700 46C4                              l4540 2F16  
                            l4532 2EC2                              l4524 2E7C  
                            l4516 2E4A                              l4508 2E06  
                            l4188 2C2A                              l4196 2C80  
                            l5244 1A86                              l5236 1A50  
                            l5228 1A10                              l5180 18C4  
                            l5172 1874                              l5164 17DA  
                            l5156 17AC                              l5148 1786  
                            l5084 138C                              l5092 1482  
                            l5076 1358                              l5068 130E  
                            l5260 42DA                              l5252 42A6  
                            l5420 2370                              l5412 22E0  
                            l5404 229A                              l5500 2806  
                            l4630 4E6A                              l4622 4E38  
                            l4614 4E12                              l4606 4DF0  
                            l5510 543E                              l5326 40D4  
                            l5318 4058                              l4286 4264  
                            l4278 423A                              l4294 4430  
                            l4454 34B2                              l4446 346A  
                            l4438 340C                              l4390 328C  
                            l4382 324E                              l4374 322A  
                            l4366 31F8                              l4358 31CE  
                            l4710 4732                              l4702 46D4  
                            l4550 2FAC                              l4542 2F40  
                            l4534 2ED2                              l4526 2E8C  
                            l4518 2E56                              l4470 2D1C  
                            l4198 2C90                              l5246 1A8C  
                            l5238 1A62                              l5190 1908  
                            l5182 18D2                              l5158 17B2  
                            l5166 17E0                              l5174 1878  
                            l5094 14A0                              l5086 13F0  
                            l5078 1360                              l5270 4352  
                            l5262 42EE                              l5254 42B8  
                            l5350 4BFA                              l5342 4BA2  
                            l5502 282E                              l5430 23FE  
                            l5422 237E                              l5414 22EE  
                            l5406 22AC                              ?_pad 0011  
                            l4640 4E90                              l4632 4E72  
                            l4624 4E40                              l4616 4E16  
                            l4608 4DF8                              l5600 4FFC  
                            l5360 5A62                              l5512 5484  
                            l5328 40E6                              l4288 4284  
                            l4296 443E                              l4456 34B8  
                            l4448 3484                              l4392 329C  
                            l4368 320E                              l4712 4740  
                            l4704 4702                              l4560 2FEC  
                            l4552 2FBA                              l4544 2F76  
                            l4536 2EEE                              l4528 2E98  
                            l4480 2D54                              l4472 2D1E  
                            l4720 57EA                              l4800 47BA  
                            l5192 1910                              l5184 18E2  
                            l5176 1896                              l5168 1838  
                            l5096 14D4                              l5088 1448  
                            l5280 43B2                              l5272 4366  
                            l5264 42F6                              l5256 42C0  
                            l5352 4C26                              l5344 4BB0  
                            l5336 4B6C                              l5440 24AE  
                            l5432 240E                              l5416 2316  
                            l5408 22B0                              l4642 4E98  
                            l4634 4E74                              l4626 4E4E  
                            l4618 4E1E                              l5610 507C  
                            l5602 5020                              l5370 5A9C  
                            l5362 5A66                              l5522 552E  
                            l5530 5524                              l4298 445E  
                            l4650 4EB4                              l4458 34BA  
                            l4394 32AC                              l4386 3262  
                            l4378 323E                              l4714 4790  
                            l4706 4712                              l4570 305E  
                            l4562 301A                              l4554 2FCC  
                            l4546 2F84                              l4538 2EFA  
                            l4490 2D80                              l4482 2D64  
                            l4474 2D2E                              l4466 2D02  
                            l4722 5800                              l4730 45A6  
                            l4802 47F8                              l4810 4838  
                            l5194 1920                              l5186 18E6  
                            l5178 18B2                              l5098 1506  
                            l5290 4400                              l5282 43B6  
                            l5274 436A                              l5266 4304  
                            l5258 42D2                              l5346 4BC8  
                            l5338 4B96                              l5450 2568  
                            l5442 24D6                              l5434 2442  
                            l5426 23C8                              l5418 2350  
                            l4636 4E7A                              l4628 4E54  
                            l5604 5034                              l5620 5162  
                            l5612 5130                              l5540 49B2  
                            l5700 3E56                              l5380 5734  
                            l5372 56FA                              l5356 5A8E  
                            l5364 5A84                              l5524 5574  
                            l5516 548E                              l4900 3596  
                            l4660 4EE8                              l4652 4EBC  
                            l4396 32B4                              l4388 327C  
                            l4716 4796                              l4708 4720  
                            l4580 30D4                              l4572 3088  
                            l4556 2FDA                              l4548 2FA2  
                            l4492 2D90                              l4484 2D6A  
                            l4476 2D3E                              l4468 2D0E  
                            l4724 5810                              l4740 45F6  
                            l4812 484A                              l4804 4820  
                            l4820 52DE                              l5196 1928  
                            l5188 18F6                              l5292 4404  
                            l5284 43BA                              l5276 4388  
                            l5348 4BE8                              l5452 2582  
                            l5460 25EC                              l5444 251E  
                            l5436 2452                              l5428 23DA  
                            l5508 5972                              l4638 4E80  
                            l5390 3C70                              l5630 50CE  
                            l5606 5040                              l5614 5136  
                            l5622 517A                              l5550 4A1A  
                            l5542 49D0                              l5710 3EAA  
                            l5702 3E5E                              l5382 5736  
                            l5374 56FE                              l5358 5A92  
                            l5366 5A88                              l5518 54D4  
                            l5534 5A0E                              l5294 3F7A  
                            l4910 3636                              l4902 359C  
                            l4670 4F24                              l4662 4EF0  
                            l4654 4EC0                              l4646 4EA2  
                            l4398 32C4                              l4582 30F0  
                            l4590 3116                              l4566 3044  
                            l4574 308C                              l4558 2FDE  
                            l4494 2DA0                              l4486 2D70  
                            l4478 2D4E                              l4750 4620  
                            l4742 45FA                              l4734 45BA  
                            l4806 482C                              l4822 52EE  
                            l4830 52C6                              l5198 1936  
                            l5278 4394                              l5470 26D4  
                            l5462 261A                              l5454 2590  
                            l5438 2486                              l5392 3CB6  
                            l5632 50DA                              l5608 504C  
                            l5624 5192                              l5616 514A  
                            l5552 4A26                              l5544 49EC  
                            l5560 48BC                              l5800 59EE  
                            l5720 3F20                              l5712 3EE6  
                            l5704 3E6A                              l5376 5706  
                            l5368 5A98                              l5528 54DE  
                            l5536 5A1E                              l5296 3F8E  
                            l4920 36DE                              l4912 363C  
                            l4904 35A4                              l4672 4F2A  
                            l4664 4EF8                              l4656 4ECE  
                            l4648 4EA6                              l4592 311A  
                            l4584 3100                              l4576 30A6  
                            l4568 3050                              l4496 2DB0  
                            l4488 2D7E                              l4760 4648  
                            l4752 462A                              l4744 4608  
                            l4736 45E4                              l4728 4590  
                            l4816 488E                              l4840 3A6A  
                            l4824 527E                              l5288 43EC  
                            l5480 2776                              l5456 25C0  
                            l5448 2556                              l5640 53AC  
                            l5394 3CD6                              l5386 3BF2  
                            l5634 50E6                              l5626 5096  
                            l5618 5156                              l5554 4A32  
                            l5546 49F6                              l5538 498E  
                            l5570 4924                              l5562 48DA  
                            l5802 59B2                              l5730 3F68  
                            l5722 3F24                              l5714 3EF2  
                            l5706 3E9C                              l5378 570E  
                            l5650 58C8                              l5298 3F92  
                            l4930 3744                              l4922 36F8  
                            l4914 3642                              l4906 35AE  
                            l4666 4F06                              l4674 4F30  
                            l4658 4ED6                              l4690 4FCE  
                            l4682 4F52                              l4586 310E  
                            l4578 30BA                              l4498 2DB6  
                            l4762 4654                              l4754 4634  
                            l4738 45E6                              l4842 3A78  
                            l4850 3B58                              l4834 39E0  
                            l5490 27E0                              l5466 268E  
                            l5642 53B4                              l5810 1ABE  
                            l5740 5A06                              l5396 3CF2  
                            l5388 3C0E                              l5636 5116  
                            l5628 50BA                              l5556 4A66  
                            l5548 4A10                              l5572 4930  
                            l5564 48F6                              l5900 3800  
                            l5804 59B8                              l5724 3F48  
                            l5716 3F00                              l5708 3E9E  
                            l5652 58CC                              l6268 4042  
                            l4780 4D56                              l4772 4D18  
                            l4932 374A                              l4940 3780  
                            l4924 3712                              l4908 35B4  
                            l4916 36A6                              l4676 4F40  
                            l4668 4F1C                              l4692 4FF2  
                            l4684 4F80                              l4588 3110  
                            l4596 566E                              l4764 4664  
                            l4852 3B94                              l4836 3A00  
                            l4828 52B4                              l5484 2796  
                            l5468 26A0                              l5476 2718  
                            l5580 5220                              l5644 53BC  
                            l5820 1C72                              l5812 1BA4  
                            l5660 5902                              l5742 5A08  
                            l5734 59F2                              l5398 3D5C  
                            l5574 493C                              l5566 4900  
                            l5558 4898                              l5590 5590  
                            l5910 38A4                              l5902 3814  
                            l5806 59C8                              l5726 3F58  
                            l5718 3F1E                              l5654 58DA  
                            l4862 5822                              l4870 5404  
                            l4790 4DC4                              l4782 4D6A  
                            l4774 4D28                              l4934 375C  
                            l4918 36C0                              l4926 3722  
                            l4678 4F48                              l4694 4FF8  
                            l4686 4F90                              l4598 567E  
                            l4766 4674                              l4854 3BA8  
                            l4846 3AE8                              l4838 3A56  
                            l4950 0E7E                              l5486 27BE  
                            l5494 27EC                              l5478 2740  
                            l5582 522E                              l5646 53D8  
                            l5638 539A                              l5830 1D4E  
                            l5822 1CA4                              l5814 1BD8  
                            l5662 5908                              l5670 5994  
                            l5750 5798                              l5736 59FC  
                            l5760 5638                              l5576 4970  
                            l5568 491A                              l5592 55B0  
                            l5920 397C                              l5912 38EC  
                            l5904 385C                              l5728 3F66  
                            l4880 5932                              l5656 58DE  
                            l4872 5432                              l4784 4D7E  
                            l4776 4D3C                              l4936 3768  
                            l4928 3734                              l4688 4FBE  
                            l4768 4684                              l4856 3BD0  
                            l4848 3B24                              l4960 0ECE  
                            l4952 0E86                              l4944 0E56  
                            l5496 27FA                              l5488 27CC  
                            l5584 5254                              l5840 1E2C  
                            l5832 1D80                              l5824 1CD6  
                            l5816 1C0C                              l5808 1AAE  
                            l5664 590A                              l5672 5A52  
                            l5752 57A2                              l5744 577A  
                            l5738 5A04                              l5682 5A6C  
                            l5770 5642                              l5762 563A  
                            l5594 55CE                              l5922 3994  
                            l5914 3904                              l5906 3874  
                            l5690 3DD8                              l5586 533C  
                            l4874 5436                              l4866 53EC  
                            l4794 573A                              l4786 4D82  
                            l4778 4D4A                              l4938 3770  
                            l4890 353E                              l4882 34C6  
                            l4698 4696                              l4858 3BE0  
                            l4970 0F06                              l4962 0EDC  
                            l4954 0EAA                              l4946 0E60  
                            l5578 5218                              l5850 1EEE  
                            l5842 1E42                              l5834 1D96  
                            l5826 1CEA                              l5818 1C40  
                            l5666 590C                              l5658 58F8  
                            l5674 5A58                              l5754 57AC  
                            l5746 577E                              l5684 5AA2  
                            l5780 5654                              l5772 5644  
                            l5764 563C                              l5756 5620  
                            l5596 55E0                              l5588 557E  
                            l5924 39B0                              l5916 3920  
                            l5908 3890                              l5676 5A24  
                            l5692 3DE6                              l4868 53F0  
                            l4796 5754                              l4788 4DB0  
                            l4892 3540                              l4884 34E6  
                            l4980 0F6C                              l4972 0F0A  
                            l4964 0EEE                              l4956 0EB4  
                            l4948 0E70                              l5860 1FCC  
                            l5852 1F20                              l5844 1E74  
                            l5836 1DC8                              l5828 1D1C  
                            l5668 590E                              l5748 5788  
                            l5940 4AB6                              l5686 5A3C  
                            l5782 5660                              l5774 5646  
                            l5766 563E                              l5758 5634  
                            l5598 5600                              l5926 39C4  
                            l5918 3934                              l5790 59DC  
                            l5678 5A38                              l5694 3E2C  
                            l4878 5922                              l4894 355A  
                            l4886 350E                              l4798 479A  
                            l4982 0F7E                              l4966 0EFA  
                            l4974 0F10                              l4958 0EBC  
                            l5870 20AA                              l5862 1FFE  
                            l5854 1F52                              l5846 1EA6  
                            l5838 1DFA                              l5950 4AEE  
                            l5942 4AC2                              l5934 4A84  
                            l5784 5664                              l5776 5648  
                            l5768 5640                              l5928 39DC  
                            l5792 59DE                              l5696 3E42  
                            l5688 3DC8                              l4896 3576  
                            l4888 352E                              l4984 0F9A  
                            l4976 0F36                              l4992 0FE4  
                            l4968 0F02                              l5880 2188  
                            l5872 20DC                              l5864 2030  
                            l5856 1F84                              l5848 1ED8  
                            l5960 4B12                              l5952 4AF2  
                            l5944 4AD2                              l5936 4A8E  
                            l5786 5668                              l5778 5652  
                            l5794 59E0                              l4898 3588  
                            l4994 100A                              l4986 0FB2  
                            l5890 2260                              l5882 219E  
                            l5874 20F2                              l5866 2046  
                            l5858 1F9A                              l5962 4B22  
                            l5954 4AF6                              l5946 4ADA  
                            l5938 4AAE                              l5892 37AA  
                            l5796 59EA                              l5788 59D2  
                            l4988 0FBC                              l5876 2124  
                            l5868 2078                              l5884 21B0  
                            l5964 4B28                              l5956 4AFC  
                            l5948 4AE6                              l5894 37AC  
                            l5798 59EC                              l4998 1040  
                            l5886 223C                              l5878 2156  
                            l5966 4B42                              l5958 4B00  
                            l5896 37D4                              l5888 2248  
                            l5968 4B50                              l5898 37EC  
                            STR_1 0E01                              STR_2 0E41  
                            STR_3 0E49                              STR_6 0E45  
                            STR_7 0E4D                      _BAUD4CONbits 000EE9  
                            _LATE 000F7D                              _LATG 000F7F  
                            u4100 286E                              u4101 286A  
                            u4110 287E                              u4111 287A  
                            u5000 301A                              u4200 29CA  
                            u4120 28C0                              u5001 3016  
                            u4121 28BC                              u4050 4C60  
                            u5010 3030                              u4210 29F2  
                            u4130 28D6                              _T2PR 000FBC  
                            u4051 4C5C                              u5011 302C  
                            u4211 29EE                              u4131 28D2  
                            u5100 4E4E                              u4060 4C72  
                            u5020 3044                              u4300 2B2A  
                            u4220 2A10                              u4140 28E8  
                            u5101 4E4A                              u4061 4C6E  
                            u5021 3040                              u4301 2B26  
                            u4221 2A0C                              u4141 28E4  
                            u5110 4E6A                              u4070 4C9A  
                            u5030 305E                              u4310 2B60  
                            u4230 2A30                              u4150 28F8  
                            u5111 4E66                              u4071 4C96  
                            u5031 305A                              u4311 2B5C  
                            u4231 2A2C                              u4151 28F4  
                            u5120 4E90                              u4080 4CD0  
                            u5200 4FBE                              u5040 30A6  
                            u4400 2C2A                              u4320 2B70  
                            u4240 2A3E                              u4160 2934  
                            u6000 1236                              u5121 4E8C  
                            u4081 4CCC                              u5201 4FBA  
                            u5041 30A2                              u4401 2C26  
                            u4321 2B6C                              u4241 2A3A  
                            u4161 2930                              u6001 1232  
                            u5130 4EB4                              u5210 4FF2  
                            u5050 30D4                              u4410 2C44  
                            u4330 2B9C                              u4250 2A4E  
                            u4170 2942                              u4090 285C  
                            u6010 125C                              u5131 4EB0  
                            u5211 4FEE                              u5051 30D0  
                            u4411 2C40                              u4331 2B98  
                            u4251 2A4A                              u4171 293E  
                            u4091 2858                              u6011 1258  
                            u5140 4ECE                              u5220 46C4  
                            u5060 310E                              u4420 2C7E  
                            u4340 2BAC                              u4260 2A80  
                            u4180 29B0                              u5300 4608  
                            u4500 57E2                              u6100 1358  
                            u6020 1272                              u5141 4ECA  
                            u5221 46C0                              u5061 310A  
                            u4421 2C7A                              u4341 2BA8  
                            u4261 2A7C                              u4181 29AC  
                            u5301 4604                              u4501 57DC  
                            u6101 1354                              u6021 126E  
                            u5070 4DF0                              u5150 4EE8  
                            u5230 4702                              u4430 2C90  
                            u4350 2BC8                              u4270 2A8E  
                            u4190 29C8                              u5310 461C  
                            u4510 57E4                              u6110 14A0  
                            u6030 128E                              u5071 4DEC  
                            u5151 4EE4                              u5231 46FE  
                            u4431 2C8C                              u4351 2BC4  
                            u4271 2A8A                              u4191 29C2  
                            u5311 4618                              u6111 149C  
                            u6031 128A                              u5080 4E0A  
                            u7000 507C                              u4520 4130  
                            u4600 4470                              u5160 4F06  
                            u5240 4720                              u4440 2CA0  
                            u4360 2BD8                              u4280 2AAC  
                            u5320 4644                              u5400 47DA  
                            u6200 1736                              u6120 1506  
                            u6040 12C4                              u5081 4E06  
                            u7001 5078                              u4521 412C  
                            u4601 446C                              u5161 4F02  
                            u5241 471C                              u4441 2C9C  
                            u4361 2BD4                              u4281 2AA8  
                            u5321 4640                              u6201 1732  
                            u6121 1502                              u6041 12C0  
                            u5090 4E30                              u7010 5094  
                            u4530 4162                              u4610 44AE  
                            u5170 4F1C                              u5250 4740  
                            u4450 2CC0                              u4370 2BEA  
                            u4290 2AE4                              u5330 4664  
                            u5410 47F8                              u6210 1744  
                            u6130 154E                              u6050 12EA  
                            u5091 4E2C                              u7011 5090  
                            u4531 415E                              u4611 44AA  
                            u5171 4F18                              u5251 473C  
                            u4451 2CBC                              u4371 2BE6  
                            u4291 2AE0                              u5331 4660  
                            u5411 47F4                              u6211 1740  
                            u6131 154A                              u6051 12E6  
                            u7020 5192                              u7100 3E42  
                            u4620 44D8                              u5180 4F40  
                            u4700 31CE                              u5260 4790  
                            u4460 2CD2                              u4380 2C00  
                            u5340 4674                              u5420 4820  
                            u5500 52B0                              u6300 1936  
                            u6220 175E                              u6140 155E  
                            u6060 12FC                              u7021 518E  
                            u7101 3E3E                              u4541 418C  
                            u4621 44D4                              u5181 4F3C  
                            u4701 31CA                              u5261 478C  
                            u4461 2CCE                              u4381 2BFC  
                            u5341 4670                              u5421 481C  
                            u5405 47D0                              u6301 1932  
                            u6221 175A                              u6141 155A  
                            u6061 12F8                              u7030 51AA  
                            u7110 3E98                              u4550 41B0  
                            u4630 4506                              u5350 4D28  
                            u4710 320E                              u5190 4F80  
                            u5270 5800                              u4470 2CEE  
                            u4390 2C16                              u5430 484A  
                            u5510 52C6                              u6310 19BA  
                            u6230 176C                              u6150 15F8  
                            u6070 130A                              u7031 51A6  
                            u7111 3E94                              u4551 41AC  
                            u4631 4502                              u5351 4D24  
                            u4711 320A                              u5191 4F7C  
                            u5271 57FC                              u4471 2CEA  
                            u4391 2C12                              u5431 4846  
                            u5511 52C2                              u6311 19B6  
                            u6231 1768                              u6151 15F4  
                            u6071 1306                              u7040 5116  
                            u7120 3EE2                              u4560 41DA  
                            u4640 454E                              u4480 56F6  
                            u5360 4D4A                              u4800 339A  
                            u4720 324E                              u5280 45A6  
                            u5600 3B94                              u5520 3A28  
                            u6320 19D4                              u6240 17C4  
                            u6160 1646                              u6080 1320  
                            u6400 4322                              u7200 1C72  
                            u7041 5112                              u7121 3EDE  
                            u4561 41D6                              u4641 454A  
                            u4481 56F2                              u5361 4D46  
                            u4801 3396                              u4721 324A  
                            u5281 45A2                              u5601 3B90  
                            u6321 19D0                              u6241 17C0  
                            u6161 1642                              u6081 131C  
                            u6401 431E                              u7201 1C6E  
                            u7050 512E                              u7130 3F00  
                            u4570 421A                              u4490 58BA  
                            u5370 4DA0                              u4810 33C8  
                            u4730 32C4                              u4650 3146  
                            u5290 45DA                              u5450 4884  
                            u5610 3BD0                              u5530 3A56  
                            u6330 19EC                              u6250 1896  
                            u6170 166E                              u6090 132E  
                            u6410 434E                              u7210 1CA4  
                            u7051 512A                              u7131 3EFC  
                            u4571 4216                              u4491 58B6  
                            u5371 4D9C                              u4811 33C4  
                            u4731 32C0                              u4651 3142  
                            u5451 487E                              u5611 3BCC  
                            u5531 3A52                              u6331 19E8  
                            u6251 1892                              u6171 166A  
                            u6091 132A                              u6411 434A  
                            u7211 1CA0                              u7140 3F10  
                            u7060 58F6                              u5620 5852  
                            u6500 40D0                              u4580 4264  
                            u5380 4DB0                              u5700 350E  
                            u4820 33DE                              u4740 32E6  
                            u4660 3158                              u4900 2D3E  
                            u5460 4886                              u5540 3A78  
                            u6340 1A4A                              u6260 18B2  
                            u6180 1712                              u6420 4388  
                            u7220 1CD6                              u7141 3F0C  
                            u7061 58F2                              u5621 584C  
                            u4581 4260                              u5381 4DAC  
                            u5701 350A                              u4821 33DA  
                            u4741 32E2                              u4661 3154  
                            u4901 2D3A                              u5445 485C  
                            u5541 3A74                              u5525 3A1E  
                            u6341 1A44                              u6261 18AE  
                            u6181 170E                              u6421 4384  
                            u7301 1E36                              u7221 1CD2  
                            u7070 5A34                              u7150 3F1E  
                            u5630 5854                              u6510 40E6  
                            u4590 443E                              u5390 5754  
                            u5710 353E                              u4830 33F2  
                            u4750 3310                              u4670 3168  
                            u4910 2D7E                              u5470 5328  
                            u6350 1A4C                              u6270 18C4  
                            u6190 1724                              u6430 43D8  
                            u7310 1E74                              u7230 1D1C  
                            u7071 5A30                              u7151 3F1A  
                            u6511 40E2                              u4591 443A  
                            u5391 5750                              u5711 353A  
                            u4831 33EE                              u4751 330C  
                            u4671 3164                              u4911 2D7A  
                            u5295 45D0                              u6271 18C0  
                            u6191 1720                              u6431 43D4  
                            u7311 1E70                              u7231 1D18  
                            u6600 3C0E                              u7160 3F58  
                            u7080 3DD8                              u5640 5404  
                            u6520 40F8                              u5800 3734  
                            u5720 355A                              u4840 340C  
                            u4760 3334                              u4680 31AC  
                            u4920 2D90                              u5560 3AE4  
                            u5480 533A                              u6360 1A62  
                            u6280 18D2                              u6440 43E8  
                            u7400 1FFE                              u7320 1EA6  
                            u7240 1D4E                              u6601 3C0A  
                            u7161 3F54                              u7081 3DD4  
                            u5641 5400                              u6521 40F4  
                            u5801 3730                              u5721 3556  
                            u4841 3408                              u4761 3330  
                            u4681 31A8                              u4921 2D8C  
                            u5561 3AE0                              u5481 5336  
                            u6361 1A5E                              u6281 18CE  
                            u6441 43E4                              u7401 1FFA  
                            u7321 1EA2                              u7241 1D4A  
                            u6610 3CF2                              u7170 3F66  
                            u7090 3DE6                              u5650 5432  
                            u5810 3744                              u5730 3588  
                            u4850 3454                              u4770 334A  
                            u4690 31BE                              u4930 2DA0  
                            u5570 3B08                              u5490 52AE  
                            u6290 1908                              u6450 4422  
                            u6530 4B96                              u7410 2030  
                            u7330 1ED8                              u7250 1D80  
                            u6611 3CEE                              u7171 3F62  
                            u7091 3DE2                              u5651 542E  
                            u5811 3740                              u5731 3584  
                            u4851 3450                              u4771 3346  
                            u4691 31BA                              u4931 2D9C  
                            u5555 3A8C                              u5491 52A8  
                            u6291 1904                              u6451 441E  
                            u6371 42B0                              u6531 4B92  
                            u8107 2254                              u7411 202C  
                            u7331 1ED4                              u7251 1D7C  
                            u7180 59C8                              u5660 5932  
                            u6460 3FB6                              u5820 375C  
                            u5740 3596                              u4860 3484  
                            u4780 3368                              u4940 2DD6  
                            u5580 3B24                              u5556 3A96  
                            u5900 0F7E                              u6380 42D2  
                            u6540 4BC8                              u6700 240E  
                            u8117 37DE                              u7181 59C4  
                            u5661 592E                              u6461 3FB2  
                            u5821 3758                              u5741 3592  
                            u4861 3480                              u4781 3364  
                            u4941 2DD2                              u5581 3B20  
                            u5557 3AA6                              u5477 531E  
                            u5901 0F7A                              u6381 42CE  
                            u6541 4BC4                              u6701 240A  
                            u7501 2192                              u7421 203A  
                            u7341 1EE2                              u7261 1D8A  
                            u5670 5948                              u6470 3FF0  
                            u5750 36C0                              u4870 34B2  
                            u4790 3388                              u4950 2DE6  
                            u5590 3B78                              u5910 100A  
                            u5830 0E7E                              u6390 4304  
                            u6550 4BE8                              u6710 2452  
                            u7430 2078                              u7350 1F20  
                            u7270 1DC8                              u7190 1ABC  
                            u8207 4A3C                              u8127 381E  
                            u5671 5944                              u6471 3FEC  
                            u5751 36BC                              u4871 34AE  
                            u4791 3384                              u4951 2DE2  
                            u5575 3AFE                              u5911 1006  
                            u5831 0E7A                              u6391 4300  
                            u6551 4BE4                              u6711 244E  
                            u7511 21A8                              u7431 2074  
                            u7351 1F1C                              u7271 1DC4  
                            u7191 1AB8                              u6624 3D4C  
                            u6480 400C                              u5760 36DE  
                            u5680 34F6                              u4960 2F60  
                            u4880 2D1C                              u5920 1038  
                            u5840 0ECE                              u6560 4BFA  
                            u6800 27BE                              u6720 24AE  
                            u6640 228C                              u7440 20AA  
                            u7360 1F52                              u7280 1DFA  
                            u6625 3D48                              u8217 516C  
                            u8137 3866                              u6481 4008  
                            u5761 36DA                              u5681 34F0  
                            u4881 2D18                              u5921 1032  
                            u5841 0ECA                              u6561 4BF6  
                            u6801 27BA                              u6721 24AA  
                            u6641 2288                              u7441 20A6  
                            u7361 1F4E                              u7281 1DF6  
                            u6634 3DB6                              u6490 40CE  
                            u5770 36F8                              u5690 34F8  
                            u4970 2FBA                              u4890 2D2E  
                            u5930 103A                              u5850 0EDC  
                            u6570 4C26                              u6730 24D6  
                            u6650 22D8                              u7450 20DC  
                            u7370 1F84                              u7290 1E2C  
                            u6635 3DB2                              u8227 5056  
                            u8147 38AE                              u6491 40C8  
                            u5771 36F4                              u4971 2FB6  
                            u4891 2D2A                              u5595 3B6E  
                            u5851 0ED8                              u6571 4C22  
                            u6731 24D2                              u6651 22D4  
                            u7451 20D8                              u7371 1F80  
                            u7291 1E28                              u6900 4A80  
                            u6580 5722                              u5780 3712  
                            u4980 2FDA                              u5940 1052  
                            u5860 0EEE                              u6740 2568  
                            u6660 2316                              u7540 4B12  
                            u8237 50F0                              u6901 4A7C  
                            u8157 38F6                              u6581 571A  
                            u5781 370E                              u4981 2FD6  
                            u4965 2F56                              u5941 104E  
                            u5861 0EEA                              u6741 2564  
                            u6661 2312                              u7461 20E6  
                            u7381 1F8E                              u7541 4B0E  
                            u6910 48CE                              u5790 3722  
                            u4990 2FEC                              u5950 10D6  
                            u5870 0F36                              u6750 261A  
                            u6670 23C2                              u7470 2124  
                            u7390 1FCC                              u7550 4B20  
                            u6911 48C6                              u8167 393E  
                            u5791 371E                              u4991 2FE8  
                            u5951 10D2                              u5871 0F32  
                            u6751 2616                              u6671 23BC  
                            u7471 2120                              u7391 1FC8  
                            u6815 597A                              u8087 4B34  
                            u7551 4B1C                              u6840 5A1E  
                            u5960 116A                              u5880 0F64  
                            u6760 2688                              u6680 23C4  
                            u7480 2156                              u6816 597C  
                            u8177 3986                              u6841 5A1A  
                            u5961 1166                              u5881 0F5E  
                            u6761 2682                              u7481 2152  
                            u6825 5984                              u8097 578E  
                            u6850 49C4                              u6930 48F6  
                            u5970 11DC                              u5890 0F66  
                            u6770 268A                              u6690 23DA  
                            u7490 2188                              u6826 5986  
                            u6851 49BC                              u6931 48F2  
                            u8187 39CE                              u5971 11D8  
                            u6691 23D6                              u7491 2184  
                            u6835 598E                              u6940 491A  
                            u5980 1202                              u6780 26A0  
                            u6836 5990                              u8197 4946  
                            u6941 4916                              u5981 11FE  
                            u6781 269C                              u6870 49EC  
                            u6950 4970                              u6598 5724  
                            u5990 1214                              u6790 2740  
                            u6871 49E8                              u6951 496C  
                            u5991 1210                              u6791 273C  
                            u6880 4A10                              u6960 498A  
                            u6928 48D0                              u6881 4A0C  
                            u6961 4986                              u6890 4A66  
                            u6970 5274                              u6891 4A62  
                            u6971 5270                              u6868 49C6  
                            u6980 5590                              u6981 558C  
                            u6990 55E0                              u6991 55DC  
                     main@current 00D0           __end_of_DCmotors_setPWM 3DC6  
                            abs@a 0013                              _dbuf 0250  
                            _atoi 3F7A                              _main 4A84  
                            _dtoa 34C6                              _left 498E  
                            _prec 00EE                              _nout 00EA  
                            pad@i 0018                              pad@p 0015  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            indf0 000FEF                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                            _stoa 42A6                              _stop 5130  
                   ___fpclassifyf 479A                              prodh 000FF4  
                            prodl 000FF3                              start 0000  
                __end_of_ADC_init 5A0C                   ___fldiv@new_exp 0012  
                    _tolower$3141 000D                      ___param_bank 000000  
                           ??_abs 0015                             ??_pad 0017  
          ??_clicker2buttons_init 0001                     ___fltol@sign1 0009  
                 __end_of___aodiv 42A6                             ?_atoi 0008  
                 __end_of___fladd 2D02                             ?_main 0001  
                           ?_dtoa 001C                             ?_left 001A  
                 __end_of___aomod 4590                             _ADPCH 000F5F  
                 __end_of___fldiv 34C6                   __end_of___awdiv 4EA2  
                 __end_of___flneg 5822                             STR_10 0E51  
                           STR_12 0E51                   __end_of___awmod 4F52  
                 __end_of___flmul 312C                   __end_of___flsub 56B4  
                 __end_of___fltol 4696                             ?_stoa 000A  
                           ?_stop 001A                   ___awdiv@divisor 0009  
         _colourclick_writetoaddr 5992                   ___awdiv@counter 000B  
                    vfpfcnvrt@fmt 0042           __end_of_sendCharSerial4 5A24  
      __end_of_I2C_2_Master_Start 5A98        __end_of_I2C_2_Master_Write 5A6C  
                           _flags 00F0          __end_of_DCmotors_testing 39E0  
                           _fputc 4C4E                   __end_of_forward 5130  
                           _fputs 56B4                   __end_of_isdigit 585A  
            colourclickLEDs_C@tog 0001                             _right 4898  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 00EC  
                           _putch 5AAC                             dtoa@d 001E  
                           dtoa@i 003E                 _clicker2LEDs_init 5AA2  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 543E                   __end_of_isupper 57EA  
                           tablat 000FF5                   __end_of_reverse 5096  
                           plusw1 000FE3                             plusw2 000FDB  
          DCmotors_init@PWMperiod 0001                             stoa@i 0016  
                           stoa@l 001E                ?_clicker2LEDs_init 0001  
                           stoa@p 001C                             stoa@s 000C  
                           stoa@w 0018                             status 000FD8  
                 __end_of_sprintf 53EC                    ?___fpclassifyf 0001  
                 __end_of_tolower 52DE                   __end_of_strncmp 4C4E  
           _I2C_2_Master_RepStart 5A98                   __initialization 51AE  
             ??_clicker2LEDs_init 0001                      __end_of_atoi 411E  
                    __end_of_main 4B6C                      __end_of_dtoa 37AA  
                    __end_of_left 4A84                      __end_of_stoa 442C  
                    __end_of_stop 51AE                            ??_atoi 000A  
                          ??_main 00CE                            ??_dtoa 0026  
                          ??_left 0020                            ??_stoa 000E  
                          ??_stop 001E                     __activetblptr 000003  
   colourcards_testing@colour_480 0191     colourcards_testing@colour_490 018B  
   colourcards_testing@colour_482 0177     colourcards_testing@colour_476 019B  
   colourcards_testing@colour_484 0196     colourcards_testing@colour_492 016F  
   colourcards_testing@colour_478 0185     colourcards_testing@colour_486 017E  
   colourcards_testing@colour_488 0164            ??_colourclick_readRGBC 000E  
       __end_of_clicker2LEDs_init 5AAC                   _colourcard_flag 00F6  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000F64         __size_of_colourclick_init 0038  
                          ?_right 001A                  ___awdiv@dividend 0007  
                          ?_putch 0001                            _RC0PPS 000E62  
                          _RC4REG 000EE3                            _RE2PPS 000E74  
                          _RD5PPS 000E6F                            _RC7PPS 000E69  
                          _RD6PPS 000E70                  ?_DCmotors_setPWM 000F  
                          _RX4PPS 000E15                            _TX4REG 000EE4  
                __end_of___xxtofl 3F7A                      ??_ADC_getval 0001  
                    vfprintf@cfmt 009E                            ___flge 4696  
                          ___fleq 4F52                         ??___aodiv 0011  
                       ??___fladd 0009                         ??___aomod 0011  
                          ___wmul 594A                         ??___fldiv 0009  
                       ??___awdiv 000B                         ??___flneg 0005  
                       ??___awmod 0005                         ??___flmul 0009  
                       ??___flsub 0022                         ??___fltol 0005  
                          _efgtoa 0E56                  ??_buggyLEDs_init 0001  
                          _floorf 39E0         ??_colourclick_writetoaddr 0004  
                          clear_0 51F4                            clear_1 5200  
                          clear_2 520C                  ___awdiv@quotient 000D  
                 ___awmod@divisor 0003                            isa$std 000001  
                 ___awmod@counter 0005                            pad@buf 0013  
                          dtoa@fp 001C                            left@mL 001A  
                          left@mR 001C                            _strcpy 52DE  
                          _strlen 5892                            fputc@c 0001  
                          fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_forward 001E  
                       ??_isdigit 0003                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 0000                         ??_isspace 0003  
                          tblptrh 000FF7                         ??_isupper 0003  
                          tblptrl 000FF6                            tblptru 000FF8  
                       ?_ADC_init 0001                  ?_sendCharSerial4 0001  
                       ??_reverse 001E       __end_of_colourcards_testing 2264  
                          stoa@cp 001A                            stoa@fp 000A  
                          putch@c 0001                  __end_of_vfprintf 527E  
                          stop@mL 001A                            stop@mR 001C  
                       ??_sprintf 0060                         ??_tolower 0009  
              __end_of_ADC_getval 5A3C                      ?_USART4_init 0001  
                       ??_strncmp 0007                        ___flge@ff1 001A  
                      ___flge@ff2 001E                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 000B                      ___xxtofl@exp 000A  
                    ___xxtofl@val 0001                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005                  __end_of_turnleft 561E  
                      __accesstop 0060           __end_of__initialization 5212  
                      ___flneg@f1 0001            ?_I2C_2_Master_RepStart 0001  
                   ___rparam_used 000001                        ___fltol@f1 0001  
                  __pcstackCOMRAM 0001                      __pidataBANK1 585A  
                    __pidataBANK2 5A78                     __end_of_fputc 4D18  
                   __end_of_fputs 56F8                     __end_of_right 498E  
                   __end_of_putch 5AAE     checkbatterylevel@batterylevel 0002  
                      ??_ADC_init 0001        __size_of_clicker2LEDs_init 000A  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_right 0020     __size_of_colourclickLEDs_init 000E  
                         ??_putch 0001   __end_of_colourclick_writetoaddr 59B2  
                      __pbssBANK0 00EA                        __pbssBANK1 01F3  
                      __pbssBANK2 0200                 _checkbatterylevel 59B2  
              ?_checkbatterylevel 0001                      _T2CLKCONbits 000FBF  
                         ?___flge 001A                           ?___fleq 0001  
                         ?___wmul 0001                           ?_efgtoa 002E  
             ??_checkbatterylevel 0002                           ?_floorf 001A  
                         ?_strcpy 0001                           ?_strlen 0001  
                       ?___xxtofl 0001                           _SP4BRGH 000EE6  
                         _SP4BRGL 000EE5                __size_of_vfpfcnvrt 05DE  
                         _PWM6DCH 000FA3                           _PWM7DCH 000FA0  
                         _SSP2ADD 000ED6                           _SSP2BUF 000ED5  
                _colourclick_init 577A                 ?_DCmotors_testing 0028  
       __end_of_checkbatterylevel 59D2                ??_DCmotors_testing 002C  
          __size_of_DCmotors_init 0050                         _ADREFbits 000F58  
              _I2C_2_Master_Start 5A8E                _I2C_2_Master_Write 5A60  
                         __Hparam 0000                __size_of_turnright 0050  
                         __Lparam 0000           sendStringSerial4@string 0002  
          colourcards_testing@buf 0100                   __size_of___flge 0104  
                 __size_of___fleq 00AA                           ___aodiv 411E  
                         ___fladd 2842                           ___aomod 442C  
                         ___fldiv 312C                           ___awdiv 4DDE  
                         ___flneg 57EA                           ___awmod 4EA2  
                         ___flmul 2D02                           ___flsub 566E  
                         ___fltol 4590                   __size_of___wmul 0026  
             ?_I2C_2_Master_Start 0001               ?_I2C_2_Master_Write 0001  
                       ?_vfprintf 0098                      __psmallconst 0E00  
                 __size_of_efgtoa 0C58                   __size_of_floorf 0212  
                         __pcinit 51AE                           __ramtop 0E00  
                         __ptext0 4A84                           __ptext1 577A  
                         __ptext2 5992                           __ptext3 5A52  
                         __ptext4 5970                           __ptext5 58F8  
                         __ptext6 1AAE                           __ptext7 539A  
                         __ptext8 5218                           __ptext9 2264  
   __size_of_clicker2buttons_init 000C                         ?_turnleft 0022  
                 __size_of_strcpy 005E                   __size_of_strlen 0036  
                       _T2CONbits 000FBD                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _forward 5096  
                         _isdigit 5822                        ??___xxtofl 0005  
                ___awmod@dividend 0001                           _isspace 53EC  
                       _T2HLTbits 000FBE                           _isupper 57B2  
                         efgtoa@c 0034                           efgtoa@d 0078  
                         efgtoa@e 0090                           efgtoa@f 0030  
                         efgtoa@g 008C                           efgtoa@h 0082  
                         efgtoa@i 008A                           efgtoa@l 0086  
                         efgtoa@m 0072                           efgtoa@n 0092  
                         efgtoa@p 007C                           efgtoa@t 006C  
                         efgtoa@u 0094                           efgtoa@w 007E  
                         _reverse 4FFC                     _RxBufWriteCnt 00FA  
                         atoi@neg 000E                           _sprintf 539A  
                         _tolower 527E              ??_I2C_2_Master_Start 0002  
                         left@deg 001E              ??_I2C_2_Master_Write 0002  
                         _strncmp 4B6C              end_of_initialization 5212  
                         floorf@e 0028                           floorf@m 0024  
                         floorf@u 002A                           floorf@x 001A  
                ADC_getval@tmpval 0001                           fputc@fp 0003  
            __size_of_USART4_init 0020                           fputs@fp 000C  
                         right@mL 001A                           right@mR 001C  
               __end_of_vfpfcnvrt 2842                        efgtoa@mode 0081  
                      efgtoa@sign 007A                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                      ??_vfprintf 0060      colourclick_writetoaddr@value 0003  
                         strcpy@d 0009                           strlen@a 0003  
                         strcpy@s 0007                           strlen@s 0001  
                   _DCmotors_init 561E                         _PORTFbits 000F8E  
                      ??_turnleft 0028                       ___fladd@grs 0010  
                   ___xxtofl@sign 0009                         _TRISAbits 000F81  
                       _TRISCbits 000F83                         _TRISDbits 000F84  
                       _TRISEbits 000F85                 __end_of_turnright 55CE  
                       _TRISFbits 000F86                         _TRISGbits 000F87  
                       _TRISHbits 000F88                       ___fldiv@grs 0014  
                     ___fldiv@rem 000D     __size_of_colourclick_readRGBC 005E  
               __size_of_ADC_init 001A           ??_I2C_2_Master_RepStart 0002  
            colourclick_readB@tmp 000A              colourclick_readC@tmp 000A  
      __size_of_checkbatterylevel 0020              colourclick_readG@tmp 000A  
                     _CM1CON0bits 000ED0                       _CM1CON1bits 000ED1  
            colourclick_readR@tmp 000A                       ___flmul@grs 000E  
                    _EUSART4RXbuf 023C                      _EUSART4TXbuf 0200  
       sendCharSerial4@charToSend 0001                        main@motorL 00D8  
                      main@motorR 00E1          __size_of_DCmotors_setPWM 01D4  
                  __end_of___flge 479A        colourclick_readRGBC@tmpval 000C  
                  __end_of___fleq 4FFC                    ?_DCmotors_init 0001  
                     vfpfcnvrt@ap 0044                       vfpfcnvrt@cp 0052  
                     vfpfcnvrt@ct 005C                       vfpfcnvrt@fp 0040  
                     vfpfcnvrt@ll 004A                    __end_of___wmul 5970  
                  __end_of_efgtoa 1AAE                    __end_of_floorf 3BF2  
                      floorf@F527 01F3                    __end_of_strcpy 533C  
                  __end_of_strlen 58C8               start_initialization 51AE  
                     __end_of_abs 577A                       __end_of_pad 4DDE  
                   _TxBufWriteCnt 00F8                  _unknowncard_flag 00F5  
                 _returnhome_flag 00F4          __size_of_sendCharSerial4 0018  
           __end_of___fpclassifyf 4898      __size_of_colourcards_testing 07B6  
                    turnright@deg 0026                       vfprintf@fmt 009A  
        ?_colourclick_writetoaddr 0003                          ??___flge 0022  
                        ??___fleq 0009      __end_of_colourclickLEDs_init 5A60  
                        ??___wmul 0005          __end_of_colourclick_init 57B2  
        colourcards_testing@B_rel 01B8                          ??_efgtoa 0035  
        colourcards_testing@G_rel 01B4                       __pdataBANK1 01BC  
                     __pdataBANK2 02A0                          ??_floorf 001E  
        colourcards_testing@R_rel 01B0                DCmotors_testing@mL 0028  
              DCmotors_testing@mR 002A                          ??_strcpy 0005  
                        ??_strlen 0003                         ___fladd@a 0005  
                       ___fladd@b 0001                         ___fldiv@a 0005  
                       ___fldiv@b 0001                         ___flmul@a 0005  
                       ___flmul@b 0001                         ___flsub@a 001E  
                       ___flsub@b 001A                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100                  ___aodiv@dividend 0001  
         __size_of_buggyLEDs_init 0016                 __size_of___xxtofl 01B4  
                       _atoi$3047 0010                         _atoi$3048 0014  
                       _atoi$3049 0012                         __pnvBANK0 00FB  
                     _efgtoa$2970 0062                       _efgtoa$2980 006A  
                     _efgtoa$2974 0064                       _efgtoa$2969 0060  
                     _efgtoa$2978 0066                       _efgtoa$2979 0068  
                       _dtoa$2945 002E                       _clear_lower 01FD  
                     _clear_upper 01FB                   ??_DCmotors_init 0001  
       __size_of_DCmotors_testing 0236                          ?___aodiv 0001  
                        ?___fladd 0001                          ?___aomod 0001  
                        ?___fldiv 0001                          ?___awdiv 0007  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 0001  
                        ?___flsub 001A                          ?___fltol 0001  
            I2C_2_Master_Read@ack 0003                 __size_of_vfprintf 0066  
               ??_DCmotors_setPWM 0011              I2C_2_Master_Read@tmp 0004  
                     __smallconst 0E00                          ?_forward 001A  
                        ?_isdigit 0001                 _I2C_2_Master_Idle 5922  
               _I2C_2_Master_Init 58F8                 _I2C_2_Master_Read 56F8  
               _I2C_2_Master_Stop 5A84                          ?_isspace 0001  
               __size_of_turnleft 0050                          ?_isupper 0001  
                    _RxBufReadCnt 00F9                          _ADC_init 59F2  
                        ?_reverse 001A                ?_I2C_2_Master_Idle 0001  
              ?_I2C_2_Master_Init 0001                ?_I2C_2_Master_Read 0001  
              ?_I2C_2_Master_Stop 0001                          ?_sprintf 00A0  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_right 00F6                    __size_of_putch 0002  
    __end_of_clicker2buttons_init 5A78                 _sendStringSerial4 58C8  
             ??_I2C_2_Master_Idle 0001               ??_I2C_2_Master_Init 0001  
             ??_I2C_2_Master_Read 0002                    ___wmul@product 0005  
                        _LATAbits 000F79               ??_I2C_2_Master_Stop 0002  
                        _LATCbits 000F7B                 _colourclickLEDs_C 5970  
                        _LATDbits 000F7C                          _LATEbits 000F7D  
                        _LATFbits 000F7E                          _LATGbits 000F7F  
                        _LATHbits 000F80                          _PIE0bits 000E29  
              ?_sendStringSerial4 0002                          _PIE4bits 000E2D  
              ?_colourclickLEDs_C 0001                          _PIR0bits 000E33  
                        _PIR4bits 000E37                 ??_sendCharSerial4 0001  
                        _SSP2CON2 000EDA               ??_sendStringSerial4 0004  
          DCmotors_setPWM@PWMduty 0018                          _SSP2STAT 000ED8  
             ??_colourclickLEDs_C 0001                 _colourclick_readB 552E  
               _colourclick_readC 54DE                 _colourclick_readG 548E  
               _colourclick_readR 543E                         _vfpfcnvrt 2264  
                      _ADCON0bits 000F60         __end_of_I2C_2_Master_Idle 594A  
       __end_of_I2C_2_Master_Init 5922         __end_of_I2C_2_Master_Read 573A  
               ___wmul@multiplier 0001                ?_colourclick_readB 0005  
              ?_colourclick_readC 0005                ?_colourclick_readG 0005  
              ?_colourclick_readR 0005         __end_of_I2C_2_Master_Stop 5A8E  
     I2C_2_Master_Write@data_byte 0002                      _TxBufReadCnt 00F7  
                    _isspace$3078 0007                        _CM1NCHbits 000ED2  
             ??_colourclick_readB 0007               ??_colourclick_readC 0007  
             ??_colourclick_readG 0007               ??_colourclick_readR 0007  
                      _CM1PCHbits 000ED3                        vfpfcnvrt@c 005F  
                      vfpfcnvrt@f 0058                     ??_USART4_init 0001  
                       copy_data0 51C2                         copy_data1 51E2  
       __end_of_sendStringSerial4 58F8       __size_of_I2C_2_Master_Start 000A  
            _colourclickLEDs_init 5A52       __size_of_I2C_2_Master_Write 000C  
                       _turnright 557E         __end_of_colourclickLEDs_C 5992  
                     turnleft@deg 0026         colourcards_testing@F14671 01DF  
       colourcards_testing@F14681 02A0         colourcards_testing@F14673 01EA  
       colourcards_testing@F14683 01D9         colourcards_testing@F14675 01D2  
       colourcards_testing@F14669 01EF         colourcards_testing@F14677 01E5  
       colourcards_testing@F14685 01BC         colourcards_testing@F14679 01CB  
  __size_of_I2C_2_Master_RepStart 000A     __end_of_I2C_2_Master_RepStart 5AA2  
                        __Hrparam 0000                       turnright@mL 0022  
                     turnright@mR 0024                        _ADC_getval 5A24  
    __end_of_colourclick_readRGBC 539A                        vfprintf@ap 009C  
                        __Lrparam 0000                        vfprintf@fp 0098  
       __end_of_colourclick_readB 557E         __end_of_colourclick_readC 552E  
       __end_of_colourclick_readG 54DE         __end_of_colourclick_readR 548E  
                       forward@mL 001A                         forward@mR 001C  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of___fldiv 039A  
                __size_of___awdiv 00C4                  __size_of___flneg 0038  
                __size_of___awmod 00B0                  __size_of___flmul 042A  
                __size_of___flsub 0046                  __size_of___fltol 0106  
                      ?_vfpfcnvrt 0040                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011               _colourcards_testing 1AAE  
                      _ANSELDbits 000EA7                ___fpclassifyf@F465 01F7  
                      _ANSELFbits 000EB4                        sprintf@fmt 00A2  
                        ___xxtofl 3DC6         colourcards_testing@colour 019F  
                  _buggyLEDs_init 5A3C                  __size_of_forward 009A  
                __size_of_isdigit 0038                  __size_of_isspace 0052  
                        __ptext10 4B6C                          __ptext11 42A6  
                        __ptext20 2842                          __ptext12 0E56  
                        __ptext21 57EA                          __ptext13 527E  
                        __ptext30 56B4                          __ptext22 2D02  
                        __ptext14 57B2                          __ptext31 4C4E  
                        __ptext23 4696                          __ptext15 52DE  
                        __ptext40 5A0C                          __ptext32 5AAC  
                        __ptext24 4F52                          __ptext16 39E0  
                        __ptext41 533C                          __ptext33 573A  
                        __ptext25 312C                          __ptext17 479A  
                        __ptext50 56F8                          __ptext42 543E  
                        __ptext34 442C                          __ptext26 4EA2  
                        __ptext18 4590                          __ptext51 5922  
                        __ptext43 548E                          __ptext35 411E  
                        __ptext27 34C6                          __ptext19 566E  
                        __ptext60 498E                          __ptext52 3DC6  
                        __ptext44 54DE                          __ptext36 3F7A  
                        __ptext28 4D18                          __ptext61 5130  
                        __ptext53 59B2                          __ptext45 552E  
                        __ptext37 53EC                          __ptext29 5892  
                        __ptext70 5A3C                          __ptext62 4FFC  
                        __ptext54 5A24                          __ptext46 5A60  
                        __ptext38 5822                          __ptext71 59F2  
                        __ptext63 5096                          __ptext55 59D2  
                        __ptext47 5A84                          __ptext39 58C8  
                        __ptext64 3BF2                          __ptext56 37AA  
                        __ptext48 5A8E                          __ptext65 594A  
                        __ptext57 557E                          __ptext49 5A98  
                        __ptext66 4DDE                          __ptext58 55CE  
                        __ptext67 561E                          __ptext59 4898  
                        __ptext68 5A6C                          __ptext69 5AA2  
                __size_of_isupper 0038         colourcards_testing@tmpval 00CA  
                __size_of_reverse 009A             ?_colourclickLEDs_init 0001  
                    _SSP2CON1bits 000ED9                      _SSP2CON2bits 000EDA  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                      ?_turnright 0022                        strcpy@dest 0001  
                __size_of_strncmp 00E2              colourcards_testing@B 01A8  
            colourcards_testing@C 01AC              colourcards_testing@G 01A4  
            colourcards_testing@R 01A0              ?_colourcards_testing 00CA  
                   __size_of_atoi 01A4                     __size_of_main 00E8  
                   __size_of_dtoa 02E4                     __size_of_left 00F6  
                   __size_of_stoa 0186                     __size_of_stop 007E  
             __end_of_USART4_init 59F2                         reverse@mL 001A  
                       reverse@mR 001C                  _interrupts_lower 00F2  
                        efgtoa@fp 002E                          efgtoa@ne 0070  
                        efgtoa@pp 006E                          efgtoa@ou 0074  
                _interrupts_upper 00FB                         stoa@F1163 01C4  
                        isa$xinst 000000                  _DCmotors_testing 37AA  
                      _RC4STAbits 000EE7                          _vfprintf 5218  
               ?_colourclick_init 0001                ??_colourclick_init 0005  
      __size_of_I2C_2_Master_Idle 0028        __size_of_I2C_2_Master_Init 002A  
      __size_of_I2C_2_Master_Read 0042                  ___aomod@dividend 0001  
                DCmotors_setPWM@m 000F              _clicker2buttons_init 5A6C  
      __size_of_I2C_2_Master_Stop 000A                          _turnleft 55CE  
                      turnleft@mL 0022                        turnleft@mR 0024  
          __end_of_buggyLEDs_init 5A52                    _vfpfcnvrt$3010 0056  
                  _vfpfcnvrt$3005 0054                        _INTCONbits 000FF2  
__size_of_colourclick_writetoaddr 0020    colourclick_writetoaddr@address 0004  
                        isdigit@c 0001                       _PWM6CONbits 000FA4  
      __size_of_sendStringSerial4 0030                       _PWM7CONbits 000FA1  
      __size_of_colourclickLEDs_C 0022                         sprintf@ap 00C2  
                    _DAC1CON0bits 000EC6                      _DAC1CON1bits 000EC7  
           ??_colourcards_testing 00CC                          isspace@c 0001  
                        right@deg 001E                         strcpy@src 0003  
                        isupper@c 0001                         strncmp@_l 0001  
                       strncmp@_r 0003                   _DCmotors_setPWM 3BF2  
                     ?_ADC_getval 0001                       efgtoa@nmode 0080  
      __size_of_colourclick_readB 0050        __size_of_colourclick_readC 0050  
      __size_of_colourclick_readG 0050        __size_of_colourclick_readR 0050  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 0046  
                        stoa@nuls 000F                   ___aomod@counter 0011  
           ?_clicker2buttons_init 0001                          sprintf@f 00C4  
                        tolower@c 0007                          sprintf@s 00A0  
                 ?_buggyLEDs_init 0001            __size_of___fpclassifyf 00FE  
                      _SSP2DATPPS 000E1D                        _SSP2CLKPPS 000E1C  
                        strncmp@l 0008                          strncmp@n 0005  
                        strncmp@r 000A                    _DCmotors_lower 00FE  
          ??_colourclickLEDs_init 0002                    _DCmotors_upper 00FD  
            _colourclick_readRGBC 533C                     ___fladd@signs 000D  
                     _USART4_init 59D2                        _TX4STAbits 000EE8  
                     ??_turnright 0028                      ___aodiv@sign 0012  
                 _sendCharSerial4 5A0C                      ___fladd@aexp 000E  
                    ___fladd@bexp 000F                      ___aomod@sign 0012  
