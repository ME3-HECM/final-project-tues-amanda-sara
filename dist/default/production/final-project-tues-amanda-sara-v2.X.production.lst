

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 15:35:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.20
    95                           ; Generated 05/05/2020 GMT
    96                           ; 
    97                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F67K40 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataBANK1
   130  00661E                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for stoa@F1163
   134  00661E  28                 	db	40
   135  00661F  6E                 	db	110
   136  006620  75                 	db	117
   137  006621  6C                 	db	108
   138  006622  6C                 	db	108
   139  006623  29                 	db	41
   140  006624  00                 	db	0
   141                           
   142                           	psect	nvBANK1
   143  0001D6                     __pnvBANK1:
   144                           	callstack 0
   145  0001D6                     _interrupts_upperbound:
   146                           	callstack 0
   147  0001D6                     	ds	2
   148  0001D8                     _DCmotors_turntime:
   149                           	callstack 0
   150  0001D8                     	ds	2
   151  0000                     _CM1CON1bits	set	3793
   152  0000                     _CM1CON0bits	set	3792
   153  0000                     _CM1PCHbits	set	3795
   154  0000                     _CM1NCHbits	set	3794
   155  0000                     _DAC1CON1bits	set	3783
   156  0000                     _DAC1CON0bits	set	3782
   157  0000                     _RC7PPS	set	3689
   158  0000                     _RE2PPS	set	3700
   159  0000                     _PIE4bits	set	3629
   160  0000                     _TX4REG	set	3812
   161  0000                     _RC4REG	set	3811
   162  0000                     _PIR4bits	set	3639
   163  0000                     _RC4STAbits	set	3815
   164  0000                     _SP4BRGH	set	3814
   165  0000                     _SP4BRGL	set	3813
   166  0000                     _TX4STAbits	set	3816
   167  0000                     _BAUD4CONbits	set	3817
   168  0000                     _RX4PPS	set	3605
   169  0000                     _RC0PPS	set	3682
   170  0000                     _SSP2BUF	set	3797
   171  0000                     _SSP2CON2bits	set	3802
   172  0000                     _SSP2CON2	set	3802
   173  0000                     _SSP2STAT	set	3800
   174  0000                     _RD6PPS	set	3696
   175  0000                     _RD5PPS	set	3695
   176  0000                     _SSP2CLKPPS	set	3612
   177  0000                     _SSP2DATPPS	set	3613
   178  0000                     _ANSELDbits	set	3751
   179  0000                     _SSP2ADD	set	3798
   180  0000                     _SSP2CON1bits	set	3801
   181  0000                     _ANSELFbits	set	3764
   182  0000                     _PIR0bits	set	3635
   183  0000                     _PIE0bits	set	3625
   184  0000                     _ADPCH	set	3935
   185  0000                     _ADREFbits	set	3928
   186  0000                     _PWM7CONbits	set	4001
   187  0000                     _PWM6CONbits	set	4004
   188  0000                     _LATCbits	set	3963
   189  0000                     _LATEbits	set	3965
   190  0000                     _TRISEbits	set	3973
   191  0000                     _T2PR	set	4028
   192  0000                     _T2CLKCONbits	set	4031
   193  0000                     _T2HLTbits	set	4030
   194  0000                     _T2CONbits	set	4029
   195  0000                     _TRISCbits	set	3971
   196  0000                     _TRISAbits	set	3969
   197  0000                     _TRISGbits	set	3975
   198  0000                     _TRISHbits	set	3976
   199  0000                     _TRISDbits	set	3972
   200  0000                     _ADRESH	set	3940
   201  0000                     _ADCON0bits	set	3936
   202  0000                     _TRISFbits	set	3974
   203  0000                     _LATFbits	set	3966
   204  0000                     _LATAbits	set	3961
   205  0000                     _LATGbits	set	3967
   206  0000                     _INTCONbits	set	4082
   207  0000                     _LATHbits	set	3968
   208  0000                     _LATDbits	set	3964
   209  0000                     _PORTFbits	set	3982
   210  0000                     _LATG	set	3967
   211  0000                     _PWM7DCH	set	4000
   212  0000                     _LATE	set	3965
   213  0000                     _PWM6DCH	set	4003
   214                           
   215                           	psect	smallconst
   216  000E00                     __psmallconst:
   217                           	callstack 0
   218  000E00  00                 	db	0
   219  000E01                     STR_1:
   220                           
   221                           ; BSR set to: 15
   222  000E01  52                 	db	82	;'R'
   223  000E02  47                 	db	71	;'G'
   224  000E03  42                 	db	66	;'B'
   225  000E04  43                 	db	67	;'C'
   226  000E05  3A                 	db	58	;':'
   227  000E06  20                 	db	32
   228  000E07  25                 	db	37
   229  000E08  69                 	db	105	;'i'
   230  000E09  20                 	db	32
   231  000E0A  25                 	db	37
   232  000E0B  69                 	db	105	;'i'
   233  000E0C  20                 	db	32
   234  000E0D  25                 	db	37
   235  000E0E  69                 	db	105	;'i'
   236  000E0F  20                 	db	32
   237  000E10  25                 	db	37
   238  000E11  69                 	db	105	;'i'
   239  000E12  20                 	db	32
   240  000E13  20                 	db	32
   241  000E14  20                 	db	32
   242  000E15  20                 	db	32
   243  000E16  20                 	db	32
   244  000E17  52                 	db	82	;'R'
   245  000E18  47                 	db	71	;'G'
   246  000E19  42                 	db	66	;'B'
   247  000E1A  43                 	db	67	;'C'
   248  000E1B  5F                 	db	95	;'_'
   249  000E1C  72                 	db	114	;'r'
   250  000E1D  65                 	db	101	;'e'
   251  000E1E  6C                 	db	108	;'l'
   252  000E1F  3A                 	db	58	;':'
   253  000E20  20                 	db	32
   254  000E21  25                 	db	37
   255  000E22  2E                 	db	46
   256  000E23  33                 	db	51	;'3'
   257  000E24  66                 	db	102	;'f'
   258  000E25  20                 	db	32
   259  000E26  25                 	db	37
   260  000E27  2E                 	db	46
   261  000E28  33                 	db	51	;'3'
   262  000E29  66                 	db	102	;'f'
   263  000E2A  20                 	db	32
   264  000E2B  25                 	db	37
   265  000E2C  2E                 	db	46
   266  000E2D  33                 	db	51	;'3'
   267  000E2E  66                 	db	102	;'f'
   268  000E2F  20                 	db	32
   269  000E30  20                 	db	32
   270  000E31  20                 	db	32
   271  000E32  20                 	db	32
   272  000E33  20                 	db	32
   273  000E34  43                 	db	67	;'C'
   274  000E35  6F                 	db	111	;'o'
   275  000E36  6C                 	db	108	;'l'
   276  000E37  6F                 	db	111	;'o'
   277  000E38  75                 	db	117	;'u'
   278  000E39  72                 	db	114	;'r'
   279  000E3A  3A                 	db	58	;':'
   280  000E3B  20                 	db	32
   281  000E3C  25                 	db	37
   282  000E3D  73                 	db	115	;'s'
   283  000E3E  0A                 	db	10
   284  000E3F  0D                 	db	13
   285  000E40  00                 	db	0
   286  000E41                     STR_19:
   287                           
   288                           ; BSR set to: 15
   289  000E41  52                 	db	82	;'R'
   290  000E42  47                 	db	71	;'G'
   291  000E43  42                 	db	66	;'B'
   292  000E44  43                 	db	67	;'C'
   293  000E45  3A                 	db	58	;':'
   294  000E46  20                 	db	32
   295  000E47  25                 	db	37
   296  000E48  69                 	db	105	;'i'
   297  000E49  20                 	db	32
   298  000E4A  25                 	db	37
   299  000E4B  69                 	db	105	;'i'
   300  000E4C  20                 	db	32
   301  000E4D  25                 	db	37
   302  000E4E  69                 	db	105	;'i'
   303  000E4F  20                 	db	32
   304  000E50  25                 	db	37
   305  000E51  69                 	db	105	;'i'
   306  000E52  20                 	db	32
   307  000E53  20                 	db	32
   308  000E54  20                 	db	32
   309  000E55  20                 	db	32
   310  000E56  20                 	db	32
   311  000E57  54                 	db	84	;'T'
   312  000E58  68                 	db	104	;'h'
   313  000E59  72                 	db	114	;'r'
   314  000E5A  65                 	db	101	;'e'
   315  000E5B  73                 	db	115	;'s'
   316  000E5C  68                 	db	104	;'h'
   317  000E5D  6F                 	db	111	;'o'
   318  000E5E  6C                 	db	108	;'l'
   319  000E5F  64                 	db	100	;'d'
   320  000E60  3A                 	db	58	;':'
   321  000E61  20                 	db	32
   322  000E62  25                 	db	37
   323  000E63  69                 	db	105	;'i'
   324  000E64  20                 	db	32
   325  000E65  25                 	db	37
   326  000E66  69                 	db	105	;'i'
   327  000E67  20                 	db	32
   328  000E68  25                 	db	37
   329  000E69  69                 	db	105	;'i'
   330  000E6A  0A                 	db	10
   331  000E6B  0D                 	db	13
   332  000E6C  00                 	db	0
   333  000E6D                     STR_14:
   334                           
   335                           ; BSR set to: 15
   336  000E6D  6C                 	db	108	;'l'
   337  000E6E  69                 	db	105	;'i'
   338  000E6F  67                 	db	103	;'g'
   339  000E70  68                 	db	104	;'h'
   340  000E71  74                 	db	116	;'t'
   341  000E72  20                 	db	32
   342  000E73  62                 	db	98	;'b'
   343  000E74  6C                 	db	108	;'l'
   344  000E75  75                 	db	117	;'u'
   345  000E76  65                 	db	101	;'e'
   346  000E77  00                 	db	0
   347  000E78                     STR_18:
   348                           
   349                           ; BSR set to: 15
   350  000E78  75                 	db	117	;'u'
   351  000E79  6E                 	db	110	;'n'
   352  000E7A  6B                 	db	107	;'k'
   353  000E7B  6E                 	db	110	;'n'
   354  000E7C  6F                 	db	111	;'o'
   355  000E7D  77                 	db	119	;'w'
   356  000E7E  6E                 	db	110	;'n'
   357  000E7F  00                 	db	0
   358  000E80                     STR_12:
   359                           
   360                           ; BSR set to: 15
   361  000E80  6F                 	db	111	;'o'
   362  000E81  72                 	db	114	;'r'
   363  000E82  61                 	db	97	;'a'
   364  000E83  6E                 	db	110	;'n'
   365  000E84  67                 	db	103	;'g'
   366  000E85  65                 	db	101	;'e'
   367  000E86  00                 	db	0
   368  000E87                     STR_8:
   369                           
   370                           ; BSR set to: 15
   371  000E87  79                 	db	121	;'y'
   372  000E88  65                 	db	101	;'e'
   373  000E89  6C                 	db	108	;'l'
   374  000E8A  6C                 	db	108	;'l'
   375  000E8B  6F                 	db	111	;'o'
   376  000E8C  77                 	db	119	;'w'
   377  000E8D  00                 	db	0
   378  000E8E                     STR_16:
   379                           
   380                           ; BSR set to: 15
   381  000E8E  77                 	db	119	;'w'
   382  000E8F  68                 	db	104	;'h'
   383  000E90  69                 	db	105	;'i'
   384  000E91  74                 	db	116	;'t'
   385  000E92  65                 	db	101	;'e'
   386  000E93  00                 	db	0
   387  000E94                     STR_4:
   388                           
   389                           ; BSR set to: 15
   390  000E94  67                 	db	103	;'g'
   391  000E95  72                 	db	114	;'r'
   392  000E96  65                 	db	101	;'e'
   393  000E97  65                 	db	101	;'e'
   394  000E98  6E                 	db	110	;'n'
   395  000E99  00                 	db	0
   396  000E9A                     STR_10:
   397                           
   398                           ; BSR set to: 15
   399  000E9A  70                 	db	112	;'p'
   400  000E9B  69                 	db	105	;'i'
   401  000E9C  6E                 	db	110	;'n'
   402  000E9D  6B                 	db	107	;'k'
   403  000E9E  00                 	db	0
   404  000E9F                     STR_20:
   405                           
   406                           ; BSR set to: 15
   407  000E9F  49                 	db	73	;'I'
   408  000EA0  4E                 	db	78	;'N'
   409  000EA1  46                 	db	70	;'F'
   410  000EA2  00                 	db	0
   411  000EA3                     STR_24:
   412                           
   413                           ; BSR set to: 15
   414  000EA3  4E                 	db	78	;'N'
   415  000EA4  41                 	db	65	;'A'
   416  000EA5  4E                 	db	78	;'N'
   417  000EA6  00                 	db	0
   418  000EA7                     STR_21:
   419                           
   420                           ; BSR set to: 15
   421  000EA7  69                 	db	105	;'i'
   422  000EA8  6E                 	db	110	;'n'
   423  000EA9  66                 	db	102	;'f'
   424  000EAA  00                 	db	0
   425  000EAB                     STR_25:
   426                           
   427                           ; BSR set to: 15
   428  000EAB  6E                 	db	110	;'n'
   429  000EAC  61                 	db	97	;'a'
   430  000EAD  6E                 	db	110	;'n'
   431  000EAE  00                 	db	0
   432  000EAF                     STR_2:
   433                           
   434                           ; BSR set to: 15
   435  000EAF  72                 	db	114	;'r'
   436  000EB0  65                 	db	101	;'e'
   437  000EB1  64                 	db	100	;'d'
   438  000EB2  00                 	db	0
   439  000EB3                     STR_28:
   440                           
   441                           ; BSR set to: 15
   442  000EB3  6C                 	db	108	;'l'
   443  000EB4  66                 	db	102	;'f'
   444  000EB5  00                 	db	0
   445  000EB6  00                 	db	0	; dummy byte at the end
   446  0000                     
   447                           ; #config settings
   448                           
   449                           	psect	cinit
   450  006328                     __pcinit:
   451                           	callstack 0
   452  006328                     start_initialization:
   453                           	callstack 0
   454  006328                     __initialization:
   455                           	callstack 0
   456                           
   457                           ; Initialize objects allocated to BANK1 (7 bytes)
   458                           ; load TBLPTR registers with __pidataBANK1
   459  006328  0E1E               	movlw	low __pidataBANK1
   460  00632A  6EF6               	movwf	tblptrl,c
   461  00632C  0E66               	movlw	high __pidataBANK1
   462  00632E  6EF7               	movwf	tblptrh,c
   463  006330  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   464  006332  6EF8               	movwf	tblptru,c
   465  006334  EE01  F0CF         	lfsr	0,__pdataBANK1
   466  006338  EE10 F007          	lfsr	1,7
   467  00633C                     copy_data0:
   468  00633C  0009               	tblrd		*+
   469  00633E  CFF5 FFEE          	movff	tablat,postinc0
   470  006342  50E5               	movf	postdec1,w,c
   471  006344  50E1               	movf	fsr1l,w,c
   472  006346  E1FA               	bnz	copy_data0
   473                           
   474                           ; Clear objects allocated to BANK2 (60 bytes)
   475  006348  EE02  F000         	lfsr	0,__pbssBANK2
   476  00634C  0E3C               	movlw	60
   477  00634E                     clear_0:
   478  00634E  6AEE               	clrf	postinc0,c
   479  006350  06E8               	decf	wreg,f,c
   480  006352  E1FD               	bnz	clear_0
   481                           
   482                           ; Clear objects allocated to BANK1 (129 bytes)
   483  006354  EE01  F000         	lfsr	0,__pbssBANK1
   484  006358  0E81               	movlw	129
   485  00635A                     clear_1:
   486  00635A  6AEE               	clrf	postinc0,c
   487  00635C  06E8               	decf	wreg,f,c
   488  00635E  E1FD               	bnz	clear_1
   489  006360                     end_of_initialization:
   490                           	callstack 0
   491  006360                     __end_of__initialization:
   492                           	callstack 0
   493  006360  0100               	movlb	0
   494  006362  EF34  F028         	goto	_main	;jump to C main() function
   495                           
   496                           	psect	bssBANK1
   497  000100                     __pbssBANK1:
   498                           	callstack 0
   499  000100                     _EUSART4RXbuf:
   500                           	callstack 0
   501  000100                     	ds	20
   502  000114                     floorf@F527:
   503                           	callstack 0
   504  000114                     	ds	4
   505  000118                     ___fpclassifyf@F465:
   506                           	callstack 0
   507  000118                     	ds	4
   508  00011C                     _nout:
   509                           	callstack 0
   510  00011C                     	ds	2
   511  00011E                     _width:
   512                           	callstack 0
   513  00011E                     	ds	2
   514  000120                     _prec:
   515                           	callstack 0
   516  000120                     	ds	2
   517  000122                     _flags:
   518                           	callstack 0
   519  000122                     	ds	2
   520  000124                     _clear_upper:
   521                           	callstack 0
   522  000124                     	ds	2
   523  000126                     _clear_lower:
   524                           	callstack 0
   525  000126                     	ds	2
   526  000128                     _interrupts_lowerbound:
   527                           	callstack 0
   528  000128                     	ds	2
   529  00012A                     _returnhome_flag:
   530                           	callstack 0
   531  00012A                     	ds	1
   532  00012B                     _unknowncard_flag:
   533                           	callstack 0
   534  00012B                     	ds	1
   535  00012C                     _colourcard_flag:
   536                           	callstack 0
   537  00012C                     	ds	1
   538  00012D                     _TxBufReadCnt:
   539                           	callstack 0
   540  00012D                     	ds	1
   541  00012E                     _TxBufWriteCnt:
   542                           	callstack 0
   543  00012E                     	ds	1
   544  00012F                     _RxBufReadCnt:
   545                           	callstack 0
   546  00012F                     	ds	1
   547  000130                     _RxBufWriteCnt:
   548                           	callstack 0
   549  000130                     	ds	1
   550  000131                     _dbuf:
   551                           	callstack 0
   552  000131                     	ds	80
   553                           
   554                           	psect	dataBANK1
   555  0001CF                     __pdataBANK1:
   556                           	callstack 0
   557  0001CF                     stoa@F1163:
   558                           	callstack 0
   559  0001CF                     	ds	7
   560                           
   561                           	psect	bssBANK2
   562  000200                     __pbssBANK2:
   563                           	callstack 0
   564  000200                     _EUSART4TXbuf:
   565                           	callstack 0
   566  000200                     	ds	60
   567                           
   568                           	psect	cstackBANK1
   569  000181                     __pcstackBANK1:
   570                           	callstack 0
   571  000181                     colourclick_testing@buf:
   572                           	callstack 0
   573                           
   574                           ; 40 bytes @ 0x0
   575  000181                     	ds	40
   576  0001A9                     colourclick_testing@ambient:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x28
   580  0001A9                     	ds	2
   581  0001AB                     colourclick_testing@R:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2A
   585  0001AB                     	ds	2
   586  0001AD                     colourclick_testing@G:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x2C
   590  0001AD                     	ds	2
   591  0001AF                     colourclick_testing@B:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x2E
   595  0001AF                     	ds	2
   596  0001B1                     colourclick_testing@C:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x30
   600  0001B1                     	ds	2
   601  0001B3                     ??_main:
   602                           
   603                           ; 1 bytes @ 0x32
   604  0001B3                     	ds	2
   605  0001B5                     main@current:
   606                           	callstack 0
   607                           
   608                           ; 8 bytes @ 0x34
   609  0001B5                     	ds	8
   610  0001BD                     main@motorL:
   611                           	callstack 0
   612                           
   613                           ; 9 bytes @ 0x3C
   614  0001BD                     	ds	9
   615  0001C6                     main@motorR:
   616                           	callstack 0
   617                           
   618                           ; 9 bytes @ 0x45
   619  0001C6                     	ds	9
   620                           
   621                           	psect	cstackBANK0
   622  000060                     __pcstackBANK0:
   623                           	callstack 0
   624  000060                     _efgtoa$3026:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x0
   628  000060                     	ds	2
   629  000062                     _efgtoa$3027:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2
   633  000062                     	ds	2
   634  000064                     _efgtoa$3031:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x4
   638  000064                     	ds	2
   639  000066                     _efgtoa$3035:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x6
   643  000066                     	ds	2
   644  000068                     _efgtoa$3036:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x8
   648  000068                     	ds	2
   649  00006A                     _efgtoa$3037:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0xA
   653  00006A                     	ds	2
   654  00006C                     efgtoa@t:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0xC
   658  00006C                     	ds	2
   659  00006E                     efgtoa@pp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0xE
   663  00006E                     	ds	2
   664  000070                     efgtoa@ne:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x10
   668  000070                     	ds	2
   669  000072                     efgtoa@m:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x12
   673  000072                     	ds	2
   674  000074                     efgtoa@ou:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x14
   678  000074                     	ds	4
   679  000078                     efgtoa@d:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x18
   683  000078                     	ds	2
   684  00007A                     efgtoa@sign:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1A
   688  00007A                     	ds	2
   689  00007C                     efgtoa@p:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x1C
   693  00007C                     	ds	2
   694  00007E                     efgtoa@w:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x1E
   698  00007E                     	ds	2
   699  000080                     efgtoa@nmode:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x20
   703  000080                     	ds	1
   704  000081                     efgtoa@mode:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x21
   708  000081                     	ds	1
   709  000082                     efgtoa@h:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x22
   713  000082                     	ds	4
   714  000086                     efgtoa@l:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x26
   718  000086                     	ds	4
   719  00008A                     efgtoa@i:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x2A
   723  00008A                     	ds	2
   724  00008C                     efgtoa@g:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x2C
   728  00008C                     	ds	4
   729  000090                     efgtoa@e:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x30
   733  000090                     	ds	2
   734  000092                     efgtoa@n:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x32
   738  000092                     	ds	2
   739  000094                     efgtoa@u:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x34
   743  000094                     	ds	4
   744  000098                     vfpfcnvrt@ll:
   745                           	callstack 0
   746                           
   747                           ; 8 bytes @ 0x38
   748  000098                     	ds	8
   749  0000A0                     vfpfcnvrt@cp:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x40
   753  0000A0                     	ds	2
   754  0000A2                     _vfpfcnvrt$3062:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x42
   758  0000A2                     	ds	2
   759  0000A4                     _vfpfcnvrt$3067:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x44
   763  0000A4                     	ds	2
   764  0000A6                     vfpfcnvrt@f:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x46
   768  0000A6                     	ds	4
   769  0000AA                     vfpfcnvrt@ct:
   770                           	callstack 0
   771                           
   772                           ; 3 bytes @ 0x4A
   773  0000AA                     	ds	3
   774  0000AD                     vfpfcnvrt@c:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x4D
   778  0000AD                     	ds	1
   779  0000AE                     ?_sprintf:
   780                           	callstack 0
   781  0000AE                     sprintf@s:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x4E
   785  0000AE                     	ds	2
   786  0000B0                     sprintf@fmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x50
   790  0000B0                     	ds	24
   791  0000C8                     sprintf@ap:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x68
   795  0000C8                     	ds	2
   796  0000CA                     sprintf@f:
   797                           	callstack 0
   798                           
   799                           ; 6 bytes @ 0x6A
   800  0000CA                     	ds	6
   801  0000D0                     ??_colourclick_calibration:
   802  0000D0                     colourcards_testingRGBC@buf:
   803                           	callstack 0
   804                           
   805                           ; 20 bytes @ 0x70
   806  0000D0                     	ds	2
   807  0000D2                     colourclick_calibration@i:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x72
   811  0000D2                     	ds	1
   812  0000D3                     colourclick_calibration@initial:
   813                           	callstack 0
   814                           
   815                           ; 8 bytes @ 0x73
   816  0000D3                     	ds	8
   817  0000DB                     colourclick_calibration@current:
   818                           	callstack 0
   819                           
   820                           ; 8 bytes @ 0x7B
   821  0000DB                     	ds	9
   822  0000E4                     colourcards_testingRGBC@tmpval:
   823                           	callstack 0
   824                           
   825                           ; 8 bytes @ 0x84
   826  0000E4                     	ds	8
   827  0000EC                     colourcards_testingRGBC@R:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x8C
   831  0000EC                     	ds	2
   832  0000EE                     colourcards_testingRGBC@G:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x8E
   836  0000EE                     	ds	2
   837  0000F0                     colourcards_testingRGBC@B:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x90
   841  0000F0                     	ds	2
   842  0000F2                     colourcards_testingRGBC@C:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x92
   846  0000F2                     	ds	2
   847  0000F4                     colourcards_testingRGBC@R_rel:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x94
   851  0000F4                     	ds	4
   852  0000F8                     colourcards_testingRGBC@G_rel:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x98
   856  0000F8                     	ds	4
   857  0000FC                     colourcards_testingRGBC@B_rel:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x9C
   861  0000FC                     	ds	4
   862                           
   863                           	psect	cstackCOMRAM
   864  000001                     __pcstackCOMRAM:
   865                           	callstack 0
   866  000001                     ??_I2C_2_Master_Idle:
   867  000001                     ?_strlen:
   868                           	callstack 0
   869  000001                     ?___fpclassifyf:
   870                           	callstack 0
   871  000001                     ?_isupper:
   872                           	callstack 0
   873  000001                     ?_isdigit:
   874                           	callstack 0
   875  000001                     ?_strncmp:
   876                           	callstack 0
   877  000001                     ?_isspace:
   878                           	callstack 0
   879  000001                     ?___wmul:
   880                           	callstack 0
   881  000001                     ?___awmod:
   882                           	callstack 0
   883  000001                     ?___fladd:
   884                           	callstack 0
   885  000001                     ?___flmul:
   886                           	callstack 0
   887  000001                     ?___flneg:
   888                           	callstack 0
   889  000001                     ?___fltol:
   890                           	callstack 0
   891  000001                     ?___xxtofl:
   892                           	callstack 0
   893  000001                     ?___aodiv:
   894                           	callstack 0
   895  000001                     ?___aomod:
   896                           	callstack 0
   897  000001                     ADC_getval@tmpval:
   898                           	callstack 0
   899  000001                     colourclickLEDs_C@tog:
   900                           	callstack 0
   901  000001                     sendCharSerial4@charToSend:
   902                           	callstack 0
   903  000001                     DCmotors_init@PWMperiod:
   904                           	callstack 0
   905  000001                     ___wmul@multiplier:
   906                           	callstack 0
   907  000001                     ___awmod@dividend:
   908                           	callstack 0
   909  000001                     isdigit@c:
   910                           	callstack 0
   911  000001                     isspace@c:
   912                           	callstack 0
   913  000001                     isupper@c:
   914                           	callstack 0
   915  000001                     fputc@c:
   916                           	callstack 0
   917  000001                     strcpy@dest:
   918                           	callstack 0
   919  000001                     strlen@s:
   920                           	callstack 0
   921  000001                     strncmp@_l:
   922                           	callstack 0
   923  000001                     ___fleq@ff1:
   924                           	callstack 0
   925  000001                     ___flneg@f1:
   926                           	callstack 0
   927  000001                     ___fltol@f1:
   928                           	callstack 0
   929  000001                     ___fladd@b:
   930                           	callstack 0
   931  000001                     ___flmul@b:
   932                           	callstack 0
   933  000001                     ___xxtofl@val:
   934                           	callstack 0
   935  000001                     ___fpclassifyf@x:
   936                           	callstack 0
   937  000001                     ___aodiv@dividend:
   938                           	callstack 0
   939  000001                     ___aomod@dividend:
   940                           	callstack 0
   941                           
   942                           ; 8 bytes @ 0x0
   943  000001                     	ds	1
   944  000002                     ??_I2C_2_Master_Read:
   945  000002                     I2C_2_Master_Write@data_byte:
   946                           	callstack 0
   947  000002                     checkbatterylevel@batterylevel:
   948                           	callstack 0
   949  000002                     sendStringSerial4@string:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x1
   953  000002                     	ds	1
   954  000003                     ??_isupper:
   955  000003                     ??_isdigit:
   956  000003                     ??_isspace:
   957  000003                     colourclick_writetoaddr@value:
   958                           	callstack 0
   959  000003                     I2C_2_Master_Read@ack:
   960                           	callstack 0
   961  000003                     ___wmul@multiplicand:
   962                           	callstack 0
   963  000003                     ___awmod@divisor:
   964                           	callstack 0
   965  000003                     fputc@fp:
   966                           	callstack 0
   967  000003                     strcpy@src:
   968                           	callstack 0
   969  000003                     strlen@a:
   970                           	callstack 0
   971  000003                     strncmp@_r:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x2
   975  000003                     	ds	1
   976  000004                     colourclick_writetoaddr@address:
   977                           	callstack 0
   978  000004                     I2C_2_Master_Read@tmp:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x3
   982  000004                     	ds	1
   983  000005                     ??_colourclick_init:
   984  000005                     ??_fputc:
   985  000005                     ??___fpclassifyf:
   986  000005                     ??_strcpy:
   987  000005                     ??___fltol:
   988  000005                     ??___xxtofl:
   989  000005                     ?_colourclick_readR:
   990                           	callstack 0
   991  000005                     ?_colourclick_readG:
   992                           	callstack 0
   993  000005                     ?_colourclick_readB:
   994                           	callstack 0
   995  000005                     ?_colourclick_readC:
   996                           	callstack 0
   997  000005                     ___awmod@counter:
   998                           	callstack 0
   999  000005                     ___wmul@product:
  1000                           	callstack 0
  1001  000005                     strncmp@n:
  1002                           	callstack 0
  1003  000005                     ___fleq@ff2:
  1004                           	callstack 0
  1005  000005                     ___fladd@a:
  1006                           	callstack 0
  1007  000005                     ___flmul@a:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x4
  1011  000005                     	ds	1
  1012  000006                     ___awmod@sign:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x5
  1016  000006                     	ds	1
  1017  000007                     ??_strncmp:
  1018  000007                     ??_colourclick_readR:
  1019  000007                     ??_colourclick_readG:
  1020  000007                     ??_colourclick_readB:
  1021  000007                     ??_colourclick_readC:
  1022  000007                     ?_tolower:
  1023                           	callstack 0
  1024  000007                     ?___awdiv:
  1025                           	callstack 0
  1026  000007                     _isspace$3135:
  1027                           	callstack 0
  1028  000007                     ___awdiv@dividend:
  1029                           	callstack 0
  1030  000007                     strcpy@s:
  1031                           	callstack 0
  1032  000007                     tolower@c:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x6
  1036  000007                     	ds	1
  1037  000008                     ?_atoi:
  1038                           	callstack 0
  1039  000008                     atoi@s:
  1040                           	callstack 0
  1041  000008                     strncmp@l:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x7
  1045  000008                     	ds	1
  1046  000009                     ??___fladd:
  1047  000009                     ??___flmul:
  1048  000009                     ??_tolower:
  1049  000009                     ??___fleq:
  1050  000009                     ___fltol@sign1:
  1051                           	callstack 0
  1052  000009                     ___xxtofl@sign:
  1053                           	callstack 0
  1054  000009                     ___awdiv@divisor:
  1055                           	callstack 0
  1056  000009                     ___fpclassifyf@e:
  1057                           	callstack 0
  1058  000009                     strcpy@d:
  1059                           	callstack 0
  1060  000009                     ___aodiv@divisor:
  1061                           	callstack 0
  1062  000009                     ___aomod@divisor:
  1063                           	callstack 0
  1064                           
  1065                           ; 8 bytes @ 0x8
  1066  000009                     	ds	1
  1067  00000A                     ??_atoi:
  1068  00000A                     ?_stoa:
  1069                           	callstack 0
  1070  00000A                     ___fltol@exp1:
  1071                           	callstack 0
  1072  00000A                     ___xxtofl@exp:
  1073                           	callstack 0
  1074  00000A                     colourclick_readR@tmp:
  1075                           	callstack 0
  1076  00000A                     colourclick_readG@tmp:
  1077                           	callstack 0
  1078  00000A                     colourclick_readB@tmp:
  1079                           	callstack 0
  1080  00000A                     colourclick_readC@tmp:
  1081                           	callstack 0
  1082  00000A                     stoa@fp:
  1083                           	callstack 0
  1084  00000A                     fputs@s:
  1085                           	callstack 0
  1086  00000A                     strncmp@r:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x9
  1090  00000A                     	ds	1
  1091  00000B                     ___awdiv@counter:
  1092                           	callstack 0
  1093  00000B                     ___xxtofl@arg:
  1094                           	callstack 0
  1095  00000B                     ___fpclassifyf@u:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0xA
  1099  00000B                     	ds	1
  1100  00000C                     ___awdiv@sign:
  1101                           	callstack 0
  1102  00000C                     colourclick_readRGBC@tmpval:
  1103                           	callstack 0
  1104  00000C                     stoa@s:
  1105                           	callstack 0
  1106  00000C                     fputs@fp:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0xB
  1110  00000C                     	ds	1
  1111  00000D                     ___fladd@signs:
  1112                           	callstack 0
  1113  00000D                     ___flmul@sign:
  1114                           	callstack 0
  1115  00000D                     ___awdiv@quotient:
  1116                           	callstack 0
  1117  00000D                     _tolower$3198:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0xC
  1121  00000D                     	ds	1
  1122  00000E                     ??_stoa:
  1123  00000E                     ___fladd@aexp:
  1124                           	callstack 0
  1125  00000E                     fputs@c:
  1126                           	callstack 0
  1127  00000E                     atoi@neg:
  1128                           	callstack 0
  1129  00000E                     ___flmul@grs:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0xD
  1133  00000E                     	ds	1
  1134  00000F                     ?___fldiv:
  1135                           	callstack 0
  1136  00000F                     ___fladd@bexp:
  1137                           	callstack 0
  1138  00000F                     DCmotors_setPWM@m:
  1139                           	callstack 0
  1140  00000F                     fputs@i:
  1141                           	callstack 0
  1142  00000F                     ___fldiv@b:
  1143                           	callstack 0
  1144  00000F                     stoa@nuls:
  1145                           	callstack 0
  1146                           
  1147                           ; 7 bytes @ 0xE
  1148  00000F                     	ds	1
  1149  000010                     ___fladd@grs:
  1150                           	callstack 0
  1151  000010                     _atoi$3104:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0xF
  1155  000010                     	ds	1
  1156  000011                     ??_DCmotors_setPWM:
  1157  000011                     ?_pad:
  1158                           	callstack 0
  1159  000011                     ___aodiv@counter:
  1160                           	callstack 0
  1161  000011                     ___aomod@counter:
  1162                           	callstack 0
  1163  000011                     pad@fp:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x10
  1167  000011                     	ds	1
  1168  000012                     ___aodiv@sign:
  1169                           	callstack 0
  1170  000012                     ___aomod@sign:
  1171                           	callstack 0
  1172  000012                     ___flmul@aexp:
  1173                           	callstack 0
  1174  000012                     _atoi$3106:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x11
  1178  000012                     	ds	1
  1179  000013                     ?_abs:
  1180                           	callstack 0
  1181  000013                     ___flmul@bexp:
  1182                           	callstack 0
  1183  000013                     pad@buf:
  1184                           	callstack 0
  1185  000013                     abs@a:
  1186                           	callstack 0
  1187  000013                     ___fldiv@a:
  1188                           	callstack 0
  1189  000013                     ___aodiv@quotient:
  1190                           	callstack 0
  1191                           
  1192                           ; 8 bytes @ 0x12
  1193  000013                     	ds	1
  1194  000014                     _atoi$3105:
  1195                           	callstack 0
  1196  000014                     ___flmul@prod:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x13
  1200  000014                     	ds	1
  1201  000015                     ??_abs:
  1202  000015                     pad@p:
  1203                           	callstack 0
  1204  000015                     atoi@n:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x14
  1208  000015                     	ds	1
  1209  000016                     stoa@i:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x15
  1213  000016                     	ds	1
  1214  000017                     ??___fldiv:
  1215  000017                     ??_pad:
  1216                           
  1217                           ; 1 bytes @ 0x16
  1218  000017                     	ds	1
  1219  000018                     DCmotors_setPWM@PWMduty:
  1220                           	callstack 0
  1221  000018                     ___flmul@temp:
  1222                           	callstack 0
  1223  000018                     pad@i:
  1224                           	callstack 0
  1225  000018                     stoa@w:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x17
  1229  000018                     	ds	2
  1230  00001A                     ?___flsub:
  1231                           	callstack 0
  1232  00001A                     forward@mL:
  1233                           	callstack 0
  1234  00001A                     reverse@mL:
  1235                           	callstack 0
  1236  00001A                     stop@mL:
  1237                           	callstack 0
  1238  00001A                     left@mL:
  1239                           	callstack 0
  1240  00001A                     right@mL:
  1241                           	callstack 0
  1242  00001A                     pad@w:
  1243                           	callstack 0
  1244  00001A                     stoa@cp:
  1245                           	callstack 0
  1246  00001A                     ___flge@ff1:
  1247                           	callstack 0
  1248  00001A                     ___flsub@b:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x19
  1252  00001A                     	ds	1
  1253  00001B                     ___fldiv@rem:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x1A
  1257  00001B                     	ds	1
  1258  00001C                     ?_dtoa:
  1259                           	callstack 0
  1260  00001C                     forward@mR:
  1261                           	callstack 0
  1262  00001C                     reverse@mR:
  1263                           	callstack 0
  1264  00001C                     stop@mR:
  1265                           	callstack 0
  1266  00001C                     left@mR:
  1267                           	callstack 0
  1268  00001C                     right@mR:
  1269                           	callstack 0
  1270  00001C                     dtoa@fp:
  1271                           	callstack 0
  1272  00001C                     stoa@p:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x1B
  1276  00001C                     	ds	2
  1277  00001E                     ??_forward:
  1278  00001E                     ??_reverse:
  1279  00001E                     ??_stop:
  1280  00001E                     left@deg:
  1281                           	callstack 0
  1282  00001E                     right@deg:
  1283                           	callstack 0
  1284  00001E                     stoa@l:
  1285                           	callstack 0
  1286  00001E                     ___flge@ff2:
  1287                           	callstack 0
  1288  00001E                     ___flsub@a:
  1289                           	callstack 0
  1290  00001E                     dtoa@d:
  1291                           	callstack 0
  1292                           
  1293                           ; 8 bytes @ 0x1D
  1294  00001E                     	ds	1
  1295  00001F                     ___fldiv@sign:
  1296                           	callstack 0
  1297                           
  1298                           ; 1 bytes @ 0x1E
  1299  00001F                     	ds	1
  1300  000020                     ??_left:
  1301  000020                     ??_right:
  1302  000020                     ___fldiv@new_exp:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x1F
  1306  000020                     	ds	2
  1307  000022                     ??___flge:
  1308  000022                     turnleft@mL:
  1309                           	callstack 0
  1310  000022                     turnright@mL:
  1311                           	callstack 0
  1312  000022                     ___fldiv@grs:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x21
  1316  000022                     	ds	2
  1317  000024                     turnleft@mR:
  1318                           	callstack 0
  1319  000024                     turnright@mR:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x23
  1323  000024                     	ds	2
  1324  000026                     ??_dtoa:
  1325  000026                     ___fldiv@bexp:
  1326                           	callstack 0
  1327  000026                     turnleft@deg:
  1328                           	callstack 0
  1329  000026                     turnright@deg:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x25
  1333  000026                     	ds	1
  1334  000027                     ___fldiv@aexp:
  1335                           	callstack 0
  1336                           
  1337                           ; 1 bytes @ 0x26
  1338  000027                     	ds	1
  1339  000028                     ?_floorf:
  1340                           	callstack 0
  1341  000028                     colourcards_readRGBC@tmpval:
  1342                           	callstack 0
  1343  000028                     floorf@x:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x27
  1347  000028                     	ds	2
  1348  00002A                     colourcards_readRGBC@mL:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x29
  1352  00002A                     	ds	2
  1353  00002C                     ??_floorf:
  1354  00002C                     colourcards_readRGBC@mR:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x2B
  1358  00002C                     	ds	2
  1359  00002E                     ??_colourcards_readRGBC:
  1360  00002E                     _dtoa$3002:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x2D
  1364  00002E                     	ds	2
  1365  000030                     dtoa@p:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x2F
  1369  000030                     	ds	2
  1370  000032                     dtoa@w:
  1371                           	callstack 0
  1372  000032                     colourcards_readRGBC@R_rel:
  1373                           	callstack 0
  1374  000032                     floorf@m:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x31
  1378  000032                     	ds	2
  1379  000034                     dtoa@s:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x33
  1383  000034                     	ds	2
  1384  000036                     floorf@e:
  1385                           	callstack 0
  1386  000036                     colourcards_readRGBC@G_rel:
  1387                           	callstack 0
  1388  000036                     dtoa@n:
  1389                           	callstack 0
  1390                           
  1391                           ; 8 bytes @ 0x35
  1392  000036                     	ds	2
  1393  000038                     floorf@u:
  1394                           	callstack 0
  1395                           
  1396                           ; 4 bytes @ 0x37
  1397  000038                     	ds	2
  1398  00003A                     colourcards_readRGBC@B_rel:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x39
  1402  00003A                     	ds	2
  1403  00003C                     ?_efgtoa:
  1404                           	callstack 0
  1405  00003C                     efgtoa@fp:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x3B
  1409  00003C                     	ds	2
  1410  00003E                     dtoa@i:
  1411                           	callstack 0
  1412  00003E                     efgtoa@f:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x3D
  1416  00003E                     	ds	4
  1417  000042                     efgtoa@c:
  1418                           	callstack 0
  1419                           
  1420                           ; 1 bytes @ 0x41
  1421  000042                     	ds	1
  1422  000043                     ??_efgtoa:
  1423                           
  1424                           ; 1 bytes @ 0x42
  1425  000043                     	ds	5
  1426  000048                     ?_vfpfcnvrt:
  1427                           	callstack 0
  1428  000048                     vfpfcnvrt@fp:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x47
  1432  000048                     	ds	2
  1433  00004A                     vfpfcnvrt@fmt:
  1434                           	callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x49
  1437  00004A                     	ds	2
  1438  00004C                     vfpfcnvrt@ap:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x4B
  1442  00004C                     	ds	2
  1443  00004E                     ??_vfpfcnvrt:
  1444                           
  1445                           ; 1 bytes @ 0x4D
  1446  00004E                     	ds	4
  1447  000052                     ?_vfprintf:
  1448                           	callstack 0
  1449  000052                     vfprintf@fp:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x51
  1453  000052                     	ds	2
  1454  000054                     vfprintf@fmt:
  1455                           	callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x53
  1458  000054                     	ds	2
  1459  000056                     vfprintf@ap:
  1460                           	callstack 0
  1461                           
  1462                           ; 2 bytes @ 0x55
  1463  000056                     	ds	2
  1464  000058                     vfprintf@cfmt:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x57
  1468  000058                     	ds	2
  1469  00005A                     ??_colourcards_testingRGBC:
  1470  00005A                     colourclick_testing@initial:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x59
  1474  00005A                     	ds	2
  1475  00005C                     colourclick_testing@current:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x5B
  1479  00005C                     	ds	2
  1480  00005E                     ??_colourclick_testing:
  1481                           
  1482                           ; 1 bytes @ 0x5D
  1483  00005E                     	ds	2
  1484                           
  1485 ;;
  1486 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1487 ;;
  1488 ;; *************** function _main *****************
  1489 ;; Defined at:
  1490 ;;		line 7 in file "main.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  motorR          9   69[BANK1 ] struct .
  1495 ;;  motorL          9   60[BANK1 ] struct .
  1496 ;;  current         8   52[BANK1 ] struct .
  1497 ;;  PWMperiod       1    0        unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1508 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1510 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1511 ;;Total ram usage:       28 bytes
  1512 ;; Hardware stack levels required when called: 10
  1513 ;; This function calls:
  1514 ;;		_ADC_init
  1515 ;;		_DCmotors_init
  1516 ;;		_USART4_init
  1517 ;;		_checkbatterylevel
  1518 ;;		_colourcards_readRGBC
  1519 ;;		_colourcards_testingRGBC
  1520 ;;		_colourclickLEDs_C
  1521 ;;		_colourclick_calibration
  1522 ;;		_colourclick_init
  1523 ;;		_forward
  1524 ;; This function is called by:
  1525 ;;		Startup code after reset
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text0
  1530  005068                     __ptext0:
  1531                           	callstack 0
  1532  005068                     _main:
  1533                           	callstack 21
  1534  005068                     
  1535                           ;main.c: 12:     DCmotors_turntime = 100;
  1536  005068  0E00               	movlw	0
  1537  00506A  0101               	movlb	1	; () banked
  1538  00506C  6FD9               	movwf	(_DCmotors_turntime+1)& (0+255),b	;volatile
  1539  00506E  0E64               	movlw	100
  1540  005070  6FD8               	movwf	_DCmotors_turntime& (0+255),b	;volatile
  1541                           
  1542                           ;main.c: 13:     interrupts_lowerbound = 0;
  1543  005072  0E00               	movlw	0
  1544  005074  6F29               	movwf	(_interrupts_lowerbound+1)& (0+255),b	;volatile
  1545  005076  0E00               	movlw	0
  1546  005078  6F28               	movwf	_interrupts_lowerbound& (0+255),b	;volatile
  1547                           
  1548                           ;main.c: 14:     interrupts_upperbound = 32767;
  1549  00507A  0E7F               	movlw	127
  1550  00507C  6FD7               	movwf	(_interrupts_upperbound+1)& (0+255),b	;volatile
  1551  00507E  69D6               	setf	_interrupts_upperbound& (0+255),b	;volatile
  1552                           
  1553                           ;main.c: 15:     colourcard_flag = 0;
  1554  005080  0E00               	movlw	0
  1555  005082  6F2C               	movwf	_colourcard_flag& (0+255),b	;volatile
  1556                           
  1557                           ;main.c: 16:     unknowncard_flag = 0;
  1558  005084  0E00               	movlw	0
  1559  005086  6F2B               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1560                           
  1561                           ;main.c: 17:     returnhome_flag = 0;
  1562  005088  0E00               	movlw	0
  1563  00508A  6F2A               	movwf	_returnhome_flag& (0+255),b	;volatile
  1564                           
  1565                           ;main.c: 19:     DC_motor motorL;;main.c: 20:     motorL.power=0;
  1566  00508C  0E00               	movlw	0
  1567  00508E  6FBD               	movwf	main@motorL& (0+255),b
  1568                           
  1569                           ;main.c: 21:     motorL.direction=1;
  1570  005090  0E01               	movlw	1
  1571  005092  6FBE               	movwf	(main@motorL+1)& (0+255),b
  1572  005094                     
  1573                           ; BSR set to: 1
  1574                           ;main.c: 22:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1575  005094  0EA3               	movlw	163
  1576  005096  6FBF               	movwf	(main@motorL+2)& (0+255),b
  1577  005098  0E0F               	movlw	15
  1578  00509A  6FC0               	movwf	(main@motorL+3)& (0+255),b
  1579  00509C                     
  1580                           ; BSR set to: 1
  1581                           ;main.c: 23:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1582  00509C  0E7D               	movlw	125
  1583  00509E  6FC1               	movwf	(main@motorL+4)& (0+255),b
  1584  0050A0  0E0F               	movlw	15
  1585  0050A2  6FC2               	movwf	(main@motorL+5)& (0+255),b
  1586                           
  1587                           ;main.c: 24:     motorL.dir_pin=4;
  1588  0050A4  0E04               	movlw	4
  1589  0050A6  6FC3               	movwf	(main@motorL+6)& (0+255),b
  1590  0050A8                     
  1591                           ; BSR set to: 1
  1592                           ;main.c: 25:     motorL.PWMperiod=PWMperiod;
  1593  0050A8  0E00               	movlw	0
  1594  0050AA  6FC5               	movwf	(main@motorL+8)& (0+255),b
  1595  0050AC  0E63               	movlw	99
  1596  0050AE  6FC4               	movwf	(main@motorL+7)& (0+255),b
  1597                           
  1598                           ;main.c: 27:     DC_motor motorR;;main.c: 28:     motorR.power=0;
  1599  0050B0  0E00               	movlw	0
  1600  0050B2  6FC6               	movwf	main@motorR& (0+255),b
  1601                           
  1602                           ;main.c: 29:     motorR.direction=1;
  1603  0050B4  0E01               	movlw	1
  1604  0050B6  6FC7               	movwf	(main@motorR+1)& (0+255),b
  1605  0050B8                     
  1606                           ; BSR set to: 1
  1607                           ;main.c: 30:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1608  0050B8  0EA0               	movlw	160
  1609  0050BA  6FC8               	movwf	(main@motorR+2)& (0+255),b
  1610  0050BC  0E0F               	movlw	15
  1611  0050BE  6FC9               	movwf	(main@motorR+3)& (0+255),b
  1612  0050C0                     
  1613                           ; BSR set to: 1
  1614                           ;main.c: 31:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1615  0050C0  0E7F               	movlw	127
  1616  0050C2  6FCA               	movwf	(main@motorR+4)& (0+255),b
  1617  0050C4  0E0F               	movlw	15
  1618  0050C6  6FCB               	movwf	(main@motorR+5)& (0+255),b
  1619                           
  1620                           ;main.c: 32:     motorR.dir_pin=6;
  1621  0050C8  0E06               	movlw	6
  1622  0050CA  6FCC               	movwf	(main@motorR+6)& (0+255),b
  1623  0050CC                     
  1624                           ; BSR set to: 1
  1625                           ;main.c: 33:     motorR.PWMperiod=PWMperiod;
  1626  0050CC  0E00               	movlw	0
  1627  0050CE  6FCE               	movwf	(main@motorR+8)& (0+255),b
  1628  0050D0  0E63               	movlw	99
  1629  0050D2  6FCD               	movwf	(main@motorR+7)& (0+255),b
  1630  0050D4                     
  1631                           ; BSR set to: 1
  1632                           ;main.c: 35:     ADC_init();
  1633  0050D4  ECB8  F032         	call	_ADC_init	;wreg free
  1634  0050D8                     
  1635                           ;main.c: 36:     colourclick_init();
  1636  0050D8  ECB3  F031         	call	_colourclick_init	;wreg free
  1637  0050DC                     
  1638                           ;main.c: 37:     DCmotors_init(PWMperiod);
  1639  0050DC  0E63               	movlw	99
  1640  0050DE  ECE6  F030         	call	_DCmotors_init
  1641  0050E2                     
  1642                           ;main.c: 38:     USART4_init();
  1643  0050E2  ECA8  F032         	call	_USART4_init	;wreg free
  1644  0050E6                     
  1645                           ;main.c: 39:     checkbatterylevel();
  1646  0050E6  EC98  F032         	call	_checkbatterylevel	;wreg free
  1647  0050EA                     
  1648                           ;main.c: 44:     colourclick_calibration();
  1649  0050EA  EC90  F027         	call	_colourclick_calibration	;wreg free
  1650  0050EE                     
  1651                           ;main.c: 45:     colourcards_testingRGBC();
  1652  0050EE  EC93  F00D         	call	_colourcards_testingRGBC	;wreg free
  1653  0050F2                     
  1654                           ;main.c: 50:     checkbatterylevel();
  1655  0050F2  EC98  F032         	call	_checkbatterylevel	;wreg free
  1656  0050F6                     l63:
  1657  0050F6  A48E               	btfss	142,2,c	;volatile
  1658  0050F8  EF80  F028         	goto	u8011
  1659  0050FC  EF82  F028         	goto	u8010
  1660  005100                     u8011:
  1661  005100  EF89  F028         	goto	l67
  1662  005104                     u8010:
  1663  005104  B68E               	btfsc	142,3,c	;volatile
  1664  005106  EF87  F028         	goto	u8021
  1665  00510A  EF89  F028         	goto	u8020
  1666  00510E                     u8021:
  1667  00510E  EF7B  F028         	goto	l63
  1668  005112                     u8020:
  1669  005112                     l67:
  1670                           
  1671                           ;main.c: 58:     LATDbits.LATD3 = 1;
  1672  005112  867C               	bsf	124,3,c	;volatile
  1673  005114                     
  1674                           ;main.c: 59:     colourclickLEDs_C(1);
  1675  005114  0E01               	movlw	1
  1676  005116  EC77  F032         	call	_colourclickLEDs_C
  1677  00511A                     
  1678                           ;main.c: 60:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1679  00511A  0E52               	movlw	82
  1680  00511C  0101               	movlb	1	; () banked
  1681  00511E  6FB4               	movwf	(??_main+1)& (0+255),b
  1682  005120  0E2B               	movlw	43
  1683  005122  6FB3               	movwf	??_main& (0+255),b
  1684  005124  0E00               	movlw	0
  1685  005126                     u8367:
  1686  005126  2EE8               	decfsz	wreg,f,c
  1687  005128  D7FE               	bra	u8367
  1688  00512A  2FB3               	decfsz	??_main& (0+255),f,b
  1689  00512C  D7FC               	bra	u8367
  1690  00512E  2FB4               	decfsz	(??_main+1)& (0+255),f,b
  1691  005130  D7FA               	bra	u8367
  1692  005132  F000               	nop	
  1693  005134                     
  1694                           ;main.c: 62:     forward(&motorL, &motorR);
  1695  005134  0EBD               	movlw	low main@motorL
  1696  005136  6E1A               	movwf	forward@mL^0,c
  1697  005138  0E01               	movlw	high main@motorL
  1698  00513A  6E1B               	movwf	(forward@mL+1)^0,c
  1699  00513C  0EC6               	movlw	low main@motorR
  1700  00513E  6E1C               	movwf	forward@mR^0,c
  1701  005140  0E01               	movlw	high main@motorR
  1702  005142  6E1D               	movwf	(forward@mR+1)^0,c
  1703  005144  EC2F  F02E         	call	_forward	;wreg free
  1704  005148                     l6243:
  1705                           
  1706                           ;main.c: 69:         if (colourcard_flag==1) {
  1707  005148  0101               	movlb	1	; () banked
  1708  00514A  052C               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1709  00514C  A4D8               	btfss	status,2,c
  1710  00514E  EFAB  F028         	goto	u8031
  1711  005152  EFAD  F028         	goto	u8030
  1712  005156                     u8031:
  1713  005156  EFA4  F028         	goto	l6243
  1714  00515A                     u8030:
  1715  00515A                     
  1716                           ; BSR set to: 1
  1717                           ;main.c: 70:             colourcards_readRGBC(&current, &motorL, &motorR);
  1718  00515A  0EB5               	movlw	low main@current
  1719  00515C  6E28               	movwf	colourcards_readRGBC@tmpval^0,c
  1720  00515E  0E01               	movlw	high main@current
  1721  005160  6E29               	movwf	(colourcards_readRGBC@tmpval+1)^0,c
  1722  005162  0EBD               	movlw	low main@motorL
  1723  005164  6E2A               	movwf	colourcards_readRGBC@mL^0,c
  1724  005166  0E01               	movlw	high main@motorL
  1725  005168  6E2B               	movwf	(colourcards_readRGBC@mL+1)^0,c
  1726  00516A  0EC6               	movlw	low main@motorR
  1727  00516C  6E2C               	movwf	colourcards_readRGBC@mR^0,c
  1728  00516E  0E01               	movlw	high main@motorR
  1729  005170  6E2D               	movwf	(colourcards_readRGBC@mR+1)^0,c
  1730  005172  ECC6  F012         	call	_colourcards_readRGBC	;wreg free
  1731  005176                     
  1732                           ;main.c: 71:             colourcard_flag = 0;
  1733  005176  0E00               	movlw	0
  1734  005178  0101               	movlb	1	; () banked
  1735  00517A  6F2C               	movwf	_colourcard_flag& (0+255),b	;volatile
  1736  00517C  EFA4  F028         	goto	l6243
  1737  005180  EF00  F000         	goto	start
  1738  005184                     __end_of_main:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _colourclick_init *****************
  1742 ;; Defined at:
  1743 ;;		line 15 in file "colour_click.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;Total ram usage:        1 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 3
  1764 ;; This function calls:
  1765 ;;		_I2C_2_Master_Init
  1766 ;;		_colourclickLEDs_init
  1767 ;;		_colourclick_writetoaddr
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text1
  1774  006366                     __ptext1:
  1775                           	callstack 0
  1776  006366                     _colourclick_init:
  1777                           	callstack 27
  1778  006366                     
  1779                           ;colour_click.c: 18:     I2C_2_Master_Init();
  1780  006366  EC3B  F032         	call	_I2C_2_Master_Init	;wreg free
  1781  00636A                     
  1782                           ;colour_click.c: 21:   colourclick_writetoaddr(0x00, 0x01);
  1783  00636A  0E01               	movlw	1
  1784  00636C  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1785  00636E  0E00               	movlw	0
  1786  006370  EC88  F032         	call	_colourclick_writetoaddr
  1787  006374                     
  1788                           ;colour_click.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1789  006374  0E3F               	movlw	63
  1790  006376  6E05               	movwf	??_colourclick_init^0,c
  1791  006378  0E55               	movlw	85
  1792  00637A                     u8377:
  1793  00637A  2EE8               	decfsz	wreg,f,c
  1794  00637C  D7FE               	bra	u8377
  1795  00637E  2E05               	decfsz	??_colourclick_init^0,f,c
  1796  006380  D7FC               	bra	u8377
  1797  006382  F000               	nop	
  1798  006384                     
  1799                           ;colour_click.c: 25:  colourclick_writetoaddr(0x00, 0x03);
  1800  006384  0E03               	movlw	3
  1801  006386  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1802  006388  0E00               	movlw	0
  1803  00638A  EC88  F032         	call	_colourclick_writetoaddr
  1804  00638E                     
  1805                           ;colour_click.c: 28:  colourclick_writetoaddr(0x01, 0xD5);
  1806  00638E  0ED5               	movlw	213
  1807  006390  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1808  006392  0E01               	movlw	1
  1809  006394  EC88  F032         	call	_colourclick_writetoaddr
  1810  006398                     
  1811                           ;colour_click.c: 30:     colourclickLEDs_init();
  1812  006398  ECE8  F032         	call	_colourclickLEDs_init	;wreg free
  1813  00639C  0012               	return		;funcret
  1814  00639E                     __end_of_colourclick_init:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _colourclick_writetoaddr *****************
  1818 ;; Defined at:
  1819 ;;		line 39 in file "colour_click.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  address         1    wreg     unsigned char 
  1822 ;;  value           1    2[COMRAM] unsigned char 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  address         1    3[COMRAM] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1834 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1838 ;;Total ram usage:        2 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 2
  1841 ;; This function calls:
  1842 ;;		_I2C_2_Master_Start
  1843 ;;		_I2C_2_Master_Stop
  1844 ;;		_I2C_2_Master_Write
  1845 ;; This function is called by:
  1846 ;;		_colourclick_init
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text2
  1851  006510                     __ptext2:
  1852                           	callstack 0
  1853  006510                     _colourclick_writetoaddr:
  1854                           	callstack 27
  1855                           
  1856                           ;incstack = 0
  1857                           ;colourclick_writetoaddr@address stored from wreg
  1858  006510  6E04               	movwf	colourclick_writetoaddr@address^0,c
  1859  006512                     
  1860                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
  1861  006512  EC00  F033         	call	_I2C_2_Master_Start	;wreg free
  1862                           
  1863                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
  1864  006516  0E52               	movlw	82
  1865  006518  ECEF  F032         	call	_I2C_2_Master_Write
  1866                           
  1867                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
  1868  00651C  5004               	movf	colourclick_writetoaddr@address^0,w,c
  1869  00651E  0980               	iorlw	128
  1870  006520  ECEF  F032         	call	_I2C_2_Master_Write
  1871                           
  1872                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
  1873  006524  5003               	movf	colourclick_writetoaddr@value^0,w,c
  1874  006526  ECEF  F032         	call	_I2C_2_Master_Write
  1875                           
  1876                           ;colour_click.c: 45:     I2C_2_Master_Stop();
  1877  00652A  ECFB  F032         	call	_I2C_2_Master_Stop	;wreg free
  1878  00652E  0012               	return		;funcret
  1879  006530                     __end_of_colourclick_writetoaddr:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _colourclickLEDs_init *****************
  1883 ;; Defined at:
  1884 ;;		line 49 in file "buttons_n_LEDs.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 1
  1905 ;; This function calls:
  1906 ;;		_colourclickLEDs_C
  1907 ;; This function is called by:
  1908 ;;		_colourclick_init
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text3
  1913  0065D0                     __ptext3:
  1914                           	callstack 0
  1915  0065D0                     _colourclickLEDs_init:
  1916                           	callstack 28
  1917  0065D0                     
  1918                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  1919  0065D0  9287               	bcf	135,1,c	;volatile
  1920                           
  1921                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  1922  0065D2  9881               	bcf	129,4,c	;volatile
  1923                           
  1924                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  1925  0065D4  9E86               	bcf	134,7,c	;volatile
  1926  0065D6                     
  1927                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  1928  0065D6  0E00               	movlw	0
  1929  0065D8  EC77  F032         	call	_colourclickLEDs_C
  1930  0065DC  0012               	return		;funcret
  1931  0065DE                     __end_of_colourclickLEDs_init:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _I2C_2_Master_Init *****************
  1935 ;; Defined at:
  1936 ;;		line 8 in file "I2C.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_colourclick_init
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text4
  1964  006476                     __ptext4:
  1965                           	callstack 0
  1966  006476                     _I2C_2_Master_Init:
  1967                           	callstack 29
  1968  006476                     
  1969                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  1970  006476  010E               	movlb	14	; () banked
  1971  006478  51D9               	movf	217,w,b	;volatile
  1972  00647A  0BF0               	andlw	-16
  1973  00647C  0908               	iorlw	8
  1974  00647E  6FD9               	movwf	217,b	;volatile
  1975  006480                     
  1976                           ; BSR set to: 14
  1977                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  1978  006480  8BD9               	bsf	217,5,b	;volatile
  1979                           
  1980                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  1981  006482  0E9F               	movlw	159
  1982  006484  6FD6               	movwf	214,b	;volatile
  1983  006486                     
  1984                           ; BSR set to: 14
  1985                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  1986  006486  8A84               	bsf	132,5,c	;volatile
  1987  006488                     
  1988                           ; BSR set to: 14
  1989                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  1990  006488  8C84               	bsf	132,6,c	;volatile
  1991  00648A                     
  1992                           ; BSR set to: 14
  1993                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  1994  00648A  9BA7               	bcf	167,5,b	;volatile
  1995  00648C                     
  1996                           ; BSR set to: 14
  1997                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  1998  00648C  9DA7               	bcf	167,6,b	;volatile
  1999                           
  2000                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  2001  00648E  0E1D               	movlw	29
  2002  006490  6F1D               	movwf	29,b	;volatile
  2003                           
  2004                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  2005  006492  0E1E               	movlw	30
  2006  006494  6F1C               	movwf	28,b	;volatile
  2007                           
  2008                           ;I2C.c: 22:   RD5PPS=0x1C;
  2009  006496  0E1C               	movlw	28
  2010  006498  6F6F               	movwf	111,b	;volatile
  2011                           
  2012                           ;I2C.c: 23:   RD6PPS=0x1B;
  2013  00649A  0E1B               	movlw	27
  2014  00649C  6F70               	movwf	112,b	;volatile
  2015  00649E                     
  2016                           ; BSR set to: 14
  2017  00649E  0012               	return		;funcret
  2018  0064A0                     __end_of_I2C_2_Master_Init:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _colourclick_calibration *****************
  2022 ;; Defined at:
  2023 ;;		line 169 in file "colour_click.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  current         8  123[BANK0 ] struct .
  2028 ;;  initial         8  115[BANK0 ] struct .
  2029 ;;  i               1  114[BANK0 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;Total ram usage:       19 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 9
  2046 ;; This function calls:
  2047 ;;		_colourclickLEDs_C
  2048 ;;		_colourclick_readRGBC
  2049 ;;		_colourclick_testing
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text5
  2056  004F20                     __ptext5:
  2057                           	callstack 0
  2058  004F20                     _colourclick_calibration:
  2059                           	callstack 21
  2060  004F20                     l280:
  2061  004F20  B48E               	btfsc	142,2,c	;volatile
  2062  004F22  EF95  F027         	goto	u7351
  2063  004F26  EF97  F027         	goto	u7350
  2064  004F2A                     u7351:
  2065  004F2A  EF90  F027         	goto	l280
  2066  004F2E                     u7350:
  2067  004F2E                     
  2068                           ;colour_click.c: 172:     LATDbits.LATD3 = 1;
  2069  004F2E  867C               	bsf	124,3,c	;volatile
  2070  004F30                     
  2071                           ;colour_click.c: 173:     colourclickLEDs_C(1);
  2072  004F30  0E01               	movlw	1
  2073  004F32  EC77  F032         	call	_colourclickLEDs_C
  2074  004F36                     
  2075                           ;colour_click.c: 174:     LATDbits.LATD7 = 1;
  2076  004F36  8E7C               	bsf	124,7,c	;volatile
  2077  004F38                     
  2078                           ;colour_click.c: 175:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2079  004F38  0E52               	movlw	82
  2080  004F3A  0100               	movlb	0	; () banked
  2081  004F3C  6FD1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2082  004F3E  0E2B               	movlw	43
  2083  004F40  6FD0               	movwf	??_colourclick_calibration& (0+255),b
  2084  004F42  0E00               	movlw	0
  2085  004F44                     u8387:
  2086  004F44  2EE8               	decfsz	wreg,f,c
  2087  004F46  D7FE               	bra	u8387
  2088  004F48  2FD0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2089  004F4A  D7FC               	bra	u8387
  2090  004F4C  2FD1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2091  004F4E  D7FA               	bra	u8387
  2092  004F50  F000               	nop	
  2093  004F52                     
  2094                           ;colour_click.c: 176:     colourclick_readRGBC(&initial);
  2095  004F52  0ED3               	movlw	low colourclick_calibration@initial
  2096  004F54  6E0C               	movwf	colourclick_readRGBC@tmpval^0,c
  2097  004F56  0E00               	movlw	high colourclick_calibration@initial
  2098  004F58  6E0D               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2099  004F5A  EC4D  F02F         	call	_colourclick_readRGBC	;wreg free
  2100  004F5E                     
  2101                           ;colour_click.c: 177:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2102  004F5E  0E52               	movlw	82
  2103  004F60  0100               	movlb	0	; () banked
  2104  004F62  6FD1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2105  004F64  0E2B               	movlw	43
  2106  004F66  6FD0               	movwf	??_colourclick_calibration& (0+255),b
  2107  004F68  0E00               	movlw	0
  2108  004F6A                     u8397:
  2109  004F6A  2EE8               	decfsz	wreg,f,c
  2110  004F6C  D7FE               	bra	u8397
  2111  004F6E  2FD0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2112  004F70  D7FC               	bra	u8397
  2113  004F72  2FD1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2114  004F74  D7FA               	bra	u8397
  2115  004F76  F000               	nop	
  2116  004F78                     
  2117                           ;colour_click.c: 178:     LATDbits.LATD7 = 0;
  2118  004F78  9E7C               	bcf	124,7,c	;volatile
  2119  004F7A                     
  2120                           ;colour_click.c: 180:     unsigned char i;;colour_click.c: 181:     RGBC_val current;;co
      +                          lour_click.c: 182:     for (i=0; i<8; i++) {
  2121  004F7A  0E00               	movlw	0
  2122  004F7C  0100               	movlb	0	; () banked
  2123  004F7E  6FD2               	movwf	colourclick_calibration@i& (0+255),b
  2124  004F80                     l285:
  2125  004F80  B48E               	btfsc	142,2,c	;volatile
  2126  004F82  EFC5  F027         	goto	u7361
  2127  004F86  EFC7  F027         	goto	u7360
  2128  004F8A                     u7361:
  2129  004F8A  EFC0  F027         	goto	l285
  2130  004F8E                     u7360:
  2131  004F8E                     
  2132                           ;colour_click.c: 184:         LATDbits.LATD7 = 1;
  2133  004F8E  8E7C               	bsf	124,7,c	;volatile
  2134  004F90                     
  2135                           ;colour_click.c: 185:         colourclick_readRGBC(&current);
  2136  004F90  0EDB               	movlw	low colourclick_calibration@current
  2137  004F92  6E0C               	movwf	colourclick_readRGBC@tmpval^0,c
  2138  004F94  0E00               	movlw	high colourclick_calibration@current
  2139  004F96  6E0D               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2140  004F98  EC4D  F02F         	call	_colourclick_readRGBC	;wreg free
  2141  004F9C                     
  2142                           ;colour_click.c: 186:         if ((current.C<initial.C) && (current.C>interrupts_lowerbo
      +                          und)) {
  2143  004F9C  0100               	movlb	0	; () banked
  2144  004F9E  51D9               	movf	(colourclick_calibration@initial+6)& (0+255),w,b
  2145  004FA0  5DE1               	subwf	(colourclick_calibration@current+6)& (0+255),w,b
  2146  004FA2  51DA               	movf	(colourclick_calibration@initial+7)& (0+255),w,b
  2147  004FA4  59E2               	subwfb	(colourclick_calibration@current+7)& (0+255),w,b
  2148  004FA6  B0D8               	btfsc	status,0,c
  2149  004FA8  EFD8  F027         	goto	u7371
  2150  004FAC  EFDA  F027         	goto	u7370
  2151  004FB0                     u7371:
  2152  004FB0  EFEE  F027         	goto	l5973
  2153  004FB4                     u7370:
  2154  004FB4                     
  2155                           ; BSR set to: 0
  2156  004FB4  51E1               	movf	(colourclick_calibration@current+6)& (0+255),w,b
  2157  004FB6  0101               	movlb	1	; () banked
  2158  004FB8  5D28               	subwf	_interrupts_lowerbound& (0+255),w,b	;volatile
  2159  004FBA  0100               	movlb	0	; () banked
  2160  004FBC  51E2               	movf	(colourclick_calibration@current+7)& (0+255),w,b
  2161  004FBE  0101               	movlb	1	; () banked
  2162  004FC0  5929               	subwfb	(_interrupts_lowerbound+1)& (0+255),w,b	;volatile
  2163  004FC2  B0D8               	btfsc	status,0,c
  2164  004FC4  EFE6  F027         	goto	u7381
  2165  004FC8  EFE8  F027         	goto	u7380
  2166  004FCC                     u7381:
  2167  004FCC  EFEE  F027         	goto	l5973
  2168  004FD0                     u7380:
  2169  004FD0                     
  2170                           ; BSR set to: 1
  2171                           ;colour_click.c: 187:             interrupts_lowerbound = current.C;
  2172  004FD0  C0E1  F128         	movff	colourclick_calibration@current+6,_interrupts_lowerbound	;volatile
  2173  004FD4  C0E2  F129         	movff	colourclick_calibration@current+7,_interrupts_lowerbound+1	;volatile
  2174                           
  2175                           ;colour_click.c: 188:         } else if ((current.C>initial.C) && (current.C<interrupts_
      +                          upperbound)) {
  2176  004FD8  EF0D  F028         	goto	l5979
  2177  004FDC                     l5973:
  2178  004FDC  0100               	movlb	0	; () banked
  2179  004FDE  51E1               	movf	(colourclick_calibration@current+6)& (0+255),w,b
  2180  004FE0  5DD9               	subwf	(colourclick_calibration@initial+6)& (0+255),w,b
  2181  004FE2  51E2               	movf	(colourclick_calibration@current+7)& (0+255),w,b
  2182  004FE4  59DA               	subwfb	(colourclick_calibration@initial+7)& (0+255),w,b
  2183  004FE6  B0D8               	btfsc	status,0,c
  2184  004FE8  EFF8  F027         	goto	u7391
  2185  004FEC  EFFA  F027         	goto	u7390
  2186  004FF0                     u7391:
  2187  004FF0  EF0D  F028         	goto	l5979
  2188  004FF4                     u7390:
  2189  004FF4                     
  2190                           ; BSR set to: 0
  2191  004FF4  0101               	movlb	1	; () banked
  2192  004FF6  51D6               	movf	_interrupts_upperbound& (0+255),w,b	;volatile
  2193  004FF8  0100               	movlb	0	; () banked
  2194  004FFA  5DE1               	subwf	(colourclick_calibration@current+6)& (0+255),w,b
  2195  004FFC  0101               	movlb	1	; () banked
  2196  004FFE  51D7               	movf	(_interrupts_upperbound+1)& (0+255),w,b	;volatile
  2197  005000  0100               	movlb	0	; () banked
  2198  005002  59E2               	subwfb	(colourclick_calibration@current+7)& (0+255),w,b
  2199  005004  B0D8               	btfsc	status,0,c
  2200  005006  EF07  F028         	goto	u7401
  2201  00500A  EF09  F028         	goto	u7400
  2202  00500E                     u7401:
  2203  00500E  EF0D  F028         	goto	l5979
  2204  005012                     u7400:
  2205  005012                     
  2206                           ; BSR set to: 0
  2207                           ;colour_click.c: 189:             interrupts_upperbound = current.C;
  2208  005012  C0E1  F1D6         	movff	colourclick_calibration@current+6,_interrupts_upperbound	;volatile
  2209  005016  C0E2  F1D7         	movff	colourclick_calibration@current+7,_interrupts_upperbound+1	;volatile
  2210  00501A                     l5979:
  2211                           
  2212                           ;colour_click.c: 191:         colourclick_testing(&initial, &current);
  2213  00501A  0ED3               	movlw	low colourclick_calibration@initial
  2214  00501C  6E5A               	movwf	colourclick_testing@initial^0,c
  2215  00501E  0E00               	movlw	high colourclick_calibration@initial
  2216  005020  6E5B               	movwf	(colourclick_testing@initial+1)^0,c
  2217  005022  0EDB               	movlw	low colourclick_calibration@current
  2218  005024  6E5C               	movwf	colourclick_testing@current^0,c
  2219  005026  0E00               	movlw	high colourclick_calibration@current
  2220  005028  6E5D               	movwf	(colourclick_testing@current+1)^0,c
  2221  00502A  ECA1  F02B         	call	_colourclick_testing	;wreg free
  2222  00502E                     
  2223                           ;colour_click.c: 192:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2224  00502E  0E09               	movlw	9
  2225  005030  0100               	movlb	0	; () banked
  2226  005032  6FD1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2227  005034  0E1E               	movlw	30
  2228  005036  6FD0               	movwf	??_colourclick_calibration& (0+255),b
  2229  005038  0EE4               	movlw	228
  2230  00503A                     u8407:
  2231  00503A  2EE8               	decfsz	wreg,f,c
  2232  00503C  D7FE               	bra	u8407
  2233  00503E  2FD0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2234  005040  D7FC               	bra	u8407
  2235  005042  2FD1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2236  005044  D7FA               	bra	u8407
  2237  005046  F000               	nop	
  2238  005048                     
  2239                           ;colour_click.c: 193:         LATDbits.LATD7 = 0;
  2240  005048  9E7C               	bcf	124,7,c	;volatile
  2241  00504A                     
  2242                           ;colour_click.c: 194:     }
  2243  00504A  0100               	movlb	0	; () banked
  2244  00504C  2BD2               	incf	colourclick_calibration@i& (0+255),f,b
  2245  00504E                     
  2246                           ; BSR set to: 0
  2247  00504E  0E07               	movlw	7
  2248  005050  65D2               	cpfsgt	colourclick_calibration@i& (0+255),b
  2249  005052  EF2D  F028         	goto	u7411
  2250  005056  EF2F  F028         	goto	u7410
  2251  00505A                     u7411:
  2252  00505A  EFC0  F027         	goto	l285
  2253  00505E                     u7410:
  2254  00505E                     
  2255                           ; BSR set to: 0
  2256                           ;colour_click.c: 195:     LATDbits.LATD3 = 0;
  2257  00505E  967C               	bcf	124,3,c	;volatile
  2258  005060                     
  2259                           ; BSR set to: 0
  2260                           ;colour_click.c: 196:     colourclickLEDs_C(0);
  2261  005060  0E00               	movlw	0
  2262  005062  EC77  F032         	call	_colourclickLEDs_C
  2263  005066  0012               	return		;funcret
  2264  005068                     __end_of_colourclick_calibration:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _colourclick_testing *****************
  2268 ;; Defined at:
  2269 ;;		line 199 in file "colour_click.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  initial         2   89[COMRAM] PTR struct .
  2272 ;;		 -> colourclick_calibration@initial(8), 
  2273 ;;  current         2   91[COMRAM] PTR struct .
  2274 ;;		 -> colourclick_calibration@current(8), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  buf            40    0[BANK1 ] unsigned char [40]
  2277 ;;  C               2   48[BANK1 ] unsigned int 
  2278 ;;  B               2   46[BANK1 ] unsigned int 
  2279 ;;  G               2   44[BANK1 ] unsigned int 
  2280 ;;  R               2   42[BANK1 ] unsigned int 
  2281 ;;  ambient         2   40[BANK1 ] unsigned int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:         6       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:       56 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 8
  2298 ;; This function calls:
  2299 ;;		_sendStringSerial4
  2300 ;;		_sprintf
  2301 ;; This function is called by:
  2302 ;;		_colourclick_calibration
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text6
  2307  005742                     __ptext6:
  2308                           	callstack 0
  2309  005742                     _colourclick_testing:
  2310                           	callstack 21
  2311  005742                     
  2312                           ;colour_click.c: 199: void colourclick_testing(RGBC_val *initial, RGBC_val *current);col
      +                          our_click.c: 200: {;colour_click.c: 201:     unsigned int ambient = initial->C;
  2313  005742  EE20 F006          	lfsr	2,6
  2314  005746  505A               	movf	colourclick_testing@initial^0,w,c
  2315  005748  26D9               	addwf	fsr2l,f,c
  2316  00574A  505B               	movf	(colourclick_testing@initial+1)^0,w,c
  2317  00574C  22DA               	addwfc	fsr2h,f,c
  2318  00574E  CFDE F1A9          	movff	postinc2,colourclick_testing@ambient
  2319  005752  CFDD F1AA          	movff	postdec2,colourclick_testing@ambient+1
  2320  005756                     
  2321                           ;colour_click.c: 202:     unsigned int R = current->R;
  2322  005756  C05C  FFD9         	movff	colourclick_testing@current,fsr2l
  2323  00575A  C05D  FFDA         	movff	colourclick_testing@current+1,fsr2h
  2324  00575E  CFDE F1AB          	movff	postinc2,colourclick_testing@R
  2325  005762  CFDD F1AC          	movff	postdec2,colourclick_testing@R+1
  2326  005766                     
  2327                           ;colour_click.c: 203:     unsigned int G = current->G;
  2328  005766  EE20 F002          	lfsr	2,2
  2329  00576A  505C               	movf	colourclick_testing@current^0,w,c
  2330  00576C  26D9               	addwf	fsr2l,f,c
  2331  00576E  505D               	movf	(colourclick_testing@current+1)^0,w,c
  2332  005770  22DA               	addwfc	fsr2h,f,c
  2333  005772  CFDE F1AD          	movff	postinc2,colourclick_testing@G
  2334  005776  CFDD F1AE          	movff	postdec2,colourclick_testing@G+1
  2335  00577A                     
  2336                           ;colour_click.c: 204:     unsigned int B = current->B;
  2337  00577A  EE20 F004          	lfsr	2,4
  2338  00577E  505C               	movf	colourclick_testing@current^0,w,c
  2339  005780  26D9               	addwf	fsr2l,f,c
  2340  005782  505D               	movf	(colourclick_testing@current+1)^0,w,c
  2341  005784  22DA               	addwfc	fsr2h,f,c
  2342  005786  CFDE F1AF          	movff	postinc2,colourclick_testing@B
  2343  00578A  CFDD F1B0          	movff	postdec2,colourclick_testing@B+1
  2344  00578E                     
  2345                           ;colour_click.c: 205:     unsigned int C = current->C;
  2346  00578E  EE20 F006          	lfsr	2,6
  2347  005792  505C               	movf	colourclick_testing@current^0,w,c
  2348  005794  26D9               	addwf	fsr2l,f,c
  2349  005796  505D               	movf	(colourclick_testing@current+1)^0,w,c
  2350  005798  22DA               	addwfc	fsr2h,f,c
  2351  00579A  CFDE F1B1          	movff	postinc2,colourclick_testing@C
  2352  00579E  CFDD F1B2          	movff	postdec2,colourclick_testing@C+1
  2353  0057A2                     
  2354                           ;colour_click.c: 207:     char buf[40];;colour_click.c: 208:     sprintf(buf,"RGBC: %i %
      +                          i %i %i     Threshold: %i %i %i\n\r", R, G, B, C, interrupts_lowerbound, ambient, interr
      +                          upts_upperbound);
  2355  0057A2  0E81               	movlw	low colourclick_testing@buf
  2356  0057A4  0100               	movlb	0	; () banked
  2357  0057A6  6FAE               	movwf	sprintf@s& (0+255),b
  2358  0057A8  0E01               	movlw	high colourclick_testing@buf
  2359  0057AA  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2360  0057AC  0E41               	movlw	low STR_19
  2361  0057AE  6FB0               	movwf	sprintf@fmt& (0+255),b
  2362  0057B0  0E0E               	movlw	high STR_19
  2363  0057B2  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2364  0057B4  C1AB  F0B2         	movff	colourclick_testing@R,?_sprintf+4
  2365  0057B8  C1AC  F0B3         	movff	colourclick_testing@R+1,?_sprintf+5
  2366  0057BC  C1AD  F0B4         	movff	colourclick_testing@G,?_sprintf+6
  2367  0057C0  C1AE  F0B5         	movff	colourclick_testing@G+1,?_sprintf+7
  2368  0057C4  C1AF  F0B6         	movff	colourclick_testing@B,?_sprintf+8
  2369  0057C8  C1B0  F0B7         	movff	colourclick_testing@B+1,?_sprintf+9
  2370  0057CC  C1B1  F0B8         	movff	colourclick_testing@C,?_sprintf+10
  2371  0057D0  C1B2  F0B9         	movff	colourclick_testing@C+1,?_sprintf+11
  2372  0057D4  C128  F0BA         	movff	_interrupts_lowerbound,?_sprintf+12	;volatile
  2373  0057D8  C129  F0BB         	movff	_interrupts_lowerbound+1,?_sprintf+13	;volatile
  2374  0057DC  C1A9  F0BC         	movff	colourclick_testing@ambient,?_sprintf+14
  2375  0057E0  C1AA  F0BD         	movff	colourclick_testing@ambient+1,?_sprintf+15
  2376  0057E4  C1D6  F0BE         	movff	_interrupts_upperbound,?_sprintf+16	;volatile
  2377  0057E8  C1D7  F0BF         	movff	_interrupts_upperbound+1,?_sprintf+17	;volatile
  2378  0057EC  EC7C  F02F         	call	_sprintf	;wreg free
  2379  0057F0                     
  2380                           ;colour_click.c: 210:     sendStringSerial4(buf);
  2381  0057F0  0E81               	movlw	low colourclick_testing@buf
  2382  0057F2  6E02               	movwf	sendStringSerial4@string^0,c
  2383  0057F4  0E01               	movlw	high colourclick_testing@buf
  2384  0057F6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2385  0057F8  EC23  F032         	call	_sendStringSerial4	;wreg free
  2386  0057FC                     
  2387                           ;colour_click.c: 211:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2388  0057FC  0E29               	movlw	41
  2389  0057FE  6E5F               	movwf	(??_colourclick_testing+1)^0,c
  2390  005800  0E96               	movlw	150
  2391  005802  6E5E               	movwf	??_colourclick_testing^0,c
  2392  005804  0E7F               	movlw	127
  2393  005806                     u8417:
  2394  005806  2EE8               	decfsz	wreg,f,c
  2395  005808  D7FE               	bra	u8417
  2396  00580A  2E5E               	decfsz	??_colourclick_testing^0,f,c
  2397  00580C  D7FC               	bra	u8417
  2398  00580E  2E5F               	decfsz	(??_colourclick_testing+1)^0,f,c
  2399  005810  D7FA               	bra	u8417
  2400  005812  F000               	nop	
  2401  005814  0012               	return		;funcret
  2402  005816                     __end_of_colourclick_testing:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _colourcards_testingRGBC *****************
  2406 ;; Defined at:
  2407 ;;		line 105 in file "colour_cards.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  buf            20  112[BANK0 ] unsigned char [20]
  2412 ;;  B_rel           4  156[BANK0 ] float 
  2413 ;;  G_rel           4  152[BANK0 ] float 
  2414 ;;  R_rel           4  148[BANK0 ] float 
  2415 ;;  C               2  146[BANK0 ] unsigned int 
  2416 ;;  B               2  144[BANK0 ] unsigned int 
  2417 ;;  G               2  142[BANK0 ] unsigned int 
  2418 ;;  R               2  140[BANK0 ] unsigned int 
  2419 ;;  tmpval          8  132[BANK0 ] struct .
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;      Locals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Totals:         2      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;Total ram usage:       50 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 8
  2436 ;; This function calls:
  2437 ;;		___fldiv
  2438 ;;		___flge
  2439 ;;		___xxtofl
  2440 ;;		_colourclickLEDs_C
  2441 ;;		_colourclick_readRGBC
  2442 ;;		_sendStringSerial4
  2443 ;;		_sprintf
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text7
  2450  001B26                     __ptext7:
  2451                           	callstack 0
  2452  001B26                     _colourcards_testingRGBC:
  2453                           	callstack 22
  2454  001B26                     l165:
  2455  001B26  A48E               	btfss	142,2,c	;volatile
  2456  001B28  EF98  F00D         	goto	u7421
  2457  001B2C  EF9A  F00D         	goto	u7420
  2458  001B30                     u7421:
  2459  001B30  EFA1  F00D         	goto	l169
  2460  001B34                     u7420:
  2461  001B34  B68E               	btfsc	142,3,c	;volatile
  2462  001B36  EF9F  F00D         	goto	u7431
  2463  001B3A  EFA1  F00D         	goto	u7430
  2464  001B3E                     u7431:
  2465  001B3E  EF93  F00D         	goto	l165
  2466  001B42                     u7430:
  2467  001B42                     l169:
  2468                           
  2469                           ;colour_cards.c: 108:     INTCONbits.GIE = 0;
  2470  001B42  9EF2               	bcf	242,7,c	;volatile
  2471                           
  2472                           ;colour_cards.c: 109:     LATDbits.LATD3 = 1;
  2473  001B44  867C               	bsf	124,3,c	;volatile
  2474  001B46                     
  2475                           ;colour_cards.c: 110:     colourclickLEDs_C(1);
  2476  001B46  0E01               	movlw	1
  2477  001B48  EC77  F032         	call	_colourclickLEDs_C
  2478  001B4C                     
  2479                           ;colour_cards.c: 111:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2480  001B4C  0E52               	movlw	82
  2481  001B4E  6E5B               	movwf	(??_colourcards_testingRGBC+1)^0,c
  2482  001B50  0E2B               	movlw	43
  2483  001B52  6E5A               	movwf	??_colourcards_testingRGBC^0,c
  2484  001B54  0E00               	movlw	0
  2485  001B56                     u8427:
  2486  001B56  2EE8               	decfsz	wreg,f,c
  2487  001B58  D7FE               	bra	u8427
  2488  001B5A  2E5A               	decfsz	??_colourcards_testingRGBC^0,f,c
  2489  001B5C  D7FC               	bra	u8427
  2490  001B5E  2E5B               	decfsz	(??_colourcards_testingRGBC+1)^0,f,c
  2491  001B60  D7FA               	bra	u8427
  2492  001B62  D000               	nop2	
  2493  001B64                     l171:
  2494  001B64  A48E               	btfss	142,2,c	;volatile
  2495  001B66  EFB7  F00D         	goto	u7441
  2496  001B6A  EFB9  F00D         	goto	u7440
  2497  001B6E                     u7441:
  2498  001B6E  EFC0  F00D         	goto	l6001
  2499  001B72                     u7440:
  2500  001B72  B68E               	btfsc	142,3,c	;volatile
  2501  001B74  EFBE  F00D         	goto	u7451
  2502  001B78  EFC0  F00D         	goto	u7450
  2503  001B7C                     u7451:
  2504  001B7C  EFB2  F00D         	goto	l171
  2505  001B80                     u7450:
  2506  001B80                     l6001:
  2507                           
  2508                           ;colour_cards.c: 116:         colourclick_readRGBC(&tmpval);
  2509  001B80  0EE4               	movlw	low colourcards_testingRGBC@tmpval
  2510  001B82  6E0C               	movwf	colourclick_readRGBC@tmpval^0,c
  2511  001B84  0E00               	movlw	high colourcards_testingRGBC@tmpval
  2512  001B86  6E0D               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2513  001B88  EC4D  F02F         	call	_colourclick_readRGBC	;wreg free
  2514  001B8C                     
  2515                           ;colour_cards.c: 117:         unsigned int R = tmpval.R;
  2516  001B8C  C0E4  F0EC         	movff	colourcards_testingRGBC@tmpval,colourcards_testingRGBC@R
  2517  001B90  C0E5  F0ED         	movff	colourcards_testingRGBC@tmpval+1,colourcards_testingRGBC@R+1
  2518  001B94                     
  2519                           ;colour_cards.c: 118:         unsigned int G = tmpval.G;
  2520  001B94  C0E6  F0EE         	movff	colourcards_testingRGBC@tmpval+2,colourcards_testingRGBC@G
  2521  001B98  C0E7  F0EF         	movff	colourcards_testingRGBC@tmpval+3,colourcards_testingRGBC@G+1
  2522  001B9C                     
  2523                           ;colour_cards.c: 119:         unsigned int B = tmpval.B;
  2524  001B9C  C0E8  F0F0         	movff	colourcards_testingRGBC@tmpval+4,colourcards_testingRGBC@B
  2525  001BA0  C0E9  F0F1         	movff	colourcards_testingRGBC@tmpval+5,colourcards_testingRGBC@B+1
  2526  001BA4                     
  2527                           ;colour_cards.c: 120:         unsigned int C = tmpval.C;
  2528  001BA4  C0EA  F0F2         	movff	colourcards_testingRGBC@tmpval+6,colourcards_testingRGBC@C
  2529  001BA8  C0EB  F0F3         	movff	colourcards_testingRGBC@tmpval+7,colourcards_testingRGBC@C+1
  2530  001BAC                     
  2531                           ;colour_cards.c: 121:         float R_rel = (float)R/(float)C;
  2532  001BAC  C0EC  F001         	movff	colourcards_testingRGBC@R,___xxtofl@val
  2533  001BB0  C0ED  F002         	movff	colourcards_testingRGBC@R+1,___xxtofl@val+1
  2534  001BB4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2535  001BB6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2536  001BB8  0E00               	movlw	0
  2537  001BBA  EC9F  F023         	call	___xxtofl
  2538  001BBE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2539  001BC2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2540  001BC6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2541  001BCA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2542  001BCE  C0F2  F001         	movff	colourcards_testingRGBC@C,___xxtofl@val
  2543  001BD2  C0F3  F002         	movff	colourcards_testingRGBC@C+1,___xxtofl@val+1
  2544  001BD6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2545  001BD8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2546  001BDA  0E00               	movlw	0
  2547  001BDC  EC9F  F023         	call	___xxtofl
  2548  001BE0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2549  001BE4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2550  001BE8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2551  001BEC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2552  001BF0  EC6E  F01E         	call	___fldiv	;wreg free
  2553  001BF4  C00F  F0F4         	movff	?___fldiv,colourcards_testingRGBC@R_rel
  2554  001BF8  C010  F0F5         	movff	?___fldiv+1,colourcards_testingRGBC@R_rel+1
  2555  001BFC  C011  F0F6         	movff	?___fldiv+2,colourcards_testingRGBC@R_rel+2
  2556  001C00  C012  F0F7         	movff	?___fldiv+3,colourcards_testingRGBC@R_rel+3
  2557  001C04                     
  2558                           ;colour_cards.c: 122:         float G_rel = (float)G/(float)C;
  2559  001C04  C0EE  F001         	movff	colourcards_testingRGBC@G,___xxtofl@val
  2560  001C08  C0EF  F002         	movff	colourcards_testingRGBC@G+1,___xxtofl@val+1
  2561  001C0C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2562  001C0E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2563  001C10  0E00               	movlw	0
  2564  001C12  EC9F  F023         	call	___xxtofl
  2565  001C16  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2566  001C1A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2567  001C1E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2568  001C22  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2569  001C26  C0F2  F001         	movff	colourcards_testingRGBC@C,___xxtofl@val
  2570  001C2A  C0F3  F002         	movff	colourcards_testingRGBC@C+1,___xxtofl@val+1
  2571  001C2E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2572  001C30  6A04               	clrf	(___xxtofl@val+3)^0,c
  2573  001C32  0E00               	movlw	0
  2574  001C34  EC9F  F023         	call	___xxtofl
  2575  001C38  C001  F013         	movff	?___xxtofl,___fldiv@a
  2576  001C3C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2577  001C40  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2578  001C44  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2579  001C48  EC6E  F01E         	call	___fldiv	;wreg free
  2580  001C4C  C00F  F0F8         	movff	?___fldiv,colourcards_testingRGBC@G_rel
  2581  001C50  C010  F0F9         	movff	?___fldiv+1,colourcards_testingRGBC@G_rel+1
  2582  001C54  C011  F0FA         	movff	?___fldiv+2,colourcards_testingRGBC@G_rel+2
  2583  001C58  C012  F0FB         	movff	?___fldiv+3,colourcards_testingRGBC@G_rel+3
  2584  001C5C                     
  2585                           ;colour_cards.c: 123:         float B_rel = (float)B/(float)C;
  2586  001C5C  C0F0  F001         	movff	colourcards_testingRGBC@B,___xxtofl@val
  2587  001C60  C0F1  F002         	movff	colourcards_testingRGBC@B+1,___xxtofl@val+1
  2588  001C64  6A03               	clrf	(___xxtofl@val+2)^0,c
  2589  001C66  6A04               	clrf	(___xxtofl@val+3)^0,c
  2590  001C68  0E00               	movlw	0
  2591  001C6A  EC9F  F023         	call	___xxtofl
  2592  001C6E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2593  001C72  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2594  001C76  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2595  001C7A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2596  001C7E  C0F2  F001         	movff	colourcards_testingRGBC@C,___xxtofl@val
  2597  001C82  C0F3  F002         	movff	colourcards_testingRGBC@C+1,___xxtofl@val+1
  2598  001C86  6A03               	clrf	(___xxtofl@val+2)^0,c
  2599  001C88  6A04               	clrf	(___xxtofl@val+3)^0,c
  2600  001C8A  0E00               	movlw	0
  2601  001C8C  EC9F  F023         	call	___xxtofl
  2602  001C90  C001  F013         	movff	?___xxtofl,___fldiv@a
  2603  001C94  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2604  001C98  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2605  001C9C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2606  001CA0  EC6E  F01E         	call	___fldiv	;wreg free
  2607  001CA4  C00F  F0FC         	movff	?___fldiv,colourcards_testingRGBC@B_rel
  2608  001CA8  C010  F0FD         	movff	?___fldiv+1,colourcards_testingRGBC@B_rel+1
  2609  001CAC  C011  F0FE         	movff	?___fldiv+2,colourcards_testingRGBC@B_rel+2
  2610  001CB0  C012  F0FF         	movff	?___fldiv+3,colourcards_testingRGBC@B_rel+3
  2611  001CB4                     
  2612                           ;colour_cards.c: 125:         char buf[20];;colour_cards.c: 126:         if ((R_rel>0.54
      +                          ) && (G_rel<0.245) && (B_rel<0.18)) {
  2613  001CB4  0E71               	movlw	113
  2614  001CB6  6E1A               	movwf	___flge@ff1^0,c
  2615  001CB8  0E3D               	movlw	61
  2616  001CBA  6E1B               	movwf	(___flge@ff1+1)^0,c
  2617  001CBC  0E0A               	movlw	10
  2618  001CBE  6E1C               	movwf	(___flge@ff1+2)^0,c
  2619  001CC0  0E3F               	movlw	63
  2620  001CC2  6E1D               	movwf	(___flge@ff1+3)^0,c
  2621  001CC4  C0F4  F01E         	movff	colourcards_testingRGBC@R_rel,___flge@ff2
  2622  001CC8  C0F5  F01F         	movff	colourcards_testingRGBC@R_rel+1,___flge@ff2+1
  2623  001CCC  C0F6  F020         	movff	colourcards_testingRGBC@R_rel+2,___flge@ff2+2
  2624  001CD0  C0F7  F021         	movff	colourcards_testingRGBC@R_rel+3,___flge@ff2+3
  2625  001CD4  EC45  F029         	call	___flge	;wreg free
  2626  001CD8  B0D8               	btfsc	status,0,c
  2627  001CDA  EF71  F00E         	goto	u7461
  2628  001CDE  EF73  F00E         	goto	u7460
  2629  001CE2                     u7461:
  2630  001CE2  EFDE  F00E         	goto	l6025
  2631  001CE6                     u7460:
  2632  001CE6  C0F8  F01A         	movff	colourcards_testingRGBC@G_rel,___flge@ff1
  2633  001CEA  C0F9  F01B         	movff	colourcards_testingRGBC@G_rel+1,___flge@ff1+1
  2634  001CEE  C0FA  F01C         	movff	colourcards_testingRGBC@G_rel+2,___flge@ff1+2
  2635  001CF2  C0FB  F01D         	movff	colourcards_testingRGBC@G_rel+3,___flge@ff1+3
  2636  001CF6  0E48               	movlw	72
  2637  001CF8  6E1E               	movwf	___flge@ff2^0,c
  2638  001CFA  0EE1               	movlw	225
  2639  001CFC  6E1F               	movwf	(___flge@ff2+1)^0,c
  2640  001CFE  0E7A               	movlw	122
  2641  001D00  6E20               	movwf	(___flge@ff2+2)^0,c
  2642  001D02  0E3E               	movlw	62
  2643  001D04  6E21               	movwf	(___flge@ff2+3)^0,c
  2644  001D06  EC45  F029         	call	___flge	;wreg free
  2645  001D0A  B0D8               	btfsc	status,0,c
  2646  001D0C  EF8A  F00E         	goto	u7471
  2647  001D10  EF8C  F00E         	goto	u7470
  2648  001D14                     u7471:
  2649  001D14  EFDE  F00E         	goto	l6025
  2650  001D18                     u7470:
  2651  001D18  C0FC  F01A         	movff	colourcards_testingRGBC@B_rel,___flge@ff1
  2652  001D1C  C0FD  F01B         	movff	colourcards_testingRGBC@B_rel+1,___flge@ff1+1
  2653  001D20  C0FE  F01C         	movff	colourcards_testingRGBC@B_rel+2,___flge@ff1+2
  2654  001D24  C0FF  F01D         	movff	colourcards_testingRGBC@B_rel+3,___flge@ff1+3
  2655  001D28  0EEC               	movlw	236
  2656  001D2A  6E1E               	movwf	___flge@ff2^0,c
  2657  001D2C  0E51               	movlw	81
  2658  001D2E  6E1F               	movwf	(___flge@ff2+1)^0,c
  2659  001D30  0E38               	movlw	56
  2660  001D32  6E20               	movwf	(___flge@ff2+2)^0,c
  2661  001D34  0E3E               	movlw	62
  2662  001D36  6E21               	movwf	(___flge@ff2+3)^0,c
  2663  001D38  EC45  F029         	call	___flge	;wreg free
  2664  001D3C  B0D8               	btfsc	status,0,c
  2665  001D3E  EFA3  F00E         	goto	u7481
  2666  001D42  EFA5  F00E         	goto	u7480
  2667  001D46                     u7481:
  2668  001D46  EFDE  F00E         	goto	l6025
  2669  001D4A                     u7480:
  2670  001D4A                     
  2671                           ;colour_cards.c: 128:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "red");
  2672  001D4A  0ED0               	movlw	low colourcards_testingRGBC@buf
  2673  001D4C  0100               	movlb	0	; () banked
  2674  001D4E  6FAE               	movwf	sprintf@s& (0+255),b
  2675  001D50  0E00               	movlw	high colourcards_testingRGBC@buf
  2676  001D52  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2677  001D54  0E01               	movlw	low STR_1
  2678  001D56  6FB0               	movwf	sprintf@fmt& (0+255),b
  2679  001D58  0E0E               	movlw	high STR_1
  2680  001D5A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2681  001D5C  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  2682  001D60  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  2683  001D64  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  2684  001D68  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  2685  001D6C  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  2686  001D70  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  2687  001D74  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  2688  001D78  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  2689  001D7C  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  2690  001D80  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  2691  001D84  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  2692  001D88  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  2693  001D8C  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  2694  001D90  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  2695  001D94  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  2696  001D98  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  2697  001D9C  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  2698  001DA0  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  2699  001DA4  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  2700  001DA8  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  2701  001DAC  0EAF               	movlw	low STR_2
  2702  001DAE  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2703  001DB0  0E0E               	movlw	high STR_2
  2704  001DB2  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2705  001DB4  EC7C  F02F         	call	_sprintf	;wreg free
  2706                           
  2707                           ;colour_cards.c: 131:         } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195))
      +                           {
  2708  001DB8  EFB1  F012         	goto	l6083
  2709  001DBC                     l6025:
  2710  001DBC  C0F4  F01A         	movff	colourcards_testingRGBC@R_rel,___flge@ff1
  2711  001DC0  C0F5  F01B         	movff	colourcards_testingRGBC@R_rel+1,___flge@ff1+1
  2712  001DC4  C0F6  F01C         	movff	colourcards_testingRGBC@R_rel+2,___flge@ff1+2
  2713  001DC8  C0F7  F01D         	movff	colourcards_testingRGBC@R_rel+3,___flge@ff1+3
  2714  001DCC  0E52               	movlw	82
  2715  001DCE  6E1E               	movwf	___flge@ff2^0,c
  2716  001DD0  0EB8               	movlw	184
  2717  001DD2  6E1F               	movwf	(___flge@ff2+1)^0,c
  2718  001DD4  0EDE               	movlw	222
  2719  001DD6  6E20               	movwf	(___flge@ff2+2)^0,c
  2720  001DD8  0E3E               	movlw	62
  2721  001DDA  6E21               	movwf	(___flge@ff2+3)^0,c
  2722  001DDC  EC45  F029         	call	___flge	;wreg free
  2723  001DE0  B0D8               	btfsc	status,0,c
  2724  001DE2  EFF5  F00E         	goto	u7491
  2725  001DE6  EFF7  F00E         	goto	u7490
  2726  001DEA                     u7491:
  2727  001DEA  EF62  F00F         	goto	l6033
  2728  001DEE                     u7490:
  2729  001DEE  0E52               	movlw	82
  2730  001DF0  6E1A               	movwf	___flge@ff1^0,c
  2731  001DF2  0EB8               	movlw	184
  2732  001DF4  6E1B               	movwf	(___flge@ff1+1)^0,c
  2733  001DF6  0E9E               	movlw	158
  2734  001DF8  6E1C               	movwf	(___flge@ff1+2)^0,c
  2735  001DFA  0E3E               	movlw	62
  2736  001DFC  6E1D               	movwf	(___flge@ff1+3)^0,c
  2737  001DFE  C0F8  F01E         	movff	colourcards_testingRGBC@G_rel,___flge@ff2
  2738  001E02  C0F9  F01F         	movff	colourcards_testingRGBC@G_rel+1,___flge@ff2+1
  2739  001E06  C0FA  F020         	movff	colourcards_testingRGBC@G_rel+2,___flge@ff2+2
  2740  001E0A  C0FB  F021         	movff	colourcards_testingRGBC@G_rel+3,___flge@ff2+3
  2741  001E0E  EC45  F029         	call	___flge	;wreg free
  2742  001E12  B0D8               	btfsc	status,0,c
  2743  001E14  EF0E  F00F         	goto	u7501
  2744  001E18  EF10  F00F         	goto	u7500
  2745  001E1C                     u7501:
  2746  001E1C  EF62  F00F         	goto	l6033
  2747  001E20                     u7500:
  2748  001E20  0E14               	movlw	20
  2749  001E22  6E1A               	movwf	___flge@ff1^0,c
  2750  001E24  0EAE               	movlw	174
  2751  001E26  6E1B               	movwf	(___flge@ff1+1)^0,c
  2752  001E28  0E47               	movlw	71
  2753  001E2A  6E1C               	movwf	(___flge@ff1+2)^0,c
  2754  001E2C  0E3E               	movlw	62
  2755  001E2E  6E1D               	movwf	(___flge@ff1+3)^0,c
  2756  001E30  C0FC  F01E         	movff	colourcards_testingRGBC@B_rel,___flge@ff2
  2757  001E34  C0FD  F01F         	movff	colourcards_testingRGBC@B_rel+1,___flge@ff2+1
  2758  001E38  C0FE  F020         	movff	colourcards_testingRGBC@B_rel+2,___flge@ff2+2
  2759  001E3C  C0FF  F021         	movff	colourcards_testingRGBC@B_rel+3,___flge@ff2+3
  2760  001E40  EC45  F029         	call	___flge	;wreg free
  2761  001E44  B0D8               	btfsc	status,0,c
  2762  001E46  EF27  F00F         	goto	u7511
  2763  001E4A  EF29  F00F         	goto	u7510
  2764  001E4E                     u7511:
  2765  001E4E  EF62  F00F         	goto	l6033
  2766  001E52                     u7510:
  2767  001E52                     
  2768                           ;colour_cards.c: 133:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "green");
  2769  001E52  0ED0               	movlw	low colourcards_testingRGBC@buf
  2770  001E54  0100               	movlb	0	; () banked
  2771  001E56  6FAE               	movwf	sprintf@s& (0+255),b
  2772  001E58  0E00               	movlw	high colourcards_testingRGBC@buf
  2773  001E5A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2774  001E5C  0E01               	movlw	low STR_1
  2775  001E5E  6FB0               	movwf	sprintf@fmt& (0+255),b
  2776  001E60  0E0E               	movlw	high STR_1
  2777  001E62  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2778  001E64  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  2779  001E68  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  2780  001E6C  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  2781  001E70  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  2782  001E74  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  2783  001E78  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  2784  001E7C  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  2785  001E80  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  2786  001E84  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  2787  001E88  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  2788  001E8C  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  2789  001E90  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  2790  001E94  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  2791  001E98  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  2792  001E9C  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  2793  001EA0  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  2794  001EA4  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  2795  001EA8  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  2796  001EAC  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  2797  001EB0  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  2798  001EB4  0E94               	movlw	low STR_4
  2799  001EB6  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2800  001EB8  0E0E               	movlw	high STR_4
  2801  001EBA  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2802  001EBC  EC7C  F02F         	call	_sprintf	;wreg free
  2803                           
  2804                           ;colour_cards.c: 136:         } else if ((R_rel<0.43) && (G_rel>0.30) && (B_rel>0.21)) {
  2805  001EC0  EFB1  F012         	goto	l6083
  2806  001EC4                     l6033:
  2807  001EC4  C0F4  F01A         	movff	colourcards_testingRGBC@R_rel,___flge@ff1
  2808  001EC8  C0F5  F01B         	movff	colourcards_testingRGBC@R_rel+1,___flge@ff1+1
  2809  001ECC  C0F6  F01C         	movff	colourcards_testingRGBC@R_rel+2,___flge@ff1+2
  2810  001ED0  C0F7  F01D         	movff	colourcards_testingRGBC@R_rel+3,___flge@ff1+3
  2811  001ED4  0EF6               	movlw	246
  2812  001ED6  6E1E               	movwf	___flge@ff2^0,c
  2813  001ED8  0E28               	movlw	40
  2814  001EDA  6E1F               	movwf	(___flge@ff2+1)^0,c
  2815  001EDC  0EDC               	movlw	220
  2816  001EDE  6E20               	movwf	(___flge@ff2+2)^0,c
  2817  001EE0  0E3E               	movlw	62
  2818  001EE2  6E21               	movwf	(___flge@ff2+3)^0,c
  2819  001EE4  EC45  F029         	call	___flge	;wreg free
  2820  001EE8  B0D8               	btfsc	status,0,c
  2821  001EEA  EF79  F00F         	goto	u7521
  2822  001EEE  EF7B  F00F         	goto	u7520
  2823  001EF2                     u7521:
  2824  001EF2  EFE6  F00F         	goto	l6041
  2825  001EF6                     u7520:
  2826  001EF6  0E9A               	movlw	154
  2827  001EF8  6E1A               	movwf	___flge@ff1^0,c
  2828  001EFA  0E99               	movlw	153
  2829  001EFC  6E1B               	movwf	(___flge@ff1+1)^0,c
  2830  001EFE  0E99               	movlw	153
  2831  001F00  6E1C               	movwf	(___flge@ff1+2)^0,c
  2832  001F02  0E3E               	movlw	62
  2833  001F04  6E1D               	movwf	(___flge@ff1+3)^0,c
  2834  001F06  C0F8  F01E         	movff	colourcards_testingRGBC@G_rel,___flge@ff2
  2835  001F0A  C0F9  F01F         	movff	colourcards_testingRGBC@G_rel+1,___flge@ff2+1
  2836  001F0E  C0FA  F020         	movff	colourcards_testingRGBC@G_rel+2,___flge@ff2+2
  2837  001F12  C0FB  F021         	movff	colourcards_testingRGBC@G_rel+3,___flge@ff2+3
  2838  001F16  EC45  F029         	call	___flge	;wreg free
  2839  001F1A  B0D8               	btfsc	status,0,c
  2840  001F1C  EF92  F00F         	goto	u7531
  2841  001F20  EF94  F00F         	goto	u7530
  2842  001F24                     u7531:
  2843  001F24  EFE6  F00F         	goto	l6041
  2844  001F28                     u7530:
  2845  001F28  0E3D               	movlw	61
  2846  001F2A  6E1A               	movwf	___flge@ff1^0,c
  2847  001F2C  0E0A               	movlw	10
  2848  001F2E  6E1B               	movwf	(___flge@ff1+1)^0,c
  2849  001F30  0E57               	movlw	87
  2850  001F32  6E1C               	movwf	(___flge@ff1+2)^0,c
  2851  001F34  0E3E               	movlw	62
  2852  001F36  6E1D               	movwf	(___flge@ff1+3)^0,c
  2853  001F38  C0FC  F01E         	movff	colourcards_testingRGBC@B_rel,___flge@ff2
  2854  001F3C  C0FD  F01F         	movff	colourcards_testingRGBC@B_rel+1,___flge@ff2+1
  2855  001F40  C0FE  F020         	movff	colourcards_testingRGBC@B_rel+2,___flge@ff2+2
  2856  001F44  C0FF  F021         	movff	colourcards_testingRGBC@B_rel+3,___flge@ff2+3
  2857  001F48  EC45  F029         	call	___flge	;wreg free
  2858  001F4C  B0D8               	btfsc	status,0,c
  2859  001F4E  EFAB  F00F         	goto	u7541
  2860  001F52  EFAD  F00F         	goto	u7540
  2861  001F56                     u7541:
  2862  001F56  EFE6  F00F         	goto	l6041
  2863  001F5A                     u7540:
  2864  001F5A                     
  2865                           ;colour_cards.c: 138:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "blue");
  2866  001F5A  0ED0               	movlw	low colourcards_testingRGBC@buf
  2867  001F5C  0100               	movlb	0	; () banked
  2868  001F5E  6FAE               	movwf	sprintf@s& (0+255),b
  2869  001F60  0E00               	movlw	high colourcards_testingRGBC@buf
  2870  001F62  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2871  001F64  0E01               	movlw	low STR_1
  2872  001F66  6FB0               	movwf	sprintf@fmt& (0+255),b
  2873  001F68  0E0E               	movlw	high STR_1
  2874  001F6A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2875  001F6C  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  2876  001F70  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  2877  001F74  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  2878  001F78  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  2879  001F7C  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  2880  001F80  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  2881  001F84  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  2882  001F88  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  2883  001F8C  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  2884  001F90  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  2885  001F94  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  2886  001F98  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  2887  001F9C  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  2888  001FA0  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  2889  001FA4  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  2890  001FA8  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  2891  001FAC  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  2892  001FB0  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  2893  001FB4  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  2894  001FB8  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  2895  001FBC  0E73               	movlw	low (STR_14+6)
  2896  001FBE  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2897  001FC0  0E0E               	movlw	high (STR_14+6)
  2898  001FC2  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2899  001FC4  EC7C  F02F         	call	_sprintf	;wreg free
  2900                           
  2901                           ;colour_cards.c: 141:         } else if ((R_rel>0.49) && (G_rel>0.285) && (B_rel>0.18)) 
      +                          {
  2902  001FC8  EFB1  F012         	goto	l6083
  2903  001FCC                     l6041:
  2904  001FCC  0E48               	movlw	72
  2905  001FCE  6E1A               	movwf	___flge@ff1^0,c
  2906  001FD0  0EE1               	movlw	225
  2907  001FD2  6E1B               	movwf	(___flge@ff1+1)^0,c
  2908  001FD4  0EFA               	movlw	250
  2909  001FD6  6E1C               	movwf	(___flge@ff1+2)^0,c
  2910  001FD8  0E3E               	movlw	62
  2911  001FDA  6E1D               	movwf	(___flge@ff1+3)^0,c
  2912  001FDC  C0F4  F01E         	movff	colourcards_testingRGBC@R_rel,___flge@ff2
  2913  001FE0  C0F5  F01F         	movff	colourcards_testingRGBC@R_rel+1,___flge@ff2+1
  2914  001FE4  C0F6  F020         	movff	colourcards_testingRGBC@R_rel+2,___flge@ff2+2
  2915  001FE8  C0F7  F021         	movff	colourcards_testingRGBC@R_rel+3,___flge@ff2+3
  2916  001FEC  EC45  F029         	call	___flge	;wreg free
  2917  001FF0  B0D8               	btfsc	status,0,c
  2918  001FF2  EFFD  F00F         	goto	u7551
  2919  001FF6  EFFF  F00F         	goto	u7550
  2920  001FFA                     u7551:
  2921  001FFA  EF6A  F010         	goto	l6049
  2922  001FFE                     u7550:
  2923  001FFE  0E85               	movlw	133
  2924  002000  6E1A               	movwf	___flge@ff1^0,c
  2925  002002  0EEB               	movlw	235
  2926  002004  6E1B               	movwf	(___flge@ff1+1)^0,c
  2927  002006  0E91               	movlw	145
  2928  002008  6E1C               	movwf	(___flge@ff1+2)^0,c
  2929  00200A  0E3E               	movlw	62
  2930  00200C  6E1D               	movwf	(___flge@ff1+3)^0,c
  2931  00200E  C0F8  F01E         	movff	colourcards_testingRGBC@G_rel,___flge@ff2
  2932  002012  C0F9  F01F         	movff	colourcards_testingRGBC@G_rel+1,___flge@ff2+1
  2933  002016  C0FA  F020         	movff	colourcards_testingRGBC@G_rel+2,___flge@ff2+2
  2934  00201A  C0FB  F021         	movff	colourcards_testingRGBC@G_rel+3,___flge@ff2+3
  2935  00201E  EC45  F029         	call	___flge	;wreg free
  2936  002022  B0D8               	btfsc	status,0,c
  2937  002024  EF16  F010         	goto	u7561
  2938  002028  EF18  F010         	goto	u7560
  2939  00202C                     u7561:
  2940  00202C  EF6A  F010         	goto	l6049
  2941  002030                     u7560:
  2942  002030  0EEC               	movlw	236
  2943  002032  6E1A               	movwf	___flge@ff1^0,c
  2944  002034  0E51               	movlw	81
  2945  002036  6E1B               	movwf	(___flge@ff1+1)^0,c
  2946  002038  0E38               	movlw	56
  2947  00203A  6E1C               	movwf	(___flge@ff1+2)^0,c
  2948  00203C  0E3E               	movlw	62
  2949  00203E  6E1D               	movwf	(___flge@ff1+3)^0,c
  2950  002040  C0FC  F01E         	movff	colourcards_testingRGBC@B_rel,___flge@ff2
  2951  002044  C0FD  F01F         	movff	colourcards_testingRGBC@B_rel+1,___flge@ff2+1
  2952  002048  C0FE  F020         	movff	colourcards_testingRGBC@B_rel+2,___flge@ff2+2
  2953  00204C  C0FF  F021         	movff	colourcards_testingRGBC@B_rel+3,___flge@ff2+3
  2954  002050  EC45  F029         	call	___flge	;wreg free
  2955  002054  B0D8               	btfsc	status,0,c
  2956  002056  EF2F  F010         	goto	u7571
  2957  00205A  EF31  F010         	goto	u7570
  2958  00205E                     u7571:
  2959  00205E  EF6A  F010         	goto	l6049
  2960  002062                     u7570:
  2961  002062                     
  2962                           ;colour_cards.c: 143:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "yellow");
  2963  002062  0ED0               	movlw	low colourcards_testingRGBC@buf
  2964  002064  0100               	movlb	0	; () banked
  2965  002066  6FAE               	movwf	sprintf@s& (0+255),b
  2966  002068  0E00               	movlw	high colourcards_testingRGBC@buf
  2967  00206A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2968  00206C  0E01               	movlw	low STR_1
  2969  00206E  6FB0               	movwf	sprintf@fmt& (0+255),b
  2970  002070  0E0E               	movlw	high STR_1
  2971  002072  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2972  002074  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  2973  002078  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  2974  00207C  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  2975  002080  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  2976  002084  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  2977  002088  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  2978  00208C  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  2979  002090  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  2980  002094  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  2981  002098  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  2982  00209C  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  2983  0020A0  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  2984  0020A4  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  2985  0020A8  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  2986  0020AC  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  2987  0020B0  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  2988  0020B4  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  2989  0020B8  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  2990  0020BC  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  2991  0020C0  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  2992  0020C4  0E87               	movlw	low STR_8
  2993  0020C6  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2994  0020C8  0E0E               	movlw	high STR_8
  2995  0020CA  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2996  0020CC  EC7C  F02F         	call	_sprintf	;wreg free
  2997                           
  2998                           ;colour_cards.c: 146:         } else if ((R_rel>0.49) && (G_rel<0.275) && (B_rel>0.195))
      +                           {
  2999  0020D0  EFB1  F012         	goto	l6083
  3000  0020D4                     l6049:
  3001  0020D4  0E48               	movlw	72
  3002  0020D6  6E1A               	movwf	___flge@ff1^0,c
  3003  0020D8  0EE1               	movlw	225
  3004  0020DA  6E1B               	movwf	(___flge@ff1+1)^0,c
  3005  0020DC  0EFA               	movlw	250
  3006  0020DE  6E1C               	movwf	(___flge@ff1+2)^0,c
  3007  0020E0  0E3E               	movlw	62
  3008  0020E2  6E1D               	movwf	(___flge@ff1+3)^0,c
  3009  0020E4  C0F4  F01E         	movff	colourcards_testingRGBC@R_rel,___flge@ff2
  3010  0020E8  C0F5  F01F         	movff	colourcards_testingRGBC@R_rel+1,___flge@ff2+1
  3011  0020EC  C0F6  F020         	movff	colourcards_testingRGBC@R_rel+2,___flge@ff2+2
  3012  0020F0  C0F7  F021         	movff	colourcards_testingRGBC@R_rel+3,___flge@ff2+3
  3013  0020F4  EC45  F029         	call	___flge	;wreg free
  3014  0020F8  B0D8               	btfsc	status,0,c
  3015  0020FA  EF81  F010         	goto	u7581
  3016  0020FE  EF83  F010         	goto	u7580
  3017  002102                     u7581:
  3018  002102  EFEE  F010         	goto	l6057
  3019  002106                     u7580:
  3020  002106  C0F8  F01A         	movff	colourcards_testingRGBC@G_rel,___flge@ff1
  3021  00210A  C0F9  F01B         	movff	colourcards_testingRGBC@G_rel+1,___flge@ff1+1
  3022  00210E  C0FA  F01C         	movff	colourcards_testingRGBC@G_rel+2,___flge@ff1+2
  3023  002112  C0FB  F01D         	movff	colourcards_testingRGBC@G_rel+3,___flge@ff1+3
  3024  002116  0ECD               	movlw	205
  3025  002118  6E1E               	movwf	___flge@ff2^0,c
  3026  00211A  0ECC               	movlw	204
  3027  00211C  6E1F               	movwf	(___flge@ff2+1)^0,c
  3028  00211E  0E8C               	movlw	140
  3029  002120  6E20               	movwf	(___flge@ff2+2)^0,c
  3030  002122  0E3E               	movlw	62
  3031  002124  6E21               	movwf	(___flge@ff2+3)^0,c
  3032  002126  EC45  F029         	call	___flge	;wreg free
  3033  00212A  B0D8               	btfsc	status,0,c
  3034  00212C  EF9A  F010         	goto	u7591
  3035  002130  EF9C  F010         	goto	u7590
  3036  002134                     u7591:
  3037  002134  EFEE  F010         	goto	l6057
  3038  002138                     u7590:
  3039  002138  0E14               	movlw	20
  3040  00213A  6E1A               	movwf	___flge@ff1^0,c
  3041  00213C  0EAE               	movlw	174
  3042  00213E  6E1B               	movwf	(___flge@ff1+1)^0,c
  3043  002140  0E47               	movlw	71
  3044  002142  6E1C               	movwf	(___flge@ff1+2)^0,c
  3045  002144  0E3E               	movlw	62
  3046  002146  6E1D               	movwf	(___flge@ff1+3)^0,c
  3047  002148  C0FC  F01E         	movff	colourcards_testingRGBC@B_rel,___flge@ff2
  3048  00214C  C0FD  F01F         	movff	colourcards_testingRGBC@B_rel+1,___flge@ff2+1
  3049  002150  C0FE  F020         	movff	colourcards_testingRGBC@B_rel+2,___flge@ff2+2
  3050  002154  C0FF  F021         	movff	colourcards_testingRGBC@B_rel+3,___flge@ff2+3
  3051  002158  EC45  F029         	call	___flge	;wreg free
  3052  00215C  B0D8               	btfsc	status,0,c
  3053  00215E  EFB3  F010         	goto	u7601
  3054  002162  EFB5  F010         	goto	u7600
  3055  002166                     u7601:
  3056  002166  EFEE  F010         	goto	l6057
  3057  00216A                     u7600:
  3058  00216A                     
  3059                           ;colour_cards.c: 148:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "pink");
  3060  00216A  0ED0               	movlw	low colourcards_testingRGBC@buf
  3061  00216C  0100               	movlb	0	; () banked
  3062  00216E  6FAE               	movwf	sprintf@s& (0+255),b
  3063  002170  0E00               	movlw	high colourcards_testingRGBC@buf
  3064  002172  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3065  002174  0E01               	movlw	low STR_1
  3066  002176  6FB0               	movwf	sprintf@fmt& (0+255),b
  3067  002178  0E0E               	movlw	high STR_1
  3068  00217A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3069  00217C  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  3070  002180  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  3071  002184  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  3072  002188  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  3073  00218C  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  3074  002190  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  3075  002194  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  3076  002198  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  3077  00219C  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  3078  0021A0  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  3079  0021A4  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  3080  0021A8  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  3081  0021AC  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  3082  0021B0  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  3083  0021B4  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  3084  0021B8  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  3085  0021BC  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  3086  0021C0  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  3087  0021C4  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  3088  0021C8  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  3089  0021CC  0E9A               	movlw	low STR_10
  3090  0021CE  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  3091  0021D0  0E0E               	movlw	high STR_10
  3092  0021D2  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  3093  0021D4  EC7C  F02F         	call	_sprintf	;wreg free
  3094                           
  3095                           ;colour_cards.c: 151:         } else if ((R_rel>0.54) && (G_rel<0.24) && (B_rel<0.18)) {
  3096  0021D8  EFB1  F012         	goto	l6083
  3097  0021DC                     l6057:
  3098  0021DC  0E71               	movlw	113
  3099  0021DE  6E1A               	movwf	___flge@ff1^0,c
  3100  0021E0  0E3D               	movlw	61
  3101  0021E2  6E1B               	movwf	(___flge@ff1+1)^0,c
  3102  0021E4  0E0A               	movlw	10
  3103  0021E6  6E1C               	movwf	(___flge@ff1+2)^0,c
  3104  0021E8  0E3F               	movlw	63
  3105  0021EA  6E1D               	movwf	(___flge@ff1+3)^0,c
  3106  0021EC  C0F4  F01E         	movff	colourcards_testingRGBC@R_rel,___flge@ff2
  3107  0021F0  C0F5  F01F         	movff	colourcards_testingRGBC@R_rel+1,___flge@ff2+1
  3108  0021F4  C0F6  F020         	movff	colourcards_testingRGBC@R_rel+2,___flge@ff2+2
  3109  0021F8  C0F7  F021         	movff	colourcards_testingRGBC@R_rel+3,___flge@ff2+3
  3110  0021FC  EC45  F029         	call	___flge	;wreg free
  3111  002200  B0D8               	btfsc	status,0,c
  3112  002202  EF05  F011         	goto	u7611
  3113  002206  EF07  F011         	goto	u7610
  3114  00220A                     u7611:
  3115  00220A  EF72  F011         	goto	l6065
  3116  00220E                     u7610:
  3117  00220E  C0F8  F01A         	movff	colourcards_testingRGBC@G_rel,___flge@ff1
  3118  002212  C0F9  F01B         	movff	colourcards_testingRGBC@G_rel+1,___flge@ff1+1
  3119  002216  C0FA  F01C         	movff	colourcards_testingRGBC@G_rel+2,___flge@ff1+2
  3120  00221A  C0FB  F01D         	movff	colourcards_testingRGBC@G_rel+3,___flge@ff1+3
  3121  00221E  0E8F               	movlw	143
  3122  002220  6E1E               	movwf	___flge@ff2^0,c
  3123  002222  0EC2               	movlw	194
  3124  002224  6E1F               	movwf	(___flge@ff2+1)^0,c
  3125  002226  0E75               	movlw	117
  3126  002228  6E20               	movwf	(___flge@ff2+2)^0,c
  3127  00222A  0E3E               	movlw	62
  3128  00222C  6E21               	movwf	(___flge@ff2+3)^0,c
  3129  00222E  EC45  F029         	call	___flge	;wreg free
  3130  002232  B0D8               	btfsc	status,0,c
  3131  002234  EF1E  F011         	goto	u7621
  3132  002238  EF20  F011         	goto	u7620
  3133  00223C                     u7621:
  3134  00223C  EF72  F011         	goto	l6065
  3135  002240                     u7620:
  3136  002240  C0FC  F01A         	movff	colourcards_testingRGBC@B_rel,___flge@ff1
  3137  002244  C0FD  F01B         	movff	colourcards_testingRGBC@B_rel+1,___flge@ff1+1
  3138  002248  C0FE  F01C         	movff	colourcards_testingRGBC@B_rel+2,___flge@ff1+2
  3139  00224C  C0FF  F01D         	movff	colourcards_testingRGBC@B_rel+3,___flge@ff1+3
  3140  002250  0EEC               	movlw	236
  3141  002252  6E1E               	movwf	___flge@ff2^0,c
  3142  002254  0E51               	movlw	81
  3143  002256  6E1F               	movwf	(___flge@ff2+1)^0,c
  3144  002258  0E38               	movlw	56
  3145  00225A  6E20               	movwf	(___flge@ff2+2)^0,c
  3146  00225C  0E3E               	movlw	62
  3147  00225E  6E21               	movwf	(___flge@ff2+3)^0,c
  3148  002260  EC45  F029         	call	___flge	;wreg free
  3149  002264  B0D8               	btfsc	status,0,c
  3150  002266  EF37  F011         	goto	u7631
  3151  00226A  EF39  F011         	goto	u7630
  3152  00226E                     u7631:
  3153  00226E  EF72  F011         	goto	l6065
  3154  002272                     u7630:
  3155  002272                     
  3156                           ;colour_cards.c: 153:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "orange");
  3157  002272  0ED0               	movlw	low colourcards_testingRGBC@buf
  3158  002274  0100               	movlb	0	; () banked
  3159  002276  6FAE               	movwf	sprintf@s& (0+255),b
  3160  002278  0E00               	movlw	high colourcards_testingRGBC@buf
  3161  00227A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3162  00227C  0E01               	movlw	low STR_1
  3163  00227E  6FB0               	movwf	sprintf@fmt& (0+255),b
  3164  002280  0E0E               	movlw	high STR_1
  3165  002282  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3166  002284  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  3167  002288  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  3168  00228C  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  3169  002290  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  3170  002294  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  3171  002298  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  3172  00229C  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  3173  0022A0  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  3174  0022A4  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  3175  0022A8  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  3176  0022AC  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  3177  0022B0  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  3178  0022B4  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  3179  0022B8  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  3180  0022BC  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  3181  0022C0  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  3182  0022C4  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  3183  0022C8  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  3184  0022CC  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  3185  0022D0  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  3186  0022D4  0E80               	movlw	low STR_12
  3187  0022D6  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  3188  0022D8  0E0E               	movlw	high STR_12
  3189  0022DA  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  3190  0022DC  EC7C  F02F         	call	_sprintf	;wreg free
  3191                           
  3192                           ;colour_cards.c: 156:         } else if ((R_rel<0.44) && (G_rel>0.305) && (B_rel>0.21)) 
      +                          {
  3193  0022E0  EFB1  F012         	goto	l6083
  3194  0022E4                     l6065:
  3195  0022E4  C0F4  F01A         	movff	colourcards_testingRGBC@R_rel,___flge@ff1
  3196  0022E8  C0F5  F01B         	movff	colourcards_testingRGBC@R_rel+1,___flge@ff1+1
  3197  0022EC  C0F6  F01C         	movff	colourcards_testingRGBC@R_rel+2,___flge@ff1+2
  3198  0022F0  C0F7  F01D         	movff	colourcards_testingRGBC@R_rel+3,___flge@ff1+3
  3199  0022F4  0EAE               	movlw	174
  3200  0022F6  6E1E               	movwf	___flge@ff2^0,c
  3201  0022F8  0E47               	movlw	71
  3202  0022FA  6E1F               	movwf	(___flge@ff2+1)^0,c
  3203  0022FC  0EE1               	movlw	225
  3204  0022FE  6E20               	movwf	(___flge@ff2+2)^0,c
  3205  002300  0E3E               	movlw	62
  3206  002302  6E21               	movwf	(___flge@ff2+3)^0,c
  3207  002304  EC45  F029         	call	___flge	;wreg free
  3208  002308  B0D8               	btfsc	status,0,c
  3209  00230A  EF89  F011         	goto	u7641
  3210  00230E  EF8B  F011         	goto	u7640
  3211  002312                     u7641:
  3212  002312  EFF6  F011         	goto	l6073
  3213  002316                     u7640:
  3214  002316  0EF6               	movlw	246
  3215  002318  6E1A               	movwf	___flge@ff1^0,c
  3216  00231A  0E28               	movlw	40
  3217  00231C  6E1B               	movwf	(___flge@ff1+1)^0,c
  3218  00231E  0E9C               	movlw	156
  3219  002320  6E1C               	movwf	(___flge@ff1+2)^0,c
  3220  002322  0E3E               	movlw	62
  3221  002324  6E1D               	movwf	(___flge@ff1+3)^0,c
  3222  002326  C0F8  F01E         	movff	colourcards_testingRGBC@G_rel,___flge@ff2
  3223  00232A  C0F9  F01F         	movff	colourcards_testingRGBC@G_rel+1,___flge@ff2+1
  3224  00232E  C0FA  F020         	movff	colourcards_testingRGBC@G_rel+2,___flge@ff2+2
  3225  002332  C0FB  F021         	movff	colourcards_testingRGBC@G_rel+3,___flge@ff2+3
  3226  002336  EC45  F029         	call	___flge	;wreg free
  3227  00233A  B0D8               	btfsc	status,0,c
  3228  00233C  EFA2  F011         	goto	u7651
  3229  002340  EFA4  F011         	goto	u7650
  3230  002344                     u7651:
  3231  002344  EFF6  F011         	goto	l6073
  3232  002348                     u7650:
  3233  002348  0E3D               	movlw	61
  3234  00234A  6E1A               	movwf	___flge@ff1^0,c
  3235  00234C  0E0A               	movlw	10
  3236  00234E  6E1B               	movwf	(___flge@ff1+1)^0,c
  3237  002350  0E57               	movlw	87
  3238  002352  6E1C               	movwf	(___flge@ff1+2)^0,c
  3239  002354  0E3E               	movlw	62
  3240  002356  6E1D               	movwf	(___flge@ff1+3)^0,c
  3241  002358  C0FC  F01E         	movff	colourcards_testingRGBC@B_rel,___flge@ff2
  3242  00235C  C0FD  F01F         	movff	colourcards_testingRGBC@B_rel+1,___flge@ff2+1
  3243  002360  C0FE  F020         	movff	colourcards_testingRGBC@B_rel+2,___flge@ff2+2
  3244  002364  C0FF  F021         	movff	colourcards_testingRGBC@B_rel+3,___flge@ff2+3
  3245  002368  EC45  F029         	call	___flge	;wreg free
  3246  00236C  B0D8               	btfsc	status,0,c
  3247  00236E  EFBB  F011         	goto	u7661
  3248  002372  EFBD  F011         	goto	u7660
  3249  002376                     u7661:
  3250  002376  EFF6  F011         	goto	l6073
  3251  00237A                     u7660:
  3252  00237A                     
  3253                           ;colour_cards.c: 158:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "light blue");
  3254  00237A  0ED0               	movlw	low colourcards_testingRGBC@buf
  3255  00237C  0100               	movlb	0	; () banked
  3256  00237E  6FAE               	movwf	sprintf@s& (0+255),b
  3257  002380  0E00               	movlw	high colourcards_testingRGBC@buf
  3258  002382  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3259  002384  0E01               	movlw	low STR_1
  3260  002386  6FB0               	movwf	sprintf@fmt& (0+255),b
  3261  002388  0E0E               	movlw	high STR_1
  3262  00238A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3263  00238C  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  3264  002390  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  3265  002394  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  3266  002398  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  3267  00239C  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  3268  0023A0  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  3269  0023A4  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  3270  0023A8  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  3271  0023AC  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  3272  0023B0  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  3273  0023B4  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  3274  0023B8  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  3275  0023BC  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  3276  0023C0  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  3277  0023C4  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  3278  0023C8  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  3279  0023CC  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  3280  0023D0  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  3281  0023D4  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  3282  0023D8  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  3283  0023DC  0E6D               	movlw	low STR_14
  3284  0023DE  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  3285  0023E0  0E0E               	movlw	high STR_14
  3286  0023E2  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  3287  0023E4  EC7C  F02F         	call	_sprintf	;wreg free
  3288                           
  3289                           ;colour_cards.c: 161:         } else if ((R_rel<0.46) && (G_rel>0.295) && (B_rel>0.21)) 
      +                          {
  3290  0023E8  EFB1  F012         	goto	l6083
  3291  0023EC                     l6073:
  3292  0023EC  C0F4  F01A         	movff	colourcards_testingRGBC@R_rel,___flge@ff1
  3293  0023F0  C0F5  F01B         	movff	colourcards_testingRGBC@R_rel+1,___flge@ff1+1
  3294  0023F4  C0F6  F01C         	movff	colourcards_testingRGBC@R_rel+2,___flge@ff1+2
  3295  0023F8  C0F7  F01D         	movff	colourcards_testingRGBC@R_rel+3,___flge@ff1+3
  3296  0023FC  0E1F               	movlw	31
  3297  0023FE  6E1E               	movwf	___flge@ff2^0,c
  3298  002400  0E85               	movlw	133
  3299  002402  6E1F               	movwf	(___flge@ff2+1)^0,c
  3300  002404  0EEB               	movlw	235
  3301  002406  6E20               	movwf	(___flge@ff2+2)^0,c
  3302  002408  0E3E               	movlw	62
  3303  00240A  6E21               	movwf	(___flge@ff2+3)^0,c
  3304  00240C  EC45  F029         	call	___flge	;wreg free
  3305  002410  B0D8               	btfsc	status,0,c
  3306  002412  EF0D  F012         	goto	u7671
  3307  002416  EF0F  F012         	goto	u7670
  3308  00241A                     u7671:
  3309  00241A  EF7A  F012         	goto	l6081
  3310  00241E                     u7670:
  3311  00241E  0E3D               	movlw	61
  3312  002420  6E1A               	movwf	___flge@ff1^0,c
  3313  002422  0E0A               	movlw	10
  3314  002424  6E1B               	movwf	(___flge@ff1+1)^0,c
  3315  002426  0E97               	movlw	151
  3316  002428  6E1C               	movwf	(___flge@ff1+2)^0,c
  3317  00242A  0E3E               	movlw	62
  3318  00242C  6E1D               	movwf	(___flge@ff1+3)^0,c
  3319  00242E  C0F8  F01E         	movff	colourcards_testingRGBC@G_rel,___flge@ff2
  3320  002432  C0F9  F01F         	movff	colourcards_testingRGBC@G_rel+1,___flge@ff2+1
  3321  002436  C0FA  F020         	movff	colourcards_testingRGBC@G_rel+2,___flge@ff2+2
  3322  00243A  C0FB  F021         	movff	colourcards_testingRGBC@G_rel+3,___flge@ff2+3
  3323  00243E  EC45  F029         	call	___flge	;wreg free
  3324  002442  B0D8               	btfsc	status,0,c
  3325  002444  EF26  F012         	goto	u7681
  3326  002448  EF28  F012         	goto	u7680
  3327  00244C                     u7681:
  3328  00244C  EF7A  F012         	goto	l6081
  3329  002450                     u7680:
  3330  002450  0E3D               	movlw	61
  3331  002452  6E1A               	movwf	___flge@ff1^0,c
  3332  002454  0E0A               	movlw	10
  3333  002456  6E1B               	movwf	(___flge@ff1+1)^0,c
  3334  002458  0E57               	movlw	87
  3335  00245A  6E1C               	movwf	(___flge@ff1+2)^0,c
  3336  00245C  0E3E               	movlw	62
  3337  00245E  6E1D               	movwf	(___flge@ff1+3)^0,c
  3338  002460  C0FC  F01E         	movff	colourcards_testingRGBC@B_rel,___flge@ff2
  3339  002464  C0FD  F01F         	movff	colourcards_testingRGBC@B_rel+1,___flge@ff2+1
  3340  002468  C0FE  F020         	movff	colourcards_testingRGBC@B_rel+2,___flge@ff2+2
  3341  00246C  C0FF  F021         	movff	colourcards_testingRGBC@B_rel+3,___flge@ff2+3
  3342  002470  EC45  F029         	call	___flge	;wreg free
  3343  002474  B0D8               	btfsc	status,0,c
  3344  002476  EF3F  F012         	goto	u7691
  3345  00247A  EF41  F012         	goto	u7690
  3346  00247E                     u7691:
  3347  00247E  EF7A  F012         	goto	l6081
  3348  002482                     u7690:
  3349  002482                     
  3350                           ;colour_cards.c: 163:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "white");
  3351  002482  0ED0               	movlw	low colourcards_testingRGBC@buf
  3352  002484  0100               	movlb	0	; () banked
  3353  002486  6FAE               	movwf	sprintf@s& (0+255),b
  3354  002488  0E00               	movlw	high colourcards_testingRGBC@buf
  3355  00248A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3356  00248C  0E01               	movlw	low STR_1
  3357  00248E  6FB0               	movwf	sprintf@fmt& (0+255),b
  3358  002490  0E0E               	movlw	high STR_1
  3359  002492  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3360  002494  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  3361  002498  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  3362  00249C  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  3363  0024A0  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  3364  0024A4  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  3365  0024A8  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  3366  0024AC  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  3367  0024B0  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  3368  0024B4  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  3369  0024B8  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  3370  0024BC  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  3371  0024C0  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  3372  0024C4  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  3373  0024C8  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  3374  0024CC  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  3375  0024D0  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  3376  0024D4  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  3377  0024D8  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  3378  0024DC  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  3379  0024E0  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  3380  0024E4  0E8E               	movlw	low STR_16
  3381  0024E6  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  3382  0024E8  0E0E               	movlw	high STR_16
  3383  0024EA  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  3384  0024EC  EC7C  F02F         	call	_sprintf	;wreg free
  3385                           
  3386                           ;colour_cards.c: 166:         } else {
  3387  0024F0  EFB1  F012         	goto	l6083
  3388  0024F4                     l6081:
  3389                           
  3390                           ;colour_cards.c: 168:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "unknown");
  3391  0024F4  0ED0               	movlw	low colourcards_testingRGBC@buf
  3392  0024F6  0100               	movlb	0	; () banked
  3393  0024F8  6FAE               	movwf	sprintf@s& (0+255),b
  3394  0024FA  0E00               	movlw	high colourcards_testingRGBC@buf
  3395  0024FC  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3396  0024FE  0E01               	movlw	low STR_1
  3397  002500  6FB0               	movwf	sprintf@fmt& (0+255),b
  3398  002502  0E0E               	movlw	high STR_1
  3399  002504  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3400  002506  C0EC  F0B2         	movff	colourcards_testingRGBC@R,?_sprintf+4
  3401  00250A  C0ED  F0B3         	movff	colourcards_testingRGBC@R+1,?_sprintf+5
  3402  00250E  C0EE  F0B4         	movff	colourcards_testingRGBC@G,?_sprintf+6
  3403  002512  C0EF  F0B5         	movff	colourcards_testingRGBC@G+1,?_sprintf+7
  3404  002516  C0F0  F0B6         	movff	colourcards_testingRGBC@B,?_sprintf+8
  3405  00251A  C0F1  F0B7         	movff	colourcards_testingRGBC@B+1,?_sprintf+9
  3406  00251E  C0F2  F0B8         	movff	colourcards_testingRGBC@C,?_sprintf+10
  3407  002522  C0F3  F0B9         	movff	colourcards_testingRGBC@C+1,?_sprintf+11
  3408  002526  C0F4  F0BA         	movff	colourcards_testingRGBC@R_rel,?_sprintf+12
  3409  00252A  C0F5  F0BB         	movff	colourcards_testingRGBC@R_rel+1,?_sprintf+13
  3410  00252E  C0F6  F0BC         	movff	colourcards_testingRGBC@R_rel+2,?_sprintf+14
  3411  002532  C0F7  F0BD         	movff	colourcards_testingRGBC@R_rel+3,?_sprintf+15
  3412  002536  C0F8  F0BE         	movff	colourcards_testingRGBC@G_rel,?_sprintf+16
  3413  00253A  C0F9  F0BF         	movff	colourcards_testingRGBC@G_rel+1,?_sprintf+17
  3414  00253E  C0FA  F0C0         	movff	colourcards_testingRGBC@G_rel+2,?_sprintf+18
  3415  002542  C0FB  F0C1         	movff	colourcards_testingRGBC@G_rel+3,?_sprintf+19
  3416  002546  C0FC  F0C2         	movff	colourcards_testingRGBC@B_rel,?_sprintf+20
  3417  00254A  C0FD  F0C3         	movff	colourcards_testingRGBC@B_rel+1,?_sprintf+21
  3418  00254E  C0FE  F0C4         	movff	colourcards_testingRGBC@B_rel+2,?_sprintf+22
  3419  002552  C0FF  F0C5         	movff	colourcards_testingRGBC@B_rel+3,?_sprintf+23
  3420  002556  0E78               	movlw	low STR_18
  3421  002558  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  3422  00255A  0E0E               	movlw	high STR_18
  3423  00255C  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  3424  00255E  EC7C  F02F         	call	_sprintf	;wreg free
  3425  002562                     l6083:
  3426                           
  3427                           ;colour_cards.c: 171:         sendStringSerial4(buf);
  3428  002562  0ED0               	movlw	low colourcards_testingRGBC@buf
  3429  002564  6E02               	movwf	sendStringSerial4@string^0,c
  3430  002566  0E00               	movlw	high colourcards_testingRGBC@buf
  3431  002568  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3432  00256A  EC23  F032         	call	_sendStringSerial4	;wreg free
  3433  00256E                     
  3434                           ;colour_cards.c: 172:         _delay((unsigned long)((500)*(64000000/4000.0)));
  3435  00256E  0E29               	movlw	41
  3436  002570  6E5B               	movwf	(??_colourcards_testingRGBC+1)^0,c
  3437  002572  0E96               	movlw	150
  3438  002574  6E5A               	movwf	??_colourcards_testingRGBC^0,c
  3439  002576  0E7F               	movlw	127
  3440  002578                     u8437:
  3441  002578  2EE8               	decfsz	wreg,f,c
  3442  00257A  D7FE               	bra	u8437
  3443  00257C  2E5A               	decfsz	??_colourcards_testingRGBC^0,f,c
  3444  00257E  D7FC               	bra	u8437
  3445  002580  2E5B               	decfsz	(??_colourcards_testingRGBC+1)^0,f,c
  3446  002582  D7FA               	bra	u8437
  3447  002584  F000               	nop	
  3448  002586  EFB2  F00D         	goto	l171
  3449  00258A  0012               	return		;funcret
  3450  00258C                     __end_of_colourcards_testingRGBC:
  3451                           	callstack 0
  3452                           
  3453 ;; *************** function _sprintf *****************
  3454 ;; Defined at:
  3455 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  s               2   78[BANK0 ] PTR unsigned char 
  3458 ;;		 -> colourclick_testing@buf(40), colourcards_testingRGBC@buf(20), 
  3459 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  3460 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  3461 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  3462 ;;		 -> STR_3(64), STR_1(64), 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  f               6  106[BANK0 ] struct _IO_FILE
  3465 ;;  ap              2  104[BANK0 ] PTR void [1]
  3466 ;;		 -> ?_sprintf(2), 
  3467 ;;  ret             2    0        int 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  2   78[BANK0 ] int 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3477 ;;      Params:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;Total ram usage:       34 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 7
  3484 ;; This function calls:
  3485 ;;		_vfprintf
  3486 ;; This function is called by:
  3487 ;;		_colourcards_testingRGBC
  3488 ;;		_colourclick_testing
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text8
  3493  005EF8                     __ptext8:
  3494                           	callstack 0
  3495  005EF8                     _sprintf:
  3496                           	callstack 21
  3497  005EF8  0EB2               	movlw	low (?_sprintf+4)
  3498  005EFA  0100               	movlb	0	; () banked
  3499  005EFC  6FC8               	movwf	sprintf@ap& (0+255),b
  3500  005EFE  0E00               	movlw	high (?_sprintf+4)
  3501  005F00  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  3502  005F02  C0AE  F0CA         	movff	sprintf@s,sprintf@f
  3503  005F06  C0AF  F0CB         	movff	sprintf@s+1,sprintf@f+1
  3504  005F0A                     
  3505                           ; BSR set to: 0
  3506  005F0A  0E00               	movlw	0
  3507  005F0C  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  3508  005F0E  0E00               	movlw	0
  3509  005F10  6FCC               	movwf	(sprintf@f+2)& (0+255),b
  3510  005F12                     
  3511                           ; BSR set to: 0
  3512  005F12  0E00               	movlw	0
  3513  005F14  6FCF               	movwf	(sprintf@f+5)& (0+255),b
  3514  005F16  0E00               	movlw	0
  3515  005F18  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  3516  005F1A                     
  3517                           ; BSR set to: 0
  3518  005F1A  0ECA               	movlw	low sprintf@f
  3519  005F1C  6E52               	movwf	vfprintf@fp^0,c
  3520  005F1E  0E00               	movlw	high sprintf@f
  3521  005F20  6E53               	movwf	(vfprintf@fp+1)^0,c
  3522  005F22  C0B0  F054         	movff	sprintf@fmt,vfprintf@fmt
  3523  005F26  C0B1  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3524  005F2A  0EC8               	movlw	low sprintf@ap
  3525  005F2C  6E56               	movwf	vfprintf@ap^0,c
  3526  005F2E  0E00               	movlw	high sprintf@ap
  3527  005F30  6E57               	movwf	(vfprintf@ap+1)^0,c
  3528  005F32  ECBB  F02E         	call	_vfprintf	;wreg free
  3529  005F36  0100               	movlb	0	; () banked
  3530  005F38  51CC               	movf	(sprintf@f+2)& (0+255),w,b
  3531  005F3A  25AE               	addwf	sprintf@s& (0+255),w,b
  3532  005F3C  6ED9               	movwf	fsr2l,c
  3533  005F3E  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  3534  005F40  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  3535  005F42  6EDA               	movwf	fsr2h,c
  3536  005F44  0E00               	movlw	0
  3537  005F46  6EDF               	movwf	indf2,c
  3538  005F48                     
  3539                           ; BSR set to: 0
  3540  005F48  0012               	return		;funcret
  3541  005F4A                     __end_of_sprintf:
  3542                           	callstack 0
  3543                           
  3544 ;; *************** function _vfprintf *****************
  3545 ;; Defined at:
  3546 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  3549 ;;		 -> sprintf@f(6), 
  3550 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  3551 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  3552 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  3553 ;;		 -> STR_3(64), STR_1(64), 
  3554 ;;  ap              2   85[COMRAM] PTR PTR void 
  3555 ;;		 -> sprintf@ap(2), 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  3558 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  3559 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  3560 ;;		 -> STR_3(64), STR_1(64), 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  2   81[COMRAM] int 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3570 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;Total ram usage:        8 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; Hardware stack levels required when called: 6
  3577 ;; This function calls:
  3578 ;;		_vfpfcnvrt
  3579 ;; This function is called by:
  3580 ;;		_sprintf
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text9
  3585  005D76                     __ptext9:
  3586                           	callstack 0
  3587  005D76                     _vfprintf:
  3588                           	callstack 21
  3589  005D76                     
  3590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3591  005D76  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  3592  005D7A  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3593  005D7E                     
  3594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3595  005D7E  0E00               	movlw	0
  3596  005D80  0101               	movlb	1	; () banked
  3597  005D82  6F1D               	movwf	(_nout+1)& (0+255),b
  3598  005D84  0E00               	movlw	0
  3599  005D86  6F1C               	movwf	_nout& (0+255),b
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3602  005D88  EFD9  F02E         	goto	l5639
  3603  005D8C                     l5637:
  3604                           
  3605                           ; BSR set to: 1
  3606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3607  005D8C  C052  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  3608  005D90  C053  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3609  005D94  0E58               	movlw	low vfprintf@cfmt
  3610  005D96  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  3611  005D98  0E00               	movlw	high vfprintf@cfmt
  3612  005D9A  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3613  005D9C  C056  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  3614  005DA0  C057  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3615  005DA4  EC05  F017         	call	_vfpfcnvrt	;wreg free
  3616  005DA8  5048               	movf	?_vfpfcnvrt^0,w,c
  3617  005DAA  0101               	movlb	1	; () banked
  3618  005DAC  271C               	addwf	_nout& (0+255),f,b
  3619  005DAE  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  3620  005DB0  231D               	addwfc	(_nout+1)& (0+255),f,b
  3621  005DB2                     l5639:
  3622                           
  3623                           ; BSR set to: 1
  3624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3625  005DB2  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  3626  005DB6  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3627  005DBA                     	if	0	;tblptru may be non-zero
  3628  005DBA                     	endif
  3629  005DBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3630  005DBA  0E00               	movlw	low (__mediumconst shr (0+16))
  3631  005DBC  6EF8               	movwf	tblptru,c
  3632  005DBE                     	endif
  3633  005DBE  0008               	tblrd		*
  3634  005DC0  50F5               	movf	tablat,w,c
  3635  005DC2  0900               	iorlw	0
  3636  005DC4  A4D8               	btfss	status,2,c
  3637  005DC6  EFE7  F02E         	goto	u6981
  3638  005DCA  EFE9  F02E         	goto	u6980
  3639  005DCE                     u6981:
  3640  005DCE  EFC6  F02E         	goto	l5637
  3641  005DD2                     u6980:
  3642  005DD2                     
  3643                           ; BSR set to: 1
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3645  005DD2  C11C  F052         	movff	_nout,?_vfprintf
  3646  005DD6  C11D  F053         	movff	_nout+1,?_vfprintf+1
  3647  005DDA                     
  3648                           ; BSR set to: 1
  3649  005DDA  0012               	return		;funcret
  3650  005DDC                     __end_of_vfprintf:
  3651                           	callstack 0
  3652                           
  3653 ;; *************** function _vfpfcnvrt *****************
  3654 ;; Defined at:
  3655 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  3658 ;;		 -> sprintf@f(6), 
  3659 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  3660 ;;		 -> vfprintf@cfmt(2), 
  3661 ;;  ap              2   75[COMRAM] PTR PTR void 
  3662 ;;		 -> sprintf@ap(2), 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  ll              8   56[BANK0 ] long long 
  3665 ;;  llu             8    0        unsigned long long 
  3666 ;;  f               4   70[BANK0 ] unsigned long long 
  3667 ;;  ct              3   74[BANK0 ] unsigned char [3]
  3668 ;;  vp              3    0        PTR void 
  3669 ;;  cp              2   64[BANK0 ] PTR unsigned char 
  3670 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(11), 
  3671 ;;		 -> STR_12(7), STR_10(5), STR_8(7), STR_6(5), 
  3672 ;;		 -> STR_4(6), STR_2(4), 
  3673 ;;  i               2    0        int 
  3674 ;;  done            2    0        int 
  3675 ;;  c               1   77[BANK0 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2   71[COMRAM] int 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3685 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;Total ram usage:       32 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 5
  3692 ;; This function calls:
  3693 ;;		_atoi
  3694 ;;		_dtoa
  3695 ;;		_efgtoa
  3696 ;;		_fputc
  3697 ;;		_isdigit
  3698 ;;		_isupper
  3699 ;;		_stoa
  3700 ;;		_strncmp
  3701 ;;		_tolower
  3702 ;; This function is called by:
  3703 ;;		_vfprintf
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text10
  3708  002E0A                     __ptext10:
  3709                           	callstack 0
  3710  002E0A                     _vfpfcnvrt:
  3711                           	callstack 21
  3712  002E0A                     
  3713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3714  002E0A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3715  002E0E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3716  002E12  CFDE FFF6          	movff	postinc2,tblptrl
  3717  002E16  CFDD FFF7          	movff	postdec2,tblptrh
  3718  002E1A                     	if	0	;tblptru may be non-zero
  3719  002E1A                     	endif
  3720  002E1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3721  002E1A  0E00               	movlw	low (__mediumconst shr (0+16))
  3722  002E1C  6EF8               	movwf	tblptru,c
  3723  002E1E                     	endif
  3724  002E1E  0008               	tblrd		*
  3725  002E20  50F5               	movf	tablat,w,c
  3726  002E22  0A25               	xorlw	37
  3727  002E24  A4D8               	btfss	status,2,c
  3728  002E26  EF17  F017         	goto	u6741
  3729  002E2A  EF19  F017         	goto	u6740
  3730  002E2E                     u6741:
  3731  002E2E  EFDB  F019         	goto	l5577
  3732  002E32                     u6740:
  3733  002E32                     
  3734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3735  002E32  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3736  002E36  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3737  002E3A  2ADE               	incf	postinc2,f,c
  3738  002E3C  0E00               	movlw	0
  3739  002E3E  22DD               	addwfc	postdec2,f,c
  3740  002E40                     
  3741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3742  002E40  0E00               	movlw	0
  3743  002E42  0101               	movlb	1	; () banked
  3744  002E44  6F1F               	movwf	(_width+1)& (0+255),b
  3745  002E46  0E00               	movlw	0
  3746  002E48  6F1E               	movwf	_width& (0+255),b
  3747  002E4A  C11E  F122         	movff	_width,_flags
  3748  002E4E  C11F  F123         	movff	_width+1,_flags+1
  3749  002E52                     
  3750                           ; BSR set to: 1
  3751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3752  002E52  6920               	setf	_prec& (0+255),b
  3753  002E54  6921               	setf	(_prec+1)& (0+255),b
  3754  002E56                     
  3755                           ; BSR set to: 1
  3756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3757  002E56  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3758  002E5A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3759  002E5E  CFDE FFF6          	movff	postinc2,tblptrl
  3760  002E62  CFDD FFF7          	movff	postdec2,tblptrh
  3761  002E66                     	if	0	;tblptru may be non-zero
  3762  002E66                     	endif
  3763  002E66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3764  002E66  0E00               	movlw	low (__mediumconst shr (0+16))
  3765  002E68  6EF8               	movwf	tblptru,c
  3766  002E6A                     	endif
  3767  002E6A  0008               	tblrd		*
  3768  002E6C  50F5               	movf	tablat,w,c
  3769  002E6E  0A2E               	xorlw	46
  3770  002E70  A4D8               	btfss	status,2,c
  3771  002E72  EF3D  F017         	goto	u6751
  3772  002E76  EF3F  F017         	goto	u6750
  3773  002E7A                     u6751:
  3774  002E7A  EFC1  F017         	goto	l5505
  3775  002E7E                     u6750:
  3776  002E7E                     
  3777                           ; BSR set to: 1
  3778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3779  002E7E  0E00               	movlw	0
  3780  002E80  6F21               	movwf	(_prec+1)& (0+255),b
  3781  002E82  0E00               	movlw	0
  3782  002E84  6F20               	movwf	_prec& (0+255),b
  3783  002E86                     
  3784                           ; BSR set to: 1
  3785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3786  002E86  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3787  002E8A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3788  002E8E  2ADE               	incf	postinc2,f,c
  3789  002E90  0E00               	movlw	0
  3790  002E92  22DD               	addwfc	postdec2,f,c
  3791  002E94                     
  3792                           ; BSR set to: 1
  3793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3794  002E94  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3795  002E98  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3796  002E9C  CFDE FFF6          	movff	postinc2,tblptrl
  3797  002EA0  CFDD FFF7          	movff	postdec2,tblptrh
  3798  002EA4                     	if	0	;tblptru may be non-zero
  3799  002EA4                     	endif
  3800  002EA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3801  002EA4  0E00               	movlw	low (__mediumconst shr (0+16))
  3802  002EA6  6EF8               	movwf	tblptru,c
  3803  002EA8                     	endif
  3804  002EA8  0008               	tblrd		*
  3805  002EAA  50F5               	movf	tablat,w,c
  3806  002EAC  0A2A               	xorlw	42
  3807  002EAE  A4D8               	btfss	status,2,c
  3808  002EB0  EF5C  F017         	goto	u6761
  3809  002EB4  EF5E  F017         	goto	u6760
  3810  002EB8                     u6761:
  3811  002EB8  EF7B  F017         	goto	l5495
  3812  002EBC                     u6760:
  3813  002EBC                     
  3814                           ; BSR set to: 1
  3815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3816  002EBC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3817  002EC0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3818  002EC4  2ADE               	incf	postinc2,f,c
  3819  002EC6  0E00               	movlw	0
  3820  002EC8  22DD               	addwfc	postdec2,f,c
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3823  002ECA  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3824  002ECE  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3825  002ED2  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3826  002ED6  0E02               	movlw	2
  3827  002ED8  26DE               	addwf	postinc2,f,c
  3828  002EDA  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3829  002EDE  0E00               	movlw	0
  3830  002EE0  22DD               	addwfc	postdec2,f,c
  3831  002EE2  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3832  002EE6  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3833  002EEA  CFDE F120          	movff	postinc2,_prec
  3834  002EEE  CFDD F121          	movff	postdec2,_prec+1
  3835                           
  3836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3837  002EF2  EFC1  F017         	goto	l5505
  3838  002EF6                     l5495:
  3839                           
  3840                           ; BSR set to: 1
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3842  002EF6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3843  002EFA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3844  002EFE  CFDE F008          	movff	postinc2,atoi@s
  3845  002F02  CFDD F009          	movff	postdec2,atoi@s+1
  3846  002F06  EC79  F024         	call	_atoi	;wreg free
  3847  002F0A  C008  F120         	movff	?_atoi,_prec
  3848  002F0E  C009  F121         	movff	?_atoi+1,_prec+1
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3851  002F12  EF92  F017         	goto	l5499
  3852  002F16                     l5497:
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3856  002F16  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3857  002F1A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3858  002F1E  2ADE               	incf	postinc2,f,c
  3859  002F20  0E00               	movlw	0
  3860  002F22  22DD               	addwfc	postdec2,f,c
  3861  002F24                     l5499:
  3862  002F24  0ED0               	movlw	208
  3863  002F26  6E4E               	movwf	??_vfpfcnvrt^0,c
  3864  002F28  0EFF               	movlw	255
  3865  002F2A  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  3866  002F2C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3867  002F30  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3868  002F34  CFDE FFF6          	movff	postinc2,tblptrl
  3869  002F38  CFDD FFF7          	movff	postdec2,tblptrh
  3870  002F3C                     	if	0	;tblptru may be non-zero
  3871  002F3C                     	endif
  3872  002F3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3873  002F3C  0E00               	movlw	low (__mediumconst shr (0+16))
  3874  002F3E  6EF8               	movwf	tblptru,c
  3875  002F40                     	endif
  3876  002F40  0008               	tblrd		*
  3877  002F42  50F5               	movf	tablat,w,c
  3878  002F44  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  3879  002F46  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  3880  002F48  504E               	movf	??_vfpfcnvrt^0,w,c
  3881  002F4A  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3882  002F4C  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  3883  002F4E  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3884  002F50  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  3885  002F52  E10A               	bnz	u6770
  3886  002F54  0E0A               	movlw	10
  3887  002F56  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3888  002F58  A0D8               	btfss	status,0,c
  3889  002F5A  EFB1  F017         	goto	u6771
  3890  002F5E  EFB4  F017         	goto	u6770
  3891  002F62                     u6771:
  3892  002F62  0E01               	movlw	1
  3893  002F64  EFB5  F017         	goto	u6780
  3894  002F68                     u6770:
  3895  002F68  0E00               	movlw	0
  3896  002F6A                     u6780:
  3897  002F6A  0100               	movlb	0	; () banked
  3898  002F6C  6FA2               	movwf	_vfpfcnvrt$3062& (0+255),b
  3899  002F6E  6BA3               	clrf	(_vfpfcnvrt$3062+1)& (0+255),b
  3900  002F70                     
  3901                           ; BSR set to: 0
  3902  002F70  51A2               	movf	_vfpfcnvrt$3062& (0+255),w,b
  3903  002F72  11A3               	iorwf	(_vfpfcnvrt$3062+1)& (0+255),w,b
  3904  002F74  A4D8               	btfss	status,2,c
  3905  002F76  EFBF  F017         	goto	u6791
  3906  002F7A  EFC1  F017         	goto	u6790
  3907  002F7E                     u6791:
  3908  002F7E  EF8B  F017         	goto	l5497
  3909  002F82                     u6790:
  3910  002F82                     l5505:
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3913  002F82  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3914  002F86  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3915  002F8A  CFDE FFF6          	movff	postinc2,tblptrl
  3916  002F8E  CFDD FFF7          	movff	postdec2,tblptrh
  3917  002F92                     	if	0	;tblptru may be non-zero
  3918  002F92                     	endif
  3919  002F92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3920  002F92  0E00               	movlw	low (__mediumconst shr (0+16))
  3921  002F94  6EF8               	movwf	tblptru,c
  3922  002F96                     	endif
  3923  002F96  0008               	tblrd		*
  3924  002F98  50F5               	movf	tablat,w,c
  3925  002F9A  6E07               	movwf	tolower@c^0,c
  3926  002F9C  6A08               	clrf	(tolower@c+1)^0,c
  3927  002F9E  ECEE  F02E         	call	_tolower	;wreg free
  3928  002FA2  5007               	movf	?_tolower^0,w,c
  3929  002FA4  0100               	movlb	0	; () banked
  3930  002FA6  6FAA               	movwf	vfpfcnvrt@ct& (0+255),b
  3931  002FA8                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3934  002FA8  51AA               	movf	vfpfcnvrt@ct& (0+255),w,b
  3935  002FAA  B4D8               	btfsc	status,2,c
  3936  002FAC  EFDA  F017         	goto	u6801
  3937  002FB0  EFDC  F017         	goto	u6800
  3938  002FB4                     u6801:
  3939  002FB4  EF1A  F018         	goto	l5515
  3940  002FB8                     u6800:
  3941  002FB8                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3944  002FB8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3945  002FBC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3946  002FC0  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  3947  002FC4  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  3948  002FC8  0E01               	movlw	1
  3949  002FCA  264E               	addwf	??_vfpfcnvrt^0,f,c
  3950  002FCC  0E00               	movlw	0
  3951  002FCE  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3952  002FD0  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3953  002FD4  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3954  002FD8                     	if	0	;tblptru may be non-zero
  3955  002FD8                     	endif
  3956  002FD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3957  002FD8  0E00               	movlw	low (__mediumconst shr (0+16))
  3958  002FDA  6EF8               	movwf	tblptru,c
  3959  002FDC                     	endif
  3960  002FDC  0008               	tblrd		*
  3961  002FDE  50F5               	movf	tablat,w,c
  3962  002FE0  6E07               	movwf	tolower@c^0,c
  3963  002FE2  6A08               	clrf	(tolower@c+1)^0,c
  3964  002FE4  ECEE  F02E         	call	_tolower	;wreg free
  3965  002FE8  5007               	movf	?_tolower^0,w,c
  3966  002FEA  0100               	movlb	0	; () banked
  3967  002FEC  6FAB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3968  002FEE                     
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3971  002FEE  51AB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3972  002FF0  B4D8               	btfsc	status,2,c
  3973  002FF2  EFFD  F017         	goto	u6811
  3974  002FF6  EFFF  F017         	goto	u6810
  3975  002FFA                     u6811:
  3976  002FFA  EF1A  F018         	goto	l5515
  3977  002FFE                     u6810:
  3978  002FFE                     
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3981  002FFE  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3982  003002  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3983  003006  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  3984  00300A  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  3985  00300E  0E02               	movlw	2
  3986  003010  264E               	addwf	??_vfpfcnvrt^0,f,c
  3987  003012  0E00               	movlw	0
  3988  003014  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3989  003016  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3990  00301A  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3991  00301E                     	if	0	;tblptru may be non-zero
  3992  00301E                     	endif
  3993  00301E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3994  00301E  0E00               	movlw	low (__mediumconst shr (0+16))
  3995  003020  6EF8               	movwf	tblptru,c
  3996  003022                     	endif
  3997  003022  0008               	tblrd		*
  3998  003024  50F5               	movf	tablat,w,c
  3999  003026  6E07               	movwf	tolower@c^0,c
  4000  003028  6A08               	clrf	(tolower@c+1)^0,c
  4001  00302A  ECEE  F02E         	call	_tolower	;wreg free
  4002  00302E  5007               	movf	?_tolower^0,w,c
  4003  003030  0100               	movlb	0	; () banked
  4004  003032  6FAC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4005  003034                     l5515:
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4009  003034  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4010  003038  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4011  00303C  CFDE FFF6          	movff	postinc2,tblptrl
  4012  003040  CFDD FFF7          	movff	postdec2,tblptrh
  4013  003044                     	if	0	;tblptru may be non-zero
  4014  003044                     	endif
  4015  003044                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4016  003044  0E00               	movlw	low (__mediumconst shr (0+16))
  4017  003046  6EF8               	movwf	tblptru,c
  4018  003048                     	endif
  4019  003048  0008               	tblrd		*
  4020  00304A  50F5               	movf	tablat,w,c
  4021  00304C  0A64               	xorlw	100
  4022  00304E  B4D8               	btfsc	status,2,c
  4023  003050  EF2C  F018         	goto	u6821
  4024  003054  EF2E  F018         	goto	u6820
  4025  003058                     u6821:
  4026  003058  EF42  F018         	goto	l5519
  4027  00305C                     u6820:
  4028  00305C                     
  4029                           ; BSR set to: 0
  4030  00305C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4031  003060  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4032  003064  CFDE FFF6          	movff	postinc2,tblptrl
  4033  003068  CFDD FFF7          	movff	postdec2,tblptrh
  4034  00306C                     	if	0	;tblptru may be non-zero
  4035  00306C                     	endif
  4036  00306C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4037  00306C  0E00               	movlw	low (__mediumconst shr (0+16))
  4038  00306E  6EF8               	movwf	tblptru,c
  4039  003070                     	endif
  4040  003070  0008               	tblrd		*
  4041  003072  50F5               	movf	tablat,w,c
  4042  003074  0A69               	xorlw	105
  4043  003076  A4D8               	btfss	status,2,c
  4044  003078  EF40  F018         	goto	u6831
  4045  00307C  EF42  F018         	goto	u6830
  4046  003080                     u6831:
  4047  003080  EF82  F018         	goto	l5525
  4048  003084                     u6830:
  4049  003084                     l5519:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4053  003084  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4054  003088  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4055  00308C  2ADE               	incf	postinc2,f,c
  4056  00308E  0E00               	movlw	0
  4057  003090  22DD               	addwfc	postdec2,f,c
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4060  003092  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4061  003096  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4062  00309A  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4063  00309E  0E02               	movlw	2
  4064  0030A0  26DE               	addwf	postinc2,f,c
  4065  0030A2  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4066  0030A6  0E00               	movlw	0
  4067  0030A8  22DD               	addwfc	postdec2,f,c
  4068  0030AA  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4069  0030AE  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4070  0030B2  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4071  0030B6  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4072  0030BA  0E00               	movlw	0
  4073  0030BC  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4074  0030BE  0EFF               	movlw	-1
  4075  0030C0  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4076  0030C2  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4077  0030C4  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4078  0030C6  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4079  0030C8  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4080  0030CA  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4081  0030CC                     
  4082                           ; BSR set to: 0
  4083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4084  0030CC  C048  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4085  0030D0  C049  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4086  0030D4  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4087  0030D8  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4088  0030DC  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4089  0030E0  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4090  0030E4  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4091  0030E8  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4092  0030EC  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4093  0030F0  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4094  0030F4  EC3B  F020         	call	_dtoa	;wreg free
  4095  0030F8  C01C  F048         	movff	?_dtoa,?_vfpfcnvrt
  4096  0030FC  C01D  F049         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4097  003100  EFF8  F019         	goto	l1600
  4098  003104                     l5525:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4102  003104  0E66               	movlw	102
  4103  003106  19AA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4104  003108  A4D8               	btfss	status,2,c
  4105  00310A  EF89  F018         	goto	u6841
  4106  00310E  EF8B  F018         	goto	u6840
  4107  003112                     u6841:
  4108  003112  EFCD  F018         	goto	l5537
  4109  003116                     u6840:
  4110  003116                     
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4113  003116  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4114  00311A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4115  00311E  CFDE FFF6          	movff	postinc2,tblptrl
  4116  003122  CFDD FFF7          	movff	postdec2,tblptrh
  4117  003126                     	if	0	;tblptru may be non-zero
  4118  003126                     	endif
  4119  003126                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4120  003126  0E00               	movlw	low (__mediumconst shr (0+16))
  4121  003128  6EF8               	movwf	tblptru,c
  4122  00312A                     	endif
  4123  00312A  0008               	tblrd		*
  4124  00312C  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4125  003130                     
  4126                           ; BSR set to: 0
  4127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4128  003130  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4129  003134  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4130  003138  2ADE               	incf	postinc2,f,c
  4131  00313A  0E00               	movlw	0
  4132  00313C  22DD               	addwfc	postdec2,f,c
  4133  00313E                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4136  00313E  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4137  003142  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4138  003146  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4139  00314A  0E04               	movlw	4
  4140  00314C  26DE               	addwf	postinc2,f,c
  4141  00314E  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4142  003152  0E00               	movlw	0
  4143  003154  22DD               	addwfc	postdec2,f,c
  4144  003156  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4145  00315A  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4146  00315E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4147  003162  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4148  003166  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4149  00316A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4150  00316E                     l5533:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4154  00316E  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  4155  003172  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4156  003176  C0A6  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  4157  00317A  C0A7  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4158  00317E  C0A8  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4159  003182  C0A9  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4160  003186  C0AD  F042         	movff	vfpfcnvrt@c,efgtoa@c
  4161  00318A  EC5C  F007         	call	_efgtoa	;wreg free
  4162  00318E  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  4163  003192  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4164  003196  EFF8  F019         	goto	l1600
  4165  00319A                     l5537:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4169  00319A  0EAA               	movlw	low vfpfcnvrt@ct
  4170  00319C  6E01               	movwf	strncmp@_l^0,c
  4171  00319E  0E00               	movlw	high vfpfcnvrt@ct
  4172  0031A0  6E02               	movwf	(strncmp@_l+1)^0,c
  4173  0031A2  0EB3               	movlw	low STR_28
  4174  0031A4  6E03               	movwf	strncmp@_r^0,c
  4175  0031A6  0E0E               	movlw	high STR_28
  4176  0031A8  6E04               	movwf	(strncmp@_r+1)^0,c
  4177  0031AA  0E00               	movlw	0
  4178  0031AC  6E06               	movwf	(strncmp@n+1)^0,c
  4179  0031AE  0E02               	movlw	2
  4180  0031B0  6E05               	movwf	strncmp@n^0,c
  4181  0031B2  EC30  F02B         	call	_strncmp	;wreg free
  4182  0031B6  5001               	movf	?_strncmp^0,w,c
  4183  0031B8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4184  0031BA  A4D8               	btfss	status,2,c
  4185  0031BC  EFE2  F018         	goto	u6851
  4186  0031C0  EFE4  F018         	goto	u6850
  4187  0031C4                     u6851:
  4188  0031C4  EF64  F019         	goto	l5553
  4189  0031C8                     u6850:
  4190  0031C8                     
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4192  0031C8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4193  0031CC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4194  0031D0  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  4195  0031D4  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  4196  0031D8  0E01               	movlw	1
  4197  0031DA  264E               	addwf	??_vfpfcnvrt^0,f,c
  4198  0031DC  0E00               	movlw	0
  4199  0031DE  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4200  0031E0  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4201  0031E4  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4202  0031E8                     	if	0	;tblptru may be non-zero
  4203  0031E8                     	endif
  4204  0031E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4205  0031E8  0E00               	movlw	low (__mediumconst shr (0+16))
  4206  0031EA  6EF8               	movwf	tblptru,c
  4207  0031EC                     	endif
  4208  0031EC  0008               	tblrd		*
  4209  0031EE  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4210  0031F2  0EBF               	movlw	191
  4211  0031F4  6E4E               	movwf	??_vfpfcnvrt^0,c
  4212  0031F6  0EFF               	movlw	255
  4213  0031F8  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  4214  0031FA  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4215  0031FE  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4216  003202  CFDE FFF6          	movff	postinc2,tblptrl
  4217  003206  CFDD FFF7          	movff	postdec2,tblptrh
  4218  00320A                     	if	0	;tblptru may be non-zero
  4219  00320A                     	endif
  4220  00320A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4221  00320A  0E00               	movlw	low (__mediumconst shr (0+16))
  4222  00320C  6EF8               	movwf	tblptru,c
  4223  00320E                     	endif
  4224  00320E  0008               	tblrd		*
  4225  003210  50F5               	movf	tablat,w,c
  4226  003212  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  4227  003214  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  4228  003216  504E               	movf	??_vfpfcnvrt^0,w,c
  4229  003218  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4230  00321A  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  4231  00321C  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4232  00321E  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  4233  003220  E10A               	bnz	u6860
  4234  003222  0E1A               	movlw	26
  4235  003224  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4236  003226  A0D8               	btfss	status,0,c
  4237  003228  EF18  F019         	goto	u6861
  4238  00322C  EF1B  F019         	goto	u6860
  4239  003230                     u6861:
  4240  003230  0E01               	movlw	1
  4241  003232  EF1C  F019         	goto	u6870
  4242  003236                     u6860:
  4243  003236  0E00               	movlw	0
  4244  003238                     u6870:
  4245  003238  0100               	movlb	0	; () banked
  4246  00323A  6FA4               	movwf	_vfpfcnvrt$3067& (0+255),b
  4247  00323C  6BA5               	clrf	(_vfpfcnvrt$3067+1)& (0+255),b
  4248  00323E                     
  4249                           ; BSR set to: 0
  4250  00323E  51A4               	movf	_vfpfcnvrt$3067& (0+255),w,b
  4251  003240  11A5               	iorwf	(_vfpfcnvrt$3067+1)& (0+255),w,b
  4252  003242  B4D8               	btfsc	status,2,c
  4253  003244  EF26  F019         	goto	u6881
  4254  003248  EF28  F019         	goto	u6880
  4255  00324C                     u6881:
  4256  00324C  EF42  F019         	goto	l5547
  4257  003250                     u6880:
  4258  003250                     
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4261  003250  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4262  003254  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4263  003258  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4264  00325C  0E04               	movlw	4
  4265  00325E  26DE               	addwf	postinc2,f,c
  4266  003260  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4267  003264  0E00               	movlw	0
  4268  003266  22DD               	addwfc	postdec2,f,c
  4269  003268  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4270  00326C  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4271  003270  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4272  003274  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4273  003278  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4274  00327C  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4275                           
  4276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4277  003280  EF5A  F019         	goto	l1608
  4278  003284                     l5547:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4282  003284  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4283  003288  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4284  00328C  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4285  003290  0E04               	movlw	4
  4286  003292  26DE               	addwf	postinc2,f,c
  4287  003294  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4288  003298  0E00               	movlw	0
  4289  00329A  22DD               	addwfc	postdec2,f,c
  4290  00329C  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4291  0032A0  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4292  0032A4  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4293  0032A8  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4294  0032AC  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4295  0032B0  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4296  0032B4                     l1608:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4300  0032B4  0E02               	movlw	2
  4301  0032B6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4302  0032BA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4303  0032BE  26DE               	addwf	postinc2,f,c
  4304  0032C0  0E00               	movlw	0
  4305  0032C2  22DD               	addwfc	postdec2,f,c
  4306  0032C4  EFB7  F018         	goto	l5533
  4307  0032C8                     l5553:
  4308                           
  4309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  4310  0032C8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4311  0032CC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4312  0032D0  CFDE FFF6          	movff	postinc2,tblptrl
  4313  0032D4  CFDD FFF7          	movff	postdec2,tblptrh
  4314  0032D8                     	if	0	;tblptru may be non-zero
  4315  0032D8                     	endif
  4316  0032D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4317  0032D8  0E00               	movlw	low (__mediumconst shr (0+16))
  4318  0032DA  6EF8               	movwf	tblptru,c
  4319  0032DC                     	endif
  4320  0032DC  0008               	tblrd		*
  4321  0032DE  50F5               	movf	tablat,w,c
  4322  0032E0  0A73               	xorlw	115
  4323  0032E2  A4D8               	btfss	status,2,c
  4324  0032E4  EF76  F019         	goto	u6891
  4325  0032E8  EF78  F019         	goto	u6890
  4326  0032EC                     u6891:
  4327  0032EC  EFA3  F019         	goto	l5561
  4328  0032F0                     u6890:
  4329  0032F0                     
  4330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  4331  0032F0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4332  0032F4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4333  0032F8  2ADE               	incf	postinc2,f,c
  4334  0032FA  0E00               	movlw	0
  4335  0032FC  22DD               	addwfc	postdec2,f,c
  4336                           
  4337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4338  0032FE  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4339  003302  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4340  003306  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4341  00330A  0E02               	movlw	2
  4342  00330C  26DE               	addwf	postinc2,f,c
  4343  00330E  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4344  003312  0E00               	movlw	0
  4345  003314  22DD               	addwfc	postdec2,f,c
  4346  003316  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4347  00331A  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4348  00331E  CFDE F0A0          	movff	postinc2,vfpfcnvrt@cp
  4349  003322  CFDD F0A1          	movff	postdec2,vfpfcnvrt@cp+1
  4350  003326                     
  4351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  4352  003326  C048  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  4353  00332A  C049  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4354  00332E  C0A0  F00C         	movff	vfpfcnvrt@cp,stoa@s
  4355  003332  C0A1  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4356  003336  EC4B  F025         	call	_stoa	;wreg free
  4357  00333A  C00A  F048         	movff	?_stoa,?_vfpfcnvrt
  4358  00333E  C00B  F049         	movff	?_stoa+1,?_vfpfcnvrt+1
  4359  003342  EFF8  F019         	goto	l1600
  4360  003346                     l5561:
  4361                           
  4362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4363  003346  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4364  00334A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4365  00334E  CFDE FFF6          	movff	postinc2,tblptrl
  4366  003352  CFDD FFF7          	movff	postdec2,tblptrh
  4367  003356                     	if	0	;tblptru may be non-zero
  4368  003356                     	endif
  4369  003356                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4370  003356  0E00               	movlw	low (__mediumconst shr (0+16))
  4371  003358  6EF8               	movwf	tblptru,c
  4372  00335A                     	endif
  4373  00335A  0008               	tblrd		*
  4374  00335C  50F5               	movf	tablat,w,c
  4375  00335E  0A25               	xorlw	37
  4376  003360  A4D8               	btfss	status,2,c
  4377  003362  EFB5  F019         	goto	u6901
  4378  003366  EFB7  F019         	goto	u6900
  4379  00336A                     u6901:
  4380  00336A  EFCE  F019         	goto	l5571
  4381  00336E                     u6900:
  4382  00336E                     
  4383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4384  00336E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4385  003372  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4386  003376  2ADE               	incf	postinc2,f,c
  4387  003378  0E00               	movlw	0
  4388  00337A  22DD               	addwfc	postdec2,f,c
  4389  00337C                     
  4390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4391  00337C  0E00               	movlw	0
  4392  00337E  6E02               	movwf	(fputc@c+1)^0,c
  4393  003380  0E25               	movlw	37
  4394  003382  6E01               	movwf	fputc@c^0,c
  4395  003384  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4396  003388  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4397  00338C  EC0B  F02C         	call	_fputc	;wreg free
  4398  003390                     l5567:
  4399                           
  4400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4401  003390  0E00               	movlw	0
  4402  003392  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  4403  003394  0E01               	movlw	1
  4404  003396  6E48               	movwf	?_vfpfcnvrt^0,c
  4405  003398  EFF8  F019         	goto	l1600
  4406  00339C                     l5571:
  4407                           
  4408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4409  00339C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4410  0033A0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4411  0033A4  2ADE               	incf	postinc2,f,c
  4412  0033A6  0E00               	movlw	0
  4413  0033A8  22DD               	addwfc	postdec2,f,c
  4414  0033AA                     
  4415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4416  0033AA  0E00               	movlw	0
  4417  0033AC  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  4418  0033AE  0E00               	movlw	0
  4419  0033B0  6E48               	movwf	?_vfpfcnvrt^0,c
  4420  0033B2  EFF8  F019         	goto	l1600
  4421  0033B6                     l5577:
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4424  0033B6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4425  0033BA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4426  0033BE  CFDE FFF6          	movff	postinc2,tblptrl
  4427  0033C2  CFDD FFF7          	movff	postdec2,tblptrh
  4428  0033C6                     	if	0	;tblptru may be non-zero
  4429  0033C6                     	endif
  4430  0033C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4431  0033C6  0E00               	movlw	low (__mediumconst shr (0+16))
  4432  0033C8  6EF8               	movwf	tblptru,c
  4433  0033CA                     	endif
  4434  0033CA  0008               	tblrd		*
  4435  0033CC  50F5               	movf	tablat,w,c
  4436  0033CE  6E01               	movwf	fputc@c^0,c
  4437  0033D0  6A02               	clrf	(fputc@c+1)^0,c
  4438  0033D2  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4439  0033D6  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4440  0033DA  EC0B  F02C         	call	_fputc	;wreg free
  4441  0033DE                     
  4442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4443  0033DE  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4444  0033E2  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4445  0033E6  2ADE               	incf	postinc2,f,c
  4446  0033E8  0E00               	movlw	0
  4447  0033EA  22DD               	addwfc	postdec2,f,c
  4448  0033EC  EFC8  F019         	goto	l5567
  4449  0033F0                     l1600:
  4450  0033F0  0012               	return		;funcret
  4451  0033F2                     __end_of_vfpfcnvrt:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function _strncmp *****************
  4455 ;; Defined at:
  4456 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4459 ;;		 -> vfpfcnvrt@ct(3), 
  4460 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4461 ;;		 -> STR_30(3), 
  4462 ;;  n               2    4[COMRAM] unsigned int 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4465 ;;		 -> STR_30(3), 
  4466 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4467 ;;		 -> vfpfcnvrt@ct(3), 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  2    0[COMRAM] int 
  4470 ;; Registers used:
  4471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4477 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;Total ram usage:       11 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_vfpfcnvrt
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text11
  4491  005660                     __ptext11:
  4492                           	callstack 0
  4493  005660                     _strncmp:
  4494                           	callstack 25
  4495  005660  C001  F008         	movff	strncmp@_l,strncmp@l
  4496  005664  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4497  005668  C003  F00A         	movff	strncmp@_r,strncmp@r
  4498  00566C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4499  005670  0605               	decf	strncmp@n^0,f,c
  4500  005672  A0D8               	btfss	status,0,c
  4501  005674  0606               	decf	(strncmp@n+1)^0,f,c
  4502  005676  2805               	incf	strncmp@n^0,w,c
  4503  005678  E106               	bnz	u6671
  4504  00567A  2806               	incf	(strncmp@n+1)^0,w,c
  4505  00567C  A4D8               	btfss	status,2,c
  4506  00567E  EF43  F02B         	goto	u6671
  4507  005682  EF45  F02B         	goto	u6670
  4508  005686                     u6671:
  4509  005686  EF52  F02B         	goto	l5461
  4510  00568A                     u6670:
  4511  00568A  0E00               	movlw	0
  4512  00568C  6E02               	movwf	(?_strncmp+1)^0,c
  4513  00568E  0E00               	movlw	0
  4514  005690  6E01               	movwf	?_strncmp^0,c
  4515  005692  EFA0  F02B         	goto	l1737
  4516  005696                     l5459:
  4517  005696  4A08               	infsnz	strncmp@l^0,f,c
  4518  005698  2A09               	incf	(strncmp@l+1)^0,f,c
  4519  00569A  4A0A               	infsnz	strncmp@r^0,f,c
  4520  00569C  2A0B               	incf	(strncmp@r+1)^0,f,c
  4521  00569E  0605               	decf	strncmp@n^0,f,c
  4522  0056A0  A0D8               	btfss	status,0,c
  4523  0056A2  0606               	decf	(strncmp@n+1)^0,f,c
  4524  0056A4                     l5461:
  4525  0056A4  C008  FFD9         	movff	strncmp@l,fsr2l
  4526  0056A8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4527  0056AC  50DF               	movf	indf2,w,c
  4528  0056AE  B4D8               	btfsc	status,2,c
  4529  0056B0  EF5C  F02B         	goto	u6681
  4530  0056B4  EF5E  F02B         	goto	u6680
  4531  0056B8                     u6681:
  4532  0056B8  EF8D  F02B         	goto	l5469
  4533  0056BC                     u6680:
  4534  0056BC  C00A  FFF6         	movff	strncmp@r,tblptrl
  4535  0056C0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4536  0056C4                     	if	0	;tblptru may be non-zero
  4537  0056C4                     	endif
  4538  0056C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4539  0056C4  0E00               	movlw	low (__mediumconst shr (0+16))
  4540  0056C6  6EF8               	movwf	tblptru,c
  4541  0056C8                     	endif
  4542  0056C8  0008               	tblrd		*
  4543  0056CA  50F5               	movf	tablat,w,c
  4544  0056CC  0900               	iorlw	0
  4545  0056CE  B4D8               	btfsc	status,2,c
  4546  0056D0  EF6C  F02B         	goto	u6691
  4547  0056D4  EF6E  F02B         	goto	u6690
  4548  0056D8                     u6691:
  4549  0056D8  EF8D  F02B         	goto	l5469
  4550  0056DC                     u6690:
  4551  0056DC  5005               	movf	strncmp@n^0,w,c
  4552  0056DE  1006               	iorwf	(strncmp@n+1)^0,w,c
  4553  0056E0  B4D8               	btfsc	status,2,c
  4554  0056E2  EF75  F02B         	goto	u6701
  4555  0056E6  EF77  F02B         	goto	u6700
  4556  0056EA                     u6701:
  4557  0056EA  EF8D  F02B         	goto	l5469
  4558  0056EE                     u6700:
  4559  0056EE  C008  FFD9         	movff	strncmp@l,fsr2l
  4560  0056F2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4561  0056F6  50DF               	movf	indf2,w,c
  4562  0056F8  6E07               	movwf	??_strncmp^0,c
  4563  0056FA  C00A  FFF6         	movff	strncmp@r,tblptrl
  4564  0056FE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4565  005702                     	if	0	;tblptru may be non-zero
  4566  005702                     	endif
  4567  005702                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4568  005702  0E00               	movlw	low (__mediumconst shr (0+16))
  4569  005704  6EF8               	movwf	tblptru,c
  4570  005706                     	endif
  4571  005706  0008               	tblrd		*
  4572  005708  50F5               	movf	tablat,w,c
  4573  00570A  1807               	xorwf	??_strncmp^0,w,c
  4574  00570C  B4D8               	btfsc	status,2,c
  4575  00570E  EF8B  F02B         	goto	u6711
  4576  005712  EF8D  F02B         	goto	u6710
  4577  005716                     u6711:
  4578  005716  EF4B  F02B         	goto	l5459
  4579  00571A                     u6710:
  4580  00571A                     l5469:
  4581  00571A  C008  FFD9         	movff	strncmp@l,fsr2l
  4582  00571E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4583  005722  50DF               	movf	indf2,w,c
  4584  005724  6E07               	movwf	??_strncmp^0,c
  4585  005726  C00A  FFF6         	movff	strncmp@r,tblptrl
  4586  00572A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4587  00572E                     	if	0	;tblptru may be non-zero
  4588  00572E                     	endif
  4589  00572E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4590  00572E  0E00               	movlw	low (__mediumconst shr (0+16))
  4591  005730  6EF8               	movwf	tblptru,c
  4592  005732                     	endif
  4593  005732  0008               	tblrd		*
  4594  005734  50F5               	movf	tablat,w,c
  4595  005736  5C07               	subwf	??_strncmp^0,w,c
  4596  005738  6E01               	movwf	?_strncmp^0,c
  4597  00573A  6A02               	clrf	(?_strncmp+1)^0,c
  4598  00573C  A0D8               	btfss	status,0,c
  4599  00573E  0602               	decf	(?_strncmp+1)^0,f,c
  4600  005740                     l1737:
  4601  005740  0012               	return		;funcret
  4602  005742                     __end_of_strncmp:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function _stoa *****************
  4606 ;; Defined at:
  4607 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4610 ;;		 -> sprintf@f(6), 
  4611 ;;  s               2   11[COMRAM] PTR unsigned char 
  4612 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(11), 
  4613 ;;		 -> STR_12(7), STR_10(5), STR_8(7), STR_6(5), 
  4614 ;;		 -> STR_4(6), STR_2(4), 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  nuls            7   14[COMRAM] unsigned char [7]
  4617 ;;  l               2   29[COMRAM] int 
  4618 ;;  p               2   27[COMRAM] int 
  4619 ;;  cp              2   25[COMRAM] PTR unsigned char 
  4620 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_18(8), STR_16(6), 
  4621 ;;		 -> STR_14(11), STR_12(7), STR_10(5), STR_8(7), 
  4622 ;;		 -> STR_6(5), STR_4(6), STR_2(4), 
  4623 ;;  w               2   23[COMRAM] int 
  4624 ;;  i               2   21[COMRAM] int 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  2    9[COMRAM] int 
  4627 ;; Registers used:
  4628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4635 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4637 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4638 ;;Total ram usage:       22 bytes
  4639 ;; Hardware stack levels used: 1
  4640 ;; Hardware stack levels required when called: 2
  4641 ;; This function calls:
  4642 ;;		_fputc
  4643 ;;		_strlen
  4644 ;; This function is called by:
  4645 ;;		_vfpfcnvrt
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text12
  4650  004A96                     __ptext12:
  4651                           	callstack 0
  4652  004A96                     _stoa:
  4653                           	callstack 23
  4654  004A96                     
  4655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  4656  004A96  EE21  F0CF         	lfsr	2,stoa@F1163
  4657  004A9A  EE10  F00F         	lfsr	1,stoa@nuls
  4658  004A9E  0E06               	movlw	6
  4659  004AA0                     u6501:
  4660  004AA0  CFDB FFE3          	movff	plusw2,plusw1
  4661  004AA4  06E8               	decf	wreg,f,c
  4662  004AA6  E2FC               	bc	u6501
  4663  004AA8                     
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  4665  004AA8  C00C  F01A         	movff	stoa@s,stoa@cp
  4666  004AAC  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  4667  004AB0                     
  4668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  4669  004AB0  501A               	movf	stoa@cp^0,w,c
  4670  004AB2  101B               	iorwf	(stoa@cp+1)^0,w,c
  4671  004AB4  A4D8               	btfss	status,2,c
  4672  004AB6  EF5F  F025         	goto	u6511
  4673  004ABA  EF61  F025         	goto	u6510
  4674  004ABE                     u6511:
  4675  004ABE  EF65  F025         	goto	l5377
  4676  004AC2                     u6510:
  4677  004AC2                     
  4678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  4679  004AC2  0E0F               	movlw	low stoa@nuls
  4680  004AC4  6E1A               	movwf	stoa@cp^0,c
  4681  004AC6  0E00               	movlw	high stoa@nuls
  4682  004AC8  6E1B               	movwf	(stoa@cp+1)^0,c
  4683  004ACA                     l5377:
  4684                           
  4685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  4686  004ACA  C01A  F001         	movff	stoa@cp,strlen@s
  4687  004ACE  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  4688  004AD2  ECCE  F02F         	call	_strlen	;wreg free
  4689  004AD6  C001  F01E         	movff	?_strlen,stoa@l
  4690  004ADA  C002  F01F         	movff	?_strlen+1,stoa@l+1
  4691  004ADE                     
  4692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  4693  004ADE  C120  F01C         	movff	_prec,stoa@p
  4694  004AE2  C121  F01D         	movff	_prec+1,stoa@p+1
  4695  004AE6                     
  4696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  4697  004AE6  BE1D               	btfsc	(stoa@p+1)^0,7,c
  4698  004AE8  EF78  F025         	goto	u6521
  4699  004AEC  EF7A  F025         	goto	u6520
  4700  004AF0                     u6521:
  4701  004AF0  EF8F  F025         	goto	l1567
  4702  004AF4                     u6520:
  4703  004AF4  501E               	movf	stoa@l^0,w,c
  4704  004AF6  5C1C               	subwf	stoa@p^0,w,c
  4705  004AF8  501D               	movf	(stoa@p+1)^0,w,c
  4706  004AFA  0A80               	xorlw	128
  4707  004AFC  6E0E               	movwf	??_stoa^0,c
  4708  004AFE  501F               	movf	(stoa@l+1)^0,w,c
  4709  004B00  0A80               	xorlw	128
  4710  004B02  580E               	subwfb	??_stoa^0,w,c
  4711  004B04  A0D8               	btfss	status,0,c
  4712  004B06  EF87  F025         	goto	u6531
  4713  004B0A  EF89  F025         	goto	u6530
  4714  004B0E                     u6531:
  4715  004B0E  EF8B  F025         	goto	l1565
  4716  004B12                     u6530:
  4717  004B12  EF8F  F025         	goto	l1567
  4718  004B16                     l1565:
  4719  004B16  C01C  F01E         	movff	stoa@p,stoa@l
  4720  004B1A  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  4721  004B1E                     l1567:
  4722                           
  4723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  4724  004B1E  C01E  F01C         	movff	stoa@l,stoa@p
  4725  004B22  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  4726                           
  4727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  4728  004B26  C11E  F018         	movff	_width,stoa@w
  4729  004B2A  C11F  F019         	movff	_width+1,stoa@w+1
  4730                           
  4731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  4732  004B2E  0101               	movlb	1	; () banked
  4733  004B30  B122               	btfsc	_flags& (0+255),0,b
  4734  004B32  EF9D  F025         	goto	u6541
  4735  004B36  EF9F  F025         	goto	u6540
  4736  004B3A                     u6541:
  4737  004B3A  EFBC  F025         	goto	l5393
  4738  004B3E                     u6540:
  4739  004B3E  EFAD  F025         	goto	l5391
  4740  004B42                     l5387:
  4741                           
  4742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  4743  004B42  0E00               	movlw	0
  4744  004B44  6E02               	movwf	(fputc@c+1)^0,c
  4745  004B46  0E20               	movlw	32
  4746  004B48  6E01               	movwf	fputc@c^0,c
  4747  004B4A  C00A  F003         	movff	stoa@fp,fputc@fp
  4748  004B4E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4749  004B52  EC0B  F02C         	call	_fputc	;wreg free
  4750  004B56                     
  4751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  4752  004B56  4A1E               	infsnz	stoa@l^0,f,c
  4753  004B58  2A1F               	incf	(stoa@l+1)^0,f,c
  4754  004B5A                     l5391:
  4755                           
  4756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  4757  004B5A  5018               	movf	stoa@w^0,w,c
  4758  004B5C  5C1E               	subwf	stoa@l^0,w,c
  4759  004B5E  501F               	movf	(stoa@l+1)^0,w,c
  4760  004B60  0A80               	xorlw	128
  4761  004B62  6E0E               	movwf	??_stoa^0,c
  4762  004B64  5019               	movf	(stoa@w+1)^0,w,c
  4763  004B66  0A80               	xorlw	128
  4764  004B68  580E               	subwfb	??_stoa^0,w,c
  4765  004B6A  A0D8               	btfss	status,0,c
  4766  004B6C  EFBA  F025         	goto	u6551
  4767  004B70  EFBC  F025         	goto	u6550
  4768  004B74                     u6551:
  4769  004B74  EFA1  F025         	goto	l5387
  4770  004B78                     u6550:
  4771  004B78                     l5393:
  4772                           
  4773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  4774  004B78  0E00               	movlw	0
  4775  004B7A  6E17               	movwf	(stoa@i+1)^0,c
  4776  004B7C  0E00               	movlw	0
  4777  004B7E  6E16               	movwf	stoa@i^0,c
  4778                           
  4779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4780  004B80  EFE1  F025         	goto	l5401
  4781  004B84                     l5395:
  4782                           
  4783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  4784  004B84  C01A  FFF6         	movff	stoa@cp,tblptrl
  4785  004B88  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  4786  004B8C  0E00               	movlw	low (__smallconst shr (0+16))
  4787  004B8E  6EF8               	movwf	tblptru,c
  4788  004B90  0E0D               	movlw	(high __ramtop+-1)
  4789  004B92  64F7               	cpfsgt	tblptrh,c
  4790  004B94  D003               	bra	u6567
  4791  004B96  0008               	tblrd		*
  4792  004B98  50F5               	movf	tablat,w,c
  4793  004B9A  D005               	bra	u6560
  4794  004B9C                     u6567:
  4795  004B9C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4796  004BA0  CFF7 FFEA          	movff	tblptrh,fsr0h
  4797  004BA4  50EF               	movf	indf0,w,c
  4798  004BA6                     u6560:
  4799  004BA6  6E0E               	movwf	??_stoa^0,c
  4800  004BA8  500E               	movf	??_stoa^0,w,c
  4801  004BAA  6E01               	movwf	fputc@c^0,c
  4802  004BAC  6A02               	clrf	(fputc@c+1)^0,c
  4803  004BAE  C00A  F003         	movff	stoa@fp,fputc@fp
  4804  004BB2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4805  004BB6  EC0B  F02C         	call	_fputc	;wreg free
  4806  004BBA                     
  4807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  4808  004BBA  4A1A               	infsnz	stoa@cp^0,f,c
  4809  004BBC  2A1B               	incf	(stoa@cp+1)^0,f,c
  4810  004BBE                     
  4811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  4812  004BBE  4A16               	infsnz	stoa@i^0,f,c
  4813  004BC0  2A17               	incf	(stoa@i+1)^0,f,c
  4814  004BC2                     l5401:
  4815                           
  4816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4817  004BC2  501C               	movf	stoa@p^0,w,c
  4818  004BC4  5C16               	subwf	stoa@i^0,w,c
  4819  004BC6  5017               	movf	(stoa@i+1)^0,w,c
  4820  004BC8  0A80               	xorlw	128
  4821  004BCA  6E0E               	movwf	??_stoa^0,c
  4822  004BCC  501D               	movf	(stoa@p+1)^0,w,c
  4823  004BCE  0A80               	xorlw	128
  4824  004BD0  580E               	subwfb	??_stoa^0,w,c
  4825  004BD2  A0D8               	btfss	status,0,c
  4826  004BD4  EFEE  F025         	goto	u6571
  4827  004BD8  EFF0  F025         	goto	u6570
  4828  004BDC                     u6571:
  4829  004BDC  EFC2  F025         	goto	l5395
  4830  004BE0                     u6570:
  4831  004BE0                     
  4832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  4833  004BE0  0101               	movlb	1	; () banked
  4834  004BE2  A122               	btfss	_flags& (0+255),0,b
  4835  004BE4  EFF6  F025         	goto	u6581
  4836  004BE8  EFF8  F025         	goto	u6580
  4837  004BEC                     u6581:
  4838  004BEC  EF15  F026         	goto	l1577
  4839  004BF0                     u6580:
  4840  004BF0  EF06  F026         	goto	l5409
  4841  004BF4                     l5405:
  4842                           
  4843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  4844  004BF4  0E00               	movlw	0
  4845  004BF6  6E02               	movwf	(fputc@c+1)^0,c
  4846  004BF8  0E20               	movlw	32
  4847  004BFA  6E01               	movwf	fputc@c^0,c
  4848  004BFC  C00A  F003         	movff	stoa@fp,fputc@fp
  4849  004C00  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4850  004C04  EC0B  F02C         	call	_fputc	;wreg free
  4851  004C08                     
  4852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  4853  004C08  4A1E               	infsnz	stoa@l^0,f,c
  4854  004C0A  2A1F               	incf	(stoa@l+1)^0,f,c
  4855  004C0C                     l5409:
  4856                           
  4857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  4858  004C0C  5018               	movf	stoa@w^0,w,c
  4859  004C0E  5C1E               	subwf	stoa@l^0,w,c
  4860  004C10  501F               	movf	(stoa@l+1)^0,w,c
  4861  004C12  0A80               	xorlw	128
  4862  004C14  6E0E               	movwf	??_stoa^0,c
  4863  004C16  5019               	movf	(stoa@w+1)^0,w,c
  4864  004C18  0A80               	xorlw	128
  4865  004C1A  580E               	subwfb	??_stoa^0,w,c
  4866  004C1C  A0D8               	btfss	status,0,c
  4867  004C1E  EF13  F026         	goto	u6591
  4868  004C22  EF15  F026         	goto	u6590
  4869  004C26                     u6591:
  4870  004C26  EFFA  F025         	goto	l5405
  4871  004C2A                     u6590:
  4872  004C2A                     l1577:
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  4875  004C2A  C01E  F00A         	movff	stoa@l,?_stoa
  4876  004C2E  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  4877  004C32  0012               	return		;funcret
  4878  004C34                     __end_of_stoa:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function _efgtoa *****************
  4882 ;; Defined at:
  4883 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  4886 ;;		 -> sprintf@f(6), 
  4887 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  4888 ;;  c               1   65[COMRAM] unsigned char 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  u               4   52[BANK0 ] unsigned char 
  4891 ;;  g               4   44[BANK0 ] unsigned char 
  4892 ;;  l               4   38[BANK0 ] unsigned char 
  4893 ;;  h               4   34[BANK0 ] unsigned char 
  4894 ;;  ou              4   20[BANK0 ] unsigned char 
  4895 ;;  n               2   50[BANK0 ] int 
  4896 ;;  e               2   48[BANK0 ] int 
  4897 ;;  i               2   42[BANK0 ] int 
  4898 ;;  w               2   30[BANK0 ] int 
  4899 ;;  p               2   28[BANK0 ] int 
  4900 ;;  sign            2   26[BANK0 ] int 
  4901 ;;  d               2   24[BANK0 ] int 
  4902 ;;  m               2   18[BANK0 ] int 
  4903 ;;  ne              2   16[BANK0 ] int 
  4904 ;;  pp              2   14[BANK0 ] int 
  4905 ;;  t               2   12[BANK0 ] int 
  4906 ;;  mode            1   33[BANK0 ] unsigned char 
  4907 ;;  nmode           1   32[BANK0 ] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  2   59[COMRAM] int 
  4910 ;; Registers used:
  4911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4917 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4919 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;Total ram usage:       68 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 4
  4924 ;; This function calls:
  4925 ;;		___awdiv
  4926 ;;		___awmod
  4927 ;;		___fladd
  4928 ;;		___fldiv
  4929 ;;		___fleq
  4930 ;;		___flge
  4931 ;;		___flmul
  4932 ;;		___flneg
  4933 ;;		___flsub
  4934 ;;		___fltol
  4935 ;;		___fpclassifyf
  4936 ;;		_floorf
  4937 ;;		_isupper
  4938 ;;		_pad
  4939 ;;		_strcpy
  4940 ;;		_tolower
  4941 ;; This function is called by:
  4942 ;;		_vfpfcnvrt
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text13
  4947  000EB8                     __ptext13:
  4948                           	callstack 0
  4949  000EB8                     _efgtoa:
  4950                           	callstack 21
  4951  000EB8                     
  4952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4953  000EB8  0E00               	movlw	0
  4954  000EBA  0100               	movlb	0	; () banked
  4955  000EBC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4956  000EBE  0E00               	movlw	0
  4957  000EC0  6F7A               	movwf	efgtoa@sign& (0+255),b
  4958  000EC2                     
  4959                           ; BSR set to: 0
  4960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4961  000EC2  C03E  F08C         	movff	efgtoa@f,efgtoa@g
  4962  000EC6  C03F  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4963  000ECA  C040  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4964  000ECE  C041  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4965  000ED2                     
  4966                           ; BSR set to: 0
  4967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4968  000ED2  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4969  000ED4  EF70  F007         	goto	u5960
  4970  000ED8  EF6E  F007         	goto	u5961
  4971  000EDC                     u5961:
  4972  000EDC  EF86  F007         	goto	l5071
  4973  000EE0                     u5960:
  4974  000EE0                     
  4975                           ; BSR set to: 0
  4976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4977  000EE0  0E00               	movlw	0
  4978  000EE2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4979  000EE4  0E01               	movlw	1
  4980  000EE6  6F7A               	movwf	efgtoa@sign& (0+255),b
  4981  000EE8                     
  4982                           ; BSR set to: 0
  4983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4984  000EE8  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4985  000EEC  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4986  000EF0  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4987  000EF4  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4988  000EF8  ECEB  F031         	call	___flneg	;wreg free
  4989  000EFC  C001  F08C         	movff	?___flneg,efgtoa@g
  4990  000F00  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4991  000F04  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4992  000F08  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4993  000F0C                     l5071:
  4994                           
  4995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4996  000F0C  0E00               	movlw	0
  4997  000F0E  0100               	movlb	0	; () banked
  4998  000F10  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4999  000F12  0E00               	movlw	0
  5000  000F14  6F92               	movwf	efgtoa@n& (0+255),b
  5001  000F16                     
  5002                           ; BSR set to: 0
  5003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  5004  000F16  C11E  F07E         	movff	_width,efgtoa@w
  5005  000F1A  C11F  F07F         	movff	_width+1,efgtoa@w+1
  5006  000F1E                     
  5007                           ; BSR set to: 0
  5008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  5009  000F1E  517A               	movf	efgtoa@sign& (0+255),w,b
  5010  000F20  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5011  000F22  A4D8               	btfss	status,2,c
  5012  000F24  EF96  F007         	goto	u5971
  5013  000F28  EF98  F007         	goto	u5970
  5014  000F2C                     u5971:
  5015  000F2C  EFA0  F007         	goto	l5079
  5016  000F30                     u5970:
  5017  000F30                     
  5018                           ; BSR set to: 0
  5019  000F30  0101               	movlb	1	; () banked
  5020  000F32  A522               	btfss	_flags& (0+255),2,b
  5021  000F34  EF9E  F007         	goto	u5981
  5022  000F38  EFA0  F007         	goto	u5980
  5023  000F3C                     u5981:
  5024  000F3C  EFBB  F007         	goto	l5091
  5025  000F40                     u5980:
  5026  000F40                     l5079:
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  5029  000F40  0100               	movlb	0	; () banked
  5030  000F42  517A               	movf	efgtoa@sign& (0+255),w,b
  5031  000F44  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5032  000F46  A4D8               	btfss	status,2,c
  5033  000F48  EFA8  F007         	goto	u5991
  5034  000F4C  EFAA  F007         	goto	u5990
  5035  000F50                     u5991:
  5036  000F50  EFB0  F007         	goto	l5083
  5037  000F54                     u5990:
  5038  000F54                     
  5039                           ; BSR set to: 0
  5040  000F54  0E00               	movlw	0
  5041  000F56  6F61               	movwf	(_efgtoa$3026+1)& (0+255),b
  5042  000F58  0E2B               	movlw	43
  5043  000F5A  6F60               	movwf	_efgtoa$3026& (0+255),b
  5044  000F5C  EFB4  F007         	goto	l5085
  5045  000F60                     l5083:
  5046                           
  5047                           ; BSR set to: 0
  5048  000F60  0E00               	movlw	0
  5049  000F62  6F61               	movwf	(_efgtoa$3026+1)& (0+255),b
  5050  000F64  0E2D               	movlw	45
  5051  000F66  6F60               	movwf	_efgtoa$3026& (0+255),b
  5052  000F68                     l5085:
  5053                           
  5054                           ; BSR set to: 0
  5055  000F68  C060  F131         	movff	_efgtoa$3026,_dbuf
  5056  000F6C                     
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  5059  000F6C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5060  000F6E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5061  000F70                     
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  5064  000F70  077E               	decf	efgtoa@w& (0+255),f,b
  5065  000F72  A0D8               	btfss	status,0,c
  5066  000F74  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5067  000F76                     l5091:
  5068                           
  5069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5070  000F76  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5071  000F7A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5072  000F7E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5073  000F82  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5074  000F86  ECC7  F029         	call	___fpclassifyf	;wreg free
  5075  000F8A  0401               	decf	?___fpclassifyf^0,w,c
  5076  000F8C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5077  000F8E  A4D8               	btfss	status,2,c
  5078  000F90  EFCC  F007         	goto	u6001
  5079  000F94  EFCE  F007         	goto	u6000
  5080  000F98                     u6001:
  5081  000F98  EF25  F008         	goto	l5109
  5082  000F9C                     u6000:
  5083  000F9C  0EBF               	movlw	191
  5084  000F9E  6E43               	movwf	??_efgtoa^0,c
  5085  000FA0  0EFF               	movlw	255
  5086  000FA2  6E44               	movwf	(??_efgtoa+1)^0,c
  5087  000FA4  5042               	movf	efgtoa@c^0,w,c
  5088  000FA6  6E45               	movwf	(??_efgtoa+2)^0,c
  5089  000FA8  6A46               	clrf	(??_efgtoa+3)^0,c
  5090  000FAA  5043               	movf	??_efgtoa^0,w,c
  5091  000FAC  2645               	addwf	(??_efgtoa+2)^0,f,c
  5092  000FAE  5044               	movf	(??_efgtoa+1)^0,w,c
  5093  000FB0  2246               	addwfc	(??_efgtoa+3)^0,f,c
  5094  000FB2  5046               	movf	(??_efgtoa+3)^0,w,c
  5095  000FB4  E10A               	bnz	u6010
  5096  000FB6  0E1A               	movlw	26
  5097  000FB8  5C45               	subwf	(??_efgtoa+2)^0,w,c
  5098  000FBA  A0D8               	btfss	status,0,c
  5099  000FBC  EFE2  F007         	goto	u6011
  5100  000FC0  EFE5  F007         	goto	u6010
  5101  000FC4                     u6011:
  5102  000FC4  0E01               	movlw	1
  5103  000FC6  EFE6  F007         	goto	u6020
  5104  000FCA                     u6010:
  5105  000FCA  0E00               	movlw	0
  5106  000FCC                     u6020:
  5107  000FCC  0100               	movlb	0	; () banked
  5108  000FCE  6F62               	movwf	_efgtoa$3027& (0+255),b
  5109  000FD0  6B63               	clrf	(_efgtoa$3027+1)& (0+255),b
  5110  000FD2                     
  5111                           ; BSR set to: 0
  5112  000FD2  5162               	movf	_efgtoa$3027& (0+255),w,b
  5113  000FD4  1163               	iorwf	(_efgtoa$3027+1)& (0+255),w,b
  5114  000FD6  B4D8               	btfsc	status,2,c
  5115  000FD8  EFF0  F007         	goto	u6031
  5116  000FDC  EFF2  F007         	goto	u6030
  5117  000FE0                     u6031:
  5118  000FE0  EF00  F008         	goto	l5101
  5119  000FE4                     u6030:
  5120  000FE4                     
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  5123  000FE4  0E31               	movlw	low _dbuf
  5124  000FE6  2592               	addwf	efgtoa@n& (0+255),w,b
  5125  000FE8  6E01               	movwf	strcpy@dest^0,c
  5126  000FEA  0E01               	movlw	high _dbuf
  5127  000FEC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5128  000FEE  6E02               	movwf	(strcpy@dest+1)^0,c
  5129  000FF0  0E9F               	movlw	low STR_20
  5130  000FF2  6E03               	movwf	strcpy@src^0,c
  5131  000FF4  0E0E               	movlw	high STR_20
  5132  000FF6  6E04               	movwf	(strcpy@src+1)^0,c
  5133  000FF8  EC1E  F02F         	call	_strcpy	;wreg free
  5134                           
  5135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  5136  000FFC  EF0C  F008         	goto	l5103
  5137  001000                     l5101:
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  5141  001000  0E31               	movlw	low _dbuf
  5142  001002  2592               	addwf	efgtoa@n& (0+255),w,b
  5143  001004  6E01               	movwf	strcpy@dest^0,c
  5144  001006  0E01               	movlw	high _dbuf
  5145  001008  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5146  00100A  6E02               	movwf	(strcpy@dest+1)^0,c
  5147  00100C  0EA7               	movlw	low STR_21
  5148  00100E  6E03               	movwf	strcpy@src^0,c
  5149  001010  0E0E               	movlw	high STR_21
  5150  001012  6E04               	movwf	(strcpy@src+1)^0,c
  5151  001014  EC1E  F02F         	call	_strcpy	;wreg free
  5152  001018                     l5103:
  5153                           
  5154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5155  001018  0100               	movlb	0	; () banked
  5156  00101A  0EFD               	movlw	253
  5157  00101C  277E               	addwf	efgtoa@w& (0+255),f,b
  5158  00101E  0EFF               	movlw	255
  5159  001020  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5160  001022                     l5105:
  5161                           
  5162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5163  001022  C03C  F011         	movff	efgtoa@fp,pad@fp
  5164  001026  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  5165  00102A  0E31               	movlw	low _dbuf
  5166  00102C  6E13               	movwf	pad@buf^0,c
  5167  00102E  0E01               	movlw	high _dbuf
  5168  001030  6E14               	movwf	(pad@buf+1)^0,c
  5169  001032  C07E  F015         	movff	efgtoa@w,pad@p
  5170  001036  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  5171  00103A  EC70  F02C         	call	_pad	;wreg free
  5172  00103E  C011  F03C         	movff	?_pad,?_efgtoa
  5173  001042  C012  F03D         	movff	?_pad+1,?_efgtoa+1
  5174  001046  EF92  F00D         	goto	l1483
  5175  00104A                     l5109:
  5176                           
  5177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5178  00104A  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5179  00104E  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5180  001052  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5181  001056  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5182  00105A  ECC7  F029         	call	___fpclassifyf	;wreg free
  5183  00105E  5001               	movf	?___fpclassifyf^0,w,c
  5184  001060  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5185  001062  A4D8               	btfss	status,2,c
  5186  001064  EF36  F008         	goto	u6041
  5187  001068  EF38  F008         	goto	u6040
  5188  00106C                     u6041:
  5189  00106C  EF78  F008         	goto	l5127
  5190  001070                     u6040:
  5191  001070  0EBF               	movlw	191
  5192  001072  6E43               	movwf	??_efgtoa^0,c
  5193  001074  0EFF               	movlw	255
  5194  001076  6E44               	movwf	(??_efgtoa+1)^0,c
  5195  001078  5042               	movf	efgtoa@c^0,w,c
  5196  00107A  6E45               	movwf	(??_efgtoa+2)^0,c
  5197  00107C  6A46               	clrf	(??_efgtoa+3)^0,c
  5198  00107E  5043               	movf	??_efgtoa^0,w,c
  5199  001080  2645               	addwf	(??_efgtoa+2)^0,f,c
  5200  001082  5044               	movf	(??_efgtoa+1)^0,w,c
  5201  001084  2246               	addwfc	(??_efgtoa+3)^0,f,c
  5202  001086  5046               	movf	(??_efgtoa+3)^0,w,c
  5203  001088  E10A               	bnz	u6050
  5204  00108A  0E1A               	movlw	26
  5205  00108C  5C45               	subwf	(??_efgtoa+2)^0,w,c
  5206  00108E  A0D8               	btfss	status,0,c
  5207  001090  EF4C  F008         	goto	u6051
  5208  001094  EF4F  F008         	goto	u6050
  5209  001098                     u6051:
  5210  001098  0E01               	movlw	1
  5211  00109A  EF50  F008         	goto	u6060
  5212  00109E                     u6050:
  5213  00109E  0E00               	movlw	0
  5214  0010A0                     u6060:
  5215  0010A0  0100               	movlb	0	; () banked
  5216  0010A2  6F64               	movwf	_efgtoa$3031& (0+255),b
  5217  0010A4  6B65               	clrf	(_efgtoa$3031+1)& (0+255),b
  5218  0010A6                     
  5219                           ; BSR set to: 0
  5220  0010A6  5164               	movf	_efgtoa$3031& (0+255),w,b
  5221  0010A8  1165               	iorwf	(_efgtoa$3031+1)& (0+255),w,b
  5222  0010AA  B4D8               	btfsc	status,2,c
  5223  0010AC  EF5A  F008         	goto	u6071
  5224  0010B0  EF5C  F008         	goto	u6070
  5225  0010B4                     u6071:
  5226  0010B4  EF6A  F008         	goto	l5119
  5227  0010B8                     u6070:
  5228  0010B8                     
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5231  0010B8  0E31               	movlw	low _dbuf
  5232  0010BA  2592               	addwf	efgtoa@n& (0+255),w,b
  5233  0010BC  6E01               	movwf	strcpy@dest^0,c
  5234  0010BE  0E01               	movlw	high _dbuf
  5235  0010C0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5236  0010C2  6E02               	movwf	(strcpy@dest+1)^0,c
  5237  0010C4  0EA3               	movlw	low STR_24
  5238  0010C6  6E03               	movwf	strcpy@src^0,c
  5239  0010C8  0E0E               	movlw	high STR_24
  5240  0010CA  6E04               	movwf	(strcpy@src+1)^0,c
  5241  0010CC  EC1E  F02F         	call	_strcpy	;wreg free
  5242                           
  5243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5244  0010D0  EF0C  F008         	goto	l5103
  5245  0010D4                     l5119:
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5249  0010D4  0E31               	movlw	low _dbuf
  5250  0010D6  2592               	addwf	efgtoa@n& (0+255),w,b
  5251  0010D8  6E01               	movwf	strcpy@dest^0,c
  5252  0010DA  0E01               	movlw	high _dbuf
  5253  0010DC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5254  0010DE  6E02               	movwf	(strcpy@dest+1)^0,c
  5255  0010E0  0EAB               	movlw	low STR_25
  5256  0010E2  6E03               	movwf	strcpy@src^0,c
  5257  0010E4  0E0E               	movlw	high STR_25
  5258  0010E6  6E04               	movwf	(strcpy@src+1)^0,c
  5259  0010E8  EC1E  F02F         	call	_strcpy	;wreg free
  5260  0010EC  EF0C  F008         	goto	l5103
  5261  0010F0                     l5127:
  5262                           
  5263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5264  0010F0  0E00               	movlw	0
  5265  0010F2  0100               	movlb	0	; () banked
  5266  0010F4  6F94               	movwf	efgtoa@u& (0+255),b
  5267  0010F6  0E00               	movlw	0
  5268  0010F8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5269  0010FA  0E80               	movlw	128
  5270  0010FC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5271  0010FE  0E3F               	movlw	63
  5272  001100  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5273                           
  5274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5275  001102  0E00               	movlw	0
  5276  001104  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5277  001106  0E00               	movlw	0
  5278  001108  6F90               	movwf	efgtoa@e& (0+255),b
  5279  00110A                     
  5280                           ; BSR set to: 0
  5281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5282  00110A  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  5283  00110E  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5284  001112  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5285  001116  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5286  00111A  0E00               	movlw	0
  5287  00111C  6E05               	movwf	___fleq@ff2^0,c
  5288  00111E  0E00               	movlw	0
  5289  001120  6E06               	movwf	(___fleq@ff2+1)^0,c
  5290  001122  0E00               	movlw	0
  5291  001124  6E07               	movwf	(___fleq@ff2+2)^0,c
  5292  001126  0E00               	movlw	0
  5293  001128  6E08               	movwf	(___fleq@ff2+3)^0,c
  5294  00112A  EC8D  F02D         	call	___fleq	;wreg free
  5295  00112E  B0D8               	btfsc	status,0,c
  5296  001130  EF9C  F008         	goto	u6081
  5297  001134  EF9E  F008         	goto	u6080
  5298  001138                     u6081:
  5299  001138  EF21  F009         	goto	l5145
  5300  00113C                     u6080:
  5301  00113C  EFBD  F008         	goto	l5137
  5302  001140                     l5133:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5305  001140  C094  F001         	movff	efgtoa@u,___flmul@b
  5306  001144  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5307  001148  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5308  00114C  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5309  001150  0E00               	movlw	0
  5310  001152  6E05               	movwf	___flmul@a^0,c
  5311  001154  0E00               	movlw	0
  5312  001156  6E06               	movwf	(___flmul@a+1)^0,c
  5313  001158  0E20               	movlw	32
  5314  00115A  6E07               	movwf	(___flmul@a+2)^0,c
  5315  00115C  0E41               	movlw	65
  5316  00115E  6E08               	movwf	(___flmul@a+3)^0,c
  5317  001160  EC59  F01C         	call	___flmul	;wreg free
  5318  001164  C001  F094         	movff	?___flmul,efgtoa@u
  5319  001168  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  5320  00116C  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  5321  001170  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  5322  001174                     
  5323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5324  001174  0100               	movlb	0	; () banked
  5325  001176  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5326  001178  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5327  00117A                     l5137:
  5328                           
  5329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5330  00117A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  5331  00117E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5332  001182  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5333  001186  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5334  00118A  0E00               	movlw	0
  5335  00118C  6E05               	movwf	___flmul@a^0,c
  5336  00118E  0E00               	movlw	0
  5337  001190  6E06               	movwf	(___flmul@a+1)^0,c
  5338  001192  0E20               	movlw	32
  5339  001194  6E07               	movwf	(___flmul@a+2)^0,c
  5340  001196  0E41               	movlw	65
  5341  001198  6E08               	movwf	(___flmul@a+3)^0,c
  5342  00119A  C094  F001         	movff	efgtoa@u,___flmul@b
  5343  00119E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5344  0011A2  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5345  0011A6  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5346  0011AA  EC59  F01C         	call	___flmul	;wreg free
  5347  0011AE  C001  F01E         	movff	?___flmul,___flge@ff2
  5348  0011B2  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5349  0011B6  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5350  0011BA  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5351  0011BE  EC45  F029         	call	___flge	;wreg free
  5352  0011C2  B0D8               	btfsc	status,0,c
  5353  0011C4  EFE6  F008         	goto	u6091
  5354  0011C8  EFE8  F008         	goto	u6090
  5355  0011CC                     u6091:
  5356  0011CC  EFA0  F008         	goto	l5133
  5357  0011D0                     u6090:
  5358  0011D0  EF08  F009         	goto	l5143
  5359  0011D4                     l5139:
  5360                           
  5361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5362  0011D4  C094  F00F         	movff	efgtoa@u,___fldiv@b
  5363  0011D8  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5364  0011DC  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5365  0011E0  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5366  0011E4  0E00               	movlw	0
  5367  0011E6  6E13               	movwf	___fldiv@a^0,c
  5368  0011E8  0E00               	movlw	0
  5369  0011EA  6E14               	movwf	(___fldiv@a+1)^0,c
  5370  0011EC  0E20               	movlw	32
  5371  0011EE  6E15               	movwf	(___fldiv@a+2)^0,c
  5372  0011F0  0E41               	movlw	65
  5373  0011F2  6E16               	movwf	(___fldiv@a+3)^0,c
  5374  0011F4  EC6E  F01E         	call	___fldiv	;wreg free
  5375  0011F8  C00F  F094         	movff	?___fldiv,efgtoa@u
  5376  0011FC  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  5377  001200  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  5378  001204  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  5379  001208                     
  5380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5381  001208  0100               	movlb	0	; () banked
  5382  00120A  0790               	decf	efgtoa@e& (0+255),f,b
  5383  00120C  A0D8               	btfss	status,0,c
  5384  00120E  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5385  001210                     l5143:
  5386                           
  5387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5388  001210  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  5389  001214  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5390  001218  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5391  00121C  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5392  001220  C094  F01E         	movff	efgtoa@u,___flge@ff2
  5393  001224  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  5394  001228  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  5395  00122C  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  5396  001230  EC45  F029         	call	___flge	;wreg free
  5397  001234  A0D8               	btfss	status,0,c
  5398  001236  EF1F  F009         	goto	u6101
  5399  00123A  EF21  F009         	goto	u6100
  5400  00123E                     u6101:
  5401  00123E  EFEA  F008         	goto	l5139
  5402  001242                     u6100:
  5403  001242                     l5145:
  5404                           
  5405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5406  001242  C042  F007         	movff	efgtoa@c,tolower@c
  5407  001246  6A08               	clrf	(tolower@c+1)^0,c
  5408  001248  ECEE  F02E         	call	_tolower	;wreg free
  5409  00124C  5007               	movf	?_tolower^0,w,c
  5410  00124E  0100               	movlb	0	; () banked
  5411  001250  6F81               	movwf	efgtoa@mode& (0+255),b
  5412  001252                     
  5413                           ; BSR set to: 0
  5414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5415  001252  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  5416  001256                     
  5417                           ; BSR set to: 0
  5418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5419  001256  0E67               	movlw	103
  5420  001258  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5421  00125A  A4D8               	btfss	status,2,c
  5422  00125C  EF32  F009         	goto	u6111
  5423  001260  EF34  F009         	goto	u6110
  5424  001264                     u6111:
  5425  001264  EF5C  F009         	goto	l5159
  5426  001268                     u6110:
  5427  001268                     
  5428                           ; BSR set to: 0
  5429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5430  001268  0101               	movlb	1	; () banked
  5431  00126A  5120               	movf	_prec& (0+255),w,b
  5432  00126C  1121               	iorwf	(_prec+1)& (0+255),w,b
  5433  00126E  A4D8               	btfss	status,2,c
  5434  001270  EF3C  F009         	goto	u6121
  5435  001274  EF3E  F009         	goto	u6120
  5436  001278                     u6121:
  5437  001278  EF42  F009         	goto	l5155
  5438  00127C                     u6120:
  5439  00127C                     
  5440                           ; BSR set to: 1
  5441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5442  00127C  0E00               	movlw	0
  5443  00127E  6F21               	movwf	(_prec+1)& (0+255),b
  5444  001280  0E01               	movlw	1
  5445  001282  6F20               	movwf	_prec& (0+255),b
  5446  001284                     l5155:
  5447                           
  5448                           ; BSR set to: 1
  5449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5450  001284  BF21               	btfsc	(_prec+1)& (0+255),7,b
  5451  001286  EF4F  F009         	goto	u6130
  5452  00128A  5121               	movf	(_prec+1)& (0+255),w,b
  5453  00128C  E106               	bnz	u6131
  5454  00128E  0520               	decf	_prec& (0+255),w,b
  5455  001290  B0D8               	btfsc	status,0,c
  5456  001292  EF4D  F009         	goto	u6131
  5457  001296  EF4F  F009         	goto	u6130
  5458  00129A                     u6131:
  5459  00129A  EF56  F009         	goto	l1501
  5460  00129E                     u6130:
  5461  00129E                     l5157:
  5462                           
  5463                           ; BSR set to: 1
  5464  00129E  0E00               	movlw	0
  5465  0012A0  0100               	movlb	0	; () banked
  5466  0012A2  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5467  0012A4  0E06               	movlw	6
  5468  0012A6  6F7C               	movwf	efgtoa@p& (0+255),b
  5469  0012A8  EF66  F009         	goto	l5165
  5470  0012AC                     l1501:
  5471                           
  5472                           ; BSR set to: 1
  5473  0012AC  C120  F07C         	movff	_prec,efgtoa@p
  5474  0012B0  C121  F07D         	movff	_prec+1,efgtoa@p+1
  5475  0012B4  EF66  F009         	goto	l5165
  5476  0012B8                     l5159:
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5480  0012B8  0101               	movlb	1	; () banked
  5481  0012BA  BF21               	btfsc	(_prec+1)& (0+255),7,b
  5482  0012BC  EF62  F009         	goto	u6141
  5483  0012C0  EF64  F009         	goto	u6140
  5484  0012C4                     u6141:
  5485  0012C4  EF4F  F009         	goto	l5157
  5486  0012C8                     u6140:
  5487  0012C8  EF56  F009         	goto	l1501
  5488  0012CC                     l5165:
  5489                           
  5490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5491  0012CC  0E67               	movlw	103
  5492  0012CE  0100               	movlb	0	; () banked
  5493  0012D0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5494  0012D2  A4D8               	btfss	status,2,c
  5495  0012D4  EF6E  F009         	goto	u6151
  5496  0012D8  EF70  F009         	goto	u6150
  5497  0012DC                     u6151:
  5498  0012DC  EF9F  F009         	goto	l5175
  5499  0012E0                     u6150:
  5500  0012E0                     
  5501                           ; BSR set to: 0
  5502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5503  0012E0  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5504  0012E2  EF7E  F009         	goto	u6160
  5505  0012E6  0EFC               	movlw	252
  5506  0012E8  5D90               	subwf	efgtoa@e& (0+255),w,b
  5507  0012EA  0EFF               	movlw	255
  5508  0012EC  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5509  0012EE  A0D8               	btfss	status,0,c
  5510  0012F0  EF7C  F009         	goto	u6161
  5511  0012F4  EF7E  F009         	goto	u6160
  5512  0012F8                     u6161:
  5513  0012F8  EF9D  F009         	goto	l5173
  5514  0012FC                     u6160:
  5515  0012FC                     
  5516                           ; BSR set to: 0
  5517  0012FC  0EFF               	movlw	255
  5518  0012FE  6E43               	movwf	??_efgtoa^0,c
  5519  001300  0EFF               	movlw	255
  5520  001302  6E44               	movwf	(??_efgtoa+1)^0,c
  5521  001304  C07C  F045         	movff	efgtoa@p,??_efgtoa+2
  5522  001308  C07D  F046         	movff	efgtoa@p+1,??_efgtoa+3
  5523  00130C  5043               	movf	??_efgtoa^0,w,c
  5524  00130E  2645               	addwf	(??_efgtoa+2)^0,f,c
  5525  001310  5044               	movf	(??_efgtoa+1)^0,w,c
  5526  001312  2246               	addwfc	(??_efgtoa+3)^0,f,c
  5527  001314  5190               	movf	efgtoa@e& (0+255),w,b
  5528  001316  5C45               	subwf	(??_efgtoa+2)^0,w,c
  5529  001318  5046               	movf	(??_efgtoa+3)^0,w,c
  5530  00131A  0A80               	xorlw	128
  5531  00131C  6E47               	movwf	(??_efgtoa+4)^0,c
  5532  00131E  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5533  001320  0A80               	xorlw	128
  5534  001322  5847               	subwfb	(??_efgtoa+4)^0,w,c
  5535  001324  A0D8               	btfss	status,0,c
  5536  001326  EF97  F009         	goto	u6171
  5537  00132A  EF99  F009         	goto	u6170
  5538  00132E                     u6171:
  5539  00132E  EF9D  F009         	goto	l5173
  5540  001332                     u6170:
  5541  001332                     
  5542                           ; BSR set to: 0
  5543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5544  001332  0E66               	movlw	102
  5545  001334  6F80               	movwf	efgtoa@nmode& (0+255),b
  5546                           
  5547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5548  001336  EF9F  F009         	goto	l5175
  5549  00133A                     l5173:
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5553  00133A  0E65               	movlw	101
  5554  00133C  6F80               	movwf	efgtoa@nmode& (0+255),b
  5555  00133E                     l5175:
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5559  00133E  C07C  F072         	movff	efgtoa@p,efgtoa@m
  5560  001342  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  5561  001346                     
  5562                           ; BSR set to: 0
  5563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5564  001346  0E67               	movlw	103
  5565  001348  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5566  00134A  A4D8               	btfss	status,2,c
  5567  00134C  EFAA  F009         	goto	u6181
  5568  001350  EFAC  F009         	goto	u6180
  5569  001354                     u6181:
  5570  001354  EFBC  F009         	goto	l5183
  5571  001358                     u6180:
  5572  001358                     
  5573                           ; BSR set to: 0
  5574  001358  0E66               	movlw	102
  5575  00135A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5576  00135C  A4D8               	btfss	status,2,c
  5577  00135E  EFB3  F009         	goto	u6191
  5578  001362  EFB5  F009         	goto	u6190
  5579  001366                     u6191:
  5580  001366  EFBE  F009         	goto	l5185
  5581  00136A                     u6190:
  5582  00136A                     
  5583                           ; BSR set to: 0
  5584  00136A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5585  00136C  EFBC  F009         	goto	u6200
  5586  001370  EFBA  F009         	goto	u6201
  5587  001374                     u6201:
  5588  001374  EFBE  F009         	goto	l5185
  5589  001378                     u6200:
  5590  001378                     l5183:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5594  001378  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5595  00137A  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5596  00137C                     l5185:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5600  00137C  0E66               	movlw	102
  5601  00137E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5602  001380  A4D8               	btfss	status,2,c
  5603  001382  EFC5  F009         	goto	u6211
  5604  001386  EFC7  F009         	goto	u6210
  5605  00138A                     u6211:
  5606  00138A  EFE7  F009         	goto	l5195
  5607  00138E                     u6210:
  5608  00138E                     
  5609                           ; BSR set to: 0
  5610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5611  00138E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5612  001390  EFCE  F009         	goto	u6220
  5613  001394  EFCC  F009         	goto	u6221
  5614  001398                     u6221:
  5615  001398  EFDA  F009         	goto	l5191
  5616  00139C                     u6220:
  5617  00139C                     
  5618                           ; BSR set to: 0
  5619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5620  00139C  0E00               	movlw	0
  5621  00139E  6F94               	movwf	efgtoa@u& (0+255),b
  5622  0013A0  0E00               	movlw	0
  5623  0013A2  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5624  0013A4  0E80               	movlw	128
  5625  0013A6  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5626  0013A8  0E3F               	movlw	63
  5627  0013AA  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5628                           
  5629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5630  0013AC  0E00               	movlw	0
  5631  0013AE  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5632  0013B0  0E00               	movlw	0
  5633  0013B2  6F90               	movwf	efgtoa@e& (0+255),b
  5634  0013B4                     l5191:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5638  0013B4  0E67               	movlw	103
  5639  0013B6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5640  0013B8  B4D8               	btfsc	status,2,c
  5641  0013BA  EFE1  F009         	goto	u6231
  5642  0013BE  EFE3  F009         	goto	u6230
  5643  0013C2                     u6231:
  5644  0013C2  EFE7  F009         	goto	l5195
  5645  0013C6                     u6230:
  5646  0013C6                     
  5647                           ; BSR set to: 0
  5648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5649  0013C6  5190               	movf	efgtoa@e& (0+255),w,b
  5650  0013C8  2772               	addwf	efgtoa@m& (0+255),f,b
  5651  0013CA  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5652  0013CC  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5653  0013CE                     l5195:
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5657  0013CE  0E00               	movlw	0
  5658  0013D0  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5659  0013D2  0E00               	movlw	0
  5660  0013D4  6F8A               	movwf	efgtoa@i& (0+255),b
  5661  0013D6                     
  5662                           ; BSR set to: 0
  5663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5664  0013D6  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5665  0013DA  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5666  0013DE  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5667  0013E2  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5668  0013E6                     
  5669                           ; BSR set to: 0
  5670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5671  0013E6  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5672  0013EA  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5673  0013EE  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5674  0013F2  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5675                           
  5676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5677  0013F6  EF78  F00A         	goto	l5209
  5678  0013FA                     l5201:
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5682  0013FA  C082  F00F         	movff	efgtoa@h,___fldiv@b
  5683  0013FE  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5684  001402  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5685  001406  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5686  00140A  C094  F013         	movff	efgtoa@u,___fldiv@a
  5687  00140E  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5688  001412  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5689  001416  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5690  00141A  EC6E  F01E         	call	___fldiv	;wreg free
  5691  00141E  C00F  F028         	movff	?___fldiv,floorf@x
  5692  001422  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5693  001426  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5694  00142A  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5695  00142E  ECAC  F021         	call	_floorf	;wreg free
  5696  001432  C028  F086         	movff	?_floorf,efgtoa@l
  5697  001436  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  5698  00143A  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  5699  00143E  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  5700                           
  5701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5702  001442  C086  F001         	movff	efgtoa@l,___fltol@f1
  5703  001446  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5704  00144A  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5705  00144E  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5706  001452  ECC2  F028         	call	___fltol	;wreg free
  5707  001456  C001  F078         	movff	?___fltol,efgtoa@d
  5708  00145A  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5709  00145E                     
  5710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5711  00145E  C082  F01A         	movff	efgtoa@h,___flsub@b
  5712  001462  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5713  001466  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5714  00146A  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5715  00146E  C094  F005         	movff	efgtoa@u,___flmul@a
  5716  001472  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5717  001476  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5718  00147A  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5719  00147E  C086  F001         	movff	efgtoa@l,___flmul@b
  5720  001482  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5721  001486  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5722  00148A  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5723  00148E  EC59  F01C         	call	___flmul	;wreg free
  5724  001492  C001  F01E         	movff	?___flmul,___flsub@a
  5725  001496  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5726  00149A  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5727  00149E  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5728  0014A2  EC0E  F031         	call	___flsub	;wreg free
  5729  0014A6  C01A  F082         	movff	?___flsub,efgtoa@h
  5730  0014AA  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5731  0014AE  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5732  0014B2  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5733  0014B6                     
  5734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5735  0014B6  C094  F00F         	movff	efgtoa@u,___fldiv@b
  5736  0014BA  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5737  0014BE  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5738  0014C2  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5739  0014C6  0E00               	movlw	0
  5740  0014C8  6E13               	movwf	___fldiv@a^0,c
  5741  0014CA  0E00               	movlw	0
  5742  0014CC  6E14               	movwf	(___fldiv@a+1)^0,c
  5743  0014CE  0E20               	movlw	32
  5744  0014D0  6E15               	movwf	(___fldiv@a+2)^0,c
  5745  0014D2  0E41               	movlw	65
  5746  0014D4  6E16               	movwf	(___fldiv@a+3)^0,c
  5747  0014D6  EC6E  F01E         	call	___fldiv	;wreg free
  5748  0014DA  C00F  F094         	movff	?___fldiv,efgtoa@u
  5749  0014DE  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  5750  0014E2  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  5751  0014E6  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  5752  0014EA                     
  5753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5754  0014EA  0100               	movlb	0	; () banked
  5755  0014EC  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5756  0014EE  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5757  0014F0                     l5209:
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5761  0014F0  5172               	movf	efgtoa@m& (0+255),w,b
  5762  0014F2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5763  0014F4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5764  0014F6  0A80               	xorlw	128
  5765  0014F8  6E43               	movwf	??_efgtoa^0,c
  5766  0014FA  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5767  0014FC  0A80               	xorlw	128
  5768  0014FE  5843               	subwfb	??_efgtoa^0,w,c
  5769  001500  A0D8               	btfss	status,0,c
  5770  001502  EF85  F00A         	goto	u6241
  5771  001506  EF87  F00A         	goto	u6240
  5772  00150A                     u6241:
  5773  00150A  EFFD  F009         	goto	l5201
  5774  00150E                     u6240:
  5775  00150E                     
  5776                           ; BSR set to: 0
  5777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5778  00150E  C094  F001         	movff	efgtoa@u,___flmul@b
  5779  001512  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5780  001516  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5781  00151A  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5782  00151E  0E00               	movlw	0
  5783  001520  6E05               	movwf	___flmul@a^0,c
  5784  001522  0E00               	movlw	0
  5785  001524  6E06               	movwf	(___flmul@a+1)^0,c
  5786  001526  0EA0               	movlw	160
  5787  001528  6E07               	movwf	(___flmul@a+2)^0,c
  5788  00152A  0E40               	movlw	64
  5789  00152C  6E08               	movwf	(___flmul@a+3)^0,c
  5790  00152E  EC59  F01C         	call	___flmul	;wreg free
  5791  001532  C001  F086         	movff	?___flmul,efgtoa@l
  5792  001536  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  5793  00153A  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  5794  00153E  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  5795  001542                     
  5796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5797  001542  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5798  001546  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5799  00154A  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5800  00154E  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5801  001552  C086  F01E         	movff	efgtoa@l,___flge@ff2
  5802  001556  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  5803  00155A  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  5804  00155E  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  5805  001562  EC45  F029         	call	___flge	;wreg free
  5806  001566  B0D8               	btfsc	status,0,c
  5807  001568  EFB8  F00A         	goto	u6251
  5808  00156C  EFBA  F00A         	goto	u6250
  5809  001570                     u6251:
  5810  001570  EFC5  F00A         	goto	l5217
  5811  001574                     u6250:
  5812  001574                     
  5813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5814  001574  0E00               	movlw	0
  5815  001576  0100               	movlb	0	; () banked
  5816  001578  6F86               	movwf	efgtoa@l& (0+255),b
  5817  00157A  0E00               	movlw	0
  5818  00157C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5819  00157E  0E00               	movlw	0
  5820  001580  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5821  001582  0E00               	movlw	0
  5822  001584  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5823                           
  5824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5825  001586  EFEE  F00A         	goto	l5223
  5826  00158A                     l5217:
  5827                           
  5828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5829  00158A  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5830  00158E  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5831  001592  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5832  001596  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5833  00159A  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5834  00159E  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5835  0015A2  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5836  0015A6  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5837  0015AA  EC8D  F02D         	call	___fleq	;wreg free
  5838  0015AE  A0D8               	btfss	status,0,c
  5839  0015B0  EFDC  F00A         	goto	u6261
  5840  0015B4  EFDE  F00A         	goto	u6260
  5841  0015B8                     u6261:
  5842  0015B8  EFEE  F00A         	goto	l5223
  5843  0015BC                     u6260:
  5844  0015BC  0100               	movlb	0	; () banked
  5845  0015BE  B178               	btfsc	efgtoa@d& (0+255),0,b
  5846  0015C0  EFE4  F00A         	goto	u6271
  5847  0015C4  EFE6  F00A         	goto	u6270
  5848  0015C8                     u6271:
  5849  0015C8  EFEE  F00A         	goto	l5223
  5850  0015CC                     u6270:
  5851  0015CC                     
  5852                           ; BSR set to: 0
  5853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5854  0015CC  0E00               	movlw	0
  5855  0015CE  6F86               	movwf	efgtoa@l& (0+255),b
  5856  0015D0  0E00               	movlw	0
  5857  0015D2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5858  0015D4  0E00               	movlw	0
  5859  0015D6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5860  0015D8  0E00               	movlw	0
  5861  0015DA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5862  0015DC                     l5223:
  5863                           
  5864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5865  0015DC  C08C  F001         	movff	efgtoa@g,___fladd@b
  5866  0015E0  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5867  0015E4  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5868  0015E8  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5869  0015EC  C086  F005         	movff	efgtoa@l,___fladd@a
  5870  0015F0  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5871  0015F4  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5872  0015F8  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5873  0015FC  ECF9  F019         	call	___fladd	;wreg free
  5874  001600  C001  F082         	movff	?___fladd,efgtoa@h
  5875  001604  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5876  001608  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5877  00160C  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5878  001610                     
  5879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5880  001610  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5881  001614  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5882  001618  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5883  00161C  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5884  001620  0E00               	movlw	0
  5885  001622  6E05               	movwf	___flmul@a^0,c
  5886  001624  0E00               	movlw	0
  5887  001626  6E06               	movwf	(___flmul@a+1)^0,c
  5888  001628  0E20               	movlw	32
  5889  00162A  6E07               	movwf	(___flmul@a+2)^0,c
  5890  00162C  0E41               	movlw	65
  5891  00162E  6E08               	movwf	(___flmul@a+3)^0,c
  5892  001630  C074  F001         	movff	efgtoa@ou,___flmul@b
  5893  001634  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5894  001638  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5895  00163C  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5896  001640  EC59  F01C         	call	___flmul	;wreg free
  5897  001644  C001  F01E         	movff	?___flmul,___flge@ff2
  5898  001648  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5899  00164C  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5900  001650  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5901  001654  EC45  F029         	call	___flge	;wreg free
  5902  001658  A0D8               	btfss	status,0,c
  5903  00165A  EF31  F00B         	goto	u6281
  5904  00165E  EF33  F00B         	goto	u6280
  5905  001662                     u6281:
  5906  001662  EF5C  F00B         	goto	l5235
  5907  001666                     u6280:
  5908  001666                     
  5909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5910  001666  0100               	movlb	0	; () banked
  5911  001668  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5912  00166A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5913  00166C                     
  5914                           ; BSR set to: 0
  5915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5916  00166C  C074  F001         	movff	efgtoa@ou,___flmul@b
  5917  001670  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5918  001674  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5919  001678  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5920  00167C  0E00               	movlw	0
  5921  00167E  6E05               	movwf	___flmul@a^0,c
  5922  001680  0E00               	movlw	0
  5923  001682  6E06               	movwf	(___flmul@a+1)^0,c
  5924  001684  0E20               	movlw	32
  5925  001686  6E07               	movwf	(___flmul@a+2)^0,c
  5926  001688  0E41               	movlw	65
  5927  00168A  6E08               	movwf	(___flmul@a+3)^0,c
  5928  00168C  EC59  F01C         	call	___flmul	;wreg free
  5929  001690  C001  F074         	movff	?___flmul,efgtoa@ou
  5930  001694  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  5931  001698  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  5932  00169C  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  5933  0016A0                     
  5934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5935  0016A0  0E66               	movlw	102
  5936  0016A2  0100               	movlb	0	; () banked
  5937  0016A4  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5938  0016A6  A4D8               	btfss	status,2,c
  5939  0016A8  EF58  F00B         	goto	u6291
  5940  0016AC  EF5A  F00B         	goto	u6290
  5941  0016B0                     u6291:
  5942  0016B0  EF5C  F00B         	goto	l5235
  5943  0016B4                     u6290:
  5944  0016B4                     
  5945                           ; BSR set to: 0
  5946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5947  0016B4  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5948  0016B6  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5949  0016B8                     l5235:
  5950                           
  5951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5952  0016B8  C074  F094         	movff	efgtoa@ou,efgtoa@u
  5953  0016BC  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5954  0016C0  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5955  0016C4  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5956  0016C8                     
  5957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5958  0016C8  0E65               	movlw	101
  5959  0016CA  0100               	movlb	0	; () banked
  5960  0016CC  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5961  0016CE  B4D8               	btfsc	status,2,c
  5962  0016D0  EF6C  F00B         	goto	u6301
  5963  0016D4  EF6E  F00B         	goto	u6300
  5964  0016D8                     u6301:
  5965  0016D8  EF74  F00B         	goto	l5241
  5966  0016DC                     u6300:
  5967  0016DC                     
  5968                           ; BSR set to: 0
  5969  0016DC  C090  F070         	movff	efgtoa@e,efgtoa@ne
  5970  0016E0  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  5971  0016E4  EF78  F00B         	goto	l1529
  5972  0016E8                     l5241:
  5973                           
  5974                           ; BSR set to: 0
  5975  0016E8  0E00               	movlw	0
  5976  0016EA  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  5977  0016EC  0E00               	movlw	0
  5978  0016EE  6F70               	movwf	efgtoa@ne& (0+255),b
  5979  0016F0                     l1529:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5983  0016F0  0E00               	movlw	0
  5984  0016F2  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5985  0016F4  0E00               	movlw	0
  5986  0016F6  6F6E               	movwf	efgtoa@pp& (0+255),b
  5987                           
  5988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5989  0016F8  0E00               	movlw	0
  5990  0016FA  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5991  0016FC  0E00               	movlw	0
  5992  0016FE  6F6C               	movwf	efgtoa@t& (0+255),b
  5993                           
  5994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5995  001700  0E00               	movlw	0
  5996  001702  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5997  001704  0E00               	movlw	0
  5998  001706  6F8A               	movwf	efgtoa@i& (0+255),b
  5999                           
  6000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6001  001708  EF75  F00C         	goto	l5291
  6002  00170C                     l5243:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  6006  00170C  C082  F00F         	movff	efgtoa@h,___fldiv@b
  6007  001710  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  6008  001714  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  6009  001718  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  6010  00171C  C094  F013         	movff	efgtoa@u,___fldiv@a
  6011  001720  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  6012  001724  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  6013  001728  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  6014  00172C  EC6E  F01E         	call	___fldiv	;wreg free
  6015  001730  C00F  F028         	movff	?___fldiv,floorf@x
  6016  001734  C010  F029         	movff	?___fldiv+1,floorf@x+1
  6017  001738  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  6018  00173C  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  6019  001740  ECAC  F021         	call	_floorf	;wreg free
  6020  001744  C028  F086         	movff	?_floorf,efgtoa@l
  6021  001748  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  6022  00174C  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  6023  001750  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  6024                           
  6025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  6026  001754  C086  F001         	movff	efgtoa@l,___fltol@f1
  6027  001758  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6028  00175C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6029  001760  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6030  001764  ECC2  F028         	call	___fltol	;wreg free
  6031  001768  C001  F078         	movff	?___fltol,efgtoa@d
  6032  00176C  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  6033  001770                     
  6034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6035  001770  0101               	movlb	1	; () banked
  6036  001772  B922               	btfsc	_flags& (0+255),4,b
  6037  001774  EFBE  F00B         	goto	u6311
  6038  001778  EFC0  F00B         	goto	u6310
  6039  00177C                     u6311:
  6040  00177C  EFDE  F00B         	goto	l5255
  6041  001780                     u6310:
  6042  001780                     
  6043                           ; BSR set to: 1
  6044  001780  0100               	movlb	0	; () banked
  6045  001782  5178               	movf	efgtoa@d& (0+255),w,b
  6046  001784  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6047  001786  A4D8               	btfss	status,2,c
  6048  001788  EFC8  F00B         	goto	u6321
  6049  00178C  EFCA  F00B         	goto	u6320
  6050  001790                     u6321:
  6051  001790  EFDE  F00B         	goto	l5255
  6052  001794                     u6320:
  6053  001794                     
  6054                           ; BSR set to: 0
  6055  001794  0E67               	movlw	103
  6056  001796  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6057  001798  A4D8               	btfss	status,2,c
  6058  00179A  EFD1  F00B         	goto	u6331
  6059  00179E  EFD3  F00B         	goto	u6330
  6060  0017A2                     u6331:
  6061  0017A2  EFDE  F00B         	goto	l5255
  6062  0017A6                     u6330:
  6063  0017A6                     
  6064                           ; BSR set to: 0
  6065  0017A6  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6066  0017A8  EFDA  F00B         	goto	u6340
  6067  0017AC  EFD8  F00B         	goto	u6341
  6068  0017B0                     u6341:
  6069  0017B0  EFDE  F00B         	goto	l5255
  6070  0017B4                     u6340:
  6071  0017B4                     
  6072                           ; BSR set to: 0
  6073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  6074  0017B4  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  6075  0017B6  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  6076                           
  6077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  6078  0017B8  EF29  F00C         	goto	l5283
  6079  0017BC                     l5255:
  6080                           
  6081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  6082  0017BC  0100               	movlb	0	; () banked
  6083  0017BE  516E               	movf	efgtoa@pp& (0+255),w,b
  6084  0017C0  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6085  0017C2  A4D8               	btfss	status,2,c
  6086  0017C4  EFE6  F00B         	goto	u6351
  6087  0017C8  EFE8  F00B         	goto	u6350
  6088  0017CC                     u6351:
  6089  0017CC  EF12  F00C         	goto	l5275
  6090  0017D0                     u6350:
  6091  0017D0                     
  6092                           ; BSR set to: 0
  6093  0017D0  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6094  0017D2  EFEF  F00B         	goto	u6360
  6095  0017D6  EFED  F00B         	goto	u6361
  6096  0017DA                     u6361:
  6097  0017DA  EF12  F00C         	goto	l5275
  6098  0017DE                     u6360:
  6099  0017DE                     
  6100                           ; BSR set to: 0
  6101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  6102  0017DE  0E31               	movlw	low _dbuf
  6103  0017E0  2592               	addwf	efgtoa@n& (0+255),w,b
  6104  0017E2  6ED9               	movwf	fsr2l,c
  6105  0017E4  0E01               	movlw	high _dbuf
  6106  0017E6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6107  0017E8  6EDA               	movwf	fsr2h,c
  6108  0017EA  0E2E               	movlw	46
  6109  0017EC  6EDF               	movwf	indf2,c
  6110  0017EE                     
  6111                           ; BSR set to: 0
  6112  0017EE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6113  0017F0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6114  0017F2                     
  6115                           ; BSR set to: 0
  6116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  6117  0017F2  077E               	decf	efgtoa@w& (0+255),f,b
  6118  0017F4  A0D8               	btfss	status,0,c
  6119  0017F6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6120  0017F8                     
  6121                           ; BSR set to: 0
  6122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  6123  0017F8  0E00               	movlw	0
  6124  0017FA  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  6125  0017FC  0E01               	movlw	1
  6126  0017FE  6F6E               	movwf	efgtoa@pp& (0+255),b
  6127  001800  EF12  F00C         	goto	l5275
  6128  001804                     l5267:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  6132  001804  0E31               	movlw	low _dbuf
  6133  001806  2592               	addwf	efgtoa@n& (0+255),w,b
  6134  001808  6ED9               	movwf	fsr2l,c
  6135  00180A  0E01               	movlw	high _dbuf
  6136  00180C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6137  00180E  6EDA               	movwf	fsr2h,c
  6138  001810  0E30               	movlw	48
  6139  001812  6EDF               	movwf	indf2,c
  6140  001814                     
  6141                           ; BSR set to: 0
  6142  001814  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6143  001816  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6144  001818                     
  6145                           ; BSR set to: 0
  6146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  6147  001818  077E               	decf	efgtoa@w& (0+255),f,b
  6148  00181A  A0D8               	btfss	status,0,c
  6149  00181C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6150  00181E                     
  6151                           ; BSR set to: 0
  6152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  6153  00181E  076C               	decf	efgtoa@t& (0+255),f,b
  6154  001820  A0D8               	btfss	status,0,c
  6155  001822  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  6156  001824                     l5275:
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  6160  001824  516C               	movf	efgtoa@t& (0+255),w,b
  6161  001826  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6162  001828  A4D8               	btfss	status,2,c
  6163  00182A  EF19  F00C         	goto	u6371
  6164  00182E  EF1B  F00C         	goto	u6370
  6165  001832                     u6371:
  6166  001832  EF02  F00C         	goto	l5267
  6167  001836                     u6370:
  6168  001836                     
  6169                           ; BSR set to: 0
  6170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6171  001836  0E31               	movlw	low _dbuf
  6172  001838  2592               	addwf	efgtoa@n& (0+255),w,b
  6173  00183A  6ED9               	movwf	fsr2l,c
  6174  00183C  0E01               	movlw	high _dbuf
  6175  00183E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6176  001840  6EDA               	movwf	fsr2h,c
  6177  001842  5178               	movf	efgtoa@d& (0+255),w,b
  6178  001844  0F30               	addlw	48
  6179  001846  6EDF               	movwf	indf2,c
  6180  001848                     
  6181                           ; BSR set to: 0
  6182  001848  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6183  00184A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6184  00184C                     
  6185                           ; BSR set to: 0
  6186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  6187  00184C  077E               	decf	efgtoa@w& (0+255),f,b
  6188  00184E  A0D8               	btfss	status,0,c
  6189  001850  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6190  001852                     l5283:
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6194  001852  C082  F01A         	movff	efgtoa@h,___flsub@b
  6195  001856  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  6196  00185A  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  6197  00185E  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  6198  001862  C094  F005         	movff	efgtoa@u,___flmul@a
  6199  001866  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  6200  00186A  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  6201  00186E  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  6202  001872  C086  F001         	movff	efgtoa@l,___flmul@b
  6203  001876  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  6204  00187A  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  6205  00187E  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  6206  001882  EC59  F01C         	call	___flmul	;wreg free
  6207  001886  C001  F01E         	movff	?___flmul,___flsub@a
  6208  00188A  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  6209  00188E  C003  F020         	movff	?___flmul+2,___flsub@a+2
  6210  001892  C004  F021         	movff	?___flmul+3,___flsub@a+3
  6211  001896  EC0E  F031         	call	___flsub	;wreg free
  6212  00189A  C01A  F082         	movff	?___flsub,efgtoa@h
  6213  00189E  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  6214  0018A2  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  6215  0018A6  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  6216  0018AA                     
  6217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6218  0018AA  C094  F00F         	movff	efgtoa@u,___fldiv@b
  6219  0018AE  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  6220  0018B2  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  6221  0018B6  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  6222  0018BA  0E00               	movlw	0
  6223  0018BC  6E13               	movwf	___fldiv@a^0,c
  6224  0018BE  0E00               	movlw	0
  6225  0018C0  6E14               	movwf	(___fldiv@a+1)^0,c
  6226  0018C2  0E20               	movlw	32
  6227  0018C4  6E15               	movwf	(___fldiv@a+2)^0,c
  6228  0018C6  0E41               	movlw	65
  6229  0018C8  6E16               	movwf	(___fldiv@a+3)^0,c
  6230  0018CA  EC6E  F01E         	call	___fldiv	;wreg free
  6231  0018CE  C00F  F094         	movff	?___fldiv,efgtoa@u
  6232  0018D2  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  6233  0018D6  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  6234  0018DA  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  6235  0018DE                     
  6236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6237  0018DE  0100               	movlb	0	; () banked
  6238  0018E0  0770               	decf	efgtoa@ne& (0+255),f,b
  6239  0018E2  A0D8               	btfss	status,0,c
  6240  0018E4  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  6241  0018E6                     
  6242                           ; BSR set to: 0
  6243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6244  0018E6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6245  0018E8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6246  0018EA                     l5291:
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6250  0018EA  5172               	movf	efgtoa@m& (0+255),w,b
  6251  0018EC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6252  0018EE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6253  0018F0  0A80               	xorlw	128
  6254  0018F2  6E43               	movwf	??_efgtoa^0,c
  6255  0018F4  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  6256  0018F6  0A80               	xorlw	128
  6257  0018F8  5843               	subwfb	??_efgtoa^0,w,c
  6258  0018FA  B0D8               	btfsc	status,0,c
  6259  0018FC  EF82  F00C         	goto	u6381
  6260  001900  EF84  F00C         	goto	u6380
  6261  001904                     u6381:
  6262  001904  EF92  F00C         	goto	l5295
  6263  001908                     u6380:
  6264  001908                     
  6265                           ; BSR set to: 0
  6266  001908  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6267  00190A  EF90  F00C         	goto	u6391
  6268  00190E  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  6269  001910  E109               	bnz	u6390
  6270  001912  0E4B               	movlw	75
  6271  001914  5D92               	subwf	efgtoa@n& (0+255),w,b
  6272  001916  A0D8               	btfss	status,0,c
  6273  001918  EF90  F00C         	goto	u6391
  6274  00191C  EF92  F00C         	goto	u6390
  6275  001920                     u6391:
  6276  001920  EF86  F00B         	goto	l5243
  6277  001924                     u6390:
  6278  001924                     l5295:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6282  001924  516E               	movf	efgtoa@pp& (0+255),w,b
  6283  001926  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6284  001928  A4D8               	btfss	status,2,c
  6285  00192A  EF99  F00C         	goto	u6401
  6286  00192E  EF9B  F00C         	goto	u6400
  6287  001932                     u6401:
  6288  001932  EFAE  F00C         	goto	l5303
  6289  001936                     u6400:
  6290  001936                     
  6291                           ; BSR set to: 0
  6292  001936  0101               	movlb	1	; () banked
  6293  001938  A922               	btfss	_flags& (0+255),4,b
  6294  00193A  EFA1  F00C         	goto	u6411
  6295  00193E  EFA3  F00C         	goto	u6410
  6296  001942                     u6411:
  6297  001942  EFAE  F00C         	goto	l5303
  6298  001946                     u6410:
  6299  001946                     
  6300                           ; BSR set to: 1
  6301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6302  001946  0E31               	movlw	low _dbuf
  6303  001948  0100               	movlb	0	; () banked
  6304  00194A  2592               	addwf	efgtoa@n& (0+255),w,b
  6305  00194C  6ED9               	movwf	fsr2l,c
  6306  00194E  0E01               	movlw	high _dbuf
  6307  001950  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6308  001952  6EDA               	movwf	fsr2h,c
  6309  001954  0E2E               	movlw	46
  6310  001956  6EDF               	movwf	indf2,c
  6311  001958                     
  6312                           ; BSR set to: 0
  6313  001958  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6314  00195A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6315  00195C                     l5303:
  6316                           
  6317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6318  00195C  0E31               	movlw	low _dbuf
  6319  00195E  0100               	movlb	0	; () banked
  6320  001960  2592               	addwf	efgtoa@n& (0+255),w,b
  6321  001962  6ED9               	movwf	fsr2l,c
  6322  001964  0E01               	movlw	high _dbuf
  6323  001966  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6324  001968  6EDA               	movwf	fsr2h,c
  6325  00196A  0E00               	movlw	0
  6326  00196C  6EDF               	movwf	indf2,c
  6327  00196E                     
  6328                           ; BSR set to: 0
  6329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6330  00196E  0E65               	movlw	101
  6331  001970  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6332  001972  A4D8               	btfss	status,2,c
  6333  001974  EFBE  F00C         	goto	u6421
  6334  001978  EFC0  F00C         	goto	u6420
  6335  00197C                     u6421:
  6336  00197C  EF11  F008         	goto	l5105
  6337  001980                     u6420:
  6338  001980                     
  6339                           ; BSR set to: 0
  6340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6341  001980  0E00               	movlw	0
  6342  001982  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6343  001984  0E4F               	movlw	79
  6344  001986  6F8A               	movwf	efgtoa@i& (0+255),b
  6345  001988                     
  6346                           ; BSR set to: 0
  6347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6348  001988  0E31               	movlw	low _dbuf
  6349  00198A  258A               	addwf	efgtoa@i& (0+255),w,b
  6350  00198C  6ED9               	movwf	fsr2l,c
  6351  00198E  0E01               	movlw	high _dbuf
  6352  001990  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6353  001992  6EDA               	movwf	fsr2h,c
  6354  001994  0E00               	movlw	0
  6355  001996  6EDF               	movwf	indf2,c
  6356  001998                     
  6357                           ; BSR set to: 0
  6358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6359  001998  0E00               	movlw	0
  6360  00199A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6361  00199C  0E00               	movlw	0
  6362  00199E  6F7A               	movwf	efgtoa@sign& (0+255),b
  6363  0019A0                     
  6364                           ; BSR set to: 0
  6365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6366  0019A0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6367  0019A2  EFD7  F00C         	goto	u6430
  6368  0019A6  EFD5  F00C         	goto	u6431
  6369  0019AA                     u6431:
  6370  0019AA  EFDF  F00C         	goto	l5319
  6371  0019AE                     u6430:
  6372  0019AE                     
  6373                           ; BSR set to: 0
  6374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6375  0019AE  0E00               	movlw	0
  6376  0019B0  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6377  0019B2  0E01               	movlw	1
  6378  0019B4  6F7A               	movwf	efgtoa@sign& (0+255),b
  6379  0019B6                     
  6380                           ; BSR set to: 0
  6381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6382  0019B6  6D90               	negf	efgtoa@e& (0+255),b
  6383  0019B8  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  6384  0019BA  B0D8               	btfsc	status,0,c
  6385  0019BC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6386  0019BE                     l5319:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6390  0019BE  0E00               	movlw	0
  6391  0019C0  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6392  0019C2  0E02               	movlw	2
  6393  0019C4  6F7C               	movwf	efgtoa@p& (0+255),b
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6396  0019C6  EF10  F00D         	goto	l5331
  6397  0019CA                     l5321:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6401  0019CA  078A               	decf	efgtoa@i& (0+255),f,b
  6402  0019CC  A0D8               	btfss	status,0,c
  6403  0019CE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6404  0019D0                     
  6405                           ; BSR set to: 0
  6406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6407  0019D0  0E31               	movlw	low _dbuf
  6408  0019D2  258A               	addwf	efgtoa@i& (0+255),w,b
  6409  0019D4  6ED9               	movwf	fsr2l,c
  6410  0019D6  0E01               	movlw	high _dbuf
  6411  0019D8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6412  0019DA  6EDA               	movwf	fsr2h,c
  6413  0019DC  C090  F001         	movff	efgtoa@e,___awmod@dividend
  6414  0019E0  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6415  0019E4  0E00               	movlw	0
  6416  0019E6  6E04               	movwf	(___awmod@divisor+1)^0,c
  6417  0019E8  0E0A               	movlw	10
  6418  0019EA  6E03               	movwf	___awmod@divisor^0,c
  6419  0019EC  EC35  F02D         	call	___awmod	;wreg free
  6420  0019F0  5001               	movf	?___awmod^0,w,c
  6421  0019F2  0F30               	addlw	48
  6422  0019F4  6EDF               	movwf	indf2,c
  6423  0019F6                     
  6424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6425  0019F6  C090  F007         	movff	efgtoa@e,___awdiv@dividend
  6426  0019FA  C091  F008         	movff	efgtoa@e+1,___awdiv@dividend+1
  6427  0019FE  0E00               	movlw	0
  6428  001A00  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6429  001A02  0E0A               	movlw	10
  6430  001A04  6E09               	movwf	___awdiv@divisor^0,c
  6431  001A06  ECD3  F02C         	call	___awdiv	;wreg free
  6432  001A0A  C007  F090         	movff	?___awdiv,efgtoa@e
  6433  001A0E  C008  F091         	movff	?___awdiv+1,efgtoa@e+1
  6434  001A12                     
  6435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6436  001A12  0100               	movlb	0	; () banked
  6437  001A14  077C               	decf	efgtoa@p& (0+255),f,b
  6438  001A16  A0D8               	btfss	status,0,c
  6439  001A18  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  6440  001A1A                     
  6441                           ; BSR set to: 0
  6442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6443  001A1A  077E               	decf	efgtoa@w& (0+255),f,b
  6444  001A1C  A0D8               	btfss	status,0,c
  6445  001A1E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6446  001A20                     l5331:
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6450  001A20  5190               	movf	efgtoa@e& (0+255),w,b
  6451  001A22  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6452  001A24  A4D8               	btfss	status,2,c
  6453  001A26  EF17  F00D         	goto	u6441
  6454  001A2A  EF19  F00D         	goto	u6440
  6455  001A2E                     u6441:
  6456  001A2E  EFE5  F00C         	goto	l5321
  6457  001A32                     u6440:
  6458  001A32                     
  6459                           ; BSR set to: 0
  6460  001A32  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6461  001A34  EF26  F00D         	goto	u6450
  6462  001A38  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  6463  001A3A  E106               	bnz	u6451
  6464  001A3C  057C               	decf	efgtoa@p& (0+255),w,b
  6465  001A3E  B0D8               	btfsc	status,0,c
  6466  001A40  EF24  F00D         	goto	u6451
  6467  001A44  EF26  F00D         	goto	u6450
  6468  001A48                     u6451:
  6469  001A48  EFE5  F00C         	goto	l5321
  6470  001A4C                     u6450:
  6471  001A4C                     
  6472                           ; BSR set to: 0
  6473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6474  001A4C  078A               	decf	efgtoa@i& (0+255),f,b
  6475  001A4E  A0D8               	btfss	status,0,c
  6476  001A50  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6477  001A52                     
  6478                           ; BSR set to: 0
  6479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6480  001A52  517A               	movf	efgtoa@sign& (0+255),w,b
  6481  001A54  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6482  001A56  A4D8               	btfss	status,2,c
  6483  001A58  EF30  F00D         	goto	u6461
  6484  001A5C  EF32  F00D         	goto	u6460
  6485  001A60                     u6461:
  6486  001A60  EF38  F00D         	goto	l5341
  6487  001A64                     u6460:
  6488  001A64                     
  6489                           ; BSR set to: 0
  6490  001A64  0E00               	movlw	0
  6491  001A66  6F67               	movwf	(_efgtoa$3035+1)& (0+255),b
  6492  001A68  0E2B               	movlw	43
  6493  001A6A  6F66               	movwf	_efgtoa$3035& (0+255),b
  6494  001A6C  EF3C  F00D         	goto	l5343
  6495  001A70                     l5341:
  6496                           
  6497                           ; BSR set to: 0
  6498  001A70  0E00               	movlw	0
  6499  001A72  6F67               	movwf	(_efgtoa$3035+1)& (0+255),b
  6500  001A74  0E2D               	movlw	45
  6501  001A76  6F66               	movwf	_efgtoa$3035& (0+255),b
  6502  001A78                     l5343:
  6503                           
  6504                           ; BSR set to: 0
  6505  001A78  0E31               	movlw	low _dbuf
  6506  001A7A  258A               	addwf	efgtoa@i& (0+255),w,b
  6507  001A7C  6ED9               	movwf	fsr2l,c
  6508  001A7E  0E01               	movlw	high _dbuf
  6509  001A80  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6510  001A82  6EDA               	movwf	fsr2h,c
  6511  001A84  C066  FFDF         	movff	_efgtoa$3035,indf2
  6512  001A88                     
  6513                           ; BSR set to: 0
  6514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6515  001A88  077E               	decf	efgtoa@w& (0+255),f,b
  6516  001A8A  A0D8               	btfss	status,0,c
  6517  001A8C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6518  001A8E                     
  6519                           ; BSR set to: 0
  6520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6521  001A8E  078A               	decf	efgtoa@i& (0+255),f,b
  6522  001A90  A0D8               	btfss	status,0,c
  6523  001A92  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6524  001A94                     
  6525                           ; BSR set to: 0
  6526  001A94  0EBF               	movlw	191
  6527  001A96  6E43               	movwf	??_efgtoa^0,c
  6528  001A98  0EFF               	movlw	255
  6529  001A9A  6E44               	movwf	(??_efgtoa+1)^0,c
  6530  001A9C  5042               	movf	efgtoa@c^0,w,c
  6531  001A9E  6E45               	movwf	(??_efgtoa+2)^0,c
  6532  001AA0  6A46               	clrf	(??_efgtoa+3)^0,c
  6533  001AA2  5043               	movf	??_efgtoa^0,w,c
  6534  001AA4  2645               	addwf	(??_efgtoa+2)^0,f,c
  6535  001AA6  5044               	movf	(??_efgtoa+1)^0,w,c
  6536  001AA8  2246               	addwfc	(??_efgtoa+3)^0,f,c
  6537  001AAA  5046               	movf	(??_efgtoa+3)^0,w,c
  6538  001AAC  E10A               	bnz	u6470
  6539  001AAE  0E1A               	movlw	26
  6540  001AB0  5C45               	subwf	(??_efgtoa+2)^0,w,c
  6541  001AB2  A0D8               	btfss	status,0,c
  6542  001AB4  EF5E  F00D         	goto	u6471
  6543  001AB8  EF61  F00D         	goto	u6470
  6544  001ABC                     u6471:
  6545  001ABC  0E01               	movlw	1
  6546  001ABE  EF62  F00D         	goto	u6480
  6547  001AC2                     u6470:
  6548  001AC2  0E00               	movlw	0
  6549  001AC4                     u6480:
  6550  001AC4  6F6A               	movwf	_efgtoa$3037& (0+255),b
  6551  001AC6  6B6B               	clrf	(_efgtoa$3037+1)& (0+255),b
  6552  001AC8                     
  6553                           ; BSR set to: 0
  6554  001AC8  516A               	movf	_efgtoa$3037& (0+255),w,b
  6555  001ACA  116B               	iorwf	(_efgtoa$3037+1)& (0+255),w,b
  6556  001ACC  A4D8               	btfss	status,2,c
  6557  001ACE  EF6B  F00D         	goto	u6491
  6558  001AD2  EF6D  F00D         	goto	u6490
  6559  001AD6                     u6491:
  6560  001AD6  EF73  F00D         	goto	l5357
  6561  001ADA                     u6490:
  6562  001ADA                     
  6563                           ; BSR set to: 0
  6564  001ADA  0E00               	movlw	0
  6565  001ADC  6F69               	movwf	(_efgtoa$3036+1)& (0+255),b
  6566  001ADE  0E65               	movlw	101
  6567  001AE0  6F68               	movwf	_efgtoa$3036& (0+255),b
  6568  001AE2  EF77  F00D         	goto	l5359
  6569  001AE6                     l5357:
  6570                           
  6571                           ; BSR set to: 0
  6572  001AE6  0E00               	movlw	0
  6573  001AE8  6F69               	movwf	(_efgtoa$3036+1)& (0+255),b
  6574  001AEA  0E45               	movlw	69
  6575  001AEC  6F68               	movwf	_efgtoa$3036& (0+255),b
  6576  001AEE                     l5359:
  6577                           
  6578                           ; BSR set to: 0
  6579  001AEE  0E31               	movlw	low _dbuf
  6580  001AF0  258A               	addwf	efgtoa@i& (0+255),w,b
  6581  001AF2  6ED9               	movwf	fsr2l,c
  6582  001AF4  0E01               	movlw	high _dbuf
  6583  001AF6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6584  001AF8  6EDA               	movwf	fsr2h,c
  6585  001AFA  C068  FFDF         	movff	_efgtoa$3036,indf2
  6586  001AFE                     
  6587                           ; BSR set to: 0
  6588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6589  001AFE  077E               	decf	efgtoa@w& (0+255),f,b
  6590  001B00  A0D8               	btfss	status,0,c
  6591  001B02  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6592  001B04                     
  6593                           ; BSR set to: 0
  6594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6595  001B04  0E31               	movlw	low _dbuf
  6596  001B06  2592               	addwf	efgtoa@n& (0+255),w,b
  6597  001B08  6E01               	movwf	strcpy@dest^0,c
  6598  001B0A  0E01               	movlw	high _dbuf
  6599  001B0C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6600  001B0E  6E02               	movwf	(strcpy@dest+1)^0,c
  6601  001B10  0E31               	movlw	low _dbuf
  6602  001B12  258A               	addwf	efgtoa@i& (0+255),w,b
  6603  001B14  6E03               	movwf	strcpy@src^0,c
  6604  001B16  0E01               	movlw	high _dbuf
  6605  001B18  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6606  001B1A  6E04               	movwf	(strcpy@src+1)^0,c
  6607  001B1C  EC1E  F02F         	call	_strcpy	;wreg free
  6608  001B20  EF11  F008         	goto	l5105
  6609  001B24                     l1483:
  6610  001B24  0012               	return		;funcret
  6611  001B26                     __end_of_efgtoa:
  6612                           	callstack 0
  6613                           
  6614 ;; *************** function _tolower *****************
  6615 ;; Defined at:
  6616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  c               2    6[COMRAM] int 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;		None
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  2    6[COMRAM] int 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6632 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6633 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;Total ram usage:        8 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; Hardware stack levels required when called: 1
  6637 ;; This function calls:
  6638 ;;		_isupper
  6639 ;; This function is called by:
  6640 ;;		_efgtoa
  6641 ;;		_vfpfcnvrt
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text14
  6646  005DDC                     __ptext14:
  6647                           	callstack 0
  6648  005DDC                     _tolower:
  6649                           	callstack 24
  6650  005DDC  0EBF               	movlw	191
  6651  005DDE  6E09               	movwf	??_tolower^0,c
  6652  005DE0  0EFF               	movlw	255
  6653  005DE2  6E0A               	movwf	(??_tolower+1)^0,c
  6654  005DE4  C007  F00B         	movff	tolower@c,??_tolower+2
  6655  005DE8  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6656  005DEC  5009               	movf	??_tolower^0,w,c
  6657  005DEE  260B               	addwf	(??_tolower+2)^0,f,c
  6658  005DF0  500A               	movf	(??_tolower+1)^0,w,c
  6659  005DF2  220C               	addwfc	(??_tolower+3)^0,f,c
  6660  005DF4  500C               	movf	(??_tolower+3)^0,w,c
  6661  005DF6  E10A               	bnz	u5640
  6662  005DF8  0E1A               	movlw	26
  6663  005DFA  5C0B               	subwf	(??_tolower+2)^0,w,c
  6664  005DFC  A0D8               	btfss	status,0,c
  6665  005DFE  EF03  F02F         	goto	u5641
  6666  005E02  EF06  F02F         	goto	u5640
  6667  005E06                     u5641:
  6668  005E06  0E01               	movlw	1
  6669  005E08  EF07  F02F         	goto	u5650
  6670  005E0C                     u5640:
  6671  005E0C  0E00               	movlw	0
  6672  005E0E                     u5650:
  6673  005E0E  6E0D               	movwf	_tolower$3198^0,c
  6674  005E10  6A0E               	clrf	(_tolower$3198+1)^0,c
  6675  005E12  500D               	movf	_tolower$3198^0,w,c
  6676  005E14  100E               	iorwf	(_tolower$3198+1)^0,w,c
  6677  005E16  B4D8               	btfsc	status,2,c
  6678  005E18  EF10  F02F         	goto	u5661
  6679  005E1C  EF12  F02F         	goto	u5660
  6680  005E20                     u5661:
  6681  005E20  EF19  F02F         	goto	l1747
  6682  005E24                     u5660:
  6683  005E24  0E20               	movlw	32
  6684  005E26  1007               	iorwf	tolower@c^0,w,c
  6685  005E28  6E07               	movwf	?_tolower^0,c
  6686  005E2A  5008               	movf	(tolower@c+1)^0,w,c
  6687  005E2C  6E08               	movwf	(?_tolower+1)^0,c
  6688  005E2E  EF1D  F02F         	goto	l1752
  6689  005E32                     l1747:
  6690  005E32  C007  F007         	movff	tolower@c,?_tolower
  6691  005E36  C008  F008         	movff	tolower@c+1,?_tolower+1
  6692  005E3A                     l1752:
  6693  005E3A  0012               	return		;funcret
  6694  005E3C                     __end_of_tolower:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function _isupper *****************
  6698 ;; Defined at:
  6699 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  c               2    0[COMRAM] int 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  2    0[COMRAM] int 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;Total ram usage:        6 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_efgtoa
  6723 ;;		_vfpfcnvrt
  6724 ;;		_tolower
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text15
  6729  00639E                     __ptext15:
  6730                           	callstack 0
  6731  00639E                     _isupper:
  6732                           	callstack 24
  6733  00639E  0EBF               	movlw	191
  6734  0063A0  6E03               	movwf	??_isupper^0,c
  6735  0063A2  0EFF               	movlw	255
  6736  0063A4  6E04               	movwf	(??_isupper+1)^0,c
  6737  0063A6  C001  F005         	movff	isupper@c,??_isupper+2
  6738  0063AA  C002  F006         	movff	isupper@c+1,??_isupper+3
  6739  0063AE  5003               	movf	??_isupper^0,w,c
  6740  0063B0  2605               	addwf	(??_isupper+2)^0,f,c
  6741  0063B2  5004               	movf	(??_isupper+1)^0,w,c
  6742  0063B4  2206               	addwfc	(??_isupper+3)^0,f,c
  6743  0063B6  5006               	movf	(??_isupper+3)^0,w,c
  6744  0063B8  E10A               	bnz	u4650
  6745  0063BA  0E1A               	movlw	26
  6746  0063BC  5C05               	subwf	(??_isupper+2)^0,w,c
  6747  0063BE  A0D8               	btfss	status,0,c
  6748  0063C0  EFE4  F031         	goto	u4651
  6749  0063C4  EFE7  F031         	goto	u4650
  6750  0063C8                     u4651:
  6751  0063C8  0E01               	movlw	1
  6752  0063CA  EFE8  F031         	goto	u4660
  6753  0063CE                     u4650:
  6754  0063CE  0E00               	movlw	0
  6755  0063D0                     u4660:
  6756  0063D0  6E01               	movwf	?_isupper^0,c
  6757  0063D2  6A02               	clrf	(?_isupper+1)^0,c
  6758  0063D4  0012               	return		;funcret
  6759  0063D6                     __end_of_isupper:
  6760                           	callstack 0
  6761                           
  6762 ;; *************** function _strcpy *****************
  6763 ;; Defined at:
  6764 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6767 ;;		 -> dbuf(80), 
  6768 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6769 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6770 ;;		 -> dbuf(80), 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  d               2    8[COMRAM] PTR unsigned char 
  6773 ;;		 -> dbuf(80), 
  6774 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6775 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6776 ;;		 -> dbuf(80), 
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  2    0[COMRAM] PTR unsigned char 
  6779 ;; Registers used:
  6780 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;Total ram usage:       10 bytes
  6791 ;; Hardware stack levels used: 1
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		_efgtoa
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text16
  6800  005E3C                     __ptext16:
  6801                           	callstack 0
  6802  005E3C                     _strcpy:
  6803                           	callstack 24
  6804  005E3C  C003  F007         	movff	strcpy@src,strcpy@s
  6805  005E40  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6806  005E44  C001  F009         	movff	strcpy@dest,strcpy@d
  6807  005E48  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6808  005E4C                     l4943:
  6809  005E4C  5007               	movf	strcpy@s^0,w,c
  6810  005E4E  6E05               	movwf	??_strcpy^0,c
  6811  005E50  5008               	movf	(strcpy@s+1)^0,w,c
  6812  005E52  6E06               	movwf	(??_strcpy+1)^0,c
  6813  005E54  4A07               	infsnz	strcpy@s^0,f,c
  6814  005E56  2A08               	incf	(strcpy@s+1)^0,f,c
  6815  005E58  C005  FFF6         	movff	??_strcpy,tblptrl
  6816  005E5C  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6817  005E60  0E00               	movlw	low (__smallconst shr (0+16))
  6818  005E62  6EF8               	movwf	tblptru,c
  6819  005E64  C009  FFD9         	movff	strcpy@d,fsr2l
  6820  005E68  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6821  005E6C  4A09               	infsnz	strcpy@d^0,f,c
  6822  005E6E  2A0A               	incf	(strcpy@d+1)^0,f,c
  6823  005E70  0E0D               	movlw	(high __ramtop+-1)
  6824  005E72  64F7               	cpfsgt	tblptrh,c
  6825  005E74  D003               	bra	u5627
  6826  005E76  0008               	tblrd		*
  6827  005E78  50F5               	movf	tablat,w,c
  6828  005E7A  D005               	bra	u5620
  6829  005E7C                     u5627:
  6830  005E7C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6831  005E80  CFF7 FFEA          	movff	tblptrh,fsr0h
  6832  005E84  50EF               	movf	indf0,w,c
  6833  005E86                     u5620:
  6834  005E86  6EDF               	movwf	indf2,c
  6835  005E88  50DF               	movf	indf2,w,c
  6836  005E8A  A4D8               	btfss	status,2,c
  6837  005E8C  EF4A  F02F         	goto	u5631
  6838  005E90  EF4C  F02F         	goto	u5630
  6839  005E94                     u5631:
  6840  005E94  EF26  F02F         	goto	l4943
  6841  005E98                     u5630:
  6842  005E98  0012               	return		;funcret
  6843  005E9A                     __end_of_strcpy:
  6844                           	callstack 0
  6845                           
  6846 ;; *************** function _floorf *****************
  6847 ;; Defined at:
  6848 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  x               4   39[COMRAM] float 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  u               4   55[COMRAM] struct .
  6853 ;;  m               4   49[COMRAM] unsigned long 
  6854 ;;  e               2   53[COMRAM] int 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  4   39[COMRAM] float 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;Total ram usage:       20 bytes
  6869 ;; Hardware stack levels used: 1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_efgtoa
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text17
  6878  004358                     __ptext17:
  6879                           	callstack 0
  6880  004358                     _floorf:
  6881                           	callstack 24
  6882  004358  C114  F038         	movff	floorf@F527,floorf@u
  6883  00435C  C115  F039         	movff	floorf@F527+1,floorf@u+1
  6884  004360  C116  F03A         	movff	floorf@F527+2,floorf@u+2
  6885  004364  C117  F03B         	movff	floorf@F527+3,floorf@u+3
  6886  004368  C028  F038         	movff	floorf@x,floorf@u
  6887  00436C  C029  F039         	movff	floorf@x+1,floorf@u+1
  6888  004370  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  6889  004374  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  6890  004378  0E81               	movlw	129
  6891  00437A  6E2C               	movwf	??_floorf^0,c
  6892  00437C  0EFF               	movlw	255
  6893  00437E  6E2D               	movwf	(??_floorf+1)^0,c
  6894  004380  C038  F02E         	movff	floorf@u,??_floorf+2
  6895  004384  C039  F02F         	movff	floorf@u+1,??_floorf+3
  6896  004388  C03A  F030         	movff	floorf@u+2,??_floorf+4
  6897  00438C  C03B  F031         	movff	floorf@u+3,??_floorf+5
  6898  004390  0E18               	movlw	24
  6899  004392  EFD0  F021         	goto	u5670
  6900  004396                     u5675:
  6901  004396  90D8               	bcf	status,0,c
  6902  004398  3231               	rrcf	(??_floorf+5)^0,f,c
  6903  00439A  3230               	rrcf	(??_floorf+4)^0,f,c
  6904  00439C  322F               	rrcf	(??_floorf+3)^0,f,c
  6905  00439E  322E               	rrcf	(??_floorf+2)^0,f,c
  6906  0043A0                     u5670:
  6907  0043A0  2EE8               	decfsz	wreg,f,c
  6908  0043A2  EFCB  F021         	goto	u5675
  6909  0043A6  502E               	movf	(??_floorf+2)^0,w,c
  6910  0043A8  242C               	addwf	??_floorf^0,w,c
  6911  0043AA  6E36               	movwf	floorf@e^0,c
  6912  0043AC  0E00               	movlw	0
  6913  0043AE  202D               	addwfc	(??_floorf+1)^0,w,c
  6914  0043B0  6E37               	movwf	(floorf@e+1)^0,c
  6915  0043B2  BE37               	btfsc	(floorf@e+1)^0,7,c
  6916  0043B4  EFE5  F021         	goto	u5681
  6917  0043B8  5037               	movf	(floorf@e+1)^0,w,c
  6918  0043BA  E109               	bnz	u5680
  6919  0043BC  0E17               	movlw	23
  6920  0043BE  5C36               	subwf	floorf@e^0,w,c
  6921  0043C0  A0D8               	btfss	status,0,c
  6922  0043C2  EFE5  F021         	goto	u5681
  6923  0043C6  EFE7  F021         	goto	u5680
  6924  0043CA                     u5681:
  6925  0043CA  EFF1  F021         	goto	l4961
  6926  0043CE                     u5680:
  6927  0043CE                     l4959:
  6928  0043CE  C028  F028         	movff	floorf@x,?_floorf
  6929  0043D2  C029  F029         	movff	floorf@x+1,?_floorf+1
  6930  0043D6  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  6931  0043DA  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  6932  0043DE  EFB4  F022         	goto	l1671
  6933  0043E2                     l4961:
  6934  0043E2  BE37               	btfsc	(floorf@e+1)^0,7,c
  6935  0043E4  EFF6  F021         	goto	u5691
  6936  0043E8  EFF8  F021         	goto	u5690
  6937  0043EC                     u5691:
  6938  0043EC  EF68  F022         	goto	l4971
  6939  0043F0                     u5690:
  6940  0043F0  C036  F02C         	movff	floorf@e,??_floorf
  6941  0043F4  0EFF               	movlw	255
  6942  0043F6  6E2D               	movwf	(??_floorf+1)^0,c
  6943  0043F8  0EFF               	movlw	255
  6944  0043FA  6E2E               	movwf	(??_floorf+2)^0,c
  6945  0043FC  0E7F               	movlw	127
  6946  0043FE  6E2F               	movwf	(??_floorf+3)^0,c
  6947  004400  0E00               	movlw	0
  6948  004402  6E30               	movwf	(??_floorf+4)^0,c
  6949  004404                     u5705:
  6950  004404  662C               	tstfsz	??_floorf^0,c
  6951  004406  EF07  F022         	goto	u5706
  6952  00440A  EF0F  F022         	goto	u5707
  6953  00440E                     u5706:
  6954  00440E  3430               	rlcf	(??_floorf+4)^0,w,c
  6955  004410  3230               	rrcf	(??_floorf+4)^0,f,c
  6956  004412  322F               	rrcf	(??_floorf+3)^0,f,c
  6957  004414  322E               	rrcf	(??_floorf+2)^0,f,c
  6958  004416  322D               	rrcf	(??_floorf+1)^0,f,c
  6959  004418  2E2C               	decfsz	??_floorf^0,f,c
  6960  00441A  EF02  F022         	goto	u5705
  6961  00441E                     u5707:
  6962  00441E  C02D  F032         	movff	??_floorf+1,floorf@m
  6963  004422  C02E  F033         	movff	??_floorf+2,floorf@m+1
  6964  004426  C02F  F034         	movff	??_floorf+3,floorf@m+2
  6965  00442A  C030  F035         	movff	??_floorf+4,floorf@m+3
  6966  00442E  5032               	movf	floorf@m^0,w,c
  6967  004430  1438               	andwf	floorf@u^0,w,c
  6968  004432  6E2C               	movwf	??_floorf^0,c
  6969  004434  5033               	movf	(floorf@m+1)^0,w,c
  6970  004436  1439               	andwf	(floorf@u+1)^0,w,c
  6971  004438  6E2D               	movwf	(??_floorf+1)^0,c
  6972  00443A  5034               	movf	(floorf@m+2)^0,w,c
  6973  00443C  143A               	andwf	(floorf@u+2)^0,w,c
  6974  00443E  6E2E               	movwf	(??_floorf+2)^0,c
  6975  004440  5035               	movf	(floorf@m+3)^0,w,c
  6976  004442  143B               	andwf	(floorf@u+3)^0,w,c
  6977  004444  6E2F               	movwf	(??_floorf+3)^0,c
  6978  004446  502C               	movf	??_floorf^0,w,c
  6979  004448  102D               	iorwf	(??_floorf+1)^0,w,c
  6980  00444A  102E               	iorwf	(??_floorf+2)^0,w,c
  6981  00444C  102F               	iorwf	(??_floorf+3)^0,w,c
  6982  00444E  A4D8               	btfss	status,2,c
  6983  004450  EF2C  F022         	goto	u5711
  6984  004454  EF2E  F022         	goto	u5710
  6985  004458                     u5711:
  6986  004458  EF30  F022         	goto	l4967
  6987  00445C                     u5710:
  6988  00445C  EFE7  F021         	goto	l4959
  6989  004460                     l4967:
  6990  004460  C038  F02C         	movff	floorf@u,??_floorf
  6991  004464  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6992  004468  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6993  00446C  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6994  004470  0E20               	movlw	32
  6995  004472  EF40  F022         	goto	u5720
  6996  004476                     u5725:
  6997  004476  90D8               	bcf	status,0,c
  6998  004478  322F               	rrcf	(??_floorf+3)^0,f,c
  6999  00447A  322E               	rrcf	(??_floorf+2)^0,f,c
  7000  00447C  322D               	rrcf	(??_floorf+1)^0,f,c
  7001  00447E  322C               	rrcf	??_floorf^0,f,c
  7002  004480                     u5720:
  7003  004480  2EE8               	decfsz	wreg,f,c
  7004  004482  EF3B  F022         	goto	u5725
  7005  004486  502C               	movf	??_floorf^0,w,c
  7006  004488  102D               	iorwf	(??_floorf+1)^0,w,c
  7007  00448A  102E               	iorwf	(??_floorf+2)^0,w,c
  7008  00448C  102F               	iorwf	(??_floorf+3)^0,w,c
  7009  00448E  B4D8               	btfsc	status,2,c
  7010  004490  EF4C  F022         	goto	u5731
  7011  004494  EF4E  F022         	goto	u5730
  7012  004498                     u5731:
  7013  004498  EF56  F022         	goto	l1674
  7014  00449C                     u5730:
  7015  00449C  5032               	movf	floorf@m^0,w,c
  7016  00449E  2638               	addwf	floorf@u^0,f,c
  7017  0044A0  5033               	movf	(floorf@m+1)^0,w,c
  7018  0044A2  2239               	addwfc	(floorf@u+1)^0,f,c
  7019  0044A4  5034               	movf	(floorf@m+2)^0,w,c
  7020  0044A6  223A               	addwfc	(floorf@u+2)^0,f,c
  7021  0044A8  5035               	movf	(floorf@m+3)^0,w,c
  7022  0044AA  223B               	addwfc	(floorf@u+3)^0,f,c
  7023  0044AC                     l1674:
  7024  0044AC  1C32               	comf	floorf@m^0,w,c
  7025  0044AE  6E2C               	movwf	??_floorf^0,c
  7026  0044B0  1C33               	comf	(floorf@m+1)^0,w,c
  7027  0044B2  6E2D               	movwf	(??_floorf+1)^0,c
  7028  0044B4  1C34               	comf	(floorf@m+2)^0,w,c
  7029  0044B6  6E2E               	movwf	(??_floorf+2)^0,c
  7030  0044B8  1C35               	comf	(floorf@m+3)^0,w,c
  7031  0044BA  6E2F               	movwf	(??_floorf+3)^0,c
  7032  0044BC  502C               	movf	??_floorf^0,w,c
  7033  0044BE  1638               	andwf	floorf@u^0,f,c
  7034  0044C0  502D               	movf	(??_floorf+1)^0,w,c
  7035  0044C2  1639               	andwf	(floorf@u+1)^0,f,c
  7036  0044C4  502E               	movf	(??_floorf+2)^0,w,c
  7037  0044C6  163A               	andwf	(floorf@u+2)^0,f,c
  7038  0044C8  502F               	movf	(??_floorf+3)^0,w,c
  7039  0044CA  163B               	andwf	(floorf@u+3)^0,f,c
  7040  0044CC  EFAC  F022         	goto	l4979
  7041  0044D0                     l4971:
  7042  0044D0  C038  F02C         	movff	floorf@u,??_floorf
  7043  0044D4  C039  F02D         	movff	floorf@u+1,??_floorf+1
  7044  0044D8  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  7045  0044DC  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  7046  0044E0  0E20               	movlw	32
  7047  0044E2  EF78  F022         	goto	u5740
  7048  0044E6                     u5745:
  7049  0044E6  90D8               	bcf	status,0,c
  7050  0044E8  322F               	rrcf	(??_floorf+3)^0,f,c
  7051  0044EA  322E               	rrcf	(??_floorf+2)^0,f,c
  7052  0044EC  322D               	rrcf	(??_floorf+1)^0,f,c
  7053  0044EE  322C               	rrcf	??_floorf^0,f,c
  7054  0044F0                     u5740:
  7055  0044F0  2EE8               	decfsz	wreg,f,c
  7056  0044F2  EF73  F022         	goto	u5745
  7057  0044F6  502C               	movf	??_floorf^0,w,c
  7058  0044F8  102D               	iorwf	(??_floorf+1)^0,w,c
  7059  0044FA  102E               	iorwf	(??_floorf+2)^0,w,c
  7060  0044FC  102F               	iorwf	(??_floorf+3)^0,w,c
  7061  0044FE  A4D8               	btfss	status,2,c
  7062  004500  EF84  F022         	goto	u5751
  7063  004504  EF86  F022         	goto	u5750
  7064  004508                     u5751:
  7065  004508  EF90  F022         	goto	l4975
  7066  00450C                     u5750:
  7067  00450C  0E00               	movlw	0
  7068  00450E  6E38               	movwf	floorf@u^0,c
  7069  004510  0E00               	movlw	0
  7070  004512  6E39               	movwf	(floorf@u+1)^0,c
  7071  004514  0E00               	movlw	0
  7072  004516  6E3A               	movwf	(floorf@u+2)^0,c
  7073  004518  0E00               	movlw	0
  7074  00451A  6E3B               	movwf	(floorf@u+3)^0,c
  7075  00451C  EFAC  F022         	goto	l4979
  7076  004520                     l4975:
  7077  004520  90D8               	bcf	status,0,c
  7078  004522  3438               	rlcf	floorf@u^0,w,c
  7079  004524  6E2C               	movwf	??_floorf^0,c
  7080  004526  3439               	rlcf	(floorf@u+1)^0,w,c
  7081  004528  6E2D               	movwf	(??_floorf+1)^0,c
  7082  00452A  343A               	rlcf	(floorf@u+2)^0,w,c
  7083  00452C  6E2E               	movwf	(??_floorf+2)^0,c
  7084  00452E  343B               	rlcf	(floorf@u+3)^0,w,c
  7085  004530  6E2F               	movwf	(??_floorf+3)^0,c
  7086  004532  502C               	movf	??_floorf^0,w,c
  7087  004534  102D               	iorwf	(??_floorf+1)^0,w,c
  7088  004536  102E               	iorwf	(??_floorf+2)^0,w,c
  7089  004538  102F               	iorwf	(??_floorf+3)^0,w,c
  7090  00453A  B4D8               	btfsc	status,2,c
  7091  00453C  EFA2  F022         	goto	u5761
  7092  004540  EFA4  F022         	goto	u5760
  7093  004544                     u5761:
  7094  004544  EFAC  F022         	goto	l4979
  7095  004548                     u5760:
  7096  004548  0E00               	movlw	0
  7097  00454A  6E38               	movwf	floorf@u^0,c
  7098  00454C  0E00               	movlw	0
  7099  00454E  6E39               	movwf	(floorf@u+1)^0,c
  7100  004550  0E80               	movlw	128
  7101  004552  6E3A               	movwf	(floorf@u+2)^0,c
  7102  004554  0EBF               	movlw	191
  7103  004556  6E3B               	movwf	(floorf@u+3)^0,c
  7104  004558                     l4979:
  7105  004558  C038  F028         	movff	floorf@u,?_floorf
  7106  00455C  C039  F029         	movff	floorf@u+1,?_floorf+1
  7107  004560  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  7108  004564  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  7109  004568                     l1671:
  7110  004568  0012               	return		;funcret
  7111  00456A                     __end_of_floorf:
  7112                           	callstack 0
  7113                           
  7114 ;; *************** function ___fpclassifyf *****************
  7115 ;; Defined at:
  7116 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  x               4    0[COMRAM] float 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  u               4   10[COMRAM] struct .
  7121 ;;  e               2    8[COMRAM] int 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  2    0[COMRAM] int 
  7124 ;; Registers used:
  7125 ;;		wreg, status,2, status,0
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7132 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7133 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7134 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7135 ;;Total ram usage:       14 bytes
  7136 ;; Hardware stack levels used: 1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_efgtoa
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text18
  7145  00538E                     __ptext18:
  7146                           	callstack 0
  7147  00538E                     ___fpclassifyf:
  7148                           	callstack 24
  7149  00538E  C118  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7150  005392  C119  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7151  005396  C11A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7152  00539A  C11B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7153  00539E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7154  0053A2  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7155  0053A6  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7156  0053AA  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7157  0053AE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7158  0053B2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7159  0053B6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7160  0053BA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7161  0053BE  0E18               	movlw	24
  7162  0053C0  EFE7  F029         	goto	u5550
  7163  0053C4                     u5555:
  7164  0053C4  90D8               	bcf	status,0,c
  7165  0053C6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7166  0053C8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7167  0053CA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7168  0053CC  3205               	rrcf	??___fpclassifyf^0,f,c
  7169  0053CE                     u5550:
  7170  0053CE  2EE8               	decfsz	wreg,f,c
  7171  0053D0  EFE2  F029         	goto	u5555
  7172  0053D4  5005               	movf	??___fpclassifyf^0,w,c
  7173  0053D6  6E09               	movwf	___fpclassifyf@e^0,c
  7174  0053D8  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7175  0053DA  5009               	movf	___fpclassifyf@e^0,w,c
  7176  0053DC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7177  0053DE  A4D8               	btfss	status,2,c
  7178  0053E0  EFF4  F029         	goto	u5561
  7179  0053E4  EFF6  F029         	goto	u5560
  7180  0053E8                     u5561:
  7181  0053E8  EF16  F02A         	goto	l4931
  7182  0053EC                     u5560:
  7183  0053EC  90D8               	bcf	status,0,c
  7184  0053EE  340B               	rlcf	___fpclassifyf@u^0,w,c
  7185  0053F0  6E05               	movwf	??___fpclassifyf^0,c
  7186  0053F2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7187  0053F4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7188  0053F6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7189  0053F8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7190  0053FA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7191  0053FC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7192  0053FE  5005               	movf	??___fpclassifyf^0,w,c
  7193  005400  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7194  005402  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7195  005404  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7196  005406  A4D8               	btfss	status,2,c
  7197  005408  EF08  F02A         	goto	u5571
  7198  00540C  EF0A  F02A         	goto	u5570
  7199  005410                     u5571:
  7200  005410  EF10  F02A         	goto	l4927
  7201  005414                     u5570:
  7202  005414  0E00               	movlw	0
  7203  005416  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7204  005418  0E02               	movlw	2
  7205  00541A  6E01               	movwf	?___fpclassifyf^0,c
  7206  00541C  EF45  F02A         	goto	l1626
  7207  005420                     l4927:
  7208  005420  0E00               	movlw	0
  7209  005422  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7210  005424  0E03               	movlw	3
  7211  005426  6E01               	movwf	?___fpclassifyf^0,c
  7212  005428  EF45  F02A         	goto	l1626
  7213  00542C                     l4931:
  7214  00542C  2809               	incf	___fpclassifyf@e^0,w,c
  7215  00542E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7216  005430  A4D8               	btfss	status,2,c
  7217  005432  EF1D  F02A         	goto	u5581
  7218  005436  EF1F  F02A         	goto	u5580
  7219  00543A                     u5581:
  7220  00543A  EF41  F02A         	goto	l4937
  7221  00543E                     u5580:
  7222  00543E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7223  005442  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7224  005446  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7225  00544A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7226  00544E  0E09               	movlw	9
  7227  005450                     u5595:
  7228  005450  90D8               	bcf	status,0,c
  7229  005452  3605               	rlcf	??___fpclassifyf^0,f,c
  7230  005454  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7231  005456  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7232  005458  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7233  00545A  2EE8               	decfsz	wreg,f,c
  7234  00545C  EF28  F02A         	goto	u5595
  7235  005460  5005               	movf	??___fpclassifyf^0,w,c
  7236  005462  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7237  005464  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7238  005466  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7239  005468  B4D8               	btfsc	status,2,c
  7240  00546A  EF39  F02A         	goto	u5601
  7241  00546E  EF3C  F02A         	goto	u5600
  7242  005472                     u5601:
  7243  005472  0E01               	movlw	1
  7244  005474  EF3D  F02A         	goto	u5610
  7245  005478                     u5600:
  7246  005478  0E00               	movlw	0
  7247  00547A                     u5610:
  7248  00547A  6E01               	movwf	?___fpclassifyf^0,c
  7249  00547C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7250  00547E  EF45  F02A         	goto	l1626
  7251  005482                     l4937:
  7252  005482  0E00               	movlw	0
  7253  005484  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7254  005486  0E04               	movlw	4
  7255  005488  6E01               	movwf	?___fpclassifyf^0,c
  7256  00548A                     l1626:
  7257  00548A  0012               	return		;funcret
  7258  00548C                     __end_of___fpclassifyf:
  7259                           	callstack 0
  7260                           
  7261 ;; *************** function ___fltol *****************
  7262 ;; Defined at:
  7263 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;  f1              4    0[COMRAM] int 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;  exp1            1    9[COMRAM] unsigned char 
  7268 ;;  sign1           1    8[COMRAM] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  4    0[COMRAM] long 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7280 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7281 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7282 ;;Total ram usage:       10 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_efgtoa
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text19
  7292  005184                     __ptext19:
  7293                           	callstack 0
  7294  005184                     ___fltol:
  7295                           	callstack 24
  7296  005184  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7297  005186  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7298  005188  6E0A               	movwf	___fltol@exp1^0,c
  7299  00518A  500A               	movf	___fltol@exp1^0,w,c
  7300  00518C  A4D8               	btfss	status,2,c
  7301  00518E  EFCB  F028         	goto	u5431
  7302  005192  EFCD  F028         	goto	u5430
  7303  005196                     u5431:
  7304  005196  EFD7  F028         	goto	l4855
  7305  00519A                     u5430:
  7306  00519A                     l4851:
  7307  00519A  0E00               	movlw	0
  7308  00519C  6E01               	movwf	?___fltol^0,c
  7309  00519E  0E00               	movlw	0
  7310  0051A0  6E02               	movwf	(?___fltol+1)^0,c
  7311  0051A2  0E00               	movlw	0
  7312  0051A4  6E03               	movwf	(?___fltol+2)^0,c
  7313  0051A6  0E00               	movlw	0
  7314  0051A8  6E04               	movwf	(?___fltol+3)^0,c
  7315  0051AA  EF44  F029         	goto	l1010
  7316  0051AE                     l4855:
  7317  0051AE  C001  F005         	movff	___fltol@f1,??___fltol
  7318  0051B2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7319  0051B6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7320  0051BA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7321  0051BE  0E20               	movlw	32
  7322  0051C0  EFE7  F028         	goto	u5440
  7323  0051C4                     u5445:
  7324  0051C4  90D8               	bcf	status,0,c
  7325  0051C6  3208               	rrcf	(??___fltol+3)^0,f,c
  7326  0051C8  3207               	rrcf	(??___fltol+2)^0,f,c
  7327  0051CA  3206               	rrcf	(??___fltol+1)^0,f,c
  7328  0051CC  3205               	rrcf	??___fltol^0,f,c
  7329  0051CE                     u5440:
  7330  0051CE  2EE8               	decfsz	wreg,f,c
  7331  0051D0  EFE2  F028         	goto	u5445
  7332  0051D4  5005               	movf	??___fltol^0,w,c
  7333  0051D6  6E09               	movwf	___fltol@sign1^0,c
  7334  0051D8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7335  0051DA  0EFF               	movlw	255
  7336  0051DC  1601               	andwf	___fltol@f1^0,f,c
  7337  0051DE  0EFF               	movlw	255
  7338  0051E0  1602               	andwf	(___fltol@f1+1)^0,f,c
  7339  0051E2  0EFF               	movlw	255
  7340  0051E4  1603               	andwf	(___fltol@f1+2)^0,f,c
  7341  0051E6  0E00               	movlw	0
  7342  0051E8  1604               	andwf	(___fltol@f1+3)^0,f,c
  7343  0051EA  0E96               	movlw	150
  7344  0051EC  5E0A               	subwf	___fltol@exp1^0,f,c
  7345  0051EE  BE0A               	btfsc	___fltol@exp1^0,7,c
  7346  0051F0  EFFE  F028         	goto	u5450
  7347  0051F4  EFFC  F028         	goto	u5451
  7348  0051F8                     u5451:
  7349  0051F8  EF14  F029         	goto	l4875
  7350  0051FC                     u5450:
  7351  0051FC  500A               	movf	___fltol@exp1^0,w,c
  7352  0051FE  0A80               	xorlw	128
  7353  005200  0F97               	addlw	151
  7354  005202  B0D8               	btfsc	status,0,c
  7355  005204  EF06  F029         	goto	u5461
  7356  005208  EF08  F029         	goto	u5460
  7357  00520C                     u5461:
  7358  00520C  EF0A  F029         	goto	l4871
  7359  005210                     u5460:
  7360  005210  EFCD  F028         	goto	l4851
  7361  005214                     l4871:
  7362  005214  90D8               	bcf	status,0,c
  7363  005216  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7364  005218  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7365  00521A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7366  00521C  3201               	rrcf	___fltol@f1^0,f,c
  7367  00521E  3E0A               	incfsz	___fltol@exp1^0,f,c
  7368  005220  EF0A  F029         	goto	l4871
  7369  005224  EF2C  F029         	goto	l4885
  7370  005228                     l4875:
  7371  005228  0E1F               	movlw	31
  7372  00522A  640A               	cpfsgt	___fltol@exp1^0,c
  7373  00522C  EF1A  F029         	goto	u5471
  7374  005230  EF1C  F029         	goto	u5470
  7375  005234                     u5471:
  7376  005234  EF24  F029         	goto	l4883
  7377  005238                     u5470:
  7378  005238  EFCD  F028         	goto	l4851
  7379  00523C                     l4881:
  7380  00523C  90D8               	bcf	status,0,c
  7381  00523E  3601               	rlcf	___fltol@f1^0,f,c
  7382  005240  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7383  005242  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7384  005244  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7385  005246  060A               	decf	___fltol@exp1^0,f,c
  7386  005248                     l4883:
  7387  005248  500A               	movf	___fltol@exp1^0,w,c
  7388  00524A  A4D8               	btfss	status,2,c
  7389  00524C  EF2A  F029         	goto	u5481
  7390  005250  EF2C  F029         	goto	u5480
  7391  005254                     u5481:
  7392  005254  EF1E  F029         	goto	l4881
  7393  005258                     u5480:
  7394  005258                     l4885:
  7395  005258  5009               	movf	___fltol@sign1^0,w,c
  7396  00525A  B4D8               	btfsc	status,2,c
  7397  00525C  EF32  F029         	goto	u5491
  7398  005260  EF34  F029         	goto	u5490
  7399  005264                     u5491:
  7400  005264  EF3C  F029         	goto	l4889
  7401  005268                     u5490:
  7402  005268  1E04               	comf	(___fltol@f1+3)^0,f,c
  7403  00526A  1E03               	comf	(___fltol@f1+2)^0,f,c
  7404  00526C  1E02               	comf	(___fltol@f1+1)^0,f,c
  7405  00526E  6C01               	negf	___fltol@f1^0,c
  7406  005270  0E00               	movlw	0
  7407  005272  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7408  005274  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7409  005276  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7410  005278                     l4889:
  7411  005278  C001  F001         	movff	___fltol@f1,?___fltol
  7412  00527C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7413  005280  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7414  005284  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7415  005288                     l1010:
  7416  005288  0012               	return		;funcret
  7417  00528A                     __end_of___fltol:
  7418                           	callstack 0
  7419                           
  7420 ;; *************** function ___flsub *****************
  7421 ;; Defined at:
  7422 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  b               4   25[COMRAM] long 
  7425 ;;  a               4   29[COMRAM] long 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  4   25[COMRAM] long 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7437 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7440 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7441 ;;Total ram usage:        8 bytes
  7442 ;; Hardware stack levels used: 1
  7443 ;; Hardware stack levels required when called: 1
  7444 ;; This function calls:
  7445 ;;		___fladd
  7446 ;; This function is called by:
  7447 ;;		_efgtoa
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text20
  7452  00621C                     __ptext20:
  7453                           	callstack 0
  7454  00621C                     ___flsub:
  7455                           	callstack 23
  7456  00621C  0E00               	movlw	0
  7457  00621E  1A1E               	xorwf	___flsub@a^0,f,c
  7458  006220  0E00               	movlw	0
  7459  006222  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7460  006224  0E00               	movlw	0
  7461  006226  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7462  006228  0E80               	movlw	128
  7463  00622A  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7464  00622C  C01A  F001         	movff	___flsub@b,___fladd@b
  7465  006230  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7466  006234  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7467  006238  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7468  00623C  C01E  F005         	movff	___flsub@a,___fladd@a
  7469  006240  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7470  006244  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7471  006248  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7472  00624C  ECF9  F019         	call	___fladd	;wreg free
  7473  006250  C001  F01A         	movff	?___fladd,?___flsub
  7474  006254  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7475  006258  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7476  00625C  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7477  006260  0012               	return		;funcret
  7478  006262                     __end_of___flsub:
  7479                           	callstack 0
  7480                           
  7481 ;; *************** function ___fladd *****************
  7482 ;; Defined at:
  7483 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  b               4    0[COMRAM] long 
  7486 ;;  a               4    4[COMRAM] long 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  grs             1   15[COMRAM] unsigned char 
  7489 ;;  bexp            1   14[COMRAM] unsigned char 
  7490 ;;  aexp            1   13[COMRAM] unsigned char 
  7491 ;;  signs           1   12[COMRAM] unsigned char 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  4    0[COMRAM] unsigned char 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7501 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7502 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7504 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7505 ;;Total ram usage:       16 bytes
  7506 ;; Hardware stack levels used: 1
  7507 ;; This function calls:
  7508 ;;		Nothing
  7509 ;; This function is called by:
  7510 ;;		___flsub
  7511 ;;		_efgtoa
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           	psect	text21
  7516  0033F2                     __ptext21:
  7517                           	callstack 0
  7518  0033F2                     ___fladd:
  7519                           	callstack 23
  7520  0033F2  5004               	movf	(___fladd@b+3)^0,w,c
  7521  0033F4  0B80               	andlw	128
  7522  0033F6  6E0D               	movwf	___fladd@signs^0,c
  7523  0033F8  5004               	movf	(___fladd@b+3)^0,w,c
  7524  0033FA  2404               	addwf	(___fladd@b+3)^0,w,c
  7525  0033FC  6E0F               	movwf	___fladd@bexp^0,c
  7526  0033FE  AE03               	btfss	(___fladd@b+2)^0,7,c
  7527  003400  EF04  F01A         	goto	u4231
  7528  003404  EF06  F01A         	goto	u4230
  7529  003408                     u4231:
  7530  003408  EF07  F01A         	goto	l4145
  7531  00340C                     u4230:
  7532  00340C  800F               	bsf	___fladd@bexp^0,0,c
  7533  00340E                     l4145:
  7534  00340E  500F               	movf	___fladd@bexp^0,w,c
  7535  003410  B4D8               	btfsc	status,2,c
  7536  003412  EF0D  F01A         	goto	u4241
  7537  003416  EF0F  F01A         	goto	u4240
  7538  00341A                     u4241:
  7539  00341A  EF24  F01A         	goto	l4155
  7540  00341E                     u4240:
  7541  00341E  280F               	incf	___fladd@bexp^0,w,c
  7542  003420  A4D8               	btfss	status,2,c
  7543  003422  EF15  F01A         	goto	u4251
  7544  003426  EF17  F01A         	goto	u4250
  7545  00342A                     u4251:
  7546  00342A  EF1F  F01A         	goto	l4151
  7547  00342E                     u4250:
  7548  00342E  0E00               	movlw	0
  7549  003430  6E01               	movwf	___fladd@b^0,c
  7550  003432  0E00               	movlw	0
  7551  003434  6E02               	movwf	(___fladd@b+1)^0,c
  7552  003436  0E00               	movlw	0
  7553  003438  6E03               	movwf	(___fladd@b+2)^0,c
  7554  00343A  0E00               	movlw	0
  7555  00343C  6E04               	movwf	(___fladd@b+3)^0,c
  7556  00343E                     l4151:
  7557  00343E  8E03               	bsf	(___fladd@b+2)^0,7,c
  7558  003440  0E00               	movlw	0
  7559  003442  6E04               	movwf	(___fladd@b+3)^0,c
  7560  003444  EF2C  F01A         	goto	l4157
  7561  003448                     l4155:
  7562  003448  0E00               	movlw	0
  7563  00344A  6E01               	movwf	___fladd@b^0,c
  7564  00344C  0E00               	movlw	0
  7565  00344E  6E02               	movwf	(___fladd@b+1)^0,c
  7566  003450  0E00               	movlw	0
  7567  003452  6E03               	movwf	(___fladd@b+2)^0,c
  7568  003454  0E00               	movlw	0
  7569  003456  6E04               	movwf	(___fladd@b+3)^0,c
  7570  003458                     l4157:
  7571  003458  5008               	movf	(___fladd@a+3)^0,w,c
  7572  00345A  0B80               	andlw	128
  7573  00345C  6E0E               	movwf	___fladd@aexp^0,c
  7574  00345E  500D               	movf	___fladd@signs^0,w,c
  7575  003460  180E               	xorwf	___fladd@aexp^0,w,c
  7576  003462  B4D8               	btfsc	status,2,c
  7577  003464  EF36  F01A         	goto	u4261
  7578  003468  EF38  F01A         	goto	u4260
  7579  00346C                     u4261:
  7580  00346C  EF39  F01A         	goto	l4163
  7581  003470                     u4260:
  7582  003470  8C0D               	bsf	___fladd@signs^0,6,c
  7583  003472                     l4163:
  7584  003472  5008               	movf	(___fladd@a+3)^0,w,c
  7585  003474  2408               	addwf	(___fladd@a+3)^0,w,c
  7586  003476  6E0E               	movwf	___fladd@aexp^0,c
  7587  003478  AE07               	btfss	(___fladd@a+2)^0,7,c
  7588  00347A  EF41  F01A         	goto	u4271
  7589  00347E  EF43  F01A         	goto	u4270
  7590  003482                     u4271:
  7591  003482  EF44  F01A         	goto	l4169
  7592  003486                     u4270:
  7593  003486  800E               	bsf	___fladd@aexp^0,0,c
  7594  003488                     l4169:
  7595  003488  500E               	movf	___fladd@aexp^0,w,c
  7596  00348A  B4D8               	btfsc	status,2,c
  7597  00348C  EF4A  F01A         	goto	u4281
  7598  003490  EF4C  F01A         	goto	u4280
  7599  003494                     u4281:
  7600  003494  EF61  F01A         	goto	l4179
  7601  003498                     u4280:
  7602  003498  280E               	incf	___fladd@aexp^0,w,c
  7603  00349A  A4D8               	btfss	status,2,c
  7604  00349C  EF52  F01A         	goto	u4291
  7605  0034A0  EF54  F01A         	goto	u4290
  7606  0034A4                     u4291:
  7607  0034A4  EF5C  F01A         	goto	l4175
  7608  0034A8                     u4290:
  7609  0034A8  0E00               	movlw	0
  7610  0034AA  6E05               	movwf	___fladd@a^0,c
  7611  0034AC  0E00               	movlw	0
  7612  0034AE  6E06               	movwf	(___fladd@a+1)^0,c
  7613  0034B0  0E00               	movlw	0
  7614  0034B2  6E07               	movwf	(___fladd@a+2)^0,c
  7615  0034B4  0E00               	movlw	0
  7616  0034B6  6E08               	movwf	(___fladd@a+3)^0,c
  7617  0034B8                     l4175:
  7618  0034B8  8E07               	bsf	(___fladd@a+2)^0,7,c
  7619  0034BA  0E00               	movlw	0
  7620  0034BC  6E08               	movwf	(___fladd@a+3)^0,c
  7621  0034BE  EF69  F01A         	goto	l4181
  7622  0034C2                     l4179:
  7623  0034C2  0E00               	movlw	0
  7624  0034C4  6E05               	movwf	___fladd@a^0,c
  7625  0034C6  0E00               	movlw	0
  7626  0034C8  6E06               	movwf	(___fladd@a+1)^0,c
  7627  0034CA  0E00               	movlw	0
  7628  0034CC  6E07               	movwf	(___fladd@a+2)^0,c
  7629  0034CE  0E00               	movlw	0
  7630  0034D0  6E08               	movwf	(___fladd@a+3)^0,c
  7631  0034D2                     l4181:
  7632  0034D2  500F               	movf	___fladd@bexp^0,w,c
  7633  0034D4  5C0E               	subwf	___fladd@aexp^0,w,c
  7634  0034D6  B0D8               	btfsc	status,0,c
  7635  0034D8  EF70  F01A         	goto	u4301
  7636  0034DC  EF72  F01A         	goto	u4300
  7637  0034E0                     u4301:
  7638  0034E0  EF99  F01A         	goto	l4217
  7639  0034E4                     u4300:
  7640  0034E4  AC0D               	btfss	___fladd@signs^0,6,c
  7641  0034E6  EF77  F01A         	goto	u4311
  7642  0034EA  EF79  F01A         	goto	u4310
  7643  0034EE                     u4311:
  7644  0034EE  EF7B  F01A         	goto	l4187
  7645  0034F2                     u4310:
  7646  0034F2  0E80               	movlw	128
  7647  0034F4  1A0D               	xorwf	___fladd@signs^0,f,c
  7648  0034F6                     l4187:
  7649  0034F6  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7650  0034FA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7651  0034FE  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7652  003502  C001  F010         	movff	___fladd@b,___fladd@grs
  7653  003506  C005  F001         	movff	___fladd@a,___fladd@b
  7654  00350A  C010  F005         	movff	___fladd@grs,___fladd@a
  7655  00350E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7656  003512  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7657  003516  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7658  00351A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7659  00351E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7660  003522  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7661  003526  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7662  00352A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7663  00352E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7664  003532                     l4217:
  7665  003532  0E00               	movlw	0
  7666  003534  6E10               	movwf	___fladd@grs^0,c
  7667  003536  500F               	movf	___fladd@bexp^0,w,c
  7668  003538  C00E  F009         	movff	___fladd@aexp,??___fladd
  7669  00353C  6A0A               	clrf	(??___fladd+1)^0,c
  7670  00353E  5E09               	subwf	??___fladd^0,f,c
  7671  003540  0E00               	movlw	0
  7672  003542  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7673  003544  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7674  003546  EFAE  F01A         	goto	u4321
  7675  00354A  500A               	movf	(??___fladd+1)^0,w,c
  7676  00354C  E109               	bnz	u4320
  7677  00354E  0E1A               	movlw	26
  7678  003550  5C09               	subwf	??___fladd^0,w,c
  7679  003552  A0D8               	btfss	status,0,c
  7680  003554  EFAE  F01A         	goto	u4321
  7681  003558  EFB0  F01A         	goto	u4320
  7682  00355C                     u4321:
  7683  00355C  EFE7  F01A         	goto	l1242
  7684  003560                     u4320:
  7685  003560  5001               	movf	___fladd@b^0,w,c
  7686  003562  1002               	iorwf	(___fladd@b+1)^0,w,c
  7687  003564  1003               	iorwf	(___fladd@b+2)^0,w,c
  7688  003566  1004               	iorwf	(___fladd@b+3)^0,w,c
  7689  003568  A4D8               	btfss	status,2,c
  7690  00356A  EFB9  F01A         	goto	u4331
  7691  00356E  EFBC  F01A         	goto	u4330
  7692  003572                     u4331:
  7693  003572  0E01               	movlw	1
  7694  003574  EFBD  F01A         	goto	u4340
  7695  003578                     u4330:
  7696  003578  0E00               	movlw	0
  7697  00357A                     u4340:
  7698  00357A  6E10               	movwf	___fladd@grs^0,c
  7699  00357C  0E00               	movlw	0
  7700  00357E  6E01               	movwf	___fladd@b^0,c
  7701  003580  0E00               	movlw	0
  7702  003582  6E02               	movwf	(___fladd@b+1)^0,c
  7703  003584  0E00               	movlw	0
  7704  003586  6E03               	movwf	(___fladd@b+2)^0,c
  7705  003588  0E00               	movlw	0
  7706  00358A  6E04               	movwf	(___fladd@b+3)^0,c
  7707  00358C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7708  003590  EFF0  F01A         	goto	l1241
  7709  003594                     l1243:
  7710  003594  A010               	btfss	___fladd@grs^0,0,c
  7711  003596  EFCF  F01A         	goto	u4351
  7712  00359A  EFD1  F01A         	goto	u4350
  7713  00359E                     u4351:
  7714  00359E  EFD7  F01A         	goto	l4229
  7715  0035A2                     u4350:
  7716  0035A2  90D8               	bcf	status,0,c
  7717  0035A4  3010               	rrcf	___fladd@grs^0,w,c
  7718  0035A6  0901               	iorlw	1
  7719  0035A8  6E10               	movwf	___fladd@grs^0,c
  7720  0035AA  EFD9  F01A         	goto	l4231
  7721  0035AE                     l4229:
  7722  0035AE  90D8               	bcf	status,0,c
  7723  0035B0  3210               	rrcf	___fladd@grs^0,f,c
  7724  0035B2                     l4231:
  7725  0035B2  A001               	btfss	___fladd@b^0,0,c
  7726  0035B4  EFDE  F01A         	goto	u4361
  7727  0035B8  EFE0  F01A         	goto	u4360
  7728  0035BC                     u4361:
  7729  0035BC  EFE1  F01A         	goto	l4235
  7730  0035C0                     u4360:
  7731  0035C0  8E10               	bsf	___fladd@grs^0,7,c
  7732  0035C2                     l4235:
  7733  0035C2  3404               	rlcf	(___fladd@b+3)^0,w,c
  7734  0035C4  3204               	rrcf	(___fladd@b+3)^0,f,c
  7735  0035C6  3203               	rrcf	(___fladd@b+2)^0,f,c
  7736  0035C8  3202               	rrcf	(___fladd@b+1)^0,f,c
  7737  0035CA  3201               	rrcf	___fladd@b^0,f,c
  7738  0035CC  2A0F               	incf	___fladd@bexp^0,f,c
  7739  0035CE                     l1242:
  7740  0035CE  500E               	movf	___fladd@aexp^0,w,c
  7741  0035D0  5C0F               	subwf	___fladd@bexp^0,w,c
  7742  0035D2  A0D8               	btfss	status,0,c
  7743  0035D4  EFEE  F01A         	goto	u4371
  7744  0035D8  EFF0  F01A         	goto	u4370
  7745  0035DC                     u4371:
  7746  0035DC  EFCA  F01A         	goto	l1243
  7747  0035E0                     u4370:
  7748  0035E0                     l1241:
  7749  0035E0  BC0D               	btfsc	___fladd@signs^0,6,c
  7750  0035E2  EFF5  F01A         	goto	u4381
  7751  0035E6  EFF7  F01A         	goto	u4380
  7752  0035EA                     u4381:
  7753  0035EA  EF37  F01B         	goto	l4263
  7754  0035EE                     u4380:
  7755  0035EE  500F               	movf	___fladd@bexp^0,w,c
  7756  0035F0  A4D8               	btfss	status,2,c
  7757  0035F2  EFFD  F01A         	goto	u4391
  7758  0035F6  EFFF  F01A         	goto	u4390
  7759  0035FA                     u4391:
  7760  0035FA  EF09  F01B         	goto	l4245
  7761  0035FE                     u4390:
  7762  0035FE  0E00               	movlw	0
  7763  003600  6E01               	movwf	?___fladd^0,c
  7764  003602  0E00               	movlw	0
  7765  003604  6E02               	movwf	(?___fladd+1)^0,c
  7766  003606  0E00               	movlw	0
  7767  003608  6E03               	movwf	(?___fladd+2)^0,c
  7768  00360A  0E00               	movlw	0
  7769  00360C  6E04               	movwf	(?___fladd+3)^0,c
  7770  00360E  EF58  F01C         	goto	l1250
  7771  003612                     l4245:
  7772  003612  5005               	movf	___fladd@a^0,w,c
  7773  003614  2601               	addwf	___fladd@b^0,f,c
  7774  003616  5006               	movf	(___fladd@a+1)^0,w,c
  7775  003618  2202               	addwfc	(___fladd@b+1)^0,f,c
  7776  00361A  5007               	movf	(___fladd@a+2)^0,w,c
  7777  00361C  2203               	addwfc	(___fladd@b+2)^0,f,c
  7778  00361E  5008               	movf	(___fladd@a+3)^0,w,c
  7779  003620  2204               	addwfc	(___fladd@b+3)^0,f,c
  7780  003622  A004               	btfss	(___fladd@b+3)^0,0,c
  7781  003624  EF16  F01B         	goto	u4401
  7782  003628  EF18  F01B         	goto	u4400
  7783  00362C                     u4401:
  7784  00362C  EFC4  F01B         	goto	l4299
  7785  003630                     u4400:
  7786  003630  A010               	btfss	___fladd@grs^0,0,c
  7787  003632  EF1D  F01B         	goto	u4411
  7788  003636  EF1F  F01B         	goto	u4410
  7789  00363A                     u4411:
  7790  00363A  EF25  F01B         	goto	l4253
  7791  00363E                     u4410:
  7792  00363E  90D8               	bcf	status,0,c
  7793  003640  3010               	rrcf	___fladd@grs^0,w,c
  7794  003642  0901               	iorlw	1
  7795  003644  6E10               	movwf	___fladd@grs^0,c
  7796  003646  EF27  F01B         	goto	l4255
  7797  00364A                     l4253:
  7798  00364A  90D8               	bcf	status,0,c
  7799  00364C  3210               	rrcf	___fladd@grs^0,f,c
  7800  00364E                     l4255:
  7801  00364E  A001               	btfss	___fladd@b^0,0,c
  7802  003650  EF2C  F01B         	goto	u4421
  7803  003654  EF2E  F01B         	goto	u4420
  7804  003658                     u4421:
  7805  003658  EF2F  F01B         	goto	l4259
  7806  00365C                     u4420:
  7807  00365C  8E10               	bsf	___fladd@grs^0,7,c
  7808  00365E                     l4259:
  7809  00365E  3404               	rlcf	(___fladd@b+3)^0,w,c
  7810  003660  3204               	rrcf	(___fladd@b+3)^0,f,c
  7811  003662  3203               	rrcf	(___fladd@b+2)^0,f,c
  7812  003664  3202               	rrcf	(___fladd@b+1)^0,f,c
  7813  003666  3201               	rrcf	___fladd@b^0,f,c
  7814  003668  2A0F               	incf	___fladd@bexp^0,f,c
  7815  00366A  EFC4  F01B         	goto	l4299
  7816  00366E                     l4263:
  7817  00366E  5005               	movf	___fladd@a^0,w,c
  7818  003670  5C01               	subwf	___fladd@b^0,w,c
  7819  003672  5006               	movf	(___fladd@a+1)^0,w,c
  7820  003674  5802               	subwfb	(___fladd@b+1)^0,w,c
  7821  003676  5007               	movf	(___fladd@a+2)^0,w,c
  7822  003678  5803               	subwfb	(___fladd@b+2)^0,w,c
  7823  00367A  5004               	movf	(___fladd@b+3)^0,w,c
  7824  00367C  0A80               	xorlw	128
  7825  00367E  6E09               	movwf	??___fladd^0,c
  7826  003680  5008               	movf	(___fladd@a+3)^0,w,c
  7827  003682  0A80               	xorlw	128
  7828  003684  5809               	subwfb	??___fladd^0,w,c
  7829  003686  B0D8               	btfsc	status,0,c
  7830  003688  EF48  F01B         	goto	u4431
  7831  00368C  EF4A  F01B         	goto	u4430
  7832  003690                     u4431:
  7833  003690  EF75  F01B         	goto	l4273
  7834  003694                     u4430:
  7835  003694  5001               	movf	___fladd@b^0,w,c
  7836  003696  5C05               	subwf	___fladd@a^0,w,c
  7837  003698  6E09               	movwf	??___fladd^0,c
  7838  00369A  5002               	movf	(___fladd@b+1)^0,w,c
  7839  00369C  5806               	subwfb	(___fladd@a+1)^0,w,c
  7840  00369E  6E0A               	movwf	(??___fladd+1)^0,c
  7841  0036A0  5003               	movf	(___fladd@b+2)^0,w,c
  7842  0036A2  5807               	subwfb	(___fladd@a+2)^0,w,c
  7843  0036A4  6E0B               	movwf	(??___fladd+2)^0,c
  7844  0036A6  5004               	movf	(___fladd@b+3)^0,w,c
  7845  0036A8  5808               	subwfb	(___fladd@a+3)^0,w,c
  7846  0036AA  6E0C               	movwf	(??___fladd+3)^0,c
  7847  0036AC  0EFF               	movlw	255
  7848  0036AE  2409               	addwf	??___fladd^0,w,c
  7849  0036B0  6E01               	movwf	___fladd@b^0,c
  7850  0036B2  0EFF               	movlw	255
  7851  0036B4  200A               	addwfc	(??___fladd+1)^0,w,c
  7852  0036B6  6E02               	movwf	(___fladd@b+1)^0,c
  7853  0036B8  0EFF               	movlw	255
  7854  0036BA  200B               	addwfc	(??___fladd+2)^0,w,c
  7855  0036BC  6E03               	movwf	(___fladd@b+2)^0,c
  7856  0036BE  0EFF               	movlw	255
  7857  0036C0  200C               	addwfc	(??___fladd+3)^0,w,c
  7858  0036C2  6E04               	movwf	(___fladd@b+3)^0,c
  7859  0036C4  0E80               	movlw	128
  7860  0036C6  1A0D               	xorwf	___fladd@signs^0,f,c
  7861  0036C8  6C10               	negf	___fladd@grs^0,c
  7862  0036CA  5010               	movf	___fladd@grs^0,w,c
  7863  0036CC  A4D8               	btfss	status,2,c
  7864  0036CE  EF6B  F01B         	goto	u4441
  7865  0036D2  EF6D  F01B         	goto	u4440
  7866  0036D6                     u4441:
  7867  0036D6  EF7D  F01B         	goto	l1258
  7868  0036DA                     u4440:
  7869  0036DA  0E01               	movlw	1
  7870  0036DC  2601               	addwf	___fladd@b^0,f,c
  7871  0036DE  0E00               	movlw	0
  7872  0036E0  2202               	addwfc	(___fladd@b+1)^0,f,c
  7873  0036E2  2203               	addwfc	(___fladd@b+2)^0,f,c
  7874  0036E4  2204               	addwfc	(___fladd@b+3)^0,f,c
  7875  0036E6  EF7D  F01B         	goto	l1258
  7876  0036EA                     l4273:
  7877  0036EA  5005               	movf	___fladd@a^0,w,c
  7878  0036EC  5E01               	subwf	___fladd@b^0,f,c
  7879  0036EE  5006               	movf	(___fladd@a+1)^0,w,c
  7880  0036F0  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7881  0036F2  5007               	movf	(___fladd@a+2)^0,w,c
  7882  0036F4  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7883  0036F6  5008               	movf	(___fladd@a+3)^0,w,c
  7884  0036F8  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7885  0036FA                     l1258:
  7886  0036FA  5001               	movf	___fladd@b^0,w,c
  7887  0036FC  1002               	iorwf	(___fladd@b+1)^0,w,c
  7888  0036FE  1003               	iorwf	(___fladd@b+2)^0,w,c
  7889  003700  1004               	iorwf	(___fladd@b+3)^0,w,c
  7890  003702  A4D8               	btfss	status,2,c
  7891  003704  EF86  F01B         	goto	u4451
  7892  003708  EF88  F01B         	goto	u4450
  7893  00370C                     u4451:
  7894  00370C  EFBD  F01B         	goto	l4297
  7895  003710                     u4450:
  7896  003710  5010               	movf	___fladd@grs^0,w,c
  7897  003712  A4D8               	btfss	status,2,c
  7898  003714  EF8E  F01B         	goto	u4461
  7899  003718  EF90  F01B         	goto	u4460
  7900  00371C                     u4461:
  7901  00371C  EFBD  F01B         	goto	l4297
  7902  003720                     u4460:
  7903  003720  0E00               	movlw	0
  7904  003722  6E01               	movwf	?___fladd^0,c
  7905  003724  0E00               	movlw	0
  7906  003726  6E02               	movwf	(?___fladd+1)^0,c
  7907  003728  0E00               	movlw	0
  7908  00372A  6E03               	movwf	(?___fladd+2)^0,c
  7909  00372C  0E00               	movlw	0
  7910  00372E  6E04               	movwf	(?___fladd+3)^0,c
  7911  003730  EF58  F01C         	goto	l1250
  7912  003734                     l4281:
  7913  003734  90D8               	bcf	status,0,c
  7914  003736  3601               	rlcf	___fladd@b^0,f,c
  7915  003738  3602               	rlcf	(___fladd@b+1)^0,f,c
  7916  00373A  3603               	rlcf	(___fladd@b+2)^0,f,c
  7917  00373C  3604               	rlcf	(___fladd@b+3)^0,f,c
  7918  00373E  AE10               	btfss	___fladd@grs^0,7,c
  7919  003740  EFA4  F01B         	goto	u4471
  7920  003744  EFA6  F01B         	goto	u4470
  7921  003748                     u4471:
  7922  003748  EFA7  F01B         	goto	l4287
  7923  00374C                     u4470:
  7924  00374C  8001               	bsf	___fladd@b^0,0,c
  7925  00374E                     l4287:
  7926  00374E  A010               	btfss	___fladd@grs^0,0,c
  7927  003750  EFAC  F01B         	goto	u4481
  7928  003754  EFAE  F01B         	goto	u4480
  7929  003758                     u4481:
  7930  003758  EFB2  F01B         	goto	l4291
  7931  00375C                     u4480:
  7932  00375C  80D8               	bsf	status,0,c
  7933  00375E  3610               	rlcf	___fladd@grs^0,f,c
  7934  003760  EFB4  F01B         	goto	l4293
  7935  003764                     l4291:
  7936  003764  90D8               	bcf	status,0,c
  7937  003766  3610               	rlcf	___fladd@grs^0,f,c
  7938  003768                     l4293:
  7939  003768  500F               	movf	___fladd@bexp^0,w,c
  7940  00376A  B4D8               	btfsc	status,2,c
  7941  00376C  EFBA  F01B         	goto	u4491
  7942  003770  EFBC  F01B         	goto	u4490
  7943  003774                     u4491:
  7944  003774  EFBD  F01B         	goto	l4297
  7945  003778                     u4490:
  7946  003778  060F               	decf	___fladd@bexp^0,f,c
  7947  00377A                     l4297:
  7948  00377A  AE03               	btfss	(___fladd@b+2)^0,7,c
  7949  00377C  EFC2  F01B         	goto	u4501
  7950  003780  EFC4  F01B         	goto	u4500
  7951  003784                     u4501:
  7952  003784  EF9A  F01B         	goto	l4281
  7953  003788                     u4500:
  7954  003788                     l4299:
  7955  003788  0E00               	movlw	0
  7956  00378A  6E0E               	movwf	___fladd@aexp^0,c
  7957  00378C  AE10               	btfss	___fladd@grs^0,7,c
  7958  00378E  EFCB  F01B         	goto	u4511
  7959  003792  EFCD  F01B         	goto	u4510
  7960  003796                     u4511:
  7961  003796  EFE5  F01B         	goto	l1267
  7962  00379A                     u4510:
  7963  00379A  C010  F009         	movff	___fladd@grs,??___fladd
  7964  00379E  0E7F               	movlw	127
  7965  0037A0  1609               	andwf	??___fladd^0,f,c
  7966  0037A2  B4D8               	btfsc	status,2,c
  7967  0037A4  EFD6  F01B         	goto	u4521
  7968  0037A8  EFD8  F01B         	goto	u4520
  7969  0037AC                     u4521:
  7970  0037AC  EFDC  F01B         	goto	l1268
  7971  0037B0                     u4520:
  7972  0037B0                     l4305:
  7973  0037B0  0E01               	movlw	1
  7974  0037B2  6E0E               	movwf	___fladd@aexp^0,c
  7975  0037B4  EFE5  F01B         	goto	l1267
  7976  0037B8                     l1268:
  7977  0037B8  A001               	btfss	___fladd@b^0,0,c
  7978  0037BA  EFE1  F01B         	goto	u4531
  7979  0037BE  EFE3  F01B         	goto	u4530
  7980  0037C2                     u4531:
  7981  0037C2  EFE5  F01B         	goto	l1267
  7982  0037C6                     u4530:
  7983  0037C6  EFD8  F01B         	goto	l4305
  7984  0037CA                     l1267:
  7985  0037CA  500E               	movf	___fladd@aexp^0,w,c
  7986  0037CC  B4D8               	btfsc	status,2,c
  7987  0037CE  EFEB  F01B         	goto	u4541
  7988  0037D2  EFED  F01B         	goto	u4540
  7989  0037D6                     u4541:
  7990  0037D6  EF18  F01C         	goto	l4317
  7991  0037DA                     u4540:
  7992  0037DA  0E01               	movlw	1
  7993  0037DC  2601               	addwf	___fladd@b^0,f,c
  7994  0037DE  0E00               	movlw	0
  7995  0037E0  2202               	addwfc	(___fladd@b+1)^0,f,c
  7996  0037E2  2203               	addwfc	(___fladd@b+2)^0,f,c
  7997  0037E4  2204               	addwfc	(___fladd@b+3)^0,f,c
  7998  0037E6  A004               	btfss	(___fladd@b+3)^0,0,c
  7999  0037E8  EFF8  F01B         	goto	u4551
  8000  0037EC  EFFA  F01B         	goto	u4550
  8001  0037F0                     u4551:
  8002  0037F0  EF18  F01C         	goto	l4317
  8003  0037F4                     u4550:
  8004  0037F4  C001  F009         	movff	___fladd@b,??___fladd
  8005  0037F8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8006  0037FC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8007  003800  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8008  003804  340C               	rlcf	(??___fladd+3)^0,w,c
  8009  003806  320C               	rrcf	(??___fladd+3)^0,f,c
  8010  003808  320B               	rrcf	(??___fladd+2)^0,f,c
  8011  00380A  320A               	rrcf	(??___fladd+1)^0,f,c
  8012  00380C  3209               	rrcf	??___fladd^0,f,c
  8013  00380E  C009  F001         	movff	??___fladd,___fladd@b
  8014  003812  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8015  003816  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8016  00381A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8017  00381E  280F               	incf	___fladd@bexp^0,w,c
  8018  003820  B4D8               	btfsc	status,2,c
  8019  003822  EF15  F01C         	goto	u4561
  8020  003826  EF17  F01C         	goto	u4560
  8021  00382A                     u4561:
  8022  00382A  EF18  F01C         	goto	l4317
  8023  00382E                     u4560:
  8024  00382E  2A0F               	incf	___fladd@bexp^0,f,c
  8025  003830                     l4317:
  8026  003830  280F               	incf	___fladd@bexp^0,w,c
  8027  003832  B4D8               	btfsc	status,2,c
  8028  003834  EF1E  F01C         	goto	u4571
  8029  003838  EF20  F01C         	goto	u4570
  8030  00383C                     u4571:
  8031  00383C  EF28  F01C         	goto	l4321
  8032  003840                     u4570:
  8033  003840  500F               	movf	___fladd@bexp^0,w,c
  8034  003842  A4D8               	btfss	status,2,c
  8035  003844  EF26  F01C         	goto	u4581
  8036  003848  EF28  F01C         	goto	u4580
  8037  00384C                     u4581:
  8038  00384C  EF3A  F01C         	goto	l4325
  8039  003850                     u4580:
  8040  003850                     l4321:
  8041  003850  0E00               	movlw	0
  8042  003852  6E01               	movwf	___fladd@b^0,c
  8043  003854  0E00               	movlw	0
  8044  003856  6E02               	movwf	(___fladd@b+1)^0,c
  8045  003858  0E00               	movlw	0
  8046  00385A  6E03               	movwf	(___fladd@b+2)^0,c
  8047  00385C  0E00               	movlw	0
  8048  00385E  6E04               	movwf	(___fladd@b+3)^0,c
  8049  003860  500F               	movf	___fladd@bexp^0,w,c
  8050  003862  A4D8               	btfss	status,2,c
  8051  003864  EF36  F01C         	goto	u4591
  8052  003868  EF38  F01C         	goto	u4590
  8053  00386C                     u4591:
  8054  00386C  EF3A  F01C         	goto	l4325
  8055  003870                     u4590:
  8056  003870  0E00               	movlw	0
  8057  003872  6E0D               	movwf	___fladd@signs^0,c
  8058  003874                     l4325:
  8059  003874  A00F               	btfss	___fladd@bexp^0,0,c
  8060  003876  EF3F  F01C         	goto	u4601
  8061  00387A  EF41  F01C         	goto	u4600
  8062  00387E                     u4601:
  8063  00387E  EF44  F01C         	goto	l4329
  8064  003882                     u4600:
  8065  003882  8E03               	bsf	(___fladd@b+2)^0,7,c
  8066  003884  EF45  F01C         	goto	l4331
  8067  003888                     l4329:
  8068  003888  9E03               	bcf	(___fladd@b+2)^0,7,c
  8069  00388A                     l4331:
  8070  00388A  90D8               	bcf	status,0,c
  8071  00388C  300F               	rrcf	___fladd@bexp^0,w,c
  8072  00388E  6E04               	movwf	(___fladd@b+3)^0,c
  8073  003890  AE0D               	btfss	___fladd@signs^0,7,c
  8074  003892  EF4D  F01C         	goto	u4611
  8075  003896  EF4F  F01C         	goto	u4610
  8076  00389A                     u4611:
  8077  00389A  EF50  F01C         	goto	l4337
  8078  00389E                     u4610:
  8079  00389E  8E04               	bsf	(___fladd@b+3)^0,7,c
  8080  0038A0                     l4337:
  8081  0038A0  C001  F001         	movff	___fladd@b,?___fladd
  8082  0038A4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8083  0038A8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8084  0038AC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8085  0038B0                     l1250:
  8086  0038B0  0012               	return		;funcret
  8087  0038B2                     __end_of___fladd:
  8088                           	callstack 0
  8089                           
  8090 ;; *************** function ___flneg *****************
  8091 ;; Defined at:
  8092 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  f1              4    0[COMRAM] unsigned char 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  4    0[COMRAM] unsigned char 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8110 ;;Total ram usage:        4 bytes
  8111 ;; Hardware stack levels used: 1
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_efgtoa
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text22
  8120  0063D6                     __ptext22:
  8121                           	callstack 0
  8122  0063D6                     ___flneg:
  8123                           	callstack 24
  8124  0063D6  5001               	movf	___flneg@f1^0,w,c
  8125  0063D8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8126  0063DA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8127  0063DC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8128  0063DE  B4D8               	btfsc	status,2,c
  8129  0063E0  EFF4  F031         	goto	u5421
  8130  0063E4  EFF6  F031         	goto	u5420
  8131  0063E8                     u5421:
  8132  0063E8  EFFE  F031         	goto	l4845
  8133  0063EC                     u5420:
  8134  0063EC  0E00               	movlw	0
  8135  0063EE  1A01               	xorwf	___flneg@f1^0,f,c
  8136  0063F0  0E00               	movlw	0
  8137  0063F2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8138  0063F4  0E00               	movlw	0
  8139  0063F6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8140  0063F8  0E80               	movlw	128
  8141  0063FA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8142  0063FC                     l4845:
  8143  0063FC  C001  F001         	movff	___flneg@f1,?___flneg
  8144  006400  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8145  006404  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8146  006408  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8147  00640C  0012               	return		;funcret
  8148  00640E                     __end_of___flneg:
  8149                           	callstack 0
  8150                           
  8151 ;; *************** function ___flmul *****************
  8152 ;; Defined at:
  8153 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  b               4    0[COMRAM] unsigned char 
  8156 ;;  a               4    4[COMRAM] unsigned char 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  prod            4   19[COMRAM] struct .
  8159 ;;  grs             4   13[COMRAM] unsigned long 
  8160 ;;  temp            2   23[COMRAM] struct .
  8161 ;;  bexp            1   18[COMRAM] unsigned char 
  8162 ;;  aexp            1   17[COMRAM] unsigned char 
  8163 ;;  sign            1   12[COMRAM] unsigned char 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  4    0[COMRAM] unsigned char 
  8166 ;; Registers used:
  8167 ;;		wreg, status,2, status,0, prodl, prodh
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8173 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8174 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8175 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8176 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8177 ;;Total ram usage:       25 bytes
  8178 ;; Hardware stack levels used: 1
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_efgtoa
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text23
  8187  0038B2                     __ptext23:
  8188                           	callstack 0
  8189  0038B2                     ___flmul:
  8190                           	callstack 24
  8191  0038B2  5004               	movf	(___flmul@b+3)^0,w,c
  8192  0038B4  0B80               	andlw	128
  8193  0038B6  6E0D               	movwf	___flmul@sign^0,c
  8194  0038B8  5004               	movf	(___flmul@b+3)^0,w,c
  8195  0038BA  2404               	addwf	(___flmul@b+3)^0,w,c
  8196  0038BC  6E13               	movwf	___flmul@bexp^0,c
  8197  0038BE  AE03               	btfss	(___flmul@b+2)^0,7,c
  8198  0038C0  EF64  F01C         	goto	u5031
  8199  0038C4  EF66  F01C         	goto	u5030
  8200  0038C8                     u5031:
  8201  0038C8  EF67  F01C         	goto	l4593
  8202  0038CC                     u5030:
  8203  0038CC  8013               	bsf	___flmul@bexp^0,0,c
  8204  0038CE                     l4593:
  8205  0038CE  5013               	movf	___flmul@bexp^0,w,c
  8206  0038D0  B4D8               	btfsc	status,2,c
  8207  0038D2  EF6D  F01C         	goto	u5041
  8208  0038D6  EF6F  F01C         	goto	u5040
  8209  0038DA                     u5041:
  8210  0038DA  EF82  F01C         	goto	l4601
  8211  0038DE                     u5040:
  8212  0038DE  2813               	incf	___flmul@bexp^0,w,c
  8213  0038E0  A4D8               	btfss	status,2,c
  8214  0038E2  EF75  F01C         	goto	u5051
  8215  0038E6  EF77  F01C         	goto	u5050
  8216  0038EA                     u5051:
  8217  0038EA  EF7F  F01C         	goto	l4599
  8218  0038EE                     u5050:
  8219  0038EE  0E00               	movlw	0
  8220  0038F0  6E01               	movwf	___flmul@b^0,c
  8221  0038F2  0E00               	movlw	0
  8222  0038F4  6E02               	movwf	(___flmul@b+1)^0,c
  8223  0038F6  0E00               	movlw	0
  8224  0038F8  6E03               	movwf	(___flmul@b+2)^0,c
  8225  0038FA  0E00               	movlw	0
  8226  0038FC  6E04               	movwf	(___flmul@b+3)^0,c
  8227  0038FE                     l4599:
  8228  0038FE  8E03               	bsf	(___flmul@b+2)^0,7,c
  8229  003900  EF8A  F01C         	goto	l4603
  8230  003904                     l4601:
  8231  003904  0E00               	movlw	0
  8232  003906  6E01               	movwf	___flmul@b^0,c
  8233  003908  0E00               	movlw	0
  8234  00390A  6E02               	movwf	(___flmul@b+1)^0,c
  8235  00390C  0E00               	movlw	0
  8236  00390E  6E03               	movwf	(___flmul@b+2)^0,c
  8237  003910  0E00               	movlw	0
  8238  003912  6E04               	movwf	(___flmul@b+3)^0,c
  8239  003914                     l4603:
  8240  003914  5008               	movf	(___flmul@a+3)^0,w,c
  8241  003916  0B80               	andlw	128
  8242  003918  1A0D               	xorwf	___flmul@sign^0,f,c
  8243  00391A  5008               	movf	(___flmul@a+3)^0,w,c
  8244  00391C  2408               	addwf	(___flmul@a+3)^0,w,c
  8245  00391E  6E12               	movwf	___flmul@aexp^0,c
  8246  003920  AE07               	btfss	(___flmul@a+2)^0,7,c
  8247  003922  EF95  F01C         	goto	u5061
  8248  003926  EF97  F01C         	goto	u5060
  8249  00392A                     u5061:
  8250  00392A  EF98  F01C         	goto	l4611
  8251  00392E                     u5060:
  8252  00392E  8012               	bsf	___flmul@aexp^0,0,c
  8253  003930                     l4611:
  8254  003930  5012               	movf	___flmul@aexp^0,w,c
  8255  003932  B4D8               	btfsc	status,2,c
  8256  003934  EF9E  F01C         	goto	u5071
  8257  003938  EFA0  F01C         	goto	u5070
  8258  00393C                     u5071:
  8259  00393C  EFB3  F01C         	goto	l4619
  8260  003940                     u5070:
  8261  003940  2812               	incf	___flmul@aexp^0,w,c
  8262  003942  A4D8               	btfss	status,2,c
  8263  003944  EFA6  F01C         	goto	u5081
  8264  003948  EFA8  F01C         	goto	u5080
  8265  00394C                     u5081:
  8266  00394C  EFB0  F01C         	goto	l4617
  8267  003950                     u5080:
  8268  003950  0E00               	movlw	0
  8269  003952  6E05               	movwf	___flmul@a^0,c
  8270  003954  0E00               	movlw	0
  8271  003956  6E06               	movwf	(___flmul@a+1)^0,c
  8272  003958  0E00               	movlw	0
  8273  00395A  6E07               	movwf	(___flmul@a+2)^0,c
  8274  00395C  0E00               	movlw	0
  8275  00395E  6E08               	movwf	(___flmul@a+3)^0,c
  8276  003960                     l4617:
  8277  003960  8E07               	bsf	(___flmul@a+2)^0,7,c
  8278  003962  EFBB  F01C         	goto	l1327
  8279  003966                     l4619:
  8280  003966  0E00               	movlw	0
  8281  003968  6E05               	movwf	___flmul@a^0,c
  8282  00396A  0E00               	movlw	0
  8283  00396C  6E06               	movwf	(___flmul@a+1)^0,c
  8284  00396E  0E00               	movlw	0
  8285  003970  6E07               	movwf	(___flmul@a+2)^0,c
  8286  003972  0E00               	movlw	0
  8287  003974  6E08               	movwf	(___flmul@a+3)^0,c
  8288  003976                     l1327:
  8289  003976  5012               	movf	___flmul@aexp^0,w,c
  8290  003978  B4D8               	btfsc	status,2,c
  8291  00397A  EFC1  F01C         	goto	u5091
  8292  00397E  EFC3  F01C         	goto	u5090
  8293  003982                     u5091:
  8294  003982  EFCB  F01C         	goto	l4623
  8295  003986                     u5090:
  8296  003986  5013               	movf	___flmul@bexp^0,w,c
  8297  003988  A4D8               	btfss	status,2,c
  8298  00398A  EFC9  F01C         	goto	u5101
  8299  00398E  EFCB  F01C         	goto	u5100
  8300  003992                     u5101:
  8301  003992  EFD5  F01C         	goto	l4627
  8302  003996                     u5100:
  8303  003996                     l4623:
  8304  003996  0E00               	movlw	0
  8305  003998  6E01               	movwf	?___flmul^0,c
  8306  00399A  0E00               	movlw	0
  8307  00399C  6E02               	movwf	(?___flmul+1)^0,c
  8308  00399E  0E00               	movlw	0
  8309  0039A0  6E03               	movwf	(?___flmul+2)^0,c
  8310  0039A2  0E00               	movlw	0
  8311  0039A4  6E04               	movwf	(?___flmul+3)^0,c
  8312  0039A6  EF6D  F01E         	goto	l1331
  8313  0039AA                     l4627:
  8314  0039AA  5007               	movf	(___flmul@a+2)^0,w,c
  8315  0039AC  0201               	mulwf	___flmul@b^0,c
  8316  0039AE  CFF3 F018          	movff	prodl,___flmul@temp
  8317  0039B2  CFF4 F019          	movff	prodh,___flmul@temp+1
  8318  0039B6  5018               	movf	___flmul@temp^0,w,c
  8319  0039B8  6E0E               	movwf	___flmul@grs^0,c
  8320  0039BA  6A0F               	clrf	(___flmul@grs+1)^0,c
  8321  0039BC  6A10               	clrf	(___flmul@grs+2)^0,c
  8322  0039BE  6A11               	clrf	(___flmul@grs+3)^0,c
  8323  0039C0  5019               	movf	(___flmul@temp+1)^0,w,c
  8324  0039C2  6E14               	movwf	___flmul@prod^0,c
  8325  0039C4  6A15               	clrf	(___flmul@prod+1)^0,c
  8326  0039C6  6A16               	clrf	(___flmul@prod+2)^0,c
  8327  0039C8  6A17               	clrf	(___flmul@prod+3)^0,c
  8328  0039CA  5006               	movf	(___flmul@a+1)^0,w,c
  8329  0039CC  0202               	mulwf	(___flmul@b+1)^0,c
  8330  0039CE  CFF3 F018          	movff	prodl,___flmul@temp
  8331  0039D2  CFF4 F019          	movff	prodh,___flmul@temp+1
  8332  0039D6  5018               	movf	___flmul@temp^0,w,c
  8333  0039D8  260E               	addwf	___flmul@grs^0,f,c
  8334  0039DA  0E00               	movlw	0
  8335  0039DC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8336  0039DE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8337  0039E0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8338  0039E2  5019               	movf	(___flmul@temp+1)^0,w,c
  8339  0039E4  2614               	addwf	___flmul@prod^0,f,c
  8340  0039E6  0E00               	movlw	0
  8341  0039E8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8342  0039EA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8343  0039EC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8344  0039EE  5005               	movf	___flmul@a^0,w,c
  8345  0039F0  0203               	mulwf	(___flmul@b+2)^0,c
  8346  0039F2  CFF3 F018          	movff	prodl,___flmul@temp
  8347  0039F6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8348  0039FA  5018               	movf	___flmul@temp^0,w,c
  8349  0039FC  260E               	addwf	___flmul@grs^0,f,c
  8350  0039FE  0E00               	movlw	0
  8351  003A00  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8352  003A02  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8353  003A04  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8354  003A06  5019               	movf	(___flmul@temp+1)^0,w,c
  8355  003A08  2614               	addwf	___flmul@prod^0,f,c
  8356  003A0A  0E00               	movlw	0
  8357  003A0C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8358  003A0E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8359  003A10  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8360  003A12  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8361  003A16  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8362  003A1A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8363  003A1E  6A0E               	clrf	___flmul@grs^0,c
  8364  003A20  5005               	movf	___flmul@a^0,w,c
  8365  003A22  0202               	mulwf	(___flmul@b+1)^0,c
  8366  003A24  CFF3 F018          	movff	prodl,___flmul@temp
  8367  003A28  CFF4 F019          	movff	prodh,___flmul@temp+1
  8368  003A2C  5018               	movf	___flmul@temp^0,w,c
  8369  003A2E  260E               	addwf	___flmul@grs^0,f,c
  8370  003A30  5019               	movf	(___flmul@temp+1)^0,w,c
  8371  003A32  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8372  003A34  0E00               	movlw	0
  8373  003A36  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8374  003A38  0E00               	movlw	0
  8375  003A3A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8376  003A3C  5006               	movf	(___flmul@a+1)^0,w,c
  8377  003A3E  0201               	mulwf	___flmul@b^0,c
  8378  003A40  CFF3 F018          	movff	prodl,___flmul@temp
  8379  003A44  CFF4 F019          	movff	prodh,___flmul@temp+1
  8380  003A48  5018               	movf	___flmul@temp^0,w,c
  8381  003A4A  260E               	addwf	___flmul@grs^0,f,c
  8382  003A4C  5019               	movf	(___flmul@temp+1)^0,w,c
  8383  003A4E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8384  003A50  0E00               	movlw	0
  8385  003A52  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8386  003A54  0E00               	movlw	0
  8387  003A56  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8388  003A58  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8389  003A5C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8390  003A60  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8391  003A64  6A0E               	clrf	___flmul@grs^0,c
  8392  003A66  5005               	movf	___flmul@a^0,w,c
  8393  003A68  0201               	mulwf	___flmul@b^0,c
  8394  003A6A  CFF3 F018          	movff	prodl,___flmul@temp
  8395  003A6E  CFF4 F019          	movff	prodh,___flmul@temp+1
  8396  003A72  5018               	movf	___flmul@temp^0,w,c
  8397  003A74  260E               	addwf	___flmul@grs^0,f,c
  8398  003A76  5019               	movf	(___flmul@temp+1)^0,w,c
  8399  003A78  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8400  003A7A  0E00               	movlw	0
  8401  003A7C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8402  003A7E  0E00               	movlw	0
  8403  003A80  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8404  003A82  5007               	movf	(___flmul@a+2)^0,w,c
  8405  003A84  0202               	mulwf	(___flmul@b+1)^0,c
  8406  003A86  CFF3 F018          	movff	prodl,___flmul@temp
  8407  003A8A  CFF4 F019          	movff	prodh,___flmul@temp+1
  8408  003A8E  5018               	movf	___flmul@temp^0,w,c
  8409  003A90  2614               	addwf	___flmul@prod^0,f,c
  8410  003A92  5019               	movf	(___flmul@temp+1)^0,w,c
  8411  003A94  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8412  003A96  0E00               	movlw	0
  8413  003A98  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8414  003A9A  0E00               	movlw	0
  8415  003A9C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8416  003A9E  5006               	movf	(___flmul@a+1)^0,w,c
  8417  003AA0  0203               	mulwf	(___flmul@b+2)^0,c
  8418  003AA2  CFF3 F018          	movff	prodl,___flmul@temp
  8419  003AA6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8420  003AAA  5018               	movf	___flmul@temp^0,w,c
  8421  003AAC  2614               	addwf	___flmul@prod^0,f,c
  8422  003AAE  5019               	movf	(___flmul@temp+1)^0,w,c
  8423  003AB0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8424  003AB2  0E00               	movlw	0
  8425  003AB4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8426  003AB6  0E00               	movlw	0
  8427  003AB8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8428  003ABA  5007               	movf	(___flmul@a+2)^0,w,c
  8429  003ABC  0203               	mulwf	(___flmul@b+2)^0,c
  8430  003ABE  CFF3 F018          	movff	prodl,___flmul@temp
  8431  003AC2  CFF4 F019          	movff	prodh,___flmul@temp+1
  8432  003AC6  5018               	movf	___flmul@temp^0,w,c
  8433  003AC8  6E09               	movwf	??___flmul^0,c
  8434  003ACA  5019               	movf	(___flmul@temp+1)^0,w,c
  8435  003ACC  6E0A               	movwf	(??___flmul+1)^0,c
  8436  003ACE  6A0B               	clrf	(??___flmul+2)^0,c
  8437  003AD0  6A0C               	clrf	(??___flmul+3)^0,c
  8438  003AD2  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8439  003AD6  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8440  003ADA  C009  F00A         	movff	??___flmul,??___flmul+1
  8441  003ADE  6A09               	clrf	??___flmul^0,c
  8442  003AE0  5009               	movf	??___flmul^0,w,c
  8443  003AE2  2614               	addwf	___flmul@prod^0,f,c
  8444  003AE4  500A               	movf	(??___flmul+1)^0,w,c
  8445  003AE6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8446  003AE8  500B               	movf	(??___flmul+2)^0,w,c
  8447  003AEA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8448  003AEC  500C               	movf	(??___flmul+3)^0,w,c
  8449  003AEE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8450  003AF0  C00E  F009         	movff	___flmul@grs,??___flmul
  8451  003AF4  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8452  003AF8  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8453  003AFC  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8454  003B00  0E19               	movlw	25
  8455  003B02  EF88  F01D         	goto	u5110
  8456  003B06                     u5115:
  8457  003B06  90D8               	bcf	status,0,c
  8458  003B08  320C               	rrcf	(??___flmul+3)^0,f,c
  8459  003B0A  320B               	rrcf	(??___flmul+2)^0,f,c
  8460  003B0C  320A               	rrcf	(??___flmul+1)^0,f,c
  8461  003B0E  3209               	rrcf	??___flmul^0,f,c
  8462  003B10                     u5110:
  8463  003B10  2EE8               	decfsz	wreg,f,c
  8464  003B12  EF83  F01D         	goto	u5115
  8465  003B16  5009               	movf	??___flmul^0,w,c
  8466  003B18  2614               	addwf	___flmul@prod^0,f,c
  8467  003B1A  500A               	movf	(??___flmul+1)^0,w,c
  8468  003B1C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8469  003B1E  500B               	movf	(??___flmul+2)^0,w,c
  8470  003B20  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8471  003B22  500C               	movf	(??___flmul+3)^0,w,c
  8472  003B24  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8473  003B26  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8474  003B2A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8475  003B2E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8476  003B32  6A0E               	clrf	___flmul@grs^0,c
  8477  003B34  5012               	movf	___flmul@aexp^0,w,c
  8478  003B36  C013  F009         	movff	___flmul@bexp,??___flmul
  8479  003B3A  6A0A               	clrf	(??___flmul+1)^0,c
  8480  003B3C  2609               	addwf	??___flmul^0,f,c
  8481  003B3E  0E00               	movlw	0
  8482  003B40  220A               	addwfc	(??___flmul+1)^0,f,c
  8483  003B42  0E82               	movlw	130
  8484  003B44  2409               	addwf	??___flmul^0,w,c
  8485  003B46  6E18               	movwf	___flmul@temp^0,c
  8486  003B48  0EFF               	movlw	255
  8487  003B4A  200A               	addwfc	(??___flmul+1)^0,w,c
  8488  003B4C  6E19               	movwf	(___flmul@temp+1)^0,c
  8489  003B4E  EFBE  F01D         	goto	l4675
  8490  003B52                     l4669:
  8491  003B52  90D8               	bcf	status,0,c
  8492  003B54  3614               	rlcf	___flmul@prod^0,f,c
  8493  003B56  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8494  003B58  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8495  003B5A  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8496  003B5C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8497  003B5E  EFB3  F01D         	goto	u5121
  8498  003B62  EFB5  F01D         	goto	u5120
  8499  003B66                     u5121:
  8500  003B66  EFB6  F01D         	goto	l1334
  8501  003B6A                     u5120:
  8502  003B6A  8014               	bsf	___flmul@prod^0,0,c
  8503  003B6C                     l1334:
  8504  003B6C  90D8               	bcf	status,0,c
  8505  003B6E  360E               	rlcf	___flmul@grs^0,f,c
  8506  003B70  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8507  003B72  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8508  003B74  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8509  003B76  0618               	decf	___flmul@temp^0,f,c
  8510  003B78  A0D8               	btfss	status,0,c
  8511  003B7A  0619               	decf	(___flmul@temp+1)^0,f,c
  8512  003B7C                     l4675:
  8513  003B7C  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8514  003B7E  EFC3  F01D         	goto	u5131
  8515  003B82  EFC5  F01D         	goto	u5130
  8516  003B86                     u5131:
  8517  003B86  EFA9  F01D         	goto	l4669
  8518  003B8A                     u5130:
  8519  003B8A  0E00               	movlw	0
  8520  003B8C  6E12               	movwf	___flmul@aexp^0,c
  8521  003B8E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8522  003B90  EFCC  F01D         	goto	u5141
  8523  003B94  EFCE  F01D         	goto	u5140
  8524  003B98                     u5141:
  8525  003B98  EFF2  F01D         	goto	l1336
  8526  003B9C                     u5140:
  8527  003B9C  0EFF               	movlw	255
  8528  003B9E  140E               	andwf	___flmul@grs^0,w,c
  8529  003BA0  6E09               	movwf	??___flmul^0,c
  8530  003BA2  0EFF               	movlw	255
  8531  003BA4  140F               	andwf	(___flmul@grs+1)^0,w,c
  8532  003BA6  6E0A               	movwf	(??___flmul+1)^0,c
  8533  003BA8  0EFF               	movlw	255
  8534  003BAA  1410               	andwf	(___flmul@grs+2)^0,w,c
  8535  003BAC  6E0B               	movwf	(??___flmul+2)^0,c
  8536  003BAE  0E7F               	movlw	127
  8537  003BB0  1411               	andwf	(___flmul@grs+3)^0,w,c
  8538  003BB2  6E0C               	movwf	(??___flmul+3)^0,c
  8539  003BB4  5009               	movf	??___flmul^0,w,c
  8540  003BB6  100A               	iorwf	(??___flmul+1)^0,w,c
  8541  003BB8  100B               	iorwf	(??___flmul+2)^0,w,c
  8542  003BBA  100C               	iorwf	(??___flmul+3)^0,w,c
  8543  003BBC  B4D8               	btfsc	status,2,c
  8544  003BBE  EFE3  F01D         	goto	u5151
  8545  003BC2  EFE5  F01D         	goto	u5150
  8546  003BC6                     u5151:
  8547  003BC6  EFE9  F01D         	goto	l1337
  8548  003BCA                     u5150:
  8549  003BCA                     l4683:
  8550  003BCA  0E01               	movlw	1
  8551  003BCC  6E12               	movwf	___flmul@aexp^0,c
  8552  003BCE  EFF2  F01D         	goto	l1336
  8553  003BD2                     l1337:
  8554  003BD2  A014               	btfss	___flmul@prod^0,0,c
  8555  003BD4  EFEE  F01D         	goto	u5161
  8556  003BD8  EFF0  F01D         	goto	u5160
  8557  003BDC                     u5161:
  8558  003BDC  EFF2  F01D         	goto	l1336
  8559  003BE0                     u5160:
  8560  003BE0  EFE5  F01D         	goto	l4683
  8561  003BE4                     l1336:
  8562  003BE4  5012               	movf	___flmul@aexp^0,w,c
  8563  003BE6  B4D8               	btfsc	status,2,c
  8564  003BE8  EFF8  F01D         	goto	u5171
  8565  003BEC  EFFA  F01D         	goto	u5170
  8566  003BF0                     u5171:
  8567  003BF0  EF1E  F01E         	goto	l4695
  8568  003BF4                     u5170:
  8569  003BF4  0E01               	movlw	1
  8570  003BF6  2614               	addwf	___flmul@prod^0,f,c
  8571  003BF8  0E00               	movlw	0
  8572  003BFA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8573  003BFC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8574  003BFE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8575  003C00  A017               	btfss	(___flmul@prod+3)^0,0,c
  8576  003C02  EF05  F01E         	goto	u5181
  8577  003C06  EF07  F01E         	goto	u5180
  8578  003C0A                     u5181:
  8579  003C0A  EF1E  F01E         	goto	l4695
  8580  003C0E                     u5180:
  8581  003C0E  C014  F009         	movff	___flmul@prod,??___flmul
  8582  003C12  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8583  003C16  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8584  003C1A  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8585  003C1E  340C               	rlcf	(??___flmul+3)^0,w,c
  8586  003C20  320C               	rrcf	(??___flmul+3)^0,f,c
  8587  003C22  320B               	rrcf	(??___flmul+2)^0,f,c
  8588  003C24  320A               	rrcf	(??___flmul+1)^0,f,c
  8589  003C26  3209               	rrcf	??___flmul^0,f,c
  8590  003C28  C009  F014         	movff	??___flmul,___flmul@prod
  8591  003C2C  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8592  003C30  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8593  003C34  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8594  003C38  4A18               	infsnz	___flmul@temp^0,f,c
  8595  003C3A  2A19               	incf	(___flmul@temp+1)^0,f,c
  8596  003C3C                     l4695:
  8597  003C3C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8598  003C3E  EF29  F01E         	goto	u5191
  8599  003C42  5019               	movf	(___flmul@temp+1)^0,w,c
  8600  003C44  E108               	bnz	u5190
  8601  003C46  2818               	incf	___flmul@temp^0,w,c
  8602  003C48  A0D8               	btfss	status,0,c
  8603  003C4A  EF29  F01E         	goto	u5191
  8604  003C4E  EF2B  F01E         	goto	u5190
  8605  003C52                     u5191:
  8606  003C52  EF35  F01E         	goto	l4699
  8607  003C56                     u5190:
  8608  003C56  0E00               	movlw	0
  8609  003C58  6E14               	movwf	___flmul@prod^0,c
  8610  003C5A  0E00               	movlw	0
  8611  003C5C  6E15               	movwf	(___flmul@prod+1)^0,c
  8612  003C5E  0E80               	movlw	128
  8613  003C60  6E16               	movwf	(___flmul@prod+2)^0,c
  8614  003C62  0E7F               	movlw	127
  8615  003C64  6E17               	movwf	(___flmul@prod+3)^0,c
  8616  003C66  EF63  F01E         	goto	l4711
  8617  003C6A                     l4699:
  8618  003C6A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8619  003C6C  EF42  F01E         	goto	u5200
  8620  003C70  5019               	movf	(___flmul@temp+1)^0,w,c
  8621  003C72  E106               	bnz	u5201
  8622  003C74  0418               	decf	___flmul@temp^0,w,c
  8623  003C76  B0D8               	btfsc	status,0,c
  8624  003C78  EF40  F01E         	goto	u5201
  8625  003C7C  EF42  F01E         	goto	u5200
  8626  003C80                     u5201:
  8627  003C80  EF4E  F01E         	goto	l1344
  8628  003C84                     u5200:
  8629  003C84  0E00               	movlw	0
  8630  003C86  6E14               	movwf	___flmul@prod^0,c
  8631  003C88  0E00               	movlw	0
  8632  003C8A  6E15               	movwf	(___flmul@prod+1)^0,c
  8633  003C8C  0E00               	movlw	0
  8634  003C8E  6E16               	movwf	(___flmul@prod+2)^0,c
  8635  003C90  0E00               	movlw	0
  8636  003C92  6E17               	movwf	(___flmul@prod+3)^0,c
  8637  003C94  0E00               	movlw	0
  8638  003C96  6E0D               	movwf	___flmul@sign^0,c
  8639  003C98  EF63  F01E         	goto	l4711
  8640  003C9C                     l1344:
  8641  003C9C  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8642  003CA0  0EFF               	movlw	255
  8643  003CA2  1614               	andwf	___flmul@prod^0,f,c
  8644  003CA4  0EFF               	movlw	255
  8645  003CA6  1615               	andwf	(___flmul@prod+1)^0,f,c
  8646  003CA8  0E7F               	movlw	127
  8647  003CAA  1616               	andwf	(___flmul@prod+2)^0,f,c
  8648  003CAC  0E00               	movlw	0
  8649  003CAE  1617               	andwf	(___flmul@prod+3)^0,f,c
  8650  003CB0  A013               	btfss	___flmul@bexp^0,0,c
  8651  003CB2  EF5D  F01E         	goto	u5211
  8652  003CB6  EF5F  F01E         	goto	u5210
  8653  003CBA                     u5211:
  8654  003CBA  EF60  F01E         	goto	l4709
  8655  003CBE                     u5210:
  8656  003CBE  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8657  003CC0                     l4709:
  8658  003CC0  90D8               	bcf	status,0,c
  8659  003CC2  3013               	rrcf	___flmul@bexp^0,w,c
  8660  003CC4  6E17               	movwf	(___flmul@prod+3)^0,c
  8661  003CC6                     l4711:
  8662  003CC6  500D               	movf	___flmul@sign^0,w,c
  8663  003CC8  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8664  003CCA  C014  F001         	movff	___flmul@prod,?___flmul
  8665  003CCE  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8666  003CD2  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8667  003CD6  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8668  003CDA                     l1331:
  8669  003CDA  0012               	return		;funcret
  8670  003CDC                     __end_of___flmul:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function ___fleq *****************
  8674 ;; Defined at:
  8675 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  ff1             4    0[COMRAM] unsigned char 
  8678 ;;  ff2             4    4[COMRAM] unsigned char 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;		None               void
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8690 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;Total ram usage:       12 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_efgtoa
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text24
  8704  005B1A                     __ptext24:
  8705                           	callstack 0
  8706  005B1A                     ___fleq:
  8707                           	callstack 24
  8708  005B1A  0E00               	movlw	0
  8709  005B1C  1401               	andwf	___fleq@ff1^0,w,c
  8710  005B1E  6E09               	movwf	??___fleq^0,c
  8711  005B20  0E00               	movlw	0
  8712  005B22  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8713  005B24  6E0A               	movwf	(??___fleq+1)^0,c
  8714  005B26  0E80               	movlw	128
  8715  005B28  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8716  005B2A  6E0B               	movwf	(??___fleq+2)^0,c
  8717  005B2C  0E7F               	movlw	127
  8718  005B2E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8719  005B30  6E0C               	movwf	(??___fleq+3)^0,c
  8720  005B32  5009               	movf	??___fleq^0,w,c
  8721  005B34  100A               	iorwf	(??___fleq+1)^0,w,c
  8722  005B36  100B               	iorwf	(??___fleq+2)^0,w,c
  8723  005B38  100C               	iorwf	(??___fleq+3)^0,w,c
  8724  005B3A  A4D8               	btfss	status,2,c
  8725  005B3C  EFA2  F02D         	goto	u5341
  8726  005B40  EFA4  F02D         	goto	u5340
  8727  005B44                     u5341:
  8728  005B44  EFAC  F02D         	goto	l4807
  8729  005B48                     u5340:
  8730  005B48  0E00               	movlw	0
  8731  005B4A  6E01               	movwf	___fleq@ff1^0,c
  8732  005B4C  0E00               	movlw	0
  8733  005B4E  6E02               	movwf	(___fleq@ff1+1)^0,c
  8734  005B50  0E00               	movlw	0
  8735  005B52  6E03               	movwf	(___fleq@ff1+2)^0,c
  8736  005B54  0E00               	movlw	0
  8737  005B56  6E04               	movwf	(___fleq@ff1+3)^0,c
  8738  005B58                     l4807:
  8739  005B58  0E00               	movlw	0
  8740  005B5A  1405               	andwf	___fleq@ff2^0,w,c
  8741  005B5C  6E09               	movwf	??___fleq^0,c
  8742  005B5E  0E00               	movlw	0
  8743  005B60  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8744  005B62  6E0A               	movwf	(??___fleq+1)^0,c
  8745  005B64  0E80               	movlw	128
  8746  005B66  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8747  005B68  6E0B               	movwf	(??___fleq+2)^0,c
  8748  005B6A  0E7F               	movlw	127
  8749  005B6C  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8750  005B6E  6E0C               	movwf	(??___fleq+3)^0,c
  8751  005B70  5009               	movf	??___fleq^0,w,c
  8752  005B72  100A               	iorwf	(??___fleq+1)^0,w,c
  8753  005B74  100B               	iorwf	(??___fleq+2)^0,w,c
  8754  005B76  100C               	iorwf	(??___fleq+3)^0,w,c
  8755  005B78  A4D8               	btfss	status,2,c
  8756  005B7A  EFC1  F02D         	goto	u5351
  8757  005B7E  EFC3  F02D         	goto	u5350
  8758  005B82                     u5351:
  8759  005B82  EFCB  F02D         	goto	l4811
  8760  005B86                     u5350:
  8761  005B86  0E00               	movlw	0
  8762  005B88  6E05               	movwf	___fleq@ff2^0,c
  8763  005B8A  0E00               	movlw	0
  8764  005B8C  6E06               	movwf	(___fleq@ff2+1)^0,c
  8765  005B8E  0E00               	movlw	0
  8766  005B90  6E07               	movwf	(___fleq@ff2+2)^0,c
  8767  005B92  0E00               	movlw	0
  8768  005B94  6E08               	movwf	(___fleq@ff2+3)^0,c
  8769  005B96                     l4811:
  8770  005B96  5005               	movf	___fleq@ff2^0,w,c
  8771  005B98  1801               	xorwf	___fleq@ff1^0,w,c
  8772  005B9A  E10F               	bnz	u5360
  8773  005B9C  5006               	movf	(___fleq@ff2+1)^0,w,c
  8774  005B9E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8775  005BA0  E10C               	bnz	u5360
  8776  005BA2  5007               	movf	(___fleq@ff2+2)^0,w,c
  8777  005BA4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8778  005BA6  E109               	bnz	u5360
  8779  005BA8  5008               	movf	(___fleq@ff2+3)^0,w,c
  8780  005BAA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8781  005BAC  B4D8               	btfsc	status,2,c
  8782  005BAE  EFDB  F02D         	goto	u5361
  8783  005BB2  EFDD  F02D         	goto	u5360
  8784  005BB6                     u5361:
  8785  005BB6  EFE0  F02D         	goto	l4815
  8786  005BBA                     u5360:
  8787  005BBA  90D8               	bcf	status,0,c
  8788  005BBC  EFE1  F02D         	goto	l972
  8789  005BC0                     l4815:
  8790  005BC0  80D8               	bsf	status,0,c
  8791  005BC2                     l972:
  8792  005BC2  0012               	return		;funcret
  8793  005BC4                     __end_of___fleq:
  8794                           	callstack 0
  8795                           
  8796 ;; *************** function ___awmod *****************
  8797 ;; Defined at:
  8798 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  dividend        2    0[COMRAM] int 
  8801 ;;  divisor         2    2[COMRAM] int 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  sign            1    5[COMRAM] unsigned char 
  8804 ;;  counter         1    4[COMRAM] unsigned char 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  2    0[COMRAM] int 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8814 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;Total ram usage:        6 bytes
  8819 ;; Hardware stack levels used: 1
  8820 ;; This function calls:
  8821 ;;		Nothing
  8822 ;; This function is called by:
  8823 ;;		_efgtoa
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text25
  8828  005A6A                     __ptext25:
  8829                           	callstack 0
  8830  005A6A                     ___awmod:
  8831                           	callstack 24
  8832  005A6A  0E00               	movlw	0
  8833  005A6C  6E06               	movwf	___awmod@sign^0,c
  8834  005A6E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8835  005A70  EF3E  F02D         	goto	u5280
  8836  005A74  EF3C  F02D         	goto	u5281
  8837  005A78                     u5281:
  8838  005A78  EF44  F02D         	goto	l4775
  8839  005A7C                     u5280:
  8840  005A7C  6C01               	negf	___awmod@dividend^0,c
  8841  005A7E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8842  005A80  B0D8               	btfsc	status,0,c
  8843  005A82  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8844  005A84  0E01               	movlw	1
  8845  005A86  6E06               	movwf	___awmod@sign^0,c
  8846  005A88                     l4775:
  8847  005A88  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8848  005A8A  EF4B  F02D         	goto	u5290
  8849  005A8E  EF49  F02D         	goto	u5291
  8850  005A92                     u5291:
  8851  005A92  EF4F  F02D         	goto	l4779
  8852  005A96                     u5290:
  8853  005A96  6C03               	negf	___awmod@divisor^0,c
  8854  005A98  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8855  005A9A  B0D8               	btfsc	status,0,c
  8856  005A9C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8857  005A9E                     l4779:
  8858  005A9E  5003               	movf	___awmod@divisor^0,w,c
  8859  005AA0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8860  005AA2  B4D8               	btfsc	status,2,c
  8861  005AA4  EF56  F02D         	goto	u5301
  8862  005AA8  EF58  F02D         	goto	u5300
  8863  005AAC                     u5301:
  8864  005AAC  EF7C  F02D         	goto	l4795
  8865  005AB0                     u5300:
  8866  005AB0  0E01               	movlw	1
  8867  005AB2  6E05               	movwf	___awmod@counter^0,c
  8868  005AB4  EF60  F02D         	goto	l4785
  8869  005AB8                     l4783:
  8870  005AB8  90D8               	bcf	status,0,c
  8871  005ABA  3603               	rlcf	___awmod@divisor^0,f,c
  8872  005ABC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8873  005ABE  2A05               	incf	___awmod@counter^0,f,c
  8874  005AC0                     l4785:
  8875  005AC0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8876  005AC2  EF65  F02D         	goto	u5311
  8877  005AC6  EF67  F02D         	goto	u5310
  8878  005ACA                     u5311:
  8879  005ACA  EF5C  F02D         	goto	l4783
  8880  005ACE                     u5310:
  8881  005ACE                     l4787:
  8882  005ACE  5003               	movf	___awmod@divisor^0,w,c
  8883  005AD0  5C01               	subwf	___awmod@dividend^0,w,c
  8884  005AD2  5004               	movf	(___awmod@divisor+1)^0,w,c
  8885  005AD4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8886  005AD6  A0D8               	btfss	status,0,c
  8887  005AD8  EF70  F02D         	goto	u5321
  8888  005ADC  EF72  F02D         	goto	u5320
  8889  005AE0                     u5321:
  8890  005AE0  EF76  F02D         	goto	l4791
  8891  005AE4                     u5320:
  8892  005AE4  5003               	movf	___awmod@divisor^0,w,c
  8893  005AE6  5E01               	subwf	___awmod@dividend^0,f,c
  8894  005AE8  5004               	movf	(___awmod@divisor+1)^0,w,c
  8895  005AEA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8896  005AEC                     l4791:
  8897  005AEC  90D8               	bcf	status,0,c
  8898  005AEE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8899  005AF0  3203               	rrcf	___awmod@divisor^0,f,c
  8900  005AF2  2E05               	decfsz	___awmod@counter^0,f,c
  8901  005AF4  EF67  F02D         	goto	l4787
  8902  005AF8                     l4795:
  8903  005AF8  5006               	movf	___awmod@sign^0,w,c
  8904  005AFA  B4D8               	btfsc	status,2,c
  8905  005AFC  EF82  F02D         	goto	u5331
  8906  005B00  EF84  F02D         	goto	u5330
  8907  005B04                     u5331:
  8908  005B04  EF88  F02D         	goto	l4799
  8909  005B08                     u5330:
  8910  005B08  6C01               	negf	___awmod@dividend^0,c
  8911  005B0A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8912  005B0C  B0D8               	btfsc	status,0,c
  8913  005B0E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8914  005B10                     l4799:
  8915  005B10  C001  F001         	movff	___awmod@dividend,?___awmod
  8916  005B14  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8917  005B18  0012               	return		;funcret
  8918  005B1A                     __end_of___awmod:
  8919                           	callstack 0
  8920                           
  8921 ;; *************** function _dtoa *****************
  8922 ;; Defined at:
  8923 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8926 ;;		 -> sprintf@f(6), 
  8927 ;;  d               8   29[COMRAM] long long 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  n               8   53[COMRAM] long long 
  8930 ;;  i               2   61[COMRAM] int 
  8931 ;;  s               2   51[COMRAM] int 
  8932 ;;  w               2   49[COMRAM] int 
  8933 ;;  p               2   47[COMRAM] int 
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  2   27[COMRAM] int 
  8936 ;; Registers used:
  8937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8943 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;Total ram usage:       36 bytes
  8948 ;; Hardware stack levels used: 1
  8949 ;; Hardware stack levels required when called: 4
  8950 ;; This function calls:
  8951 ;;		___aodiv
  8952 ;;		___aomod
  8953 ;;		_abs
  8954 ;;		_pad
  8955 ;; This function is called by:
  8956 ;;		_vfpfcnvrt
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text26
  8961  004076                     __ptext26:
  8962                           	callstack 0
  8963  004076                     _dtoa:
  8964                           	callstack 21
  8965  004076                     
  8966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8967  004076  C01E  F036         	movff	dtoa@d,dtoa@n
  8968  00407A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8969  00407E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8970  004082  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8971  004086  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8972  00408A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8973  00408E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8974  004092  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8975  004096                     
  8976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8977  004096  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8978  004098  EF50  F020         	goto	u5811
  8979  00409C  EF53  F020         	goto	u5810
  8980  0040A0                     u5811:
  8981  0040A0  0E01               	movlw	1
  8982  0040A2  EF54  F020         	goto	u5820
  8983  0040A6                     u5810:
  8984  0040A6  0E00               	movlw	0
  8985  0040A8                     u5820:
  8986  0040A8  6E34               	movwf	dtoa@s^0,c
  8987  0040AA  6A35               	clrf	(dtoa@s+1)^0,c
  8988                           
  8989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8990  0040AC  5034               	movf	dtoa@s^0,w,c
  8991  0040AE  1035               	iorwf	(dtoa@s+1)^0,w,c
  8992  0040B0  B4D8               	btfsc	status,2,c
  8993  0040B2  EF5D  F020         	goto	u5831
  8994  0040B6  EF5F  F020         	goto	u5830
  8995  0040BA                     u5831:
  8996  0040BA  EF6F  F020         	goto	l5005
  8997  0040BE                     u5830:
  8998  0040BE                     
  8999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9000  0040BE  1E3D               	comf	(dtoa@n+7)^0,f,c
  9001  0040C0  1E3C               	comf	(dtoa@n+6)^0,f,c
  9002  0040C2  1E3B               	comf	(dtoa@n+5)^0,f,c
  9003  0040C4  1E3A               	comf	(dtoa@n+4)^0,f,c
  9004  0040C6  1E39               	comf	(dtoa@n+3)^0,f,c
  9005  0040C8  1E38               	comf	(dtoa@n+2)^0,f,c
  9006  0040CA  1E37               	comf	(dtoa@n+1)^0,f,c
  9007  0040CC  6C36               	negf	dtoa@n^0,c
  9008  0040CE  0E00               	movlw	0
  9009  0040D0  2237               	addwfc	(dtoa@n+1)^0,f,c
  9010  0040D2  2238               	addwfc	(dtoa@n+2)^0,f,c
  9011  0040D4  2239               	addwfc	(dtoa@n+3)^0,f,c
  9012  0040D6  223A               	addwfc	(dtoa@n+4)^0,f,c
  9013  0040D8  223B               	addwfc	(dtoa@n+5)^0,f,c
  9014  0040DA  223C               	addwfc	(dtoa@n+6)^0,f,c
  9015  0040DC  223D               	addwfc	(dtoa@n+7)^0,f,c
  9016  0040DE                     l5005:
  9017                           
  9018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9019  0040DE  0101               	movlb	1	; () banked
  9020  0040E0  BF21               	btfsc	(_prec+1)& (0+255),7,b
  9021  0040E2  EF75  F020         	goto	u5841
  9022  0040E6  EF77  F020         	goto	u5840
  9023  0040EA                     u5841:
  9024  0040EA  EF78  F020         	goto	l5009
  9025  0040EE                     u5840:
  9026  0040EE                     
  9027                           ; BSR set to: 1
  9028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9029  0040EE  9322               	bcf	_flags& (0+255),1,b
  9030  0040F0                     l5009:
  9031                           
  9032                           ; BSR set to: 1
  9033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9034  0040F0  BF21               	btfsc	(_prec+1)& (0+255),7,b
  9035  0040F2  EF85  F020         	goto	u5850
  9036  0040F6  5121               	movf	(_prec+1)& (0+255),w,b
  9037  0040F8  E106               	bnz	u5851
  9038  0040FA  0520               	decf	_prec& (0+255),w,b
  9039  0040FC  B0D8               	btfsc	status,0,c
  9040  0040FE  EF83  F020         	goto	u5851
  9041  004102  EF85  F020         	goto	u5850
  9042  004106                     u5851:
  9043  004106  EF8B  F020         	goto	l1445
  9044  00410A                     u5850:
  9045  00410A                     
  9046                           ; BSR set to: 1
  9047  00410A  0E00               	movlw	0
  9048  00410C  6E31               	movwf	(dtoa@p+1)^0,c
  9049  00410E  0E01               	movlw	1
  9050  004110  6E30               	movwf	dtoa@p^0,c
  9051  004112  EF8F  F020         	goto	l1447
  9052  004116                     l1445:
  9053                           
  9054                           ; BSR set to: 1
  9055  004116  C120  F030         	movff	_prec,dtoa@p
  9056  00411A  C121  F031         	movff	_prec+1,dtoa@p+1
  9057  00411E                     l1447:
  9058                           
  9059                           ; BSR set to: 1
  9060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9061  00411E  C11E  F032         	movff	_width,dtoa@w
  9062  004122  C11F  F033         	movff	_width+1,dtoa@w+1
  9063  004126                     
  9064                           ; BSR set to: 1
  9065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9066  004126  5034               	movf	dtoa@s^0,w,c
  9067  004128  1035               	iorwf	(dtoa@s+1)^0,w,c
  9068  00412A  A4D8               	btfss	status,2,c
  9069  00412C  EF9A  F020         	goto	u5861
  9070  004130  EF9C  F020         	goto	u5860
  9071  004134                     u5861:
  9072  004134  EFA3  F020         	goto	l5017
  9073  004138                     u5860:
  9074  004138                     
  9075                           ; BSR set to: 1
  9076  004138  A522               	btfss	_flags& (0+255),2,b
  9077  00413A  EFA1  F020         	goto	u5871
  9078  00413E  EFA3  F020         	goto	u5870
  9079  004142                     u5871:
  9080  004142  EFA6  F020         	goto	l5019
  9081  004146                     u5870:
  9082  004146                     l5017:
  9083                           
  9084                           ; BSR set to: 1
  9085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  9086  004146  0632               	decf	dtoa@w^0,f,c
  9087  004148  A0D8               	btfss	status,0,c
  9088  00414A  0633               	decf	(dtoa@w+1)^0,f,c
  9089  00414C                     l5019:
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9093  00414C  0E00               	movlw	0
  9094  00414E  6E3F               	movwf	(dtoa@i+1)^0,c
  9095  004150  0E4F               	movlw	79
  9096  004152  6E3E               	movwf	dtoa@i^0,c
  9097  004154                     
  9098                           ; BSR set to: 1
  9099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9100  004154  0E00               	movlw	0
  9101  004156  6F80               	movwf	(_dbuf+79)& (0+255),b
  9102                           
  9103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9104  004158  EF2A  F021         	goto	l5033
  9105  00415C                     l5023:
  9106                           
  9107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  9108  00415C  063E               	decf	dtoa@i^0,f,c
  9109  00415E  A0D8               	btfss	status,0,c
  9110  004160  063F               	decf	(dtoa@i+1)^0,f,c
  9111  004162                     
  9112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9113  004162  0E31               	movlw	low _dbuf
  9114  004164  243E               	addwf	dtoa@i^0,w,c
  9115  004166  6ED9               	movwf	fsr2l,c
  9116  004168  0E01               	movlw	high _dbuf
  9117  00416A  203F               	addwfc	(dtoa@i+1)^0,w,c
  9118  00416C  6EDA               	movwf	fsr2h,c
  9119  00416E  C036  F001         	movff	dtoa@n,___aomod@dividend
  9120  004172  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9121  004176  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9122  00417A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9123  00417E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9124  004182  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9125  004186  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9126  00418A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9127  00418E  0E0A               	movlw	10
  9128  004190  6E09               	movwf	___aomod@divisor^0,c
  9129  004192  0E00               	movlw	0
  9130  004194  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9131  004196  0E00               	movlw	0
  9132  004198  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9133  00419A  0E00               	movlw	0
  9134  00419C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9135  00419E  0E00               	movlw	0
  9136  0041A0  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9137  0041A2  0E00               	movlw	0
  9138  0041A4  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9139  0041A6  0E00               	movlw	0
  9140  0041A8  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9141  0041AA  0E00               	movlw	0
  9142  0041AC  6E10               	movwf	(___aomod@divisor+7)^0,c
  9143  0041AE  ECDE  F026         	call	___aomod	;wreg free
  9144  0041B2  C001  F026         	movff	?___aomod,??_dtoa
  9145  0041B6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9146  0041BA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9147  0041BE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9148  0041C2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9149  0041C6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9150  0041CA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9151  0041CE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9152  0041D2  C026  F013         	movff	??_dtoa,abs@a
  9153  0041D6  C028  F014         	movff	??_dtoa+2,abs@a+1
  9154  0041DA  EC74  F031         	call	_abs	;wreg free
  9155  0041DE  5013               	movf	?_abs^0,w,c
  9156  0041E0  0F30               	addlw	48
  9157  0041E2  6EDF               	movwf	indf2,c
  9158  0041E4                     
  9159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  9160  0041E4  0630               	decf	dtoa@p^0,f,c
  9161  0041E6  A0D8               	btfss	status,0,c
  9162  0041E8  0631               	decf	(dtoa@p+1)^0,f,c
  9163  0041EA                     
  9164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  9165  0041EA  0632               	decf	dtoa@w^0,f,c
  9166  0041EC  A0D8               	btfss	status,0,c
  9167  0041EE  0633               	decf	(dtoa@w+1)^0,f,c
  9168  0041F0                     
  9169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9170  0041F0  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9171  0041F4  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9172  0041F8  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9173  0041FC  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9174  004200  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9175  004204  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9176  004208  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9177  00420C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9178  004210  0E0A               	movlw	10
  9179  004212  6E09               	movwf	___aodiv@divisor^0,c
  9180  004214  0E00               	movlw	0
  9181  004216  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9182  004218  0E00               	movlw	0
  9183  00421A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9184  00421C  0E00               	movlw	0
  9185  00421E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9186  004220  0E00               	movlw	0
  9187  004222  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9188  004224  0E00               	movlw	0
  9189  004226  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9190  004228  0E00               	movlw	0
  9191  00422A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9192  00422C  0E00               	movlw	0
  9193  00422E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9194  004230  EC1A  F026         	call	___aodiv	;wreg free
  9195  004234  C001  F036         	movff	?___aodiv,dtoa@n
  9196  004238  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9197  00423C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9198  004240  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9199  004244  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9200  004248  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9201  00424C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9202  004250  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9203  004254                     l5033:
  9204                           
  9205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9206  004254  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9207  004256  EF35  F021         	goto	u5881
  9208  00425A  503F               	movf	(dtoa@i+1)^0,w,c
  9209  00425C  E108               	bnz	u5880
  9210  00425E  043E               	decf	dtoa@i^0,w,c
  9211  004260  A0D8               	btfss	status,0,c
  9212  004262  EF35  F021         	goto	u5881
  9213  004266  EF37  F021         	goto	u5880
  9214  00426A                     u5881:
  9215  00426A  EF68  F021         	goto	l5043
  9216  00426E                     u5880:
  9217  00426E  5036               	movf	dtoa@n^0,w,c
  9218  004270  1037               	iorwf	(dtoa@n+1)^0,w,c
  9219  004272  1038               	iorwf	(dtoa@n+2)^0,w,c
  9220  004274  1039               	iorwf	(dtoa@n+3)^0,w,c
  9221  004276  103A               	iorwf	(dtoa@n+4)^0,w,c
  9222  004278  103B               	iorwf	(dtoa@n+5)^0,w,c
  9223  00427A  103C               	iorwf	(dtoa@n+6)^0,w,c
  9224  00427C  103D               	iorwf	(dtoa@n+7)^0,w,c
  9225  00427E  A4D8               	btfss	status,2,c
  9226  004280  EF44  F021         	goto	u5891
  9227  004284  EF46  F021         	goto	u5890
  9228  004288                     u5891:
  9229  004288  EFAE  F020         	goto	l5023
  9230  00428C                     u5890:
  9231  00428C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9232  00428E  EF53  F021         	goto	u5900
  9233  004292  5031               	movf	(dtoa@p+1)^0,w,c
  9234  004294  E106               	bnz	u5901
  9235  004296  0430               	decf	dtoa@p^0,w,c
  9236  004298  B0D8               	btfsc	status,0,c
  9237  00429A  EF51  F021         	goto	u5901
  9238  00429E  EF53  F021         	goto	u5900
  9239  0042A2                     u5901:
  9240  0042A2  EFAE  F020         	goto	l5023
  9241  0042A6                     u5900:
  9242  0042A6  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9243  0042A8  EF5E  F021         	goto	u5911
  9244  0042AC  5033               	movf	(dtoa@w+1)^0,w,c
  9245  0042AE  E108               	bnz	u5910
  9246  0042B0  0432               	decf	dtoa@w^0,w,c
  9247  0042B2  A0D8               	btfss	status,0,c
  9248  0042B4  EF5E  F021         	goto	u5911
  9249  0042B8  EF60  F021         	goto	u5910
  9250  0042BC                     u5911:
  9251  0042BC  EF68  F021         	goto	l5043
  9252  0042C0                     u5910:
  9253  0042C0  0101               	movlb	1	; () banked
  9254  0042C2  B322               	btfsc	_flags& (0+255),1,b
  9255  0042C4  EF66  F021         	goto	u5921
  9256  0042C8  EF68  F021         	goto	u5920
  9257  0042CC                     u5921:
  9258  0042CC  EFAE  F020         	goto	l5023
  9259  0042D0                     u5920:
  9260  0042D0                     l5043:
  9261                           
  9262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9263  0042D0  5034               	movf	dtoa@s^0,w,c
  9264  0042D2  1035               	iorwf	(dtoa@s+1)^0,w,c
  9265  0042D4  A4D8               	btfss	status,2,c
  9266  0042D6  EF6F  F021         	goto	u5931
  9267  0042DA  EF71  F021         	goto	u5930
  9268  0042DE                     u5931:
  9269  0042DE  EF79  F021         	goto	l5047
  9270  0042E2                     u5930:
  9271  0042E2  0101               	movlb	1	; () banked
  9272  0042E4  A522               	btfss	_flags& (0+255),2,b
  9273  0042E6  EF77  F021         	goto	u5941
  9274  0042EA  EF79  F021         	goto	u5940
  9275  0042EE                     u5941:
  9276  0042EE  EF97  F021         	goto	l5057
  9277  0042F2                     u5940:
  9278  0042F2                     l5047:
  9279                           
  9280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  9281  0042F2  063E               	decf	dtoa@i^0,f,c
  9282  0042F4  A0D8               	btfss	status,0,c
  9283  0042F6  063F               	decf	(dtoa@i+1)^0,f,c
  9284  0042F8                     
  9285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9286  0042F8  5034               	movf	dtoa@s^0,w,c
  9287  0042FA  1035               	iorwf	(dtoa@s+1)^0,w,c
  9288  0042FC  A4D8               	btfss	status,2,c
  9289  0042FE  EF83  F021         	goto	u5951
  9290  004302  EF85  F021         	goto	u5950
  9291  004306                     u5951:
  9292  004306  EF8B  F021         	goto	l5053
  9293  00430A                     u5950:
  9294  00430A  0E00               	movlw	0
  9295  00430C  6E2F               	movwf	(_dtoa$3002+1)^0,c
  9296  00430E  0E2B               	movlw	43
  9297  004310  6E2E               	movwf	_dtoa$3002^0,c
  9298  004312  EF8F  F021         	goto	l5055
  9299  004316                     l5053:
  9300  004316  0E00               	movlw	0
  9301  004318  6E2F               	movwf	(_dtoa$3002+1)^0,c
  9302  00431A  0E2D               	movlw	45
  9303  00431C  6E2E               	movwf	_dtoa$3002^0,c
  9304  00431E                     l5055:
  9305  00431E  0E31               	movlw	low _dbuf
  9306  004320  243E               	addwf	dtoa@i^0,w,c
  9307  004322  6ED9               	movwf	fsr2l,c
  9308  004324  0E01               	movlw	high _dbuf
  9309  004326  203F               	addwfc	(dtoa@i+1)^0,w,c
  9310  004328  6EDA               	movwf	fsr2h,c
  9311  00432A  C02E  FFDF         	movff	_dtoa$3002,indf2
  9312  00432E                     l5057:
  9313                           
  9314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9315  00432E  C01C  F011         	movff	dtoa@fp,pad@fp
  9316  004332  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9317  004336  0E31               	movlw	low _dbuf
  9318  004338  243E               	addwf	dtoa@i^0,w,c
  9319  00433A  6E13               	movwf	pad@buf^0,c
  9320  00433C  0E01               	movlw	high _dbuf
  9321  00433E  203F               	addwfc	(dtoa@i+1)^0,w,c
  9322  004340  6E14               	movwf	(pad@buf+1)^0,c
  9323  004342  C032  F015         	movff	dtoa@w,pad@p
  9324  004346  C033  F016         	movff	dtoa@w+1,pad@p+1
  9325  00434A  EC70  F02C         	call	_pad	;wreg free
  9326  00434E  C011  F01C         	movff	?_pad,?_dtoa
  9327  004352  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9328  004356  0012               	return		;funcret
  9329  004358                     __end_of_dtoa:
  9330                           	callstack 0
  9331                           
  9332 ;; *************** function _pad *****************
  9333 ;; Defined at:
  9334 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9337 ;;		 -> sprintf@f(6), 
  9338 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9339 ;;		 -> dbuf(80), 
  9340 ;;  p               2   20[COMRAM] int 
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;  w               2   25[COMRAM] int 
  9343 ;;  i               2   23[COMRAM] int 
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  2   16[COMRAM] int 
  9346 ;; Registers used:
  9347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9353 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9354 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9356 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9357 ;;Total ram usage:       11 bytes
  9358 ;; Hardware stack levels used: 1
  9359 ;; Hardware stack levels required when called: 3
  9360 ;; This function calls:
  9361 ;;		_fputc
  9362 ;;		_fputs
  9363 ;;		_strlen
  9364 ;; This function is called by:
  9365 ;;		_dtoa
  9366 ;;		_efgtoa
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text27
  9371  0058E0                     __ptext27:
  9372                           	callstack 0
  9373  0058E0                     _pad:
  9374                           	callstack 21
  9375  0058E0                     
  9376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9377  0058E0  0101               	movlb	1	; () banked
  9378  0058E2  A122               	btfss	_flags& (0+255),0,b
  9379  0058E4  EF76  F02C         	goto	u5501
  9380  0058E8  EF78  F02C         	goto	u5500
  9381  0058EC                     u5501:
  9382  0058EC  EF82  F02C         	goto	l4897
  9383  0058F0                     u5500:
  9384  0058F0                     
  9385                           ; BSR set to: 1
  9386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9387  0058F0  C013  F00A         	movff	pad@buf,fputs@s
  9388  0058F4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9389  0058F8  C011  F00C         	movff	pad@fp,fputs@fp
  9390  0058FC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9391  005900  EC31  F031         	call	_fputs	;wreg free
  9392  005904                     l4897:
  9393                           
  9394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9395  005904  BE16               	btfsc	(pad@p+1)^0,7,c
  9396  005906  EF87  F02C         	goto	u5511
  9397  00590A  EF89  F02C         	goto	u5510
  9398  00590E                     u5511:
  9399  00590E  EF8F  F02C         	goto	l4901
  9400  005912                     u5510:
  9401  005912  C015  F01A         	movff	pad@p,pad@w
  9402  005916  C016  F01B         	movff	pad@p+1,pad@w+1
  9403  00591A  EF93  F02C         	goto	l1434
  9404  00591E                     l4901:
  9405  00591E  0E00               	movlw	0
  9406  005920  6E1B               	movwf	(pad@w+1)^0,c
  9407  005922  0E00               	movlw	0
  9408  005924  6E1A               	movwf	pad@w^0,c
  9409  005926                     l1434:
  9410                           
  9411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9412  005926  0E00               	movlw	0
  9413  005928  6E19               	movwf	(pad@i+1)^0,c
  9414  00592A  0E00               	movlw	0
  9415  00592C  6E18               	movwf	pad@i^0,c
  9416                           
  9417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9418  00592E  EFA5  F02C         	goto	l4907
  9419  005932                     l4903:
  9420                           
  9421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9422  005932  0E00               	movlw	0
  9423  005934  6E02               	movwf	(fputc@c+1)^0,c
  9424  005936  0E20               	movlw	32
  9425  005938  6E01               	movwf	fputc@c^0,c
  9426  00593A  C011  F003         	movff	pad@fp,fputc@fp
  9427  00593E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9428  005942  EC0B  F02C         	call	_fputc	;wreg free
  9429  005946                     
  9430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9431  005946  4A18               	infsnz	pad@i^0,f,c
  9432  005948  2A19               	incf	(pad@i+1)^0,f,c
  9433  00594A                     l4907:
  9434                           
  9435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9436  00594A  501A               	movf	pad@w^0,w,c
  9437  00594C  5C18               	subwf	pad@i^0,w,c
  9438  00594E  5019               	movf	(pad@i+1)^0,w,c
  9439  005950  0A80               	xorlw	128
  9440  005952  6E17               	movwf	??_pad^0,c
  9441  005954  501B               	movf	(pad@w+1)^0,w,c
  9442  005956  0A80               	xorlw	128
  9443  005958  5817               	subwfb	??_pad^0,w,c
  9444  00595A  A0D8               	btfss	status,0,c
  9445  00595C  EFB2  F02C         	goto	u5521
  9446  005960  EFB4  F02C         	goto	u5520
  9447  005964                     u5521:
  9448  005964  EF99  F02C         	goto	l4903
  9449  005968                     u5520:
  9450  005968                     
  9451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9452  005968  0101               	movlb	1	; () banked
  9453  00596A  B122               	btfsc	_flags& (0+255),0,b
  9454  00596C  EFBA  F02C         	goto	u5531
  9455  005970  EFBC  F02C         	goto	u5530
  9456  005974                     u5531:
  9457  005974  EFC6  F02C         	goto	l4911
  9458  005978                     u5530:
  9459  005978                     
  9460                           ; BSR set to: 1
  9461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9462  005978  C013  F00A         	movff	pad@buf,fputs@s
  9463  00597C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9464  005980  C011  F00C         	movff	pad@fp,fputs@fp
  9465  005984  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9466  005988  EC31  F031         	call	_fputs	;wreg free
  9467  00598C                     l4911:
  9468                           
  9469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9470  00598C  C013  F001         	movff	pad@buf,strlen@s
  9471  005990  C014  F002         	movff	pad@buf+1,strlen@s+1
  9472  005994  ECCE  F02F         	call	_strlen	;wreg free
  9473  005998  501A               	movf	pad@w^0,w,c
  9474  00599A  2401               	addwf	?_strlen^0,w,c
  9475  00599C  6E11               	movwf	?_pad^0,c
  9476  00599E  501B               	movf	(pad@w+1)^0,w,c
  9477  0059A0  2002               	addwfc	(?_strlen+1)^0,w,c
  9478  0059A2  6E12               	movwf	(?_pad+1)^0,c
  9479  0059A4  0012               	return		;funcret
  9480  0059A6                     __end_of_pad:
  9481                           	callstack 0
  9482                           
  9483 ;; *************** function _strlen *****************
  9484 ;; Defined at:
  9485 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9488 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  9489 ;;		 -> STR_16(6), STR_14(11), STR_12(7), STR_10(5), 
  9490 ;;		 -> STR_8(7), STR_6(5), STR_4(6), STR_2(4), 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9493 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  9494 ;;		 -> STR_16(6), STR_14(11), STR_12(7), STR_10(5), 
  9495 ;;		 -> STR_8(7), STR_6(5), STR_4(6), STR_2(4), 
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  2    0[COMRAM] unsigned int 
  9498 ;; Registers used:
  9499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;Total ram usage:        4 bytes
  9510 ;; Hardware stack levels used: 1
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_pad
  9515 ;;		_stoa
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text28
  9520  005F9C                     __ptext28:
  9521                           	callstack 0
  9522  005F9C                     _strlen:
  9523                           	callstack 24
  9524  005F9C  C001  F003         	movff	strlen@s,strlen@a
  9525  005FA0  C002  F004         	movff	strlen@s+1,strlen@a+1
  9526  005FA4  EFD6  F02F         	goto	l4353
  9527  005FA8                     l4351:
  9528  005FA8  4A01               	infsnz	strlen@s^0,f,c
  9529  005FAA  2A02               	incf	(strlen@s+1)^0,f,c
  9530  005FAC                     l4353:
  9531  005FAC  C001  FFF6         	movff	strlen@s,tblptrl
  9532  005FB0  C002  FFF7         	movff	strlen@s+1,tblptrh
  9533  005FB4  0E00               	movlw	low (__smallconst shr (0+16))
  9534  005FB6  6EF8               	movwf	tblptru,c
  9535  005FB8  0E0D               	movlw	(high __ramtop+-1)
  9536  005FBA  64F7               	cpfsgt	tblptrh,c
  9537  005FBC  D003               	bra	u4637
  9538  005FBE  0008               	tblrd		*
  9539  005FC0  50F5               	movf	tablat,w,c
  9540  005FC2  D005               	bra	u4630
  9541  005FC4                     u4637:
  9542  005FC4  CFF6 FFE9          	movff	tblptrl,fsr0l
  9543  005FC8  CFF7 FFEA          	movff	tblptrh,fsr0h
  9544  005FCC  50EF               	movf	indf0,w,c
  9545  005FCE                     u4630:
  9546  005FCE  0900               	iorlw	0
  9547  005FD0  A4D8               	btfss	status,2,c
  9548  005FD2  EFED  F02F         	goto	u4641
  9549  005FD6  EFEF  F02F         	goto	u4640
  9550  005FDA                     u4641:
  9551  005FDA  EFD4  F02F         	goto	l4351
  9552  005FDE                     u4640:
  9553  005FDE  5003               	movf	strlen@a^0,w,c
  9554  005FE0  5C01               	subwf	strlen@s^0,w,c
  9555  005FE2  6E01               	movwf	?_strlen^0,c
  9556  005FE4  5004               	movf	(strlen@a+1)^0,w,c
  9557  005FE6  5802               	subwfb	(strlen@s+1)^0,w,c
  9558  005FE8  6E02               	movwf	(?_strlen+1)^0,c
  9559  005FEA  0012               	return		;funcret
  9560  005FEC                     __end_of_strlen:
  9561                           	callstack 0
  9562                           
  9563 ;; *************** function _fputs *****************
  9564 ;; Defined at:
  9565 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9568 ;;		 -> dbuf(80), 
  9569 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9570 ;;		 -> sprintf@f(6), 
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;  i               2   14[COMRAM] int 
  9573 ;;  c               1   13[COMRAM] unsigned char 
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  2    9[COMRAM] int 
  9576 ;; Registers used:
  9577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9584 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9587 ;;Total ram usage:        7 bytes
  9588 ;; Hardware stack levels used: 1
  9589 ;; Hardware stack levels required when called: 2
  9590 ;; This function calls:
  9591 ;;		_fputc
  9592 ;; This function is called by:
  9593 ;;		_pad
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text29
  9598  006262                     __ptext29:
  9599                           	callstack 0
  9600  006262                     _fputs:
  9601                           	callstack 21
  9602  006262  0E00               	movlw	0
  9603  006264  6E10               	movwf	(fputs@i+1)^0,c
  9604  006266  0E00               	movlw	0
  9605  006268  6E0F               	movwf	fputs@i^0,c
  9606  00626A  EF42  F031         	goto	l4347
  9607  00626E                     l4343:
  9608  00626E  C00E  F001         	movff	fputs@c,fputc@c
  9609  006272  6A02               	clrf	(fputc@c+1)^0,c
  9610  006274  C00C  F003         	movff	fputs@fp,fputc@fp
  9611  006278  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9612  00627C  EC0B  F02C         	call	_fputc	;wreg free
  9613  006280  4A0F               	infsnz	fputs@i^0,f,c
  9614  006282  2A10               	incf	(fputs@i+1)^0,f,c
  9615  006284                     l4347:
  9616  006284  500F               	movf	fputs@i^0,w,c
  9617  006286  240A               	addwf	fputs@s^0,w,c
  9618  006288  6ED9               	movwf	fsr2l,c
  9619  00628A  5010               	movf	(fputs@i+1)^0,w,c
  9620  00628C  200B               	addwfc	(fputs@s+1)^0,w,c
  9621  00628E  6EDA               	movwf	fsr2h,c
  9622  006290  50DF               	movf	indf2,w,c
  9623  006292  6E0E               	movwf	fputs@c^0,c
  9624  006294  500E               	movf	fputs@c^0,w,c
  9625  006296  A4D8               	btfss	status,2,c
  9626  006298  EF50  F031         	goto	u4621
  9627  00629C  EF52  F031         	goto	u4620
  9628  0062A0                     u4621:
  9629  0062A0  EF37  F031         	goto	l4343
  9630  0062A4                     u4620:
  9631  0062A4  0012               	return		;funcret
  9632  0062A6                     __end_of_fputs:
  9633                           	callstack 0
  9634                           
  9635 ;; *************** function _fputc *****************
  9636 ;; Defined at:
  9637 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  c               2    0[COMRAM] int 
  9640 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9641 ;;		 -> sprintf@f(6), 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  2    0[COMRAM] int 
  9646 ;; Registers used:
  9647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9655 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9656 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9657 ;;Total ram usage:        9 bytes
  9658 ;; Hardware stack levels used: 1
  9659 ;; Hardware stack levels required when called: 1
  9660 ;; This function calls:
  9661 ;;		_putch
  9662 ;; This function is called by:
  9663 ;;		_pad
  9664 ;;		_stoa
  9665 ;;		_vfpfcnvrt
  9666 ;;		_fputs
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text30
  9671  005816                     __ptext30:
  9672                           	callstack 0
  9673  005816                     _fputc:
  9674                           	callstack 23
  9675  005816  5003               	movf	fputc@fp^0,w,c
  9676  005818  1004               	iorwf	(fputc@fp+1)^0,w,c
  9677  00581A  B4D8               	btfsc	status,2,c
  9678  00581C  EF12  F02C         	goto	u4191
  9679  005820  EF14  F02C         	goto	u4190
  9680  005824                     u4191:
  9681  005824  EF1D  F02C         	goto	l4129
  9682  005828                     u4190:
  9683  005828  5003               	movf	fputc@fp^0,w,c
  9684  00582A  1004               	iorwf	(fputc@fp+1)^0,w,c
  9685  00582C  A4D8               	btfss	status,2,c
  9686  00582E  EF1B  F02C         	goto	u4201
  9687  005832  EF1D  F02C         	goto	u4200
  9688  005836                     u4201:
  9689  005836  EF22  F02C         	goto	l4131
  9690  00583A                     u4200:
  9691  00583A                     l4129:
  9692  00583A  5001               	movf	fputc@c^0,w,c
  9693  00583C  EC13  F033         	call	_putch
  9694  005840  EF6F  F02C         	goto	l1710
  9695  005844                     l4131:
  9696  005844  EE20 F004          	lfsr	2,4
  9697  005848  5003               	movf	fputc@fp^0,w,c
  9698  00584A  26D9               	addwf	fsr2l,f,c
  9699  00584C  5004               	movf	(fputc@fp+1)^0,w,c
  9700  00584E  22DA               	addwfc	fsr2h,f,c
  9701  005850  50DE               	movf	postinc2,w,c
  9702  005852  10DE               	iorwf	postinc2,w,c
  9703  005854  B4D8               	btfsc	status,2,c
  9704  005856  EF2F  F02C         	goto	u4211
  9705  00585A  EF31  F02C         	goto	u4210
  9706  00585E                     u4211:
  9707  00585E  EF4C  F02C         	goto	l4135
  9708  005862                     u4210:
  9709  005862  EE20 F004          	lfsr	2,4
  9710  005866  5003               	movf	fputc@fp^0,w,c
  9711  005868  26D9               	addwf	fsr2l,f,c
  9712  00586A  5004               	movf	(fputc@fp+1)^0,w,c
  9713  00586C  22DA               	addwfc	fsr2h,f,c
  9714  00586E  EE10 F002          	lfsr	1,2
  9715  005872  5003               	movf	fputc@fp^0,w,c
  9716  005874  26E1               	addwf	fsr1l,f,c
  9717  005876  5004               	movf	(fputc@fp+1)^0,w,c
  9718  005878  22E2               	addwfc	fsr1h,f,c
  9719  00587A  50DE               	movf	postinc2,w,c
  9720  00587C  5CE6               	subwf	postinc1,w,c
  9721  00587E  50E6               	movf	postinc1,w,c
  9722  005880  0A80               	xorlw	128
  9723  005882  6E09               	movwf	(??_fputc+4)^0,c
  9724  005884  50DE               	movf	postinc2,w,c
  9725  005886  0A80               	xorlw	128
  9726  005888  5809               	subwfb	(??_fputc+4)^0,w,c
  9727  00588A  B0D8               	btfsc	status,0,c
  9728  00588C  EF4A  F02C         	goto	u4221
  9729  005890  EF4C  F02C         	goto	u4220
  9730  005894                     u4221:
  9731  005894  EF6F  F02C         	goto	l1710
  9732  005898                     u4220:
  9733  005898                     l4135:
  9734  005898  EE20 F002          	lfsr	2,2
  9735  00589C  5003               	movf	fputc@fp^0,w,c
  9736  00589E  26D9               	addwf	fsr2l,f,c
  9737  0058A0  5004               	movf	(fputc@fp+1)^0,w,c
  9738  0058A2  22DA               	addwfc	fsr2h,f,c
  9739  0058A4  CFDE F005          	movff	postinc2,??_fputc
  9740  0058A8  CFDD F006          	movff	postdec2,??_fputc+1
  9741  0058AC  C003  FFD9         	movff	fputc@fp,fsr2l
  9742  0058B0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9743  0058B4  CFDE F007          	movff	postinc2,??_fputc+2
  9744  0058B8  CFDD F008          	movff	postdec2,??_fputc+3
  9745  0058BC  5005               	movf	??_fputc^0,w,c
  9746  0058BE  2407               	addwf	(??_fputc+2)^0,w,c
  9747  0058C0  6ED9               	movwf	fsr2l,c
  9748  0058C2  5006               	movf	(??_fputc+1)^0,w,c
  9749  0058C4  2008               	addwfc	(??_fputc+3)^0,w,c
  9750  0058C6  6EDA               	movwf	fsr2h,c
  9751  0058C8  C001  FFDF         	movff	fputc@c,indf2
  9752  0058CC  EE20 F002          	lfsr	2,2
  9753  0058D0  5003               	movf	fputc@fp^0,w,c
  9754  0058D2  26D9               	addwf	fsr2l,f,c
  9755  0058D4  5004               	movf	(fputc@fp+1)^0,w,c
  9756  0058D6  22DA               	addwfc	fsr2h,f,c
  9757  0058D8  2ADE               	incf	postinc2,f,c
  9758  0058DA  0E00               	movlw	0
  9759  0058DC  22DD               	addwfc	postdec2,f,c
  9760  0058DE                     l1710:
  9761  0058DE  0012               	return		;funcret
  9762  0058E0                     __end_of_fputc:
  9763                           	callstack 0
  9764                           
  9765 ;; *************** function _putch *****************
  9766 ;; Defined at:
  9767 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;  c               1    wreg     unsigned char 
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;  c               1    0[COMRAM] unsigned char 
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  1    wreg      void 
  9774 ;; Registers used:
  9775 ;;		wreg
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/0
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9785 ;;Total ram usage:        0 bytes
  9786 ;; Hardware stack levels used: 1
  9787 ;; This function calls:
  9788 ;;		Nothing
  9789 ;; This function is called by:
  9790 ;;		_fputc
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text31
  9795  006626                     __ptext31:
  9796                           	callstack 0
  9797  006626                     _putch:
  9798                           	callstack 23
  9799  006626  0012               	return		;funcret
  9800  006628                     __end_of_putch:
  9801                           	callstack 0
  9802                           
  9803 ;; *************** function _abs *****************
  9804 ;; Defined at:
  9805 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  a               2   18[COMRAM] int 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  2   18[COMRAM] int 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2, status,0
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9823 ;;Total ram usage:        4 bytes
  9824 ;; Hardware stack levels used: 1
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_dtoa
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text32
  9833  0062E8                     __ptext32:
  9834                           	callstack 0
  9835  0062E8                     _abs:
  9836                           	callstack 24
  9837  0062E8  BE14               	btfsc	(abs@a+1)^0,7,c
  9838  0062EA  EF81  F031         	goto	u5540
  9839  0062EE  5014               	movf	(abs@a+1)^0,w,c
  9840  0062F0  E106               	bnz	u5541
  9841  0062F2  0413               	decf	abs@a^0,w,c
  9842  0062F4  B0D8               	btfsc	status,0,c
  9843  0062F6  EF7F  F031         	goto	u5541
  9844  0062FA  EF81  F031         	goto	u5540
  9845  0062FE                     u5541:
  9846  0062FE  EF8F  F031         	goto	l1631
  9847  006302                     u5540:
  9848  006302  C013  F015         	movff	abs@a,??_abs
  9849  006306  C014  F016         	movff	abs@a+1,??_abs+1
  9850  00630A  1E15               	comf	??_abs^0,f,c
  9851  00630C  1E16               	comf	(??_abs+1)^0,f,c
  9852  00630E  4A15               	infsnz	??_abs^0,f,c
  9853  006310  2A16               	incf	(??_abs+1)^0,f,c
  9854  006312  C015  F013         	movff	??_abs,?_abs
  9855  006316  C016  F014         	movff	??_abs+1,?_abs+1
  9856  00631A  EF93  F031         	goto	l1634
  9857  00631E                     l1631:
  9858  00631E  C013  F013         	movff	abs@a,?_abs
  9859  006322  C014  F014         	movff	abs@a+1,?_abs+1
  9860  006326                     l1634:
  9861  006326  0012               	return		;funcret
  9862  006328                     __end_of_abs:
  9863                           	callstack 0
  9864                           
  9865 ;; *************** function ___aomod *****************
  9866 ;; Defined at:
  9867 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  dividend        8    0[COMRAM] long long 
  9870 ;;  divisor         8    8[COMRAM] long long 
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;  sign            1   17[COMRAM] unsigned char 
  9873 ;;  counter         1   16[COMRAM] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  8    0[COMRAM] long long 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9883 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9886 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9887 ;;Total ram usage:       18 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		_dtoa
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           	psect	text33
  9897  004DBC                     __ptext33:
  9898                           	callstack 0
  9899  004DBC                     ___aomod:
  9900                           	callstack 24
  9901  004DBC  0E00               	movlw	0
  9902  004DBE  6E12               	movwf	___aomod@sign^0,c
  9903  004DC0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9904  004DC2  EFE7  F026         	goto	u4740
  9905  004DC6  EFE5  F026         	goto	u4741
  9906  004DCA                     u4741:
  9907  004DCA  EFF9  F026         	goto	l4421
  9908  004DCE                     u4740:
  9909  004DCE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9910  004DD0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9911  004DD2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9912  004DD4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9913  004DD6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9914  004DD8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9915  004DDA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9916  004DDC  6C01               	negf	___aomod@dividend^0,c
  9917  004DDE  0E00               	movlw	0
  9918  004DE0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9919  004DE2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9920  004DE4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9921  004DE6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9922  004DE8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9923  004DEA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9924  004DEC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9925  004DEE  0E01               	movlw	1
  9926  004DF0  6E12               	movwf	___aomod@sign^0,c
  9927  004DF2                     l4421:
  9928  004DF2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9929  004DF4  EF00  F027         	goto	u4750
  9930  004DF8  EFFE  F026         	goto	u4751
  9931  004DFC                     u4751:
  9932  004DFC  EF10  F027         	goto	l4425
  9933  004E00                     u4750:
  9934  004E00  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9935  004E02  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9936  004E04  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9937  004E06  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9938  004E08  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9939  004E0A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9940  004E0C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9941  004E0E  6C09               	negf	___aomod@divisor^0,c
  9942  004E10  0E00               	movlw	0
  9943  004E12  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9944  004E14  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9945  004E16  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9946  004E18  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9947  004E1A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9948  004E1C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9949  004E1E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9950  004E20                     l4425:
  9951  004E20  5009               	movf	___aomod@divisor^0,w,c
  9952  004E22  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9953  004E24  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9954  004E26  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9955  004E28  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9956  004E2A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9957  004E2C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9958  004E2E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9959  004E30  B4D8               	btfsc	status,2,c
  9960  004E32  EF1D  F027         	goto	u4761
  9961  004E36  EF1F  F027         	goto	u4760
  9962  004E3A                     u4761:
  9963  004E3A  EF67  F027         	goto	l4441
  9964  004E3E                     u4760:
  9965  004E3E  0E01               	movlw	1
  9966  004E40  6E11               	movwf	___aomod@counter^0,c
  9967  004E42  EF2D  F027         	goto	l4431
  9968  004E46                     l4429:
  9969  004E46  90D8               	bcf	status,0,c
  9970  004E48  3609               	rlcf	___aomod@divisor^0,f,c
  9971  004E4A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9972  004E4C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9973  004E4E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9974  004E50  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9975  004E52  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9976  004E54  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9977  004E56  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9978  004E58  2A11               	incf	___aomod@counter^0,f,c
  9979  004E5A                     l4431:
  9980  004E5A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9981  004E5C  EF32  F027         	goto	u4771
  9982  004E60  EF34  F027         	goto	u4770
  9983  004E64                     u4771:
  9984  004E64  EF23  F027         	goto	l4429
  9985  004E68                     u4770:
  9986  004E68                     l4433:
  9987  004E68  5009               	movf	___aomod@divisor^0,w,c
  9988  004E6A  5C01               	subwf	___aomod@dividend^0,w,c
  9989  004E6C  500A               	movf	(___aomod@divisor+1)^0,w,c
  9990  004E6E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9991  004E70  500B               	movf	(___aomod@divisor+2)^0,w,c
  9992  004E72  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9993  004E74  500C               	movf	(___aomod@divisor+3)^0,w,c
  9994  004E76  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9995  004E78  500D               	movf	(___aomod@divisor+4)^0,w,c
  9996  004E7A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9997  004E7C  500E               	movf	(___aomod@divisor+5)^0,w,c
  9998  004E7E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9999  004E80  500F               	movf	(___aomod@divisor+6)^0,w,c
 10000  004E82  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10001  004E84  5010               	movf	(___aomod@divisor+7)^0,w,c
 10002  004E86  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10003  004E88  A0D8               	btfss	status,0,c
 10004  004E8A  EF49  F027         	goto	u4781
 10005  004E8E  EF4B  F027         	goto	u4780
 10006  004E92                     u4781:
 10007  004E92  EF5B  F027         	goto	l4437
 10008  004E96                     u4780:
 10009  004E96  5009               	movf	___aomod@divisor^0,w,c
 10010  004E98  5E01               	subwf	___aomod@dividend^0,f,c
 10011  004E9A  500A               	movf	(___aomod@divisor+1)^0,w,c
 10012  004E9C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10013  004E9E  500B               	movf	(___aomod@divisor+2)^0,w,c
 10014  004EA0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10015  004EA2  500C               	movf	(___aomod@divisor+3)^0,w,c
 10016  004EA4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10017  004EA6  500D               	movf	(___aomod@divisor+4)^0,w,c
 10018  004EA8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10019  004EAA  500E               	movf	(___aomod@divisor+5)^0,w,c
 10020  004EAC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10021  004EAE  500F               	movf	(___aomod@divisor+6)^0,w,c
 10022  004EB0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10023  004EB2  5010               	movf	(___aomod@divisor+7)^0,w,c
 10024  004EB4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10025  004EB6                     l4437:
 10026  004EB6  90D8               	bcf	status,0,c
 10027  004EB8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10028  004EBA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10029  004EBC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10030  004EBE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10031  004EC0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10032  004EC2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10033  004EC4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10034  004EC6  3209               	rrcf	___aomod@divisor^0,f,c
 10035  004EC8  2E11               	decfsz	___aomod@counter^0,f,c
 10036  004ECA  EF34  F027         	goto	l4433
 10037  004ECE                     l4441:
 10038  004ECE  5012               	movf	___aomod@sign^0,w,c
 10039  004ED0  B4D8               	btfsc	status,2,c
 10040  004ED2  EF6D  F027         	goto	u4791
 10041  004ED6  EF6F  F027         	goto	u4790
 10042  004EDA                     u4791:
 10043  004EDA  EF7F  F027         	goto	l4445
 10044  004EDE                     u4790:
 10045  004EDE  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10046  004EE0  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10047  004EE2  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10048  004EE4  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10049  004EE6  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10050  004EE8  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10051  004EEA  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10052  004EEC  6C01               	negf	___aomod@dividend^0,c
 10053  004EEE  0E00               	movlw	0
 10054  004EF0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10055  004EF2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10056  004EF4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10057  004EF6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10058  004EF8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10059  004EFA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10060  004EFC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10061  004EFE                     l4445:
 10062  004EFE  C001  F001         	movff	___aomod@dividend,?___aomod
 10063  004F02  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10064  004F06  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10065  004F0A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10066  004F0E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10067  004F12  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10068  004F16  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10069  004F1A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10070  004F1E  0012               	return		;funcret
 10071  004F20                     __end_of___aomod:
 10072                           	callstack 0
 10073                           
 10074 ;; *************** function ___aodiv *****************
 10075 ;; Defined at:
 10076 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;  dividend        8    0[COMRAM] long long 
 10079 ;;  divisor         8    8[COMRAM] long long 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;  quotient        8   18[COMRAM] long long 
 10082 ;;  sign            1   17[COMRAM] unsigned char 
 10083 ;;  counter         1   16[COMRAM] unsigned char 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  8    0[COMRAM] long long 
 10086 ;; Registers used:
 10087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10093 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10094 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10096 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10097 ;;Total ram usage:       26 bytes
 10098 ;; Hardware stack levels used: 1
 10099 ;; This function calls:
 10100 ;;		Nothing
 10101 ;; This function is called by:
 10102 ;;		_dtoa
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           	psect	text34
 10107  004C34                     __ptext34:
 10108                           	callstack 0
 10109  004C34                     ___aodiv:
 10110                           	callstack 24
 10111  004C34  0E00               	movlw	0
 10112  004C36  6E12               	movwf	___aodiv@sign^0,c
 10113  004C38  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10114  004C3A  EF23  F026         	goto	u4670
 10115  004C3E  EF21  F026         	goto	u4671
 10116  004C42                     u4671:
 10117  004C42  EF35  F026         	goto	l4377
 10118  004C46                     u4670:
 10119  004C46  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10120  004C48  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10121  004C4A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10122  004C4C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10123  004C4E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10124  004C50  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10125  004C52  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10126  004C54  6C09               	negf	___aodiv@divisor^0,c
 10127  004C56  0E00               	movlw	0
 10128  004C58  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10129  004C5A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10130  004C5C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10131  004C5E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10132  004C60  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10133  004C62  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10134  004C64  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10135  004C66  0E01               	movlw	1
 10136  004C68  6E12               	movwf	___aodiv@sign^0,c
 10137  004C6A                     l4377:
 10138  004C6A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10139  004C6C  EF3C  F026         	goto	u4680
 10140  004C70  EF3A  F026         	goto	u4681
 10141  004C74                     u4681:
 10142  004C74  EF4E  F026         	goto	l4383
 10143  004C78                     u4680:
 10144  004C78  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10145  004C7A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10146  004C7C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10147  004C7E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10148  004C80  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10149  004C82  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10150  004C84  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10151  004C86  6C01               	negf	___aodiv@dividend^0,c
 10152  004C88  0E00               	movlw	0
 10153  004C8A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10154  004C8C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10155  004C8E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10156  004C90  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10157  004C92  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10158  004C94  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10159  004C96  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10160  004C98  0E01               	movlw	1
 10161  004C9A  1A12               	xorwf	___aodiv@sign^0,f,c
 10162  004C9C                     l4383:
 10163  004C9C  EE20  F013         	lfsr	2,___aodiv@quotient
 10164  004CA0  0E07               	movlw	7
 10165  004CA2                     u4691:
 10166  004CA2  6ADE               	clrf	postinc2,c
 10167  004CA4  06E8               	decf	wreg,f,c
 10168  004CA6  E2FD               	bc	u4691
 10169  004CA8  5009               	movf	___aodiv@divisor^0,w,c
 10170  004CAA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10171  004CAC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10172  004CAE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10173  004CB0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10174  004CB2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10175  004CB4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10176  004CB6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10177  004CB8  B4D8               	btfsc	status,2,c
 10178  004CBA  EF61  F026         	goto	u4701
 10179  004CBE  EF63  F026         	goto	u4700
 10180  004CC2                     u4701:
 10181  004CC2  EFB5  F026         	goto	l4405
 10182  004CC6                     u4700:
 10183  004CC6  0E01               	movlw	1
 10184  004CC8  6E11               	movwf	___aodiv@counter^0,c
 10185  004CCA  EF71  F026         	goto	l4391
 10186  004CCE                     l4389:
 10187  004CCE  90D8               	bcf	status,0,c
 10188  004CD0  3609               	rlcf	___aodiv@divisor^0,f,c
 10189  004CD2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10190  004CD4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10191  004CD6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10192  004CD8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10193  004CDA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10194  004CDC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10195  004CDE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10196  004CE0  2A11               	incf	___aodiv@counter^0,f,c
 10197  004CE2                     l4391:
 10198  004CE2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10199  004CE4  EF76  F026         	goto	u4711
 10200  004CE8  EF78  F026         	goto	u4710
 10201  004CEC                     u4711:
 10202  004CEC  EF67  F026         	goto	l4389
 10203  004CF0                     u4710:
 10204  004CF0                     l4393:
 10205  004CF0  90D8               	bcf	status,0,c
 10206  004CF2  3613               	rlcf	___aodiv@quotient^0,f,c
 10207  004CF4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10208  004CF6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10209  004CF8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10210  004CFA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10211  004CFC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10212  004CFE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10213  004D00  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10214  004D02  5009               	movf	___aodiv@divisor^0,w,c
 10215  004D04  5C01               	subwf	___aodiv@dividend^0,w,c
 10216  004D06  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10217  004D08  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10218  004D0A  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10219  004D0C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10220  004D0E  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10221  004D10  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10222  004D12  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10223  004D14  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10224  004D16  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10225  004D18  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10226  004D1A  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10227  004D1C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10228  004D1E  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10229  004D20  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10230  004D22  A0D8               	btfss	status,0,c
 10231  004D24  EF96  F026         	goto	u4721
 10232  004D28  EF98  F026         	goto	u4720
 10233  004D2C                     u4721:
 10234  004D2C  EFA9  F026         	goto	l4401
 10235  004D30                     u4720:
 10236  004D30  5009               	movf	___aodiv@divisor^0,w,c
 10237  004D32  5E01               	subwf	___aodiv@dividend^0,f,c
 10238  004D34  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10239  004D36  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10240  004D38  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10241  004D3A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10242  004D3C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10243  004D3E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10244  004D40  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10245  004D42  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10246  004D44  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10247  004D46  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10248  004D48  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10249  004D4A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10250  004D4C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10251  004D4E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10252  004D50  8013               	bsf	___aodiv@quotient^0,0,c
 10253  004D52                     l4401:
 10254  004D52  90D8               	bcf	status,0,c
 10255  004D54  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10256  004D56  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10257  004D58  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10258  004D5A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10259  004D5C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10260  004D5E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10261  004D60  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10262  004D62  3209               	rrcf	___aodiv@divisor^0,f,c
 10263  004D64  2E11               	decfsz	___aodiv@counter^0,f,c
 10264  004D66  EF78  F026         	goto	l4393
 10265  004D6A                     l4405:
 10266  004D6A  5012               	movf	___aodiv@sign^0,w,c
 10267  004D6C  B4D8               	btfsc	status,2,c
 10268  004D6E  EFBB  F026         	goto	u4731
 10269  004D72  EFBD  F026         	goto	u4730
 10270  004D76                     u4731:
 10271  004D76  EFCD  F026         	goto	l4409
 10272  004D7A                     u4730:
 10273  004D7A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10274  004D7C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10275  004D7E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10276  004D80  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10277  004D82  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10278  004D84  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10279  004D86  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10280  004D88  6C13               	negf	___aodiv@quotient^0,c
 10281  004D8A  0E00               	movlw	0
 10282  004D8C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10283  004D8E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10284  004D90  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10285  004D92  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10286  004D94  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10287  004D96  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10288  004D98  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10289  004D9A                     l4409:
 10290  004D9A  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10291  004D9E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10292  004DA2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10293  004DA6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10294  004DAA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10295  004DAE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10296  004DB2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10297  004DB6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10298  004DBA  0012               	return		;funcret
 10299  004DBC                     __end_of___aodiv:
 10300                           	callstack 0
 10301                           
 10302 ;; *************** function _atoi *****************
 10303 ;; Defined at:
 10304 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10307 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
 10308 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
 10309 ;;		 -> STR_3(64), STR_1(64), 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  n               2   20[COMRAM] int 
 10312 ;;  neg             2   13[COMRAM] int 
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  2    7[COMRAM] int 
 10315 ;; Registers used:
 10316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10323 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10325 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;Total ram usage:       15 bytes
 10327 ;; Hardware stack levels used: 1
 10328 ;; Hardware stack levels required when called: 1
 10329 ;; This function calls:
 10330 ;;		___wmul
 10331 ;;		_isdigit
 10332 ;;		_isspace
 10333 ;; This function is called by:
 10334 ;;		_vfpfcnvrt
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text35
 10339  0048F2                     __ptext35:
 10340                           	callstack 0
 10341  0048F2                     _atoi:
 10342                           	callstack 24
 10343  0048F2  0E00               	movlw	0
 10344  0048F4  6E16               	movwf	(atoi@n+1)^0,c
 10345  0048F6  0E00               	movlw	0
 10346  0048F8  6E15               	movwf	atoi@n^0,c
 10347  0048FA  0E00               	movlw	0
 10348  0048FC  6E0F               	movwf	(atoi@neg+1)^0,c
 10349  0048FE  0E00               	movlw	0
 10350  004900  6E0E               	movwf	atoi@neg^0,c
 10351  004902  EF85  F024         	goto	l5415
 10352  004906                     l5413:
 10353  004906  4A08               	infsnz	atoi@s^0,f,c
 10354  004908  2A09               	incf	(atoi@s+1)^0,f,c
 10355  00490A                     l5415:
 10356  00490A  0E01               	movlw	1
 10357  00490C  6E14               	movwf	_atoi$3105^0,c
 10358  00490E  C008  FFF6         	movff	atoi@s,tblptrl
 10359  004912  C009  FFF7         	movff	atoi@s+1,tblptrh
 10360  004916                     	if	0	;tblptru may be non-zero
 10361  004916                     	endif
 10362  004916                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10363  004916  0E00               	movlw	low (__mediumconst shr (0+16))
 10364  004918  6EF8               	movwf	tblptru,c
 10365  00491A                     	endif
 10366  00491A  0008               	tblrd		*
 10367  00491C  50F5               	movf	tablat,w,c
 10368  00491E  0A20               	xorlw	32
 10369  004920  B4D8               	btfsc	status,2,c
 10370  004922  EF95  F024         	goto	u6601
 10371  004926  EF97  F024         	goto	u6600
 10372  00492A                     u6601:
 10373  00492A  EFB6  F024         	goto	l5423
 10374  00492E                     u6600:
 10375  00492E  0EF7               	movlw	247
 10376  004930  6E0A               	movwf	??_atoi^0,c
 10377  004932  0EFF               	movlw	255
 10378  004934  6E0B               	movwf	(??_atoi+1)^0,c
 10379  004936  C008  FFF6         	movff	atoi@s,tblptrl
 10380  00493A  C009  FFF7         	movff	atoi@s+1,tblptrh
 10381  00493E                     	if	0	;tblptru may be non-zero
 10382  00493E                     	endif
 10383  00493E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10384  00493E  0E00               	movlw	low (__mediumconst shr (0+16))
 10385  004940  6EF8               	movwf	tblptru,c
 10386  004942                     	endif
 10387  004942  0008               	tblrd		*
 10388  004944  50F5               	movf	tablat,w,c
 10389  004946  6E0C               	movwf	(??_atoi+2)^0,c
 10390  004948  6A0D               	clrf	(??_atoi+3)^0,c
 10391  00494A  500A               	movf	??_atoi^0,w,c
 10392  00494C  260C               	addwf	(??_atoi+2)^0,f,c
 10393  00494E  500B               	movf	(??_atoi+1)^0,w,c
 10394  004950  220D               	addwfc	(??_atoi+3)^0,f,c
 10395  004952  500D               	movf	(??_atoi+3)^0,w,c
 10396  004954  E109               	bnz	u6610
 10397  004956  0E05               	movlw	5
 10398  004958  5C0C               	subwf	(??_atoi+2)^0,w,c
 10399  00495A  A0D8               	btfss	status,0,c
 10400  00495C  EFB2  F024         	goto	u6611
 10401  004960  EFB4  F024         	goto	u6610
 10402  004964                     u6611:
 10403  004964  EFB6  F024         	goto	l5423
 10404  004968                     u6610:
 10405  004968  0E00               	movlw	0
 10406  00496A  6E14               	movwf	_atoi$3105^0,c
 10407  00496C                     l5423:
 10408  00496C  C014  F010         	movff	_atoi$3105,_atoi$3104
 10409  004970  6A11               	clrf	(_atoi$3104+1)^0,c
 10410  004972  5010               	movf	_atoi$3104^0,w,c
 10411  004974  1011               	iorwf	(_atoi$3104+1)^0,w,c
 10412  004976  A4D8               	btfss	status,2,c
 10413  004978  EFC0  F024         	goto	u6621
 10414  00497C  EFC2  F024         	goto	u6620
 10415  004980                     u6621:
 10416  004980  EF83  F024         	goto	l5413
 10417  004984                     u6620:
 10418  004984  EFCC  F024         	goto	l5433
 10419  004988                     l5429:
 10420  004988  0E00               	movlw	0
 10421  00498A  6E0F               	movwf	(atoi@neg+1)^0,c
 10422  00498C  0E01               	movlw	1
 10423  00498E  6E0E               	movwf	atoi@neg^0,c
 10424  004990                     l5431:
 10425  004990  4A08               	infsnz	atoi@s^0,f,c
 10426  004992  2A09               	incf	(atoi@s+1)^0,f,c
 10427  004994  EF05  F025         	goto	l5439
 10428  004998                     l5433:
 10429  004998  C008  FFF6         	movff	atoi@s,tblptrl
 10430  00499C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10431  0049A0                     	if	0	;tblptru may be non-zero
 10432  0049A0                     	endif
 10433  0049A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10434  0049A0  0E00               	movlw	low (__mediumconst shr (0+16))
 10435  0049A2  6EF8               	movwf	tblptru,c
 10436  0049A4                     	endif
 10437  0049A4  0008               	tblrd		*
 10438  0049A6  50F5               	movf	tablat,w,c
 10439  0049A8  6E0A               	movwf	??_atoi^0,c
 10440  0049AA  6A0B               	clrf	(??_atoi+1)^0,c
 10441                           
 10442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10443                           ; Switch size 1, requested type "simple"
 10444                           ; Number of cases is 1, Range of values is 0 to 0
 10445                           ; switch strategies available:
 10446                           ; Name         Instructions Cycles
 10447                           ; simple_byte            4     3 (average)
 10448                           ;	Chosen strategy is simple_byte
 10449  0049AC  500B               	movf	(??_atoi+1)^0,w,c
 10450  0049AE  0A00               	xorlw	0	; case 0
 10451  0049B0  B4D8               	btfsc	status,2,c
 10452  0049B2  EFDD  F024         	goto	l6451
 10453  0049B6  EF05  F025         	goto	l5439
 10454  0049BA                     l6451:
 10455                           
 10456                           ; Switch size 1, requested type "simple"
 10457                           ; Number of cases is 2, Range of values is 43 to 45
 10458                           ; switch strategies available:
 10459                           ; Name         Instructions Cycles
 10460                           ; simple_byte            7     4 (average)
 10461                           ;	Chosen strategy is simple_byte
 10462  0049BA  500A               	movf	??_atoi^0,w,c
 10463  0049BC  0A2B               	xorlw	43	; case 43
 10464  0049BE  B4D8               	btfsc	status,2,c
 10465  0049C0  EFC8  F024         	goto	l5431
 10466  0049C4  0A06               	xorlw	6	; case 45
 10467  0049C6  B4D8               	btfsc	status,2,c
 10468  0049C8  EFC4  F024         	goto	l5429
 10469  0049CC  EF05  F025         	goto	l5439
 10470  0049D0                     l5435:
 10471  0049D0  C015  F001         	movff	atoi@n,___wmul@multiplier
 10472  0049D4  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10473  0049D8  0E00               	movlw	0
 10474  0049DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10475  0049DC  0E0A               	movlw	10
 10476  0049DE  6E03               	movwf	___wmul@multiplicand^0,c
 10477  0049E0  EC64  F032         	call	___wmul	;wreg free
 10478  0049E4  C008  FFF6         	movff	atoi@s,tblptrl
 10479  0049E8  C009  FFF7         	movff	atoi@s+1,tblptrh
 10480  0049EC                     	if	0	;tblptru may be non-zero
 10481  0049EC                     	endif
 10482  0049EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10483  0049EC  0E00               	movlw	low (__mediumconst shr (0+16))
 10484  0049EE  6EF8               	movwf	tblptru,c
 10485  0049F0                     	endif
 10486  0049F0  0008               	tblrd		*
 10487  0049F2  50F5               	movf	tablat,w,c
 10488  0049F4  5E01               	subwf	?___wmul^0,f,c
 10489  0049F6  0E00               	movlw	0
 10490  0049F8  5A02               	subwfb	(?___wmul+1)^0,f,c
 10491  0049FA  0E30               	movlw	48
 10492  0049FC  2401               	addwf	?___wmul^0,w,c
 10493  0049FE  6E15               	movwf	atoi@n^0,c
 10494  004A00  0E00               	movlw	0
 10495  004A02  2002               	addwfc	(?___wmul+1)^0,w,c
 10496  004A04  6E16               	movwf	(atoi@n+1)^0,c
 10497  004A06  EFC8  F024         	goto	l5431
 10498  004A0A                     l5439:
 10499  004A0A  0ED0               	movlw	208
 10500  004A0C  6E0A               	movwf	??_atoi^0,c
 10501  004A0E  0EFF               	movlw	255
 10502  004A10  6E0B               	movwf	(??_atoi+1)^0,c
 10503  004A12  C008  FFF6         	movff	atoi@s,tblptrl
 10504  004A16  C009  FFF7         	movff	atoi@s+1,tblptrh
 10505  004A1A                     	if	0	;tblptru may be non-zero
 10506  004A1A                     	endif
 10507  004A1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10508  004A1A  0E00               	movlw	low (__mediumconst shr (0+16))
 10509  004A1C  6EF8               	movwf	tblptru,c
 10510  004A1E                     	endif
 10511  004A1E  0008               	tblrd		*
 10512  004A20  50F5               	movf	tablat,w,c
 10513  004A22  6E0C               	movwf	(??_atoi+2)^0,c
 10514  004A24  6A0D               	clrf	(??_atoi+3)^0,c
 10515  004A26  500A               	movf	??_atoi^0,w,c
 10516  004A28  260C               	addwf	(??_atoi+2)^0,f,c
 10517  004A2A  500B               	movf	(??_atoi+1)^0,w,c
 10518  004A2C  220D               	addwfc	(??_atoi+3)^0,f,c
 10519  004A2E  500D               	movf	(??_atoi+3)^0,w,c
 10520  004A30  E10A               	bnz	u6630
 10521  004A32  0E0A               	movlw	10
 10522  004A34  5C0C               	subwf	(??_atoi+2)^0,w,c
 10523  004A36  A0D8               	btfss	status,0,c
 10524  004A38  EF20  F025         	goto	u6631
 10525  004A3C  EF23  F025         	goto	u6630
 10526  004A40                     u6631:
 10527  004A40  0E01               	movlw	1
 10528  004A42  EF24  F025         	goto	u6640
 10529  004A46                     u6630:
 10530  004A46  0E00               	movlw	0
 10531  004A48                     u6640:
 10532  004A48  6E12               	movwf	_atoi$3106^0,c
 10533  004A4A  6A13               	clrf	(_atoi$3106+1)^0,c
 10534  004A4C  5012               	movf	_atoi$3106^0,w,c
 10535  004A4E  1013               	iorwf	(_atoi$3106+1)^0,w,c
 10536  004A50  A4D8               	btfss	status,2,c
 10537  004A52  EF2D  F025         	goto	u6651
 10538  004A56  EF2F  F025         	goto	u6650
 10539  004A5A                     u6651:
 10540  004A5A  EFE8  F024         	goto	l5435
 10541  004A5E                     u6650:
 10542  004A5E  500E               	movf	atoi@neg^0,w,c
 10543  004A60  100F               	iorwf	(atoi@neg+1)^0,w,c
 10544  004A62  A4D8               	btfss	status,2,c
 10545  004A64  EF36  F025         	goto	u6661
 10546  004A68  EF38  F025         	goto	u6660
 10547  004A6C                     u6661:
 10548  004A6C  EF46  F025         	goto	l1662
 10549  004A70                     u6660:
 10550  004A70  C015  F00A         	movff	atoi@n,??_atoi
 10551  004A74  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10552  004A78  1E0A               	comf	??_atoi^0,f,c
 10553  004A7A  1E0B               	comf	(??_atoi+1)^0,f,c
 10554  004A7C  4A0A               	infsnz	??_atoi^0,f,c
 10555  004A7E  2A0B               	incf	(??_atoi+1)^0,f,c
 10556  004A80  C00A  F008         	movff	??_atoi,?_atoi
 10557  004A84  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10558  004A88  EF4A  F025         	goto	l1665
 10559  004A8C                     l1662:
 10560  004A8C  C015  F008         	movff	atoi@n,?_atoi
 10561  004A90  C016  F009         	movff	atoi@n+1,?_atoi+1
 10562  004A94                     l1665:
 10563  004A94  0012               	return		;funcret
 10564  004A96                     __end_of_atoi:
 10565                           	callstack 0
 10566                           
 10567 ;; *************** function _isspace *****************
 10568 ;; Defined at:
 10569 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  c               2    0[COMRAM] int 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;		None
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  2    0[COMRAM] int 
 10576 ;; Registers used:
 10577 ;;		wreg, status,2, status,0
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10585 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10587 ;;Total ram usage:        7 bytes
 10588 ;; Hardware stack levels used: 1
 10589 ;; This function calls:
 10590 ;;		Nothing
 10591 ;; This function is called by:
 10592 ;;		_atoi
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text36
 10597  005F4A                     __ptext36:
 10598                           	callstack 0
 10599  005F4A                     _isspace:
 10600                           	callstack 24
 10601  005F4A  0E01               	movlw	1
 10602  005F4C  6E07               	movwf	_isspace$3135^0,c
 10603  005F4E  0E20               	movlw	32
 10604  005F50  1801               	xorwf	isspace@c^0,w,c
 10605  005F52  1002               	iorwf	(isspace@c+1)^0,w,c
 10606  005F54  B4D8               	btfsc	status,2,c
 10607  005F56  EFAF  F02F         	goto	u5791
 10608  005F5A  EFB1  F02F         	goto	u5790
 10609  005F5E                     u5791:
 10610  005F5E  EFCA  F02F         	goto	l4995
 10611  005F62                     u5790:
 10612  005F62  0EF7               	movlw	247
 10613  005F64  6E03               	movwf	??_isspace^0,c
 10614  005F66  0EFF               	movlw	255
 10615  005F68  6E04               	movwf	(??_isspace+1)^0,c
 10616  005F6A  C001  F005         	movff	isspace@c,??_isspace+2
 10617  005F6E  C002  F006         	movff	isspace@c+1,??_isspace+3
 10618  005F72  5003               	movf	??_isspace^0,w,c
 10619  005F74  2605               	addwf	(??_isspace+2)^0,f,c
 10620  005F76  5004               	movf	(??_isspace+1)^0,w,c
 10621  005F78  2206               	addwfc	(??_isspace+3)^0,f,c
 10622  005F7A  5006               	movf	(??_isspace+3)^0,w,c
 10623  005F7C  E109               	bnz	u5800
 10624  005F7E  0E05               	movlw	5
 10625  005F80  5C05               	subwf	(??_isspace+2)^0,w,c
 10626  005F82  A0D8               	btfss	status,0,c
 10627  005F84  EFC6  F02F         	goto	u5801
 10628  005F88  EFC8  F02F         	goto	u5800
 10629  005F8C                     u5801:
 10630  005F8C  EFCA  F02F         	goto	l4995
 10631  005F90                     u5800:
 10632  005F90  0E00               	movlw	0
 10633  005F92  6E07               	movwf	_isspace$3135^0,c
 10634  005F94                     l4995:
 10635  005F94  C007  F001         	movff	_isspace$3135,?_isspace
 10636  005F98  6A02               	clrf	(?_isspace+1)^0,c
 10637  005F9A  0012               	return		;funcret
 10638  005F9C                     __end_of_isspace:
 10639                           	callstack 0
 10640                           
 10641 ;; *************** function _isdigit *****************
 10642 ;; Defined at:
 10643 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;  c               2    0[COMRAM] int 
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;		None
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  2    0[COMRAM] int 
 10650 ;; Registers used:
 10651 ;;		wreg, status,2, status,0
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10661 ;;Total ram usage:        6 bytes
 10662 ;; Hardware stack levels used: 1
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		_vfpfcnvrt
 10667 ;;		_atoi
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text37
 10672  00640E                     __ptext37:
 10673                           	callstack 0
 10674  00640E                     _isdigit:
 10675                           	callstack 25
 10676  00640E  0ED0               	movlw	208
 10677  006410  6E03               	movwf	??_isdigit^0,c
 10678  006412  0EFF               	movlw	255
 10679  006414  6E04               	movwf	(??_isdigit+1)^0,c
 10680  006416  C001  F005         	movff	isdigit@c,??_isdigit+2
 10681  00641A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10682  00641E  5003               	movf	??_isdigit^0,w,c
 10683  006420  2605               	addwf	(??_isdigit+2)^0,f,c
 10684  006422  5004               	movf	(??_isdigit+1)^0,w,c
 10685  006424  2206               	addwfc	(??_isdigit+3)^0,f,c
 10686  006426  5006               	movf	(??_isdigit+3)^0,w,c
 10687  006428  E10A               	bnz	u5770
 10688  00642A  0E0A               	movlw	10
 10689  00642C  5C05               	subwf	(??_isdigit+2)^0,w,c
 10690  00642E  A0D8               	btfss	status,0,c
 10691  006430  EF1C  F032         	goto	u5771
 10692  006434  EF1F  F032         	goto	u5770
 10693  006438                     u5771:
 10694  006438  0E01               	movlw	1
 10695  00643A  EF20  F032         	goto	u5780
 10696  00643E                     u5770:
 10697  00643E  0E00               	movlw	0
 10698  006440                     u5780:
 10699  006440  6E01               	movwf	?_isdigit^0,c
 10700  006442  6A02               	clrf	(?_isdigit+1)^0,c
 10701  006444  0012               	return		;funcret
 10702  006446                     __end_of_isdigit:
 10703                           	callstack 0
 10704                           
 10705 ;; *************** function _sendStringSerial4 *****************
 10706 ;; Defined at:
 10707 ;;		line 46 in file "serial_comm.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  string          2    1[COMRAM] PTR unsigned char 
 10710 ;;		 -> colourclick_testing@buf(40), colourcards_testingRGBC@buf(20), 
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;		None
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  1    wreg      void 
 10715 ;; Registers used:
 10716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10726 ;;Total ram usage:        2 bytes
 10727 ;; Hardware stack levels used: 1
 10728 ;; Hardware stack levels required when called: 1
 10729 ;; This function calls:
 10730 ;;		_sendCharSerial4
 10731 ;; This function is called by:
 10732 ;;		_colourcards_testingRGBC
 10733 ;;		_colourclick_testing
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           	psect	text38
 10738  006446                     __ptext38:
 10739                           	callstack 0
 10740  006446                     _sendStringSerial4:
 10741                           	callstack 27
 10742  006446                     
 10743                           ;serial_comm.c: 48:     while (*string != 0) {
 10744  006446  EF2E  F032         	goto	l5661
 10745  00644A                     l5657:
 10746                           
 10747                           ;serial_comm.c: 49:         sendCharSerial4(*string++);
 10748  00644A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10749  00644E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10750  006452  50DF               	movf	indf2,w,c
 10751  006454  ECC5  F032         	call	_sendCharSerial4
 10752  006458  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10753  00645A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10754  00645C                     l5661:
 10755                           
 10756                           ;serial_comm.c: 48:     while (*string != 0) {
 10757  00645C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10758  006460  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10759  006464  50DF               	movf	indf2,w,c
 10760  006466  A4D8               	btfss	status,2,c
 10761  006468  EF38  F032         	goto	u7021
 10762  00646C  EF3A  F032         	goto	u7020
 10763  006470                     u7021:
 10764  006470  EF25  F032         	goto	l5657
 10765  006474                     u7020:
 10766  006474  0012               	return		;funcret
 10767  006476                     __end_of_sendStringSerial4:
 10768                           	callstack 0
 10769                           
 10770 ;; *************** function _sendCharSerial4 *****************
 10771 ;; Defined at:
 10772 ;;		line 37 in file "serial_comm.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  charToSend      1    wreg     unsigned char 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  charToSend      1    0[COMRAM] unsigned char 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;Total ram usage:        1 bytes
 10791 ;; Hardware stack levels used: 1
 10792 ;; This function calls:
 10793 ;;		Nothing
 10794 ;; This function is called by:
 10795 ;;		_sendStringSerial4
 10796 ;; This function uses a non-reentrant model
 10797 ;;
 10798                           
 10799                           	psect	text39
 10800  00658A                     __ptext39:
 10801                           	callstack 0
 10802  00658A                     _sendCharSerial4:
 10803                           	callstack 27
 10804                           
 10805                           ;incstack = 0
 10806                           ;sendCharSerial4@charToSend stored from wreg
 10807  00658A  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10808  00658C                     l455:
 10809  00658C  010E               	movlb	14	; () banked
 10810  00658E  A537               	btfss	55,2,b	;volatile
 10811  006590  EFCC  F032         	goto	u6931
 10812  006594  EFCE  F032         	goto	u6930
 10813  006598                     u6931:
 10814  006598  EFC6  F032         	goto	l455
 10815  00659C                     u6930:
 10816  00659C                     
 10817                           ; BSR set to: 14
 10818                           ;serial_comm.c: 39:     TX4REG = charToSend;
 10819  00659C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10820  0065A0                     
 10821                           ; BSR set to: 14
 10822  0065A0  0012               	return		;funcret
 10823  0065A2                     __end_of_sendCharSerial4:
 10824                           	callstack 0
 10825                           
 10826 ;; *************** function _colourclickLEDs_C *****************
 10827 ;; Defined at:
 10828 ;;		line 84 in file "buttons_n_LEDs.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;  tog             1    wreg     unsigned char 
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;  tog             1    0[COMRAM] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10846 ;;Total ram usage:        1 bytes
 10847 ;; Hardware stack levels used: 1
 10848 ;; This function calls:
 10849 ;;		Nothing
 10850 ;; This function is called by:
 10851 ;;		_main
 10852 ;;		_colourcards_testingRGBC
 10853 ;;		_colourclick_calibration
 10854 ;;		_colourclickLEDs_init
 10855 ;;		_colourclick_readRGBC2
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text40
 10860  0064EE                     __ptext40:
 10861                           	callstack 0
 10862  0064EE                     _colourclickLEDs_C:
 10863                           	callstack 28
 10864                           
 10865                           ; BSR set to: 14
 10866                           ;incstack = 0
 10867                           ;colourclickLEDs_C@tog stored from wreg
 10868  0064EE  6E01               	movwf	colourclickLEDs_C@tog^0,c
 10869  0064F0                     
 10870                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
 10871  0064F0  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
 10872  0064F2  D002               	bra	u6995
 10873  0064F4  927F               	bcf	127,1,c	;volatile
 10874  0064F6  D001               	bra	u6996
 10875  0064F8                     u6995:
 10876  0064F8  827F               	bsf	127,1,c	;volatile
 10877  0064FA                     u6996:
 10878                           
 10879                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
 10880  0064FA  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
 10881  0064FC  D002               	bra	u7005
 10882  0064FE  9879               	bcf	121,4,c	;volatile
 10883  006500  D001               	bra	u7006
 10884  006502                     u7005:
 10885  006502  8879               	bsf	121,4,c	;volatile
 10886  006504                     u7006:
 10887                           
 10888                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
 10889  006504  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
 10890  006506  D002               	bra	u7015
 10891  006508  9E7E               	bcf	126,7,c	;volatile
 10892  00650A  D001               	bra	u7016
 10893  00650C                     u7015:
 10894  00650C  8E7E               	bsf	126,7,c	;volatile
 10895  00650E                     u7016:
 10896  00650E  0012               	return		;funcret
 10897  006510                     __end_of_colourclickLEDs_C:
 10898                           	callstack 0
 10899                           
 10900 ;; *************** function _colourcards_readRGBC *****************
 10901 ;; Defined at:
 10902 ;;		line 12 in file "colour_cards.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;  tmpval          2   39[COMRAM] PTR struct .
 10905 ;;		 -> main@current(8), 
 10906 ;;  mL              2   41[COMRAM] PTR struct .
 10907 ;;		 -> main@motorL(9), 
 10908 ;;  mR              2   43[COMRAM] PTR struct .
 10909 ;;		 -> main@motorR(9), 
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;  B_rel           4   57[COMRAM] float 
 10912 ;;  G_rel           4   53[COMRAM] float 
 10913 ;;  R_rel           4   49[COMRAM] float 
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10923 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;Total ram usage:       22 bytes
 10928 ;; Hardware stack levels used: 1
 10929 ;; Hardware stack levels required when called: 4
 10930 ;; This function calls:
 10931 ;;		___fldiv
 10932 ;;		___flge
 10933 ;;		___xxtofl
 10934 ;;		_colourclick_readRGBC
 10935 ;;		_forward
 10936 ;;		_reverse
 10937 ;;		_stop
 10938 ;;		_turnleft
 10939 ;;		_turnright
 10940 ;; This function is called by:
 10941 ;;		_main
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text41
 10946  00258C                     __ptext41:
 10947                           	callstack 0
 10948  00258C                     _colourcards_readRGBC:
 10949                           	callstack 26
 10950  00258C                     
 10951                           ;colour_cards.c: 12: void colourcards_readRGBC(RGBC_val *tmpval, DC_motor *mL, DC_motor 
      +                          *mR);colour_cards.c: 13: {;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
 10952  00258C  010E               	movlb	14	; () banked
 10953  00258E  9329               	bcf	41,1,b	;volatile
 10954  002590                     
 10955                           ; BSR set to: 14
 10956                           ;colour_cards.c: 18:     colourclick_readRGBC(tmpval);
 10957  002590  C028  F00C         	movff	colourcards_readRGBC@tmpval,colourclick_readRGBC@tmpval
 10958  002594  C029  F00D         	movff	colourcards_readRGBC@tmpval+1,colourclick_readRGBC@tmpval+1
 10959  002598  EC4D  F02F         	call	_colourclick_readRGBC	;wreg free
 10960                           
 10961                           ;colour_cards.c: 19:     float R_rel = (float)tmpval->R / (float)tmpval->C;
 10962  00259C  C028  FFD9         	movff	colourcards_readRGBC@tmpval,fsr2l
 10963  0025A0  C029  FFDA         	movff	colourcards_readRGBC@tmpval+1,fsr2h
 10964  0025A4  CFDE F02E          	movff	postinc2,??_colourcards_readRGBC
 10965  0025A8  CFDD F02F          	movff	postdec2,??_colourcards_readRGBC+1
 10966  0025AC  C02E  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
 10967  0025B0  C02F  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
 10968  0025B4  6A03               	clrf	(___xxtofl@val+2)^0,c
 10969  0025B6  6A04               	clrf	(___xxtofl@val+3)^0,c
 10970  0025B8  0E00               	movlw	0
 10971  0025BA  EC9F  F023         	call	___xxtofl
 10972  0025BE  C001  F00F         	movff	?___xxtofl,___fldiv@b
 10973  0025C2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 10974  0025C6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 10975  0025CA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 10976  0025CE  EE20 F006          	lfsr	2,6
 10977  0025D2  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 10978  0025D4  26D9               	addwf	fsr2l,f,c
 10979  0025D6  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 10980  0025D8  22DA               	addwfc	fsr2h,f,c
 10981  0025DA  CFDE F030          	movff	postinc2,??_colourcards_readRGBC+2
 10982  0025DE  CFDD F031          	movff	postdec2,??_colourcards_readRGBC+3
 10983  0025E2  C030  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
 10984  0025E6  C031  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
 10985  0025EA  6A03               	clrf	(___xxtofl@val+2)^0,c
 10986  0025EC  6A04               	clrf	(___xxtofl@val+3)^0,c
 10987  0025EE  0E00               	movlw	0
 10988  0025F0  EC9F  F023         	call	___xxtofl
 10989  0025F4  C001  F013         	movff	?___xxtofl,___fldiv@a
 10990  0025F8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
 10991  0025FC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
 10992  002600  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
 10993  002604  EC6E  F01E         	call	___fldiv	;wreg free
 10994  002608  C00F  F032         	movff	?___fldiv,colourcards_readRGBC@R_rel
 10995  00260C  C010  F033         	movff	?___fldiv+1,colourcards_readRGBC@R_rel+1
 10996  002610  C011  F034         	movff	?___fldiv+2,colourcards_readRGBC@R_rel+2
 10997  002614  C012  F035         	movff	?___fldiv+3,colourcards_readRGBC@R_rel+3
 10998                           
 10999                           ;colour_cards.c: 20:     float G_rel = (float)tmpval->G / (float)tmpval->C;
 11000  002618  EE20 F002          	lfsr	2,2
 11001  00261C  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 11002  00261E  26D9               	addwf	fsr2l,f,c
 11003  002620  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 11004  002622  22DA               	addwfc	fsr2h,f,c
 11005  002624  CFDE F02E          	movff	postinc2,??_colourcards_readRGBC
 11006  002628  CFDD F02F          	movff	postdec2,??_colourcards_readRGBC+1
 11007  00262C  C02E  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
 11008  002630  C02F  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
 11009  002634  6A03               	clrf	(___xxtofl@val+2)^0,c
 11010  002636  6A04               	clrf	(___xxtofl@val+3)^0,c
 11011  002638  0E00               	movlw	0
 11012  00263A  EC9F  F023         	call	___xxtofl
 11013  00263E  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11014  002642  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11015  002646  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11016  00264A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11017  00264E  EE20 F006          	lfsr	2,6
 11018  002652  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 11019  002654  26D9               	addwf	fsr2l,f,c
 11020  002656  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 11021  002658  22DA               	addwfc	fsr2h,f,c
 11022  00265A  CFDE F030          	movff	postinc2,??_colourcards_readRGBC+2
 11023  00265E  CFDD F031          	movff	postdec2,??_colourcards_readRGBC+3
 11024  002662  C030  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
 11025  002666  C031  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
 11026  00266A  6A03               	clrf	(___xxtofl@val+2)^0,c
 11027  00266C  6A04               	clrf	(___xxtofl@val+3)^0,c
 11028  00266E  0E00               	movlw	0
 11029  002670  EC9F  F023         	call	___xxtofl
 11030  002674  C001  F013         	movff	?___xxtofl,___fldiv@a
 11031  002678  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
 11032  00267C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
 11033  002680  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
 11034  002684  EC6E  F01E         	call	___fldiv	;wreg free
 11035  002688  C00F  F036         	movff	?___fldiv,colourcards_readRGBC@G_rel
 11036  00268C  C010  F037         	movff	?___fldiv+1,colourcards_readRGBC@G_rel+1
 11037  002690  C011  F038         	movff	?___fldiv+2,colourcards_readRGBC@G_rel+2
 11038  002694  C012  F039         	movff	?___fldiv+3,colourcards_readRGBC@G_rel+3
 11039                           
 11040                           ;colour_cards.c: 21:     float B_rel = (float)tmpval->B / (float)tmpval->C;
 11041  002698  EE20 F004          	lfsr	2,4
 11042  00269C  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 11043  00269E  26D9               	addwf	fsr2l,f,c
 11044  0026A0  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 11045  0026A2  22DA               	addwfc	fsr2h,f,c
 11046  0026A4  CFDE F02E          	movff	postinc2,??_colourcards_readRGBC
 11047  0026A8  CFDD F02F          	movff	postdec2,??_colourcards_readRGBC+1
 11048  0026AC  C02E  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
 11049  0026B0  C02F  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
 11050  0026B4  6A03               	clrf	(___xxtofl@val+2)^0,c
 11051  0026B6  6A04               	clrf	(___xxtofl@val+3)^0,c
 11052  0026B8  0E00               	movlw	0
 11053  0026BA  EC9F  F023         	call	___xxtofl
 11054  0026BE  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11055  0026C2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11056  0026C6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11057  0026CA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11058  0026CE  EE20 F006          	lfsr	2,6
 11059  0026D2  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 11060  0026D4  26D9               	addwf	fsr2l,f,c
 11061  0026D6  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 11062  0026D8  22DA               	addwfc	fsr2h,f,c
 11063  0026DA  CFDE F030          	movff	postinc2,??_colourcards_readRGBC+2
 11064  0026DE  CFDD F031          	movff	postdec2,??_colourcards_readRGBC+3
 11065  0026E2  C030  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
 11066  0026E6  C031  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
 11067  0026EA  6A03               	clrf	(___xxtofl@val+2)^0,c
 11068  0026EC  6A04               	clrf	(___xxtofl@val+3)^0,c
 11069  0026EE  0E00               	movlw	0
 11070  0026F0  EC9F  F023         	call	___xxtofl
 11071  0026F4  C001  F013         	movff	?___xxtofl,___fldiv@a
 11072  0026F8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
 11073  0026FC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
 11074  002700  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
 11075  002704  EC6E  F01E         	call	___fldiv	;wreg free
 11076  002708  C00F  F03A         	movff	?___fldiv,colourcards_readRGBC@B_rel
 11077  00270C  C010  F03B         	movff	?___fldiv+1,colourcards_readRGBC@B_rel+1
 11078  002710  C011  F03C         	movff	?___fldiv+2,colourcards_readRGBC@B_rel+2
 11079  002714  C012  F03D         	movff	?___fldiv+3,colourcards_readRGBC@B_rel+3
 11080  002718                     
 11081                           ;colour_cards.c: 24:     if ((R_rel>0.54) && (G_rel<0.245) && (B_rel<0.18)) {
 11082  002718  0E71               	movlw	113
 11083  00271A  6E1A               	movwf	___flge@ff1^0,c
 11084  00271C  0E3D               	movlw	61
 11085  00271E  6E1B               	movwf	(___flge@ff1+1)^0,c
 11086  002720  0E0A               	movlw	10
 11087  002722  6E1C               	movwf	(___flge@ff1+2)^0,c
 11088  002724  0E3F               	movlw	63
 11089  002726  6E1D               	movwf	(___flge@ff1+3)^0,c
 11090  002728  C032  F01E         	movff	colourcards_readRGBC@R_rel,___flge@ff2
 11091  00272C  C033  F01F         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
 11092  002730  C034  F020         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
 11093  002734  C035  F021         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
 11094  002738  EC45  F029         	call	___flge	;wreg free
 11095  00273C  B0D8               	btfsc	status,0,c
 11096  00273E  EFA3  F013         	goto	u7701
 11097  002742  EFA5  F013         	goto	u7700
 11098  002746                     u7701:
 11099  002746  EFEA  F013         	goto	l6101
 11100  00274A                     u7700:
 11101  00274A  C036  F01A         	movff	colourcards_readRGBC@G_rel,___flge@ff1
 11102  00274E  C037  F01B         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
 11103  002752  C038  F01C         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
 11104  002756  C039  F01D         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
 11105  00275A  0E48               	movlw	72
 11106  00275C  6E1E               	movwf	___flge@ff2^0,c
 11107  00275E  0EE1               	movlw	225
 11108  002760  6E1F               	movwf	(___flge@ff2+1)^0,c
 11109  002762  0E7A               	movlw	122
 11110  002764  6E20               	movwf	(___flge@ff2+2)^0,c
 11111  002766  0E3E               	movlw	62
 11112  002768  6E21               	movwf	(___flge@ff2+3)^0,c
 11113  00276A  EC45  F029         	call	___flge	;wreg free
 11114  00276E  B0D8               	btfsc	status,0,c
 11115  002770  EFBC  F013         	goto	u7711
 11116  002774  EFBE  F013         	goto	u7710
 11117  002778                     u7711:
 11118  002778  EFEA  F013         	goto	l6101
 11119  00277C                     u7710:
 11120  00277C  C03A  F01A         	movff	colourcards_readRGBC@B_rel,___flge@ff1
 11121  002780  C03B  F01B         	movff	colourcards_readRGBC@B_rel+1,___flge@ff1+1
 11122  002784  C03C  F01C         	movff	colourcards_readRGBC@B_rel+2,___flge@ff1+2
 11123  002788  C03D  F01D         	movff	colourcards_readRGBC@B_rel+3,___flge@ff1+3
 11124  00278C  0EEC               	movlw	236
 11125  00278E  6E1E               	movwf	___flge@ff2^0,c
 11126  002790  0E51               	movlw	81
 11127  002792  6E1F               	movwf	(___flge@ff2+1)^0,c
 11128  002794  0E38               	movlw	56
 11129  002796  6E20               	movwf	(___flge@ff2+2)^0,c
 11130  002798  0E3E               	movlw	62
 11131  00279A  6E21               	movwf	(___flge@ff2+3)^0,c
 11132  00279C  EC45  F029         	call	___flge	;wreg free
 11133  0027A0  B0D8               	btfsc	status,0,c
 11134  0027A2  EFD5  F013         	goto	u7721
 11135  0027A6  EFD7  F013         	goto	u7720
 11136  0027AA                     u7721:
 11137  0027AA  EFEA  F013         	goto	l6101
 11138  0027AE                     u7720:
 11139  0027AE                     
 11140                           ;colour_cards.c: 26:         turnright(mL, mR, 90);
 11141  0027AE  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
 11142  0027B2  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
 11143  0027B6  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
 11144  0027BA  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
 11145  0027BE  0E00               	movlw	0
 11146  0027C0  6E27               	movwf	(turnright@deg+1)^0,c
 11147  0027C2  0E5A               	movlw	90
 11148  0027C4  6E26               	movwf	turnright@deg^0,c
 11149  0027C6  ECF6  F02F         	call	_turnright	;wreg free
 11150  0027CA                     l6099:
 11151                           
 11152                           ;colour_cards.c: 27:         unknowncard_flag = 0;
 11153  0027CA  0E00               	movlw	0
 11154  0027CC  0101               	movlb	1	; () banked
 11155  0027CE  6F2B               	movwf	_unknowncard_flag& (0+255),b	;volatile
 11156                           
 11157                           ;colour_cards.c: 29:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
 11158  0027D0  EF00  F017         	goto	l6197
 11159  0027D4                     l6101:
 11160  0027D4  C032  F01A         	movff	colourcards_readRGBC@R_rel,___flge@ff1
 11161  0027D8  C033  F01B         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
 11162  0027DC  C034  F01C         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
 11163  0027E0  C035  F01D         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
 11164  0027E4  0E52               	movlw	82
 11165  0027E6  6E1E               	movwf	___flge@ff2^0,c
 11166  0027E8  0EB8               	movlw	184
 11167  0027EA  6E1F               	movwf	(___flge@ff2+1)^0,c
 11168  0027EC  0EDE               	movlw	222
 11169  0027EE  6E20               	movwf	(___flge@ff2+2)^0,c
 11170  0027F0  0E3E               	movlw	62
 11171  0027F2  6E21               	movwf	(___flge@ff2+3)^0,c
 11172  0027F4  EC45  F029         	call	___flge	;wreg free
 11173  0027F8  B0D8               	btfsc	status,0,c
 11174  0027FA  EF01  F014         	goto	u7731
 11175  0027FE  EF03  F014         	goto	u7730
 11176  002802                     u7731:
 11177  002802  EF45  F014         	goto	l6111
 11178  002806                     u7730:
 11179  002806  0E52               	movlw	82
 11180  002808  6E1A               	movwf	___flge@ff1^0,c
 11181  00280A  0EB8               	movlw	184
 11182  00280C  6E1B               	movwf	(___flge@ff1+1)^0,c
 11183  00280E  0E9E               	movlw	158
 11184  002810  6E1C               	movwf	(___flge@ff1+2)^0,c
 11185  002812  0E3E               	movlw	62
 11186  002814  6E1D               	movwf	(___flge@ff1+3)^0,c
 11187  002816  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
 11188  00281A  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
 11189  00281E  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
 11190  002822  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
 11191  002826  EC45  F029         	call	___flge	;wreg free
 11192  00282A  B0D8               	btfsc	status,0,c
 11193  00282C  EF1A  F014         	goto	u7741
 11194  002830  EF1C  F014         	goto	u7740
 11195  002834                     u7741:
 11196  002834  EF45  F014         	goto	l6111
 11197  002838                     u7740:
 11198  002838  0E14               	movlw	20
 11199  00283A  6E1A               	movwf	___flge@ff1^0,c
 11200  00283C  0EAE               	movlw	174
 11201  00283E  6E1B               	movwf	(___flge@ff1+1)^0,c
 11202  002840  0E47               	movlw	71
 11203  002842  6E1C               	movwf	(___flge@ff1+2)^0,c
 11204  002844  0E3E               	movlw	62
 11205  002846  6E1D               	movwf	(___flge@ff1+3)^0,c
 11206  002848  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
 11207  00284C  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
 11208  002850  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
 11209  002854  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
 11210  002858  EC45  F029         	call	___flge	;wreg free
 11211  00285C  B0D8               	btfsc	status,0,c
 11212  00285E  EF33  F014         	goto	u7751
 11213  002862  EF35  F014         	goto	u7750
 11214  002866                     u7751:
 11215  002866  EF45  F014         	goto	l6111
 11216  00286A                     u7750:
 11217  00286A                     
 11218                           ;colour_cards.c: 31:         turnleft(mL, mR, 90);
 11219  00286A  C02A  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
 11220  00286E  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
 11221  002872  C02C  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
 11222  002876  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
 11223  00287A  0E00               	movlw	0
 11224  00287C  6E27               	movwf	(turnleft@deg+1)^0,c
 11225  00287E  0E5A               	movlw	90
 11226  002880  6E26               	movwf	turnleft@deg^0,c
 11227  002882  EC1E  F030         	call	_turnleft	;wreg free
 11228  002886  EFE5  F013         	goto	l6099
 11229  00288A                     l6111:
 11230  00288A  C032  F01A         	movff	colourcards_readRGBC@R_rel,___flge@ff1
 11231  00288E  C033  F01B         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
 11232  002892  C034  F01C         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
 11233  002896  C035  F01D         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
 11234  00289A  0EF6               	movlw	246
 11235  00289C  6E1E               	movwf	___flge@ff2^0,c
 11236  00289E  0E28               	movlw	40
 11237  0028A0  6E1F               	movwf	(___flge@ff2+1)^0,c
 11238  0028A2  0EDC               	movlw	220
 11239  0028A4  6E20               	movwf	(___flge@ff2+2)^0,c
 11240  0028A6  0E3E               	movlw	62
 11241  0028A8  6E21               	movwf	(___flge@ff2+3)^0,c
 11242  0028AA  EC45  F029         	call	___flge	;wreg free
 11243  0028AE  B0D8               	btfsc	status,0,c
 11244  0028B0  EF5C  F014         	goto	u7761
 11245  0028B4  EF5E  F014         	goto	u7760
 11246  0028B8                     u7761:
 11247  0028B8  EFA0  F014         	goto	l6121
 11248  0028BC                     u7760:
 11249  0028BC  0E9A               	movlw	154
 11250  0028BE  6E1A               	movwf	___flge@ff1^0,c
 11251  0028C0  0E99               	movlw	153
 11252  0028C2  6E1B               	movwf	(___flge@ff1+1)^0,c
 11253  0028C4  0E99               	movlw	153
 11254  0028C6  6E1C               	movwf	(___flge@ff1+2)^0,c
 11255  0028C8  0E3E               	movlw	62
 11256  0028CA  6E1D               	movwf	(___flge@ff1+3)^0,c
 11257  0028CC  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
 11258  0028D0  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
 11259  0028D4  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
 11260  0028D8  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
 11261  0028DC  EC45  F029         	call	___flge	;wreg free
 11262  0028E0  B0D8               	btfsc	status,0,c
 11263  0028E2  EF75  F014         	goto	u7771
 11264  0028E6  EF77  F014         	goto	u7770
 11265  0028EA                     u7771:
 11266  0028EA  EFA0  F014         	goto	l6121
 11267  0028EE                     u7770:
 11268  0028EE  0E3D               	movlw	61
 11269  0028F0  6E1A               	movwf	___flge@ff1^0,c
 11270  0028F2  0E0A               	movlw	10
 11271  0028F4  6E1B               	movwf	(___flge@ff1+1)^0,c
 11272  0028F6  0E57               	movlw	87
 11273  0028F8  6E1C               	movwf	(___flge@ff1+2)^0,c
 11274  0028FA  0E3E               	movlw	62
 11275  0028FC  6E1D               	movwf	(___flge@ff1+3)^0,c
 11276  0028FE  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
 11277  002902  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
 11278  002906  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
 11279  00290A  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
 11280  00290E  EC45  F029         	call	___flge	;wreg free
 11281  002912  B0D8               	btfsc	status,0,c
 11282  002914  EF8E  F014         	goto	u7781
 11283  002918  EF90  F014         	goto	u7780
 11284  00291C                     u7781:
 11285  00291C  EFA0  F014         	goto	l6121
 11286  002920                     u7780:
 11287  002920                     
 11288                           ;colour_cards.c: 36:         turnright(mL, mR, 180);
 11289  002920  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
 11290  002924  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
 11291  002928  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
 11292  00292C  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
 11293  002930  0E00               	movlw	0
 11294  002932  6E27               	movwf	(turnright@deg+1)^0,c
 11295  002934  0EB4               	movlw	180
 11296  002936  6E26               	movwf	turnright@deg^0,c
 11297  002938  ECF6  F02F         	call	_turnright	;wreg free
 11298  00293C  EFE5  F013         	goto	l6099
 11299  002940                     l6121:
 11300  002940  0E48               	movlw	72
 11301  002942  6E1A               	movwf	___flge@ff1^0,c
 11302  002944  0EE1               	movlw	225
 11303  002946  6E1B               	movwf	(___flge@ff1+1)^0,c
 11304  002948  0EFA               	movlw	250
 11305  00294A  6E1C               	movwf	(___flge@ff1+2)^0,c
 11306  00294C  0E3E               	movlw	62
 11307  00294E  6E1D               	movwf	(___flge@ff1+3)^0,c
 11308  002950  C032  F01E         	movff	colourcards_readRGBC@R_rel,___flge@ff2
 11309  002954  C033  F01F         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
 11310  002958  C034  F020         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
 11311  00295C  C035  F021         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
 11312  002960  EC45  F029         	call	___flge	;wreg free
 11313  002964  B0D8               	btfsc	status,0,c
 11314  002966  EFB7  F014         	goto	u7791
 11315  00296A  EFB9  F014         	goto	u7790
 11316  00296E                     u7791:
 11317  00296E  EF0F  F015         	goto	l6131
 11318  002972                     u7790:
 11319  002972  0E85               	movlw	133
 11320  002974  6E1A               	movwf	___flge@ff1^0,c
 11321  002976  0EEB               	movlw	235
 11322  002978  6E1B               	movwf	(___flge@ff1+1)^0,c
 11323  00297A  0E91               	movlw	145
 11324  00297C  6E1C               	movwf	(___flge@ff1+2)^0,c
 11325  00297E  0E3E               	movlw	62
 11326  002980  6E1D               	movwf	(___flge@ff1+3)^0,c
 11327  002982  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
 11328  002986  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
 11329  00298A  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
 11330  00298E  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
 11331  002992  EC45  F029         	call	___flge	;wreg free
 11332  002996  B0D8               	btfsc	status,0,c
 11333  002998  EFD0  F014         	goto	u7801
 11334  00299C  EFD2  F014         	goto	u7800
 11335  0029A0                     u7801:
 11336  0029A0  EF0F  F015         	goto	l6131
 11337  0029A4                     u7800:
 11338  0029A4  0EEC               	movlw	236
 11339  0029A6  6E1A               	movwf	___flge@ff1^0,c
 11340  0029A8  0E51               	movlw	81
 11341  0029AA  6E1B               	movwf	(___flge@ff1+1)^0,c
 11342  0029AC  0E38               	movlw	56
 11343  0029AE  6E1C               	movwf	(___flge@ff1+2)^0,c
 11344  0029B0  0E3E               	movlw	62
 11345  0029B2  6E1D               	movwf	(___flge@ff1+3)^0,c
 11346  0029B4  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
 11347  0029B8  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
 11348  0029BC  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
 11349  0029C0  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
 11350  0029C4  EC45  F029         	call	___flge	;wreg free
 11351  0029C8  B0D8               	btfsc	status,0,c
 11352  0029CA  EFE9  F014         	goto	u7811
 11353  0029CE  EFEB  F014         	goto	u7810
 11354  0029D2                     u7811:
 11355  0029D2  EF0F  F015         	goto	l6131
 11356  0029D6                     u7810:
 11357  0029D6                     
 11358                           ;colour_cards.c: 41:         reverse(mL, mR);
 11359  0029D6  C02A  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
 11360  0029DA  C02B  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
 11361  0029DE  C02C  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
 11362  0029E2  C02D  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
 11363  0029E6  ECE2  F02D         	call	_reverse	;wreg free
 11364                           
 11365                           ;colour_cards.c: 42:         stop(mL, mR);
 11366  0029EA  C02A  F01A         	movff	colourcards_readRGBC@mL,stop@mL
 11367  0029EE  C02B  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
 11368  0029F2  C02C  F01C         	movff	colourcards_readRGBC@mR,stop@mR
 11369  0029F6  C02D  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
 11370  0029FA  EC7C  F02E         	call	_stop	;wreg free
 11371                           
 11372                           ;colour_cards.c: 43:         turnright(mL, mR, 90);
 11373  0029FE  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
 11374  002A02  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
 11375  002A06  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
 11376  002A0A  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
 11377  002A0E  0E00               	movlw	0
 11378  002A10  6E27               	movwf	(turnright@deg+1)^0,c
 11379  002A12  0E5A               	movlw	90
 11380  002A14  6E26               	movwf	turnright@deg^0,c
 11381  002A16  ECF6  F02F         	call	_turnright	;wreg free
 11382  002A1A  EFE5  F013         	goto	l6099
 11383  002A1E                     l6131:
 11384  002A1E  0E48               	movlw	72
 11385  002A20  6E1A               	movwf	___flge@ff1^0,c
 11386  002A22  0EE1               	movlw	225
 11387  002A24  6E1B               	movwf	(___flge@ff1+1)^0,c
 11388  002A26  0EFA               	movlw	250
 11389  002A28  6E1C               	movwf	(___flge@ff1+2)^0,c
 11390  002A2A  0E3E               	movlw	62
 11391  002A2C  6E1D               	movwf	(___flge@ff1+3)^0,c
 11392  002A2E  C032  F01E         	movff	colourcards_readRGBC@R_rel,___flge@ff2
 11393  002A32  C033  F01F         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
 11394  002A36  C034  F020         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
 11395  002A3A  C035  F021         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
 11396  002A3E  EC45  F029         	call	___flge	;wreg free
 11397  002A42  B0D8               	btfsc	status,0,c
 11398  002A44  EF26  F015         	goto	u7821
 11399  002A48  EF28  F015         	goto	u7820
 11400  002A4C                     u7821:
 11401  002A4C  EF7E  F015         	goto	l6141
 11402  002A50                     u7820:
 11403  002A50  C036  F01A         	movff	colourcards_readRGBC@G_rel,___flge@ff1
 11404  002A54  C037  F01B         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
 11405  002A58  C038  F01C         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
 11406  002A5C  C039  F01D         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
 11407  002A60  0ECD               	movlw	205
 11408  002A62  6E1E               	movwf	___flge@ff2^0,c
 11409  002A64  0ECC               	movlw	204
 11410  002A66  6E1F               	movwf	(___flge@ff2+1)^0,c
 11411  002A68  0E8C               	movlw	140
 11412  002A6A  6E20               	movwf	(___flge@ff2+2)^0,c
 11413  002A6C  0E3E               	movlw	62
 11414  002A6E  6E21               	movwf	(___flge@ff2+3)^0,c
 11415  002A70  EC45  F029         	call	___flge	;wreg free
 11416  002A74  B0D8               	btfsc	status,0,c
 11417  002A76  EF3F  F015         	goto	u7831
 11418  002A7A  EF41  F015         	goto	u7830
 11419  002A7E                     u7831:
 11420  002A7E  EF7E  F015         	goto	l6141
 11421  002A82                     u7830:
 11422  002A82  0E14               	movlw	20
 11423  002A84  6E1A               	movwf	___flge@ff1^0,c
 11424  002A86  0EAE               	movlw	174
 11425  002A88  6E1B               	movwf	(___flge@ff1+1)^0,c
 11426  002A8A  0E47               	movlw	71
 11427  002A8C  6E1C               	movwf	(___flge@ff1+2)^0,c
 11428  002A8E  0E3E               	movlw	62
 11429  002A90  6E1D               	movwf	(___flge@ff1+3)^0,c
 11430  002A92  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
 11431  002A96  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
 11432  002A9A  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
 11433  002A9E  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
 11434  002AA2  EC45  F029         	call	___flge	;wreg free
 11435  002AA6  B0D8               	btfsc	status,0,c
 11436  002AA8  EF58  F015         	goto	u7841
 11437  002AAC  EF5A  F015         	goto	u7840
 11438  002AB0                     u7841:
 11439  002AB0  EF7E  F015         	goto	l6141
 11440  002AB4                     u7840:
 11441  002AB4                     
 11442                           ;colour_cards.c: 48:         reverse(mL, mR);
 11443  002AB4  C02A  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
 11444  002AB8  C02B  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
 11445  002ABC  C02C  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
 11446  002AC0  C02D  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
 11447  002AC4  ECE2  F02D         	call	_reverse	;wreg free
 11448                           
 11449                           ;colour_cards.c: 49:         stop(mL, mR);
 11450  002AC8  C02A  F01A         	movff	colourcards_readRGBC@mL,stop@mL
 11451  002ACC  C02B  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
 11452  002AD0  C02C  F01C         	movff	colourcards_readRGBC@mR,stop@mR
 11453  002AD4  C02D  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
 11454  002AD8  EC7C  F02E         	call	_stop	;wreg free
 11455                           
 11456                           ;colour_cards.c: 50:         turnleft(mL, mR, 90);
 11457  002ADC  C02A  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
 11458  002AE0  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
 11459  002AE4  C02C  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
 11460  002AE8  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
 11461  002AEC  0E00               	movlw	0
 11462  002AEE  6E27               	movwf	(turnleft@deg+1)^0,c
 11463  002AF0  0E5A               	movlw	90
 11464  002AF2  6E26               	movwf	turnleft@deg^0,c
 11465  002AF4  EC1E  F030         	call	_turnleft	;wreg free
 11466  002AF8  EFE5  F013         	goto	l6099
 11467  002AFC                     l6141:
 11468  002AFC  0E71               	movlw	113
 11469  002AFE  6E1A               	movwf	___flge@ff1^0,c
 11470  002B00  0E3D               	movlw	61
 11471  002B02  6E1B               	movwf	(___flge@ff1+1)^0,c
 11472  002B04  0E0A               	movlw	10
 11473  002B06  6E1C               	movwf	(___flge@ff1+2)^0,c
 11474  002B08  0E3F               	movlw	63
 11475  002B0A  6E1D               	movwf	(___flge@ff1+3)^0,c
 11476  002B0C  C032  F01E         	movff	colourcards_readRGBC@R_rel,___flge@ff2
 11477  002B10  C033  F01F         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
 11478  002B14  C034  F020         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
 11479  002B18  C035  F021         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
 11480  002B1C  EC45  F029         	call	___flge	;wreg free
 11481  002B20  B0D8               	btfsc	status,0,c
 11482  002B22  EF95  F015         	goto	u7851
 11483  002B26  EF97  F015         	goto	u7850
 11484  002B2A                     u7851:
 11485  002B2A  EFD9  F015         	goto	l6151
 11486  002B2E                     u7850:
 11487  002B2E  C036  F01A         	movff	colourcards_readRGBC@G_rel,___flge@ff1
 11488  002B32  C037  F01B         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
 11489  002B36  C038  F01C         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
 11490  002B3A  C039  F01D         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
 11491  002B3E  0E8F               	movlw	143
 11492  002B40  6E1E               	movwf	___flge@ff2^0,c
 11493  002B42  0EC2               	movlw	194
 11494  002B44  6E1F               	movwf	(___flge@ff2+1)^0,c
 11495  002B46  0E75               	movlw	117
 11496  002B48  6E20               	movwf	(___flge@ff2+2)^0,c
 11497  002B4A  0E3E               	movlw	62
 11498  002B4C  6E21               	movwf	(___flge@ff2+3)^0,c
 11499  002B4E  EC45  F029         	call	___flge	;wreg free
 11500  002B52  B0D8               	btfsc	status,0,c
 11501  002B54  EFAE  F015         	goto	u7861
 11502  002B58  EFB0  F015         	goto	u7860
 11503  002B5C                     u7861:
 11504  002B5C  EFD9  F015         	goto	l6151
 11505  002B60                     u7860:
 11506  002B60  C03A  F01A         	movff	colourcards_readRGBC@B_rel,___flge@ff1
 11507  002B64  C03B  F01B         	movff	colourcards_readRGBC@B_rel+1,___flge@ff1+1
 11508  002B68  C03C  F01C         	movff	colourcards_readRGBC@B_rel+2,___flge@ff1+2
 11509  002B6C  C03D  F01D         	movff	colourcards_readRGBC@B_rel+3,___flge@ff1+3
 11510  002B70  0EEC               	movlw	236
 11511  002B72  6E1E               	movwf	___flge@ff2^0,c
 11512  002B74  0E51               	movlw	81
 11513  002B76  6E1F               	movwf	(___flge@ff2+1)^0,c
 11514  002B78  0E38               	movlw	56
 11515  002B7A  6E20               	movwf	(___flge@ff2+2)^0,c
 11516  002B7C  0E3E               	movlw	62
 11517  002B7E  6E21               	movwf	(___flge@ff2+3)^0,c
 11518  002B80  EC45  F029         	call	___flge	;wreg free
 11519  002B84  B0D8               	btfsc	status,0,c
 11520  002B86  EFC7  F015         	goto	u7871
 11521  002B8A  EFC9  F015         	goto	u7870
 11522  002B8E                     u7871:
 11523  002B8E  EFD9  F015         	goto	l6151
 11524  002B92                     u7870:
 11525  002B92                     
 11526                           ;colour_cards.c: 55:         turnright(mL, mR, 135);
 11527  002B92  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
 11528  002B96  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
 11529  002B9A  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
 11530  002B9E  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
 11531  002BA2  0E00               	movlw	0
 11532  002BA4  6E27               	movwf	(turnright@deg+1)^0,c
 11533  002BA6  0E87               	movlw	135
 11534  002BA8  6E26               	movwf	turnright@deg^0,c
 11535  002BAA  ECF6  F02F         	call	_turnright	;wreg free
 11536  002BAE  EFE5  F013         	goto	l6099
 11537  002BB2                     l6151:
 11538  002BB2  C032  F01A         	movff	colourcards_readRGBC@R_rel,___flge@ff1
 11539  002BB6  C033  F01B         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
 11540  002BBA  C034  F01C         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
 11541  002BBE  C035  F01D         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
 11542  002BC2  0EAE               	movlw	174
 11543  002BC4  6E1E               	movwf	___flge@ff2^0,c
 11544  002BC6  0E47               	movlw	71
 11545  002BC8  6E1F               	movwf	(___flge@ff2+1)^0,c
 11546  002BCA  0EE1               	movlw	225
 11547  002BCC  6E20               	movwf	(___flge@ff2+2)^0,c
 11548  002BCE  0E3E               	movlw	62
 11549  002BD0  6E21               	movwf	(___flge@ff2+3)^0,c
 11550  002BD2  EC45  F029         	call	___flge	;wreg free
 11551  002BD6  B0D8               	btfsc	status,0,c
 11552  002BD8  EFF0  F015         	goto	u7881
 11553  002BDC  EFF2  F015         	goto	u7880
 11554  002BE0                     u7881:
 11555  002BE0  EF34  F016         	goto	l6161
 11556  002BE4                     u7880:
 11557  002BE4  0EF6               	movlw	246
 11558  002BE6  6E1A               	movwf	___flge@ff1^0,c
 11559  002BE8  0E28               	movlw	40
 11560  002BEA  6E1B               	movwf	(___flge@ff1+1)^0,c
 11561  002BEC  0E9C               	movlw	156
 11562  002BEE  6E1C               	movwf	(___flge@ff1+2)^0,c
 11563  002BF0  0E3E               	movlw	62
 11564  002BF2  6E1D               	movwf	(___flge@ff1+3)^0,c
 11565  002BF4  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
 11566  002BF8  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
 11567  002BFC  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
 11568  002C00  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
 11569  002C04  EC45  F029         	call	___flge	;wreg free
 11570  002C08  B0D8               	btfsc	status,0,c
 11571  002C0A  EF09  F016         	goto	u7891
 11572  002C0E  EF0B  F016         	goto	u7890
 11573  002C12                     u7891:
 11574  002C12  EF34  F016         	goto	l6161
 11575  002C16                     u7890:
 11576  002C16  0E3D               	movlw	61
 11577  002C18  6E1A               	movwf	___flge@ff1^0,c
 11578  002C1A  0E0A               	movlw	10
 11579  002C1C  6E1B               	movwf	(___flge@ff1+1)^0,c
 11580  002C1E  0E57               	movlw	87
 11581  002C20  6E1C               	movwf	(___flge@ff1+2)^0,c
 11582  002C22  0E3E               	movlw	62
 11583  002C24  6E1D               	movwf	(___flge@ff1+3)^0,c
 11584  002C26  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
 11585  002C2A  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
 11586  002C2E  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
 11587  002C32  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
 11588  002C36  EC45  F029         	call	___flge	;wreg free
 11589  002C3A  B0D8               	btfsc	status,0,c
 11590  002C3C  EF22  F016         	goto	u7901
 11591  002C40  EF24  F016         	goto	u7900
 11592  002C44                     u7901:
 11593  002C44  EF34  F016         	goto	l6161
 11594  002C48                     u7900:
 11595  002C48                     
 11596                           ;colour_cards.c: 60:         turnleft(mL, mR, 135);
 11597  002C48  C02A  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
 11598  002C4C  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
 11599  002C50  C02C  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
 11600  002C54  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
 11601  002C58  0E00               	movlw	0
 11602  002C5A  6E27               	movwf	(turnleft@deg+1)^0,c
 11603  002C5C  0E87               	movlw	135
 11604  002C5E  6E26               	movwf	turnleft@deg^0,c
 11605  002C60  EC1E  F030         	call	_turnleft	;wreg free
 11606  002C64  EFE5  F013         	goto	l6099
 11607  002C68                     l6161:
 11608  002C68  C032  F01A         	movff	colourcards_readRGBC@R_rel,___flge@ff1
 11609  002C6C  C033  F01B         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
 11610  002C70  C034  F01C         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
 11611  002C74  C035  F01D         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
 11612  002C78  0E1F               	movlw	31
 11613  002C7A  6E1E               	movwf	___flge@ff2^0,c
 11614  002C7C  0E85               	movlw	133
 11615  002C7E  6E1F               	movwf	(___flge@ff2+1)^0,c
 11616  002C80  0EEB               	movlw	235
 11617  002C82  6E20               	movwf	(___flge@ff2+2)^0,c
 11618  002C84  0E3E               	movlw	62
 11619  002C86  6E21               	movwf	(___flge@ff2+3)^0,c
 11620  002C88  EC45  F029         	call	___flge	;wreg free
 11621  002C8C  B0D8               	btfsc	status,0,c
 11622  002C8E  EF4B  F016         	goto	u7911
 11623  002C92  EF4D  F016         	goto	u7910
 11624  002C96                     u7911:
 11625  002C96  EF94  F016         	goto	l6173
 11626  002C9A                     u7910:
 11627  002C9A  0E3D               	movlw	61
 11628  002C9C  6E1A               	movwf	___flge@ff1^0,c
 11629  002C9E  0E0A               	movlw	10
 11630  002CA0  6E1B               	movwf	(___flge@ff1+1)^0,c
 11631  002CA2  0E97               	movlw	151
 11632  002CA4  6E1C               	movwf	(___flge@ff1+2)^0,c
 11633  002CA6  0E3E               	movlw	62
 11634  002CA8  6E1D               	movwf	(___flge@ff1+3)^0,c
 11635  002CAA  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
 11636  002CAE  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
 11637  002CB2  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
 11638  002CB6  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
 11639  002CBA  EC45  F029         	call	___flge	;wreg free
 11640  002CBE  B0D8               	btfsc	status,0,c
 11641  002CC0  EF64  F016         	goto	u7921
 11642  002CC4  EF66  F016         	goto	u7920
 11643  002CC8                     u7921:
 11644  002CC8  EF94  F016         	goto	l6173
 11645  002CCC                     u7920:
 11646  002CCC  0E3D               	movlw	61
 11647  002CCE  6E1A               	movwf	___flge@ff1^0,c
 11648  002CD0  0E0A               	movlw	10
 11649  002CD2  6E1B               	movwf	(___flge@ff1+1)^0,c
 11650  002CD4  0E57               	movlw	87
 11651  002CD6  6E1C               	movwf	(___flge@ff1+2)^0,c
 11652  002CD8  0E3E               	movlw	62
 11653  002CDA  6E1D               	movwf	(___flge@ff1+3)^0,c
 11654  002CDC  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
 11655  002CE0  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
 11656  002CE4  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
 11657  002CE8  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
 11658  002CEC  EC45  F029         	call	___flge	;wreg free
 11659  002CF0  B0D8               	btfsc	status,0,c
 11660  002CF2  EF7D  F016         	goto	u7931
 11661  002CF6  EF7F  F016         	goto	u7930
 11662  002CFA                     u7931:
 11663  002CFA  EF94  F016         	goto	l6173
 11664  002CFE                     u7930:
 11665  002CFE                     
 11666                           ;colour_cards.c: 65:         turnright(mL, mR, 180);
 11667  002CFE  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
 11668  002D02  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
 11669  002D06  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
 11670  002D0A  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
 11671  002D0E  0E00               	movlw	0
 11672  002D10  6E27               	movwf	(turnright@deg+1)^0,c
 11673  002D12  0EB4               	movlw	180
 11674  002D14  6E26               	movwf	turnright@deg^0,c
 11675  002D16  ECF6  F02F         	call	_turnright	;wreg free
 11676  002D1A                     
 11677                           ;colour_cards.c: 66:         unknowncard_flag = 0;
 11678  002D1A  0E00               	movlw	0
 11679  002D1C  0101               	movlb	1	; () banked
 11680  002D1E  6F2B               	movwf	_unknowncard_flag& (0+255),b	;volatile
 11681  002D20                     
 11682                           ; BSR set to: 1
 11683                           ;colour_cards.c: 67:         returnhome_flag = 1;
 11684  002D20  0E01               	movlw	1
 11685  002D22  6F2A               	movwf	_returnhome_flag& (0+255),b	;volatile
 11686                           
 11687                           ;colour_cards.c: 69:     } else {
 11688  002D24  EF00  F017         	goto	l6197
 11689  002D28                     l6173:
 11690                           
 11691                           ;colour_cards.c: 71:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 11692  002D28  0E52               	movlw	82
 11693  002D2A  6E2F               	movwf	(??_colourcards_readRGBC+1)^0,c
 11694  002D2C  0E2B               	movlw	43
 11695  002D2E  6E2E               	movwf	??_colourcards_readRGBC^0,c
 11696  002D30  0E00               	movlw	0
 11697  002D32                     u8447:
 11698  002D32  2EE8               	decfsz	wreg,f,c
 11699  002D34  D7FE               	bra	u8447
 11700  002D36  2E2E               	decfsz	??_colourcards_readRGBC^0,f,c
 11701  002D38  D7FC               	bra	u8447
 11702  002D3A  2E2F               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
 11703  002D3C  D7FA               	bra	u8447
 11704  002D3E  D000               	nop2	
 11705  002D40                     
 11706                           ;colour_cards.c: 72:         colourclick_readRGBC(tmpval);
 11707  002D40  C028  F00C         	movff	colourcards_readRGBC@tmpval,colourclick_readRGBC@tmpval
 11708  002D44  C029  F00D         	movff	colourcards_readRGBC@tmpval+1,colourclick_readRGBC@tmpval+1
 11709  002D48  EC4D  F02F         	call	_colourclick_readRGBC	;wreg free
 11710  002D4C                     
 11711                           ;colour_cards.c: 73:         if ((tmpval->C < interrupts_lowerbound) || (tmpval->C > int
      +                          errupts_upperbound)) {
 11712  002D4C  EE20 F006          	lfsr	2,6
 11713  002D50  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 11714  002D52  26D9               	addwf	fsr2l,f,c
 11715  002D54  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 11716  002D56  22DA               	addwfc	fsr2h,f,c
 11717  002D58  0101               	movlb	1	; () banked
 11718  002D5A  5128               	movf	_interrupts_lowerbound& (0+255),w,b	;volatile
 11719  002D5C  5CDE               	subwf	postinc2,w,c
 11720  002D5E  5129               	movf	(_interrupts_lowerbound+1)& (0+255),w,b	;volatile
 11721  002D60  58DE               	subwfb	postinc2,w,c
 11722  002D62  A0D8               	btfss	status,0,c
 11723  002D64  EFB6  F016         	goto	u7941
 11724  002D68  EFB8  F016         	goto	u7940
 11725  002D6C                     u7941:
 11726  002D6C  EFC9  F016         	goto	l6181
 11727  002D70                     u7940:
 11728  002D70                     
 11729                           ; BSR set to: 1
 11730  002D70  EE20 F006          	lfsr	2,6
 11731  002D74  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 11732  002D76  26D9               	addwf	fsr2l,f,c
 11733  002D78  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 11734  002D7A  22DA               	addwfc	fsr2h,f,c
 11735  002D7C  50DE               	movf	postinc2,w,c
 11736  002D7E  5DD6               	subwf	_interrupts_upperbound& (0+255),w,b	;volatile
 11737  002D80  50DE               	movf	postinc2,w,c
 11738  002D82  59D7               	subwfb	(_interrupts_upperbound+1)& (0+255),w,b	;volatile
 11739  002D84  B0D8               	btfsc	status,0,c
 11740  002D86  EFC7  F016         	goto	u7951
 11741  002D8A  EFC9  F016         	goto	u7950
 11742  002D8E                     u7951:
 11743  002D8E  EFF4  F016         	goto	l6193
 11744  002D92                     u7950:
 11745  002D92                     l6181:
 11746                           
 11747                           ; BSR set to: 1
 11748                           ;colour_cards.c: 74:             if (unknowncard_flag<3) {
 11749  002D92  0E03               	movlw	3
 11750  002D94  612B               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
 11751  002D96  EFCF  F016         	goto	u7961
 11752  002D9A  EFD1  F016         	goto	u7960
 11753  002D9E                     u7961:
 11754  002D9E  EFD7  F016         	goto	l156
 11755  002DA2                     u7960:
 11756  002DA2                     
 11757                           ; BSR set to: 1
 11758                           ;colour_cards.c: 75:                 PIR0bits.INT1IF = 1;
 11759  002DA2  010E               	movlb	14	; () banked
 11760  002DA4  8333               	bsf	51,1,b	;volatile
 11761  002DA6                     
 11762                           ; BSR set to: 14
 11763                           ;colour_cards.c: 76:                 unknowncard_flag++;
 11764  002DA6  0101               	movlb	1	; () banked
 11765  002DA8  2B2B               	incf	_unknowncard_flag& (0+255),f,b	;volatile
 11766                           
 11767                           ;colour_cards.c: 77:             } else {
 11768  002DAA  EF00  F017         	goto	l6197
 11769  002DAE                     l156:
 11770                           
 11771                           ; BSR set to: 1
 11772                           ;colour_cards.c: 78:                 LATHbits.LATH3 = 1;
 11773  002DAE  8680               	bsf	128,3,c	;volatile
 11774  002DB0                     
 11775                           ; BSR set to: 1
 11776                           ;colour_cards.c: 79:                 turnright(mL, mR, 180);
 11777  002DB0  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
 11778  002DB4  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
 11779  002DB8  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
 11780  002DBC  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
 11781  002DC0  0E00               	movlw	0
 11782  002DC2  6E27               	movwf	(turnright@deg+1)^0,c
 11783  002DC4  0EB4               	movlw	180
 11784  002DC6  6E26               	movwf	turnright@deg^0,c
 11785  002DC8  ECF6  F02F         	call	_turnright	;wreg free
 11786  002DCC                     
 11787                           ;colour_cards.c: 80:                 returnhome_flag = !returnhome_flag;
 11788  002DCC  0101               	movlb	1	; () banked
 11789  002DCE  512A               	movf	_returnhome_flag& (0+255),w,b	;volatile
 11790  002DD0  B4D8               	btfsc	status,2,c
 11791  002DD2  EFED  F016         	goto	u7971
 11792  002DD6  EFF0  F016         	goto	u7970
 11793  002DDA                     u7971:
 11794  002DDA  0E01               	movlw	1
 11795  002DDC  EFF1  F016         	goto	u7980
 11796  002DE0                     u7970:
 11797  002DE0  0E00               	movlw	0
 11798  002DE2                     u7980:
 11799  002DE2  6F2A               	movwf	_returnhome_flag& (0+255),b	;volatile
 11800  002DE4  EFE5  F013         	goto	l6099
 11801  002DE8                     l6193:
 11802                           
 11803                           ; BSR set to: 1
 11804                           ;colour_cards.c: 84:             forward(mL, mR);
 11805  002DE8  C02A  F01A         	movff	colourcards_readRGBC@mL,forward@mL
 11806  002DEC  C02B  F01B         	movff	colourcards_readRGBC@mL+1,forward@mL+1
 11807  002DF0  C02C  F01C         	movff	colourcards_readRGBC@mR,forward@mR
 11808  002DF4  C02D  F01D         	movff	colourcards_readRGBC@mR+1,forward@mR+1
 11809  002DF8  EC2F  F02E         	call	_forward	;wreg free
 11810  002DFC  EFE5  F013         	goto	l6099
 11811  002E00                     l6197:
 11812                           
 11813                           ; BSR set to: 1
 11814                           ;colour_cards.c: 90:     colourcard_flag = 0;
 11815  002E00  0E00               	movlw	0
 11816  002E02  6F2C               	movwf	_colourcard_flag& (0+255),b	;volatile
 11817  002E04                     
 11818                           ; BSR set to: 1
 11819                           ;colour_cards.c: 91:     PIE0bits.INT1IE = 1;
 11820  002E04  010E               	movlb	14	; () banked
 11821  002E06  8329               	bsf	41,1,b	;volatile
 11822  002E08                     
 11823                           ; BSR set to: 14
 11824  002E08  0012               	return		;funcret
 11825  002E0A                     __end_of_colourcards_readRGBC:
 11826                           	callstack 0
 11827                           
 11828 ;; *************** function _turnright *****************
 11829 ;; Defined at:
 11830 ;;		line 218 in file "DC_motors.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  mL              2   33[COMRAM] PTR struct .
 11833 ;;		 -> main@motorL(9), 
 11834 ;;  mR              2   35[COMRAM] PTR struct .
 11835 ;;		 -> main@motorR(9), 
 11836 ;;  deg             2   37[COMRAM] unsigned int 
 11837 ;; Auto vars:     Size  Location     Type
 11838 ;;		None
 11839 ;; Return value:  Size  Location     Type
 11840 ;;                  1    wreg      void 
 11841 ;; Registers used:
 11842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11843 ;; Tracked objects:
 11844 ;;		On entry : 0/0
 11845 ;;		On exit  : 0/0
 11846 ;;		Unchanged: 0/0
 11847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11848 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11852 ;;Total ram usage:        6 bytes
 11853 ;; Hardware stack levels used: 1
 11854 ;; Hardware stack levels required when called: 3
 11855 ;; This function calls:
 11856 ;;		_left
 11857 ;;		_right
 11858 ;; This function is called by:
 11859 ;;		_colourcards_readRGBC
 11860 ;;		_DCmotors_calibration
 11861 ;;		_DCmotors_testing
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           	psect	text42
 11866  005FEC                     __ptext42:
 11867                           	callstack 0
 11868  005FEC                     _turnright:
 11869                           	callstack 26
 11870  005FEC                     
 11871                           ;DC_motors.c: 218: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {
 11872  005FEC  0101               	movlb	1	; () banked
 11873  005FEE  512A               	movf	_returnhome_flag& (0+255),w,b	;volatile
 11874  005FF0  A4D8               	btfss	status,2,c
 11875  005FF2  EFFD  F02F         	goto	u7171
 11876  005FF6  EFFF  F02F         	goto	u7170
 11877  005FFA                     u7171:
 11878  005FFA  EF0F  F030         	goto	l5745
 11879  005FFE                     u7170:
 11880  005FFE                     
 11881                           ; BSR set to: 1
 11882                           ;DC_motors.c: 221:         right(mL, mR, deg);
 11883  005FFE  C022  F01A         	movff	turnright@mL,right@mL
 11884  006002  C023  F01B         	movff	turnright@mL+1,right@mL+1
 11885  006006  C024  F01C         	movff	turnright@mR,right@mR
 11886  00600A  C025  F01D         	movff	turnright@mR+1,right@mR+1
 11887  00600E  C026  F01E         	movff	turnright@deg,right@deg
 11888  006012  C027  F01F         	movff	turnright@deg+1,right@deg+1
 11889  006016  EC46  F02A         	call	_right	;wreg free
 11890                           
 11891                           ;DC_motors.c: 222:     } else {
 11892  00601A  EF1D  F030         	goto	l616
 11893  00601E                     l5745:
 11894                           
 11895                           ; BSR set to: 1
 11896                           ;DC_motors.c: 223:         left(mL, mR, deg);
 11897  00601E  C022  F01A         	movff	turnright@mL,left@mL
 11898  006022  C023  F01B         	movff	turnright@mL+1,left@mL+1
 11899  006026  C024  F01C         	movff	turnright@mR,left@mR
 11900  00602A  C025  F01D         	movff	turnright@mR+1,left@mR+1
 11901  00602E  C026  F01E         	movff	turnright@deg,left@deg
 11902  006032  C027  F01F         	movff	turnright@deg+1,left@deg+1
 11903  006036  ECBB  F02A         	call	_left	;wreg free
 11904  00603A                     l616:
 11905  00603A  0012               	return		;funcret
 11906  00603C                     __end_of_turnright:
 11907                           	callstack 0
 11908                           
 11909 ;; *************** function _turnleft *****************
 11910 ;; Defined at:
 11911 ;;		line 205 in file "DC_motors.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;  mL              2   33[COMRAM] PTR struct .
 11914 ;;		 -> main@motorL(9), 
 11915 ;;  mR              2   35[COMRAM] PTR struct .
 11916 ;;		 -> main@motorR(9), 
 11917 ;;  deg             2   37[COMRAM] unsigned int 
 11918 ;; Auto vars:     Size  Location     Type
 11919 ;;		None
 11920 ;; Return value:  Size  Location     Type
 11921 ;;                  1    wreg      void 
 11922 ;; Registers used:
 11923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11924 ;; Tracked objects:
 11925 ;;		On entry : 0/0
 11926 ;;		On exit  : 0/0
 11927 ;;		Unchanged: 0/0
 11928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11929 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11932 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11933 ;;Total ram usage:        6 bytes
 11934 ;; Hardware stack levels used: 1
 11935 ;; Hardware stack levels required when called: 3
 11936 ;; This function calls:
 11937 ;;		_left
 11938 ;;		_right
 11939 ;; This function is called by:
 11940 ;;		_colourcards_readRGBC
 11941 ;;		_DCmotors_calibration
 11942 ;;		_DCmotors_testing
 11943 ;; This function uses a non-reentrant model
 11944 ;;
 11945                           
 11946                           	psect	text43
 11947  00603C                     __ptext43:
 11948                           	callstack 0
 11949  00603C                     _turnleft:
 11950                           	callstack 26
 11951  00603C                     
 11952                           ;DC_motors.c: 205: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 206: {;DC_motors.c: 207:     if (returnhome_flag==0) {
 11953  00603C  0101               	movlb	1	; () banked
 11954  00603E  512A               	movf	_returnhome_flag& (0+255),w,b	;volatile
 11955  006040  A4D8               	btfss	status,2,c
 11956  006042  EF25  F030         	goto	u7181
 11957  006046  EF27  F030         	goto	u7180
 11958  00604A                     u7181:
 11959  00604A  EF37  F030         	goto	l5751
 11960  00604E                     u7180:
 11961  00604E                     
 11962                           ; BSR set to: 1
 11963                           ;DC_motors.c: 208:         left(mL, mR, deg);
 11964  00604E  C022  F01A         	movff	turnleft@mL,left@mL
 11965  006052  C023  F01B         	movff	turnleft@mL+1,left@mL+1
 11966  006056  C024  F01C         	movff	turnleft@mR,left@mR
 11967  00605A  C025  F01D         	movff	turnleft@mR+1,left@mR+1
 11968  00605E  C026  F01E         	movff	turnleft@deg,left@deg
 11969  006062  C027  F01F         	movff	turnleft@deg+1,left@deg+1
 11970  006066  ECBB  F02A         	call	_left	;wreg free
 11971                           
 11972                           ;DC_motors.c: 209:     } else {
 11973  00606A  EF45  F030         	goto	l611
 11974  00606E                     l5751:
 11975                           
 11976                           ; BSR set to: 1
 11977                           ;DC_motors.c: 210:         right(mL, mR, deg);
 11978  00606E  C022  F01A         	movff	turnleft@mL,right@mL
 11979  006072  C023  F01B         	movff	turnleft@mL+1,right@mL+1
 11980  006076  C024  F01C         	movff	turnleft@mR,right@mR
 11981  00607A  C025  F01D         	movff	turnleft@mR+1,right@mR+1
 11982  00607E  C026  F01E         	movff	turnleft@deg,right@deg
 11983  006082  C027  F01F         	movff	turnleft@deg+1,right@deg+1
 11984  006086  EC46  F02A         	call	_right	;wreg free
 11985  00608A                     l611:
 11986  00608A  0012               	return		;funcret
 11987  00608C                     __end_of_turnleft:
 11988                           	callstack 0
 11989                           
 11990 ;; *************** function _right *****************
 11991 ;; Defined at:
 11992 ;;		line 177 in file "DC_motors.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  mL              2   25[COMRAM] PTR struct .
 11995 ;;		 -> main@motorL(9), 
 11996 ;;  mR              2   27[COMRAM] PTR struct .
 11997 ;;		 -> main@motorR(9), 
 11998 ;;  deg             2   29[COMRAM] unsigned int 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      void 
 12003 ;; Registers used:
 12004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12010 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12013 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12014 ;;Total ram usage:        8 bytes
 12015 ;; Hardware stack levels used: 1
 12016 ;; Hardware stack levels required when called: 2
 12017 ;; This function calls:
 12018 ;;		_DCmotors_setPWM
 12019 ;; This function is called by:
 12020 ;;		_turnleft
 12021 ;;		_turnright
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text44
 12026  00548C                     __ptext44:
 12027                           	callstack 0
 12028  00548C                     _right:
 12029                           	callstack 26
 12030  00548C                     
 12031                           ;DC_motors.c: 177: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           178: {;DC_motors.c: 180:     mL->direction = 1;
 12032  00548C  EE20 F001          	lfsr	2,1
 12033  005490  501A               	movf	right@mL^0,w,c
 12034  005492  26D9               	addwf	fsr2l,f,c
 12035  005494  501B               	movf	(right@mL+1)^0,w,c
 12036  005496  22DA               	addwfc	fsr2h,f,c
 12037  005498  0E01               	movlw	1
 12038  00549A  6EDF               	movwf	indf2,c
 12039                           
 12040                           ;DC_motors.c: 181:     mR->direction = 0;
 12041  00549C  EE20 F001          	lfsr	2,1
 12042  0054A0  501C               	movf	right@mR^0,w,c
 12043  0054A2  26D9               	addwf	fsr2l,f,c
 12044  0054A4  501D               	movf	(right@mR+1)^0,w,c
 12045  0054A6  22DA               	addwfc	fsr2h,f,c
 12046  0054A8  0E00               	movlw	0
 12047  0054AA  6EDF               	movwf	indf2,c
 12048                           
 12049                           ;DC_motors.c: 184:     while((mL->power < 50) || (mR->power < 50)){
 12050  0054AC  EFA1  F02A         	goto	l601
 12051  0054B0                     l5709:
 12052                           
 12053                           ;DC_motors.c: 186:         LATHbits.LATH0 = !LATHbits.LATH0;
 12054  0054B0  A080               	btfss	128,0,c	;volatile
 12055  0054B2  EF5D  F02A         	goto	u7091
 12056  0054B6  EF61  F02A         	goto	u7090
 12057  0054BA                     u7091:
 12058  0054BA  6A20               	clrf	??_right^0,c
 12059  0054BC  2A20               	incf	??_right^0,f,c
 12060  0054BE  EF62  F02A         	goto	u7108
 12061  0054C2                     u7090:
 12062  0054C2  6A20               	clrf	??_right^0,c
 12063  0054C4                     u7108:
 12064  0054C4  5080               	movf	128,w,c	;volatile
 12065  0054C6  1820               	xorwf	??_right^0,w,c
 12066  0054C8  0BFE               	andlw	-2
 12067  0054CA  1820               	xorwf	??_right^0,w,c
 12068  0054CC  6E80               	movwf	128,c	;volatile
 12069  0054CE                     
 12070                           ;DC_motors.c: 189:         if (mL->power < 50) {mL->power += 1;}
 12071  0054CE  C01A  FFD9         	movff	right@mL,fsr2l
 12072  0054D2  C01B  FFDA         	movff	right@mL+1,fsr2h
 12073  0054D6  0E32               	movlw	50
 12074  0054D8  60DF               	cpfslt	indf2,c
 12075  0054DA  EF71  F02A         	goto	u7111
 12076  0054DE  EF73  F02A         	goto	u7110
 12077  0054E2                     u7111:
 12078  0054E2  EF78  F02A         	goto	l5715
 12079  0054E6                     u7110:
 12080  0054E6  C01A  FFD9         	movff	right@mL,fsr2l
 12081  0054EA  C01B  FFDA         	movff	right@mL+1,fsr2h
 12082  0054EE  2ADF               	incf	indf2,f,c
 12083  0054F0                     l5715:
 12084                           
 12085                           ;DC_motors.c: 190:         if (mR->power < 50) {mR->power += 1;}
 12086  0054F0  C01C  FFD9         	movff	right@mR,fsr2l
 12087  0054F4  C01D  FFDA         	movff	right@mR+1,fsr2h
 12088  0054F8  0E32               	movlw	50
 12089  0054FA  60DF               	cpfslt	indf2,c
 12090  0054FC  EF82  F02A         	goto	u7121
 12091  005500  EF84  F02A         	goto	u7120
 12092  005504                     u7121:
 12093  005504  EF89  F02A         	goto	l5719
 12094  005508                     u7120:
 12095  005508  C01C  FFD9         	movff	right@mR,fsr2l
 12096  00550C  C01D  FFDA         	movff	right@mR+1,fsr2h
 12097  005510  2ADF               	incf	indf2,f,c
 12098  005512                     l5719:
 12099                           
 12100                           ;DC_motors.c: 193:         DCmotors_setPWM(mL);
 12101  005512  C01A  F00F         	movff	right@mL,DCmotors_setPWM@m
 12102  005516  C01B  F010         	movff	right@mL+1,DCmotors_setPWM@m+1
 12103  00551A  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12104  00551E                     
 12105                           ;DC_motors.c: 194:         DCmotors_setPWM(mR);
 12106  00551E  C01C  F00F         	movff	right@mR,DCmotors_setPWM@m
 12107  005522  C01D  F010         	movff	right@mR+1,DCmotors_setPWM@m+1
 12108  005526  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12109  00552A                     
 12110                           ;DC_motors.c: 195:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12111  00552A  0E09               	movlw	9
 12112  00552C  6E21               	movwf	(??_right+1)^0,c
 12113  00552E  0E1E               	movlw	30
 12114  005530  6E20               	movwf	??_right^0,c
 12115  005532  0EE4               	movlw	228
 12116  005534                     u8457:
 12117  005534  2EE8               	decfsz	wreg,f,c
 12118  005536  D7FE               	bra	u8457
 12119  005538  2E20               	decfsz	??_right^0,f,c
 12120  00553A  D7FC               	bra	u8457
 12121  00553C  2E21               	decfsz	(??_right+1)^0,f,c
 12122  00553E  D7FA               	bra	u8457
 12123  005540  D000               	nop2	
 12124  005542                     l601:
 12125                           
 12126                           ;DC_motors.c: 184:     while((mL->power < 50) || (mR->power < 50)){
 12127  005542  C01A  FFD9         	movff	right@mL,fsr2l
 12128  005546  C01B  FFDA         	movff	right@mL+1,fsr2h
 12129  00554A  0E31               	movlw	49
 12130  00554C  64DF               	cpfsgt	indf2,c
 12131  00554E  EFAB  F02A         	goto	u7131
 12132  005552  EFAD  F02A         	goto	u7130
 12133  005556                     u7131:
 12134  005556  EF58  F02A         	goto	l5709
 12135  00555A                     u7130:
 12136  00555A  C01C  FFD9         	movff	right@mR,fsr2l
 12137  00555E  C01D  FFDA         	movff	right@mR+1,fsr2h
 12138  005562  0E31               	movlw	49
 12139  005564  64DF               	cpfsgt	indf2,c
 12140  005566  EFB7  F02A         	goto	u7141
 12141  00556A  EFB9  F02A         	goto	u7140
 12142  00556E                     u7141:
 12143  00556E  EF58  F02A         	goto	l5709
 12144  005572                     u7140:
 12145  005572                     
 12146                           ;DC_motors.c: 198:     LATHbits.LATH0 = 0;
 12147  005572  9080               	bcf	128,0,c	;volatile
 12148  005574  0012               	return		;funcret
 12149  005576                     __end_of_right:
 12150                           	callstack 0
 12151                           
 12152 ;; *************** function _left *****************
 12153 ;; Defined at:
 12154 ;;		line 150 in file "DC_motors.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  mL              2   25[COMRAM] PTR struct .
 12157 ;;		 -> main@motorL(9), 
 12158 ;;  mR              2   27[COMRAM] PTR struct .
 12159 ;;		 -> main@motorR(9), 
 12160 ;;  deg             2   29[COMRAM] unsigned int 
 12161 ;; Auto vars:     Size  Location     Type
 12162 ;;		None
 12163 ;; Return value:  Size  Location     Type
 12164 ;;                  1    wreg      void 
 12165 ;; Registers used:
 12166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12167 ;; Tracked objects:
 12168 ;;		On entry : 0/0
 12169 ;;		On exit  : 0/0
 12170 ;;		Unchanged: 0/0
 12171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12172 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12175 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12176 ;;Total ram usage:        8 bytes
 12177 ;; Hardware stack levels used: 1
 12178 ;; Hardware stack levels required when called: 2
 12179 ;; This function calls:
 12180 ;;		_DCmotors_setPWM
 12181 ;; This function is called by:
 12182 ;;		_turnleft
 12183 ;;		_turnright
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	text45
 12188  005576                     __ptext45:
 12189                           	callstack 0
 12190  005576                     _left:
 12191                           	callstack 26
 12192  005576                     
 12193                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     mL->direction = 0;
 12194  005576  EE20 F001          	lfsr	2,1
 12195  00557A  501A               	movf	left@mL^0,w,c
 12196  00557C  26D9               	addwf	fsr2l,f,c
 12197  00557E  501B               	movf	(left@mL+1)^0,w,c
 12198  005580  22DA               	addwfc	fsr2h,f,c
 12199  005582  0E00               	movlw	0
 12200  005584  6EDF               	movwf	indf2,c
 12201                           
 12202                           ;DC_motors.c: 154:     mR->direction = 1;
 12203  005586  EE20 F001          	lfsr	2,1
 12204  00558A  501C               	movf	left@mR^0,w,c
 12205  00558C  26D9               	addwf	fsr2l,f,c
 12206  00558E  501D               	movf	(left@mR+1)^0,w,c
 12207  005590  22DA               	addwfc	fsr2h,f,c
 12208  005592  0E01               	movlw	1
 12209  005594  6EDF               	movwf	indf2,c
 12210                           
 12211                           ;DC_motors.c: 157:     while((mL->power < 50) || (mR->power < 50)){
 12212  005596  EF16  F02B         	goto	l593
 12213  00559A                     l5689:
 12214                           
 12215                           ;DC_motors.c: 159:         LATFbits.LATF0 = !LATFbits.LATF0;
 12216  00559A  A07E               	btfss	126,0,c	;volatile
 12217  00559C  EFD2  F02A         	goto	u7031
 12218  0055A0  EFD6  F02A         	goto	u7030
 12219  0055A4                     u7031:
 12220  0055A4  6A20               	clrf	??_left^0,c
 12221  0055A6  2A20               	incf	??_left^0,f,c
 12222  0055A8  EFD7  F02A         	goto	u7048
 12223  0055AC                     u7030:
 12224  0055AC  6A20               	clrf	??_left^0,c
 12225  0055AE                     u7048:
 12226  0055AE  507E               	movf	126,w,c	;volatile
 12227  0055B0  1820               	xorwf	??_left^0,w,c
 12228  0055B2  0BFE               	andlw	-2
 12229  0055B4  1820               	xorwf	??_left^0,w,c
 12230  0055B6  6E7E               	movwf	126,c	;volatile
 12231  0055B8                     
 12232                           ;DC_motors.c: 162:         if (mL->power < 50) {mL->power += 1;}
 12233  0055B8  C01A  FFD9         	movff	left@mL,fsr2l
 12234  0055BC  C01B  FFDA         	movff	left@mL+1,fsr2h
 12235  0055C0  0E32               	movlw	50
 12236  0055C2  60DF               	cpfslt	indf2,c
 12237  0055C4  EFE6  F02A         	goto	u7051
 12238  0055C8  EFE8  F02A         	goto	u7050
 12239  0055CC                     u7051:
 12240  0055CC  EFED  F02A         	goto	l5695
 12241  0055D0                     u7050:
 12242  0055D0  C01A  FFD9         	movff	left@mL,fsr2l
 12243  0055D4  C01B  FFDA         	movff	left@mL+1,fsr2h
 12244  0055D8  2ADF               	incf	indf2,f,c
 12245  0055DA                     l5695:
 12246                           
 12247                           ;DC_motors.c: 163:         if (mR->power < 50) {mR->power += 1;}
 12248  0055DA  C01C  FFD9         	movff	left@mR,fsr2l
 12249  0055DE  C01D  FFDA         	movff	left@mR+1,fsr2h
 12250  0055E2  0E32               	movlw	50
 12251  0055E4  60DF               	cpfslt	indf2,c
 12252  0055E6  EFF7  F02A         	goto	u7061
 12253  0055EA  EFF9  F02A         	goto	u7060
 12254  0055EE                     u7061:
 12255  0055EE  EFFE  F02A         	goto	l5699
 12256  0055F2                     u7060:
 12257  0055F2  C01C  FFD9         	movff	left@mR,fsr2l
 12258  0055F6  C01D  FFDA         	movff	left@mR+1,fsr2h
 12259  0055FA  2ADF               	incf	indf2,f,c
 12260  0055FC                     l5699:
 12261                           
 12262                           ;DC_motors.c: 166:         DCmotors_setPWM(mL);
 12263  0055FC  C01A  F00F         	movff	left@mL,DCmotors_setPWM@m
 12264  005600  C01B  F010         	movff	left@mL+1,DCmotors_setPWM@m+1
 12265  005604  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12266  005608                     
 12267                           ;DC_motors.c: 167:         DCmotors_setPWM(mR);
 12268  005608  C01C  F00F         	movff	left@mR,DCmotors_setPWM@m
 12269  00560C  C01D  F010         	movff	left@mR+1,DCmotors_setPWM@m+1
 12270  005610  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12271  005614                     
 12272                           ;DC_motors.c: 168:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12273  005614  0E09               	movlw	9
 12274  005616  6E21               	movwf	(??_left+1)^0,c
 12275  005618  0E1E               	movlw	30
 12276  00561A  6E20               	movwf	??_left^0,c
 12277  00561C  0EE4               	movlw	228
 12278  00561E                     u8467:
 12279  00561E  2EE8               	decfsz	wreg,f,c
 12280  005620  D7FE               	bra	u8467
 12281  005622  2E20               	decfsz	??_left^0,f,c
 12282  005624  D7FC               	bra	u8467
 12283  005626  2E21               	decfsz	(??_left+1)^0,f,c
 12284  005628  D7FA               	bra	u8467
 12285  00562A  D000               	nop2	
 12286  00562C                     l593:
 12287                           
 12288                           ;DC_motors.c: 157:     while((mL->power < 50) || (mR->power < 50)){
 12289  00562C  C01A  FFD9         	movff	left@mL,fsr2l
 12290  005630  C01B  FFDA         	movff	left@mL+1,fsr2h
 12291  005634  0E31               	movlw	49
 12292  005636  64DF               	cpfsgt	indf2,c
 12293  005638  EF20  F02B         	goto	u7071
 12294  00563C  EF22  F02B         	goto	u7070
 12295  005640                     u7071:
 12296  005640  EFCD  F02A         	goto	l5689
 12297  005644                     u7070:
 12298  005644  C01C  FFD9         	movff	left@mR,fsr2l
 12299  005648  C01D  FFDA         	movff	left@mR+1,fsr2h
 12300  00564C  0E31               	movlw	49
 12301  00564E  64DF               	cpfsgt	indf2,c
 12302  005650  EF2C  F02B         	goto	u7081
 12303  005654  EF2E  F02B         	goto	u7080
 12304  005658                     u7081:
 12305  005658  EFCD  F02A         	goto	l5689
 12306  00565C                     u7080:
 12307  00565C                     
 12308                           ;DC_motors.c: 171:     LATFbits.LATF0 = 0;
 12309  00565C  907E               	bcf	126,0,c	;volatile
 12310  00565E  0012               	return		;funcret
 12311  005660                     __end_of_left:
 12312                           	callstack 0
 12313                           
 12314 ;; *************** function _stop *****************
 12315 ;; Defined at:
 12316 ;;		line 129 in file "DC_motors.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;  mL              2   25[COMRAM] PTR struct .
 12319 ;;		 -> main@motorL(9), 
 12320 ;;  mR              2   27[COMRAM] PTR struct .
 12321 ;;		 -> main@motorR(9), 
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;		None
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      void 
 12326 ;; Registers used:
 12327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12337 ;;Total ram usage:        6 bytes
 12338 ;; Hardware stack levels used: 1
 12339 ;; Hardware stack levels required when called: 2
 12340 ;; This function calls:
 12341 ;;		_DCmotors_setPWM
 12342 ;; This function is called by:
 12343 ;;		_colourcards_readRGBC
 12344 ;;		_DCmotors_calibration
 12345 ;;		_DCmotors_testing
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           	psect	text46
 12350  005CF8                     __ptext46:
 12351                           	callstack 0
 12352  005CF8                     _stop:
 12353                           	callstack 27
 12354  005CF8                     
 12355                           ;DC_motors.c: 129: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 130: {;DC_motors.c
      +                          : 131:     LATDbits.LATD4 = 1;
 12356  005CF8  887C               	bsf	124,4,c	;volatile
 12357                           
 12358                           ;DC_motors.c: 134:     while(((mL->power)>0) && ((mR->power)>0)){
 12359  005CFA  EFA1  F02E         	goto	l5775
 12360  005CFE                     l5767:
 12361                           
 12362                           ;DC_motors.c: 135:         mL->power-=1;
 12363  005CFE  C01A  FFD9         	movff	stop@mL,fsr2l
 12364  005D02  C01B  FFDA         	movff	stop@mL+1,fsr2h
 12365  005D06  06DF               	decf	indf2,f,c
 12366                           
 12367                           ;DC_motors.c: 136:         mR->power-=1;
 12368  005D08  C01C  FFD9         	movff	stop@mR,fsr2l
 12369  005D0C  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12370  005D10  06DF               	decf	indf2,f,c
 12371  005D12                     
 12372                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
 12373  005D12  C01A  F00F         	movff	stop@mL,DCmotors_setPWM@m
 12374  005D16  C01B  F010         	movff	stop@mL+1,DCmotors_setPWM@m+1
 12375  005D1A  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12376  005D1E                     
 12377                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
 12378  005D1E  C01C  F00F         	movff	stop@mR,DCmotors_setPWM@m
 12379  005D22  C01D  F010         	movff	stop@mR+1,DCmotors_setPWM@m+1
 12380  005D26  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12381  005D2A                     
 12382                           ;DC_motors.c: 141:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12383  005D2A  0E09               	movlw	9
 12384  005D2C  6E1F               	movwf	(??_stop+1)^0,c
 12385  005D2E  0E1E               	movlw	30
 12386  005D30  6E1E               	movwf	??_stop^0,c
 12387  005D32  0EE4               	movlw	228
 12388  005D34                     u8477:
 12389  005D34  2EE8               	decfsz	wreg,f,c
 12390  005D36  D7FE               	bra	u8477
 12391  005D38  2E1E               	decfsz	??_stop^0,f,c
 12392  005D3A  D7FC               	bra	u8477
 12393  005D3C  2E1F               	decfsz	(??_stop+1)^0,f,c
 12394  005D3E  D7FA               	bra	u8477
 12395  005D40  D000               	nop2	
 12396  005D42                     l5775:
 12397                           
 12398                           ;DC_motors.c: 134:     while(((mL->power)>0) && ((mR->power)>0)){
 12399  005D42  C01A  FFD9         	movff	stop@mL,fsr2l
 12400  005D46  C01B  FFDA         	movff	stop@mL+1,fsr2h
 12401  005D4A  50DF               	movf	indf2,w,c
 12402  005D4C  B4D8               	btfsc	status,2,c
 12403  005D4E  EFAB  F02E         	goto	u7211
 12404  005D52  EFAD  F02E         	goto	u7210
 12405  005D56                     u7211:
 12406  005D56  EFB9  F02E         	goto	l589
 12407  005D5A                     u7210:
 12408  005D5A  C01C  FFD9         	movff	stop@mR,fsr2l
 12409  005D5E  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12410  005D62  50DF               	movf	indf2,w,c
 12411  005D64  A4D8               	btfss	status,2,c
 12412  005D66  EFB7  F02E         	goto	u7221
 12413  005D6A  EFB9  F02E         	goto	u7220
 12414  005D6E                     u7221:
 12415  005D6E  EF7F  F02E         	goto	l5767
 12416  005D72                     u7220:
 12417  005D72                     l589:
 12418                           
 12419                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
 12420  005D72  987C               	bcf	124,4,c	;volatile
 12421  005D74  0012               	return		;funcret
 12422  005D76                     __end_of_stop:
 12423                           	callstack 0
 12424                           
 12425 ;; *************** function _reverse *****************
 12426 ;; Defined at:
 12427 ;;		line 108 in file "DC_motors.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  mL              2   25[COMRAM] PTR struct .
 12430 ;;		 -> main@motorL(9), 
 12431 ;;  mR              2   27[COMRAM] PTR struct .
 12432 ;;		 -> main@motorR(9), 
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;		None
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  1    wreg      void 
 12437 ;; Registers used:
 12438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12448 ;;Total ram usage:        6 bytes
 12449 ;; Hardware stack levels used: 1
 12450 ;; Hardware stack levels required when called: 2
 12451 ;; This function calls:
 12452 ;;		_DCmotors_setPWM
 12453 ;; This function is called by:
 12454 ;;		_colourcards_readRGBC
 12455 ;;		_DCmotors_testing
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           	psect	text47
 12460  005BC4                     __ptext47:
 12461                           	callstack 0
 12462  005BC4                     _reverse:
 12463                           	callstack 27
 12464  005BC4                     
 12465                           ;DC_motors.c: 108: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 109: {;DC_motor
      +                          s.c: 111:     mL->direction = 0;
 12466  005BC4  EE20 F001          	lfsr	2,1
 12467  005BC8  501A               	movf	reverse@mL^0,w,c
 12468  005BCA  26D9               	addwf	fsr2l,f,c
 12469  005BCC  501B               	movf	(reverse@mL+1)^0,w,c
 12470  005BCE  22DA               	addwfc	fsr2h,f,c
 12471  005BD0  0E00               	movlw	0
 12472  005BD2  6EDF               	movwf	indf2,c
 12473                           
 12474                           ;DC_motors.c: 112:     mR->direction = 0;
 12475  005BD4  EE20 F001          	lfsr	2,1
 12476  005BD8  501C               	movf	reverse@mR^0,w,c
 12477  005BDA  26D9               	addwf	fsr2l,f,c
 12478  005BDC  501D               	movf	(reverse@mR+1)^0,w,c
 12479  005BDE  22DA               	addwfc	fsr2h,f,c
 12480  005BE0  0E00               	movlw	0
 12481  005BE2  6EDF               	movwf	indf2,c
 12482                           
 12483                           ;DC_motors.c: 115:     while((mL->power < 100) && (mR->power < 100)){
 12484  005BE4  EF16  F02E         	goto	l577
 12485  005BE8                     l5755:
 12486                           
 12487                           ;DC_motors.c: 116:         mL->power += 1;
 12488  005BE8  C01A  FFD9         	movff	reverse@mL,fsr2l
 12489  005BEC  C01B  FFDA         	movff	reverse@mL+1,fsr2h
 12490  005BF0  2ADF               	incf	indf2,f,c
 12491                           
 12492                           ;DC_motors.c: 117:         mR->power += 1;
 12493  005BF2  C01C  FFD9         	movff	reverse@mR,fsr2l
 12494  005BF6  C01D  FFDA         	movff	reverse@mR+1,fsr2h
 12495  005BFA  2ADF               	incf	indf2,f,c
 12496  005BFC                     
 12497                           ;DC_motors.c: 119:         DCmotors_setPWM(mL);
 12498  005BFC  C01A  F00F         	movff	reverse@mL,DCmotors_setPWM@m
 12499  005C00  C01B  F010         	movff	reverse@mL+1,DCmotors_setPWM@m+1
 12500  005C04  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12501  005C08                     
 12502                           ;DC_motors.c: 120:         DCmotors_setPWM(mR);
 12503  005C08  C01C  F00F         	movff	reverse@mR,DCmotors_setPWM@m
 12504  005C0C  C01D  F010         	movff	reverse@mR+1,DCmotors_setPWM@m+1
 12505  005C10  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12506  005C14                     
 12507                           ;DC_motors.c: 121:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12508  005C14  0E09               	movlw	9
 12509  005C16  6E1F               	movwf	(??_reverse+1)^0,c
 12510  005C18  0E1E               	movlw	30
 12511  005C1A  6E1E               	movwf	??_reverse^0,c
 12512  005C1C  0EE4               	movlw	228
 12513  005C1E                     u8487:
 12514  005C1E  2EE8               	decfsz	wreg,f,c
 12515  005C20  D7FE               	bra	u8487
 12516  005C22  2E1E               	decfsz	??_reverse^0,f,c
 12517  005C24  D7FC               	bra	u8487
 12518  005C26  2E1F               	decfsz	(??_reverse+1)^0,f,c
 12519  005C28  D7FA               	bra	u8487
 12520  005C2A  D000               	nop2	
 12521  005C2C                     l577:
 12522                           
 12523                           ;DC_motors.c: 115:     while((mL->power < 100) && (mR->power < 100)){
 12524  005C2C  C01A  FFD9         	movff	reverse@mL,fsr2l
 12525  005C30  C01B  FFDA         	movff	reverse@mL+1,fsr2h
 12526  005C34  0E64               	movlw	100
 12527  005C36  60DF               	cpfslt	indf2,c
 12528  005C38  EF20  F02E         	goto	u7191
 12529  005C3C  EF22  F02E         	goto	u7190
 12530  005C40                     u7191:
 12531  005C40  EF2E  F02E         	goto	l582
 12532  005C44                     u7190:
 12533  005C44  C01C  FFD9         	movff	reverse@mR,fsr2l
 12534  005C48  C01D  FFDA         	movff	reverse@mR+1,fsr2h
 12535  005C4C  0E63               	movlw	99
 12536  005C4E  64DF               	cpfsgt	indf2,c
 12537  005C50  EF2C  F02E         	goto	u7201
 12538  005C54  EF2E  F02E         	goto	u7200
 12539  005C58                     u7201:
 12540  005C58  EFF4  F02D         	goto	l5755
 12541  005C5C                     u7200:
 12542  005C5C                     l582:
 12543  005C5C  0012               	return		;funcret
 12544  005C5E                     __end_of_reverse:
 12545                           	callstack 0
 12546                           
 12547 ;; *************** function _forward *****************
 12548 ;; Defined at:
 12549 ;;		line 88 in file "DC_motors.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  mL              2   25[COMRAM] PTR struct .
 12552 ;;		 -> main@motorL(9), 
 12553 ;;  mR              2   27[COMRAM] PTR struct .
 12554 ;;		 -> main@motorR(9), 
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;		None
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  1    wreg      void 
 12559 ;; Registers used:
 12560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12566 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12569 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12570 ;;Total ram usage:        6 bytes
 12571 ;; Hardware stack levels used: 1
 12572 ;; Hardware stack levels required when called: 2
 12573 ;; This function calls:
 12574 ;;		_DCmotors_setPWM
 12575 ;; This function is called by:
 12576 ;;		_main
 12577 ;;		_colourcards_readRGBC
 12578 ;;		_DCmotors_testing
 12579 ;; This function uses a non-reentrant model
 12580 ;;
 12581                           
 12582                           	psect	text48
 12583  005C5E                     __ptext48:
 12584                           	callstack 0
 12585  005C5E                     _forward:
 12586                           	callstack 28
 12587  005C5E                     
 12588                           ;DC_motors.c: 88: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 89: {;DC_motors.
      +                          c: 90:     mL->direction = 1;
 12589  005C5E  EE20 F001          	lfsr	2,1
 12590  005C62  501A               	movf	forward@mL^0,w,c
 12591  005C64  26D9               	addwf	fsr2l,f,c
 12592  005C66  501B               	movf	(forward@mL+1)^0,w,c
 12593  005C68  22DA               	addwfc	fsr2h,f,c
 12594  005C6A  0E01               	movlw	1
 12595  005C6C  6EDF               	movwf	indf2,c
 12596                           
 12597                           ;DC_motors.c: 91:     mR->direction = 1;
 12598  005C6E  EE20 F001          	lfsr	2,1
 12599  005C72  501C               	movf	forward@mR^0,w,c
 12600  005C74  26D9               	addwf	fsr2l,f,c
 12601  005C76  501D               	movf	(forward@mR+1)^0,w,c
 12602  005C78  22DA               	addwfc	fsr2h,f,c
 12603  005C7A  0E01               	movlw	1
 12604  005C7C  6EDF               	movwf	indf2,c
 12605                           
 12606                           ;DC_motors.c: 94:     while((mL->power < 100) && (mR->power < 100)){
 12607  005C7E  EF63  F02E         	goto	l569
 12608  005C82                     l5729:
 12609                           
 12610                           ;DC_motors.c: 95:         mL->power += 1;
 12611  005C82  C01A  FFD9         	movff	forward@mL,fsr2l
 12612  005C86  C01B  FFDA         	movff	forward@mL+1,fsr2h
 12613  005C8A  2ADF               	incf	indf2,f,c
 12614                           
 12615                           ;DC_motors.c: 96:         mR->power += 1;
 12616  005C8C  C01C  FFD9         	movff	forward@mR,fsr2l
 12617  005C90  C01D  FFDA         	movff	forward@mR+1,fsr2h
 12618  005C94  2ADF               	incf	indf2,f,c
 12619  005C96                     
 12620                           ;DC_motors.c: 98:         DCmotors_setPWM(mL);
 12621  005C96  C01A  F00F         	movff	forward@mL,DCmotors_setPWM@m
 12622  005C9A  C01B  F010         	movff	forward@mL+1,DCmotors_setPWM@m+1
 12623  005C9E  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12624  005CA2                     
 12625                           ;DC_motors.c: 99:         DCmotors_setPWM(mR);
 12626  005CA2  C01C  F00F         	movff	forward@mR,DCmotors_setPWM@m
 12627  005CA6  C01D  F010         	movff	forward@mR+1,DCmotors_setPWM@m+1
 12628  005CAA  ECB5  F022         	call	_DCmotors_setPWM	;wreg free
 12629  005CAE                     
 12630                           ;DC_motors.c: 100:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12631  005CAE  0E09               	movlw	9
 12632  005CB0  6E1F               	movwf	(??_forward+1)^0,c
 12633  005CB2  0E1E               	movlw	30
 12634  005CB4  6E1E               	movwf	??_forward^0,c
 12635  005CB6  0EE4               	movlw	228
 12636  005CB8                     u8497:
 12637  005CB8  2EE8               	decfsz	wreg,f,c
 12638  005CBA  D7FE               	bra	u8497
 12639  005CBC  2E1E               	decfsz	??_forward^0,f,c
 12640  005CBE  D7FC               	bra	u8497
 12641  005CC0  2E1F               	decfsz	(??_forward+1)^0,f,c
 12642  005CC2  D7FA               	bra	u8497
 12643  005CC4  D000               	nop2	
 12644  005CC6                     l569:
 12645                           
 12646                           ;DC_motors.c: 94:     while((mL->power < 100) && (mR->power < 100)){
 12647  005CC6  C01A  FFD9         	movff	forward@mL,fsr2l
 12648  005CCA  C01B  FFDA         	movff	forward@mL+1,fsr2h
 12649  005CCE  0E64               	movlw	100
 12650  005CD0  60DF               	cpfslt	indf2,c
 12651  005CD2  EF6D  F02E         	goto	u7151
 12652  005CD6  EF6F  F02E         	goto	u7150
 12653  005CDA                     u7151:
 12654  005CDA  EF7B  F02E         	goto	l574
 12655  005CDE                     u7150:
 12656  005CDE  C01C  FFD9         	movff	forward@mR,fsr2l
 12657  005CE2  C01D  FFDA         	movff	forward@mR+1,fsr2h
 12658  005CE6  0E63               	movlw	99
 12659  005CE8  64DF               	cpfsgt	indf2,c
 12660  005CEA  EF79  F02E         	goto	u7161
 12661  005CEE  EF7B  F02E         	goto	u7160
 12662  005CF2                     u7161:
 12663  005CF2  EF41  F02E         	goto	l5729
 12664  005CF6                     u7160:
 12665  005CF6                     l574:
 12666  005CF6  0012               	return		;funcret
 12667  005CF8                     __end_of_forward:
 12668                           	callstack 0
 12669                           
 12670 ;; *************** function _DCmotors_setPWM *****************
 12671 ;; Defined at:
 12672 ;;		line 51 in file "DC_motors.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;  m               2   14[COMRAM] PTR struct .
 12675 ;;		 -> main@motorR(9), main@motorL(9), 
 12676 ;; Auto vars:     Size  Location     Type
 12677 ;;  PWMduty         2   23[COMRAM] int 
 12678 ;; Return value:  Size  Location     Type
 12679 ;;                  1    wreg      void 
 12680 ;; Registers used:
 12681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12682 ;; Tracked objects:
 12683 ;;		On entry : 0/0
 12684 ;;		On exit  : 0/0
 12685 ;;		Unchanged: 0/0
 12686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12689 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12690 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12691 ;;Total ram usage:       11 bytes
 12692 ;; Hardware stack levels used: 1
 12693 ;; Hardware stack levels required when called: 1
 12694 ;; This function calls:
 12695 ;;		___awdiv
 12696 ;;		___wmul
 12697 ;; This function is called by:
 12698 ;;		_forward
 12699 ;;		_reverse
 12700 ;;		_stop
 12701 ;;		_left
 12702 ;;		_right
 12703 ;; This function uses a non-reentrant model
 12704 ;;
 12705                           
 12706                           	psect	text49
 12707  00456A                     __ptext49:
 12708                           	callstack 0
 12709  00456A                     _DCmotors_setPWM:
 12710                           	callstack 28
 12711  00456A                     
 12712                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
 12713  00456A  EE20 F001          	lfsr	2,1
 12714  00456E  500F               	movf	DCmotors_setPWM@m^0,w,c
 12715  004570  26D9               	addwf	fsr2l,f,c
 12716  004572  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12717  004574  22DA               	addwfc	fsr2h,f,c
 12718  004576  50DF               	movf	indf2,w,c
 12719  004578  B4D8               	btfsc	status,2,c
 12720  00457A  EFC1  F022         	goto	u6941
 12721  00457E  EFC3  F022         	goto	u6940
 12722  004582                     u6941:
 12723  004582  EFF4  F022         	goto	l5623
 12724  004586                     u6940:
 12725  004586                     
 12726                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
 12727  004586  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 12728  00458A  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 12729  00458E  50DF               	movf	indf2,w,c
 12730  004590  6E11               	movwf	??_DCmotors_setPWM^0,c
 12731  004592  5011               	movf	??_DCmotors_setPWM^0,w,c
 12732  004594  6E01               	movwf	___wmul@multiplier^0,c
 12733  004596  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12734  004598  EE20 F007          	lfsr	2,7
 12735  00459C  500F               	movf	DCmotors_setPWM@m^0,w,c
 12736  00459E  26D9               	addwf	fsr2l,f,c
 12737  0045A0  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12738  0045A2  22DA               	addwfc	fsr2h,f,c
 12739  0045A4  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12740  0045A8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12741  0045AC  EC64  F032         	call	___wmul	;wreg free
 12742  0045B0  C001  F007         	movff	?___wmul,___awdiv@dividend
 12743  0045B4  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 12744  0045B8  0E00               	movlw	0
 12745  0045BA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 12746  0045BC  0E64               	movlw	100
 12747  0045BE  6E09               	movwf	___awdiv@divisor^0,c
 12748  0045C0  ECD3  F02C         	call	___awdiv	;wreg free
 12749  0045C4  EE20 F007          	lfsr	2,7
 12750  0045C8  500F               	movf	DCmotors_setPWM@m^0,w,c
 12751  0045CA  26D9               	addwf	fsr2l,f,c
 12752  0045CC  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12753  0045CE  22DA               	addwfc	fsr2h,f,c
 12754  0045D0  CFDE F012          	movff	postinc2,??_DCmotors_setPWM+1
 12755  0045D4  CFDD F013          	movff	postdec2,??_DCmotors_setPWM+2
 12756  0045D8  5007               	movf	?___awdiv^0,w,c
 12757  0045DA  5C12               	subwf	(??_DCmotors_setPWM+1)^0,w,c
 12758  0045DC  6E18               	movwf	DCmotors_setPWM@PWMduty^0,c
 12759  0045DE  5008               	movf	(?___awdiv+1)^0,w,c
 12760  0045E0  5813               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
 12761  0045E2  6E19               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
 12762                           
 12763                           ;DC_motors.c: 57:  } else {
 12764  0045E4  EF17  F023         	goto	l5625
 12765  0045E8                     l5623:
 12766                           
 12767                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 12768  0045E8  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 12769  0045EC  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 12770  0045F0  50DF               	movf	indf2,w,c
 12771  0045F2  6E11               	movwf	??_DCmotors_setPWM^0,c
 12772  0045F4  5011               	movf	??_DCmotors_setPWM^0,w,c
 12773  0045F6  6E01               	movwf	___wmul@multiplier^0,c
 12774  0045F8  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12775  0045FA  EE20 F007          	lfsr	2,7
 12776  0045FE  500F               	movf	DCmotors_setPWM@m^0,w,c
 12777  004600  26D9               	addwf	fsr2l,f,c
 12778  004602  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12779  004604  22DA               	addwfc	fsr2h,f,c
 12780  004606  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12781  00460A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12782  00460E  EC64  F032         	call	___wmul	;wreg free
 12783  004612  C001  F007         	movff	?___wmul,___awdiv@dividend
 12784  004616  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 12785  00461A  0E00               	movlw	0
 12786  00461C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 12787  00461E  0E64               	movlw	100
 12788  004620  6E09               	movwf	___awdiv@divisor^0,c
 12789  004622  ECD3  F02C         	call	___awdiv	;wreg free
 12790  004626  C007  F018         	movff	?___awdiv,DCmotors_setPWM@PWMduty
 12791  00462A  C008  F019         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
 12792  00462E                     l5625:
 12793                           
 12794                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
 12795  00462E  EE20 F002          	lfsr	2,2
 12796  004632  500F               	movf	DCmotors_setPWM@m^0,w,c
 12797  004634  26D9               	addwf	fsr2l,f,c
 12798  004636  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12799  004638  22DA               	addwfc	fsr2h,f,c
 12800  00463A  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 12801  00463E  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 12802  004642  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 12803  004646  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 12804  00464A  C018  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
 12805  00464E                     
 12806                           ;DC_motors.c: 63:  if (m->direction){
 12807  00464E  EE20 F001          	lfsr	2,1
 12808  004652  500F               	movf	DCmotors_setPWM@m^0,w,c
 12809  004654  26D9               	addwf	fsr2l,f,c
 12810  004656  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12811  004658  22DA               	addwfc	fsr2h,f,c
 12812  00465A  50DF               	movf	indf2,w,c
 12813  00465C  B4D8               	btfsc	status,2,c
 12814  00465E  EF33  F023         	goto	u6951
 12815  004662  EF35  F023         	goto	u6950
 12816  004666                     u6951:
 12817  004666  EF6A  F023         	goto	l5631
 12818  00466A                     u6950:
 12819  00466A                     
 12820                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
 12821  00466A  EE20 F004          	lfsr	2,4
 12822  00466E  500F               	movf	DCmotors_setPWM@m^0,w,c
 12823  004670  26D9               	addwf	fsr2l,f,c
 12824  004672  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12825  004674  22DA               	addwfc	fsr2h,f,c
 12826  004676  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 12827  00467A  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 12828  00467E  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 12829  004682  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 12830  004686  EE10 F004          	lfsr	1,4
 12831  00468A  500F               	movf	DCmotors_setPWM@m^0,w,c
 12832  00468C  26E1               	addwf	fsr1l,f,c
 12833  00468E  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12834  004690  22E2               	addwfc	fsr1h,f,c
 12835  004692  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
 12836  004696  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
 12837  00469A  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 12838  00469E  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 12839  0046A2  50E7               	movf	indf1,w,c
 12840  0046A4  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
 12841  0046A6  EE10 F006          	lfsr	1,6
 12842  0046AA  500F               	movf	DCmotors_setPWM@m^0,w,c
 12843  0046AC  26E1               	addwf	fsr1l,f,c
 12844  0046AE  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12845  0046B0  22E2               	addwfc	fsr1h,f,c
 12846  0046B2  50E7               	movf	indf1,w,c
 12847  0046B4  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
 12848  0046B6  0E01               	movlw	1
 12849  0046B8  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
 12850  0046BA  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
 12851  0046BC  EF62  F023         	goto	u6964
 12852  0046C0                     u6965:
 12853  0046C0  90D8               	bcf	status,0,c
 12854  0046C2  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 12855  0046C4                     u6964:
 12856  0046C4  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 12857  0046C6  EF60  F023         	goto	u6965
 12858  0046CA  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
 12859  0046CC  1015               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
 12860  0046CE  6EDF               	movwf	indf2,c
 12861                           
 12862                           ;DC_motors.c: 65:  } else {
 12863  0046D0  EF9E  F023         	goto	l561
 12864  0046D4                     l5631:
 12865                           
 12866                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
 12867  0046D4  EE20 F004          	lfsr	2,4
 12868  0046D8  500F               	movf	DCmotors_setPWM@m^0,w,c
 12869  0046DA  26D9               	addwf	fsr2l,f,c
 12870  0046DC  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12871  0046DE  22DA               	addwfc	fsr2h,f,c
 12872  0046E0  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 12873  0046E4  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 12874  0046E8  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 12875  0046EC  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 12876  0046F0  EE10 F004          	lfsr	1,4
 12877  0046F4  500F               	movf	DCmotors_setPWM@m^0,w,c
 12878  0046F6  26E1               	addwf	fsr1l,f,c
 12879  0046F8  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12880  0046FA  22E2               	addwfc	fsr1h,f,c
 12881  0046FC  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
 12882  004700  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
 12883  004704  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 12884  004708  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 12885  00470C  50E7               	movf	indf1,w,c
 12886  00470E  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
 12887  004710  EE10 F006          	lfsr	1,6
 12888  004714  500F               	movf	DCmotors_setPWM@m^0,w,c
 12889  004716  26E1               	addwf	fsr1l,f,c
 12890  004718  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12891  00471A  22E2               	addwfc	fsr1h,f,c
 12892  00471C  50E7               	movf	indf1,w,c
 12893  00471E  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
 12894  004720  0E01               	movlw	1
 12895  004722  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
 12896  004724  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
 12897  004726  EF97  F023         	goto	u6974
 12898  00472A                     u6975:
 12899  00472A  90D8               	bcf	status,0,c
 12900  00472C  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 12901  00472E                     u6974:
 12902  00472E  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 12903  004730  EF95  F023         	goto	u6975
 12904  004734  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
 12905  004736  0AFF               	xorlw	255
 12906  004738  1415               	andwf	(??_DCmotors_setPWM+4)^0,w,c
 12907  00473A  6EDF               	movwf	indf2,c
 12908  00473C                     l561:
 12909  00473C  0012               	return		;funcret
 12910  00473E                     __end_of_DCmotors_setPWM:
 12911                           	callstack 0
 12912                           
 12913 ;; *************** function ___wmul *****************
 12914 ;; Defined at:
 12915 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 12916 ;; Parameters:    Size  Location     Type
 12917 ;;  multiplier      2    0[COMRAM] unsigned int 
 12918 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;  product         2    4[COMRAM] unsigned int 
 12921 ;; Return value:  Size  Location     Type
 12922 ;;                  2    0[COMRAM] unsigned int 
 12923 ;; Registers used:
 12924 ;;		wreg, status,2, status,0, prodl, prodh
 12925 ;; Tracked objects:
 12926 ;;		On entry : 0/0
 12927 ;;		On exit  : 0/0
 12928 ;;		Unchanged: 0/0
 12929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12933 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12934 ;;Total ram usage:        6 bytes
 12935 ;; Hardware stack levels used: 1
 12936 ;; This function calls:
 12937 ;;		Nothing
 12938 ;; This function is called by:
 12939 ;;		_DCmotors_setPWM
 12940 ;;		_atoi
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           	psect	text50
 12945  0064C8                     __ptext50:
 12946                           	callstack 0
 12947  0064C8                     ___wmul:
 12948                           	callstack 28
 12949  0064C8  5001               	movf	___wmul@multiplier^0,w,c
 12950  0064CA  0203               	mulwf	___wmul@multiplicand^0,c
 12951  0064CC  CFF3 F005          	movff	prodl,___wmul@product
 12952  0064D0  CFF4 F006          	movff	prodh,___wmul@product+1
 12953  0064D4  5001               	movf	___wmul@multiplier^0,w,c
 12954  0064D6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12955  0064D8  50F3               	movf	243,w,c
 12956  0064DA  2606               	addwf	(___wmul@product+1)^0,f,c
 12957  0064DC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12958  0064DE  0203               	mulwf	___wmul@multiplicand^0,c
 12959  0064E0  50F3               	movf	243,w,c
 12960  0064E2  2606               	addwf	(___wmul@product+1)^0,f,c
 12961  0064E4  C005  F001         	movff	___wmul@product,?___wmul
 12962  0064E8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12963  0064EC  0012               	return		;funcret
 12964  0064EE                     __end_of___wmul:
 12965                           	callstack 0
 12966                           
 12967 ;; *************** function ___awdiv *****************
 12968 ;; Defined at:
 12969 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12970 ;; Parameters:    Size  Location     Type
 12971 ;;  dividend        2    6[COMRAM] int 
 12972 ;;  divisor         2    8[COMRAM] int 
 12973 ;; Auto vars:     Size  Location     Type
 12974 ;;  quotient        2   12[COMRAM] int 
 12975 ;;  sign            1   11[COMRAM] unsigned char 
 12976 ;;  counter         1   10[COMRAM] unsigned char 
 12977 ;; Return value:  Size  Location     Type
 12978 ;;                  2    6[COMRAM] int 
 12979 ;; Registers used:
 12980 ;;		wreg, status,2, status,0
 12981 ;; Tracked objects:
 12982 ;;		On entry : 0/0
 12983 ;;		On exit  : 0/0
 12984 ;;		Unchanged: 0/0
 12985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12987 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12989 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12990 ;;Total ram usage:        8 bytes
 12991 ;; Hardware stack levels used: 1
 12992 ;; This function calls:
 12993 ;;		Nothing
 12994 ;; This function is called by:
 12995 ;;		_DCmotors_setPWM
 12996 ;;		_efgtoa
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000                           	psect	text51
 13001  0059A6                     __ptext51:
 13002                           	callstack 0
 13003  0059A6                     ___awdiv:
 13004                           	callstack 28
 13005  0059A6  0E00               	movlw	0
 13006  0059A8  6E0C               	movwf	___awdiv@sign^0,c
 13007  0059AA  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 13008  0059AC  EFDC  F02C         	goto	u5220
 13009  0059B0  EFDA  F02C         	goto	u5221
 13010  0059B4                     u5221:
 13011  0059B4  EFE2  F02C         	goto	l4731
 13012  0059B8                     u5220:
 13013  0059B8  6C09               	negf	___awdiv@divisor^0,c
 13014  0059BA  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 13015  0059BC  B0D8               	btfsc	status,0,c
 13016  0059BE  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 13017  0059C0  0E01               	movlw	1
 13018  0059C2  6E0C               	movwf	___awdiv@sign^0,c
 13019  0059C4                     l4731:
 13020  0059C4  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 13021  0059C6  EFE9  F02C         	goto	u5230
 13022  0059CA  EFE7  F02C         	goto	u5231
 13023  0059CE                     u5231:
 13024  0059CE  EFEF  F02C         	goto	l4737
 13025  0059D2                     u5230:
 13026  0059D2  6C07               	negf	___awdiv@dividend^0,c
 13027  0059D4  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 13028  0059D6  B0D8               	btfsc	status,0,c
 13029  0059D8  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 13030  0059DA  0E01               	movlw	1
 13031  0059DC  1A0C               	xorwf	___awdiv@sign^0,f,c
 13032  0059DE                     l4737:
 13033  0059DE  0E00               	movlw	0
 13034  0059E0  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 13035  0059E2  0E00               	movlw	0
 13036  0059E4  6E0D               	movwf	___awdiv@quotient^0,c
 13037  0059E6  5009               	movf	___awdiv@divisor^0,w,c
 13038  0059E8  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 13039  0059EA  B4D8               	btfsc	status,2,c
 13040  0059EC  EFFA  F02C         	goto	u5241
 13041  0059F0  EFFC  F02C         	goto	u5240
 13042  0059F4                     u5241:
 13043  0059F4  EF24  F02D         	goto	l4759
 13044  0059F8                     u5240:
 13045  0059F8  0E01               	movlw	1
 13046  0059FA  6E0B               	movwf	___awdiv@counter^0,c
 13047  0059FC  EF04  F02D         	goto	l4745
 13048  005A00                     l4743:
 13049  005A00  90D8               	bcf	status,0,c
 13050  005A02  3609               	rlcf	___awdiv@divisor^0,f,c
 13051  005A04  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 13052  005A06  2A0B               	incf	___awdiv@counter^0,f,c
 13053  005A08                     l4745:
 13054  005A08  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 13055  005A0A  EF09  F02D         	goto	u5251
 13056  005A0E  EF0B  F02D         	goto	u5250
 13057  005A12                     u5251:
 13058  005A12  EF00  F02D         	goto	l4743
 13059  005A16                     u5250:
 13060  005A16                     l4747:
 13061  005A16  90D8               	bcf	status,0,c
 13062  005A18  360D               	rlcf	___awdiv@quotient^0,f,c
 13063  005A1A  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 13064  005A1C  5009               	movf	___awdiv@divisor^0,w,c
 13065  005A1E  5C07               	subwf	___awdiv@dividend^0,w,c
 13066  005A20  500A               	movf	(___awdiv@divisor+1)^0,w,c
 13067  005A22  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 13068  005A24  A0D8               	btfss	status,0,c
 13069  005A26  EF17  F02D         	goto	u5261
 13070  005A2A  EF19  F02D         	goto	u5260
 13071  005A2E                     u5261:
 13072  005A2E  EF1E  F02D         	goto	l4755
 13073  005A32                     u5260:
 13074  005A32  5009               	movf	___awdiv@divisor^0,w,c
 13075  005A34  5E07               	subwf	___awdiv@dividend^0,f,c
 13076  005A36  500A               	movf	(___awdiv@divisor+1)^0,w,c
 13077  005A38  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 13078  005A3A  800D               	bsf	___awdiv@quotient^0,0,c
 13079  005A3C                     l4755:
 13080  005A3C  90D8               	bcf	status,0,c
 13081  005A3E  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 13082  005A40  3209               	rrcf	___awdiv@divisor^0,f,c
 13083  005A42  2E0B               	decfsz	___awdiv@counter^0,f,c
 13084  005A44  EF0B  F02D         	goto	l4747
 13085  005A48                     l4759:
 13086  005A48  500C               	movf	___awdiv@sign^0,w,c
 13087  005A4A  B4D8               	btfsc	status,2,c
 13088  005A4C  EF2A  F02D         	goto	u5271
 13089  005A50  EF2C  F02D         	goto	u5270
 13090  005A54                     u5271:
 13091  005A54  EF30  F02D         	goto	l4763
 13092  005A58                     u5270:
 13093  005A58  6C0D               	negf	___awdiv@quotient^0,c
 13094  005A5A  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 13095  005A5C  B0D8               	btfsc	status,0,c
 13096  005A5E  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 13097  005A60                     l4763:
 13098  005A60  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 13099  005A64  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 13100  005A68  0012               	return		;funcret
 13101  005A6A                     __end_of___awdiv:
 13102                           	callstack 0
 13103                           
 13104 ;; *************** function _colourclick_readRGBC *****************
 13105 ;; Defined at:
 13106 ;;		line 128 in file "colour_click.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;  tmpval          2   11[COMRAM] PTR struct .
 13109 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), colourcards_testingRGBC@tmpval(8), main@
      +current(8), 
 13110 ;; Auto vars:     Size  Location     Type
 13111 ;;		None
 13112 ;; Return value:  Size  Location     Type
 13113 ;;                  1    wreg      void 
 13114 ;; Registers used:
 13115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13116 ;; Tracked objects:
 13117 ;;		On entry : 0/0
 13118 ;;		On exit  : 0/0
 13119 ;;		Unchanged: 0/0
 13120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13125 ;;Total ram usage:        2 bytes
 13126 ;; Hardware stack levels used: 1
 13127 ;; Hardware stack levels required when called: 3
 13128 ;; This function calls:
 13129 ;;		_colourclick_readB
 13130 ;;		_colourclick_readC
 13131 ;;		_colourclick_readG
 13132 ;;		_colourclick_readR
 13133 ;; This function is called by:
 13134 ;;		_colourcards_readRGBC
 13135 ;;		_colourcards_testingRGBC
 13136 ;;		_colourclick_calibration
 13137 ;; This function uses a non-reentrant model
 13138 ;;
 13139                           
 13140                           	psect	text52
 13141  005E9A                     __ptext52:
 13142                           	callstack 0
 13143  005E9A                     _colourclick_readRGBC:
 13144                           	callstack 26
 13145  005E9A                     
 13146                           ;colour_click.c: 128: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 129: {
      +                          ;colour_click.c: 130:     tmpval->R = colourclick_readR();
 13147  005E9A  EC46  F030         	call	_colourclick_readR	;wreg free
 13148  005E9E  C00C  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
 13149  005EA2  C00D  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
 13150  005EA6  C005  FFDE         	movff	?_colourclick_readR,postinc2
 13151  005EAA  C006  FFDD         	movff	?_colourclick_readR+1,postdec2
 13152                           
 13153                           ;colour_click.c: 131:     tmpval->G = colourclick_readG();
 13154  005EAE  EC6E  F030         	call	_colourclick_readG	;wreg free
 13155  005EB2  EE20 F002          	lfsr	2,2
 13156  005EB6  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 13157  005EB8  26D9               	addwf	fsr2l,f,c
 13158  005EBA  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 13159  005EBC  22DA               	addwfc	fsr2h,f,c
 13160  005EBE  C005  FFDE         	movff	?_colourclick_readG,postinc2
 13161  005EC2  C006  FFDD         	movff	?_colourclick_readG+1,postdec2
 13162                           
 13163                           ;colour_click.c: 132:     tmpval->B = colourclick_readB();
 13164  005EC6  ECBE  F030         	call	_colourclick_readB	;wreg free
 13165  005ECA  EE20 F004          	lfsr	2,4
 13166  005ECE  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 13167  005ED0  26D9               	addwf	fsr2l,f,c
 13168  005ED2  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 13169  005ED4  22DA               	addwfc	fsr2h,f,c
 13170  005ED6  C005  FFDE         	movff	?_colourclick_readB,postinc2
 13171  005EDA  C006  FFDD         	movff	?_colourclick_readB+1,postdec2
 13172                           
 13173                           ;colour_click.c: 133:     tmpval->C = colourclick_readC();
 13174  005EDE  EC96  F030         	call	_colourclick_readC	;wreg free
 13175  005EE2  EE20 F006          	lfsr	2,6
 13176  005EE6  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 13177  005EE8  26D9               	addwf	fsr2l,f,c
 13178  005EEA  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 13179  005EEC  22DA               	addwfc	fsr2h,f,c
 13180  005EEE  C005  FFDE         	movff	?_colourclick_readC,postinc2
 13181  005EF2  C006  FFDD         	movff	?_colourclick_readC+1,postdec2
 13182  005EF6  0012               	return		;funcret
 13183  005EF8                     __end_of_colourclick_readRGBC:
 13184                           	callstack 0
 13185                           
 13186 ;; *************** function _colourclick_readR *****************
 13187 ;; Defined at:
 13188 ;;		line 53 in file "colour_click.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;		None
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  tmp             2    9[COMRAM] unsigned int 
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  2    4[COMRAM] unsigned int 
 13195 ;; Registers used:
 13196 ;;		wreg, status,2, status,0, cstack
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13204 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13205 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13206 ;;Total ram usage:        7 bytes
 13207 ;; Hardware stack levels used: 1
 13208 ;; Hardware stack levels required when called: 2
 13209 ;; This function calls:
 13210 ;;		_I2C_2_Master_Read
 13211 ;;		_I2C_2_Master_RepStart
 13212 ;;		_I2C_2_Master_Start
 13213 ;;		_I2C_2_Master_Stop
 13214 ;;		_I2C_2_Master_Write
 13215 ;; This function is called by:
 13216 ;;		_colourclick_readRGBC
 13217 ;;		_colourclick_readRGBC2
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221                           	psect	text53
 13222  00608C                     __ptext53:
 13223                           	callstack 0
 13224  00608C                     _colourclick_readR:
 13225                           	callstack 26
 13226  00608C                     
 13227                           ;colour_click.c: 55:  unsigned int tmp;;colour_click.c: 56:  I2C_2_Master_Start();
 13228  00608C  EC00  F033         	call	_I2C_2_Master_Start	;wreg free
 13229                           
 13230                           ;colour_click.c: 57:  I2C_2_Master_Write(0x52 | 0x00);
 13231  006090  0E52               	movlw	82
 13232  006092  ECEF  F032         	call	_I2C_2_Master_Write
 13233                           
 13234                           ;colour_click.c: 58:  I2C_2_Master_Write(0xA0 | 0x16);
 13235  006096  0EB6               	movlw	182
 13236  006098  ECEF  F032         	call	_I2C_2_Master_Write
 13237                           
 13238                           ;colour_click.c: 59:  I2C_2_Master_RepStart();
 13239  00609C  EC05  F033         	call	_I2C_2_Master_RepStart	;wreg free
 13240                           
 13241                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x01);
 13242  0060A0  0E53               	movlw	83
 13243  0060A2  ECEF  F032         	call	_I2C_2_Master_Write
 13244                           
 13245                           ;colour_click.c: 61:  tmp=I2C_2_Master_Read(1);
 13246  0060A6  0E01               	movlw	1
 13247  0060A8  EC53  F031         	call	_I2C_2_Master_Read
 13248  0060AC  6E07               	movwf	??_colourclick_readR^0,c
 13249  0060AE  5007               	movf	??_colourclick_readR^0,w,c
 13250  0060B0  6E0A               	movwf	colourclick_readR@tmp^0,c
 13251  0060B2  6A0B               	clrf	(colourclick_readR@tmp+1)^0,c
 13252                           
 13253                           ;colour_click.c: 62:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13254  0060B4  0E00               	movlw	0
 13255  0060B6  EC53  F031         	call	_I2C_2_Master_Read
 13256  0060BA  6E07               	movwf	??_colourclick_readR^0,c
 13257  0060BC  5007               	movf	??_colourclick_readR^0,w,c
 13258  0060BE  6E09               	movwf	(??_colourclick_readR+2)^0,c
 13259  0060C0  6A08               	clrf	(??_colourclick_readR+1)^0,c
 13260  0060C2  500A               	movf	colourclick_readR@tmp^0,w,c
 13261  0060C4  1008               	iorwf	(??_colourclick_readR+1)^0,w,c
 13262  0060C6  6E0A               	movwf	colourclick_readR@tmp^0,c
 13263  0060C8  500B               	movf	(colourclick_readR@tmp+1)^0,w,c
 13264  0060CA  1009               	iorwf	(??_colourclick_readR+2)^0,w,c
 13265  0060CC  6E0B               	movwf	(colourclick_readR@tmp+1)^0,c
 13266                           
 13267                           ;colour_click.c: 63:  I2C_2_Master_Stop();
 13268  0060CE  ECFB  F032         	call	_I2C_2_Master_Stop	;wreg free
 13269  0060D2                     
 13270                           ;colour_click.c: 64:  return tmp;
 13271  0060D2  C00A  F005         	movff	colourclick_readR@tmp,?_colourclick_readR
 13272  0060D6  C00B  F006         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
 13273  0060DA  0012               	return		;funcret
 13274  0060DC                     __end_of_colourclick_readR:
 13275                           	callstack 0
 13276                           
 13277 ;; *************** function _colourclick_readG *****************
 13278 ;; Defined at:
 13279 ;;		line 72 in file "colour_click.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;		None
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;  tmp             2    9[COMRAM] unsigned int 
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  2    4[COMRAM] unsigned int 
 13286 ;; Registers used:
 13287 ;;		wreg, status,2, status,0, cstack
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13295 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13296 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13297 ;;Total ram usage:        7 bytes
 13298 ;; Hardware stack levels used: 1
 13299 ;; Hardware stack levels required when called: 2
 13300 ;; This function calls:
 13301 ;;		_I2C_2_Master_Read
 13302 ;;		_I2C_2_Master_RepStart
 13303 ;;		_I2C_2_Master_Start
 13304 ;;		_I2C_2_Master_Stop
 13305 ;;		_I2C_2_Master_Write
 13306 ;; This function is called by:
 13307 ;;		_colourclick_readRGBC
 13308 ;;		_colourclick_readRGBC2
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312                           	psect	text54
 13313  0060DC                     __ptext54:
 13314                           	callstack 0
 13315  0060DC                     _colourclick_readG:
 13316                           	callstack 26
 13317  0060DC                     
 13318                           ;colour_click.c: 74:  unsigned int tmp;;colour_click.c: 75:  I2C_2_Master_Start();
 13319  0060DC  EC00  F033         	call	_I2C_2_Master_Start	;wreg free
 13320                           
 13321                           ;colour_click.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
 13322  0060E0  0E52               	movlw	82
 13323  0060E2  ECEF  F032         	call	_I2C_2_Master_Write
 13324                           
 13325                           ;colour_click.c: 77:  I2C_2_Master_Write(0xA0 | 0x18);
 13326  0060E6  0EB8               	movlw	184
 13327  0060E8  ECEF  F032         	call	_I2C_2_Master_Write
 13328                           
 13329                           ;colour_click.c: 78:  I2C_2_Master_RepStart();
 13330  0060EC  EC05  F033         	call	_I2C_2_Master_RepStart	;wreg free
 13331                           
 13332                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
 13333  0060F0  0E53               	movlw	83
 13334  0060F2  ECEF  F032         	call	_I2C_2_Master_Write
 13335                           
 13336                           ;colour_click.c: 80:  tmp=I2C_2_Master_Read(1);
 13337  0060F6  0E01               	movlw	1
 13338  0060F8  EC53  F031         	call	_I2C_2_Master_Read
 13339  0060FC  6E07               	movwf	??_colourclick_readG^0,c
 13340  0060FE  5007               	movf	??_colourclick_readG^0,w,c
 13341  006100  6E0A               	movwf	colourclick_readG@tmp^0,c
 13342  006102  6A0B               	clrf	(colourclick_readG@tmp+1)^0,c
 13343                           
 13344                           ;colour_click.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13345  006104  0E00               	movlw	0
 13346  006106  EC53  F031         	call	_I2C_2_Master_Read
 13347  00610A  6E07               	movwf	??_colourclick_readG^0,c
 13348  00610C  5007               	movf	??_colourclick_readG^0,w,c
 13349  00610E  6E09               	movwf	(??_colourclick_readG+2)^0,c
 13350  006110  6A08               	clrf	(??_colourclick_readG+1)^0,c
 13351  006112  500A               	movf	colourclick_readG@tmp^0,w,c
 13352  006114  1008               	iorwf	(??_colourclick_readG+1)^0,w,c
 13353  006116  6E0A               	movwf	colourclick_readG@tmp^0,c
 13354  006118  500B               	movf	(colourclick_readG@tmp+1)^0,w,c
 13355  00611A  1009               	iorwf	(??_colourclick_readG+2)^0,w,c
 13356  00611C  6E0B               	movwf	(colourclick_readG@tmp+1)^0,c
 13357                           
 13358                           ;colour_click.c: 82:  I2C_2_Master_Stop();
 13359  00611E  ECFB  F032         	call	_I2C_2_Master_Stop	;wreg free
 13360  006122                     
 13361                           ;colour_click.c: 83:  return tmp;
 13362  006122  C00A  F005         	movff	colourclick_readG@tmp,?_colourclick_readG
 13363  006126  C00B  F006         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
 13364  00612A  0012               	return		;funcret
 13365  00612C                     __end_of_colourclick_readG:
 13366                           	callstack 0
 13367                           
 13368 ;; *************** function _colourclick_readC *****************
 13369 ;; Defined at:
 13370 ;;		line 110 in file "colour_click.c"
 13371 ;; Parameters:    Size  Location     Type
 13372 ;;		None
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;  tmp             2    9[COMRAM] unsigned int 
 13375 ;; Return value:  Size  Location     Type
 13376 ;;                  2    4[COMRAM] unsigned int 
 13377 ;; Registers used:
 13378 ;;		wreg, status,2, status,0, cstack
 13379 ;; Tracked objects:
 13380 ;;		On entry : 0/0
 13381 ;;		On exit  : 0/0
 13382 ;;		Unchanged: 0/0
 13383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13386 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13387 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13388 ;;Total ram usage:        7 bytes
 13389 ;; Hardware stack levels used: 1
 13390 ;; Hardware stack levels required when called: 2
 13391 ;; This function calls:
 13392 ;;		_I2C_2_Master_Read
 13393 ;;		_I2C_2_Master_RepStart
 13394 ;;		_I2C_2_Master_Start
 13395 ;;		_I2C_2_Master_Stop
 13396 ;;		_I2C_2_Master_Write
 13397 ;; This function is called by:
 13398 ;;		_colourclick_readRGBC
 13399 ;; This function uses a non-reentrant model
 13400 ;;
 13401                           
 13402                           	psect	text55
 13403  00612C                     __ptext55:
 13404                           	callstack 0
 13405  00612C                     _colourclick_readC:
 13406                           	callstack 26
 13407  00612C                     
 13408                           ;colour_click.c: 112:  unsigned int tmp;;colour_click.c: 113:  I2C_2_Master_Start();
 13409  00612C  EC00  F033         	call	_I2C_2_Master_Start	;wreg free
 13410                           
 13411                           ;colour_click.c: 114:  I2C_2_Master_Write(0x52 | 0x00);
 13412  006130  0E52               	movlw	82
 13413  006132  ECEF  F032         	call	_I2C_2_Master_Write
 13414                           
 13415                           ;colour_click.c: 115:  I2C_2_Master_Write(0xA0 | 0x14);
 13416  006136  0EB4               	movlw	180
 13417  006138  ECEF  F032         	call	_I2C_2_Master_Write
 13418                           
 13419                           ;colour_click.c: 116:  I2C_2_Master_RepStart();
 13420  00613C  EC05  F033         	call	_I2C_2_Master_RepStart	;wreg free
 13421                           
 13422                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x01);
 13423  006140  0E53               	movlw	83
 13424  006142  ECEF  F032         	call	_I2C_2_Master_Write
 13425                           
 13426                           ;colour_click.c: 118:  tmp=I2C_2_Master_Read(1);
 13427  006146  0E01               	movlw	1
 13428  006148  EC53  F031         	call	_I2C_2_Master_Read
 13429  00614C  6E07               	movwf	??_colourclick_readC^0,c
 13430  00614E  5007               	movf	??_colourclick_readC^0,w,c
 13431  006150  6E0A               	movwf	colourclick_readC@tmp^0,c
 13432  006152  6A0B               	clrf	(colourclick_readC@tmp+1)^0,c
 13433                           
 13434                           ;colour_click.c: 119:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13435  006154  0E00               	movlw	0
 13436  006156  EC53  F031         	call	_I2C_2_Master_Read
 13437  00615A  6E07               	movwf	??_colourclick_readC^0,c
 13438  00615C  5007               	movf	??_colourclick_readC^0,w,c
 13439  00615E  6E09               	movwf	(??_colourclick_readC+2)^0,c
 13440  006160  6A08               	clrf	(??_colourclick_readC+1)^0,c
 13441  006162  500A               	movf	colourclick_readC@tmp^0,w,c
 13442  006164  1008               	iorwf	(??_colourclick_readC+1)^0,w,c
 13443  006166  6E0A               	movwf	colourclick_readC@tmp^0,c
 13444  006168  500B               	movf	(colourclick_readC@tmp+1)^0,w,c
 13445  00616A  1009               	iorwf	(??_colourclick_readC+2)^0,w,c
 13446  00616C  6E0B               	movwf	(colourclick_readC@tmp+1)^0,c
 13447                           
 13448                           ;colour_click.c: 120:  I2C_2_Master_Stop();
 13449  00616E  ECFB  F032         	call	_I2C_2_Master_Stop	;wreg free
 13450  006172                     
 13451                           ;colour_click.c: 121:  return tmp;
 13452  006172  C00A  F005         	movff	colourclick_readC@tmp,?_colourclick_readC
 13453  006176  C00B  F006         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
 13454  00617A  0012               	return		;funcret
 13455  00617C                     __end_of_colourclick_readC:
 13456                           	callstack 0
 13457                           
 13458 ;; *************** function _colourclick_readB *****************
 13459 ;; Defined at:
 13460 ;;		line 91 in file "colour_click.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;		None
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;  tmp             2    9[COMRAM] unsigned int 
 13465 ;; Return value:  Size  Location     Type
 13466 ;;                  2    4[COMRAM] unsigned int 
 13467 ;; Registers used:
 13468 ;;		wreg, status,2, status,0, cstack
 13469 ;; Tracked objects:
 13470 ;;		On entry : 0/0
 13471 ;;		On exit  : 0/0
 13472 ;;		Unchanged: 0/0
 13473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13476 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13477 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13478 ;;Total ram usage:        7 bytes
 13479 ;; Hardware stack levels used: 1
 13480 ;; Hardware stack levels required when called: 2
 13481 ;; This function calls:
 13482 ;;		_I2C_2_Master_Read
 13483 ;;		_I2C_2_Master_RepStart
 13484 ;;		_I2C_2_Master_Start
 13485 ;;		_I2C_2_Master_Stop
 13486 ;;		_I2C_2_Master_Write
 13487 ;; This function is called by:
 13488 ;;		_colourclick_readRGBC
 13489 ;;		_colourclick_readRGBC2
 13490 ;; This function uses a non-reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text56
 13494  00617C                     __ptext56:
 13495                           	callstack 0
 13496  00617C                     _colourclick_readB:
 13497                           	callstack 26
 13498  00617C                     
 13499                           ;colour_click.c: 93:  unsigned int tmp;;colour_click.c: 94:  I2C_2_Master_Start();
 13500  00617C  EC00  F033         	call	_I2C_2_Master_Start	;wreg free
 13501                           
 13502                           ;colour_click.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
 13503  006180  0E52               	movlw	82
 13504  006182  ECEF  F032         	call	_I2C_2_Master_Write
 13505                           
 13506                           ;colour_click.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
 13507  006186  0EBA               	movlw	186
 13508  006188  ECEF  F032         	call	_I2C_2_Master_Write
 13509                           
 13510                           ;colour_click.c: 97:  I2C_2_Master_RepStart();
 13511  00618C  EC05  F033         	call	_I2C_2_Master_RepStart	;wreg free
 13512                           
 13513                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
 13514  006190  0E53               	movlw	83
 13515  006192  ECEF  F032         	call	_I2C_2_Master_Write
 13516                           
 13517                           ;colour_click.c: 99:  tmp=I2C_2_Master_Read(1);
 13518  006196  0E01               	movlw	1
 13519  006198  EC53  F031         	call	_I2C_2_Master_Read
 13520  00619C  6E07               	movwf	??_colourclick_readB^0,c
 13521  00619E  5007               	movf	??_colourclick_readB^0,w,c
 13522  0061A0  6E0A               	movwf	colourclick_readB@tmp^0,c
 13523  0061A2  6A0B               	clrf	(colourclick_readB@tmp+1)^0,c
 13524                           
 13525                           ;colour_click.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13526  0061A4  0E00               	movlw	0
 13527  0061A6  EC53  F031         	call	_I2C_2_Master_Read
 13528  0061AA  6E07               	movwf	??_colourclick_readB^0,c
 13529  0061AC  5007               	movf	??_colourclick_readB^0,w,c
 13530  0061AE  6E09               	movwf	(??_colourclick_readB+2)^0,c
 13531  0061B0  6A08               	clrf	(??_colourclick_readB+1)^0,c
 13532  0061B2  500A               	movf	colourclick_readB@tmp^0,w,c
 13533  0061B4  1008               	iorwf	(??_colourclick_readB+1)^0,w,c
 13534  0061B6  6E0A               	movwf	colourclick_readB@tmp^0,c
 13535  0061B8  500B               	movf	(colourclick_readB@tmp+1)^0,w,c
 13536  0061BA  1009               	iorwf	(??_colourclick_readB+2)^0,w,c
 13537  0061BC  6E0B               	movwf	(colourclick_readB@tmp+1)^0,c
 13538                           
 13539                           ;colour_click.c: 101:  I2C_2_Master_Stop();
 13540  0061BE  ECFB  F032         	call	_I2C_2_Master_Stop	;wreg free
 13541  0061C2                     
 13542                           ;colour_click.c: 102:  return tmp;
 13543  0061C2  C00A  F005         	movff	colourclick_readB@tmp,?_colourclick_readB
 13544  0061C6  C00B  F006         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
 13545  0061CA  0012               	return		;funcret
 13546  0061CC                     __end_of_colourclick_readB:
 13547                           	callstack 0
 13548                           
 13549 ;; *************** function _I2C_2_Master_Write *****************
 13550 ;; Defined at:
 13551 ;;		line 69 in file "I2C.c"
 13552 ;; Parameters:    Size  Location     Type
 13553 ;;  data_byte       1    wreg     unsigned char 
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;  data_byte       1    1[COMRAM] unsigned char 
 13556 ;; Return value:  Size  Location     Type
 13557 ;;                  1    wreg      void 
 13558 ;; Registers used:
 13559 ;;		wreg, status,2, status,0, cstack
 13560 ;; Tracked objects:
 13561 ;;		On entry : 0/0
 13562 ;;		On exit  : 0/0
 13563 ;;		Unchanged: 0/0
 13564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13569 ;;Total ram usage:        1 bytes
 13570 ;; Hardware stack levels used: 1
 13571 ;; Hardware stack levels required when called: 1
 13572 ;; This function calls:
 13573 ;;		_I2C_2_Master_Idle
 13574 ;; This function is called by:
 13575 ;;		_colourclick_writetoaddr
 13576 ;;		_colourclick_readR
 13577 ;;		_colourclick_readG
 13578 ;;		_colourclick_readB
 13579 ;;		_colourclick_readC
 13580 ;; This function uses a non-reentrant model
 13581 ;;
 13582                           
 13583                           	psect	text57
 13584  0065DE                     __ptext57:
 13585                           	callstack 0
 13586  0065DE                     _I2C_2_Master_Write:
 13587                           	callstack 27
 13588                           
 13589                           ;incstack = 0
 13590                           ;I2C_2_Master_Write@data_byte stored from wreg
 13591  0065DE  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 13592  0065E0                     
 13593                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 13594  0065E0  EC50  F032         	call	_I2C_2_Master_Idle	;wreg free
 13595  0065E4                     
 13596                           ;I2C.c: 72:   SSP2BUF = data_byte;
 13597  0065E4  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 13598  0065E8  0012               	return		;funcret
 13599  0065EA                     __end_of_I2C_2_Master_Write:
 13600                           	callstack 0
 13601                           
 13602 ;; *************** function _I2C_2_Master_Stop *****************
 13603 ;; Defined at:
 13604 ;;		line 59 in file "I2C.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;		None
 13607 ;; Auto vars:     Size  Location     Type
 13608 ;;		None
 13609 ;; Return value:  Size  Location     Type
 13610 ;;                  1    wreg      void 
 13611 ;; Registers used:
 13612 ;;		wreg, status,2, status,0, cstack
 13613 ;; Tracked objects:
 13614 ;;		On entry : 0/0
 13615 ;;		On exit  : 0/0
 13616 ;;		Unchanged: 0/0
 13617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13622 ;;Total ram usage:        0 bytes
 13623 ;; Hardware stack levels used: 1
 13624 ;; Hardware stack levels required when called: 1
 13625 ;; This function calls:
 13626 ;;		_I2C_2_Master_Idle
 13627 ;; This function is called by:
 13628 ;;		_colourclick_writetoaddr
 13629 ;;		_colourclick_readR
 13630 ;;		_colourclick_readG
 13631 ;;		_colourclick_readB
 13632 ;;		_colourclick_readC
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           	psect	text58
 13637  0065F6                     __ptext58:
 13638                           	callstack 0
 13639  0065F6                     _I2C_2_Master_Stop:
 13640                           	callstack 27
 13641  0065F6                     
 13642                           ;I2C.c: 61:   I2C_2_Master_Idle();
 13643  0065F6  EC50  F032         	call	_I2C_2_Master_Idle	;wreg free
 13644  0065FA                     
 13645                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 13646  0065FA  010E               	movlb	14	; () banked
 13647  0065FC  85DA               	bsf	218,2,b	;volatile
 13648  0065FE                     
 13649                           ; BSR set to: 14
 13650  0065FE  0012               	return		;funcret
 13651  006600                     __end_of_I2C_2_Master_Stop:
 13652                           	callstack 0
 13653                           
 13654 ;; *************** function _I2C_2_Master_Start *****************
 13655 ;; Defined at:
 13656 ;;		line 39 in file "I2C.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;		None
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;		None
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  1    wreg      void 
 13663 ;; Registers used:
 13664 ;;		wreg, status,2, status,0, cstack
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/0
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13674 ;;Total ram usage:        0 bytes
 13675 ;; Hardware stack levels used: 1
 13676 ;; Hardware stack levels required when called: 1
 13677 ;; This function calls:
 13678 ;;		_I2C_2_Master_Idle
 13679 ;; This function is called by:
 13680 ;;		_colourclick_writetoaddr
 13681 ;;		_colourclick_readR
 13682 ;;		_colourclick_readG
 13683 ;;		_colourclick_readB
 13684 ;;		_colourclick_readC
 13685 ;; This function uses a non-reentrant model
 13686 ;;
 13687                           
 13688                           	psect	text59
 13689  006600                     __ptext59:
 13690                           	callstack 0
 13691  006600                     _I2C_2_Master_Start:
 13692                           	callstack 27
 13693  006600                     
 13694                           ;I2C.c: 41:   I2C_2_Master_Idle();
 13695  006600  EC50  F032         	call	_I2C_2_Master_Idle	;wreg free
 13696  006604                     
 13697                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 13698  006604  010E               	movlb	14	; () banked
 13699  006606  81DA               	bsf	218,0,b	;volatile
 13700  006608                     
 13701                           ; BSR set to: 14
 13702  006608  0012               	return		;funcret
 13703  00660A                     __end_of_I2C_2_Master_Start:
 13704                           	callstack 0
 13705                           
 13706 ;; *************** function _I2C_2_Master_RepStart *****************
 13707 ;; Defined at:
 13708 ;;		line 49 in file "I2C.c"
 13709 ;; Parameters:    Size  Location     Type
 13710 ;;		None
 13711 ;; Auto vars:     Size  Location     Type
 13712 ;;		None
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  1    wreg      void 
 13715 ;; Registers used:
 13716 ;;		wreg, status,2, status,0, cstack
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13726 ;;Total ram usage:        0 bytes
 13727 ;; Hardware stack levels used: 1
 13728 ;; Hardware stack levels required when called: 1
 13729 ;; This function calls:
 13730 ;;		_I2C_2_Master_Idle
 13731 ;; This function is called by:
 13732 ;;		_colourclick_readR
 13733 ;;		_colourclick_readG
 13734 ;;		_colourclick_readB
 13735 ;;		_colourclick_readC
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           	psect	text60
 13740  00660A                     __ptext60:
 13741                           	callstack 0
 13742  00660A                     _I2C_2_Master_RepStart:
 13743                           	callstack 26
 13744  00660A                     
 13745                           ;I2C.c: 51:   I2C_2_Master_Idle();
 13746  00660A  EC50  F032         	call	_I2C_2_Master_Idle	;wreg free
 13747  00660E                     
 13748                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
 13749  00660E  010E               	movlb	14	; () banked
 13750  006610  83DA               	bsf	218,1,b	;volatile
 13751  006612                     
 13752                           ; BSR set to: 14
 13753  006612  0012               	return		;funcret
 13754  006614                     __end_of_I2C_2_Master_RepStart:
 13755                           	callstack 0
 13756                           
 13757 ;; *************** function _I2C_2_Master_Read *****************
 13758 ;; Defined at:
 13759 ;;		line 79 in file "I2C.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;  ack             1    wreg     unsigned char 
 13762 ;; Auto vars:     Size  Location     Type
 13763 ;;  ack             1    2[COMRAM] unsigned char 
 13764 ;;  tmp             1    3[COMRAM] unsigned char 
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  1    wreg      unsigned char 
 13767 ;; Registers used:
 13768 ;;		wreg, status,2, status,0, cstack
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/0
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13777 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13778 ;;Total ram usage:        3 bytes
 13779 ;; Hardware stack levels used: 1
 13780 ;; Hardware stack levels required when called: 1
 13781 ;; This function calls:
 13782 ;;		_I2C_2_Master_Idle
 13783 ;; This function is called by:
 13784 ;;		_colourclick_readR
 13785 ;;		_colourclick_readG
 13786 ;;		_colourclick_readB
 13787 ;;		_colourclick_readC
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791                           	psect	text61
 13792  0062A6                     __ptext61:
 13793                           	callstack 0
 13794  0062A6                     _I2C_2_Master_Read:
 13795                           	callstack 26
 13796                           
 13797                           ; BSR set to: 14
 13798                           ;incstack = 0
 13799                           ;I2C_2_Master_Read@ack stored from wreg
 13800  0062A6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 13801  0062A8                     
 13802                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
 13803  0062A8  EC50  F032         	call	_I2C_2_Master_Idle	;wreg free
 13804  0062AC                     
 13805                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
 13806  0062AC  010E               	movlb	14	; () banked
 13807  0062AE  87DA               	bsf	218,3,b	;volatile
 13808                           
 13809                           ;I2C.c: 84:   I2C_2_Master_Idle();
 13810  0062B0  EC50  F032         	call	_I2C_2_Master_Idle	;wreg free
 13811  0062B4                     
 13812                           ;I2C.c: 85:   tmp = SSP2BUF;
 13813  0062B4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 13814                           
 13815                           ;I2C.c: 86:   I2C_2_Master_Idle();
 13816  0062B8  EC50  F032         	call	_I2C_2_Master_Idle	;wreg free
 13817  0062BC                     
 13818                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
 13819  0062BC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 13820  0062BE  B4D8               	btfsc	status,2,c
 13821  0062C0  EF64  F031         	goto	u6911
 13822  0062C4  EF68  F031         	goto	u6910
 13823  0062C8                     u6911:
 13824  0062C8  6A02               	clrf	??_I2C_2_Master_Read^0,c
 13825  0062CA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 13826  0062CC  EF69  F031         	goto	u6928
 13827  0062D0                     u6910:
 13828  0062D0  6A02               	clrf	??_I2C_2_Master_Read^0,c
 13829  0062D2                     u6928:
 13830  0062D2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 13831  0062D4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 13832  0062D6  010E               	movlb	14	; () banked
 13833  0062D8  51DA               	movf	218,w,b	;volatile
 13834  0062DA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 13835  0062DC  0BDF               	andlw	-33
 13836  0062DE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 13837  0062E0  6FDA               	movwf	218,b	;volatile
 13838  0062E2                     
 13839                           ; BSR set to: 14
 13840                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
 13841  0062E2  89DA               	bsf	218,4,b	;volatile
 13842  0062E4                     
 13843                           ; BSR set to: 14
 13844                           ;I2C.c: 89:   return tmp;
 13845  0062E4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 13846  0062E6                     
 13847                           ; BSR set to: 14
 13848  0062E6  0012               	return		;funcret
 13849  0062E8                     __end_of_I2C_2_Master_Read:
 13850                           	callstack 0
 13851                           
 13852 ;; *************** function _I2C_2_Master_Idle *****************
 13853 ;; Defined at:
 13854 ;;		line 30 in file "I2C.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;		None
 13857 ;; Auto vars:     Size  Location     Type
 13858 ;;		None
 13859 ;; Return value:  Size  Location     Type
 13860 ;;                  1    wreg      void 
 13861 ;; Registers used:
 13862 ;;		wreg, status,2, status,0
 13863 ;; Tracked objects:
 13864 ;;		On entry : 0/0
 13865 ;;		On exit  : 0/0
 13866 ;;		Unchanged: 0/0
 13867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13872 ;;Total ram usage:        1 bytes
 13873 ;; Hardware stack levels used: 1
 13874 ;; This function calls:
 13875 ;;		Nothing
 13876 ;; This function is called by:
 13877 ;;		_I2C_2_Master_Start
 13878 ;;		_I2C_2_Master_RepStart
 13879 ;;		_I2C_2_Master_Stop
 13880 ;;		_I2C_2_Master_Write
 13881 ;;		_I2C_2_Master_Read
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           	psect	text62
 13886  0064A0                     __ptext62:
 13887                           	callstack 0
 13888  0064A0                     _I2C_2_Master_Idle:
 13889                           	callstack 27
 13890  0064A0                     l389:
 13891  0064A0  010E               	movlb	14	; () banked
 13892  0064A2  B5D8               	btfsc	216,2,b	;volatile
 13893  0064A4  EF56  F032         	goto	u6721
 13894  0064A8  EF58  F032         	goto	u6720
 13895  0064AC                     u6721:
 13896  0064AC  EF50  F032         	goto	l389
 13897  0064B0                     u6720:
 13898  0064B0                     
 13899                           ; BSR set to: 14
 13900  0064B0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 13901  0064B4  0E1F               	movlw	31
 13902  0064B6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 13903  0064B8  A4D8               	btfss	status,2,c
 13904  0064BA  EF61  F032         	goto	u6731
 13905  0064BE  EF63  F032         	goto	u6730
 13906  0064C2                     u6731:
 13907  0064C2  EF50  F032         	goto	l389
 13908  0064C6                     u6730:
 13909  0064C6                     
 13910                           ; BSR set to: 14
 13911  0064C6  0012               	return		;funcret
 13912  0064C8                     __end_of_I2C_2_Master_Idle:
 13913                           	callstack 0
 13914                           
 13915 ;; *************** function ___xxtofl *****************
 13916 ;; Defined at:
 13917 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;  sign            1    wreg     unsigned char 
 13920 ;;  val             4    0[COMRAM] long 
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;  sign            1    8[COMRAM] unsigned char 
 13923 ;;  arg             4   10[COMRAM] unsigned long 
 13924 ;;  exp             1    9[COMRAM] unsigned char 
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  4    0[COMRAM] unsigned char 
 13927 ;; Registers used:
 13928 ;;		wreg, status,2, status,0
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13935 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13937 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13938 ;;Total ram usage:       14 bytes
 13939 ;; Hardware stack levels used: 1
 13940 ;; This function calls:
 13941 ;;		Nothing
 13942 ;; This function is called by:
 13943 ;;		_colourcards_readRGBC
 13944 ;;		_colourcards_testingRGBC
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           	psect	text63
 13949  00473E                     __ptext63:
 13950                           	callstack 0
 13951  00473E                     ___xxtofl:
 13952                           	callstack 29
 13953                           
 13954                           ; BSR set to: 14
 13955                           ;incstack = 0
 13956                           ;___xxtofl@sign stored from wreg
 13957  00473E  6E09               	movwf	___xxtofl@sign^0,c
 13958  004740  5009               	movf	___xxtofl@sign^0,w,c
 13959  004742  B4D8               	btfsc	status,2,c
 13960  004744  EFA6  F023         	goto	u7241
 13961  004748  EFA8  F023         	goto	u7240
 13962  00474C                     u7241:
 13963  00474C  EFCA  F023         	goto	l1368
 13964  004750                     u7240:
 13965  004750  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13966  004752  EFAF  F023         	goto	u7250
 13967  004756  EFAD  F023         	goto	u7251
 13968  00475A                     u7251:
 13969  00475A  EFCA  F023         	goto	l1368
 13970  00475E                     u7250:
 13971  00475E  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13972  004762  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13973  004766  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13974  00476A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13975  00476E  1E05               	comf	??___xxtofl^0,f,c
 13976  004770  1E06               	comf	(??___xxtofl+1)^0,f,c
 13977  004772  1E07               	comf	(??___xxtofl+2)^0,f,c
 13978  004774  1E08               	comf	(??___xxtofl+3)^0,f,c
 13979  004776  2A05               	incf	??___xxtofl^0,f,c
 13980  004778  0E00               	movlw	0
 13981  00477A  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13982  00477C  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13983  00477E  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13984  004780  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13985  004784  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13986  004788  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13987  00478C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13988  004790  EFD2  F023         	goto	l5831
 13989  004794                     l1368:
 13990  004794  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13991  004798  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13992  00479C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13993  0047A0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13994  0047A4                     l5831:
 13995  0047A4  5001               	movf	___xxtofl@val^0,w,c
 13996  0047A6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13997  0047A8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13998  0047AA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13999  0047AC  A4D8               	btfss	status,2,c
 14000  0047AE  EFDB  F023         	goto	u7261
 14001  0047B2  EFDD  F023         	goto	u7260
 14002  0047B6                     u7261:
 14003  0047B6  EFE7  F023         	goto	l5837
 14004  0047BA                     u7260:
 14005  0047BA  0E00               	movlw	0
 14006  0047BC  6E01               	movwf	?___xxtofl^0,c
 14007  0047BE  0E00               	movlw	0
 14008  0047C0  6E02               	movwf	(?___xxtofl+1)^0,c
 14009  0047C2  0E00               	movlw	0
 14010  0047C4  6E03               	movwf	(?___xxtofl+2)^0,c
 14011  0047C6  0E00               	movlw	0
 14012  0047C8  6E04               	movwf	(?___xxtofl+3)^0,c
 14013  0047CA  EF78  F024         	goto	l1371
 14014  0047CE                     l5837:
 14015  0047CE  0E96               	movlw	150
 14016  0047D0  6E0A               	movwf	___xxtofl@exp^0,c
 14017  0047D2  EFF1  F023         	goto	l5841
 14018  0047D6                     l5839:
 14019  0047D6  2A0A               	incf	___xxtofl@exp^0,f,c
 14020  0047D8  90D8               	bcf	status,0,c
 14021  0047DA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14022  0047DC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14023  0047DE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14024  0047E0  320B               	rrcf	___xxtofl@arg^0,f,c
 14025  0047E2                     l5841:
 14026  0047E2  0E00               	movlw	0
 14027  0047E4  140B               	andwf	___xxtofl@arg^0,w,c
 14028  0047E6  6E05               	movwf	??___xxtofl^0,c
 14029  0047E8  0E00               	movlw	0
 14030  0047EA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14031  0047EC  6E06               	movwf	(??___xxtofl+1)^0,c
 14032  0047EE  0E00               	movlw	0
 14033  0047F0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14034  0047F2  6E07               	movwf	(??___xxtofl+2)^0,c
 14035  0047F4  0EFE               	movlw	254
 14036  0047F6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14037  0047F8  6E08               	movwf	(??___xxtofl+3)^0,c
 14038  0047FA  5005               	movf	??___xxtofl^0,w,c
 14039  0047FC  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14040  0047FE  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14041  004800  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14042  004802  A4D8               	btfss	status,2,c
 14043  004804  EF06  F024         	goto	u7271
 14044  004808  EF08  F024         	goto	u7270
 14045  00480C                     u7271:
 14046  00480C  EFEB  F023         	goto	l5839
 14047  004810                     u7270:
 14048  004810  EF16  F024         	goto	l1375
 14049  004814                     l5843:
 14050  004814  2A0A               	incf	___xxtofl@exp^0,f,c
 14051  004816  0E01               	movlw	1
 14052  004818  260B               	addwf	___xxtofl@arg^0,f,c
 14053  00481A  0E00               	movlw	0
 14054  00481C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 14055  00481E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 14056  004820  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 14057  004822  90D8               	bcf	status,0,c
 14058  004824  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14059  004826  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14060  004828  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14061  00482A  320B               	rrcf	___xxtofl@arg^0,f,c
 14062  00482C                     l1375:
 14063  00482C  0E00               	movlw	0
 14064  00482E  140B               	andwf	___xxtofl@arg^0,w,c
 14065  004830  6E05               	movwf	??___xxtofl^0,c
 14066  004832  0E00               	movlw	0
 14067  004834  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14068  004836  6E06               	movwf	(??___xxtofl+1)^0,c
 14069  004838  0E00               	movlw	0
 14070  00483A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14071  00483C  6E07               	movwf	(??___xxtofl+2)^0,c
 14072  00483E  0EFF               	movlw	255
 14073  004840  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14074  004842  6E08               	movwf	(??___xxtofl+3)^0,c
 14075  004844  5005               	movf	??___xxtofl^0,w,c
 14076  004846  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14077  004848  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14078  00484A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14079  00484C  A4D8               	btfss	status,2,c
 14080  00484E  EF2B  F024         	goto	u7281
 14081  004852  EF2D  F024         	goto	u7280
 14082  004856                     u7281:
 14083  004856  EF0A  F024         	goto	l5843
 14084  00485A                     u7280:
 14085  00485A  EF35  F024         	goto	l5851
 14086  00485E                     l5849:
 14087  00485E  060A               	decf	___xxtofl@exp^0,f,c
 14088  004860  90D8               	bcf	status,0,c
 14089  004862  360B               	rlcf	___xxtofl@arg^0,f,c
 14090  004864  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 14091  004866  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 14092  004868  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 14093  00486A                     l5851:
 14094  00486A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 14095  00486C  EF3A  F024         	goto	u7291
 14096  004870  EF3C  F024         	goto	u7290
 14097  004874                     u7291:
 14098  004874  EF44  F024         	goto	l1382
 14099  004878                     u7290:
 14100  004878  0E02               	movlw	2
 14101  00487A  600A               	cpfslt	___xxtofl@exp^0,c
 14102  00487C  EF42  F024         	goto	u7301
 14103  004880  EF44  F024         	goto	u7300
 14104  004884                     u7301:
 14105  004884  EF2F  F024         	goto	l5849
 14106  004888                     u7300:
 14107  004888                     l1382:
 14108  004888  B00A               	btfsc	___xxtofl@exp^0,0,c
 14109  00488A  EF49  F024         	goto	u7311
 14110  00488E  EF4B  F024         	goto	u7310
 14111  004892                     u7311:
 14112  004892  EF4C  F024         	goto	l5857
 14113  004896                     u7310:
 14114  004896  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 14115  004898                     l5857:
 14116  004898  90D8               	bcf	status,0,c
 14117  00489A  320A               	rrcf	___xxtofl@exp^0,f,c
 14118  00489C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14119  0048A0  6A06               	clrf	(??___xxtofl+1)^0,c
 14120  0048A2  6A07               	clrf	(??___xxtofl+2)^0,c
 14121  0048A4  6A08               	clrf	(??___xxtofl+3)^0,c
 14122  0048A6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14123  0048AA  6A07               	clrf	(??___xxtofl+2)^0,c
 14124  0048AC  6A06               	clrf	(??___xxtofl+1)^0,c
 14125  0048AE  6A05               	clrf	??___xxtofl^0,c
 14126  0048B0  5005               	movf	??___xxtofl^0,w,c
 14127  0048B2  120B               	iorwf	___xxtofl@arg^0,f,c
 14128  0048B4  5006               	movf	(??___xxtofl+1)^0,w,c
 14129  0048B6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 14130  0048B8  5007               	movf	(??___xxtofl+2)^0,w,c
 14131  0048BA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 14132  0048BC  5008               	movf	(??___xxtofl+3)^0,w,c
 14133  0048BE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 14134  0048C0  5009               	movf	___xxtofl@sign^0,w,c
 14135  0048C2  B4D8               	btfsc	status,2,c
 14136  0048C4  EF66  F024         	goto	u7321
 14137  0048C8  EF68  F024         	goto	u7320
 14138  0048CC                     u7321:
 14139  0048CC  EF70  F024         	goto	l5867
 14140  0048D0                     u7320:
 14141  0048D0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 14142  0048D2  EF6F  F024         	goto	u7330
 14143  0048D6  EF6D  F024         	goto	u7331
 14144  0048DA                     u7331:
 14145  0048DA  EF70  F024         	goto	l5867
 14146  0048DE                     u7330:
 14147  0048DE  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 14148  0048E0                     l5867:
 14149  0048E0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14150  0048E4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14151  0048E8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14152  0048EC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14153  0048F0                     l1371:
 14154  0048F0  0012               	return		;funcret
 14155  0048F2                     __end_of___xxtofl:
 14156                           	callstack 0
 14157                           
 14158 ;; *************** function ___flge *****************
 14159 ;; Defined at:
 14160 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 14161 ;; Parameters:    Size  Location     Type
 14162 ;;  ff1             4   25[COMRAM] unsigned char 
 14163 ;;  ff2             4   29[COMRAM] unsigned char 
 14164 ;; Auto vars:     Size  Location     Type
 14165 ;;		None
 14166 ;; Return value:  Size  Location     Type
 14167 ;;		None               void
 14168 ;; Registers used:
 14169 ;;		wreg, status,2, status,0
 14170 ;; Tracked objects:
 14171 ;;		On entry : 0/0
 14172 ;;		On exit  : 0/0
 14173 ;;		Unchanged: 0/0
 14174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14175 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14178 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14179 ;;Total ram usage:       12 bytes
 14180 ;; Hardware stack levels used: 1
 14181 ;; This function calls:
 14182 ;;		Nothing
 14183 ;; This function is called by:
 14184 ;;		_colourcards_readRGBC
 14185 ;;		_colourcards_testingRGBC
 14186 ;;		_efgtoa
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190                           	psect	text64
 14191  00528A                     __ptext64:
 14192                           	callstack 0
 14193  00528A                     ___flge:
 14194                           	callstack 24
 14195  00528A  0E00               	movlw	0
 14196  00528C  141A               	andwf	___flge@ff1^0,w,c
 14197  00528E  6E22               	movwf	??___flge^0,c
 14198  005290  0E00               	movlw	0
 14199  005292  141B               	andwf	(___flge@ff1+1)^0,w,c
 14200  005294  6E23               	movwf	(??___flge+1)^0,c
 14201  005296  0E80               	movlw	128
 14202  005298  141C               	andwf	(___flge@ff1+2)^0,w,c
 14203  00529A  6E24               	movwf	(??___flge+2)^0,c
 14204  00529C  0E7F               	movlw	127
 14205  00529E  141D               	andwf	(___flge@ff1+3)^0,w,c
 14206  0052A0  6E25               	movwf	(??___flge+3)^0,c
 14207  0052A2  5022               	movf	??___flge^0,w,c
 14208  0052A4  1023               	iorwf	(??___flge+1)^0,w,c
 14209  0052A6  1024               	iorwf	(??___flge+2)^0,w,c
 14210  0052A8  1025               	iorwf	(??___flge+3)^0,w,c
 14211  0052AA  A4D8               	btfss	status,2,c
 14212  0052AC  EF5A  F029         	goto	u5371
 14213  0052B0  EF5C  F029         	goto	u5370
 14214  0052B4                     u5371:
 14215  0052B4  EF64  F029         	goto	l4823
 14216  0052B8                     u5370:
 14217  0052B8  0E00               	movlw	0
 14218  0052BA  6E1A               	movwf	___flge@ff1^0,c
 14219  0052BC  0E00               	movlw	0
 14220  0052BE  6E1B               	movwf	(___flge@ff1+1)^0,c
 14221  0052C0  0E00               	movlw	0
 14222  0052C2  6E1C               	movwf	(___flge@ff1+2)^0,c
 14223  0052C4  0E00               	movlw	0
 14224  0052C6  6E1D               	movwf	(___flge@ff1+3)^0,c
 14225  0052C8                     l4823:
 14226  0052C8  0E00               	movlw	0
 14227  0052CA  141E               	andwf	___flge@ff2^0,w,c
 14228  0052CC  6E22               	movwf	??___flge^0,c
 14229  0052CE  0E00               	movlw	0
 14230  0052D0  141F               	andwf	(___flge@ff2+1)^0,w,c
 14231  0052D2  6E23               	movwf	(??___flge+1)^0,c
 14232  0052D4  0E80               	movlw	128
 14233  0052D6  1420               	andwf	(___flge@ff2+2)^0,w,c
 14234  0052D8  6E24               	movwf	(??___flge+2)^0,c
 14235  0052DA  0E7F               	movlw	127
 14236  0052DC  1421               	andwf	(___flge@ff2+3)^0,w,c
 14237  0052DE  6E25               	movwf	(??___flge+3)^0,c
 14238  0052E0  5022               	movf	??___flge^0,w,c
 14239  0052E2  1023               	iorwf	(??___flge+1)^0,w,c
 14240  0052E4  1024               	iorwf	(??___flge+2)^0,w,c
 14241  0052E6  1025               	iorwf	(??___flge+3)^0,w,c
 14242  0052E8  A4D8               	btfss	status,2,c
 14243  0052EA  EF79  F029         	goto	u5381
 14244  0052EE  EF7B  F029         	goto	u5380
 14245  0052F2                     u5381:
 14246  0052F2  EF83  F029         	goto	l4827
 14247  0052F6                     u5380:
 14248  0052F6  0E00               	movlw	0
 14249  0052F8  6E1E               	movwf	___flge@ff2^0,c
 14250  0052FA  0E00               	movlw	0
 14251  0052FC  6E1F               	movwf	(___flge@ff2+1)^0,c
 14252  0052FE  0E00               	movlw	0
 14253  005300  6E20               	movwf	(___flge@ff2+2)^0,c
 14254  005302  0E00               	movlw	0
 14255  005304  6E21               	movwf	(___flge@ff2+3)^0,c
 14256  005306                     l4827:
 14257  005306  AE1D               	btfss	(___flge@ff1+3)^0,7,c
 14258  005308  EF88  F029         	goto	u5391
 14259  00530C  EF8A  F029         	goto	u5390
 14260  005310                     u5391:
 14261  005310  EF93  F029         	goto	l4831
 14262  005314                     u5390:
 14263  005314  6C1A               	negf	___flge@ff1^0,c
 14264  005316  1E1B               	comf	(___flge@ff1+1)^0,f,c
 14265  005318  B0D8               	btfsc	status,0,c
 14266  00531A  2A1B               	incf	(___flge@ff1+1)^0,f,c
 14267  00531C  1E1C               	comf	(___flge@ff1+2)^0,f,c
 14268  00531E  B0D8               	btfsc	status,0,c
 14269  005320  2A1C               	incf	(___flge@ff1+2)^0,f,c
 14270  005322  0E80               	movlw	128
 14271  005324  561D               	subfwb	(___flge@ff1+3)^0,f,c
 14272  005326                     l4831:
 14273  005326  AE21               	btfss	(___flge@ff2+3)^0,7,c
 14274  005328  EF98  F029         	goto	u5401
 14275  00532C  EF9A  F029         	goto	u5400
 14276  005330                     u5401:
 14277  005330  EFA3  F029         	goto	l978
 14278  005334                     u5400:
 14279  005334  6C1E               	negf	___flge@ff2^0,c
 14280  005336  1E1F               	comf	(___flge@ff2+1)^0,f,c
 14281  005338  B0D8               	btfsc	status,0,c
 14282  00533A  2A1F               	incf	(___flge@ff2+1)^0,f,c
 14283  00533C  1E20               	comf	(___flge@ff2+2)^0,f,c
 14284  00533E  B0D8               	btfsc	status,0,c
 14285  005340  2A20               	incf	(___flge@ff2+2)^0,f,c
 14286  005342  0E80               	movlw	128
 14287  005344  5621               	subfwb	(___flge@ff2+3)^0,f,c
 14288  005346                     l978:
 14289  005346  0E00               	movlw	0
 14290  005348  1A1A               	xorwf	___flge@ff1^0,f,c
 14291  00534A  0E00               	movlw	0
 14292  00534C  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
 14293  00534E  0E00               	movlw	0
 14294  005350  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
 14295  005352  0E80               	movlw	128
 14296  005354  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
 14297  005356  0E00               	movlw	0
 14298  005358  1A1E               	xorwf	___flge@ff2^0,f,c
 14299  00535A  0E00               	movlw	0
 14300  00535C  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
 14301  00535E  0E00               	movlw	0
 14302  005360  1A20               	xorwf	(___flge@ff2+2)^0,f,c
 14303  005362  0E80               	movlw	128
 14304  005364  1A21               	xorwf	(___flge@ff2+3)^0,f,c
 14305  005366  501E               	movf	___flge@ff2^0,w,c
 14306  005368  5C1A               	subwf	___flge@ff1^0,w,c
 14307  00536A  501F               	movf	(___flge@ff2+1)^0,w,c
 14308  00536C  581B               	subwfb	(___flge@ff1+1)^0,w,c
 14309  00536E  5020               	movf	(___flge@ff2+2)^0,w,c
 14310  005370  581C               	subwfb	(___flge@ff1+2)^0,w,c
 14311  005372  5021               	movf	(___flge@ff2+3)^0,w,c
 14312  005374  581D               	subwfb	(___flge@ff1+3)^0,w,c
 14313  005376  B0D8               	btfsc	status,0,c
 14314  005378  EFC0  F029         	goto	u5411
 14315  00537C  EFC2  F029         	goto	u5410
 14316  005380                     u5411:
 14317  005380  EFC5  F029         	goto	l4837
 14318  005384                     u5410:
 14319  005384  90D8               	bcf	status,0,c
 14320  005386  EFC6  F029         	goto	l983
 14321  00538A                     l4837:
 14322  00538A  80D8               	bsf	status,0,c
 14323  00538C                     l983:
 14324  00538C  0012               	return		;funcret
 14325  00538E                     __end_of___flge:
 14326                           	callstack 0
 14327                           
 14328 ;; *************** function ___fldiv *****************
 14329 ;; Defined at:
 14330 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;  b               4   14[COMRAM] unsigned char 
 14333 ;;  a               4   18[COMRAM] unsigned char 
 14334 ;; Auto vars:     Size  Location     Type
 14335 ;;  grs             4   33[COMRAM] unsigned long 
 14336 ;;  rem             4   26[COMRAM] unsigned long 
 14337 ;;  new_exp         2   31[COMRAM] short 
 14338 ;;  aexp            1   38[COMRAM] unsigned char 
 14339 ;;  bexp            1   37[COMRAM] unsigned char 
 14340 ;;  sign            1   30[COMRAM] unsigned char 
 14341 ;; Return value:  Size  Location     Type
 14342 ;;                  4   14[COMRAM] unsigned char 
 14343 ;; Registers used:
 14344 ;;		wreg, status,2, status,0
 14345 ;; Tracked objects:
 14346 ;;		On entry : 0/0
 14347 ;;		On exit  : 0/0
 14348 ;;		Unchanged: 0/0
 14349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14350 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14351 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14352 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14353 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14354 ;;Total ram usage:       25 bytes
 14355 ;; Hardware stack levels used: 1
 14356 ;; This function calls:
 14357 ;;		Nothing
 14358 ;; This function is called by:
 14359 ;;		_colourcards_readRGBC
 14360 ;;		_colourcards_testingRGBC
 14361 ;;		_efgtoa
 14362 ;; This function uses a non-reentrant model
 14363 ;;
 14364                           
 14365                           	psect	text65
 14366  003CDC                     __ptext65:
 14367                           	callstack 0
 14368  003CDC                     ___fldiv:
 14369                           	callstack 24
 14370  003CDC  5012               	movf	(___fldiv@b+3)^0,w,c
 14371  003CDE  0B80               	andlw	128
 14372  003CE0  6E1F               	movwf	___fldiv@sign^0,c
 14373  003CE2  5012               	movf	(___fldiv@b+3)^0,w,c
 14374  003CE4  2412               	addwf	(___fldiv@b+3)^0,w,c
 14375  003CE6  6E26               	movwf	___fldiv@bexp^0,c
 14376  003CE8  AE11               	btfss	(___fldiv@b+2)^0,7,c
 14377  003CEA  EF79  F01E         	goto	u4801
 14378  003CEE  EF7B  F01E         	goto	u4800
 14379  003CF2                     u4801:
 14380  003CF2  EF7C  F01E         	goto	l4455
 14381  003CF6                     u4800:
 14382  003CF6  8026               	bsf	___fldiv@bexp^0,0,c
 14383  003CF8                     l4455:
 14384  003CF8  5026               	movf	___fldiv@bexp^0,w,c
 14385  003CFA  B4D8               	btfsc	status,2,c
 14386  003CFC  EF82  F01E         	goto	u4811
 14387  003D00  EF84  F01E         	goto	u4810
 14388  003D04                     u4811:
 14389  003D04  EF99  F01E         	goto	l4465
 14390  003D08                     u4810:
 14391  003D08  2826               	incf	___fldiv@bexp^0,w,c
 14392  003D0A  A4D8               	btfss	status,2,c
 14393  003D0C  EF8A  F01E         	goto	u4821
 14394  003D10  EF8C  F01E         	goto	u4820
 14395  003D14                     u4821:
 14396  003D14  EF94  F01E         	goto	l4461
 14397  003D18                     u4820:
 14398  003D18  0E00               	movlw	0
 14399  003D1A  6E0F               	movwf	___fldiv@b^0,c
 14400  003D1C  0E00               	movlw	0
 14401  003D1E  6E10               	movwf	(___fldiv@b+1)^0,c
 14402  003D20  0E00               	movlw	0
 14403  003D22  6E11               	movwf	(___fldiv@b+2)^0,c
 14404  003D24  0E00               	movlw	0
 14405  003D26  6E12               	movwf	(___fldiv@b+3)^0,c
 14406  003D28                     l4461:
 14407  003D28  8E11               	bsf	(___fldiv@b+2)^0,7,c
 14408  003D2A  0E00               	movlw	0
 14409  003D2C  6E12               	movwf	(___fldiv@b+3)^0,c
 14410  003D2E  EFA1  F01E         	goto	l4467
 14411  003D32                     l4465:
 14412  003D32  0E00               	movlw	0
 14413  003D34  6E0F               	movwf	___fldiv@b^0,c
 14414  003D36  0E00               	movlw	0
 14415  003D38  6E10               	movwf	(___fldiv@b+1)^0,c
 14416  003D3A  0E00               	movlw	0
 14417  003D3C  6E11               	movwf	(___fldiv@b+2)^0,c
 14418  003D3E  0E00               	movlw	0
 14419  003D40  6E12               	movwf	(___fldiv@b+3)^0,c
 14420  003D42                     l4467:
 14421  003D42  5016               	movf	(___fldiv@a+3)^0,w,c
 14422  003D44  0B80               	andlw	128
 14423  003D46  1A1F               	xorwf	___fldiv@sign^0,f,c
 14424  003D48  5016               	movf	(___fldiv@a+3)^0,w,c
 14425  003D4A  2416               	addwf	(___fldiv@a+3)^0,w,c
 14426  003D4C  6E27               	movwf	___fldiv@aexp^0,c
 14427  003D4E  AE15               	btfss	(___fldiv@a+2)^0,7,c
 14428  003D50  EFAC  F01E         	goto	u4831
 14429  003D54  EFAE  F01E         	goto	u4830
 14430  003D58                     u4831:
 14431  003D58  EFAF  F01E         	goto	l4475
 14432  003D5C                     u4830:
 14433  003D5C  8027               	bsf	___fldiv@aexp^0,0,c
 14434  003D5E                     l4475:
 14435  003D5E  5027               	movf	___fldiv@aexp^0,w,c
 14436  003D60  B4D8               	btfsc	status,2,c
 14437  003D62  EFB5  F01E         	goto	u4841
 14438  003D66  EFB7  F01E         	goto	u4840
 14439  003D6A                     u4841:
 14440  003D6A  EFCC  F01E         	goto	l4485
 14441  003D6E                     u4840:
 14442  003D6E  2827               	incf	___fldiv@aexp^0,w,c
 14443  003D70  A4D8               	btfss	status,2,c
 14444  003D72  EFBD  F01E         	goto	u4851
 14445  003D76  EFBF  F01E         	goto	u4850
 14446  003D7A                     u4851:
 14447  003D7A  EFC7  F01E         	goto	l4481
 14448  003D7E                     u4850:
 14449  003D7E  0E00               	movlw	0
 14450  003D80  6E13               	movwf	___fldiv@a^0,c
 14451  003D82  0E00               	movlw	0
 14452  003D84  6E14               	movwf	(___fldiv@a+1)^0,c
 14453  003D86  0E00               	movlw	0
 14454  003D88  6E15               	movwf	(___fldiv@a+2)^0,c
 14455  003D8A  0E00               	movlw	0
 14456  003D8C  6E16               	movwf	(___fldiv@a+3)^0,c
 14457  003D8E                     l4481:
 14458  003D8E  8E15               	bsf	(___fldiv@a+2)^0,7,c
 14459  003D90  0E00               	movlw	0
 14460  003D92  6E16               	movwf	(___fldiv@a+3)^0,c
 14461  003D94  EFD4  F01E         	goto	l4487
 14462  003D98                     l4485:
 14463  003D98  0E00               	movlw	0
 14464  003D9A  6E13               	movwf	___fldiv@a^0,c
 14465  003D9C  0E00               	movlw	0
 14466  003D9E  6E14               	movwf	(___fldiv@a+1)^0,c
 14467  003DA0  0E00               	movlw	0
 14468  003DA2  6E15               	movwf	(___fldiv@a+2)^0,c
 14469  003DA4  0E00               	movlw	0
 14470  003DA6  6E16               	movwf	(___fldiv@a+3)^0,c
 14471  003DA8                     l4487:
 14472  003DA8  5013               	movf	___fldiv@a^0,w,c
 14473  003DAA  1014               	iorwf	(___fldiv@a+1)^0,w,c
 14474  003DAC  1015               	iorwf	(___fldiv@a+2)^0,w,c
 14475  003DAE  1016               	iorwf	(___fldiv@a+3)^0,w,c
 14476  003DB0  A4D8               	btfss	status,2,c
 14477  003DB2  EFDD  F01E         	goto	u4861
 14478  003DB6  EFDF  F01E         	goto	u4860
 14479  003DBA                     u4861:
 14480  003DBA  EFF7  F01E         	goto	l4499
 14481  003DBE                     u4860:
 14482  003DBE  0E00               	movlw	0
 14483  003DC0  6E0F               	movwf	___fldiv@b^0,c
 14484  003DC2  0E00               	movlw	0
 14485  003DC4  6E10               	movwf	(___fldiv@b+1)^0,c
 14486  003DC6  0E00               	movlw	0
 14487  003DC8  6E11               	movwf	(___fldiv@b+2)^0,c
 14488  003DCA  0E00               	movlw	0
 14489  003DCC  6E12               	movwf	(___fldiv@b+3)^0,c
 14490  003DCE  0E80               	movlw	128
 14491  003DD0  1211               	iorwf	(___fldiv@b+2)^0,f,c
 14492  003DD2  0E7F               	movlw	127
 14493  003DD4  1212               	iorwf	(___fldiv@b+3)^0,f,c
 14494  003DD6                     l4493:
 14495  003DD6  501F               	movf	___fldiv@sign^0,w,c
 14496  003DD8  1212               	iorwf	(___fldiv@b+3)^0,f,c
 14497  003DDA  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14498  003DDE  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14499  003DE2  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14500  003DE6  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14501  003DEA  EF3A  F020         	goto	l1295
 14502  003DEE                     l4499:
 14503  003DEE  5026               	movf	___fldiv@bexp^0,w,c
 14504  003DF0  A4D8               	btfss	status,2,c
 14505  003DF2  EFFD  F01E         	goto	u4871
 14506  003DF6  EFFF  F01E         	goto	u4870
 14507  003DFA                     u4871:
 14508  003DFA  EF09  F01F         	goto	l4507
 14509  003DFE                     u4870:
 14510  003DFE  0E00               	movlw	0
 14511  003E00  6E0F               	movwf	?___fldiv^0,c
 14512  003E02  0E00               	movlw	0
 14513  003E04  6E10               	movwf	(?___fldiv+1)^0,c
 14514  003E06  0E00               	movlw	0
 14515  003E08  6E11               	movwf	(?___fldiv+2)^0,c
 14516  003E0A  0E00               	movlw	0
 14517  003E0C  6E12               	movwf	(?___fldiv+3)^0,c
 14518  003E0E  EF3A  F020         	goto	l1295
 14519  003E12                     l4507:
 14520  003E12  5027               	movf	___fldiv@aexp^0,w,c
 14521  003E14  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14522  003E18  6A18               	clrf	(??___fldiv+1)^0,c
 14523  003E1A  5E17               	subwf	??___fldiv^0,f,c
 14524  003E1C  0E00               	movlw	0
 14525  003E1E  5A18               	subwfb	(??___fldiv+1)^0,f,c
 14526  003E20  0E7F               	movlw	127
 14527  003E22  2417               	addwf	??___fldiv^0,w,c
 14528  003E24  6E20               	movwf	___fldiv@new_exp^0,c
 14529  003E26  0E00               	movlw	0
 14530  003E28  2018               	addwfc	(??___fldiv+1)^0,w,c
 14531  003E2A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 14532  003E2C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14533  003E30  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14534  003E34  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14535  003E38  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14536  003E3C  0E00               	movlw	0
 14537  003E3E  6E0F               	movwf	___fldiv@b^0,c
 14538  003E40  0E00               	movlw	0
 14539  003E42  6E10               	movwf	(___fldiv@b+1)^0,c
 14540  003E44  0E00               	movlw	0
 14541  003E46  6E11               	movwf	(___fldiv@b+2)^0,c
 14542  003E48  0E00               	movlw	0
 14543  003E4A  6E12               	movwf	(___fldiv@b+3)^0,c
 14544  003E4C  0E00               	movlw	0
 14545  003E4E  6E22               	movwf	___fldiv@grs^0,c
 14546  003E50  0E00               	movlw	0
 14547  003E52  6E23               	movwf	(___fldiv@grs+1)^0,c
 14548  003E54  0E00               	movlw	0
 14549  003E56  6E24               	movwf	(___fldiv@grs+2)^0,c
 14550  003E58  0E00               	movlw	0
 14551  003E5A  6E25               	movwf	(___fldiv@grs+3)^0,c
 14552  003E5C  0E00               	movlw	0
 14553  003E5E  6E27               	movwf	___fldiv@aexp^0,c
 14554  003E60  EF6A  F01F         	goto	l1297
 14555  003E64                     l4517:
 14556  003E64  5027               	movf	___fldiv@aexp^0,w,c
 14557  003E66  B4D8               	btfsc	status,2,c
 14558  003E68  EF38  F01F         	goto	u4881
 14559  003E6C  EF3A  F01F         	goto	u4880
 14560  003E70                     u4881:
 14561  003E70  EF51  F01F         	goto	l4525
 14562  003E74                     u4880:
 14563  003E74  90D8               	bcf	status,0,c
 14564  003E76  361B               	rlcf	___fldiv@rem^0,f,c
 14565  003E78  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 14566  003E7A  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 14567  003E7C  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 14568  003E7E  90D8               	bcf	status,0,c
 14569  003E80  360F               	rlcf	___fldiv@b^0,f,c
 14570  003E82  3610               	rlcf	(___fldiv@b+1)^0,f,c
 14571  003E84  3611               	rlcf	(___fldiv@b+2)^0,f,c
 14572  003E86  3612               	rlcf	(___fldiv@b+3)^0,f,c
 14573  003E88  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 14574  003E8A  EF49  F01F         	goto	u4891
 14575  003E8E  EF4B  F01F         	goto	u4890
 14576  003E92                     u4891:
 14577  003E92  EF4C  F01F         	goto	l1300
 14578  003E96                     u4890:
 14579  003E96  800F               	bsf	___fldiv@b^0,0,c
 14580  003E98                     l1300:
 14581  003E98  90D8               	bcf	status,0,c
 14582  003E9A  3622               	rlcf	___fldiv@grs^0,f,c
 14583  003E9C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 14584  003E9E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 14585  003EA0  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 14586  003EA2                     l4525:
 14587  003EA2  5013               	movf	___fldiv@a^0,w,c
 14588  003EA4  5C1B               	subwf	___fldiv@rem^0,w,c
 14589  003EA6  5014               	movf	(___fldiv@a+1)^0,w,c
 14590  003EA8  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 14591  003EAA  5015               	movf	(___fldiv@a+2)^0,w,c
 14592  003EAC  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 14593  003EAE  5016               	movf	(___fldiv@a+3)^0,w,c
 14594  003EB0  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 14595  003EB2  A0D8               	btfss	status,0,c
 14596  003EB4  EF5E  F01F         	goto	u4901
 14597  003EB8  EF60  F01F         	goto	u4900
 14598  003EBC                     u4901:
 14599  003EBC  EF69  F01F         	goto	l4531
 14600  003EC0                     u4900:
 14601  003EC0  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 14602  003EC2  5013               	movf	___fldiv@a^0,w,c
 14603  003EC4  5E1B               	subwf	___fldiv@rem^0,f,c
 14604  003EC6  5014               	movf	(___fldiv@a+1)^0,w,c
 14605  003EC8  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 14606  003ECA  5015               	movf	(___fldiv@a+2)^0,w,c
 14607  003ECC  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 14608  003ECE  5016               	movf	(___fldiv@a+3)^0,w,c
 14609  003ED0  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 14610  003ED2                     l4531:
 14611  003ED2  2A27               	incf	___fldiv@aexp^0,f,c
 14612  003ED4                     l1297:
 14613  003ED4  0E19               	movlw	25
 14614  003ED6  6427               	cpfsgt	___fldiv@aexp^0,c
 14615  003ED8  EF70  F01F         	goto	u4911
 14616  003EDC  EF72  F01F         	goto	u4910
 14617  003EE0                     u4911:
 14618  003EE0  EF32  F01F         	goto	l4517
 14619  003EE4                     u4910:
 14620  003EE4  501B               	movf	___fldiv@rem^0,w,c
 14621  003EE6  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 14622  003EE8  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 14623  003EEA  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 14624  003EEC  B4D8               	btfsc	status,2,c
 14625  003EEE  EF7B  F01F         	goto	u4921
 14626  003EF2  EF7D  F01F         	goto	u4920
 14627  003EF6                     u4921:
 14628  003EF6  EF95  F01F         	goto	l4543
 14629  003EFA                     u4920:
 14630  003EFA  8022               	bsf	___fldiv@grs^0,0,c
 14631  003EFC  EF95  F01F         	goto	l4543
 14632  003F00                     l4537:
 14633  003F00  90D8               	bcf	status,0,c
 14634  003F02  360F               	rlcf	___fldiv@b^0,f,c
 14635  003F04  3610               	rlcf	(___fldiv@b+1)^0,f,c
 14636  003F06  3611               	rlcf	(___fldiv@b+2)^0,f,c
 14637  003F08  3612               	rlcf	(___fldiv@b+3)^0,f,c
 14638  003F0A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 14639  003F0C  EF8A  F01F         	goto	u4931
 14640  003F10  EF8C  F01F         	goto	u4930
 14641  003F14                     u4931:
 14642  003F14  EF8D  F01F         	goto	l1306
 14643  003F18                     u4930:
 14644  003F18  800F               	bsf	___fldiv@b^0,0,c
 14645  003F1A                     l1306:
 14646  003F1A  90D8               	bcf	status,0,c
 14647  003F1C  3622               	rlcf	___fldiv@grs^0,f,c
 14648  003F1E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 14649  003F20  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 14650  003F22  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 14651  003F24  0620               	decf	___fldiv@new_exp^0,f,c
 14652  003F26  A0D8               	btfss	status,0,c
 14653  003F28  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 14654  003F2A                     l4543:
 14655  003F2A  AE11               	btfss	(___fldiv@b+2)^0,7,c
 14656  003F2C  EF9A  F01F         	goto	u4941
 14657  003F30  EF9C  F01F         	goto	u4940
 14658  003F34                     u4941:
 14659  003F34  EF80  F01F         	goto	l4537
 14660  003F38                     u4940:
 14661  003F38  0E00               	movlw	0
 14662  003F3A  6E27               	movwf	___fldiv@aexp^0,c
 14663  003F3C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 14664  003F3E  EFA3  F01F         	goto	u4951
 14665  003F42  EFA5  F01F         	goto	u4950
 14666  003F46                     u4951:
 14667  003F46  EFC9  F01F         	goto	l1308
 14668  003F4A                     u4950:
 14669  003F4A  0EFF               	movlw	255
 14670  003F4C  1422               	andwf	___fldiv@grs^0,w,c
 14671  003F4E  6E17               	movwf	??___fldiv^0,c
 14672  003F50  0EFF               	movlw	255
 14673  003F52  1423               	andwf	(___fldiv@grs+1)^0,w,c
 14674  003F54  6E18               	movwf	(??___fldiv+1)^0,c
 14675  003F56  0EFF               	movlw	255
 14676  003F58  1424               	andwf	(___fldiv@grs+2)^0,w,c
 14677  003F5A  6E19               	movwf	(??___fldiv+2)^0,c
 14678  003F5C  0E7F               	movlw	127
 14679  003F5E  1425               	andwf	(___fldiv@grs+3)^0,w,c
 14680  003F60  6E1A               	movwf	(??___fldiv+3)^0,c
 14681  003F62  5017               	movf	??___fldiv^0,w,c
 14682  003F64  1018               	iorwf	(??___fldiv+1)^0,w,c
 14683  003F66  1019               	iorwf	(??___fldiv+2)^0,w,c
 14684  003F68  101A               	iorwf	(??___fldiv+3)^0,w,c
 14685  003F6A  B4D8               	btfsc	status,2,c
 14686  003F6C  EFBA  F01F         	goto	u4961
 14687  003F70  EFBC  F01F         	goto	u4960
 14688  003F74                     u4961:
 14689  003F74  EFC0  F01F         	goto	l1309
 14690  003F78                     u4960:
 14691  003F78                     l4551:
 14692  003F78  0E01               	movlw	1
 14693  003F7A  6E27               	movwf	___fldiv@aexp^0,c
 14694  003F7C  EFC9  F01F         	goto	l1308
 14695  003F80                     l1309:
 14696  003F80  A00F               	btfss	___fldiv@b^0,0,c
 14697  003F82  EFC5  F01F         	goto	u4971
 14698  003F86  EFC7  F01F         	goto	u4970
 14699  003F8A                     u4971:
 14700  003F8A  EFC9  F01F         	goto	l1308
 14701  003F8E                     u4970:
 14702  003F8E  EFBC  F01F         	goto	l4551
 14703  003F92                     l1308:
 14704  003F92  5027               	movf	___fldiv@aexp^0,w,c
 14705  003F94  B4D8               	btfsc	status,2,c
 14706  003F96  EFCF  F01F         	goto	u4981
 14707  003F9A  EFD1  F01F         	goto	u4980
 14708  003F9E                     u4981:
 14709  003F9E  EFF5  F01F         	goto	l4563
 14710  003FA2                     u4980:
 14711  003FA2  0E01               	movlw	1
 14712  003FA4  260F               	addwf	___fldiv@b^0,f,c
 14713  003FA6  0E00               	movlw	0
 14714  003FA8  2210               	addwfc	(___fldiv@b+1)^0,f,c
 14715  003FAA  2211               	addwfc	(___fldiv@b+2)^0,f,c
 14716  003FAC  2212               	addwfc	(___fldiv@b+3)^0,f,c
 14717  003FAE  A012               	btfss	(___fldiv@b+3)^0,0,c
 14718  003FB0  EFDC  F01F         	goto	u4991
 14719  003FB4  EFDE  F01F         	goto	u4990
 14720  003FB8                     u4991:
 14721  003FB8  EFF5  F01F         	goto	l4563
 14722  003FBC                     u4990:
 14723  003FBC  C00F  F017         	movff	___fldiv@b,??___fldiv
 14724  003FC0  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14725  003FC4  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14726  003FC8  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14727  003FCC  341A               	rlcf	(??___fldiv+3)^0,w,c
 14728  003FCE  321A               	rrcf	(??___fldiv+3)^0,f,c
 14729  003FD0  3219               	rrcf	(??___fldiv+2)^0,f,c
 14730  003FD2  3218               	rrcf	(??___fldiv+1)^0,f,c
 14731  003FD4  3217               	rrcf	??___fldiv^0,f,c
 14732  003FD6  C017  F00F         	movff	??___fldiv,___fldiv@b
 14733  003FDA  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14734  003FDE  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14735  003FE2  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14736  003FE6  4A20               	infsnz	___fldiv@new_exp^0,f,c
 14737  003FE8  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 14738  003FEA                     l4563:
 14739  003FEA  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14740  003FEC  EF00  F020         	goto	u5001
 14741  003FF0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 14742  003FF2  E108               	bnz	u5000
 14743  003FF4  2820               	incf	___fldiv@new_exp^0,w,c
 14744  003FF6  A0D8               	btfss	status,0,c
 14745  003FF8  EF00  F020         	goto	u5001
 14746  003FFC  EF02  F020         	goto	u5000
 14747  004000                     u5001:
 14748  004000  EF0D  F020         	goto	l4567
 14749  004004                     u5000:
 14750  004004  0E00               	movlw	0
 14751  004006  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 14752  004008  6820               	setf	___fldiv@new_exp^0,c
 14753  00400A  0E00               	movlw	0
 14754  00400C  6E0F               	movwf	___fldiv@b^0,c
 14755  00400E  0E00               	movlw	0
 14756  004010  6E10               	movwf	(___fldiv@b+1)^0,c
 14757  004012  0E00               	movlw	0
 14758  004014  6E11               	movwf	(___fldiv@b+2)^0,c
 14759  004016  0E00               	movlw	0
 14760  004018  6E12               	movwf	(___fldiv@b+3)^0,c
 14761  00401A                     l4567:
 14762  00401A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14763  00401C  EF1A  F020         	goto	u5010
 14764  004020  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 14765  004022  E106               	bnz	u5011
 14766  004024  0420               	decf	___fldiv@new_exp^0,w,c
 14767  004026  B0D8               	btfsc	status,0,c
 14768  004028  EF18  F020         	goto	u5011
 14769  00402C  EF1A  F020         	goto	u5010
 14770  004030                     u5011:
 14771  004030  EF28  F020         	goto	l4571
 14772  004034                     u5010:
 14773  004034  0E00               	movlw	0
 14774  004036  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 14775  004038  0E00               	movlw	0
 14776  00403A  6E20               	movwf	___fldiv@new_exp^0,c
 14777  00403C  0E00               	movlw	0
 14778  00403E  6E0F               	movwf	___fldiv@b^0,c
 14779  004040  0E00               	movlw	0
 14780  004042  6E10               	movwf	(___fldiv@b+1)^0,c
 14781  004044  0E00               	movlw	0
 14782  004046  6E11               	movwf	(___fldiv@b+2)^0,c
 14783  004048  0E00               	movlw	0
 14784  00404A  6E12               	movwf	(___fldiv@b+3)^0,c
 14785  00404C  0E00               	movlw	0
 14786  00404E  6E1F               	movwf	___fldiv@sign^0,c
 14787  004050                     l4571:
 14788  004050  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14789  004054  A026               	btfss	___fldiv@bexp^0,0,c
 14790  004056  EF2F  F020         	goto	u5021
 14791  00405A  EF31  F020         	goto	u5020
 14792  00405E                     u5021:
 14793  00405E  EF34  F020         	goto	l4577
 14794  004062                     u5020:
 14795  004062  8E11               	bsf	(___fldiv@b+2)^0,7,c
 14796  004064  EF35  F020         	goto	l4579
 14797  004068                     l4577:
 14798  004068  9E11               	bcf	(___fldiv@b+2)^0,7,c
 14799  00406A                     l4579:
 14800  00406A  90D8               	bcf	status,0,c
 14801  00406C  3026               	rrcf	___fldiv@bexp^0,w,c
 14802  00406E  6E12               	movwf	(___fldiv@b+3)^0,c
 14803  004070  EFEB  F01E         	goto	l4493
 14804  004074                     l1295:
 14805  004074  0012               	return		;funcret
 14806  004076                     __end_of___fldiv:
 14807                           	callstack 0
 14808                           
 14809 ;; *************** function _checkbatterylevel *****************
 14810 ;; Defined at:
 14811 ;;		line 73 in file "DC_motors.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;		None
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;  batterylevel    1    1[COMRAM] unsigned char 
 14816 ;; Return value:  Size  Location     Type
 14817 ;;                  1    wreg      void 
 14818 ;; Registers used:
 14819 ;;		wreg, status,2, status,0, cstack
 14820 ;; Tracked objects:
 14821 ;;		On entry : 0/0
 14822 ;;		On exit  : 0/0
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14829 ;;Total ram usage:        1 bytes
 14830 ;; Hardware stack levels used: 1
 14831 ;; Hardware stack levels required when called: 1
 14832 ;; This function calls:
 14833 ;;		_ADC_getval
 14834 ;; This function is called by:
 14835 ;;		_main
 14836 ;; This function uses a non-reentrant model
 14837 ;;
 14838                           
 14839                           	psect	text66
 14840  006530                     __ptext66:
 14841                           	callstack 0
 14842  006530                     _checkbatterylevel:
 14843                           	callstack 29
 14844  006530                     
 14845                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
 14846  006530  ECD1  F032         	call	_ADC_getval	;wreg free
 14847  006534  6E02               	movwf	checkbatterylevel@batterylevel^0,c
 14848  006536                     
 14849                           ;DC_motors.c: 77:     if (batterylevel<150) {
 14850  006536  0E96               	movlw	150
 14851  006538  6002               	cpfslt	checkbatterylevel@batterylevel^0,c
 14852  00653A  EFA1  F032         	goto	u7341
 14853  00653E  EFA3  F032         	goto	u7340
 14854  006542                     u7341:
 14855  006542  EFA6  F032         	goto	l564
 14856  006546                     u7340:
 14857  006546                     
 14858                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
 14859  006546  8E7C               	bsf	124,7,c	;volatile
 14860                           
 14861                           ;DC_motors.c: 79:     } else {
 14862  006548  EFA7  F032         	goto	l566
 14863  00654C                     l564:
 14864                           
 14865                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
 14866  00654C  9E7C               	bcf	124,7,c	;volatile
 14867  00654E                     l566:
 14868  00654E  0012               	return		;funcret
 14869  006550                     __end_of_checkbatterylevel:
 14870                           	callstack 0
 14871                           
 14872 ;; *************** function _ADC_getval *****************
 14873 ;; Defined at:
 14874 ;;		line 26 in file "ADC.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;		None
 14877 ;; Auto vars:     Size  Location     Type
 14878 ;;  tmpval          1    0[COMRAM] unsigned char 
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  1    wreg      unsigned char 
 14881 ;; Registers used:
 14882 ;;		wreg, status,2
 14883 ;; Tracked objects:
 14884 ;;		On entry : 0/0
 14885 ;;		On exit  : 0/0
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14892 ;;Total ram usage:        1 bytes
 14893 ;; Hardware stack levels used: 1
 14894 ;; This function calls:
 14895 ;;		Nothing
 14896 ;; This function is called by:
 14897 ;;		_checkbatterylevel
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           	psect	text67
 14902  0065A2                     __ptext67:
 14903                           	callstack 0
 14904  0065A2                     _ADC_getval:
 14905                           	callstack 29
 14906  0065A2                     
 14907                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
 14908  0065A2  8060               	bsf	96,0,c	;volatile
 14909  0065A4                     l312:
 14910  0065A4  B060               	btfsc	96,0,c	;volatile
 14911  0065A6  EFD7  F032         	goto	u7231
 14912  0065AA  EFD9  F032         	goto	u7230
 14913  0065AE                     u7231:
 14914  0065AE  EFD2  F032         	goto	l312
 14915  0065B2                     u7230:
 14916  0065B2                     
 14917                           ;ADC.c: 31:     tmpval = ADRESH;
 14918  0065B2  CF64 F001          	movff	3940,ADC_getval@tmpval	;volatile
 14919  0065B6                     
 14920                           ;ADC.c: 34:     return tmpval;
 14921  0065B6  5001               	movf	ADC_getval@tmpval^0,w,c
 14922  0065B8  0012               	return		;funcret
 14923  0065BA                     __end_of_ADC_getval:
 14924                           	callstack 0
 14925                           
 14926 ;; *************** function _USART4_init *****************
 14927 ;; Defined at:
 14928 ;;		line 7 in file "serial_comm.c"
 14929 ;; Parameters:    Size  Location     Type
 14930 ;;		None
 14931 ;; Auto vars:     Size  Location     Type
 14932 ;;		None
 14933 ;; Return value:  Size  Location     Type
 14934 ;;                  1    wreg      void 
 14935 ;; Registers used:
 14936 ;;		wreg, status,2
 14937 ;; Tracked objects:
 14938 ;;		On entry : 0/0
 14939 ;;		On exit  : 0/0
 14940 ;;		Unchanged: 0/0
 14941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14946 ;;Total ram usage:        0 bytes
 14947 ;; Hardware stack levels used: 1
 14948 ;; This function calls:
 14949 ;;		Nothing
 14950 ;; This function is called by:
 14951 ;;		_main
 14952 ;; This function uses a non-reentrant model
 14953 ;;
 14954                           
 14955                           	psect	text68
 14956  006550                     __ptext68:
 14957                           	callstack 0
 14958  006550                     _USART4_init:
 14959                           	callstack 30
 14960  006550                     
 14961                           ;serial_comm.c: 10:     RC0PPS = 0x12;
 14962  006550  0E12               	movlw	18
 14963  006552  010E               	movlb	14	; () banked
 14964  006554  6F62               	movwf	98,b	;volatile
 14965                           
 14966                           ;serial_comm.c: 11:     RX4PPS = 0x11;
 14967  006556  0E11               	movlw	17
 14968  006558  6F15               	movwf	21,b	;volatile
 14969  00655A                     
 14970                           ; BSR set to: 14
 14971                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
 14972  00655A  8283               	bsf	131,1,c	;volatile
 14973  00655C                     
 14974                           ; BSR set to: 14
 14975                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
 14976  00655C  97E9               	bcf	233,3,b	;volatile
 14977  00655E                     
 14978                           ; BSR set to: 14
 14979                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
 14980  00655E  95E8               	bcf	232,2,b	;volatile
 14981                           
 14982                           ;serial_comm.c: 16:     SP4BRGL = 51;
 14983  006560  0E33               	movlw	51
 14984  006562  6FE5               	movwf	229,b	;volatile
 14985                           
 14986                           ;serial_comm.c: 17:     SP4BRGH = 0;
 14987  006564  0E00               	movlw	0
 14988  006566  6FE6               	movwf	230,b	;volatile
 14989  006568                     
 14990                           ; BSR set to: 14
 14991                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
 14992  006568  89E7               	bsf	231,4,b	;volatile
 14993  00656A                     
 14994                           ; BSR set to: 14
 14995                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
 14996  00656A  8BE8               	bsf	232,5,b	;volatile
 14997  00656C                     
 14998                           ; BSR set to: 14
 14999                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
 15000  00656C  8FE7               	bsf	231,7,b	;volatile
 15001  00656E                     
 15002                           ; BSR set to: 14
 15003  00656E  0012               	return		;funcret
 15004  006570                     __end_of_USART4_init:
 15005                           	callstack 0
 15006                           
 15007 ;; *************** function _DCmotors_init *****************
 15008 ;; Defined at:
 15009 ;;		line 10 in file "DC_motors.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;  PWMperiod       1    wreg     unsigned char 
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;  PWMperiod       1    0[COMRAM] unsigned char 
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      void 
 15016 ;; Registers used:
 15017 ;;		wreg, status,2, cstack
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15027 ;;Total ram usage:        1 bytes
 15028 ;; Hardware stack levels used: 1
 15029 ;; Hardware stack levels required when called: 1
 15030 ;; This function calls:
 15031 ;;		_buggyLEDs_init
 15032 ;;		_clicker2LEDs_init
 15033 ;;		_clicker2buttons_init
 15034 ;; This function is called by:
 15035 ;;		_main
 15036 ;; This function uses a non-reentrant model
 15037 ;;
 15038                           
 15039                           	psect	text69
 15040  0061CC                     __ptext69:
 15041                           	callstack 0
 15042  0061CC                     _DCmotors_init:
 15043                           	callstack 29
 15044                           
 15045                           ; BSR set to: 14
 15046                           ;incstack = 0
 15047                           ;DCmotors_init@PWMperiod stored from wreg
 15048  0061CC  6E01               	movwf	DCmotors_init@PWMperiod^0,c
 15049  0061CE                     
 15050                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
 15051  0061CE  50BD               	movf	189,w,c	;volatile
 15052  0061D0  0B8F               	andlw	-113
 15053  0061D2  0940               	iorlw	64
 15054  0061D4  6EBD               	movwf	189,c	;volatile
 15055                           
 15056                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
 15057  0061D6  0EE0               	movlw	-32
 15058  0061D8  16BE               	andwf	190,f,c	;volatile
 15059                           
 15060                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
 15061  0061DA  50BF               	movf	191,w,c	;volatile
 15062  0061DC  0BF0               	andlw	-16
 15063  0061DE  0901               	iorlw	1
 15064  0061E0  6EBF               	movwf	191,c	;volatile
 15065  0061E2                     
 15066                           ;DC_motors.c: 18:     T2PR=PWMperiod;
 15067  0061E2  C001  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 15068  0061E6                     
 15069                           ;DC_motors.c: 19:     T2CONbits.ON=1;
 15070  0061E6  8EBD               	bsf	189,7,c	;volatile
 15071  0061E8                     
 15072                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
 15073  0061E8  9485               	bcf	133,2,c	;volatile
 15074  0061EA                     
 15075                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
 15076  0061EA  9885               	bcf	133,4,c	;volatile
 15077  0061EC                     
 15078                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
 15079  0061EC  9E83               	bcf	131,7,c	;volatile
 15080  0061EE                     
 15081                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
 15082  0061EE  9C87               	bcf	135,6,c	;volatile
 15083  0061F0                     
 15084                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
 15085  0061F0  947D               	bcf	125,2,c	;volatile
 15086  0061F2                     
 15087                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
 15088  0061F2  987D               	bcf	125,4,c	;volatile
 15089  0061F4                     
 15090                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
 15091  0061F4  9E7B               	bcf	123,7,c	;volatile
 15092  0061F6                     
 15093                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
 15094  0061F6  9C7F               	bcf	127,6,c	;volatile
 15095                           
 15096                           ;DC_motors.c: 32:     PWM6DCH=0;
 15097  0061F8  0E00               	movlw	0
 15098  0061FA  6EA3               	movwf	163,c	;volatile
 15099                           
 15100                           ;DC_motors.c: 33:     PWM7DCH=0;
 15101  0061FC  0E00               	movlw	0
 15102  0061FE  6EA0               	movwf	160,c	;volatile
 15103  006200                     
 15104                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
 15105  006200  8EA4               	bsf	164,7,c	;volatile
 15106  006202                     
 15107                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
 15108  006202  8EA1               	bsf	161,7,c	;volatile
 15109                           
 15110                           ;DC_motors.c: 38:     RE2PPS=0x0A;
 15111  006204  0E0A               	movlw	10
 15112  006206  010E               	movlb	14	; () banked
 15113  006208  6F74               	movwf	116,b	;volatile
 15114                           
 15115                           ;DC_motors.c: 39:     RC7PPS=0x0B;
 15116  00620A  0E0B               	movlw	11
 15117  00620C  6F69               	movwf	105,b	;volatile
 15118  00620E                     
 15119                           ; BSR set to: 14
 15120                           ;DC_motors.c: 42:     clicker2buttons_init();
 15121  00620E  ECF5  F032         	call	_clicker2buttons_init	;wreg free
 15122  006212                     
 15123                           ;DC_motors.c: 43:     clicker2LEDs_init();
 15124  006212  EC0A  F033         	call	_clicker2LEDs_init	;wreg free
 15125  006216                     
 15126                           ;DC_motors.c: 44:     buggyLEDs_init();
 15127  006216  ECDD  F032         	call	_buggyLEDs_init	;wreg free
 15128  00621A  0012               	return		;funcret
 15129  00621C                     __end_of_DCmotors_init:
 15130                           	callstack 0
 15131                           
 15132 ;; *************** function _clicker2buttons_init *****************
 15133 ;; Defined at:
 15134 ;;		line 7 in file "buttons_n_LEDs.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;		None
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;		None
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  1    wreg      void 
 15141 ;; Registers used:
 15142 ;;		None
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15152 ;;Total ram usage:        0 bytes
 15153 ;; Hardware stack levels used: 1
 15154 ;; This function calls:
 15155 ;;		Nothing
 15156 ;; This function is called by:
 15157 ;;		_DCmotors_init
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           	psect	text70
 15162  0065EA                     __ptext70:
 15163                           	callstack 0
 15164  0065EA                     _clicker2buttons_init:
 15165                           	callstack 29
 15166  0065EA                     
 15167                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
 15168  0065EA  8486               	bsf	134,2,c	;volatile
 15169                           
 15170                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
 15171  0065EC  8686               	bsf	134,3,c	;volatile
 15172                           
 15173                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
 15174  0065EE  010E               	movlb	14	; () banked
 15175  0065F0  95B4               	bcf	180,2,b	;volatile
 15176                           
 15177                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
 15178  0065F2  97B4               	bcf	180,3,b	;volatile
 15179  0065F4                     
 15180                           ; BSR set to: 14
 15181  0065F4  0012               	return		;funcret
 15182  0065F6                     __end_of_clicker2buttons_init:
 15183                           	callstack 0
 15184                           
 15185 ;; *************** function _clicker2LEDs_init *****************
 15186 ;; Defined at:
 15187 ;;		line 19 in file "buttons_n_LEDs.c"
 15188 ;; Parameters:    Size  Location     Type
 15189 ;;		None
 15190 ;; Auto vars:     Size  Location     Type
 15191 ;;		None
 15192 ;; Return value:  Size  Location     Type
 15193 ;;                  1    wreg      void 
 15194 ;; Registers used:
 15195 ;;		None
 15196 ;; Tracked objects:
 15197 ;;		On entry : 0/0
 15198 ;;		On exit  : 0/0
 15199 ;;		Unchanged: 0/0
 15200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15205 ;;Total ram usage:        0 bytes
 15206 ;; Hardware stack levels used: 1
 15207 ;; This function calls:
 15208 ;;		Nothing
 15209 ;; This function is called by:
 15210 ;;		_DCmotors_init
 15211 ;; This function uses a non-reentrant model
 15212 ;;
 15213                           
 15214                           	psect	text71
 15215  006614                     __ptext71:
 15216                           	callstack 0
 15217  006614                     _clicker2LEDs_init:
 15218                           	callstack 29
 15219  006614                     
 15220                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
 15221  006614  9E84               	bcf	132,7,c	;volatile
 15222                           
 15223                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
 15224  006616  9688               	bcf	136,3,c	;volatile
 15225                           
 15226                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
 15227  006618  9E7C               	bcf	124,7,c	;volatile
 15228                           
 15229                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
 15230  00661A  9680               	bcf	128,3,c	;volatile
 15231  00661C  0012               	return		;funcret
 15232  00661E                     __end_of_clicker2LEDs_init:
 15233                           	callstack 0
 15234                           
 15235 ;; *************** function _buggyLEDs_init *****************
 15236 ;; Defined at:
 15237 ;;		line 31 in file "buttons_n_LEDs.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;		None
 15240 ;; Auto vars:     Size  Location     Type
 15241 ;;		None
 15242 ;; Return value:  Size  Location     Type
 15243 ;;                  1    wreg      void 
 15244 ;; Registers used:
 15245 ;;		None
 15246 ;; Tracked objects:
 15247 ;;		On entry : 0/0
 15248 ;;		On exit  : 0/0
 15249 ;;		Unchanged: 0/0
 15250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15255 ;;Total ram usage:        0 bytes
 15256 ;; Hardware stack levels used: 1
 15257 ;; This function calls:
 15258 ;;		Nothing
 15259 ;; This function is called by:
 15260 ;;		_DCmotors_init
 15261 ;; This function uses a non-reentrant model
 15262 ;;
 15263                           
 15264                           	psect	text72
 15265  0065BA                     __ptext72:
 15266                           	callstack 0
 15267  0065BA                     _buggyLEDs_init:
 15268                           	callstack 29
 15269  0065BA                     
 15270                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
 15271  0065BA  9288               	bcf	136,1,c	;volatile
 15272                           
 15273                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
 15274  0065BC  9684               	bcf	132,3,c	;volatile
 15275                           
 15276                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
 15277  0065BE  9884               	bcf	132,4,c	;volatile
 15278                           
 15279                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
 15280  0065C0  9086               	bcf	134,0,c	;volatile
 15281                           
 15282                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
 15283  0065C2  9088               	bcf	136,0,c	;volatile
 15284                           
 15285                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
 15286  0065C4  9280               	bcf	128,1,c	;volatile
 15287                           
 15288                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
 15289  0065C6  967C               	bcf	124,3,c	;volatile
 15290                           
 15291                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
 15292  0065C8  987C               	bcf	124,4,c	;volatile
 15293                           
 15294                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
 15295  0065CA  907E               	bcf	126,0,c	;volatile
 15296                           
 15297                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
 15298  0065CC  9080               	bcf	128,0,c	;volatile
 15299  0065CE  0012               	return		;funcret
 15300  0065D0                     __end_of_buggyLEDs_init:
 15301                           	callstack 0
 15302                           
 15303 ;; *************** function _ADC_init *****************
 15304 ;; Defined at:
 15305 ;;		line 8 in file "ADC.c"
 15306 ;; Parameters:    Size  Location     Type
 15307 ;;		None
 15308 ;; Auto vars:     Size  Location     Type
 15309 ;;		None
 15310 ;; Return value:  Size  Location     Type
 15311 ;;                  1    wreg      void 
 15312 ;; Registers used:
 15313 ;;		wreg, status,2
 15314 ;; Tracked objects:
 15315 ;;		On entry : 0/0
 15316 ;;		On exit  : 0/0
 15317 ;;		Unchanged: 0/0
 15318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15323 ;;Total ram usage:        0 bytes
 15324 ;; Hardware stack levels used: 1
 15325 ;; This function calls:
 15326 ;;		Nothing
 15327 ;; This function is called by:
 15328 ;;		_main
 15329 ;; This function uses a non-reentrant model
 15330 ;;
 15331                           
 15332                           	psect	text73
 15333  006570                     __ptext73:
 15334                           	callstack 0
 15335  006570                     _ADC_init:
 15336                           	callstack 30
 15337  006570                     
 15338                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 15339  006570  8C86               	bsf	134,6,c	;volatile
 15340                           
 15341                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 15342  006572  010E               	movlb	14	; () banked
 15343  006574  8DB4               	bsf	180,6,b	;volatile
 15344                           
 15345                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 15346  006576  010F               	movlb	15	; () banked
 15347  006578  9958               	bcf	88,4,b	;volatile
 15348  00657A                     
 15349                           ; BSR set to: 15
 15350                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 15351  00657A  0EFC               	movlw	-4
 15352  00657C  1758               	andwf	88,f,b	;volatile
 15353                           
 15354                           ;ADC.c: 16:     ADPCH=0b101110;
 15355  00657E  0E2E               	movlw	46
 15356  006580  6F5F               	movwf	95,b	;volatile
 15357  006582                     
 15358                           ; BSR set to: 15
 15359                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 15360  006582  9460               	bcf	96,2,c	;volatile
 15361  006584                     
 15362                           ; BSR set to: 15
 15363                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 15364  006584  8860               	bsf	96,4,c	;volatile
 15365  006586                     
 15366                           ; BSR set to: 15
 15367                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 15368  006586  8E60               	bsf	96,7,c	;volatile
 15369  006588                     
 15370                           ; BSR set to: 15
 15371  006588  0012               	return		;funcret
 15372  00658A                     __end_of_ADC_init:
 15373                           	callstack 0
 15374                           
 15375                           	psect	rparam
 15376  0000                     
 15377                           	psect	idloc
 15378                           
 15379                           ;Config register IDLOC0 @ 0x200000
 15380                           ;	unspecified, using default values
 15381  200000                     	org	2097152
 15382  200000  0FFF               	dw	4095
 15383                           
 15384                           ;Config register IDLOC1 @ 0x200002
 15385                           ;	unspecified, using default values
 15386  200002                     	org	2097154
 15387  200002  0FFF               	dw	4095
 15388                           
 15389                           ;Config register IDLOC2 @ 0x200004
 15390                           ;	unspecified, using default values
 15391  200004                     	org	2097156
 15392  200004  0FFF               	dw	4095
 15393                           
 15394                           ;Config register IDLOC3 @ 0x200006
 15395                           ;	unspecified, using default values
 15396  200006                     	org	2097158
 15397  200006  0FFF               	dw	4095
 15398                           
 15399                           ;Config register IDLOC4 @ 0x200008
 15400                           ;	unspecified, using default values
 15401  200008                     	org	2097160
 15402  200008  0FFF               	dw	4095
 15403                           
 15404                           ;Config register IDLOC5 @ 0x20000A
 15405                           ;	unspecified, using default values
 15406  20000A                     	org	2097162
 15407  20000A  0FFF               	dw	4095
 15408                           
 15409                           ;Config register IDLOC6 @ 0x20000C
 15410                           ;	unspecified, using default values
 15411  20000C                     	org	2097164
 15412  20000C  0FFF               	dw	4095
 15413                           
 15414                           ;Config register IDLOC7 @ 0x20000E
 15415                           ;	unspecified, using default values
 15416  20000E                     	org	2097166
 15417  20000E  0FFF               	dw	4095
 15418                           
 15419                           	psect	config
 15420                           
 15421                           ;Config register CONFIG1L @ 0x300000
 15422                           ;	External Oscillator mode Selection bits
 15423                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15424                           ;	Power-up default value for COSC bits
 15425                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15426  300000                     	org	3145728
 15427  300000  AA                 	db	170
 15428                           
 15429                           ;Config register CONFIG1H @ 0x300001
 15430                           ;	unspecified, using default values
 15431                           ;	Clock Out Enable bit
 15432                           ;	CLKOUTEN = 0x1, unprogrammed default
 15433                           ;	Clock Switch Enable bit
 15434                           ;	CSWEN = 0x1, unprogrammed default
 15435                           ;	Fail-Safe Clock Monitor Enable bit
 15436                           ;	FCMEN = 0x1, unprogrammed default
 15437  300001                     	org	3145729
 15438  300001  FF                 	db	255
 15439                           
 15440                           ;Config register CONFIG2L @ 0x300002
 15441                           ;	unspecified, using default values
 15442                           ;	Master Clear Enable bit
 15443                           ;	MCLRE = 0x1, unprogrammed default
 15444                           ;	Power-up Timer Enable bit
 15445                           ;	PWRTE = 0x1, unprogrammed default
 15446                           ;	Low-power BOR enable bit
 15447                           ;	LPBOREN = 0x1, unprogrammed default
 15448                           ;	Brown-out Reset Enable bits
 15449                           ;	BOREN = 0x3, unprogrammed default
 15450  300002                     	org	3145730
 15451  300002  FF                 	db	255
 15452                           
 15453                           ;Config register CONFIG2H @ 0x300003
 15454                           ;	unspecified, using default values
 15455                           ;	Brown Out Reset Voltage selection bits
 15456                           ;	BORV = 0x3, unprogrammed default
 15457                           ;	ZCD Disable bit
 15458                           ;	ZCD = 0x1, unprogrammed default
 15459                           ;	PPSLOCK bit One-Way Set Enable bit
 15460                           ;	PPS1WAY = 0x1, unprogrammed default
 15461                           ;	Stack Full/Underflow Reset Enable bit
 15462                           ;	STVREN = 0x1, unprogrammed default
 15463                           ;	Debugger Enable bit
 15464                           ;	DEBUG = 0x1, unprogrammed default
 15465                           ;	Extended Instruction Set Enable bit
 15466                           ;	XINST = 0x1, unprogrammed default
 15467  300003                     	org	3145731
 15468  300003  FF                 	db	255
 15469                           
 15470                           ;Config register CONFIG3L @ 0x300004
 15471                           ;	WDT Period Select bits
 15472                           ;	WDTCPS = 0x1F, unprogrammed default
 15473                           ;	WDT operating mode
 15474                           ;	WDTE = OFF, WDT Disabled
 15475  300004                     	org	3145732
 15476  300004  9F                 	db	159
 15477                           
 15478                           ;Config register CONFIG3H @ 0x300005
 15479                           ;	unspecified, using default values
 15480                           ;	WDT Window Select bits
 15481                           ;	WDTCWS = 0x7, unprogrammed default
 15482                           ;	WDT input clock selector
 15483                           ;	WDTCCS = 0x7, unprogrammed default
 15484  300005                     	org	3145733
 15485  300005  FF                 	db	255
 15486                           
 15487                           ;Config register CONFIG4L @ 0x300006
 15488                           ;	unspecified, using default values
 15489                           ;	Write Protection Block 0
 15490                           ;	WRT0 = 0x1, unprogrammed default
 15491                           ;	Write Protection Block 1
 15492                           ;	WRT1 = 0x1, unprogrammed default
 15493                           ;	Write Protection Block 2
 15494                           ;	WRT2 = 0x1, unprogrammed default
 15495                           ;	Write Protection Block 3
 15496                           ;	WRT3 = 0x1, unprogrammed default
 15497                           ;	Write Protection Block 3
 15498                           ;	WRT4 = 0x1, unprogrammed default
 15499                           ;	Write Protection Block 3
 15500                           ;	WRT5 = 0x1, unprogrammed default
 15501                           ;	Write Protection Block 3
 15502                           ;	WRT6 = 0x1, unprogrammed default
 15503                           ;	Write Protection Block 3
 15504                           ;	WRT7 = 0x1, unprogrammed default
 15505  300006                     	org	3145734
 15506  300006  FF                 	db	255
 15507                           
 15508                           ;Config register CONFIG4H @ 0x300007
 15509                           ;	unspecified, using default values
 15510                           ;	Configuration Register Write Protection bit
 15511                           ;	WRTC = 0x1, unprogrammed default
 15512                           ;	Boot Block Write Protection bit
 15513                           ;	WRTB = 0x1, unprogrammed default
 15514                           ;	Data EEPROM Write Protection bit
 15515                           ;	WRTD = 0x1, unprogrammed default
 15516                           ;	Scanner Enable bit
 15517                           ;	SCANE = 0x1, unprogrammed default
 15518                           ;	Low Voltage Programming Enable bit
 15519                           ;	LVP = 0x1, unprogrammed default
 15520  300007                     	org	3145735
 15521  300007  FF                 	db	255
 15522                           
 15523                           ;Config register CONFIG5L @ 0x300008
 15524                           ;	unspecified, using default values
 15525                           ;	UserNVM Program Memory Code Protection bit
 15526                           ;	CP = 0x1, unprogrammed default
 15527                           ;	DataNVM Memory Code Protection bit
 15528                           ;	CPD = 0x1, unprogrammed default
 15529  300008                     	org	3145736
 15530  300008  FF                 	db	255
 15531                           
 15532                           ;Config register CONFIG5H @ 0x300009
 15533                           ;	unspecified, using default values
 15534  300009                     	org	3145737
 15535  300009  FF                 	db	255
 15536                           
 15537                           ;Config register CONFIG6L @ 0x30000A
 15538                           ;	unspecified, using default values
 15539                           ;	Table Read Protection Block 0
 15540                           ;	EBTR0 = 0x1, unprogrammed default
 15541                           ;	Table Read Protection Block 1
 15542                           ;	EBTR1 = 0x1, unprogrammed default
 15543                           ;	Table Read Protection Block 2
 15544                           ;	EBTR2 = 0x1, unprogrammed default
 15545                           ;	Table Read Protection Block 3
 15546                           ;	EBTR3 = 0x1, unprogrammed default
 15547                           ;	Table Read Protection Block 4
 15548                           ;	EBTR4 = 0x1, unprogrammed default
 15549                           ;	Table Read Protection Block 5
 15550                           ;	EBTR5 = 0x1, unprogrammed default
 15551                           ;	Table Read Protection Block 6
 15552                           ;	EBTR6 = 0x1, unprogrammed default
 15553                           ;	Table Read Protection Block 7
 15554                           ;	EBTR7 = 0x1, unprogrammed default
 15555  30000A                     	org	3145738
 15556  30000A  FF                 	db	255
 15557                           
 15558                           ;Config register CONFIG6H @ 0x30000B
 15559                           ;	unspecified, using default values
 15560                           ;	Boot Block Table Read Protection bit
 15561                           ;	EBTRB = 0x1, unprogrammed default
 15562  30000B                     	org	3145739
 15563  30000B  FF                 	db	255
 15564                           tosu	equ	0xFFF
 15565                           tosh	equ	0xFFE
 15566                           tosl	equ	0xFFD
 15567                           stkptr	equ	0xFFC
 15568                           pclatu	equ	0xFFB
 15569                           pclath	equ	0xFFA
 15570                           pcl	equ	0xFF9
 15571                           tblptru	equ	0xFF8
 15572                           tblptrh	equ	0xFF7
 15573                           tblptrl	equ	0xFF6
 15574                           tablat	equ	0xFF5
 15575                           prodh	equ	0xFF4
 15576                           prodl	equ	0xFF3
 15577                           indf0	equ	0xFEF
 15578                           postinc0	equ	0xFEE
 15579                           postdec0	equ	0xFED
 15580                           preinc0	equ	0xFEC
 15581                           plusw0	equ	0xFEB
 15582                           fsr0h	equ	0xFEA
 15583                           fsr0l	equ	0xFE9
 15584                           wreg	equ	0xFE8
 15585                           indf1	equ	0xFE7
 15586                           postinc1	equ	0xFE6
 15587                           postdec1	equ	0xFE5
 15588                           preinc1	equ	0xFE4
 15589                           plusw1	equ	0xFE3
 15590                           fsr1h	equ	0xFE2
 15591                           fsr1l	equ	0xFE1
 15592                           bsr	equ	0xFE0
 15593                           indf2	equ	0xFDF
 15594                           postinc2	equ	0xFDE
 15595                           postdec2	equ	0xFDD
 15596                           preinc2	equ	0xFDC
 15597                           plusw2	equ	0xFDB
 15598                           fsr2h	equ	0xFDA
 15599                           fsr2l	equ	0xFD9
 15600                           status	equ	0xFD8

Data Sizes:
    Strings     181
    Constant    0
    Data        7
    BSS         189
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    160     160
    BANK1           256     78     218
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[11]), STR_12(CODE[7]), STR_10(CODE[5]), 
		 -> STR_8(CODE[7]), STR_6(CODE[5]), STR_4(CODE[6]), STR_2(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[11]), STR_12(CODE[7]), STR_10(CODE[5]), 
		 -> STR_8(CODE[7]), STR_6(CODE[5]), STR_4(CODE[6]), STR_2(CODE[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[11]), 
		 -> STR_12(CODE[7]), STR_10(CODE[5]), STR_8(CODE[7]), STR_6(CODE[5]), 
		 -> STR_4(CODE[6]), STR_2(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[11]), 
		 -> STR_12(CODE[7]), STR_10(CODE[5]), STR_8(CODE[7]), STR_6(CODE[5]), 
		 -> STR_4(CODE[6]), STR_2(CODE[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), 
		 -> STR_14(CODE[11]), STR_12(CODE[7]), STR_10(CODE[5]), STR_8(CODE[7]), 
		 -> STR_6(CODE[5]), STR_4(CODE[6]), STR_2(CODE[4]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2886_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(BANK0[20]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(BANK0[20]), 

    colourclick_testing@current	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(BANK0[8]), 

    colourclick_testing@initial	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(BANK0[8]), colourclick_calibration@initial(BANK0[8]), colourcards_testingRGBC@tmpval(BANK0[8]), main@current(BANK1[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    colourcards_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK1[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourclick_calibration->_colourclick_testing
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _colourcards_readRGBC->___fldiv
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->_DCmotors_setPWM
    _left->_DCmotors_setPWM
    _stop->_DCmotors_setPWM
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___flge->___flmul
    ___fldiv->___xxtofl
    _checkbatterylevel->_ADC_getval

Critical Paths under _main in BANK0

    _main->_colourcards_testingRGBC
    _colourclick_testing->_sprintf
    _colourcards_testingRGBC->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _colourclick_calibration->_colourclick_testing

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0  159016
                                             50 BANK1     28    28      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
            _colourcards_testingRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
                            _forward
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     360
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colourclick_writetoaddr                              2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             19    19      0   50127
                                            112 BANK0     19    19      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
                _colourclick_testing
 ---------------------------------------------------------------------------------
 (2) _colourclick_testing                                 56    52      4   48802
                                             89 COMRAM     6     2      4
                                              0 BANK1     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _colourcards_testingRGBC                             50    50      0   63676
                                             89 COMRAM     2     2      0
                                            112 BANK0     48    48      0
                            ___fldiv
                             ___flge
                           ___xxtofl
                  _colourclickLEDs_C
               _colourclick_readRGBC
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    10     26   48156
                                             78 BANK0     34     8     26
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   46427
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   46048
                                             71 COMRAM    10     4      6
                                             56 BANK0     22    22      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   31546
                                             59 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6030
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4381
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1486
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                22    16      6   41189
                                             39 COMRAM    22    16      6
                            ___fldiv
                             ___flge
                           ___xxtofl
               _colourclick_readRGBC
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6    8534
                                             33 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6    7850
                                             33 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                                8     2      6    3061
                                             25 COMRAM     8     2      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                 8     2      6    3061
                                             25 COMRAM     8     2      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4341
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              6     2      4    3017
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              6     2      4    3017
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    2385
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     645
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     648
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC                                 2     0      2     920
                                             11 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (3) _colourclick_readR                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readG                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readC                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readB                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1072
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    8086
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2757
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                              1 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              0 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___fldiv
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
     ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _reverse
       _DCmotors_setPWM
     _stop
       _DCmotors_setPWM
     _turnleft
       _left
         _DCmotors_setPWM
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _colourcards_testingRGBC
     ___fldiv
     ___flge
     ___xxtofl
     _colourclickLEDs_C
     _colourclick_readRGBC
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _stoa
             _fputc
             _strlen
           _strncmp
           _tolower
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
     _colourclick_testing
       _sendStringSerial4
       _sprintf
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      3C      10       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4E      DA       7       85.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     215       8        0.0%
DATA                 0      0     215       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 15:35:26 2021

                    ___fldiv@aexp 0027                      ___fldiv@bexp 0026  
                    ___fldiv@sign 001F                                l63 50F6  
                              l67 5112             __end_of_DCmotors_init 621C  
                    ___awdiv@sign 000C               ___wmul@multiplicand 0003  
                             l312 65A4                               l401 65FE  
                             l314 65B2                               l315 65B8  
                             l171 1B64                               l404 65E8  
                             l156 2DAE                               l309 6588  
                             l165 1B26                               l350 65CE  
                             l262 60DA                               l407 62E6  
                             l271 617A                               l159 2E08  
                             l344 65F4                               l280 4F20  
                             l256 639C                               l265 612A  
                             l601 5542                               l169 1B42  
                             l353 65DC                               l274 5EF6  
                             l282 4F2E                               l347 661C  
                             l611 608A                               l291 5066  
                             l259 652E                               l268 61CA  
                             l284 505E                               l605 5572  
                             l285 4F80                               l446 656E  
                             l606 5574                               l294 5814  
                             l359 650E                               l455 658C  
                             l287 4F8E                               l392 64C6  
                             l616 603A                               l464 6474  
                             l713 64EC                               l561 473C  
                             l554 621A                               l458 65A0  
                             l386 649E                               l395 6608  
                             l564 654C                               l389 64A0  
                             l566 654E                               l398 6612  
                             l574 5CF6                               l582 5C5C  
                             l590 5D74                               l840 4F1E  
                             l569 5CC6                               l577 5C2C  
                             l593 562C                               l827 4DBA  
                             l589 5D72                               l597 565C  
                             l598 565E                               l944 5A68  
                             l972 5BC2                               l957 5B18  
                             l983 538C                               l978 5346  
                             l987 640C                               _abs 62E8  
                             _pad 58E0                      ___awmod@sign 0006  
                             wreg 000FE8              ?_colourclick_testing 005A  
                    ___flmul@aexp 0012                      ___flmul@bexp 0013  
                    ___flmul@sign 000D                      ___flmul@temp 0018  
           ?_colourclick_readRGBC 000C                      ___flmul@prod 0014  
             __size_of_ADC_getval 0018                      ___fltol@exp1 000A  
      colourcards_readRGBC@tmpval 0028                              l1010 5288  
                            ?_abs 0013                              l1300 3E98  
                            l1241 35E0                              l1306 3F1A  
                            l1250 38B0                              l1242 35CE  
                            l1331 3CDA                              l1243 3594  
                            l1308 3F92                              l1309 3F80  
                            l1501 12AC                              l1334 3B6C  
                            l1327 3976                              l1344 3C9C  
                            l1336 3BE4                              l1600 33F0  
                            l1337 3BD2                              l1434 5926  
                            l1258 36FA                              l1371 48F0  
                            l1267 37CA                              l1283 6260  
                            l1268 37B8                              l1437 5968  
                            l1445 4116                              l1382 4888  
                            l1710 58DE                              l1295 4074  
                            l1375 482C                              l1631 631E  
                            l1439 59A4                              l1447 411E  
                            l1615 5DD2                              l1391 5F48  
                            l1368 4794                              l1608 32B4  
                            l1616 5DDA                              l1297 3ED4  
                            l1721 6626                              l1465 4356  
                            l5001 4096                              l4201 3512  
                            l1529 16F0                              l1634 6326  
                            l1626 548A                              l4131 5844  
                            l5011 410A                              l5003 40BE  
                            l4211 3526                              l4203 3516  
                            l1483 1B24                              l4133 5862  
                            l4125 5816                              l1733 5FEA  
                            l5021 4154                              l5013 4126  
                            l5005 40DE                              l4301 378C  
                            l4221 3560                              l4213 352A  
                            l4205 351A                              l4141 33FE  
                            l5101 1000                              l1581 4C32  
                            l1565 4B16                              l1662 4A8C  
                            l1718 62A4                              l4135 5898  
                            l4127 5828                              l5031 41F0  
                            l5023 415C                              l5015 4138  
                            l5007 40EE                              l4311 37E6  
                            l4303 379A                              l4231 35B2  
                            l4223 357C                              l4215 352E  
                            l4207 351E                              l4151 343E  
                            l4143 340C                              l1671 4568  
                            l1727 5E98                              l5111 1070  
                            l5103 1018                              l1567 4B1E  
                            l1752 5E3A                              l1576 4BE0  
                            l1681 6444                              l1665 4A94  
                            l4401 4D52                              l4129 583A  
                            l5041 42C0                              l5025 4162  
                            l5033 4254                              l5017 4146  
                            l5009 40F0                              l4321 3850  
                            l4313 37F4                              l4305 37B0  
                            l4241 35FE                              l4233 35C0  
                            l4225 358C                              l4209 3522  
                            l4217 3532                              l4161 3470  
                            l4153 3440                              l4145 340E  
                            l5201 13FA                              l5105 1022  
                            l1577 4C2A                              l1737 5740  
                            l6001 1B80                              l1674 44AC  
                            l4403 4D64                              l5051 430A  
                            l5035 426E                              l5043 42D0  
                            l5027 41E4                              l5019 414C  
                            l4331 388A                              l4323 3870  
                            l4315 382E                              l4251 363E  
                            l4235 35C2                              l4227 35A2  
                            l4219 3536                              l4171 3498  
                            l4163 3472                              l4147 341E  
                            l4155 3448                              l4139 33F2  
                            l1747 5E32                              l5211 150E  
                            l5203 145E                              l5115 10A6  
                            l6011 1BAC                              l6003 1B8C  
                            l4501 3DFE                              l6101 27D4  
                            l4405 4D6A                              l4421 4DF2  
                            l4413 4DBC                              l4341 6262  
                            l5053 4316                              l5045 42E2  
                            l5037 428C                              l5029 41EA  
                            l4333 3890                              l4325 3874  
                            l4309 37DA                              l4317 3830  
                            l4261 3668                              l4253 364A  
                            l4245 3612                              l4237 35CC  
                            l4229 35AE                              l4181 34D2  
                            l4173 34A8                              l4165 3478  
                            l4157 3458                              l4149 342E  
                            l5301 1958                              l5221 15CC  
                            l5213 1542                              l5205 14B6  
                            l5141 1208                              l5133 1140  
                            l5117 10B8                              l5109 104A  
                            l5061 0EB8                              l6021 1D18  
                            l6013 1C04                              l6005 1B94  
                            l4511 3E3C                              l4503 3DFE  
                            l6103 2806                              l6111 288A  
                            l4407 4D7A                              l4431 4E5A  
                            l4423 4E00                              l4415 4DC0  
                            l4343 626E                              l4351 5FA8  
                            l5055 431E                              l5047 42F2  
                            l5039 42A6                              l4335 389E  
                            l4327 3882                              l4319 3840  
                            l4271 36DA                              l4255 364E  
                            l4247 3622                              l4239 35EE  
                            l4263 366E                              l4191 34FE  
                            l4183 34E4                              l4175 34B8  
                            l4167 3486                              l4159 345E  
                            l1695 63D4                              l5311 1998  
                            l5303 195C                              l5231 16A0  
                            l5223 15DC                              l5215 1574  
                            l5207 14EA                              l5151 1268  
                            l5143 1210                              l5135 1174  
                            l5119 10D4                              l5127 10F0  
                            l5071 0F0C                              l5063 0EC2  
                            l6031 1E52                              l6023 1D4A  
                            l6015 1C5C                              l6007 1B9C  
                            l4521 3E88                              l4513 3E4C  
                            l6113 28BC                              l6121 2940  
                            l6105 2838                              l1689 5F9A  
                            l4409 4D9A                              l4433 4E68  
                            l4441 4ECE                              l4425 4E20  
                            l4417 4DCE                              l4345 6280  
                            l4353 5FAC                              l5049 42F8  
                            l5057 432E                              l4601 3904  
                            l4337 38A0                              l4329 3888  
                            l4281 3734                              l4265 3694  
                            l4273 36EA                              l4257 365C  
                            l4249 3630                              l4193 3502  
                            l4185 34F2                              l4177 34BA  
                            l4169 3488                              l5321 19CA  
                            l5313 19A0                              l5305 196E  
                            l5241 16E8                              l5233 16B4  
                            l5225 1610                              l5217 158A  
                            l5209 14F0                              l5153 127C  
                            l5137 117A                              l5145 1242  
                            l5129 110A                              l5081 0F54  
                            l5073 0F16                              l5065 0ED2  
                            l5401 4BC2                              l6041 1FCC  
                            l6033 1EC4                              l6025 1DBC  
                            l6017 1CB4                              l6009 1BA4  
                            l4531 3ED2                              l4523 3E96  
                            l4515 3E5C                              l4507 3E12  
                            l4451 3CE8                              l4363 64C8  
                            l6123 2972                              l6131 2A1E  
                            l6115 28EE                              l6107 286A  
                            l5411 48F2                              l4371 4C38  
                            l4443 4EDE                              l4435 4E96  
                            l4427 4E3E                              l4419 4DEE  
                            l4347 6284                              l4355 5FDE  
                            l4611 3930                              l4603 3914  
                            l4291 3764                              l4283 373E  
                            l4275 3710                              l4267 36C8  
                            l4259 365E                              l4195 3506  
                            l4187 34F6                              l4179 34C2  
                            l5323 19D0                              l5331 1A20  
                            l5315 19AE                              l5307 1980  
                            l5251 17A6                              l5243 170C  
                            l5227 1666                              l5235 16B8  
                            l5219 15BC                              l5171 1332  
                            l5155 1284                              l5147 1252  
                            l5139 11D4                              l5083 0F60  
                            l5091 0F76                              l5075 0F1E  
                            l5067 0EE0                              l6051 2106  
                            l6043 1FFE                              l6035 1EF6  
                            l6027 1DEE                              l6019 1CE6  
                            l6211 50A8                              l4541 3F18  
                            l4533 3EE4                              l4525 3EA2  
                            l4517 3E64                              l4509 3E2C  
                            l4461 3D28                              l4453 3CF6  
                            l4365 64E4                              l6133 2A50  
                            l6141 2AFC                              l6125 29A4  
                            l6117 2920                              l5421 4968  
                            l5413 4906                              l4381 4C98  
                            l4373 4C46                              l4445 4EFE  
                            l4437 4EB6                              l4429 4E46  
                            l4349 5F9C                              l4701 3C84  
                            l4621 3986                              l4613 3940  
                            l4605 391A                              l4293 3768  
                            l4285 374C                              l4277 3720  
                            l4269 36CA                              l4197 350A  
                            l4189 34FA                              l5341 1A70  
                            l5333 1A32                              l5325 19F6  
                            l5317 19B6                              l5309 1988  
                            l5261 17EE                              l5253 17B4  
                            l5245 1770                              l5237 16C8  
                            l5229 166C                              l5181 136A  
                            l5173 133A                              l5165 12CC  
                            l5157 129E                              l5149 1256  
                            l5093 0F9C                              l5085 0F68  
                            l5077 0F30                              l5069 0EE8  
                            l5405 4BF4                              l6061 2240  
                            l6053 2138                              l6045 2030  
                            l6037 1F28                              l6029 1E20  
                            l6221 50D8                              l6213 50B8  
                            l6205 5068                              ?_pad 0011  
                            l4551 3F78                              l4535 3EFA  
                            l4543 3F2A                              l4527 3EC0  
                            l4519 3E74                              l4471 3D4E  
                            l4463 3D2A                              l4455 3CF8  
                            l6143 2B2E                              l6151 2BB2  
                            l6135 2A82                              l6127 29D6  
                            l5431 4990                              l5423 496C  
                            l5415 490A                              l4391 4CE2  
                            l4383 4C9C                              l4375 4C66  
                            l4439 4EC8                              l4703 3CA0  
                            l4711 3CC6                              l4631 39C0  
                            l4623 3996                              l4615 3950  
                            l4607 3920                              l4295 3778  
                            l4287 374E                              l4199 350E  
                            l4359 639E                              l5343 1A78  
                            l5335 1A4C                              l5327 1A12  
                            l5319 19BE                              l5271 1818  
                            l5263 17F2                              l5247 1780  
                            l5255 17BC                              l5239 16DC  
                            l5191 13B4                              l5183 1378  
                            l5167 12E0                              l5175 133E  
                            l5159 12B8                              l5087 0F6C  
                            l5079 0F40                              l5407 4C08  
                            l5511 2FEE                              l5503 2F70  
                            l6071 237A                              l6063 2272  
                            l6055 216A                              l6047 2062  
                            l6039 1F5A                              l6231 50EE  
                            l6223 50DC                              l6215 50C0  
                            l6207 5094                              l4561 3FE6  
                            l4545 3F38                              l4537 3F00  
                            l4529 3EC2                              l4481 3D8E  
                            l4473 3D5C                              l4457 3D08  
                            l4465 3D32                              l4449 3CDC  
                            l5601 62A8                              l6153 2BE4  
                            l6161 2C68                              l6145 2B60  
                            l6137 2AB4                              l5433 4998  
                            l5417 490E                              l4393 4CF0  
                            l4385 4CA8                              l4377 4C6A  
                            l4369 4C34                              l4713 3CCA  
                            l4705 3CB0                              l4641 3A12  
                            l4633 39D6                              l4617 3960  
                            l4609 392E                              l4289 375C  
                            l4297 377A                              l5361 1AFE  
                            l5353 1AC8                              l5345 1A88  
                            l5337 1A52                              l5329 1A1A  
                            l5281 184C                              l5273 181E  
                            l5265 17F8                              l5257 17D0  
                            l5249 1794                              l5193 13C6  
                            l5185 137C                              l5177 1346  
                            l5169 12FC                              l5097 0FD2  
                            l5089 0F70                              l5409 4C0C  
                            l5521 30CC                              l5513 2FFE  
                            l5505 2F82                              l6081 24F4  
                            l6073 23EC                              l6065 22E4  
                            l6057 21DC                              l6049 20D4  
                            l6241 5134                              l6233 50F2  
                            l6225 50E2                              l6217 50CC  
                            l6209 509C                              l4571 4050  
                            l4555 3FA2                              l4563 3FEA  
                            l4547 3F3C                              l4539 3F0A  
                            l4491 3DCE                              l4483 3D90  
                            l4475 3D5E                              l4467 3D42  
                            l4459 3D18                              l5611 62E4  
                            l5603 62AC                              l4731 59C4  
                            l4723 59A6                              l6171 2D20  
                            l6163 2C9A                              l6155 2C16  
                            l6147 2B92                              l6091 2718  
                            l5443 4A4C                              l5435 49D0  
                            l5427 4972                              l5419 492E  
                            l4395 4D02                              l4387 4CC6  
                            l4379 4C78                              l4811 5B96  
                            l4803 5B1A                              l4707 3CBE  
                            l4651 3A58                              l4643 3A20  
                            l4635 39E2                              l4627 39AA  
                            l4619 3966                              l4299 3788  
                            l5363 1B04                              l5355 1ADA  
                            l5347 1A8E                              l5339 1A64  
                            l5267 1804                              l5259 17DE  
                            l5275 1824                              l5283 1852  
                            l5291 18EA                              l5187 138E  
                            l5195 13CE                              l5179 1358  
                            l5099 0FE4                              l5371 4AA8  
                            l5531 313E                              l5515 3034  
                            l5507 2FA8                              l6075 241E  
                            l6067 2316                              l6059 220E  
                            l6083 2562                              l6243 5148  
                            l6235 5104                              l6227 50E6  
                            l6219 50D4                              l4573 4054  
                            l4565 4004                              l4557 3FAE  
                            l4549 3F4A                              l4493 3DD6  
                            l4477 3D6E                              l4485 3D98  
                            l4469 3D48                              l4821 52B8  
                            l5605 62B4                              l4741 59F8  
                            l4733 59D2                              l4725 59AA  
                            l5621 4586                              l5701 5608  
                            l6181 2D92                              l6165 2CCC  
                            l6173 2D28                              l6157 2C48  
                            l6093 274A                              l5445 4A5E  
                            l5429 4988                              l4397 4D30  
                            l4389 4CCE                              l4901 591E  
                            l4813 5BBA                              l4805 5B48  
                            l4709 3CC0                              l4661 3AC6  
                            l4653 3A72                              l4645 3A2C  
                            l4637 39FA                              l4629 39B6  
                            l4717 621C                              l5357 1AE6  
                            l5349 1A94                              l5293 1908  
                            l5285 18AA                              l5277 1836  
                            l5269 1814                              l5197 13D6  
                            l5189 139C                              l5381 4AE6  
                            l5373 4AB0                              l5461 56A4  
                            l5453 5660                              l5533 316E  
                            l5525 3104                              l5517 305C  
                            l5509 2FB8                              l6085 256E  
                            l6077 2450                              l6069 2348  
                            l6245 515A                              l6237 5114  
                            l6229 50EA                              l4575 4062  
                            l4567 401A                              l4559 3FBC  
                            l4495 3DDA                              l4487 3DA8  
                            l4479 3D7E                              l4831 5326  
                            l4823 52C8                              l5607 62BC  
                            l4751 5A32                              l4743 5A00  
                            l4735 59DA                              l4727 59B8  
                            l5631 46D4                              l5623 45E8  
                            l5703 5614                              l5711 54CE  
                            l6183 2DA2                              l6175 2D40  
                            l6167 2CFE                              l6095 277C  
                            l6087 258C                              l5615 658C  
                            l5447 4A70                              l5439 4A0A  
                            l4399 4D50                              l4911 598C  
                            l4903 5932                              l4815 5BC0  
                            l4807 5B58                              l4671 3B5C  
                            l4663 3AF0                              l4655 3A82  
                            l4647 3A3C                              l4639 3A06  
                            l4591 38CC                              l4719 622C  
                            l5359 1AEE                              l5295 1924  
                            l5287 18DE                              l5279 1848  
                            l5199 13E6                              l5391 4B5A  
                            l5383 4AF4                              l5375 4AC2  
                            l5463 56BC                              l5455 568A  
                            l5543 323E                              l5527 3116  
                            l5519 3084                              l6079 2482  
                            l6247 5176                              l6239 511A  
                            l4577 4068                              l4569 4034  
                            l4489 3DBE                              l4833 5334  
                            l4825 52F6                              l5473 64A0  
                            l5609 62E2                              l4761 5A58  
                            l4753 5A3A                              l4745 5A08  
                            l4737 59DE                              l4729 59C0  
                            l5625 462E                              l5705 5644  
                            l5721 551E                              l5713 54E6  
                            l6185 2DA6                              l6193 2DE8  
                            l6177 2D4C                              l6169 2D1A  
                            l6097 27AE                              l6089 2590  
                            l5641 64F0                              l5617 659C  
                            l4905 5946                              l4809 5B86  
                            l4681 3B9C                              l4673 3B6A  
                            l4665 3B26                              l4657 3A9E  
                            l4649 3A48                              l4593 38CE  
                            l4841 63D6                              l4921 53AE  
                            l5297 1936                              l5289 18E6  
                            l5393 4B78                              l5377 4ACA  
                            l5369 4A96                              l5465 56DC  
                            l5561 3346                              l5545 3250  
                            l5553 32C8                              l5529 3130  
                            l5537 319A                              l5481 2E40  
                            l5633 5D76                              l5801 5766  
                            l4579 406A                              l4499 3DEE  
                            l4835 5384                              l4827 5306  
                            l4819 528A                              l5475 64B0  
                            l4763 5A60                              l4755 5A3C  
                            l4747 5A16                              l4739 59E6  
                            l5627 464E                              l5619 456A  
                            l5731 5C96                              l5723 552A  
                            l5715 54F0                              l5707 548C  
                            l6187 2DB0                              l6179 2D70  
                            l6099 27CA                              l6451 49BA  
                            l4915 62E8                              l4907 594A  
                            l4771 5A7C                              l4691 3C0E  
                            l4683 3BCA                              l4675 3B7C  
                            l4667 3B34                              l4659 3AAA  
                            l4595 38DE                              l4587 38B2  
                            l4843 63EC                              l4851 519A  
                            l4923 53EC                              l4931 542C  
                            l5299 1946                              l5395 4B84  
                            l5387 4B42                              l5379 4ADE  
                            l5467 56EE                              l5459 5696  
                            l5563 336E                              l5571 339C  
                            l5555 32F0                              l5547 3284  
                            l5539 31C8                              l5491 2E94  
                            l5483 2E52                              l5635 5D7E  
                            l5651 5F36                              l5643 5EF8  
                            l5811 57FC                              l5803 577A  
                            l5821 6614                              l5901 61EA  
                            l5813 65A2                              l4837 538A  
                            l4829 5314                              l4757 5A42  
                            l4749 5A1C                              l5629 466A  
                            l5733 5CA2                              l5725 555A  
                            l5717 5508                              l5709 54B0  
                            l5741 5FEC                              l6189 2DCC  
                            l6197 2E00                              l5661 645C  
                            l4917 6302                              l4909 5978  
                            l4781 5AB0                              l4773 5A84  
                            l4693 3C38                              l4677 3B8A  
                            l4669 3B52                              l4597 38EE  
                            l4589 38BE                              l4845 63FC  
                            l4861 51EA                              l4933 543E  
                            l4925 5414                              l4941 5E3C  
                            l5397 4BBA                              l5389 4B56  
                            l5469 571A                              l5573 33AA  
                            l5565 337C                              l5557 3326  
                            l5493 2EBC                              l5485 2E56  
                            l5477 2E0A                              l5637 5D8C  
                            l5645 5F0A                              l5805 578E  
                            l5823 65BA                              l5911 61F4  
                            l5903 61EC                              l5815 65B6  
                            l5831 47A4                              l5591 65E4  
                            l5671 6122                              l5663 608C  
                            l4759 5A48                              l5735 5CAE  
                            l5727 5C5E                              l5719 5512  
                            l5751 606E                              l5743 5FFE  
                            l6199 2E04                              l5655 6446  
                            l4791 5AEC                              l4783 5AB8  
                            l4775 5A88                              l4767 5A6A  
                            l4687 3BF4                              l4695 3C3C  
                            l4679 3B8E                              l4599 38FE  
                            l4871 5214                              l4863 51EE  
                            l4855 51AE                              l4927 5420  
                            l4919 538E                              l4943 5E4C  
                            l4951 5E24                              l5399 4BBE  
                            l5567 3390                              l5495 2EF6  
                            l5487 2E7E                              l5479 2E32  
                            l5639 5DB2                              l5647 5F12  
                            l5807 57A2                              l5921 6212  
                            l5913 61F6                              l5905 61EE  
                            l5841 47E2                              l5833 47BA  
                            l5825 4740                              l5585 6600  
                            l5593 65F6                              l5681 612C  
                            l5665 60D2                              l5737 5CDE  
                            l5729 5C82                              l5761 5C14  
                            l5753 5BC4                              l5745 601E  
                            l5657 644A                              l4793 5AF2  
                            l4785 5AC0                              l4777 5A96  
                            l4769 5A6E                              l4697 3C56  
                            l4689 3C00                              l4881 523C  
                            l4873 521E                              l4865 51FC  
                            l4857 51D8                              l4849 5184  
                            l4937 5482                              l4961 43E2  
                            l4945 5DDC                              l5497 2F16  
                            l5489 2E86                              l5577 33B6  
                            l5649 5F1A                              l5809 57F0  
                            l5819 65EA                              l5923 6216  
                            l5915 6200                              l5907 61F0  
                            l5931 655E                              l5851 486A  
                            l5843 4814                              l5827 4750  
                            l5587 6604                              l5595 65FA  
                            l5675 617C                              l5683 6172  
                            l5739 5E9A                              l5763 5C44  
                            l5755 5BE8                              l5771 5D1E  
                            l5691 55B8                              l5747 603C  
                            l5659 6458                              l4787 5ACE  
                            l4795 5AF8                              l4779 5A9E  
                            l4699 3C6A                              l4883 5248  
                            l4875 5228                              l4859 51DA  
                            l4963 43F0                              l4971 44D0  
                            l4955 4358                              l5579 33DE  
                            l5499 2F24                              l5917 6202  
                            l5909 61F2                              l5933 6568  
                            l5925 6550                              l5941 6536  
                            l5861 48C0                              l5853 4878  
                            l5845 4816                              l5837 47CE  
                            l5829 475E                              l5597 660A  
                            l5589 65E0                              l5677 61C2  
                            l5669 60DC                              l5757 5BFC  
                            l5773 5D2A                              l5765 5CF8  
                            l5693 55D0                              l5749 604E  
                            l4893 58E0                              l4797 5B08  
                            l4789 5AE4                              l4885 5258  
                            l4973 450C                              l4957 4378  
                            l4949 5E12                              l5781 6480  
                            l5871 6570                              l5919 620E  
                            l5935 656A                              l5927 655A  
                            l5943 6546                              l5863 48D0  
                            l5855 4896                              l5847 4822  
                            l5839 47D6                              l5599 660E  
                            l5759 5C08                              l5767 5CFE  
                            l5775 5D42                              l5695 55DA  
                            l5687 5576                              l4983 640E  
                            l4991 5F62                              l4895 58F0  
                            l4799 5B10                              l4887 5268  
                            l4975 4520                              l4967 4460  
                            l4959 43CE                              l5951 4F38  
                            l5783 6486                              l5791 6512  
                            l5873 657A                              l5937 656C  
                            l5929 655C                              l5865 48DE  
                            l5857 4898                              l5849 485E  
                            l5777 5D5A                              l5769 5D12  
                            l5697 55F2                              l5689 559A  
                            l4993 5F90                              l4897 5904  
                            l4889 5278                              l4977 4548  
                            l4969 449C                              l5953 4F52  
                            l5945 4F20                              l5785 6488  
                            l5793 65D0                              l5881 6366  
                            l5875 6582                              l5939 6530  
                            l5867 48E0                              l5859 489C  
                            l5699 55FC                              l4995 5F94  
                            l4987 5F4A                              l4899 5912  
                            l4979 4558                              l5971 4FD0  
                            l5955 4F5E                              l5947 4F30  
                            l5787 648A                              l5779 6476  
                            l5795 65D6                              l5891 6398  
                            l5883 636A                              l5877 6584  
                            l5893 61CE                              l4989 5F4E  
                            l5797 5742                              l5981 502E  
                            l5973 4FDC                              l5965 4F90  
                            l5957 4F78                              l5949 4F36  
                            l5789 648C                              l5885 6374  
                            l5879 6586                              l5895 61E2  
                            l4999 4076                              l5991 1B26  
                            l5799 5756                              l5983 5048  
                            l5975 4FF4                              l5967 4F9C  
                            l5959 4F7A                              l5887 6384  
                            l5897 61E6                              l5993 1B34  
                            l5985 504A                              l5977 5012  
                            l5969 4FB4                              l5889 638E  
                            l5899 61E8                              l5995 1B46  
                            l5987 504E                              l5979 501A  
                            l5997 1B4C                              l5989 5060  
                            l5999 1B72                              STR_1 0E01  
                            STR_2 0EAF                              STR_3 0E01  
                            STR_4 0E94                              STR_5 0E01  
                            STR_6 0E73                              STR_7 0E01  
                            STR_8 0E87                              STR_9 0E01  
                    _BAUD4CONbits 000EE9                              _LATE 000F7D  
                            _LATG 000F7F                              u5000 4004  
                            u4200 583A                              u5001 4000  
                            u4201 5836                              u5010 4034  
                            u4210 5862                              _T2PR 000FBC  
                            u5011 4030                              u4211 585E  
                            u5020 4062                              u4220 5898  
                            u5100 3996                              u4300 34E4  
                            u5021 405E                              u4221 5894  
                            u5101 3992                              u4301 34E0  
                            u5110 3B10                              u5030 38CC  
                            u4310 34F2                              u4230 340C  
                            u5031 38C8                              u4311 34EE  
                            u4231 3408                              u5200 3C84  
                            u5120 3B6A                              u5040 38DE  
                            u4400 3630                              u4320 3560  
                            u4240 341E                              u6000 0F9C  
                            u5201 3C80                              u5121 3B66  
                            u5041 38DA                              u4401 362C  
                            u4321 355C                              u4241 341A  
                            u6001 0F98                              u5210 3CBE  
                            u5130 3B8A                              u5050 38EE  
                            u4410 363E                              u4330 3578  
                            u4250 342E                              u6010 0FCA  
                            u5211 3CBA                              u5131 3B86  
                            u5115 3B06                              u5051 38EA  
                            u4411 363A                              u4331 3572  
                            u4251 342A                              u6011 0FC4  
                            u5220 59B8                              u5300 5AB0  
                            u5140 3B9C                              u5060 392E  
                            u4500 3788                              u4420 365C  
                            u4340 357A                              u4260 3470  
                            u6100 1242                              u6020 0FCC  
                            u5221 59B4                              u5301 5AAC  
                            u5141 3B98                              u5061 392A  
                            u4501 3784                              u4421 3658  
                            u4261 346C                              u6101 123E  
                            u5230 59D2                              u4190 5828  
                            u5310 5ACE                              u5150 3BCA  
                            u5070 3940                              u4510 379A  
                            u4430 3694                              u4350 35A2  
                            u4270 3486                              u6110 1268  
                            u6030 0FE4                              u5231 59CE  
                            u4191 5824                              u5311 5ACA  
                            u5151 3BC6                              u5071 393C  
                            u4511 3796                              u4431 3690  
                            u4351 359E                              u4271 3482  
                            u6111 1264                              u6031 0FE0  
                            u5400 5334                              u5240 59F8  
                            u5320 5AE4                              u5160 3BE0  
                            u5080 3950                              u4600 3882  
                            u4520 37B0                              u4440 36DA  
                            u4360 35C0                              u4280 3498  
                            u6200 1378                              u6120 127C  
                            u6040 1070                              u5401 5330  
                            u5241 59F4                              u5321 5AE0  
                            u5161 3BDC                              u5081 394C  
                            u4601 387E                              u4521 37AC  
                            u4441 36D6                              u4361 35BC  
                            u4281 3494                              u6201 1374  
                            u6121 1278                              u6041 106C  
                            u5410 5384                              u5250 5A16  
                            u5330 5B08                              u5170 3BF4  
                            u5090 3986                              u4610 389E  
                            u4530 37C6                              u4450 3710  
                            u4370 35E0                              u4290 34A8  
                            u6210 138E                              u6130 129E  
                            u6050 109E                              u5411 5380  
                            u5251 5A12                              u5331 5B04  
                            u5171 3BF0                              u5091 3982  
                            u4611 389A                              u4531 37C2  
                            u4451 370C                              u4371 35DC  
                            u4291 34A4                              u6211 138A  
                            u6131 129A                              u6051 1098  
                            u5260 5A32                              u7020 6474  
                            u4700 4CC6                              u4620 62A4  
                            u5500 58F0                              u5340 5B48  
                            u5180 3C0E                              u5420 63EC  
                            u4540 37DA                              u4460 3720  
                            u4380 35EE                              u6300 16DC  
                            u6220 139C                              u6140 12C8  
                            u6060 10A0                              u5261 5A2E  
                            u7005 6502                              u7021 6470  
                            u4701 4CC2                              u4621 62A0  
                            u5501 58EC                              u5341 5B44  
                            u5181 3C0A                              u5421 63E8  
                            u4541 37D6                              u4461 371C  
                            u4381 35EA                              u6301 16D8  
                            u6221 1398                              u6141 12C4  
                            u5270 5A58                              u7030 55AC  
                            u7110 54E6                              u7006 6504  
                            u4710 4CF0                              u4630 5FCE  
                            u5510 5912                              u5350 5B86  
                            u5190 3C56                              u4550 37F4  
                            u4470 374C                              u4390 35FE  
                            u5430 519A                              u6310 1780  
                            u6230 13C6                              u6150 12E0  
                            u6070 10B8                              u5271 5A54  
                            u7031 55A4                              u7111 54E2  
                            u7015 650C                              u4711 4CEC  
                            u5511 590E                              u5351 5B82  
                            u5191 3C52                              u4551 37F0  
                            u4471 3748                              u4391 35FA  
                            u5431 5196                              u6311 177C  
                            u6231 13C2                              u6151 12DC  
                            u6071 10B4                              u4800 3CF6  
                            u7200 5C5C                              u7120 5508  
                            u7016 650E                              u4720 4D30  
                            u4640 5FDE                              u5520 5968  
                            u5280 5A7C                              u5360 5BBA  
                            u4560 382E                              u4480 375C  
                            u5440 51CE                              u5600 5478  
                            u6400 1936                              u6320 1794  
                            u6240 150E                              u6160 12FC  
                            u6080 113C                              u4801 3CF2  
                            u7201 5C58                              u7121 5504  
                            u4721 4D2C                              u4641 5FDA  
                            u5521 5964                              u5281 5A78  
                            u5361 5BB6                              u4561 382A  
                            u4481 3758                              u5601 5472  
                            u6401 1932                              u6321 1790  
                            u6241 150A                              u6161 12F8  
                            u6081 1138                              u4810 3D08  
                            u5370 52B8                              u7210 5D5A  
                            u7050 55D0                              u7130 555A  
                            u4730 4D7A                              u5530 5978  
                            u5290 5A96                              u4570 3840  
                            u4490 3778                              u5450 51FC  
                            u5610 547A                              u4650 63CE  
                            u6410 1946                              u6330 17A6  
                            u6250 1574                              u6170 1332  
                            u6090 11D0                              u8010 5104  
                            u4811 3D04                              u5371 52B4  
                            u7211 5D56                              u7051 55CC  
                            u7131 5556                              u4731 4D76  
                            u5531 5974                              u5291 5A92  
                            u4571 383C                              u4491 3774  
                            u5451 51F8                              u4651 63C8  
                            u6411 1942                              u6331 17A2  
                            u6251 1570                              u6171 132E  
                            u6091 11CC                              u8011 5100  
                            u4900 3EC0                              u4820 3D18  
                            u5380 52F6                              u7300 4888  
                            u7220 5D72                              u7060 55F2  
                            u7140 5572                              u7108 54C4  
                            u4740 4DCE                              u5540 6302  
                            u4580 3850                              u5460 5210  
                            u5620 5E86                              u4660 63D0  
                            u6420 1980                              u6340 17B4  
                            u6260 15BC                              u6180 1358  
                            u8020 5112                              u4901 3EBC  
                            u4821 3D14                              u5381 52F2  
                            u7301 4884                              u7221 5D6E  
                            u7061 55EE                              u7141 556E  
                            u4741 4DCA                              u5541 62FE  
                            u4637 5FC4                              u4581 384C  
                            u5461 520C                              u5445 51C4  
                            u6421 197C                              u6341 17B0  
                            u6261 15B8                              u6181 1354  
                            u6501 4AA0                              u8021 510E  
                            u7230 65B2                              u4910 3EE4  
                            u4830 3D5C                              u5390 5314  
                            u7310 4896                              u7150 5CDE  
                            u7070 5644                              u4670 4C46  
                            u4750 4E00                              u4590 3870  
                            u5470 5238                              u5550 53CE  
                            u5710 445C                              u5630 5E98  
                            u6430 19AE                              u6350 17D0  
                            u6270 15CC                              u6190 136A  
                            u6510 4AC2                              u8030 515A  
                            u7231 65AE                              u4911 3EE0  
                            u4831 3D58                              u5391 5310  
                            u7311 4892                              u7151 5CDA  
                            u7071 5640                              u4671 4C42  
                            u4751 4DFC                              u4591 386C  
                            u5471 5234                              u5711 4458  
                            u5631 5E94                              u6431 19AA  
                            u6351 17CC                              u6271 15C8  
                            u6191 1366                              u6511 4ABE  
                            u8031 5156                              u4920 3EFA  
                            u4840 3D6E                              u7320 48D0  
                            u7240 4750                              u7160 5CF6  
                            u7080 565C                              u7048 55AE  
                            u5800 5F90                              u6600 492E  
                            u4680 4C78                              u4760 4E3E  
                            u5480 5258                              u5560 53EC  
                            u5720 4480                              u5640 5E0C  
                            u6440 1A32                              u6360 17DE  
                            u6280 1666                              u6520 4AF4  
                            u7400 5012                              u4921 3EF6  
                            u4841 3D6A                              u7321 48CC  
                            u7241 474C                              u7161 5CF2  
                            u7081 5658                              u5801 5F8C  
                            u6601 492A                              u4681 4C74  
                            u4761 4E3A                              u5481 5254  
                            u5561 53E8                              u5705 4404  
                            u5641 5E06                              u6441 1A2E  
                            u6361 17DA                              u6281 1662  
                            u6521 4AF0                              u7401 500E  
                            u4930 3F18                              u4850 3D7E  
                            u7330 48DE                              u7250 475E  
                            u7090 54C2                              u7170 5FFE  
                            u6610 4968                              u4770 4E68  
                            u5810 40A6                              u5490 5268  
                            u5570 5414                              u5730 449C  
                            u5706 440E                              u5650 5E0E  
                            u6450 1A4C                              u6370 1836  
                            u6290 16B4                              u6530 4B12  
                            u7410 505E                              u4931 3F14  
                            u4851 3D7A                              u7331 48DA  
                            u7251 475A                              u7091 54BA  
                            u7171 5FFA                              u6611 4964  
                            u4691 4CA2                              u4771 4E64  
                            u5811 40A0                              u5491 5264  
                            u5571 5410                              u5555 53C4  
                            u5731 4498                              u5707 441E  
                            u5627 5E7C                              u6451 1A48  
                            u6371 1832                              u6291 16B0  
                            u6531 4B0E                              u7411 505A  
                            u7340 6546                              u4940 3F38  
                            u4860 3DBE                              u7260 47BA  
                            u7180 604E                              u6620 4984  
                            u4780 4E96                              u5900 42A6  
                            u5820 40A8                              u5580 543E  
                            u5740 44F0                              u5660 5E24  
                            u6460 1A64                              u6380 1908  
                            u6540 4B3E                              u6700 56EE  
                            u7500 1E20                              u7420 1B34  
                            u7341 6542                              u4941 3F34  
                            u4861 3DBA                              u7261 47B6  
                            u7181 604A                              u6621 4980  
                            u4781 4E92                              u5901 42A2  
                            u5581 543A                              u5725 4476  
                            u5661 5E20                              u6461 1A60  
                            u6381 1904                              u6541 4B3A  
                            u6701 56EA                              u7501 1E1C  
                            u7421 1B30                              u4950 3F4A  
                            u4870 3DFE                              u7270 4810  
                            u7190 5C44                              u6630 4A46  
                            u4790 4EDE                              u5910 42C0  
                            u5830 40BE                              u5750 450C  
                            u5670 43A0                              u6470 1AC2  
                            u6390 1924                              u6550 4B78  
                            u6710 571A                              u7510 1E52  
                            u7430 1B42                              u7350 4F2E  
                            u4951 3F46                              u4871 3DFA  
                            u7271 480C                              u7191 5C40  
                            u6631 4A40                              u4791 4EDA  
                            u5911 42BC                              u5831 40BA  
                            u5751 4508                              u6471 1ABC  
                            u6391 1920                              u6551 4B74  
                            u6711 5716                              u7511 1E4E  
                            u7431 1B3E                              u7351 4F2A  
                            u4960 3F78                              u4880 3E74  
                            u7280 485A                              u6720 64B0  
                            u6640 4A48                              u5920 42D0  
                            u5840 40EE                              u5760 4548  
                            u5680 43CE                              u6480 1AC4  
                            u6560 4BA6                              u6800 2FB8  
                            u7600 216A                              u7520 1EF6  
                            u7440 1B72                              u7360 4F8E  
                            u4961 3F74                              u4881 3E70  
                            u7281 4856                              u6721 64AC  
                            u5921 42CC                              u5841 40EA  
                            u5761 4544                              u5745 44E6  
                            u5681 43CA                              u6801 2FB4  
                            u7601 2166                              u7521 1EF2  
                            u7441 1B6E                              u7361 4F8A  
                            u4970 3F8E                              u4890 3E96  
                            u7290 4878                              u6730 64C6  
                            u5770 643E                              u6650 4A5E  
                            u5930 42E2                              u5850 410A  
                            u5690 43F0                              u6490 1ADA  
                            u6570 4BE0                              u6810 2FFE  
                            u7610 220E                              u7530 1F28  
                            u7450 1B80                              u7370 4FB4  
                            u4971 3F8A                              u4891 3E92  
                            u7291 4874                              u6731 64C2  
                            u5771 6438                              u6651 4A5A  
                            u5931 42DE                              u5851 4106  
                            u5595 5450                              u5691 43EC  
                            u5675 4396                              u6491 1AD6  
                            u6571 4BDC                              u6811 2FFA  
                            u7611 220A                              u7531 1F24  
                            u7451 1B7C                              u7371 4FB0  
                            u4980 3FA2                              u7700 274A  
                            u5780 6440                              u6660 4A70  
                            u5940 42F2                              u5860 4138  
                            u6580 4BF0                              u6900 336E  
                            u6820 305C                              u6740 2E32  
                            u7620 2240                              u7540 1F5A  
                            u7460 1CE6                              u7380 4FD0  
                            u4981 3F9E                              u7701 2746  
                            u6661 4A6C                              u5941 42EE  
                            u5861 4134                              u6581 4BEC  
                            u6901 336A                              u6821 3058  
                            u6741 2E2E                              u7621 223C  
                            u7541 1F56                              u7461 1CE2  
                            u7381 4FCC                              u4990 3FBC  
                            u6910 62D0                              u7710 277C  
                            u5790 5F62                              u5950 430A  
                            u5870 4146                              u6590 4C2A  
                            u6670 568A                              u6830 3084  
                            u6750 2E7E                              u7630 2272  
                            u7550 1FFE                              u7470 1D18  
                            u7390 4FF4                              u4991 3FB8  
                            u6911 62C8                              u7711 2778  
                            u5791 5F5E                              u5951 4306  
                            u5871 4142                              u6591 4C26  
                            u6567 4B9C                              u6671 5686  
                            u6831 3080                              u6751 2E7A  
                            u7631 226E                              u7551 1FFA  
                            u7471 1D14                              u8407 503A  
                            u7391 4FF0                              u7800 29A4  
                            u7720 27AE                              u5880 426E  
                            u5960 0EE0                              u6680 56BC  
                            u6840 3116                              u6760 2EBC  
                            u7640 2316                              u7560 2030  
                            u7480 1D4A                              u7801 29A0  
                            u7721 27AA                              u5881 426A  
                            u5961 0EDC                              u6681 56B8  
                            u6841 3112                              u6761 2EB8  
                            u7641 2312                              u7561 202C  
                            u7481 1D46                              u8417 5806  
                            u7810 29D6                              u7730 2806  
                            u6930 659C                              u5890 428C  
                            u5970 0F30                              u6690 56DC  
                            u6850 31C8                              u6770 2F68  
                            u7650 2348                              u7570 2062  
                            u7490 1DEE                              u7811 29D2  
                            u7731 2802                              u6931 6598  
                            u5891 4288                              u5971 0F2C  
                            u6691 56D8                              u6851 31C4  
                            u6771 2F62                              u7651 2344  
                            u7571 205E                              u7491 1DEA  
                            u8427 1B56                              u6940 4586  
                            u7900 2C48                              u7820 2A50  
                            u7740 2838                              u5980 0F40  
                            u6860 3236                              u6780 2F6A  
                            u7660 237A                              u7580 2106  
                            u6941 4582                              u7901 2C44  
                            u7821 2A4C                              u7741 2834  
                            u5981 0F3C                              u6861 3230  
                            u8437 2578                              u7661 2376  
                            u7581 2102                              u6950 466A  
                            u7910 2C9A                              u7830 2A82  
                            u7750 286A                              u5990 0F54  
                            u6870 3238                              u6790 2F82  
                            u7670 241E                              u7590 2138  
                            u6951 4666                              u8447 2D32  
                            u7911 2C96                              u7831 2A7E  
                            u7751 2866                              u5991 0F50  
                            u6791 2F7E                              u7671 241A  
                            u7591 2134                              u8367 5126  
                            u6928 62D2                              u7920 2CCC  
                            u7840 2AB4                              u7760 28BC  
                            u6880 3250                              u7680 2450  
                            u8457 5534                              u7921 2CC8  
                            u7841 2AB0                              u7761 28B8  
                            u6881 324C                              u7681 244C  
                            u8377 637A                              u7930 2CFE  
                            u7850 2B2E                              u7770 28EE  
                            u6890 32F0                              u7690 2482  
                            u8467 561E                              u7931 2CFA  
                            u7851 2B2A                              u7771 28EA  
                            u6891 32EC                              u7691 247E  
                            u8387 4F44                              u6964 46C4  
                            u7940 2D70                              u7860 2B60  
                            u7780 2920                              u6980 5DD2  
                            u6965 46C0                              u8477 5D34  
                            u7941 2D6C                              u7861 2B5C  
                            u7781 291C                              u6981 5DCE  
                            u8397 4F6A                              u6974 472E  
                            u7950 2D92                              u7870 2B92  
                            u7790 2972                              u6975 472A  
                            u8487 5C1E                              u7951 2D8E  
                            u7871 2B8E                              u7791 296E  
                            u7960 2DA2                              u7880 2BE4  
                            u8497 5CB8                              u7961 2D9E  
                            u7881 2BE0                              u7970 2DE0  
                            u7890 2C16                              u7971 2DDA  
                            u7891 2C12                              u6995 64F8  
                            u7980 2DE2                              u6996 64FA  
                     main@current 01B5           __end_of_DCmotors_setPWM 473E  
                            abs@a 0013                              _dbuf 0131  
                            _atoi 48F2                              _main 5068  
                            _dtoa 4076                              _left 5576  
                            _prec 0120                              _nout 011C  
                            pad@i 0018                              pad@p 0015  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            indf0 000FEF                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                            _stoa 4A96                              _stop 5CF8  
                   ___fpclassifyf 538E                              prodh 000FF4  
                            prodl 000FF3                              start 0000  
                __end_of_ADC_init 658A                   ___fldiv@new_exp 0020  
                    _tolower$3198 000D                      ___param_bank 000000  
                           ??_abs 0015                             ??_pad 0017  
          ??_clicker2buttons_init 0001                     ___fltol@sign1 0009  
                 __end_of___aodiv 4DBC                             ?_atoi 0008  
                 __end_of___fladd 38B2                             ?_main 0001  
                           ?_dtoa 001C                             ?_left 001A  
                 __end_of___aomod 4F20                             _ADPCH 000F5F  
                 __end_of___fldiv 4076                   __end_of___awdiv 5A6A  
                 __end_of___flneg 640E                             STR_10 0E9A  
                           STR_11 0E01                             STR_20 0E9F  
                           STR_12 0E80                             STR_13 0E01  
                           STR_21 0EA7                             STR_30 0EB3  
                           STR_14 0E6D                             STR_15 0E01  
                           STR_24 0EA3                             STR_16 0E8E  
                           STR_17 0E01                             STR_25 0EAB  
                           STR_18 0E78                             STR_19 0E41  
                           STR_28 0EB3                   __end_of___awmod 5B1A  
                 __end_of___flmul 3CDC                   __end_of___flsub 6262  
                 __end_of___fltol 528A                             ?_stoa 000A  
                           ?_stop 001A                   ___awdiv@divisor 0009  
         _colourclick_writetoaddr 6510                   ___awdiv@counter 000B  
                    vfpfcnvrt@fmt 004A             ??_colourclick_testing 005E  
         __end_of_sendCharSerial4 65A2        __end_of_I2C_2_Master_Start 660A  
      __end_of_I2C_2_Master_Write 65EA          ?_colourclick_calibration 0001  
                           _flags 0122                             _fputc 5816  
                 __end_of_forward 5CF8                             _fputs 6262  
                 __end_of_isdigit 6446              colourclickLEDs_C@tog 0001  
                           _right 548C                             atoi@n 0015  
                           pad@fp 0011                             atoi@s 0008  
                           _width 011E                             _putch 6626  
                           dtoa@d 001E                             dtoa@i 003E  
               _clicker2LEDs_init 6614                             dtoa@n 0036  
                           dtoa@p 0030                             dtoa@s 0034  
                           dtoa@w 0032                   __end_of_isspace 5F9C  
                 __end_of_isupper 63D6                             tablat 000FF5  
                 __end_of_reverse 5C5E                             plusw1 000FE3  
                           plusw2 000FDB            DCmotors_init@PWMperiod 0001  
                           stoa@i 0016                             stoa@l 001E  
              ?_clicker2LEDs_init 0001                             stoa@p 001C  
                           stoa@s 000C                             stoa@w 0018  
                           status 000FD8                   __end_of_sprintf 5F4A  
                  ?___fpclassifyf 0001                   __end_of_tolower 5E3C  
         _colourcards_testingRGBC 1B26                   __end_of_strncmp 5742  
           _I2C_2_Master_RepStart 660A                   __initialization 6328  
             ??_clicker2LEDs_init 0001                      __end_of_atoi 4A96  
                    __end_of_main 5184                      __end_of_dtoa 4358  
                    __end_of_left 5660                      __end_of_stoa 4C34  
                    __end_of_stop 5D76     __size_of_colourcards_readRGBC 087E  
                          ??_atoi 000A                            ??_main 01B3  
                          ??_dtoa 0026                            ??_left 0020  
                          ??_stoa 000E                            ??_stop 001E  
                   __activetblptr 000003            ??_colourclick_readRGBC 000E  
       __end_of_clicker2LEDs_init 661E                   _colourcard_flag 012C  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000F64         __size_of_colourclick_init 0038  
                          ?_right 001A                  ___awdiv@dividend 0007  
                          ?_putch 0001                            _RC0PPS 000E62  
                          _RC4REG 000EE3                            _RE2PPS 000E74  
                          _RD5PPS 000E6F                            _RC7PPS 000E69  
                          _RD6PPS 000E70                  ?_DCmotors_setPWM 000F  
                          _RX4PPS 000E15                            _TX4REG 000EE4  
                __end_of___xxtofl 48F2                      ??_ADC_getval 0001  
                    vfprintf@cfmt 0058                            ___flge 528A  
                          ___fleq 5B1A            colourcards_readRGBC@mL 002A  
          colourcards_readRGBC@mR 002C                         ??___aodiv 0011  
                       ??___fladd 0009                         ??___aomod 0011  
                          ___wmul 64C8                         ??___fldiv 0017  
                       ??___awdiv 000B                         ??___flneg 0005  
                       ??___awmod 0005                         ??___flmul 0009  
                       ??___flsub 0022                         ??___fltol 0005  
                          _efgtoa 0EB8                  ??_buggyLEDs_init 0001  
       colourcards_readRGBC@B_rel 003A         colourcards_readRGBC@G_rel 0036  
                          _floorf 4358         ??_colourclick_writetoaddr 0004  
                          clear_0 634E                            clear_1 635A  
      colourcards_testingRGBC@buf 00D0         colourcards_readRGBC@R_rel 0032  
                ___awdiv@quotient 000D                   ___awmod@divisor 0003  
                          isa$std 000001                   ___awmod@counter 0005  
                          pad@buf 0013                            dtoa@fp 001C  
                          left@mL 001A                            left@mR 001C  
                          _strcpy 5E3C                            _strlen 5F9C  
                          fputc@c 0001                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_forward 001E                         ??_isdigit 0003  
                 ___fpclassifyf@e 0009                   ___fpclassifyf@u 000B  
                 ___fpclassifyf@x 0001                      __mediumconst 0000  
                       ??_isspace 0003                            tblptrh 000FF7  
                       ??_isupper 0003                            tblptrl 000FF6  
                          tblptru 000FF8                         ?_ADC_init 0001  
                ?_sendCharSerial4 0001                         ??_reverse 001E  
                          stoa@cp 001A                            stoa@fp 000A  
                          putch@c 0001                  __end_of_vfprintf 5DDC  
                          stop@mL 001A                            stop@mR 001C  
                       ??_sprintf 005A                         ??_tolower 0009  
              __end_of_ADC_getval 65BA                      ?_USART4_init 0001  
                       ??_strncmp 0007         ??_colourcards_testingRGBC 005A  
                      ___flge@ff1 001A                        ___flge@ff2 001E  
                 ??___fpclassifyf 0005                      ___xxtofl@arg 000B  
                    ___xxtofl@exp 000A            colourclick_testing@buf 0181  
                    ___xxtofl@val 0001                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005                  __end_of_turnleft 608C  
                      __accesstop 0060           __end_of__initialization 6360  
                      ___flneg@f1 0001            ?_I2C_2_Master_RepStart 0001  
                   ___rparam_used 000001                        ___fltol@f1 0001  
                  __pcstackCOMRAM 0001                      __pidataBANK1 661E  
                   __end_of_fputc 58E0                     __end_of_fputs 62A6  
                   __end_of_right 5576                     __end_of_putch 6628  
   checkbatterylevel@batterylevel 0002                        ??_ADC_init 0001  
      __size_of_clicker2LEDs_init 000A                           ??_fputc 0005  
                         ??_fputs 000E                           ??_right 0020  
   __size_of_colourclickLEDs_init 000E                           ??_putch 0001  
 __end_of_colourclick_writetoaddr 6530                        __pbssBANK1 0100  
                      __pbssBANK2 0200                 _checkbatterylevel 6530  
              ?_checkbatterylevel 0001                      _T2CLKCONbits 000FBF  
                         ?___flge 001A                           ?___fleq 0001  
                         ?___wmul 0001                           ?_efgtoa 003C  
 __end_of_colourcards_testingRGBC 258C               ??_checkbatterylevel 0002  
                         ?_floorf 0028                           ?_strcpy 0001  
                         ?_strlen 0001                         ?___xxtofl 0001  
                         _SP4BRGH 000EE6                           _SP4BRGL 000EE5  
              __size_of_vfpfcnvrt 05E8                           _PWM6DCH 000FA3  
                         _PWM7DCH 000FA0                           _SSP2ADD 000ED6  
                         _SSP2BUF 000ED5                  _colourclick_init 6366  
       __end_of_checkbatterylevel 6550            __size_of_DCmotors_init 0050  
                       _ADREFbits 000F58                _I2C_2_Master_Start 6600  
              _I2C_2_Master_Write 65DE                           __Hparam 0000  
              __size_of_turnright 0050  __size_of_colourclick_calibration 0148  
                         __Lparam 0000           sendStringSerial4@string 0002  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___aodiv 4C34                           ___fladd 33F2  
                         ___aomod 4DBC                           ___fldiv 3CDC  
                         ___awdiv 59A6                           ___flneg 63D6  
                         ___awmod 5A6A                           ___flmul 38B2  
                         ___flsub 621C                           ___fltol 5184  
                 __size_of___wmul 0026               ?_I2C_2_Master_Start 0001  
             ?_I2C_2_Master_Write 0001                         ?_vfprintf 0052  
                    __psmallconst 0E00                   __size_of_efgtoa 0C6E  
     __end_of_colourclick_testing 5816                   __size_of_floorf 0212  
                         __pcinit 6328                           __ramtop 0E00  
                         __ptext0 5068                           __ptext1 6366  
                         __ptext2 6510                           __ptext3 65D0  
                         __ptext4 6476                           __ptext5 4F20  
                         __ptext6 5742                           __ptext7 1B26  
                         __ptext8 5EF8                           __ptext9 5D76  
   __size_of_clicker2buttons_init 000C                         ?_turnleft 0022  
                 __size_of_strcpy 005E                   __size_of_strlen 0050  
                       _T2CONbits 000FBD                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _forward 5C5E  
                         _isdigit 640E                        ??___xxtofl 0005  
                ___awmod@dividend 0001                           _isspace 5F4A  
                       _T2HLTbits 000FBE                           _isupper 639E  
                         efgtoa@c 0042                           efgtoa@d 0078  
                         efgtoa@e 0090                           efgtoa@f 003E  
                         efgtoa@g 008C                           efgtoa@h 0082  
                         efgtoa@i 008A                           efgtoa@l 0086  
                         efgtoa@m 0072                           efgtoa@n 0092  
                         efgtoa@p 007C                           efgtoa@t 006C  
                         efgtoa@u 0094                           efgtoa@w 007E  
                         _reverse 5BC4                     _RxBufWriteCnt 0130  
                         atoi@neg 000E      colourcards_testingRGBC@B_rel 00FC  
    colourcards_testingRGBC@G_rel 00F8                           _sprintf 5EF8  
                         _tolower 5DDC              ??_I2C_2_Master_Start 0002  
                         left@deg 001E              ??_I2C_2_Master_Write 0002  
                         _strncmp 5660      colourcards_testingRGBC@R_rel 00F4  
            end_of_initialization 6360      __end_of_colourcards_readRGBC 2E0A  
                         floorf@e 0036                           floorf@m 0032  
                         floorf@u 0038                           floorf@x 0028  
                ADC_getval@tmpval 0001                           fputc@fp 0003  
            __size_of_USART4_init 0020                           fputs@fp 000C  
                         right@mL 001A                           right@mR 001C  
               __end_of_vfpfcnvrt 33F2                        efgtoa@mode 0081  
                      efgtoa@sign 007A                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
  colourclick_calibration@current 00DB    colourclick_calibration@initial 00D3  
                      ??_vfprintf 0058      colourclick_writetoaddr@value 0003  
                         strcpy@d 0009                           strlen@a 0003  
                         strcpy@s 0007                           strlen@s 0001  
                   _DCmotors_init 61CC                         _PORTFbits 000F8E  
                      ??_turnleft 0028                       ___fladd@grs 0010  
        colourclick_calibration@i 00D2                     ___xxtofl@sign 0009  
                       _TRISAbits 000F81                         _TRISCbits 000F83  
                       _TRISDbits 000F84                         _TRISEbits 000F85  
               __end_of_turnright 603C                         _TRISFbits 000F86  
                       _TRISGbits 000F87                         _TRISHbits 000F88  
                     ___fldiv@grs 0022                       ___fldiv@rem 001B  
   __size_of_colourclick_readRGBC 005E                 __size_of_ADC_init 001A  
         ??_I2C_2_Master_RepStart 0002              colourclick_readB@tmp 000A  
            colourclick_readC@tmp 000A        __size_of_checkbatterylevel 0020  
            colourclick_readG@tmp 000A                       _CM1CON0bits 000ED0  
                     _CM1CON1bits 000ED1              colourclick_readR@tmp 000A  
                     ___flmul@grs 000E                      _EUSART4RXbuf 0100  
                    _EUSART4TXbuf 0200         sendCharSerial4@charToSend 0001  
                      main@motorL 01BD                        main@motorR 01C6  
        __size_of_DCmotors_setPWM 01D4                    __end_of___flge 538E  
      colourclick_readRGBC@tmpval 000C                    __end_of___fleq 5BC4  
                  ?_DCmotors_init 0001                       vfpfcnvrt@ap 004C  
                     vfpfcnvrt@cp 00A0                       vfpfcnvrt@ct 00AA  
                     vfpfcnvrt@fp 0048                       vfpfcnvrt@ll 0098  
                  __end_of___wmul 64EE                    __end_of_efgtoa 1B26  
                  __end_of_floorf 456A                        floorf@F527 0114  
                  __end_of_strcpy 5E9A                    __end_of_strlen 5FEC  
            colourclick_testing@B 01AF              colourclick_testing@C 01B1  
            colourclick_testing@G 01AD              colourclick_testing@R 01AB  
             start_initialization 6328                       __end_of_abs 6328  
                     __end_of_pad 59A6                     _TxBufWriteCnt 012E  
                _unknowncard_flag 012B                   _returnhome_flag 012A  
        __size_of_sendCharSerial4 0018             __end_of___fpclassifyf 548C  
         _colourclick_calibration 4F20                      turnright@deg 0026  
                     vfprintf@fmt 0054          ?_colourclick_writetoaddr 0003  
                        ??___flge 0022                          ??___fleq 0009  
    __end_of_colourclickLEDs_init 65DE                          ??___wmul 0005  
        __end_of_colourclick_init 639E                          ??_efgtoa 0043  
        colourcards_testingRGBC@B 00F0          colourcards_testingRGBC@C 00F2  
        colourcards_testingRGBC@G 00EE          colourcards_testingRGBC@R 00EC  
                     __pdataBANK1 01CF                          ??_floorf 002C  
            _colourcards_readRGBC 258C                          ??_strcpy 0005  
                        ??_strlen 0003                         ___fladd@a 0005  
                       ___fladd@b 0001                         ___fldiv@a 0013  
                       ___fldiv@b 000F                         ___flmul@a 0005  
                       ___flmul@b 0001                         ___flsub@a 001E  
                       ___flsub@b 001A                     __pcstackBANK0 0060  
                   __pcstackBANK1 0181          ?_colourcards_testingRGBC 0001  
                ___aodiv@dividend 0001           __size_of_buggyLEDs_init 0016  
               __size_of___xxtofl 01B4                         _atoi$3104 0010  
                       _atoi$3105 0014                         _atoi$3106 0012  
                       __pnvBANK1 01D6                       _efgtoa$3031 0064  
                     _efgtoa$3026 0060                       _efgtoa$3035 0066  
                     _efgtoa$3027 0062                       _efgtoa$3036 0068  
                     _efgtoa$3037 006A                         _dtoa$3002 002E  
                     _clear_lower 0126                       _clear_upper 0124  
                 ??_DCmotors_init 0001                          ?___aodiv 0001  
                        ?___fladd 0001                          ?___aomod 0001  
                        ?___fldiv 000F                          ?___awdiv 0007  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 0001  
                        ?___flsub 001A                          ?___fltol 0001  
           ?_colourcards_readRGBC 0028              I2C_2_Master_Read@ack 0003  
               __size_of_vfprintf 0066                 ??_DCmotors_setPWM 0011  
            I2C_2_Master_Read@tmp 0004             _interrupts_lowerbound 0128  
                     __smallconst 0E00                          ?_forward 001A  
                        ?_isdigit 0001                 _I2C_2_Master_Idle 64A0  
               _I2C_2_Master_Init 6476                 _I2C_2_Master_Read 62A6  
               _I2C_2_Master_Stop 65F6                          ?_isspace 0001  
               __size_of_turnleft 0050                          ?_isupper 0001  
                    _RxBufReadCnt 012F                          _ADC_init 6570  
                        ?_reverse 001A                ?_I2C_2_Master_Idle 0001  
              ?_I2C_2_Master_Init 0001                ?_I2C_2_Master_Read 0001  
              ?_I2C_2_Master_Stop 0001                          ?_sprintf 00AE  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_right 00EA                    __size_of_putch 0002  
       ??_colourclick_calibration 00D0      __end_of_clicker2buttons_init 65F6  
               _sendStringSerial4 6446               ??_I2C_2_Master_Idle 0001  
             ??_I2C_2_Master_Init 0001               ??_I2C_2_Master_Read 0002  
                  ___wmul@product 0005                          _LATAbits 000F79  
             ??_I2C_2_Master_Stop 0002                          _LATCbits 000F7B  
               _colourclickLEDs_C 64EE                          _LATDbits 000F7C  
                        _LATEbits 000F7D                          _LATFbits 000F7E  
                        _LATGbits 000F7F                          _LATHbits 000F80  
                        _PIE0bits 000E29                ?_sendStringSerial4 0002  
                        _PIE4bits 000E2D                ?_colourclickLEDs_C 0001  
                        _PIR0bits 000E33                          _PIR4bits 000E37  
               ??_sendCharSerial4 0001                          _SSP2CON2 000EDA  
             ??_sendStringSerial4 0004            DCmotors_setPWM@PWMduty 0018  
      colourclick_testing@ambient 01A9                          _SSP2STAT 000ED8  
             ??_colourclickLEDs_C 0001                 _colourclick_readB 617C  
               _colourclick_readC 612C                 _colourclick_readG 60DC  
               _colourclick_readR 608C                         _vfpfcnvrt 2E0A  
                      _ADCON0bits 000F60         __end_of_I2C_2_Master_Idle 64C8  
       __end_of_I2C_2_Master_Init 64A0         __end_of_I2C_2_Master_Read 62E8  
      colourclick_testing@current 005C                 ___wmul@multiplier 0001  
      colourclick_testing@initial 005A                ?_colourclick_readB 0005  
              ?_colourclick_readC 0005                ?_colourclick_readG 0005  
              ?_colourclick_readR 0005         __end_of_I2C_2_Master_Stop 6600  
           _interrupts_upperbound 01D6       I2C_2_Master_Write@data_byte 0002  
               _DCmotors_turntime 01D8      __size_of_colourclick_testing 00D4  
                    _TxBufReadCnt 012D                      _isspace$3135 0007  
                      _CM1NCHbits 000ED2               ??_colourclick_readB 0007  
             ??_colourclick_readC 0007               ??_colourclick_readG 0007  
             ??_colourclick_readR 0007                        _CM1PCHbits 000ED3  
                      vfpfcnvrt@c 00AD                        vfpfcnvrt@f 00A6  
                   ??_USART4_init 0001                         copy_data0 633C  
       __end_of_sendStringSerial4 6476       __size_of_I2C_2_Master_Start 000A  
            _colourclickLEDs_init 65D0       __size_of_I2C_2_Master_Write 000C  
                       _turnright 5FEC         __end_of_colourclickLEDs_C 6510  
                     turnleft@deg 0026    __size_of_I2C_2_Master_RepStart 000A  
   __end_of_I2C_2_Master_RepStart 6614                          __Hrparam 0000  
                     turnright@mL 0022                       turnright@mR 0024  
                      _ADC_getval 65A2      __end_of_colourclick_readRGBC 5EF8  
                      vfprintf@ap 0056                          __Lrparam 0000  
                      vfprintf@fp 0052         __end_of_colourclick_readB 61CC  
       __end_of_colourclick_readC 617C         __end_of_colourclick_readG 612C  
       __end_of_colourclick_readR 60DC                         forward@mL 001A  
                       forward@mR 001C            ??_colourcards_readRGBC 002E  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of___fldiv 039A  
                __size_of___awdiv 00C4                  __size_of___flneg 0038  
                __size_of___awmod 00B0                  __size_of___flmul 042A  
                __size_of___flsub 0046                  __size_of___fltol 0106  
                      ?_vfpfcnvrt 0048   __end_of_colourclick_calibration 5068  
                 ___aodiv@divisor 0009                   ___aodiv@counter 0011  
                      _ANSELDbits 000EA7                ___fpclassifyf@F465 0118  
                      _ANSELFbits 000EB4                        sprintf@fmt 00B0  
                        ___xxtofl 473E                    _buggyLEDs_init 65BA  
                __size_of_forward 009A                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 2E0A  
                        __ptext11 5660                          __ptext20 621C  
                        __ptext12 4A96                          __ptext21 33F2  
                        __ptext13 0EB8                          __ptext30 5816  
                        __ptext22 63D6                          __ptext14 5DDC  
                        __ptext31 6626                          __ptext23 38B2  
                        __ptext15 639E                          __ptext40 64EE  
                        __ptext32 62E8                          __ptext24 5B1A  
                        __ptext16 5E3C                          __ptext41 258C  
                        __ptext33 4DBC                          __ptext25 5A6A  
                        __ptext17 4358                          __ptext50 64C8  
                        __ptext42 5FEC                          __ptext34 4C34  
                        __ptext26 4076                          __ptext18 538E  
                        __ptext51 59A6                          __ptext43 603C  
                        __ptext35 48F2                          __ptext27 58E0  
                        __ptext19 5184                          __ptext60 660A  
                        __ptext52 5E9A                          __ptext44 548C  
                        __ptext36 5F4A                          __ptext28 5F9C  
                        __ptext61 62A6                          __ptext53 608C  
                        __ptext45 5576                          __ptext37 640E  
                        __ptext29 6262                          __ptext70 65EA  
                        __ptext62 64A0                          __ptext54 60DC  
                        __ptext46 5CF8                          __ptext38 6446  
                        __ptext71 6614                          __ptext63 473E  
                        __ptext55 612C                          __ptext47 5BC4  
                        __ptext39 658A                          __ptext72 65BA  
                        __ptext64 528A                          __ptext56 617C  
                        __ptext48 5C5E                          __ptext73 6570  
                        __ptext65 3CDC                          __ptext57 65DE  
                        __ptext49 456A                          __ptext66 6530  
                        __ptext58 65F6                          __ptext67 65A2  
                        __ptext59 6600                          __ptext68 6550  
                        __ptext69 61CC                  __size_of_isupper 0038  
                __size_of_reverse 009A             ?_colourclickLEDs_init 0001  
                    _SSP2CON1bits 000ED9                      _SSP2CON2bits 000EDA  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                      ?_turnright 0022                        strcpy@dest 0001  
                __size_of_strncmp 00E2                     __size_of_atoi 01A4  
                   __size_of_main 011C                     __size_of_dtoa 02E2  
                   __size_of_left 00EA                     __size_of_stoa 019E  
                   __size_of_stop 007E               __end_of_USART4_init 6570  
                       reverse@mL 001A                         reverse@mR 001C  
                        efgtoa@fp 003C                          efgtoa@ne 0070  
                        efgtoa@pp 006E                          efgtoa@ou 0074  
                       stoa@F1163 01CF                          isa$xinst 000000  
                      _RC4STAbits 000EE7                          _vfprintf 5D76  
               ?_colourclick_init 0001                ??_colourclick_init 0005  
      __size_of_I2C_2_Master_Idle 0028        __size_of_I2C_2_Master_Init 002A  
      __size_of_I2C_2_Master_Read 0042                  ___aomod@dividend 0001  
                DCmotors_setPWM@m 000F              _clicker2buttons_init 65EA  
      __size_of_I2C_2_Master_Stop 000A                          _turnleft 603C  
                      turnleft@mL 0022                        turnleft@mR 0024  
          __end_of_buggyLEDs_init 65D0                    _vfpfcnvrt$3062 00A2  
                  _vfpfcnvrt$3067 00A4                        _INTCONbits 000FF2  
__size_of_colourclick_writetoaddr 0020    colourclick_writetoaddr@address 0004  
                        isdigit@c 0001                       _PWM6CONbits 000FA4  
   colourcards_testingRGBC@tmpval 00E4        __size_of_sendStringSerial4 0030  
                     _PWM7CONbits 000FA1        __size_of_colourclickLEDs_C 0022  
                       sprintf@ap 00C8                      _DAC1CON0bits 000EC6  
                    _DAC1CON1bits 000EC7                          isspace@c 0001  
                        right@deg 001E                         strcpy@src 0003  
                        isupper@c 0001  __size_of_colourcards_testingRGBC 0A66  
                       strncmp@_l 0001                         strncmp@_r 0003  
                 _DCmotors_setPWM 456A                       ?_ADC_getval 0001  
                     efgtoa@nmode 0080        __size_of_colourclick_readB 0050  
      __size_of_colourclick_readC 0050        __size_of_colourclick_readG 0050  
      __size_of_colourclick_readR 0050                   ___aomod@divisor 0009  
                     ??_vfpfcnvrt 004E                          stoa@nuls 000F  
                 ___aomod@counter 0011             ?_clicker2buttons_init 0001  
                        sprintf@f 00CA                          tolower@c 0007  
                        sprintf@s 00AE                   ?_buggyLEDs_init 0001  
          __size_of___fpclassifyf 00FE                        _SSP2DATPPS 000E1D  
                      _SSP2CLKPPS 000E1C                          strncmp@l 0008  
                        strncmp@n 0005                          strncmp@r 000A  
          ??_colourclickLEDs_init 0002              _colourclick_readRGBC 5E9A  
                   ___fladd@signs 000D                       _USART4_init 6550  
                      _TX4STAbits 000EE8                       ??_turnright 0028  
                    ___aodiv@sign 0012                   _sendCharSerial4 658A  
                    ___fladd@aexp 000E                      ___fladd@bexp 000F  
                    ___aomod@sign 0012               _colourclick_testing 5742  
