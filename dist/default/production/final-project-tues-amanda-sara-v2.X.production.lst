

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 13 04:23:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    99                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   111                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   112                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   113  0000                     
   114                           ; Version 2.20
   115                           ; Generated 05/05/2020 GMT
   116                           ; 
   117                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC18F67K40 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     
   149                           	psect	idataBANK1
   150  006248                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for stoa@F1163
   154  006248  28                 	db	40
   155  006249  6E                 	db	110
   156  00624A  75                 	db	117
   157  00624B  6C                 	db	108
   158  00624C  6C                 	db	108
   159  00624D  29                 	db	41
   160  00624E  00                 	db	0
   161                           
   162                           	psect	nvCOMRAM
   163  000055                     __pnvCOMRAM:
   164                           	callstack 0
   165  000055                     _interrupts_upperbound:
   166                           	callstack 0
   167  000055                     	ds	2
   168                           
   169                           	psect	nvBANK1
   170  0001D9                     __pnvBANK1:
   171                           	callstack 0
   172  0001D9                     _DCmotors_turntime:
   173                           	callstack 0
   174  0001D9                     	ds	2
   175  0000                     _INT1PPS	set	3569
   176  0000                     _CM1CON1bits	set	3793
   177  0000                     _CM1CON0bits	set	3792
   178  0000                     _CM1PCHbits	set	3795
   179  0000                     _CM1NCHbits	set	3794
   180  0000                     _DAC1CON1bits	set	3783
   181  0000                     _DAC1CON0bits	set	3782
   182  0000                     _RC7PPS	set	3689
   183  0000                     _RE2PPS	set	3700
   184  0000                     _PIE4bits	set	3629
   185  0000                     _TX4REG	set	3812
   186  0000                     _RC4REG	set	3811
   187  0000                     _PIR4bits	set	3639
   188  0000                     _RC4STAbits	set	3815
   189  0000                     _SP4BRGH	set	3814
   190  0000                     _SP4BRGL	set	3813
   191  0000                     _TX4STAbits	set	3816
   192  0000                     _BAUD4CONbits	set	3817
   193  0000                     _RX4PPS	set	3605
   194  0000                     _RC0PPS	set	3682
   195  0000                     _SSP2BUF	set	3797
   196  0000                     _SSP2CON2bits	set	3802
   197  0000                     _SSP2CON2	set	3802
   198  0000                     _SSP2STAT	set	3800
   199  0000                     _RD6PPS	set	3696
   200  0000                     _RD5PPS	set	3695
   201  0000                     _SSP2CLKPPS	set	3612
   202  0000                     _SSP2DATPPS	set	3613
   203  0000                     _ANSELDbits	set	3751
   204  0000                     _SSP2ADD	set	3798
   205  0000                     _SSP2CON1bits	set	3801
   206  0000                     _ANSELFbits	set	3764
   207  0000                     _PIR0bits	set	3635
   208  0000                     _IPR0bits	set	3615
   209  0000                     _PIE0bits	set	3625
   210  0000                     _ANSELBbits	set	3738
   211  0000                     _ADPCH	set	3935
   212  0000                     _ADREFbits	set	3928
   213  0000                     _PWM7CONbits	set	4001
   214  0000                     _PWM6CONbits	set	4004
   215  0000                     _LATCbits	set	3963
   216  0000                     _LATEbits	set	3965
   217  0000                     _TRISEbits	set	3973
   218  0000                     _T2PR	set	4028
   219  0000                     _T2CLKCONbits	set	4031
   220  0000                     _T2HLTbits	set	4030
   221  0000                     _T2CONbits	set	4029
   222  0000                     _TRISCbits	set	3971
   223  0000                     _TRISAbits	set	3969
   224  0000                     _TRISGbits	set	3975
   225  0000                     _TRISHbits	set	3976
   226  0000                     _TRISDbits	set	3972
   227  0000                     _ADRESH	set	3940
   228  0000                     _ADCON0bits	set	3936
   229  0000                     _TRISFbits	set	3974
   230  0000                     _LATFbits	set	3966
   231  0000                     _LATAbits	set	3961
   232  0000                     _LATGbits	set	3967
   233  0000                     _LATHbits	set	3968
   234  0000                     _INTCONbits	set	4082
   235  0000                     _TRISBbits	set	3970
   236  0000                     _LATDbits	set	3964
   237  0000                     _PORTFbits	set	3982
   238  0000                     _LATG	set	3967
   239  0000                     _PWM7DCH	set	4000
   240  0000                     _LATE	set	3965
   241  0000                     _PWM6DCH	set	4003
   242                           
   243                           	psect	smallconst
   244  000E00                     __psmallconst:
   245                           	callstack 0
   246  000E00  00                 	db	0
   247  000E01                     STR_1:
   248                           
   249                           ; BSR set to: 14
   250  000E01  52                 	db	82	;'R'
   251  000E02  47                 	db	71	;'G'
   252  000E03  42                 	db	66	;'B'
   253  000E04  43                 	db	67	;'C'
   254  000E05  3A                 	db	58	;':'
   255  000E06  20                 	db	32
   256  000E07  25                 	db	37
   257  000E08  69                 	db	105	;'i'
   258  000E09  20                 	db	32
   259  000E0A  25                 	db	37
   260  000E0B  69                 	db	105	;'i'
   261  000E0C  20                 	db	32
   262  000E0D  25                 	db	37
   263  000E0E  69                 	db	105	;'i'
   264  000E0F  20                 	db	32
   265  000E10  25                 	db	37
   266  000E11  69                 	db	105	;'i'
   267  000E12  20                 	db	32
   268  000E13  20                 	db	32
   269  000E14  20                 	db	32
   270  000E15  20                 	db	32
   271  000E16  20                 	db	32
   272  000E17  52                 	db	82	;'R'
   273  000E18  47                 	db	71	;'G'
   274  000E19  42                 	db	66	;'B'
   275  000E1A  43                 	db	67	;'C'
   276  000E1B  5F                 	db	95	;'_'
   277  000E1C  72                 	db	114	;'r'
   278  000E1D  65                 	db	101	;'e'
   279  000E1E  6C                 	db	108	;'l'
   280  000E1F  3A                 	db	58	;':'
   281  000E20  20                 	db	32
   282  000E21  25                 	db	37
   283  000E22  2E                 	db	46
   284  000E23  33                 	db	51	;'3'
   285  000E24  66                 	db	102	;'f'
   286  000E25  20                 	db	32
   287  000E26  25                 	db	37
   288  000E27  2E                 	db	46
   289  000E28  33                 	db	51	;'3'
   290  000E29  66                 	db	102	;'f'
   291  000E2A  20                 	db	32
   292  000E2B  25                 	db	37
   293  000E2C  2E                 	db	46
   294  000E2D  33                 	db	51	;'3'
   295  000E2E  66                 	db	102	;'f'
   296  000E2F  20                 	db	32
   297  000E30  20                 	db	32
   298  000E31  20                 	db	32
   299  000E32  20                 	db	32
   300  000E33  20                 	db	32
   301  000E34  43                 	db	67	;'C'
   302  000E35  6F                 	db	111	;'o'
   303  000E36  6C                 	db	108	;'l'
   304  000E37  6F                 	db	111	;'o'
   305  000E38  75                 	db	117	;'u'
   306  000E39  72                 	db	114	;'r'
   307  000E3A  3A                 	db	58	;':'
   308  000E3B  20                 	db	32
   309  000E3C  25                 	db	37
   310  000E3D  73                 	db	115	;'s'
   311  000E3E  0A                 	db	10
   312  000E3F  0D                 	db	13
   313  000E40  00                 	db	0
   314  000E41                     STR_19:
   315                           
   316                           ; BSR set to: 14
   317  000E41  52                 	db	82	;'R'
   318  000E42  47                 	db	71	;'G'
   319  000E43  42                 	db	66	;'B'
   320  000E44  43                 	db	67	;'C'
   321  000E45  3A                 	db	58	;':'
   322  000E46  20                 	db	32
   323  000E47  25                 	db	37
   324  000E48  69                 	db	105	;'i'
   325  000E49  20                 	db	32
   326  000E4A  25                 	db	37
   327  000E4B  69                 	db	105	;'i'
   328  000E4C  20                 	db	32
   329  000E4D  25                 	db	37
   330  000E4E  69                 	db	105	;'i'
   331  000E4F  20                 	db	32
   332  000E50  25                 	db	37
   333  000E51  69                 	db	105	;'i'
   334  000E52  20                 	db	32
   335  000E53  20                 	db	32
   336  000E54  20                 	db	32
   337  000E55  20                 	db	32
   338  000E56  20                 	db	32
   339  000E57  54                 	db	84	;'T'
   340  000E58  68                 	db	104	;'h'
   341  000E59  72                 	db	114	;'r'
   342  000E5A  65                 	db	101	;'e'
   343  000E5B  73                 	db	115	;'s'
   344  000E5C  68                 	db	104	;'h'
   345  000E5D  6F                 	db	111	;'o'
   346  000E5E  6C                 	db	108	;'l'
   347  000E5F  64                 	db	100	;'d'
   348  000E60  3A                 	db	58	;':'
   349  000E61  20                 	db	32
   350  000E62  25                 	db	37
   351  000E63  69                 	db	105	;'i'
   352  000E64  20                 	db	32
   353  000E65  25                 	db	37
   354  000E66  69                 	db	105	;'i'
   355  000E67  20                 	db	32
   356  000E68  25                 	db	37
   357  000E69  69                 	db	105	;'i'
   358  000E6A  0A                 	db	10
   359  000E6B  0D                 	db	13
   360  000E6C  00                 	db	0
   361  000E6D                     STR_10:
   362                           
   363                           ; BSR set to: 14
   364  000E6D  6C                 	db	108	;'l'
   365  000E6E  69                 	db	105	;'i'
   366  000E6F  67                 	db	103	;'g'
   367  000E70  68                 	db	104	;'h'
   368  000E71  74                 	db	116	;'t'
   369  000E72  20                 	db	32
   370  000E73  62                 	db	98	;'b'
   371  000E74  6C                 	db	108	;'l'
   372  000E75  75                 	db	117	;'u'
   373  000E76  65                 	db	101	;'e'
   374  000E77  00                 	db	0
   375  000E78                     
   376                           ; BSR set to: 14
   377  000E78  75                 	db	117	;'u'
   378  000E79  6E                 	db	110	;'n'
   379  000E7A  6B                 	db	107	;'k'
   380  000E7B  6E                 	db	110	;'n'
   381  000E7C  6F                 	db	111	;'o'
   382  000E7D  77                 	db	119	;'w'
   383  000E7E  6E                 	db	110	;'n'
   384  000E7F  00                 	db	0
   385  000E80                     
   386                           ; BSR set to: 14
   387  000E80  6F                 	db	111	;'o'
   388  000E81  72                 	db	114	;'r'
   389  000E82  61                 	db	97	;'a'
   390  000E83  6E                 	db	110	;'n'
   391  000E84  67                 	db	103	;'g'
   392  000E85  65                 	db	101	;'e'
   393  000E86  00                 	db	0
   394  000E87                     
   395                           ; BSR set to: 14
   396  000E87  79                 	db	121	;'y'
   397  000E88  65                 	db	101	;'e'
   398  000E89  6C                 	db	108	;'l'
   399  000E8A  6C                 	db	108	;'l'
   400  000E8B  6F                 	db	111	;'o'
   401  000E8C  77                 	db	119	;'w'
   402  000E8D  00                 	db	0
   403  000E8E                     
   404                           ; BSR set to: 14
   405  000E8E  77                 	db	119	;'w'
   406  000E8F  68                 	db	104	;'h'
   407  000E90  69                 	db	105	;'i'
   408  000E91  74                 	db	116	;'t'
   409  000E92  65                 	db	101	;'e'
   410  000E93  00                 	db	0
   411  000E94                     
   412                           ; BSR set to: 14
   413  000E94  67                 	db	103	;'g'
   414  000E95  72                 	db	114	;'r'
   415  000E96  65                 	db	101	;'e'
   416  000E97  65                 	db	101	;'e'
   417  000E98  6E                 	db	110	;'n'
   418  000E99  00                 	db	0
   419  000E9A                     
   420                           ; BSR set to: 14
   421  000E9A  70                 	db	112	;'p'
   422  000E9B  69                 	db	105	;'i'
   423  000E9C  6E                 	db	110	;'n'
   424  000E9D  6B                 	db	107	;'k'
   425  000E9E  00                 	db	0
   426  000E9F                     STR_20:
   427                           
   428                           ; BSR set to: 14
   429  000E9F  49                 	db	73	;'I'
   430  000EA0  4E                 	db	78	;'N'
   431  000EA1  46                 	db	70	;'F'
   432  000EA2  00                 	db	0
   433  000EA3                     STR_24:
   434                           
   435                           ; BSR set to: 14
   436  000EA3  4E                 	db	78	;'N'
   437  000EA4  41                 	db	65	;'A'
   438  000EA5  4E                 	db	78	;'N'
   439  000EA6  00                 	db	0
   440  000EA7                     STR_21:
   441                           
   442                           ; BSR set to: 14
   443  000EA7  69                 	db	105	;'i'
   444  000EA8  6E                 	db	110	;'n'
   445  000EA9  66                 	db	102	;'f'
   446  000EAA  00                 	db	0
   447  000EAB                     STR_25:
   448                           
   449                           ; BSR set to: 14
   450  000EAB  6E                 	db	110	;'n'
   451  000EAC  61                 	db	97	;'a'
   452  000EAD  6E                 	db	110	;'n'
   453  000EAE  00                 	db	0
   454  000EAF                     
   455                           ; BSR set to: 14
   456  000EAF  72                 	db	114	;'r'
   457  000EB0  65                 	db	101	;'e'
   458  000EB1  64                 	db	100	;'d'
   459  000EB2  00                 	db	0
   460  000EB3                     STR_28:
   461                           
   462                           ; BSR set to: 14
   463  000EB3  6C                 	db	108	;'l'
   464  000EB4  66                 	db	102	;'f'
   465  000EB5  00                 	db	0
   466  000EB6  00                 	db	0	; dummy byte at the end
   467  0000                     
   468                           ; #config settings
   469                           
   470                           	psect	cinit
   471  00596C                     __pcinit:
   472                           	callstack 0
   473  00596C                     start_initialization:
   474                           	callstack 0
   475  00596C                     __initialization:
   476                           	callstack 0
   477                           
   478                           ; Initialize objects allocated to BANK1 (7 bytes)
   479                           ; load TBLPTR registers with __pidataBANK1
   480  00596C  0E48               	movlw	low __pidataBANK1
   481  00596E  6EF6               	movwf	tblptrl,c
   482  005970  0E62               	movlw	high __pidataBANK1
   483  005972  6EF7               	movwf	tblptrh,c
   484  005974  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   485  005976  6EF8               	movwf	tblptru,c
   486  005978  EE01  F0D2         	lfsr	0,__pdataBANK1
   487  00597C  EE10 F007          	lfsr	1,7
   488  005980                     copy_data0:
   489  005980  0009               	tblrd		*+
   490  005982  CFF5 FFEE          	movff	tablat,postinc0
   491  005986  50E5               	movf	postdec1,w,c
   492  005988  50E1               	movf	fsr1l,w,c
   493  00598A  E1FA               	bnz	copy_data0
   494                           
   495                           ; Clear objects allocated to BANK2 (60 bytes)
   496  00598C  EE02  F000         	lfsr	0,__pbssBANK2
   497  005990  0E3C               	movlw	60
   498  005992                     clear_0:
   499  005992  6AEE               	clrf	postinc0,c
   500  005994  06E8               	decf	wreg,f,c
   501  005996  E1FD               	bnz	clear_0
   502                           
   503                           ; Clear objects allocated to BANK1 (117 bytes)
   504  005998  EE01  F000         	lfsr	0,__pbssBANK1
   505  00599C  0E75               	movlw	117
   506  00599E                     clear_1:
   507  00599E  6AEE               	clrf	postinc0,c
   508  0059A0  06E8               	decf	wreg,f,c
   509  0059A2  E1FD               	bnz	clear_1
   510                           
   511                           ; Clear objects allocated to BANK0 (7 bytes)
   512  0059A4  EE00  F0EF         	lfsr	0,__pbssBANK0
   513  0059A8  0E07               	movlw	7
   514  0059AA                     clear_2:
   515  0059AA  6AEE               	clrf	postinc0,c
   516  0059AC  06E8               	decf	wreg,f,c
   517  0059AE  E1FD               	bnz	clear_2
   518                           
   519                           ; Clear objects allocated to COMRAM (5 bytes)
   520  0059B0  6A54               	clrf	(__pbssCOMRAM+4)& (0+255),c
   521  0059B2  6A53               	clrf	(__pbssCOMRAM+3)& (0+255),c
   522  0059B4  6A52               	clrf	(__pbssCOMRAM+2)& (0+255),c
   523  0059B6  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   524  0059B8  6A50               	clrf	__pbssCOMRAM& (0+255),c
   525  0059BA                     end_of_initialization:
   526                           	callstack 0
   527  0059BA                     __end_of__initialization:
   528                           	callstack 0
   529  0059BA  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   530  0059BC  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   531  0059BE  0100               	movlb	0
   532  0059C0  EF0D  F026         	goto	_main	;jump to C main() function
   533                           
   534                           	psect	bssCOMRAM
   535  000050                     __pbssCOMRAM:
   536                           	callstack 0
   537  000050                     _flags:
   538                           	callstack 0
   539  000050                     	ds	2
   540  000052                     _interrupts_lowerbound:
   541                           	callstack 0
   542  000052                     	ds	2
   543  000054                     _TxBufWriteCnt:
   544                           	callstack 0
   545  000054                     	ds	1
   546                           
   547                           	psect	bssBANK0
   548  0000EF                     __pbssBANK0:
   549                           	callstack 0
   550  0000EF                     _prec:
   551                           	callstack 0
   552  0000EF                     	ds	2
   553  0000F1                     _returnhome_flag:
   554                           	callstack 0
   555  0000F1                     	ds	1
   556  0000F2                     _unknowncard_flag:
   557                           	callstack 0
   558  0000F2                     	ds	1
   559  0000F3                     _TxBufReadCnt:
   560                           	callstack 0
   561  0000F3                     	ds	1
   562  0000F4                     _RxBufReadCnt:
   563                           	callstack 0
   564  0000F4                     	ds	1
   565  0000F5                     _RxBufWriteCnt:
   566                           	callstack 0
   567  0000F5                     	ds	1
   568                           
   569                           	psect	bssBANK1
   570  000100                     __pbssBANK1:
   571                           	callstack 0
   572  000100                     _EUSART4RXbuf:
   573                           	callstack 0
   574  000100                     	ds	20
   575  000114                     floorf@F527:
   576                           	callstack 0
   577  000114                     	ds	4
   578  000118                     ___fpclassifyf@F465:
   579                           	callstack 0
   580  000118                     	ds	4
   581  00011C                     _nout:
   582                           	callstack 0
   583  00011C                     	ds	2
   584  00011E                     _width:
   585                           	callstack 0
   586  00011E                     	ds	2
   587  000120                     _clear_upper:
   588                           	callstack 0
   589  000120                     	ds	2
   590  000122                     _clear_lower:
   591                           	callstack 0
   592  000122                     	ds	2
   593  000124                     _colourcard_flag:
   594                           	callstack 0
   595  000124                     	ds	1
   596  000125                     _dbuf:
   597                           	callstack 0
   598  000125                     	ds	80
   599                           
   600                           	psect	dataBANK1
   601  0001D2                     __pdataBANK1:
   602                           	callstack 0
   603  0001D2                     stoa@F1163:
   604                           	callstack 0
   605  0001D2                     	ds	7
   606                           
   607                           	psect	bssBANK2
   608  000200                     __pbssBANK2:
   609                           	callstack 0
   610  000200                     _EUSART4TXbuf:
   611                           	callstack 0
   612  000200                     	ds	60
   613                           
   614                           	psect	cstackBANK1
   615  000175                     __pcstackBANK1:
   616                           	callstack 0
   617  000175                     colourclick_testing@buf:
   618                           	callstack 0
   619                           
   620                           ; 40 bytes @ 0x0
   621  000175                     	ds	40
   622  00019D                     colourclick_testing@ambient:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x28
   626  00019D                     	ds	2
   627  00019F                     colourclick_testing@R:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2A
   631  00019F                     	ds	2
   632  0001A1                     colourclick_testing@G:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x2C
   636  0001A1                     	ds	2
   637  0001A3                     colourclick_testing@B:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x2E
   641  0001A3                     	ds	2
   642  0001A5                     colourclick_testing@C:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x30
   646  0001A5                     	ds	2
   647  0001A7                     colourclick_calibration@i:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x32
   651  0001A7                     	ds	1
   652  0001A8                     colourclick_calibration@initial:
   653                           	callstack 0
   654                           
   655                           ; 8 bytes @ 0x33
   656  0001A8                     	ds	8
   657  0001B0                     colourclick_calibration@current:
   658                           	callstack 0
   659                           
   660                           ; 8 bytes @ 0x3B
   661  0001B0                     	ds	8
   662  0001B8                     main@current:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x43
   666  0001B8                     	ds	8
   667  0001C0                     main@motorL:
   668                           	callstack 0
   669                           
   670                           ; 9 bytes @ 0x4B
   671  0001C0                     	ds	9
   672  0001C9                     main@motorR:
   673                           	callstack 0
   674                           
   675                           ; 9 bytes @ 0x54
   676  0001C9                     	ds	9
   677                           
   678                           	psect	cstackBANK0
   679  000060                     __pcstackBANK0:
   680                           	callstack 0
   681  000060                     ??_efgtoa:
   682  000060                     turnleft@mL:
   683                           	callstack 0
   684  000060                     turnright@mL:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x0
   688  000060                     	ds	2
   689  000062                     turnleft@mR:
   690                           	callstack 0
   691  000062                     turnright@mR:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2
   695  000062                     	ds	2
   696  000064                     turnleft@deg:
   697                           	callstack 0
   698  000064                     turnright@deg:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x4
   702  000064                     	ds	1
   703  000065                     _efgtoa$3244:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x5
   707  000065                     	ds	1
   708  000066                     ??_DCmotors_calibration:
   709  000066                     colourcards_readRGBC@abs:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x6
   713  000066                     	ds	1
   714  000067                     _efgtoa$3245:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x7
   718  000067                     	ds	1
   719  000068                     colourcards_readRGBC@mL:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x8
   723  000068                     	ds	1
   724  000069                     _efgtoa$3249:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x9
   728  000069                     	ds	1
   729  00006A                     colourcards_readRGBC@mR:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0xA
   733  00006A                     	ds	1
   734  00006B                     _efgtoa$3253:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0xB
   738  00006B                     	ds	1
   739  00006C                     colourcards_readRGBC@rel:
   740                           	callstack 0
   741                           
   742                           ; 12 bytes @ 0xC
   743  00006C                     	ds	1
   744  00006D                     _efgtoa$3254:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0xD
   748  00006D                     	ds	2
   749  00006F                     _efgtoa$3255:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0xF
   753  00006F                     	ds	2
   754  000071                     efgtoa@t:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x11
   758  000071                     	ds	2
   759  000073                     efgtoa@pp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x13
   763  000073                     	ds	2
   764  000075                     efgtoa@ne:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x15
   768  000075                     	ds	2
   769  000077                     efgtoa@m:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x17
   773  000077                     	ds	2
   774  000079                     efgtoa@ou:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x19
   778  000079                     	ds	4
   779  00007D                     efgtoa@d:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x1D
   783  00007D                     	ds	2
   784  00007F                     efgtoa@sign:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x1F
   788  00007F                     	ds	2
   789  000081                     efgtoa@p:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x21
   793  000081                     	ds	2
   794  000083                     efgtoa@w:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x23
   798  000083                     	ds	2
   799  000085                     efgtoa@nmode:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x25
   803  000085                     	ds	1
   804  000086                     efgtoa@mode:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x26
   808  000086                     	ds	1
   809  000087                     efgtoa@h:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x27
   813  000087                     	ds	4
   814  00008B                     efgtoa@l:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x2B
   818  00008B                     	ds	4
   819  00008F                     efgtoa@i:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x2F
   823  00008F                     	ds	2
   824  000091                     efgtoa@g:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x31
   828  000091                     	ds	4
   829  000095                     efgtoa@e:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x35
   833  000095                     	ds	2
   834  000097                     efgtoa@n:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x37
   838  000097                     	ds	2
   839  000099                     efgtoa@u:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x39
   843  000099                     	ds	4
   844  00009D                     ?_vfpfcnvrt:
   845                           	callstack 0
   846  00009D                     vfpfcnvrt@fp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x3D
   850  00009D                     	ds	2
   851  00009F                     vfpfcnvrt@fmt:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x3F
   855  00009F                     	ds	2
   856  0000A1                     vfpfcnvrt@ap:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x41
   860  0000A1                     	ds	2
   861  0000A3                     ??_vfpfcnvrt:
   862                           
   863                           ; 1 bytes @ 0x43
   864  0000A3                     	ds	4
   865  0000A7                     vfpfcnvrt@ll:
   866                           	callstack 0
   867                           
   868                           ; 8 bytes @ 0x47
   869  0000A7                     	ds	8
   870  0000AF                     vfpfcnvrt@cp:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x4F
   874  0000AF                     	ds	2
   875  0000B1                     _vfpfcnvrt$3280:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x51
   879  0000B1                     	ds	2
   880  0000B3                     _vfpfcnvrt$3285:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x53
   884  0000B3                     	ds	2
   885  0000B5                     vfpfcnvrt@f:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x55
   889  0000B5                     	ds	4
   890  0000B9                     vfpfcnvrt@ct:
   891                           	callstack 0
   892                           
   893                           ; 3 bytes @ 0x59
   894  0000B9                     	ds	3
   895  0000BC                     vfpfcnvrt@c:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x5C
   899  0000BC                     	ds	1
   900  0000BD                     ?_vfprintf:
   901                           	callstack 0
   902  0000BD                     vfprintf@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x5D
   906  0000BD                     	ds	2
   907  0000BF                     vfprintf@fmt:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x5F
   911  0000BF                     	ds	2
   912  0000C1                     vfprintf@ap:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x61
   916  0000C1                     	ds	2
   917  0000C3                     ?_sprintf:
   918                           	callstack 0
   919  0000C3                     sprintf@s:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x63
   923  0000C3                     	ds	2
   924  0000C5                     sprintf@fmt:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x65
   928  0000C5                     	ds	24
   929  0000DD                     sprintf@ap:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x7D
   933  0000DD                     	ds	2
   934  0000DF                     sprintf@f:
   935                           	callstack 0
   936                           
   937                           ; 6 bytes @ 0x7F
   938  0000DF                     	ds	6
   939  0000E5                     colourclick_testing@initial:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x85
   943  0000E5                     	ds	2
   944  0000E7                     colourclick_testing@current:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x87
   948  0000E7                     	ds	2
   949  0000E9                     ??_colourclick_testing:
   950                           
   951                           ; 1 bytes @ 0x89
   952  0000E9                     	ds	2
   953  0000EB                     ??_colourclick_calibration:
   954                           
   955                           ; 1 bytes @ 0x8B
   956  0000EB                     	ds	2
   957  0000ED                     ??_main:
   958                           
   959                           ; 1 bytes @ 0x8D
   960  0000ED                     	ds	2
   961                           
   962                           	psect	cstackCOMRAM
   963  000001                     __pcstackCOMRAM:
   964                           	callstack 0
   965  000001                     ??i2_I2C_2_Master_Idle:
   966  000001                     
   967                           ; 1 bytes @ 0x0
   968  000001                     	ds	1
   969  000002                     i2I2C_2_Master_Write@data_byte:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x1
   973  000002                     	ds	1
   974  000003                     i2colourclick_writetoaddr@value:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x2
   978  000003                     	ds	1
   979  000004                     i2colourclick_writetoaddr@address:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x3
   983  000004                     	ds	1
   984  000005                     ??i2_interrupts_colour:
   985                           
   986                           ; 1 bytes @ 0x4
   987  000005                     	ds	1
   988  000006                     ??_HighISR:
   989  000006                     
   990                           ; 1 bytes @ 0x5
   991  000006                     	ds	1
   992  000007                     ??_LowISR:
   993                           
   994                           ; 1 bytes @ 0x6
   995  000007                     	ds	1
   996  000008                     ??_DCmotors_adjustval:
   997  000008                     ??_I2C_2_Master_Idle:
   998  000008                     ?_strlen:
   999                           	callstack 0
  1000  000008                     ?___fpclassifyf:
  1001                           	callstack 0
  1002  000008                     ?_isupper:
  1003                           	callstack 0
  1004  000008                     ?_isdigit:
  1005                           	callstack 0
  1006  000008                     ?_strncmp:
  1007                           	callstack 0
  1008  000008                     ?_isspace:
  1009                           	callstack 0
  1010  000008                     ?___wmul:
  1011                           	callstack 0
  1012  000008                     ?___awmod:
  1013                           	callstack 0
  1014  000008                     ?___flneg:
  1015                           	callstack 0
  1016  000008                     ?___fltol:
  1017                           	callstack 0
  1018  000008                     ?___xxtofl:
  1019                           	callstack 0
  1020  000008                     ?___aodiv:
  1021                           	callstack 0
  1022  000008                     ?___aomod:
  1023                           	callstack 0
  1024  000008                     ADC_getval@tmpval:
  1025                           	callstack 0
  1026  000008                     colourclickLEDs_C@tog:
  1027                           	callstack 0
  1028  000008                     sendCharSerial4@charToSend:
  1029                           	callstack 0
  1030  000008                     DCmotors_init@PWMperiod:
  1031                           	callstack 0
  1032  000008                     ___wmul@multiplier:
  1033                           	callstack 0
  1034  000008                     ___awmod@dividend:
  1035                           	callstack 0
  1036  000008                     isdigit@c:
  1037                           	callstack 0
  1038  000008                     isspace@c:
  1039                           	callstack 0
  1040  000008                     isupper@c:
  1041                           	callstack 0
  1042  000008                     fputc@c:
  1043                           	callstack 0
  1044  000008                     strcpy@dest:
  1045                           	callstack 0
  1046  000008                     strlen@s:
  1047                           	callstack 0
  1048  000008                     strncmp@_l:
  1049                           	callstack 0
  1050  000008                     ___fleq@ff1:
  1051                           	callstack 0
  1052  000008                     ___flneg@f1:
  1053                           	callstack 0
  1054  000008                     ___fltol@f1:
  1055                           	callstack 0
  1056  000008                     ___xxtofl@val:
  1057                           	callstack 0
  1058  000008                     ___fpclassifyf@x:
  1059                           	callstack 0
  1060  000008                     ___aodiv@dividend:
  1061                           	callstack 0
  1062  000008                     ___aomod@dividend:
  1063                           	callstack 0
  1064                           
  1065                           ; 8 bytes @ 0x7
  1066  000008                     	ds	1
  1067  000009                     ??_I2C_2_Master_Read:
  1068  000009                     I2C_2_Master_Write@data_byte:
  1069                           	callstack 0
  1070  000009                     checkbatterylevel@batterylevel:
  1071                           	callstack 0
  1072  000009                     sendStringSerial4@string:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x8
  1076  000009                     	ds	1
  1077  00000A                     ??_isupper:
  1078  00000A                     ??_isdigit:
  1079  00000A                     ??_isspace:
  1080  00000A                     colourclick_writetoaddr@value:
  1081                           	callstack 0
  1082  00000A                     I2C_2_Master_Read@ack:
  1083                           	callstack 0
  1084  00000A                     DCmotors_adjustval@i:
  1085                           	callstack 0
  1086  00000A                     ___wmul@multiplicand:
  1087                           	callstack 0
  1088  00000A                     ___awmod@divisor:
  1089                           	callstack 0
  1090  00000A                     fputc@fp:
  1091                           	callstack 0
  1092  00000A                     strcpy@src:
  1093                           	callstack 0
  1094  00000A                     strlen@a:
  1095                           	callstack 0
  1096  00000A                     strncmp@_r:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x9
  1100  00000A                     	ds	1
  1101  00000B                     colourclick_writetoaddr@address:
  1102                           	callstack 0
  1103  00000B                     I2C_2_Master_Read@tmp:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0xA
  1107  00000B                     	ds	1
  1108  00000C                     ??_colourclick_init:
  1109  00000C                     ??_interrupts_colour:
  1110  00000C                     ??_fputc:
  1111  00000C                     ??___fpclassifyf:
  1112  00000C                     ??_strcpy:
  1113  00000C                     ??___fltol:
  1114  00000C                     ??___xxtofl:
  1115  00000C                     ?_colourclick_readR:
  1116                           	callstack 0
  1117  00000C                     ?_colourclick_readG:
  1118                           	callstack 0
  1119  00000C                     ?_colourclick_readB:
  1120                           	callstack 0
  1121  00000C                     ?_colourclick_readC:
  1122                           	callstack 0
  1123  00000C                     ___awmod@counter:
  1124                           	callstack 0
  1125  00000C                     ___wmul@product:
  1126                           	callstack 0
  1127  00000C                     strncmp@n:
  1128                           	callstack 0
  1129  00000C                     ___fleq@ff2:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0xB
  1133  00000C                     	ds	1
  1134  00000D                     ___awmod@sign:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0xC
  1138  00000D                     	ds	1
  1139  00000E                     ??_strncmp:
  1140  00000E                     ??_colourclick_readR:
  1141  00000E                     ??_colourclick_readG:
  1142  00000E                     ??_colourclick_readB:
  1143  00000E                     ??_colourclick_readC:
  1144  00000E                     ?_tolower:
  1145                           	callstack 0
  1146  00000E                     ?___awdiv:
  1147                           	callstack 0
  1148  00000E                     _isspace$3353:
  1149                           	callstack 0
  1150  00000E                     ___awdiv@dividend:
  1151                           	callstack 0
  1152  00000E                     strcpy@s:
  1153                           	callstack 0
  1154  00000E                     tolower@c:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0xD
  1158  00000E                     	ds	1
  1159  00000F                     ?_atoi:
  1160                           	callstack 0
  1161  00000F                     atoi@s:
  1162                           	callstack 0
  1163  00000F                     strncmp@l:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0xE
  1167  00000F                     	ds	1
  1168  000010                     ??_tolower:
  1169  000010                     ??___fleq:
  1170  000010                     ___fltol@sign1:
  1171                           	callstack 0
  1172  000010                     ___xxtofl@sign:
  1173                           	callstack 0
  1174  000010                     ___awdiv@divisor:
  1175                           	callstack 0
  1176  000010                     ___fpclassifyf@e:
  1177                           	callstack 0
  1178  000010                     strcpy@d:
  1179                           	callstack 0
  1180  000010                     ___aodiv@divisor:
  1181                           	callstack 0
  1182  000010                     ___aomod@divisor:
  1183                           	callstack 0
  1184                           
  1185                           ; 8 bytes @ 0xF
  1186  000010                     	ds	1
  1187  000011                     ??_atoi:
  1188  000011                     ?_stoa:
  1189                           	callstack 0
  1190  000011                     ___fltol@exp1:
  1191                           	callstack 0
  1192  000011                     ___xxtofl@exp:
  1193                           	callstack 0
  1194  000011                     colourclick_readR@tmp:
  1195                           	callstack 0
  1196  000011                     colourclick_readG@tmp:
  1197                           	callstack 0
  1198  000011                     colourclick_readB@tmp:
  1199                           	callstack 0
  1200  000011                     colourclick_readC@tmp:
  1201                           	callstack 0
  1202  000011                     stoa@fp:
  1203                           	callstack 0
  1204  000011                     fputs@s:
  1205                           	callstack 0
  1206  000011                     strncmp@r:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x10
  1210  000011                     	ds	1
  1211  000012                     ___awdiv@counter:
  1212                           	callstack 0
  1213  000012                     ___xxtofl@arg:
  1214                           	callstack 0
  1215  000012                     ___fpclassifyf@u:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x11
  1219  000012                     	ds	1
  1220  000013                     ___awdiv@sign:
  1221                           	callstack 0
  1222  000013                     colourclick_readRGBC@tmpval:
  1223                           	callstack 0
  1224  000013                     stoa@s:
  1225                           	callstack 0
  1226  000013                     fputs@fp:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x12
  1230  000013                     	ds	1
  1231  000014                     ___awdiv@quotient:
  1232                           	callstack 0
  1233  000014                     _tolower$3416:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x13
  1237  000014                     	ds	1
  1238  000015                     ??_stoa:
  1239  000015                     fputs@c:
  1240                           	callstack 0
  1241  000015                     colourclick_readRGBC2@tmpval:
  1242                           	callstack 0
  1243  000015                     atoi@neg:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x14
  1247  000015                     	ds	1
  1248  000016                     ?___fldiv:
  1249                           	callstack 0
  1250  000016                     ?___flmul:
  1251                           	callstack 0
  1252  000016                     DCmotors_setPWM@m:
  1253                           	callstack 0
  1254  000016                     fputs@i:
  1255                           	callstack 0
  1256  000016                     ___fldiv@b:
  1257                           	callstack 0
  1258  000016                     ___flmul@b:
  1259                           	callstack 0
  1260  000016                     stoa@nuls:
  1261                           	callstack 0
  1262                           
  1263                           ; 7 bytes @ 0x15
  1264  000016                     	ds	1
  1265  000017                     colourclick_readRGBC2@mode:
  1266                           	callstack 0
  1267  000017                     _atoi$3322:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x16
  1271  000017                     	ds	1
  1272  000018                     ??_colourclick_readRGBC2:
  1273  000018                     ??_DCmotors_setPWM:
  1274  000018                     ?_pad:
  1275                           	callstack 0
  1276  000018                     ___aodiv@counter:
  1277                           	callstack 0
  1278  000018                     ___aomod@counter:
  1279                           	callstack 0
  1280  000018                     pad@fp:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x17
  1284  000018                     	ds	1
  1285  000019                     ___aodiv@sign:
  1286                           	callstack 0
  1287  000019                     ___aomod@sign:
  1288                           	callstack 0
  1289  000019                     _atoi$3324:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x18
  1293  000019                     	ds	1
  1294  00001A                     ?_abs:
  1295                           	callstack 0
  1296  00001A                     pad@buf:
  1297                           	callstack 0
  1298  00001A                     abs@a:
  1299                           	callstack 0
  1300  00001A                     ___fldiv@a:
  1301                           	callstack 0
  1302  00001A                     ___flmul@a:
  1303                           	callstack 0
  1304  00001A                     ___aodiv@quotient:
  1305                           	callstack 0
  1306                           
  1307                           ; 8 bytes @ 0x19
  1308  00001A                     	ds	1
  1309  00001B                     _atoi$3323:
  1310                           	callstack 0
  1311                           
  1312                           ; 1 bytes @ 0x1A
  1313  00001B                     	ds	1
  1314  00001C                     ??_abs:
  1315  00001C                     pad@p:
  1316                           	callstack 0
  1317  00001C                     atoi@n:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x1B
  1321  00001C                     	ds	1
  1322  00001D                     stoa@i:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x1C
  1326  00001D                     	ds	1
  1327  00001E                     ??___fldiv:
  1328  00001E                     ??___flmul:
  1329  00001E                     ??_pad:
  1330                           
  1331                           ; 1 bytes @ 0x1D
  1332  00001E                     	ds	1
  1333  00001F                     DCmotors_setPWM@PWMduty:
  1334                           	callstack 0
  1335  00001F                     pad@i:
  1336                           	callstack 0
  1337  00001F                     stoa@w:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x1E
  1341  00001F                     	ds	2
  1342  000021                     forward@mL:
  1343                           	callstack 0
  1344  000021                     reverse@mL:
  1345                           	callstack 0
  1346  000021                     stop@mL:
  1347                           	callstack 0
  1348  000021                     right@mL:
  1349                           	callstack 0
  1350  000021                     pad@w:
  1351                           	callstack 0
  1352  000021                     stoa@cp:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x20
  1356  000021                     	ds	1
  1357  000022                     ___flmul@sign:
  1358                           	callstack 0
  1359  000022                     ___fldiv@rem:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x21
  1363  000022                     	ds	1
  1364  000023                     ?_dtoa:
  1365                           	callstack 0
  1366  000023                     ___flmul@aexp:
  1367                           	callstack 0
  1368  000023                     forward@mR:
  1369                           	callstack 0
  1370  000023                     reverse@mR:
  1371                           	callstack 0
  1372  000023                     stop@mR:
  1373                           	callstack 0
  1374  000023                     right@mR:
  1375                           	callstack 0
  1376  000023                     dtoa@fp:
  1377                           	callstack 0
  1378  000023                     stoa@p:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x22
  1382  000023                     	ds	1
  1383  000024                     ___flmul@grs:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x23
  1387  000024                     	ds	1
  1388  000025                     right@deg:
  1389                           	callstack 0
  1390  000025                     stoa@l:
  1391                           	callstack 0
  1392  000025                     dtoa@d:
  1393                           	callstack 0
  1394                           
  1395                           ; 8 bytes @ 0x24
  1396  000025                     	ds	1
  1397  000026                     ___fldiv@sign:
  1398                           	callstack 0
  1399                           
  1400                           ; 1 bytes @ 0x25
  1401  000026                     	ds	1
  1402  000027                     ??_right:
  1403  000027                     ___fldiv@new_exp:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x26
  1407  000027                     	ds	1
  1408  000028                     ___flmul@bexp:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x27
  1412  000028                     	ds	1
  1413  000029                     right@delay:
  1414                           	callstack 0
  1415  000029                     ___fldiv@grs:
  1416                           	callstack 0
  1417  000029                     ___flmul@prod:
  1418                           	callstack 0
  1419                           
  1420                           ; 4 bytes @ 0x28
  1421  000029                     	ds	2
  1422  00002B                     right@i:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x2A
  1426  00002B                     	ds	2
  1427  00002D                     ??_dtoa:
  1428  00002D                     ___fldiv@bexp:
  1429                           	callstack 0
  1430  00002D                     ___flmul@temp:
  1431                           	callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x2C
  1434  00002D                     	ds	1
  1435  00002E                     ___fldiv@aexp:
  1436                           	callstack 0
  1437                           
  1438                           ; 1 bytes @ 0x2D
  1439  00002E                     	ds	1
  1440  00002F                     ?___fladd:
  1441                           	callstack 0
  1442  00002F                     ?_floorf:
  1443                           	callstack 0
  1444  00002F                     colourcards_normaliseRGBC@abs:
  1445                           	callstack 0
  1446  00002F                     ___flge@ff1:
  1447                           	callstack 0
  1448  00002F                     ___fladd@b:
  1449                           	callstack 0
  1450  00002F                     floorf@x:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x2E
  1454  00002F                     	ds	2
  1455  000031                     colourcards_normaliseRGBC@rel:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x30
  1459  000031                     	ds	2
  1460  000033                     ??_floorf:
  1461  000033                     colourcards_normaliseRGBC@R:
  1462                           	callstack 0
  1463  000033                     ___flge@ff2:
  1464                           	callstack 0
  1465  000033                     ___fladd@a:
  1466                           	callstack 0
  1467                           
  1468                           ; 4 bytes @ 0x32
  1469  000033                     	ds	2
  1470  000035                     colourcards_normaliseRGBC@G:
  1471                           	callstack 0
  1472  000035                     _dtoa$3220:
  1473                           	callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x34
  1476  000035                     	ds	2
  1477  000037                     ??___fladd:
  1478  000037                     ??___flge:
  1479  000037                     colourcards_normaliseRGBC@B:
  1480                           	callstack 0
  1481  000037                     dtoa@p:
  1482                           	callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x36
  1485  000037                     	ds	2
  1486  000039                     colourcards_normaliseRGBC@C:
  1487                           	callstack 0
  1488  000039                     dtoa@w:
  1489                           	callstack 0
  1490  000039                     floorf@m:
  1491                           	callstack 0
  1492                           
  1493                           ; 4 bytes @ 0x38
  1494  000039                     	ds	2
  1495  00003B                     ___fladd@signs:
  1496                           	callstack 0
  1497  00003B                     dtoa@s:
  1498                           	callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x3A
  1501  00003B                     	ds	1
  1502  00003C                     ___fladd@aexp:
  1503                           	callstack 0
  1504                           
  1505                           ; 1 bytes @ 0x3B
  1506  00003C                     	ds	1
  1507  00003D                     ___fladd@bexp:
  1508                           	callstack 0
  1509  00003D                     floorf@e:
  1510                           	callstack 0
  1511  00003D                     dtoa@n:
  1512                           	callstack 0
  1513                           
  1514                           ; 8 bytes @ 0x3C
  1515  00003D                     	ds	1
  1516  00003E                     ___fladd@grs:
  1517                           	callstack 0
  1518                           
  1519                           ; 1 bytes @ 0x3D
  1520  00003E                     	ds	1
  1521  00003F                     ?___flsub:
  1522                           	callstack 0
  1523  00003F                     left@mL:
  1524                           	callstack 0
  1525  00003F                     ___flsub@b:
  1526                           	callstack 0
  1527  00003F                     floorf@u:
  1528                           	callstack 0
  1529                           
  1530                           ; 4 bytes @ 0x3E
  1531  00003F                     	ds	2
  1532  000041                     left@mR:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x40
  1536  000041                     	ds	2
  1537  000043                     left@deg:
  1538                           	callstack 0
  1539  000043                     ___flsub@a:
  1540                           	callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x42
  1543  000043                     	ds	2
  1544  000045                     ??_left:
  1545  000045                     dtoa@i:
  1546                           	callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x44
  1549  000045                     	ds	1
  1550  000046                     left@delay:
  1551                           	callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x45
  1554  000046                     	ds	1
  1555  000047                     ?_efgtoa:
  1556                           	callstack 0
  1557  000047                     efgtoa@fp:
  1558                           	callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x46
  1561  000047                     	ds	2
  1562  000049                     efgtoa@f:
  1563                           	callstack 0
  1564                           
  1565                           ; 4 bytes @ 0x48
  1566  000049                     	ds	1
  1567  00004A                     left@i:
  1568                           	callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x49
  1571  00004A                     	ds	2
  1572  00004C                     ??_colourcards_readRGBC:
  1573  00004C                     DCmotors_calibration@mL:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x4B
  1577  00004C                     	ds	1
  1578  00004D                     efgtoa@c:
  1579                           	callstack 0
  1580                           
  1581                           ; 1 bytes @ 0x4C
  1582  00004D                     	ds	1
  1583  00004E                     DCmotors_calibration@mR:
  1584                           	callstack 0
  1585  00004E                     vfprintf@cfmt:
  1586                           	callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x4D
  1589  00004E                     	ds	2
  1590  000050                     
  1591                           ; 1 bytes @ 0x4F
  1592 ;;
  1593 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1594 ;;
  1595 ;; *************** function _main *****************
  1596 ;; Defined at:
  1597 ;;		line 7 in file "main.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  motorR          9   84[BANK1 ] struct .
  1602 ;;  motorL          9   75[BANK1 ] struct .
  1603 ;;  current         8   67[BANK1 ] struct .
  1604 ;;  PWMperiod       1    0        unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1617 ;;      Totals:         0       2      26       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1618 ;;Total ram usage:       28 bytes
  1619 ;; Hardware stack levels required when called: 17
  1620 ;; This function calls:
  1621 ;;		_ADC_init
  1622 ;;		_DCmotors_calibration
  1623 ;;		_DCmotors_init
  1624 ;;		_USART4_init
  1625 ;;		_checkbatterylevel
  1626 ;;		_colourcards_readRGBC
  1627 ;;		_colourclickLEDs_C
  1628 ;;		_colourclick_calibration
  1629 ;;		_colourclick_init
  1630 ;;		_forward
  1631 ;;		_interrupts_init
  1632 ;; This function is called by:
  1633 ;;		Startup code after reset
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text0
  1638  004C1A                     __ptext0:
  1639                           	callstack 0
  1640  004C1A                     _main:
  1641                           	callstack 14
  1642  004C1A                     
  1643                           ;main.c: 12:     DCmotors_turntime = 100;
  1644  004C1A  0E00               	movlw	0
  1645  004C1C  0101               	movlb	1	; () banked
  1646  004C1E  6FDA               	movwf	(_DCmotors_turntime+1)& (0+255),b	;volatile
  1647  004C20  0E64               	movlw	100
  1648  004C22  6FD9               	movwf	_DCmotors_turntime& (0+255),b	;volatile
  1649                           
  1650                           ;main.c: 13:     interrupts_lowerbound = 0;
  1651  004C24  0E00               	movlw	0
  1652  004C26  6E53               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1653  004C28  0E00               	movlw	0
  1654  004C2A  6E52               	movwf	_interrupts_lowerbound^0,c	;volatile
  1655                           
  1656                           ;main.c: 14:     interrupts_upperbound = 32767;
  1657  004C2C  0E7F               	movlw	127
  1658  004C2E  6E56               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1659  004C30  6855               	setf	_interrupts_upperbound^0,c	;volatile
  1660                           
  1661                           ;main.c: 15:     colourcard_flag = 0;
  1662  004C32  0E00               	movlw	0
  1663  004C34  6F24               	movwf	_colourcard_flag& (0+255),b	;volatile
  1664                           
  1665                           ;main.c: 16:     unknowncard_flag = 0;
  1666  004C36  0E00               	movlw	0
  1667  004C38  0100               	movlb	0	; () banked
  1668  004C3A  6FF2               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1669                           
  1670                           ;main.c: 17:     returnhome_flag = 0;
  1671  004C3C  0E00               	movlw	0
  1672  004C3E  6FF1               	movwf	_returnhome_flag& (0+255),b	;volatile
  1673                           
  1674                           ;main.c: 19:     DC_motor motorL;;main.c: 20:     motorL.power=0;
  1675  004C40  0E00               	movlw	0
  1676  004C42  0101               	movlb	1	; () banked
  1677  004C44  6FC0               	movwf	main@motorL& (0+255),b
  1678                           
  1679                           ;main.c: 21:     motorL.direction=1;
  1680  004C46  0E01               	movlw	1
  1681  004C48  6FC1               	movwf	(main@motorL+1)& (0+255),b
  1682  004C4A                     
  1683                           ; BSR set to: 1
  1684                           ;main.c: 22:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1685  004C4A  0EA3               	movlw	163
  1686  004C4C  6FC2               	movwf	(main@motorL+2)& (0+255),b
  1687  004C4E  0E0F               	movlw	15
  1688  004C50  6FC3               	movwf	(main@motorL+3)& (0+255),b
  1689  004C52                     
  1690                           ; BSR set to: 1
  1691                           ;main.c: 23:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1692  004C52  0E7D               	movlw	125
  1693  004C54  6FC4               	movwf	(main@motorL+4)& (0+255),b
  1694  004C56  0E0F               	movlw	15
  1695  004C58  6FC5               	movwf	(main@motorL+5)& (0+255),b
  1696                           
  1697                           ;main.c: 24:     motorL.dir_pin=4;
  1698  004C5A  0E04               	movlw	4
  1699  004C5C  6FC6               	movwf	(main@motorL+6)& (0+255),b
  1700  004C5E                     
  1701                           ; BSR set to: 1
  1702                           ;main.c: 25:     motorL.PWMperiod=PWMperiod;
  1703  004C5E  0E00               	movlw	0
  1704  004C60  6FC8               	movwf	(main@motorL+8)& (0+255),b
  1705  004C62  0E63               	movlw	99
  1706  004C64  6FC7               	movwf	(main@motorL+7)& (0+255),b
  1707                           
  1708                           ;main.c: 27:     DC_motor motorR;;main.c: 28:     motorR.power=0;
  1709  004C66  0E00               	movlw	0
  1710  004C68  6FC9               	movwf	main@motorR& (0+255),b
  1711                           
  1712                           ;main.c: 29:     motorR.direction=1;
  1713  004C6A  0E01               	movlw	1
  1714  004C6C  6FCA               	movwf	(main@motorR+1)& (0+255),b
  1715  004C6E                     
  1716                           ; BSR set to: 1
  1717                           ;main.c: 30:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1718  004C6E  0EA0               	movlw	160
  1719  004C70  6FCB               	movwf	(main@motorR+2)& (0+255),b
  1720  004C72  0E0F               	movlw	15
  1721  004C74  6FCC               	movwf	(main@motorR+3)& (0+255),b
  1722  004C76                     
  1723                           ; BSR set to: 1
  1724                           ;main.c: 31:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1725  004C76  0E7F               	movlw	127
  1726  004C78  6FCD               	movwf	(main@motorR+4)& (0+255),b
  1727  004C7A  0E0F               	movlw	15
  1728  004C7C  6FCE               	movwf	(main@motorR+5)& (0+255),b
  1729                           
  1730                           ;main.c: 32:     motorR.dir_pin=6;
  1731  004C7E  0E06               	movlw	6
  1732  004C80  6FCF               	movwf	(main@motorR+6)& (0+255),b
  1733  004C82                     
  1734                           ; BSR set to: 1
  1735                           ;main.c: 33:     motorR.PWMperiod=PWMperiod;
  1736  004C82  0E00               	movlw	0
  1737  004C84  6FD1               	movwf	(main@motorR+8)& (0+255),b
  1738  004C86  0E63               	movlw	99
  1739  004C88  6FD0               	movwf	(main@motorR+7)& (0+255),b
  1740  004C8A                     
  1741                           ; BSR set to: 1
  1742                           ;main.c: 35:     ADC_init();
  1743  004C8A  ECB0  F030         	call	_ADC_init	;wreg free
  1744  004C8E                     
  1745                           ;main.c: 36:     colourclick_init();
  1746  004C8E  EC6A  F02F         	call	_colourclick_init	;wreg free
  1747  004C92                     
  1748                           ;main.c: 37:     DCmotors_init(PWMperiod);
  1749  004C92  0E63               	movlw	99
  1750  004C94  ECFC  F02D         	call	_DCmotors_init
  1751  004C98                     
  1752                           ;main.c: 38:     USART4_init();
  1753  004C98  EC83  F030         	call	_USART4_init	;wreg free
  1754  004C9C                     
  1755                           ;main.c: 39:     checkbatterylevel();
  1756  004C9C  EC73  F030         	call	_checkbatterylevel	;wreg free
  1757  004CA0                     
  1758                           ;main.c: 44:     colourclick_calibration();
  1759  004CA0  EC70  F025         	call	_colourclick_calibration	;wreg free
  1760  004CA4                     
  1761                           ;main.c: 50:     DCmotors_calibration(&motorL, &motorR);
  1762  004CA4  0EC0               	movlw	low main@motorL
  1763  004CA6  6E4C               	movwf	DCmotors_calibration@mL^0,c
  1764  004CA8  0E01               	movlw	high main@motorL
  1765  004CAA  6E4D               	movwf	(DCmotors_calibration@mL+1)^0,c
  1766  004CAC  0EC9               	movlw	low main@motorR
  1767  004CAE  6E4E               	movwf	DCmotors_calibration@mR^0,c
  1768  004CB0  0E01               	movlw	high main@motorR
  1769  004CB2  6E4F               	movwf	(DCmotors_calibration@mR+1)^0,c
  1770  004CB4  EC24  F024         	call	_DCmotors_calibration	;wreg free
  1771  004CB8                     l65:
  1772  004CB8  A48E               	btfss	142,2,c	;volatile
  1773  004CBA  EF61  F026         	goto	u11891
  1774  004CBE  EF63  F026         	goto	u11890
  1775  004CC2                     u11891:
  1776  004CC2  EF6A  F026         	goto	l69
  1777  004CC6                     u11890:
  1778  004CC6  B68E               	btfsc	142,3,c	;volatile
  1779  004CC8  EF68  F026         	goto	u11901
  1780  004CCC  EF6A  F026         	goto	u11900
  1781  004CD0                     u11901:
  1782  004CD0  EF5C  F026         	goto	l65
  1783  004CD4                     u11900:
  1784  004CD4                     l69:
  1785                           
  1786                           ;main.c: 57:     LATDbits.LATD3 = 1;
  1787  004CD4  867C               	bsf	124,3,c	;volatile
  1788  004CD6                     
  1789                           ;main.c: 58:     colourclickLEDs_C(1);
  1790  004CD6  0E01               	movlw	1
  1791  004CD8  EC42  F030         	call	_colourclickLEDs_C
  1792  004CDC                     
  1793                           ;main.c: 59:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1794  004CDC  0E52               	movlw	82
  1795  004CDE  0100               	movlb	0	; () banked
  1796  004CE0  6FEE               	movwf	(??_main+1)& (0+255),b
  1797  004CE2  0E2B               	movlw	43
  1798  004CE4  6FED               	movwf	??_main& (0+255),b
  1799  004CE6  0E00               	movlw	0
  1800  004CE8                     u12327:
  1801  004CE8  2EE8               	decfsz	wreg,f,c
  1802  004CEA  D7FE               	bra	u12327
  1803  004CEC  2FED               	decfsz	??_main& (0+255),f,b
  1804  004CEE  D7FC               	bra	u12327
  1805  004CF0  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1806  004CF2  D7FA               	bra	u12327
  1807  004CF4  F000               	nop	
  1808  004CF6                     
  1809                           ;main.c: 60:     interrupts_init();
  1810  004CF6  EC53  F030         	call	_interrupts_init	;wreg free
  1811  004CFA                     
  1812                           ;main.c: 61:     forward(&motorL, &motorR);
  1813  004CFA  0EC0               	movlw	low main@motorL
  1814  004CFC  6E21               	movwf	forward@mL^0,c
  1815  004CFE  0E01               	movlw	high main@motorL
  1816  004D00  6E22               	movwf	(forward@mL+1)^0,c
  1817  004D02  0EC9               	movlw	low main@motorR
  1818  004D04  6E23               	movwf	forward@mR^0,c
  1819  004D06  0E01               	movlw	high main@motorR
  1820  004D08  6E24               	movwf	(forward@mR+1)^0,c
  1821  004D0A  EC71  F02B         	call	_forward	;wreg free
  1822  004D0E                     l8879:
  1823                           
  1824                           ;main.c: 68:         if (colourcard_flag==1) {
  1825  004D0E  0101               	movlb	1	; () banked
  1826  004D10  0524               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1827  004D12  A4D8               	btfss	status,2,c
  1828  004D14  EF8E  F026         	goto	u11911
  1829  004D18  EF90  F026         	goto	u11910
  1830  004D1C                     u11911:
  1831  004D1C  EF87  F026         	goto	l8879
  1832  004D20                     u11910:
  1833  004D20                     
  1834                           ; BSR set to: 1
  1835                           ;main.c: 69:             colourcards_readRGBC(&current, &motorL, &motorR);
  1836  004D20  0EB8               	movlw	low main@current
  1837  004D22  0100               	movlb	0	; () banked
  1838  004D24  6F66               	movwf	colourcards_readRGBC@abs& (0+255),b
  1839  004D26  0E01               	movlw	high main@current
  1840  004D28  6F67               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1841  004D2A  0EC0               	movlw	low main@motorL
  1842  004D2C  6F68               	movwf	colourcards_readRGBC@mL& (0+255),b
  1843  004D2E  0E01               	movlw	high main@motorL
  1844  004D30  6F69               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1845  004D32  0EC9               	movlw	low main@motorR
  1846  004D34  6F6A               	movwf	colourcards_readRGBC@mR& (0+255),b
  1847  004D36  0E01               	movlw	high main@motorR
  1848  004D38  6F6B               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1849  004D3A  EC89  F00D         	call	_colourcards_readRGBC	;wreg free
  1850  004D3E                     
  1851                           ;main.c: 70:             colourcard_flag = 0;
  1852  004D3E  0E00               	movlw	0
  1853  004D40  0101               	movlb	1	; () banked
  1854  004D42  6F24               	movwf	_colourcard_flag& (0+255),b	;volatile
  1855  004D44  EF87  F026         	goto	l8879
  1856  004D48  EF13  F000         	goto	start
  1857  004D4C                     __end_of_main:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _interrupts_init *****************
  1861 ;; Defined at:
  1862 ;;		line 14 in file "interrupts.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 12
  1883 ;; This function calls:
  1884 ;;		_interrupts_clear
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text1
  1891  0060A6                     __ptext1:
  1892                           	callstack 0
  1893  0060A6                     _interrupts_init:
  1894                           	callstack 18
  1895  0060A6                     
  1896                           ;interrupts.c: 15:     TRISBbits.TRISB1 = 1;
  1897  0060A6  8282               	bsf	130,1,c	;volatile
  1898                           
  1899                           ;interrupts.c: 16:     ANSELBbits.ANSELB1 = 0;
  1900  0060A8  010E               	movlb	14	; () banked
  1901  0060AA  939A               	bcf	154,1,b	;volatile
  1902  0060AC                     
  1903                           ; BSR set to: 14
  1904                           ;interrupts.c: 17:     INT1PPS=0x09;
  1905  0060AC  0E09               	movlw	9
  1906  0060AE  010D               	movlb	13	; () banked
  1907  0060B0  6FF1               	movwf	241,b	;volatile
  1908  0060B2                     
  1909                           ; BSR set to: 13
  1910                           ;interrupts.c: 19:     PIE0bits.INT1IE = 1;
  1911  0060B2  010E               	movlb	14	; () banked
  1912  0060B4  8329               	bsf	41,1,b	;volatile
  1913  0060B6                     
  1914                           ; BSR set to: 14
  1915                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  1916  0060B6  831F               	bsf	31,1,b	;volatile
  1917  0060B8                     
  1918                           ; BSR set to: 14
  1919                           ;interrupts.c: 25:     interrupts_clear();
  1920  0060B8  ECA3  F030         	call	_interrupts_clear	;wreg free
  1921  0060BC                     
  1922                           ;interrupts.c: 27:     INTCONbits.IPEN = 1;
  1923  0060BC  8AF2               	bsf	242,5,c	;volatile
  1924  0060BE                     
  1925                           ;interrupts.c: 28:     INTCONbits.INT1EDG = 0;
  1926  0060BE  92F2               	bcf	242,1,c	;volatile
  1927  0060C0                     
  1928                           ;interrupts.c: 29:     INTCONbits.PEIE = 1;
  1929  0060C0  8CF2               	bsf	242,6,c	;volatile
  1930  0060C2                     
  1931                           ;interrupts.c: 30:     INTCONbits.GIE = 1;
  1932  0060C2  8EF2               	bsf	242,7,c	;volatile
  1933  0060C4  0012               	return		;funcret
  1934  0060C6                     __end_of_interrupts_init:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _interrupts_clear *****************
  1938 ;; Defined at:
  1939 ;;		line 36 in file "interrupts.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;Total ram usage:        0 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 11
  1960 ;; This function calls:
  1961 ;;		_I2C_2_Master_Start
  1962 ;;		_I2C_2_Master_Stop
  1963 ;;		_I2C_2_Master_Write
  1964 ;;		_interrupts_colour
  1965 ;; This function is called by:
  1966 ;;		_interrupts_init
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text2
  1971  006146                     __ptext2:
  1972                           	callstack 0
  1973  006146                     _interrupts_clear:
  1974                           	callstack 18
  1975  006146                     
  1976                           ;interrupts.c: 37:     I2C_2_Master_Start();
  1977  006146  EC0B  F031         	call	_I2C_2_Master_Start	;wreg free
  1978                           
  1979                           ;interrupts.c: 38:     I2C_2_Master_Write(0x52 | 0x00);
  1980  00614A  0E52               	movlw	82
  1981  00614C  ECF4  F030         	call	_I2C_2_Master_Write
  1982                           
  1983                           ;interrupts.c: 39:     I2C_2_Master_Write(0b11100110);
  1984  006150  0EE6               	movlw	230
  1985  006152  ECF4  F030         	call	_I2C_2_Master_Write
  1986                           
  1987                           ;interrupts.c: 40:     I2C_2_Master_Stop();
  1988  006156  EC06  F031         	call	_I2C_2_Master_Stop	;wreg free
  1989                           
  1990                           ;interrupts.c: 42:     interrupts_colour();
  1991  00615A  EC74  F02E         	call	_interrupts_colour	;wreg free
  1992  00615E  0012               	return		;funcret
  1993  006160                     __end_of_interrupts_clear:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _interrupts_colour *****************
  1997 ;; Defined at:
  1998 ;;		line 48 in file "interrupts.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;Total ram usage:        1 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; Hardware stack levels required when called: 10
  2019 ;; This function calls:
  2020 ;;		_colourclick_writetoaddr
  2021 ;; This function is called by:
  2022 ;;		_interrupts_clear
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text3
  2027  005CE8                     __ptext3:
  2028                           	callstack 0
  2029  005CE8                     _interrupts_colour:
  2030                           	callstack 18
  2031  005CE8                     
  2032                           ;interrupts.c: 49:     colourclick_writetoaddr(0x00, 0b10011);
  2033  005CE8  0E13               	movlw	19
  2034  005CEA  6E0A               	movwf	colourclick_writetoaddr@value^0,c
  2035  005CEC  0E00               	movlw	0
  2036  005CEE  EC63  F030         	call	_colourclick_writetoaddr
  2037  005CF2                     
  2038                           ;interrupts.c: 50:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2039  005CF2  0E3F               	movlw	63
  2040  005CF4  6E0C               	movwf	??_interrupts_colour^0,c
  2041  005CF6  0E55               	movlw	85
  2042  005CF8                     u12337:
  2043  005CF8  2EE8               	decfsz	wreg,f,c
  2044  005CFA  D7FE               	bra	u12337
  2045  005CFC  2E0C               	decfsz	??_interrupts_colour^0,f,c
  2046  005CFE  D7FC               	bra	u12337
  2047  005D00  F000               	nop	
  2048  005D02                     
  2049                           ;interrupts.c: 51:     colourclick_writetoaddr(0x0C, 0b0100);
  2050  005D02  0E04               	movlw	4
  2051  005D04  6E0A               	movwf	colourclick_writetoaddr@value^0,c
  2052  005D06  0E0C               	movlw	12
  2053  005D08  EC63  F030         	call	_colourclick_writetoaddr
  2054  005D0C                     
  2055                           ;interrupts.c: 52:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  2056  005D0C  C052  F00A         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  2057  005D10  0E04               	movlw	4
  2058  005D12  EC63  F030         	call	_colourclick_writetoaddr
  2059  005D16                     
  2060                           ;interrupts.c: 53:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  2061  005D16  5053               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2062  005D18  6E0A               	movwf	colourclick_writetoaddr@value^0,c
  2063  005D1A  0E05               	movlw	5
  2064  005D1C  EC63  F030         	call	_colourclick_writetoaddr
  2065  005D20                     
  2066                           ;interrupts.c: 54:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  2067  005D20  C055  F00A         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  2068  005D24  0E06               	movlw	6
  2069  005D26  EC63  F030         	call	_colourclick_writetoaddr
  2070  005D2A                     
  2071                           ;interrupts.c: 55:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  2072  005D2A  5056               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2073  005D2C  6E0A               	movwf	colourclick_writetoaddr@value^0,c
  2074  005D2E  0E07               	movlw	7
  2075  005D30  EC63  F030         	call	_colourclick_writetoaddr
  2076  005D34  0012               	return		;funcret
  2077  005D36                     __end_of_interrupts_colour:
  2078                           	callstack 0
  2079                           
  2080 ;; *************** function _colourclick_init *****************
  2081 ;; Defined at:
  2082 ;;		line 15 in file "colour_click.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2098 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 10
  2103 ;; This function calls:
  2104 ;;		_I2C_2_Master_Init
  2105 ;;		_colourclickLEDs_init
  2106 ;;		_colourclick_writetoaddr
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text4
  2113  005ED4                     __ptext4:
  2114                           	callstack 0
  2115  005ED4                     _colourclick_init:
  2116                           	callstack 20
  2117  005ED4                     
  2118                           ;colour_click.c: 18:     I2C_2_Master_Init();
  2119  005ED4  ECF2  F02F         	call	_I2C_2_Master_Init	;wreg free
  2120  005ED8                     
  2121                           ;colour_click.c: 21:   colourclick_writetoaddr(0x00, 0x01);
  2122  005ED8  0E01               	movlw	1
  2123  005EDA  6E0A               	movwf	colourclick_writetoaddr@value^0,c
  2124  005EDC  0E00               	movlw	0
  2125  005EDE  EC63  F030         	call	_colourclick_writetoaddr
  2126  005EE2                     
  2127                           ;colour_click.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2128  005EE2  0E3F               	movlw	63
  2129  005EE4  6E0C               	movwf	??_colourclick_init^0,c
  2130  005EE6  0E55               	movlw	85
  2131  005EE8                     u12347:
  2132  005EE8  2EE8               	decfsz	wreg,f,c
  2133  005EEA  D7FE               	bra	u12347
  2134  005EEC  2E0C               	decfsz	??_colourclick_init^0,f,c
  2135  005EEE  D7FC               	bra	u12347
  2136  005EF0  F000               	nop	
  2137  005EF2                     
  2138                           ;colour_click.c: 25:  colourclick_writetoaddr(0x00, 0x03);
  2139  005EF2  0E03               	movlw	3
  2140  005EF4  6E0A               	movwf	colourclick_writetoaddr@value^0,c
  2141  005EF6  0E00               	movlw	0
  2142  005EF8  EC63  F030         	call	_colourclick_writetoaddr
  2143  005EFC                     
  2144                           ;colour_click.c: 28:  colourclick_writetoaddr(0x01, 0xD5);
  2145  005EFC  0ED5               	movlw	213
  2146  005EFE  6E0A               	movwf	colourclick_writetoaddr@value^0,c
  2147  005F00  0E01               	movlw	1
  2148  005F02  EC63  F030         	call	_colourclick_writetoaddr
  2149  005F06                     
  2150                           ;colour_click.c: 30:     colourclickLEDs_init();
  2151  005F06  ECED  F030         	call	_colourclickLEDs_init	;wreg free
  2152  005F0A  0012               	return		;funcret
  2153  005F0C                     __end_of_colourclick_init:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _colourclick_writetoaddr *****************
  2157 ;; Defined at:
  2158 ;;		line 39 in file "colour_click.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  address         1    wreg     unsigned char 
  2161 ;;  value           1    9[COMRAM] unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  address         1   10[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2173 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;Total ram usage:        2 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 9
  2180 ;; This function calls:
  2181 ;;		_I2C_2_Master_Start
  2182 ;;		_I2C_2_Master_Stop
  2183 ;;		_I2C_2_Master_Write
  2184 ;; This function is called by:
  2185 ;;		_interrupts_colour
  2186 ;;		_colourclick_init
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text5
  2191  0060C6                     __ptext5:
  2192                           	callstack 0
  2193  0060C6                     _colourclick_writetoaddr:
  2194                           	callstack 18
  2195                           
  2196                           ;incstack = 0
  2197                           ;colourclick_writetoaddr@address stored from wreg
  2198  0060C6  6E0B               	movwf	colourclick_writetoaddr@address^0,c
  2199  0060C8                     
  2200                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
  2201  0060C8  EC0B  F031         	call	_I2C_2_Master_Start	;wreg free
  2202                           
  2203                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
  2204  0060CC  0E52               	movlw	82
  2205  0060CE  ECF4  F030         	call	_I2C_2_Master_Write
  2206                           
  2207                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
  2208  0060D2  500B               	movf	colourclick_writetoaddr@address^0,w,c
  2209  0060D4  0980               	iorlw	128
  2210  0060D6  ECF4  F030         	call	_I2C_2_Master_Write
  2211                           
  2212                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
  2213  0060DA  500A               	movf	colourclick_writetoaddr@value^0,w,c
  2214  0060DC  ECF4  F030         	call	_I2C_2_Master_Write
  2215                           
  2216                           ;colour_click.c: 45:     I2C_2_Master_Stop();
  2217  0060E0  EC06  F031         	call	_I2C_2_Master_Stop	;wreg free
  2218  0060E4  0012               	return		;funcret
  2219  0060E6                     __end_of_colourclick_writetoaddr:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function _colourclickLEDs_init *****************
  2223 ;; Defined at:
  2224 ;;		line 49 in file "buttons_n_LEDs.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 8
  2245 ;; This function calls:
  2246 ;;		_colourclickLEDs_C
  2247 ;; This function is called by:
  2248 ;;		_colourclick_init
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text6
  2253  0061DA                     __ptext6:
  2254                           	callstack 0
  2255  0061DA                     _colourclickLEDs_init:
  2256                           	callstack 21
  2257  0061DA                     
  2258                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  2259  0061DA  9287               	bcf	135,1,c	;volatile
  2260                           
  2261                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  2262  0061DC  9881               	bcf	129,4,c	;volatile
  2263                           
  2264                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  2265  0061DE  9E86               	bcf	134,7,c	;volatile
  2266  0061E0                     
  2267                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  2268  0061E0  0E00               	movlw	0
  2269  0061E2  EC42  F030         	call	_colourclickLEDs_C
  2270  0061E6  0012               	return		;funcret
  2271  0061E8                     __end_of_colourclickLEDs_init:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _I2C_2_Master_Init *****************
  2275 ;; Defined at:
  2276 ;;		line 8 in file "I2C.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 7
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_colourclick_init
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text7
  2305  005FE4                     __ptext7:
  2306                           	callstack 0
  2307  005FE4                     _I2C_2_Master_Init:
  2308                           	callstack 22
  2309  005FE4                     
  2310                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  2311  005FE4  010E               	movlb	14	; () banked
  2312  005FE6  51D9               	movf	217,w,b	;volatile
  2313  005FE8  0BF0               	andlw	-16
  2314  005FEA  0908               	iorlw	8
  2315  005FEC  6FD9               	movwf	217,b	;volatile
  2316  005FEE                     
  2317                           ; BSR set to: 14
  2318                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  2319  005FEE  8BD9               	bsf	217,5,b	;volatile
  2320                           
  2321                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  2322  005FF0  0E9F               	movlw	159
  2323  005FF2  6FD6               	movwf	214,b	;volatile
  2324  005FF4                     
  2325                           ; BSR set to: 14
  2326                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  2327  005FF4  8A84               	bsf	132,5,c	;volatile
  2328  005FF6                     
  2329                           ; BSR set to: 14
  2330                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  2331  005FF6  8C84               	bsf	132,6,c	;volatile
  2332  005FF8                     
  2333                           ; BSR set to: 14
  2334                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  2335  005FF8  9BA7               	bcf	167,5,b	;volatile
  2336  005FFA                     
  2337                           ; BSR set to: 14
  2338                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  2339  005FFA  9DA7               	bcf	167,6,b	;volatile
  2340                           
  2341                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  2342  005FFC  0E1D               	movlw	29
  2343  005FFE  6F1D               	movwf	29,b	;volatile
  2344                           
  2345                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  2346  006000  0E1E               	movlw	30
  2347  006002  6F1C               	movwf	28,b	;volatile
  2348                           
  2349                           ;I2C.c: 22:   RD5PPS=0x1C;
  2350  006004  0E1C               	movlw	28
  2351  006006  6F6F               	movwf	111,b	;volatile
  2352                           
  2353                           ;I2C.c: 23:   RD6PPS=0x1B;
  2354  006008  0E1B               	movlw	27
  2355  00600A  6F70               	movwf	112,b	;volatile
  2356  00600C                     
  2357                           ; BSR set to: 14
  2358  00600C  0012               	return		;funcret
  2359  00600E                     __end_of_I2C_2_Master_Init:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _colourclick_calibration *****************
  2363 ;; Defined at:
  2364 ;;		line 176 in file "colour_click.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  current         8   59[BANK1 ] struct .
  2369 ;;  initial         8   51[BANK1 ] struct .
  2370 ;;  i               1   50[BANK1 ] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;Total ram usage:       19 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 16
  2387 ;; This function calls:
  2388 ;;		_colourclickLEDs_C
  2389 ;;		_colourclick_readRGBC
  2390 ;;		_colourclick_testing
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text8
  2397  004AE0                     __ptext8:
  2398                           	callstack 0
  2399  004AE0                     _colourclick_calibration:
  2400                           	callstack 14
  2401  004AE0                     l348:
  2402  004AE0  B48E               	btfsc	142,2,c	;volatile
  2403  004AE2  EF75  F025         	goto	u11491
  2404  004AE6  EF77  F025         	goto	u11490
  2405  004AEA                     u11491:
  2406  004AEA  EF70  F025         	goto	l348
  2407  004AEE                     u11490:
  2408  004AEE                     
  2409                           ;colour_click.c: 179:     LATDbits.LATD3 = 1;
  2410  004AEE  867C               	bsf	124,3,c	;volatile
  2411  004AF0                     
  2412                           ;colour_click.c: 180:     colourclickLEDs_C(1);
  2413  004AF0  0E01               	movlw	1
  2414  004AF2  EC42  F030         	call	_colourclickLEDs_C
  2415  004AF6                     
  2416                           ;colour_click.c: 181:     LATDbits.LATD7 = 1;
  2417  004AF6  8E7C               	bsf	124,7,c	;volatile
  2418  004AF8                     
  2419                           ;colour_click.c: 182:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2420  004AF8  0E52               	movlw	82
  2421  004AFA  0100               	movlb	0	; () banked
  2422  004AFC  6FEC               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2423  004AFE  0E2B               	movlw	43
  2424  004B00  6FEB               	movwf	??_colourclick_calibration& (0+255),b
  2425  004B02  0E00               	movlw	0
  2426  004B04                     u12357:
  2427  004B04  2EE8               	decfsz	wreg,f,c
  2428  004B06  D7FE               	bra	u12357
  2429  004B08  2FEB               	decfsz	??_colourclick_calibration& (0+255),f,b
  2430  004B0A  D7FC               	bra	u12357
  2431  004B0C  2FEC               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2432  004B0E  D7FA               	bra	u12357
  2433  004B10  F000               	nop	
  2434  004B12                     
  2435                           ;colour_click.c: 183:     colourclick_readRGBC(&initial);
  2436  004B12  0EA8               	movlw	low colourclick_calibration@initial
  2437  004B14  6E13               	movwf	colourclick_readRGBC@tmpval^0,c
  2438  004B16  0E01               	movlw	high colourclick_calibration@initial
  2439  004B18  6E14               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2440  004B1A  EC87  F02C         	call	_colourclick_readRGBC	;wreg free
  2441  004B1E                     
  2442                           ;colour_click.c: 184:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2443  004B1E  0E52               	movlw	82
  2444  004B20  0100               	movlb	0	; () banked
  2445  004B22  6FEC               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2446  004B24  0E2B               	movlw	43
  2447  004B26  6FEB               	movwf	??_colourclick_calibration& (0+255),b
  2448  004B28  0E00               	movlw	0
  2449  004B2A                     u12367:
  2450  004B2A  2EE8               	decfsz	wreg,f,c
  2451  004B2C  D7FE               	bra	u12367
  2452  004B2E  2FEB               	decfsz	??_colourclick_calibration& (0+255),f,b
  2453  004B30  D7FC               	bra	u12367
  2454  004B32  2FEC               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2455  004B34  D7FA               	bra	u12367
  2456  004B36  F000               	nop	
  2457  004B38                     
  2458                           ;colour_click.c: 185:     LATDbits.LATD7 = 0;
  2459  004B38  9E7C               	bcf	124,7,c	;volatile
  2460  004B3A                     
  2461                           ;colour_click.c: 187:     unsigned char i;;colour_click.c: 188:     RGBC_val current;;co
      +                          lour_click.c: 189:     for (i=0; i<8; i++) {
  2462  004B3A  0E00               	movlw	0
  2463  004B3C  0101               	movlb	1	; () banked
  2464  004B3E  6FA7               	movwf	colourclick_calibration@i& (0+255),b
  2465  004B40                     l353:
  2466  004B40  B48E               	btfsc	142,2,c	;volatile
  2467  004B42  EFA5  F025         	goto	u11501
  2468  004B46  EFA7  F025         	goto	u11500
  2469  004B4A                     u11501:
  2470  004B4A  EFA0  F025         	goto	l353
  2471  004B4E                     u11500:
  2472  004B4E                     
  2473                           ;colour_click.c: 191:         LATDbits.LATD7 = 1;
  2474  004B4E  8E7C               	bsf	124,7,c	;volatile
  2475  004B50                     
  2476                           ;colour_click.c: 192:         colourclick_readRGBC(&current);
  2477  004B50  0EB0               	movlw	low colourclick_calibration@current
  2478  004B52  6E13               	movwf	colourclick_readRGBC@tmpval^0,c
  2479  004B54  0E01               	movlw	high colourclick_calibration@current
  2480  004B56  6E14               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2481  004B58  EC87  F02C         	call	_colourclick_readRGBC	;wreg free
  2482  004B5C                     
  2483                           ;colour_click.c: 193:         if ((current.C<initial.C) && (current.C>interrupts_lowerbo
      +                          und)) {
  2484  004B5C  0101               	movlb	1	; () banked
  2485  004B5E  51AE               	movf	(colourclick_calibration@initial+6)& (0+255),w,b
  2486  004B60  5DB6               	subwf	(colourclick_calibration@current+6)& (0+255),w,b
  2487  004B62  51AF               	movf	(colourclick_calibration@initial+7)& (0+255),w,b
  2488  004B64  59B7               	subwfb	(colourclick_calibration@current+7)& (0+255),w,b
  2489  004B66  B0D8               	btfsc	status,0,c
  2490  004B68  EFB8  F025         	goto	u11511
  2491  004B6C  EFBA  F025         	goto	u11510
  2492  004B70                     u11511:
  2493  004B70  EFCB  F025         	goto	l8647
  2494  004B74                     u11510:
  2495  004B74                     
  2496                           ; BSR set to: 1
  2497  004B74  51B6               	movf	(colourclick_calibration@current+6)& (0+255),w,b
  2498  004B76  5C52               	subwf	_interrupts_lowerbound^0,w,c	;volatile
  2499  004B78  51B7               	movf	(colourclick_calibration@current+7)& (0+255),w,b
  2500  004B7A  5853               	subwfb	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2501  004B7C  B0D8               	btfsc	status,0,c
  2502  004B7E  EFC3  F025         	goto	u11521
  2503  004B82  EFC5  F025         	goto	u11520
  2504  004B86                     u11521:
  2505  004B86  EFCB  F025         	goto	l8647
  2506  004B8A                     u11520:
  2507  004B8A                     
  2508                           ; BSR set to: 1
  2509                           ;colour_click.c: 194:             interrupts_lowerbound = current.C;
  2510  004B8A  C1B6  F052         	movff	colourclick_calibration@current+6,_interrupts_lowerbound	;volatile
  2511  004B8E  C1B7  F053         	movff	colourclick_calibration@current+7,_interrupts_lowerbound+1	;volatile
  2512                           
  2513                           ;colour_click.c: 195:         } else if ((current.C>initial.C) && (current.C<interrupts_
      +                          upperbound)) {
  2514  004B92  EFE5  F025         	goto	l8653
  2515  004B96                     l8647:
  2516                           
  2517                           ; BSR set to: 1
  2518  004B96  51B6               	movf	(colourclick_calibration@current+6)& (0+255),w,b
  2519  004B98  5DAE               	subwf	(colourclick_calibration@initial+6)& (0+255),w,b
  2520  004B9A  51B7               	movf	(colourclick_calibration@current+7)& (0+255),w,b
  2521  004B9C  59AF               	subwfb	(colourclick_calibration@initial+7)& (0+255),w,b
  2522  004B9E  B0D8               	btfsc	status,0,c
  2523  004BA0  EFD4  F025         	goto	u11531
  2524  004BA4  EFD6  F025         	goto	u11530
  2525  004BA8                     u11531:
  2526  004BA8  EFE5  F025         	goto	l8653
  2527  004BAC                     u11530:
  2528  004BAC                     
  2529                           ; BSR set to: 1
  2530  004BAC  5055               	movf	_interrupts_upperbound^0,w,c	;volatile
  2531  004BAE  5DB6               	subwf	(colourclick_calibration@current+6)& (0+255),w,b
  2532  004BB0  5056               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2533  004BB2  59B7               	subwfb	(colourclick_calibration@current+7)& (0+255),w,b
  2534  004BB4  B0D8               	btfsc	status,0,c
  2535  004BB6  EFDF  F025         	goto	u11541
  2536  004BBA  EFE1  F025         	goto	u11540
  2537  004BBE                     u11541:
  2538  004BBE  EFE5  F025         	goto	l8653
  2539  004BC2                     u11540:
  2540  004BC2                     
  2541                           ; BSR set to: 1
  2542                           ;colour_click.c: 196:             interrupts_upperbound = current.C;
  2543  004BC2  C1B6  F055         	movff	colourclick_calibration@current+6,_interrupts_upperbound	;volatile
  2544  004BC6  C1B7  F056         	movff	colourclick_calibration@current+7,_interrupts_upperbound+1	;volatile
  2545  004BCA                     l8653:
  2546                           
  2547                           ; BSR set to: 1
  2548                           ;colour_click.c: 198:         colourclick_testing(&initial, &current);
  2549  004BCA  0EA8               	movlw	low colourclick_calibration@initial
  2550  004BCC  0100               	movlb	0	; () banked
  2551  004BCE  6FE5               	movwf	colourclick_testing@initial& (0+255),b
  2552  004BD0  0E01               	movlw	high colourclick_calibration@initial
  2553  004BD2  6FE6               	movwf	(colourclick_testing@initial+1)& (0+255),b
  2554  004BD4  0EB0               	movlw	low colourclick_calibration@current
  2555  004BD6  6FE7               	movwf	colourclick_testing@current& (0+255),b
  2556  004BD8  0E01               	movlw	high colourclick_calibration@current
  2557  004BDA  6FE8               	movwf	(colourclick_testing@current+1)& (0+255),b
  2558  004BDC  EC9B  F028         	call	_colourclick_testing	;wreg free
  2559  004BE0                     
  2560                           ;colour_click.c: 199:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2561  004BE0  0E09               	movlw	9
  2562  004BE2  0100               	movlb	0	; () banked
  2563  004BE4  6FEC               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2564  004BE6  0E1E               	movlw	30
  2565  004BE8  6FEB               	movwf	??_colourclick_calibration& (0+255),b
  2566  004BEA  0EE4               	movlw	228
  2567  004BEC                     u12377:
  2568  004BEC  2EE8               	decfsz	wreg,f,c
  2569  004BEE  D7FE               	bra	u12377
  2570  004BF0  2FEB               	decfsz	??_colourclick_calibration& (0+255),f,b
  2571  004BF2  D7FC               	bra	u12377
  2572  004BF4  2FEC               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2573  004BF6  D7FA               	bra	u12377
  2574  004BF8  F000               	nop	
  2575  004BFA                     
  2576                           ;colour_click.c: 200:         LATDbits.LATD7 = 0;
  2577  004BFA  9E7C               	bcf	124,7,c	;volatile
  2578  004BFC                     
  2579                           ;colour_click.c: 201:     }
  2580  004BFC  0101               	movlb	1	; () banked
  2581  004BFE  2BA7               	incf	colourclick_calibration@i& (0+255),f,b
  2582  004C00                     
  2583                           ; BSR set to: 1
  2584  004C00  0E07               	movlw	7
  2585  004C02  65A7               	cpfsgt	colourclick_calibration@i& (0+255),b
  2586  004C04  EF06  F026         	goto	u11551
  2587  004C08  EF08  F026         	goto	u11550
  2588  004C0C                     u11551:
  2589  004C0C  EFA0  F025         	goto	l353
  2590  004C10                     u11550:
  2591  004C10                     
  2592                           ; BSR set to: 1
  2593                           ;colour_click.c: 202:     LATDbits.LATD3 = 0;
  2594  004C10  967C               	bcf	124,3,c	;volatile
  2595  004C12                     
  2596                           ; BSR set to: 1
  2597                           ;colour_click.c: 203:     colourclickLEDs_C(0);
  2598  004C12  0E00               	movlw	0
  2599  004C14  EC42  F030         	call	_colourclickLEDs_C
  2600  004C18  0012               	return		;funcret
  2601  004C1A                     __end_of_colourclick_calibration:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _colourclick_testing *****************
  2605 ;; Defined at:
  2606 ;;		line 206 in file "colour_click.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  initial         2  133[BANK0 ] PTR struct .
  2609 ;;		 -> colourclick_calibration@initial(8), 
  2610 ;;  current         2  135[BANK0 ] PTR struct .
  2611 ;;		 -> colourclick_calibration@current(8), 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  buf            40    0[BANK1 ] unsigned char [40]
  2614 ;;  C               2   48[BANK1 ] unsigned int 
  2615 ;;  B               2   46[BANK1 ] unsigned int 
  2616 ;;  G               2   44[BANK1 ] unsigned int 
  2617 ;;  R               2   42[BANK1 ] unsigned int 
  2618 ;;  ambient         2   40[BANK1 ] unsigned int 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2628 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Totals:         0       6      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;Total ram usage:       56 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 15
  2635 ;; This function calls:
  2636 ;;		_sendStringSerial4
  2637 ;;		_sprintf
  2638 ;; This function is called by:
  2639 ;;		_colourclick_calibration
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text9
  2644  005136                     __ptext9:
  2645                           	callstack 0
  2646  005136                     _colourclick_testing:
  2647                           	callstack 14
  2648  005136                     
  2649                           ;colour_click.c: 206: void colourclick_testing(RGBC_val *initial, RGBC_val *current);col
      +                          our_click.c: 207: {;colour_click.c: 208:     unsigned int ambient = initial->C;
  2650  005136  0100               	movlb	0	; () banked
  2651  005138  EE20 F006          	lfsr	2,6
  2652  00513C  51E5               	movf	colourclick_testing@initial& (0+255),w,b
  2653  00513E  26D9               	addwf	fsr2l,f,c
  2654  005140  51E6               	movf	(colourclick_testing@initial+1)& (0+255),w,b
  2655  005142  22DA               	addwfc	fsr2h,f,c
  2656  005144  CFDE F19D          	movff	postinc2,colourclick_testing@ambient
  2657  005148  CFDD F19E          	movff	postdec2,colourclick_testing@ambient+1
  2658  00514C                     
  2659                           ; BSR set to: 0
  2660                           ;colour_click.c: 209:     unsigned int R = current->R;
  2661  00514C  C0E7  FFD9         	movff	colourclick_testing@current,fsr2l
  2662  005150  C0E8  FFDA         	movff	colourclick_testing@current+1,fsr2h
  2663  005154  CFDE F19F          	movff	postinc2,colourclick_testing@R
  2664  005158  CFDD F1A0          	movff	postdec2,colourclick_testing@R+1
  2665  00515C                     
  2666                           ; BSR set to: 0
  2667                           ;colour_click.c: 210:     unsigned int G = current->G;
  2668  00515C  EE20 F002          	lfsr	2,2
  2669  005160  51E7               	movf	colourclick_testing@current& (0+255),w,b
  2670  005162  26D9               	addwf	fsr2l,f,c
  2671  005164  51E8               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2672  005166  22DA               	addwfc	fsr2h,f,c
  2673  005168  CFDE F1A1          	movff	postinc2,colourclick_testing@G
  2674  00516C  CFDD F1A2          	movff	postdec2,colourclick_testing@G+1
  2675  005170                     
  2676                           ; BSR set to: 0
  2677                           ;colour_click.c: 211:     unsigned int B = current->B;
  2678  005170  EE20 F004          	lfsr	2,4
  2679  005174  51E7               	movf	colourclick_testing@current& (0+255),w,b
  2680  005176  26D9               	addwf	fsr2l,f,c
  2681  005178  51E8               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2682  00517A  22DA               	addwfc	fsr2h,f,c
  2683  00517C  CFDE F1A3          	movff	postinc2,colourclick_testing@B
  2684  005180  CFDD F1A4          	movff	postdec2,colourclick_testing@B+1
  2685  005184                     
  2686                           ; BSR set to: 0
  2687                           ;colour_click.c: 212:     unsigned int C = current->C;
  2688  005184  EE20 F006          	lfsr	2,6
  2689  005188  51E7               	movf	colourclick_testing@current& (0+255),w,b
  2690  00518A  26D9               	addwf	fsr2l,f,c
  2691  00518C  51E8               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2692  00518E  22DA               	addwfc	fsr2h,f,c
  2693  005190  CFDE F1A5          	movff	postinc2,colourclick_testing@C
  2694  005194  CFDD F1A6          	movff	postdec2,colourclick_testing@C+1
  2695  005198                     
  2696                           ; BSR set to: 0
  2697                           ;colour_click.c: 214:     char buf[40];;colour_click.c: 215:     sprintf(buf,"RGBC: %i %
      +                          i %i %i     Threshold: %i %i %i\n\r", R, G, B, C, interrupts_lowerbound, ambient, interr
      +                          upts_upperbound);
  2698  005198  0E75               	movlw	low colourclick_testing@buf
  2699  00519A  6FC3               	movwf	sprintf@s& (0+255),b
  2700  00519C  0E01               	movlw	high colourclick_testing@buf
  2701  00519E  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2702  0051A0  0E41               	movlw	low STR_19
  2703  0051A2  6FC5               	movwf	sprintf@fmt& (0+255),b
  2704  0051A4  0E0E               	movlw	high STR_19
  2705  0051A6  6FC6               	movwf	(sprintf@fmt+1)& (0+255),b
  2706  0051A8  C19F  F0C7         	movff	colourclick_testing@R,?_sprintf+4
  2707  0051AC  C1A0  F0C8         	movff	colourclick_testing@R+1,?_sprintf+5
  2708  0051B0  C1A1  F0C9         	movff	colourclick_testing@G,?_sprintf+6
  2709  0051B4  C1A2  F0CA         	movff	colourclick_testing@G+1,?_sprintf+7
  2710  0051B8  C1A3  F0CB         	movff	colourclick_testing@B,?_sprintf+8
  2711  0051BC  C1A4  F0CC         	movff	colourclick_testing@B+1,?_sprintf+9
  2712  0051C0  C1A5  F0CD         	movff	colourclick_testing@C,?_sprintf+10
  2713  0051C4  C1A6  F0CE         	movff	colourclick_testing@C+1,?_sprintf+11
  2714  0051C8  C052  F0CF         	movff	_interrupts_lowerbound,?_sprintf+12	;volatile
  2715  0051CC  C053  F0D0         	movff	_interrupts_lowerbound+1,?_sprintf+13	;volatile
  2716  0051D0  C19D  F0D1         	movff	colourclick_testing@ambient,?_sprintf+14
  2717  0051D4  C19E  F0D2         	movff	colourclick_testing@ambient+1,?_sprintf+15
  2718  0051D8  C055  F0D3         	movff	_interrupts_upperbound,?_sprintf+16	;volatile
  2719  0051DC  C056  F0D4         	movff	_interrupts_upperbound+1,?_sprintf+17	;volatile
  2720  0051E0  ECE2  F02C         	call	_sprintf	;wreg free
  2721  0051E4                     
  2722                           ;colour_click.c: 217:     sendStringSerial4(buf);
  2723  0051E4  0E75               	movlw	low colourclick_testing@buf
  2724  0051E6  6E09               	movwf	sendStringSerial4@string^0,c
  2725  0051E8  0E01               	movlw	high colourclick_testing@buf
  2726  0051EA  6E0A               	movwf	(sendStringSerial4@string+1)^0,c
  2727  0051EC  ECDA  F02F         	call	_sendStringSerial4	;wreg free
  2728  0051F0                     
  2729                           ;colour_click.c: 218:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2730  0051F0  0E29               	movlw	41
  2731  0051F2  0100               	movlb	0	; () banked
  2732  0051F4  6FEA               	movwf	(??_colourclick_testing+1)& (0+255),b
  2733  0051F6  0E96               	movlw	150
  2734  0051F8  6FE9               	movwf	??_colourclick_testing& (0+255),b
  2735  0051FA  0E7F               	movlw	127
  2736  0051FC                     u12387:
  2737  0051FC  2EE8               	decfsz	wreg,f,c
  2738  0051FE  D7FE               	bra	u12387
  2739  005200  2FE9               	decfsz	??_colourclick_testing& (0+255),f,b
  2740  005202  D7FC               	bra	u12387
  2741  005204  2FEA               	decfsz	(??_colourclick_testing+1)& (0+255),f,b
  2742  005206  D7FA               	bra	u12387
  2743  005208  0012               	return		;funcret
  2744  00520A                     __end_of_colourclick_testing:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _sprintf *****************
  2748 ;; Defined at:
  2749 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  s               2   99[BANK0 ] PTR unsigned char 
  2752 ;;		 -> colourclick_testing@buf(40), colourcards_testingRGBC@buf(30), 
  2753 ;;  fmt             2  101[BANK0 ] PTR const unsigned char 
  2754 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2755 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2756 ;;		 -> STR_3(64), STR_1(64), 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  f               6  127[BANK0 ] struct _IO_FILE
  2759 ;;  ap              2  125[BANK0 ] PTR void [1]
  2760 ;;		 -> ?_sprintf(2), 
  2761 ;;  ret             2    0        int 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2   99[BANK0 ] int 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2771 ;;      Params:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2775 ;;Total ram usage:       34 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 14
  2778 ;; This function calls:
  2779 ;;		_vfprintf
  2780 ;; This function is called by:
  2781 ;;		_colourclick_testing
  2782 ;;		_colourcards_testingRGBC
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text10
  2787  0059C4                     __ptext10:
  2788                           	callstack 0
  2789  0059C4                     _sprintf:
  2790                           	callstack 14
  2791  0059C4  0EC7               	movlw	low (?_sprintf+4)
  2792  0059C6  0100               	movlb	0	; () banked
  2793  0059C8  6FDD               	movwf	sprintf@ap& (0+255),b
  2794  0059CA  0E00               	movlw	high (?_sprintf+4)
  2795  0059CC  6FDE               	movwf	(sprintf@ap+1)& (0+255),b
  2796  0059CE  C0C3  F0DF         	movff	sprintf@s,sprintf@f
  2797  0059D2  C0C4  F0E0         	movff	sprintf@s+1,sprintf@f+1
  2798  0059D6                     
  2799                           ; BSR set to: 0
  2800  0059D6  0E00               	movlw	0
  2801  0059D8  6FE2               	movwf	(sprintf@f+3)& (0+255),b
  2802  0059DA  0E00               	movlw	0
  2803  0059DC  6FE1               	movwf	(sprintf@f+2)& (0+255),b
  2804  0059DE                     
  2805                           ; BSR set to: 0
  2806  0059DE  0E00               	movlw	0
  2807  0059E0  6FE4               	movwf	(sprintf@f+5)& (0+255),b
  2808  0059E2  0E00               	movlw	0
  2809  0059E4  6FE3               	movwf	(sprintf@f+4)& (0+255),b
  2810  0059E6                     
  2811                           ; BSR set to: 0
  2812  0059E6  0EDF               	movlw	low sprintf@f
  2813  0059E8  6FBD               	movwf	vfprintf@fp& (0+255),b
  2814  0059EA  0E00               	movlw	high sprintf@f
  2815  0059EC  6FBE               	movwf	(vfprintf@fp+1)& (0+255),b
  2816  0059EE  C0C5  F0BF         	movff	sprintf@fmt,vfprintf@fmt
  2817  0059F2  C0C6  F0C0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2818  0059F6  0EDD               	movlw	low sprintf@ap
  2819  0059F8  6FC1               	movwf	vfprintf@ap& (0+255),b
  2820  0059FA  0E00               	movlw	high sprintf@ap
  2821  0059FC  6FC2               	movwf	(vfprintf@ap+1)& (0+255),b
  2822  0059FE  ECF1  F02B         	call	_vfprintf	;wreg free
  2823  005A02  0100               	movlb	0	; () banked
  2824  005A04  51E1               	movf	(sprintf@f+2)& (0+255),w,b
  2825  005A06  25C3               	addwf	sprintf@s& (0+255),w,b
  2826  005A08  6ED9               	movwf	fsr2l,c
  2827  005A0A  51E2               	movf	(sprintf@f+3)& (0+255),w,b
  2828  005A0C  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2829  005A0E  6EDA               	movwf	fsr2h,c
  2830  005A10  0E00               	movlw	0
  2831  005A12  6EDF               	movwf	indf2,c
  2832  005A14                     
  2833                           ; BSR set to: 0
  2834  005A14  0012               	return		;funcret
  2835  005A16                     __end_of_sprintf:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _vfprintf *****************
  2839 ;; Defined at:
  2840 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  fp              2   93[BANK0 ] PTR struct _IO_FILE
  2843 ;;		 -> sprintf@f(6), 
  2844 ;;  fmt             2   95[BANK0 ] PTR const unsigned char 
  2845 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2846 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2847 ;;		 -> STR_3(64), STR_1(64), 
  2848 ;;  ap              2   97[BANK0 ] PTR PTR void 
  2849 ;;		 -> sprintf@ap(2), 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  2852 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2853 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2854 ;;		 -> STR_3(64), STR_1(64), 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2   93[BANK0 ] int 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2864 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;Total ram usage:        8 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 13
  2871 ;; This function calls:
  2872 ;;		_vfpfcnvrt
  2873 ;; This function is called by:
  2874 ;;		_sprintf
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text11
  2879  0057E2                     __ptext11:
  2880                           	callstack 0
  2881  0057E2                     _vfprintf:
  2882                           	callstack 14
  2883  0057E2                     
  2884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2885  0057E2  C0BF  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  2886  0057E6  C0C0  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2887  0057EA                     
  2888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2889  0057EA  0E00               	movlw	0
  2890  0057EC  0101               	movlb	1	; () banked
  2891  0057EE  6F1D               	movwf	(_nout+1)& (0+255),b
  2892  0057F0  0E00               	movlw	0
  2893  0057F2  6F1C               	movwf	_nout& (0+255),b
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2896  0057F4  EF13  F02C         	goto	l8357
  2897  0057F8                     l8355:
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2901  0057F8  C0BD  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  2902  0057FC  C0BE  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2903  005800  0E4E               	movlw	low vfprintf@cfmt
  2904  005802  0100               	movlb	0	; () banked
  2905  005804  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  2906  005806  0E00               	movlw	high vfprintf@cfmt
  2907  005808  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2908  00580A  C0C1  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  2909  00580E  C0C2  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2910  005812  EC5D  F011         	call	_vfpfcnvrt	;wreg free
  2911  005816  0100               	movlb	0	; () banked
  2912  005818  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  2913  00581A  0101               	movlb	1	; () banked
  2914  00581C  271C               	addwf	_nout& (0+255),f,b
  2915  00581E  0100               	movlb	0	; () banked
  2916  005820  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2917  005822  0101               	movlb	1	; () banked
  2918  005824  231D               	addwfc	(_nout+1)& (0+255),f,b
  2919  005826                     l8357:
  2920                           
  2921                           ; BSR set to: 1
  2922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2923  005826  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2924  00582A  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2925  00582E                     	if	0	;tblptru may be non-zero
  2926  00582E                     	endif
  2927  00582E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2928  00582E  0E00               	movlw	low (__mediumconst shr (0+16))
  2929  005830  6EF8               	movwf	tblptru,c
  2930  005832                     	endif
  2931  005832  0008               	tblrd		*
  2932  005834  50F5               	movf	tablat,w,c
  2933  005836  0900               	iorlw	0
  2934  005838  A4D8               	btfss	status,2,c
  2935  00583A  EF21  F02C         	goto	u11191
  2936  00583E  EF23  F02C         	goto	u11190
  2937  005842                     u11191:
  2938  005842  EFFC  F02B         	goto	l8355
  2939  005846                     u11190:
  2940  005846                     
  2941                           ; BSR set to: 1
  2942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2943  005846  C11C  F0BD         	movff	_nout,?_vfprintf
  2944  00584A  C11D  F0BE         	movff	_nout+1,?_vfprintf+1
  2945  00584E                     
  2946                           ; BSR set to: 1
  2947  00584E  0012               	return		;funcret
  2948  005850                     __end_of_vfprintf:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _vfpfcnvrt *****************
  2952 ;; Defined at:
  2953 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  2956 ;;		 -> sprintf@f(6), 
  2957 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  2958 ;;		 -> vfprintf@cfmt(2), 
  2959 ;;  ap              2   65[BANK0 ] PTR PTR void 
  2960 ;;		 -> sprintf@ap(2), 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  ll              8   71[BANK0 ] long long 
  2963 ;;  llu             8    0        unsigned long long 
  2964 ;;  f               4   85[BANK0 ] unsigned long long 
  2965 ;;  ct              3   89[BANK0 ] unsigned char [3]
  2966 ;;  vp              3    0        PTR void 
  2967 ;;  cp              2   79[BANK0 ] PTR unsigned char 
  2968 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(5), 
  2969 ;;		 -> STR_12(7), STR_10(11), STR_8(6), STR_6(5), 
  2970 ;;		 -> STR_4(4), STR_2(7), 
  2971 ;;  i               2    0        int 
  2972 ;;  done            2    0        int 
  2973 ;;  c               1   92[BANK0 ] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2   61[BANK0 ] int 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2983 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;Total ram usage:       32 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 12
  2990 ;; This function calls:
  2991 ;;		_atoi
  2992 ;;		_dtoa
  2993 ;;		_efgtoa
  2994 ;;		_fputc
  2995 ;;		_isdigit
  2996 ;;		_isupper
  2997 ;;		_stoa
  2998 ;;		_strncmp
  2999 ;;		_tolower
  3000 ;; This function is called by:
  3001 ;;		_vfprintf
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text12
  3006  0022BA                     __ptext12:
  3007                           	callstack 0
  3008  0022BA                     _vfpfcnvrt:
  3009                           	callstack 14
  3010  0022BA                     
  3011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3012  0022BA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3013  0022BE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3014  0022C2  CFDE FFF6          	movff	postinc2,tblptrl
  3015  0022C6  CFDD FFF7          	movff	postdec2,tblptrh
  3016  0022CA                     	if	0	;tblptru may be non-zero
  3017  0022CA                     	endif
  3018  0022CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3019  0022CA  0E00               	movlw	low (__mediumconst shr (0+16))
  3020  0022CC  6EF8               	movwf	tblptru,c
  3021  0022CE                     	endif
  3022  0022CE  0008               	tblrd		*
  3023  0022D0  50F5               	movf	tablat,w,c
  3024  0022D2  0A25               	xorlw	37
  3025  0022D4  A4D8               	btfss	status,2,c
  3026  0022D6  EF6F  F011         	goto	u10971
  3027  0022DA  EF71  F011         	goto	u10970
  3028  0022DE                     u10971:
  3029  0022DE  EF36  F014         	goto	l8299
  3030  0022E2                     u10970:
  3031  0022E2                     
  3032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3033  0022E2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3034  0022E6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3035  0022EA  2ADE               	incf	postinc2,f,c
  3036  0022EC  0E00               	movlw	0
  3037  0022EE  22DD               	addwfc	postdec2,f,c
  3038  0022F0                     
  3039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3040  0022F0  0E00               	movlw	0
  3041  0022F2  0101               	movlb	1	; () banked
  3042  0022F4  6F1F               	movwf	(_width+1)& (0+255),b
  3043  0022F6  0E00               	movlw	0
  3044  0022F8  6F1E               	movwf	_width& (0+255),b
  3045  0022FA  C11E  F050         	movff	_width,_flags
  3046  0022FE  C11F  F051         	movff	_width+1,_flags+1
  3047  002302                     
  3048                           ; BSR set to: 1
  3049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3050  002302  0100               	movlb	0	; () banked
  3051  002304  69EF               	setf	_prec& (0+255),b
  3052  002306  69F0               	setf	(_prec+1)& (0+255),b
  3053  002308                     
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3056  002308  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3057  00230C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3058  002310  CFDE FFF6          	movff	postinc2,tblptrl
  3059  002314  CFDD FFF7          	movff	postdec2,tblptrh
  3060  002318                     	if	0	;tblptru may be non-zero
  3061  002318                     	endif
  3062  002318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3063  002318  0E00               	movlw	low (__mediumconst shr (0+16))
  3064  00231A  6EF8               	movwf	tblptru,c
  3065  00231C                     	endif
  3066  00231C  0008               	tblrd		*
  3067  00231E  50F5               	movf	tablat,w,c
  3068  002320  0A2E               	xorlw	46
  3069  002322  A4D8               	btfss	status,2,c
  3070  002324  EF96  F011         	goto	u10981
  3071  002328  EF98  F011         	goto	u10980
  3072  00232C                     u10981:
  3073  00232C  EF1A  F012         	goto	l8227
  3074  002330                     u10980:
  3075  002330                     
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3078  002330  0E00               	movlw	0
  3079  002332  6FF0               	movwf	(_prec+1)& (0+255),b
  3080  002334  0E00               	movlw	0
  3081  002336  6FEF               	movwf	_prec& (0+255),b
  3082  002338                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3085  002338  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3086  00233C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3087  002340  2ADE               	incf	postinc2,f,c
  3088  002342  0E00               	movlw	0
  3089  002344  22DD               	addwfc	postdec2,f,c
  3090  002346                     
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3093  002346  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3094  00234A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3095  00234E  CFDE FFF6          	movff	postinc2,tblptrl
  3096  002352  CFDD FFF7          	movff	postdec2,tblptrh
  3097  002356                     	if	0	;tblptru may be non-zero
  3098  002356                     	endif
  3099  002356                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3100  002356  0E00               	movlw	low (__mediumconst shr (0+16))
  3101  002358  6EF8               	movwf	tblptru,c
  3102  00235A                     	endif
  3103  00235A  0008               	tblrd		*
  3104  00235C  50F5               	movf	tablat,w,c
  3105  00235E  0A2A               	xorlw	42
  3106  002360  A4D8               	btfss	status,2,c
  3107  002362  EFB5  F011         	goto	u10991
  3108  002366  EFB7  F011         	goto	u10990
  3109  00236A                     u10991:
  3110  00236A  EFD4  F011         	goto	l8217
  3111  00236E                     u10990:
  3112  00236E                     
  3113                           ; BSR set to: 0
  3114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3115  00236E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3116  002372  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3117  002376  2ADE               	incf	postinc2,f,c
  3118  002378  0E00               	movlw	0
  3119  00237A  22DD               	addwfc	postdec2,f,c
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3122  00237C  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3123  002380  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3124  002384  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  3125  002388  0E02               	movlw	2
  3126  00238A  26DE               	addwf	postinc2,f,c
  3127  00238C  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  3128  002390  0E00               	movlw	0
  3129  002392  22DD               	addwfc	postdec2,f,c
  3130  002394  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3131  002398  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3132  00239C  CFDE F0EF          	movff	postinc2,_prec
  3133  0023A0  CFDD F0F0          	movff	postdec2,_prec+1
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3136  0023A4  EF1A  F012         	goto	l8227
  3137  0023A8                     l8217:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3141  0023A8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3142  0023AC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3143  0023B0  CFDE F00F          	movff	postinc2,atoi@s
  3144  0023B4  CFDD F010          	movff	postdec2,atoi@s+1
  3145  0023B8  ECA9  F01F         	call	_atoi	;wreg free
  3146  0023BC  C00F  F0EF         	movff	?_atoi,_prec
  3147  0023C0  C010  F0F0         	movff	?_atoi+1,_prec+1
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3150  0023C4  EFEB  F011         	goto	l8221
  3151  0023C8                     l8219:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3155  0023C8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3156  0023CC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3157  0023D0  2ADE               	incf	postinc2,f,c
  3158  0023D2  0E00               	movlw	0
  3159  0023D4  22DD               	addwfc	postdec2,f,c
  3160  0023D6                     l8221:
  3161  0023D6  0ED0               	movlw	208
  3162  0023D8  0100               	movlb	0	; () banked
  3163  0023DA  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  3164  0023DC  0EFF               	movlw	255
  3165  0023DE  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3166  0023E0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3167  0023E4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3168  0023E8  CFDE FFF6          	movff	postinc2,tblptrl
  3169  0023EC  CFDD FFF7          	movff	postdec2,tblptrh
  3170  0023F0                     	if	0	;tblptru may be non-zero
  3171  0023F0                     	endif
  3172  0023F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3173  0023F0  0E00               	movlw	low (__mediumconst shr (0+16))
  3174  0023F2  6EF8               	movwf	tblptru,c
  3175  0023F4                     	endif
  3176  0023F4  0008               	tblrd		*
  3177  0023F6  50F5               	movf	tablat,w,c
  3178  0023F8  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3179  0023FA  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3180  0023FC  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  3181  0023FE  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3182  002400  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3183  002402  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3184  002404  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3185  002406  E10A               	bnz	u11000
  3186  002408  0E0A               	movlw	10
  3187  00240A  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3188  00240C  A0D8               	btfss	status,0,c
  3189  00240E  EF0B  F012         	goto	u11001
  3190  002412  EF0E  F012         	goto	u11000
  3191  002416                     u11001:
  3192  002416  0E01               	movlw	1
  3193  002418  EF0F  F012         	goto	u11010
  3194  00241C                     u11000:
  3195  00241C  0E00               	movlw	0
  3196  00241E                     u11010:
  3197  00241E  6FB1               	movwf	_vfpfcnvrt$3280& (0+255),b
  3198  002420  6BB2               	clrf	(_vfpfcnvrt$3280+1)& (0+255),b
  3199  002422                     
  3200                           ; BSR set to: 0
  3201  002422  51B1               	movf	_vfpfcnvrt$3280& (0+255),w,b
  3202  002424  11B2               	iorwf	(_vfpfcnvrt$3280+1)& (0+255),w,b
  3203  002426  A4D8               	btfss	status,2,c
  3204  002428  EF18  F012         	goto	u11021
  3205  00242C  EF1A  F012         	goto	u11020
  3206  002430                     u11021:
  3207  002430  EFE4  F011         	goto	l8219
  3208  002434                     u11020:
  3209  002434                     l8227:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3213  002434  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3214  002438  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3215  00243C  CFDE FFF6          	movff	postinc2,tblptrl
  3216  002440  CFDD FFF7          	movff	postdec2,tblptrh
  3217  002444                     	if	0	;tblptru may be non-zero
  3218  002444                     	endif
  3219  002444                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3220  002444  0E00               	movlw	low (__mediumconst shr (0+16))
  3221  002446  6EF8               	movwf	tblptru,c
  3222  002448                     	endif
  3223  002448  0008               	tblrd		*
  3224  00244A  50F5               	movf	tablat,w,c
  3225  00244C  6E0E               	movwf	tolower@c^0,c
  3226  00244E  6A0F               	clrf	(tolower@c+1)^0,c
  3227  002450  EC28  F02C         	call	_tolower	;wreg free
  3228  002454  500E               	movf	?_tolower^0,w,c
  3229  002456  0100               	movlb	0	; () banked
  3230  002458  6FB9               	movwf	vfpfcnvrt@ct& (0+255),b
  3231  00245A                     
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3234  00245A  51B9               	movf	vfpfcnvrt@ct& (0+255),w,b
  3235  00245C  B4D8               	btfsc	status,2,c
  3236  00245E  EF33  F012         	goto	u11031
  3237  002462  EF35  F012         	goto	u11030
  3238  002466                     u11031:
  3239  002466  EF73  F012         	goto	l8237
  3240  00246A                     u11030:
  3241  00246A                     
  3242                           ; BSR set to: 0
  3243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3244  00246A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3245  00246E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3246  002472  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  3247  002476  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  3248  00247A  0E01               	movlw	1
  3249  00247C  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  3250  00247E  0E00               	movlw	0
  3251  002480  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3252  002482  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3253  002486  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3254  00248A                     	if	0	;tblptru may be non-zero
  3255  00248A                     	endif
  3256  00248A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3257  00248A  0E00               	movlw	low (__mediumconst shr (0+16))
  3258  00248C  6EF8               	movwf	tblptru,c
  3259  00248E                     	endif
  3260  00248E  0008               	tblrd		*
  3261  002490  50F5               	movf	tablat,w,c
  3262  002492  6E0E               	movwf	tolower@c^0,c
  3263  002494  6A0F               	clrf	(tolower@c+1)^0,c
  3264  002496  EC28  F02C         	call	_tolower	;wreg free
  3265  00249A  500E               	movf	?_tolower^0,w,c
  3266  00249C  0100               	movlb	0	; () banked
  3267  00249E  6FBA               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3268  0024A0                     
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3271  0024A0  51BA               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3272  0024A2  B4D8               	btfsc	status,2,c
  3273  0024A4  EF56  F012         	goto	u11041
  3274  0024A8  EF58  F012         	goto	u11040
  3275  0024AC                     u11041:
  3276  0024AC  EF73  F012         	goto	l8237
  3277  0024B0                     u11040:
  3278  0024B0                     
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3281  0024B0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3282  0024B4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3283  0024B8  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  3284  0024BC  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  3285  0024C0  0E02               	movlw	2
  3286  0024C2  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  3287  0024C4  0E00               	movlw	0
  3288  0024C6  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3289  0024C8  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3290  0024CC  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3291  0024D0                     	if	0	;tblptru may be non-zero
  3292  0024D0                     	endif
  3293  0024D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3294  0024D0  0E00               	movlw	low (__mediumconst shr (0+16))
  3295  0024D2  6EF8               	movwf	tblptru,c
  3296  0024D4                     	endif
  3297  0024D4  0008               	tblrd		*
  3298  0024D6  50F5               	movf	tablat,w,c
  3299  0024D8  6E0E               	movwf	tolower@c^0,c
  3300  0024DA  6A0F               	clrf	(tolower@c+1)^0,c
  3301  0024DC  EC28  F02C         	call	_tolower	;wreg free
  3302  0024E0  500E               	movf	?_tolower^0,w,c
  3303  0024E2  0100               	movlb	0	; () banked
  3304  0024E4  6FBB               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3305  0024E6                     l8237:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3309  0024E6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3310  0024EA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3311  0024EE  CFDE FFF6          	movff	postinc2,tblptrl
  3312  0024F2  CFDD FFF7          	movff	postdec2,tblptrh
  3313  0024F6                     	if	0	;tblptru may be non-zero
  3314  0024F6                     	endif
  3315  0024F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3316  0024F6  0E00               	movlw	low (__mediumconst shr (0+16))
  3317  0024F8  6EF8               	movwf	tblptru,c
  3318  0024FA                     	endif
  3319  0024FA  0008               	tblrd		*
  3320  0024FC  50F5               	movf	tablat,w,c
  3321  0024FE  0A64               	xorlw	100
  3322  002500  B4D8               	btfsc	status,2,c
  3323  002502  EF85  F012         	goto	u11051
  3324  002506  EF87  F012         	goto	u11050
  3325  00250A                     u11051:
  3326  00250A  EF9B  F012         	goto	l8241
  3327  00250E                     u11050:
  3328  00250E                     
  3329                           ; BSR set to: 0
  3330  00250E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3331  002512  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3332  002516  CFDE FFF6          	movff	postinc2,tblptrl
  3333  00251A  CFDD FFF7          	movff	postdec2,tblptrh
  3334  00251E                     	if	0	;tblptru may be non-zero
  3335  00251E                     	endif
  3336  00251E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3337  00251E  0E00               	movlw	low (__mediumconst shr (0+16))
  3338  002520  6EF8               	movwf	tblptru,c
  3339  002522                     	endif
  3340  002522  0008               	tblrd		*
  3341  002524  50F5               	movf	tablat,w,c
  3342  002526  0A69               	xorlw	105
  3343  002528  A4D8               	btfss	status,2,c
  3344  00252A  EF99  F012         	goto	u11061
  3345  00252E  EF9B  F012         	goto	u11060
  3346  002532                     u11061:
  3347  002532  EFDB  F012         	goto	l8247
  3348  002536                     u11060:
  3349  002536                     l8241:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3353  002536  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3354  00253A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3355  00253E  2ADE               	incf	postinc2,f,c
  3356  002540  0E00               	movlw	0
  3357  002542  22DD               	addwfc	postdec2,f,c
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3360  002544  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3361  002548  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3362  00254C  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  3363  002550  0E02               	movlw	2
  3364  002552  26DE               	addwf	postinc2,f,c
  3365  002554  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  3366  002558  0E00               	movlw	0
  3367  00255A  22DD               	addwfc	postdec2,f,c
  3368  00255C  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3369  002560  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3370  002564  CFDE F0A7          	movff	postinc2,vfpfcnvrt@ll
  3371  002568  CFDD F0A8          	movff	postdec2,vfpfcnvrt@ll+1
  3372  00256C  0E00               	movlw	0
  3373  00256E  BFA8               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3374  002570  0EFF               	movlw	-1
  3375  002572  6FA9               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3376  002574  6FAA               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3377  002576  6FAB               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3378  002578  6FAC               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3379  00257A  6FAD               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3380  00257C  6FAE               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3381  00257E                     
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3384  00257E  C09D  F023         	movff	vfpfcnvrt@fp,dtoa@fp
  3385  002582  C09E  F024         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3386  002586  C0A7  F025         	movff	vfpfcnvrt@ll,dtoa@d
  3387  00258A  C0A8  F026         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3388  00258E  C0A9  F027         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3389  002592  C0AA  F028         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3390  002596  C0AB  F029         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3391  00259A  C0AC  F02A         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3392  00259E  C0AD  F02B         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3393  0025A2  C0AE  F02C         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3394  0025A6  EC96  F01A         	call	_dtoa	;wreg free
  3395  0025AA  C023  F09D         	movff	?_dtoa,?_vfpfcnvrt
  3396  0025AE  C024  F09E         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3397  0025B2  EF53  F014         	goto	l1674
  3398  0025B6                     l8247:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3402  0025B6  0E66               	movlw	102
  3403  0025B8  19B9               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3404  0025BA  A4D8               	btfss	status,2,c
  3405  0025BC  EFE2  F012         	goto	u11071
  3406  0025C0  EFE4  F012         	goto	u11070
  3407  0025C4                     u11071:
  3408  0025C4  EF26  F013         	goto	l8259
  3409  0025C8                     u11070:
  3410  0025C8                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3413  0025C8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3414  0025CC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3415  0025D0  CFDE FFF6          	movff	postinc2,tblptrl
  3416  0025D4  CFDD FFF7          	movff	postdec2,tblptrh
  3417  0025D8                     	if	0	;tblptru may be non-zero
  3418  0025D8                     	endif
  3419  0025D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3420  0025D8  0E00               	movlw	low (__mediumconst shr (0+16))
  3421  0025DA  6EF8               	movwf	tblptru,c
  3422  0025DC                     	endif
  3423  0025DC  0008               	tblrd		*
  3424  0025DE  CFF5 F0BC          	movff	tablat,vfpfcnvrt@c
  3425  0025E2                     
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3428  0025E2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3429  0025E6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3430  0025EA  2ADE               	incf	postinc2,f,c
  3431  0025EC  0E00               	movlw	0
  3432  0025EE  22DD               	addwfc	postdec2,f,c
  3433  0025F0                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3436  0025F0  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3437  0025F4  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3438  0025F8  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  3439  0025FC  0E04               	movlw	4
  3440  0025FE  26DE               	addwf	postinc2,f,c
  3441  002600  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  3442  002604  0E00               	movlw	0
  3443  002606  22DD               	addwfc	postdec2,f,c
  3444  002608  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3445  00260C  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3446  002610  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f
  3447  002614  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f+1
  3448  002618  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+2
  3449  00261C  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+3
  3450  002620                     l8255:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3454  002620  C09D  F047         	movff	vfpfcnvrt@fp,efgtoa@fp
  3455  002624  C09E  F048         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3456  002628  C0B5  F049         	movff	vfpfcnvrt@f,efgtoa@f
  3457  00262C  C0B6  F04A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3458  002630  C0B7  F04B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3459  002634  C0B8  F04C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3460  002638  C0BC  F04D         	movff	vfpfcnvrt@c,efgtoa@c
  3461  00263C  EC5C  F007         	call	_efgtoa	;wreg free
  3462  002640  C047  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  3463  002644  C048  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3464  002648  EF53  F014         	goto	l1674
  3465  00264C                     l8259:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3469  00264C  0EB9               	movlw	low vfpfcnvrt@ct
  3470  00264E  6E08               	movwf	strncmp@_l^0,c
  3471  002650  0E00               	movlw	high vfpfcnvrt@ct
  3472  002652  6E09               	movwf	(strncmp@_l+1)^0,c
  3473  002654  0EB3               	movlw	low STR_28
  3474  002656  6E0A               	movwf	strncmp@_r^0,c
  3475  002658  0E0E               	movlw	high STR_28
  3476  00265A  6E0B               	movwf	(strncmp@_r+1)^0,c
  3477  00265C  0E00               	movlw	0
  3478  00265E  6E0D               	movwf	(strncmp@n+1)^0,c
  3479  002660  0E02               	movlw	2
  3480  002662  6E0C               	movwf	strncmp@n^0,c
  3481  002664  EC2A  F028         	call	_strncmp	;wreg free
  3482  002668  5008               	movf	?_strncmp^0,w,c
  3483  00266A  1009               	iorwf	(?_strncmp+1)^0,w,c
  3484  00266C  A4D8               	btfss	status,2,c
  3485  00266E  EF3B  F013         	goto	u11081
  3486  002672  EF3D  F013         	goto	u11080
  3487  002676                     u11081:
  3488  002676  EFBD  F013         	goto	l8275
  3489  00267A                     u11080:
  3490  00267A                     
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3492  00267A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3493  00267E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3494  002682  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  3495  002686  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  3496  00268A  0E01               	movlw	1
  3497  00268C  0100               	movlb	0	; () banked
  3498  00268E  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  3499  002690  0E00               	movlw	0
  3500  002692  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3501  002694  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3502  002698  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3503  00269C                     	if	0	;tblptru may be non-zero
  3504  00269C                     	endif
  3505  00269C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3506  00269C  0E00               	movlw	low (__mediumconst shr (0+16))
  3507  00269E  6EF8               	movwf	tblptru,c
  3508  0026A0                     	endif
  3509  0026A0  0008               	tblrd		*
  3510  0026A2  CFF5 F0BC          	movff	tablat,vfpfcnvrt@c
  3511  0026A6  0EBF               	movlw	191
  3512  0026A8  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  3513  0026AA  0EFF               	movlw	255
  3514  0026AC  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3515  0026AE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3516  0026B2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3517  0026B6  CFDE FFF6          	movff	postinc2,tblptrl
  3518  0026BA  CFDD FFF7          	movff	postdec2,tblptrh
  3519  0026BE                     	if	0	;tblptru may be non-zero
  3520  0026BE                     	endif
  3521  0026BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3522  0026BE  0E00               	movlw	low (__mediumconst shr (0+16))
  3523  0026C0  6EF8               	movwf	tblptru,c
  3524  0026C2                     	endif
  3525  0026C2  0008               	tblrd		*
  3526  0026C4  50F5               	movf	tablat,w,c
  3527  0026C6  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3528  0026C8  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3529  0026CA  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  3530  0026CC  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3531  0026CE  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3532  0026D0  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3533  0026D2  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3534  0026D4  E10A               	bnz	u11090
  3535  0026D6  0E1A               	movlw	26
  3536  0026D8  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3537  0026DA  A0D8               	btfss	status,0,c
  3538  0026DC  EF72  F013         	goto	u11091
  3539  0026E0  EF75  F013         	goto	u11090
  3540  0026E4                     u11091:
  3541  0026E4  0E01               	movlw	1
  3542  0026E6  EF76  F013         	goto	u11100
  3543  0026EA                     u11090:
  3544  0026EA  0E00               	movlw	0
  3545  0026EC                     u11100:
  3546  0026EC  6FB3               	movwf	_vfpfcnvrt$3285& (0+255),b
  3547  0026EE  6BB4               	clrf	(_vfpfcnvrt$3285+1)& (0+255),b
  3548  0026F0                     
  3549                           ; BSR set to: 0
  3550  0026F0  51B3               	movf	_vfpfcnvrt$3285& (0+255),w,b
  3551  0026F2  11B4               	iorwf	(_vfpfcnvrt$3285+1)& (0+255),w,b
  3552  0026F4  B4D8               	btfsc	status,2,c
  3553  0026F6  EF7F  F013         	goto	u11111
  3554  0026FA  EF81  F013         	goto	u11110
  3555  0026FE                     u11111:
  3556  0026FE  EF9B  F013         	goto	l8269
  3557  002702                     u11110:
  3558  002702                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3561  002702  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3562  002706  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3563  00270A  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  3564  00270E  0E04               	movlw	4
  3565  002710  26DE               	addwf	postinc2,f,c
  3566  002712  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  3567  002716  0E00               	movlw	0
  3568  002718  22DD               	addwfc	postdec2,f,c
  3569  00271A  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3570  00271E  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3571  002722  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f
  3572  002726  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f+1
  3573  00272A  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+2
  3574  00272E  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+3
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3577  002732  EFB3  F013         	goto	l1682
  3578  002736                     l8269:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3582  002736  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3583  00273A  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3584  00273E  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  3585  002742  0E04               	movlw	4
  3586  002744  26DE               	addwf	postinc2,f,c
  3587  002746  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  3588  00274A  0E00               	movlw	0
  3589  00274C  22DD               	addwfc	postdec2,f,c
  3590  00274E  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3591  002752  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3592  002756  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f
  3593  00275A  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f+1
  3594  00275E  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+2
  3595  002762  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+3
  3596  002766                     l1682:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3600  002766  0E02               	movlw	2
  3601  002768  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3602  00276C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3603  002770  26DE               	addwf	postinc2,f,c
  3604  002772  0E00               	movlw	0
  3605  002774  22DD               	addwfc	postdec2,f,c
  3606  002776  EF10  F013         	goto	l8255
  3607  00277A                     l8275:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  3610  00277A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3611  00277E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3612  002782  CFDE FFF6          	movff	postinc2,tblptrl
  3613  002786  CFDD FFF7          	movff	postdec2,tblptrh
  3614  00278A                     	if	0	;tblptru may be non-zero
  3615  00278A                     	endif
  3616  00278A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3617  00278A  0E00               	movlw	low (__mediumconst shr (0+16))
  3618  00278C  6EF8               	movwf	tblptru,c
  3619  00278E                     	endif
  3620  00278E  0008               	tblrd		*
  3621  002790  50F5               	movf	tablat,w,c
  3622  002792  0A73               	xorlw	115
  3623  002794  A4D8               	btfss	status,2,c
  3624  002796  EFCF  F013         	goto	u11121
  3625  00279A  EFD1  F013         	goto	u11120
  3626  00279E                     u11121:
  3627  00279E  EFFC  F013         	goto	l8283
  3628  0027A2                     u11120:
  3629  0027A2                     
  3630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  3631  0027A2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3632  0027A6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3633  0027AA  2ADE               	incf	postinc2,f,c
  3634  0027AC  0E00               	movlw	0
  3635  0027AE  22DD               	addwfc	postdec2,f,c
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3638  0027B0  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3639  0027B4  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3640  0027B8  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  3641  0027BC  0E02               	movlw	2
  3642  0027BE  26DE               	addwf	postinc2,f,c
  3643  0027C0  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  3644  0027C4  0E00               	movlw	0
  3645  0027C6  22DD               	addwfc	postdec2,f,c
  3646  0027C8  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3647  0027CC  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3648  0027D0  CFDE F0AF          	movff	postinc2,vfpfcnvrt@cp
  3649  0027D4  CFDD F0B0          	movff	postdec2,vfpfcnvrt@cp+1
  3650  0027D8                     
  3651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  3652  0027D8  C09D  F011         	movff	vfpfcnvrt@fp,stoa@fp
  3653  0027DC  C09E  F012         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3654  0027E0  C0AF  F013         	movff	vfpfcnvrt@cp,stoa@s
  3655  0027E4  C0B0  F014         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3656  0027E8  EC7B  F020         	call	_stoa	;wreg free
  3657  0027EC  C011  F09D         	movff	?_stoa,?_vfpfcnvrt
  3658  0027F0  C012  F09E         	movff	?_stoa+1,?_vfpfcnvrt+1
  3659  0027F4  EF53  F014         	goto	l1674
  3660  0027F8                     l8283:
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3663  0027F8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3664  0027FC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3665  002800  CFDE FFF6          	movff	postinc2,tblptrl
  3666  002804  CFDD FFF7          	movff	postdec2,tblptrh
  3667  002808                     	if	0	;tblptru may be non-zero
  3668  002808                     	endif
  3669  002808                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3670  002808  0E00               	movlw	low (__mediumconst shr (0+16))
  3671  00280A  6EF8               	movwf	tblptru,c
  3672  00280C                     	endif
  3673  00280C  0008               	tblrd		*
  3674  00280E  50F5               	movf	tablat,w,c
  3675  002810  0A25               	xorlw	37
  3676  002812  A4D8               	btfss	status,2,c
  3677  002814  EF0E  F014         	goto	u11131
  3678  002818  EF10  F014         	goto	u11130
  3679  00281C                     u11131:
  3680  00281C  EF28  F014         	goto	l8293
  3681  002820                     u11130:
  3682  002820                     
  3683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3684  002820  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3685  002824  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3686  002828  2ADE               	incf	postinc2,f,c
  3687  00282A  0E00               	movlw	0
  3688  00282C  22DD               	addwfc	postdec2,f,c
  3689  00282E                     
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3691  00282E  0E00               	movlw	0
  3692  002830  6E09               	movwf	(fputc@c+1)^0,c
  3693  002832  0E25               	movlw	37
  3694  002834  6E08               	movwf	fputc@c^0,c
  3695  002836  C09D  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  3696  00283A  C09E  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3697  00283E  EC05  F029         	call	_fputc	;wreg free
  3698  002842                     l8289:
  3699                           
  3700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3701  002842  0E00               	movlw	0
  3702  002844  0100               	movlb	0	; () banked
  3703  002846  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3704  002848  0E01               	movlw	1
  3705  00284A  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  3706  00284C  EF53  F014         	goto	l1674
  3707  002850                     l8293:
  3708                           
  3709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3710  002850  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3711  002854  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3712  002858  2ADE               	incf	postinc2,f,c
  3713  00285A  0E00               	movlw	0
  3714  00285C  22DD               	addwfc	postdec2,f,c
  3715  00285E                     
  3716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3717  00285E  0E00               	movlw	0
  3718  002860  0100               	movlb	0	; () banked
  3719  002862  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3720  002864  0E00               	movlw	0
  3721  002866  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  3722  002868  EF53  F014         	goto	l1674
  3723  00286C                     l8299:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3726  00286C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3727  002870  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3728  002874  CFDE FFF6          	movff	postinc2,tblptrl
  3729  002878  CFDD FFF7          	movff	postdec2,tblptrh
  3730  00287C                     	if	0	;tblptru may be non-zero
  3731  00287C                     	endif
  3732  00287C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3733  00287C  0E00               	movlw	low (__mediumconst shr (0+16))
  3734  00287E  6EF8               	movwf	tblptru,c
  3735  002880                     	endif
  3736  002880  0008               	tblrd		*
  3737  002882  50F5               	movf	tablat,w,c
  3738  002884  6E08               	movwf	fputc@c^0,c
  3739  002886  6A09               	clrf	(fputc@c+1)^0,c
  3740  002888  C09D  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  3741  00288C  C09E  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3742  002890  EC05  F029         	call	_fputc	;wreg free
  3743  002894                     
  3744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3745  002894  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3746  002898  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3747  00289C  2ADE               	incf	postinc2,f,c
  3748  00289E  0E00               	movlw	0
  3749  0028A0  22DD               	addwfc	postdec2,f,c
  3750  0028A2  EF21  F014         	goto	l8289
  3751  0028A6                     l1674:
  3752  0028A6  0012               	return		;funcret
  3753  0028A8                     __end_of_vfpfcnvrt:
  3754                           	callstack 0
  3755                           
  3756 ;; *************** function _strncmp *****************
  3757 ;; Defined at:
  3758 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  _l              2    7[COMRAM] PTR const unsigned char 
  3761 ;;		 -> vfpfcnvrt@ct(3), 
  3762 ;;  _r              2    9[COMRAM] PTR const unsigned char 
  3763 ;;		 -> STR_30(3), 
  3764 ;;  n               2   11[COMRAM] unsigned int 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  r               2   16[COMRAM] PTR const unsigned char 
  3767 ;;		 -> STR_30(3), 
  3768 ;;  l               2   14[COMRAM] PTR const unsigned char 
  3769 ;;		 -> vfpfcnvrt@ct(3), 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  2    7[COMRAM] int 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3779 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3780 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;Total ram usage:       11 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; Hardware stack levels required when called: 7
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_vfpfcnvrt
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text13
  3794  005054                     __ptext13:
  3795                           	callstack 0
  3796  005054                     _strncmp:
  3797                           	callstack 18
  3798  005054  C008  F00F         	movff	strncmp@_l,strncmp@l
  3799  005058  C009  F010         	movff	strncmp@_l+1,strncmp@l+1
  3800  00505C  C00A  F011         	movff	strncmp@_r,strncmp@r
  3801  005060  C00B  F012         	movff	strncmp@_r+1,strncmp@r+1
  3802  005064  060C               	decf	strncmp@n^0,f,c
  3803  005066  A0D8               	btfss	status,0,c
  3804  005068  060D               	decf	(strncmp@n+1)^0,f,c
  3805  00506A  280C               	incf	strncmp@n^0,w,c
  3806  00506C  E106               	bnz	u10901
  3807  00506E  280D               	incf	(strncmp@n+1)^0,w,c
  3808  005070  A4D8               	btfss	status,2,c
  3809  005072  EF3D  F028         	goto	u10901
  3810  005076  EF3F  F028         	goto	u10900
  3811  00507A                     u10901:
  3812  00507A  EF4C  F028         	goto	l8157
  3813  00507E                     u10900:
  3814  00507E  0E00               	movlw	0
  3815  005080  6E09               	movwf	(?_strncmp+1)^0,c
  3816  005082  0E00               	movlw	0
  3817  005084  6E08               	movwf	?_strncmp^0,c
  3818  005086  EF9A  F028         	goto	l1811
  3819  00508A                     l8155:
  3820  00508A  4A0F               	infsnz	strncmp@l^0,f,c
  3821  00508C  2A10               	incf	(strncmp@l+1)^0,f,c
  3822  00508E  4A11               	infsnz	strncmp@r^0,f,c
  3823  005090  2A12               	incf	(strncmp@r+1)^0,f,c
  3824  005092  060C               	decf	strncmp@n^0,f,c
  3825  005094  A0D8               	btfss	status,0,c
  3826  005096  060D               	decf	(strncmp@n+1)^0,f,c
  3827  005098                     l8157:
  3828  005098  C00F  FFD9         	movff	strncmp@l,fsr2l
  3829  00509C  C010  FFDA         	movff	strncmp@l+1,fsr2h
  3830  0050A0  50DF               	movf	indf2,w,c
  3831  0050A2  B4D8               	btfsc	status,2,c
  3832  0050A4  EF56  F028         	goto	u10911
  3833  0050A8  EF58  F028         	goto	u10910
  3834  0050AC                     u10911:
  3835  0050AC  EF87  F028         	goto	l8165
  3836  0050B0                     u10910:
  3837  0050B0  C011  FFF6         	movff	strncmp@r,tblptrl
  3838  0050B4  C012  FFF7         	movff	strncmp@r+1,tblptrh
  3839  0050B8                     	if	0	;tblptru may be non-zero
  3840  0050B8                     	endif
  3841  0050B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3842  0050B8  0E00               	movlw	low (__mediumconst shr (0+16))
  3843  0050BA  6EF8               	movwf	tblptru,c
  3844  0050BC                     	endif
  3845  0050BC  0008               	tblrd		*
  3846  0050BE  50F5               	movf	tablat,w,c
  3847  0050C0  0900               	iorlw	0
  3848  0050C2  B4D8               	btfsc	status,2,c
  3849  0050C4  EF66  F028         	goto	u10921
  3850  0050C8  EF68  F028         	goto	u10920
  3851  0050CC                     u10921:
  3852  0050CC  EF87  F028         	goto	l8165
  3853  0050D0                     u10920:
  3854  0050D0  500C               	movf	strncmp@n^0,w,c
  3855  0050D2  100D               	iorwf	(strncmp@n+1)^0,w,c
  3856  0050D4  B4D8               	btfsc	status,2,c
  3857  0050D6  EF6F  F028         	goto	u10931
  3858  0050DA  EF71  F028         	goto	u10930
  3859  0050DE                     u10931:
  3860  0050DE  EF87  F028         	goto	l8165
  3861  0050E2                     u10930:
  3862  0050E2  C00F  FFD9         	movff	strncmp@l,fsr2l
  3863  0050E6  C010  FFDA         	movff	strncmp@l+1,fsr2h
  3864  0050EA  50DF               	movf	indf2,w,c
  3865  0050EC  6E0E               	movwf	??_strncmp^0,c
  3866  0050EE  C011  FFF6         	movff	strncmp@r,tblptrl
  3867  0050F2  C012  FFF7         	movff	strncmp@r+1,tblptrh
  3868  0050F6                     	if	0	;tblptru may be non-zero
  3869  0050F6                     	endif
  3870  0050F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3871  0050F6  0E00               	movlw	low (__mediumconst shr (0+16))
  3872  0050F8  6EF8               	movwf	tblptru,c
  3873  0050FA                     	endif
  3874  0050FA  0008               	tblrd		*
  3875  0050FC  50F5               	movf	tablat,w,c
  3876  0050FE  180E               	xorwf	??_strncmp^0,w,c
  3877  005100  B4D8               	btfsc	status,2,c
  3878  005102  EF85  F028         	goto	u10941
  3879  005106  EF87  F028         	goto	u10940
  3880  00510A                     u10941:
  3881  00510A  EF45  F028         	goto	l8155
  3882  00510E                     u10940:
  3883  00510E                     l8165:
  3884  00510E  C00F  FFD9         	movff	strncmp@l,fsr2l
  3885  005112  C010  FFDA         	movff	strncmp@l+1,fsr2h
  3886  005116  50DF               	movf	indf2,w,c
  3887  005118  6E0E               	movwf	??_strncmp^0,c
  3888  00511A  C011  FFF6         	movff	strncmp@r,tblptrl
  3889  00511E  C012  FFF7         	movff	strncmp@r+1,tblptrh
  3890  005122                     	if	0	;tblptru may be non-zero
  3891  005122                     	endif
  3892  005122                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3893  005122  0E00               	movlw	low (__mediumconst shr (0+16))
  3894  005124  6EF8               	movwf	tblptru,c
  3895  005126                     	endif
  3896  005126  0008               	tblrd		*
  3897  005128  50F5               	movf	tablat,w,c
  3898  00512A  5C0E               	subwf	??_strncmp^0,w,c
  3899  00512C  6E08               	movwf	?_strncmp^0,c
  3900  00512E  6A09               	clrf	(?_strncmp+1)^0,c
  3901  005130  A0D8               	btfss	status,0,c
  3902  005132  0609               	decf	(?_strncmp+1)^0,f,c
  3903  005134                     l1811:
  3904  005134  0012               	return		;funcret
  3905  005136                     __end_of_strncmp:
  3906                           	callstack 0
  3907                           
  3908 ;; *************** function _stoa *****************
  3909 ;; Defined at:
  3910 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3913 ;;		 -> sprintf@f(6), 
  3914 ;;  s               2   18[COMRAM] PTR unsigned char 
  3915 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(5), 
  3916 ;;		 -> STR_12(7), STR_10(11), STR_8(6), STR_6(5), 
  3917 ;;		 -> STR_4(4), STR_2(7), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  nuls            7   21[COMRAM] unsigned char [7]
  3920 ;;  l               2   36[COMRAM] int 
  3921 ;;  p               2   34[COMRAM] int 
  3922 ;;  cp              2   32[COMRAM] PTR unsigned char 
  3923 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_18(8), STR_16(6), 
  3924 ;;		 -> STR_14(5), STR_12(7), STR_10(11), STR_8(6), 
  3925 ;;		 -> STR_6(5), STR_4(4), STR_2(7), 
  3926 ;;  w               2   30[COMRAM] int 
  3927 ;;  i               2   28[COMRAM] int 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  2   16[COMRAM] int 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3938 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;Total ram usage:       22 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 9
  3944 ;; This function calls:
  3945 ;;		_fputc
  3946 ;;		_strlen
  3947 ;; This function is called by:
  3948 ;;		_vfpfcnvrt
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text14
  3953  0040F6                     __ptext14:
  3954                           	callstack 0
  3955  0040F6                     _stoa:
  3956                           	callstack 16
  3957  0040F6                     
  3958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  3959  0040F6  EE21  F0D2         	lfsr	2,stoa@F1163
  3960  0040FA  EE10  F016         	lfsr	1,stoa@nuls
  3961  0040FE  0E06               	movlw	6
  3962  004100                     u10731:
  3963  004100  CFDB FFE3          	movff	plusw2,plusw1
  3964  004104  06E8               	decf	wreg,f,c
  3965  004106  E2FC               	bc	u10731
  3966  004108                     
  3967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  3968  004108  C013  F021         	movff	stoa@s,stoa@cp
  3969  00410C  C014  F022         	movff	stoa@s+1,stoa@cp+1
  3970  004110                     
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  3972  004110  5021               	movf	stoa@cp^0,w,c
  3973  004112  1022               	iorwf	(stoa@cp+1)^0,w,c
  3974  004114  A4D8               	btfss	status,2,c
  3975  004116  EF8F  F020         	goto	u10741
  3976  00411A  EF91  F020         	goto	u10740
  3977  00411E                     u10741:
  3978  00411E  EF95  F020         	goto	l8073
  3979  004122                     u10740:
  3980  004122                     
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  3982  004122  0E16               	movlw	low stoa@nuls
  3983  004124  6E21               	movwf	stoa@cp^0,c
  3984  004126  0E00               	movlw	high stoa@nuls
  3985  004128  6E22               	movwf	(stoa@cp+1)^0,c
  3986  00412A                     l8073:
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  3989  00412A  C021  F008         	movff	stoa@cp,strlen@s
  3990  00412E  C022  F009         	movff	stoa@cp+1,strlen@s+1
  3991  004132  EC34  F02D         	call	_strlen	;wreg free
  3992  004136  C008  F025         	movff	?_strlen,stoa@l
  3993  00413A  C009  F026         	movff	?_strlen+1,stoa@l+1
  3994  00413E                     
  3995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  3996  00413E  C0EF  F023         	movff	_prec,stoa@p
  3997  004142  C0F0  F024         	movff	_prec+1,stoa@p+1
  3998  004146                     
  3999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  4000  004146  BE24               	btfsc	(stoa@p+1)^0,7,c
  4001  004148  EFA8  F020         	goto	u10751
  4002  00414C  EFAA  F020         	goto	u10750
  4003  004150                     u10751:
  4004  004150  EFBF  F020         	goto	l1641
  4005  004154                     u10750:
  4006  004154  5025               	movf	stoa@l^0,w,c
  4007  004156  5C23               	subwf	stoa@p^0,w,c
  4008  004158  5024               	movf	(stoa@p+1)^0,w,c
  4009  00415A  0A80               	xorlw	128
  4010  00415C  6E15               	movwf	??_stoa^0,c
  4011  00415E  5026               	movf	(stoa@l+1)^0,w,c
  4012  004160  0A80               	xorlw	128
  4013  004162  5815               	subwfb	??_stoa^0,w,c
  4014  004164  A0D8               	btfss	status,0,c
  4015  004166  EFB7  F020         	goto	u10761
  4016  00416A  EFB9  F020         	goto	u10760
  4017  00416E                     u10761:
  4018  00416E  EFBB  F020         	goto	l1639
  4019  004172                     u10760:
  4020  004172  EFBF  F020         	goto	l1641
  4021  004176                     l1639:
  4022  004176  C023  F025         	movff	stoa@p,stoa@l
  4023  00417A  C024  F026         	movff	stoa@p+1,stoa@l+1
  4024  00417E                     l1641:
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  4027  00417E  C025  F023         	movff	stoa@l,stoa@p
  4028  004182  C026  F024         	movff	stoa@l+1,stoa@p+1
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  4031  004186  C11E  F01F         	movff	_width,stoa@w
  4032  00418A  C11F  F020         	movff	_width+1,stoa@w+1
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  4035  00418E  B050               	btfsc	_flags^0,0,c
  4036  004190  EFCC  F020         	goto	u10771
  4037  004194  EFCE  F020         	goto	u10770
  4038  004198                     u10771:
  4039  004198  EFEB  F020         	goto	l8089
  4040  00419C                     u10770:
  4041  00419C  EFDC  F020         	goto	l8087
  4042  0041A0                     l8083:
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  4045  0041A0  0E00               	movlw	0
  4046  0041A2  6E09               	movwf	(fputc@c+1)^0,c
  4047  0041A4  0E20               	movlw	32
  4048  0041A6  6E08               	movwf	fputc@c^0,c
  4049  0041A8  C011  F00A         	movff	stoa@fp,fputc@fp
  4050  0041AC  C012  F00B         	movff	stoa@fp+1,fputc@fp+1
  4051  0041B0  EC05  F029         	call	_fputc	;wreg free
  4052  0041B4                     
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  4054  0041B4  4A25               	infsnz	stoa@l^0,f,c
  4055  0041B6  2A26               	incf	(stoa@l+1)^0,f,c
  4056  0041B8                     l8087:
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  4059  0041B8  501F               	movf	stoa@w^0,w,c
  4060  0041BA  5C25               	subwf	stoa@l^0,w,c
  4061  0041BC  5026               	movf	(stoa@l+1)^0,w,c
  4062  0041BE  0A80               	xorlw	128
  4063  0041C0  6E15               	movwf	??_stoa^0,c
  4064  0041C2  5020               	movf	(stoa@w+1)^0,w,c
  4065  0041C4  0A80               	xorlw	128
  4066  0041C6  5815               	subwfb	??_stoa^0,w,c
  4067  0041C8  A0D8               	btfss	status,0,c
  4068  0041CA  EFE9  F020         	goto	u10781
  4069  0041CE  EFEB  F020         	goto	u10780
  4070  0041D2                     u10781:
  4071  0041D2  EFD0  F020         	goto	l8083
  4072  0041D6                     u10780:
  4073  0041D6                     l8089:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  4076  0041D6  0E00               	movlw	0
  4077  0041D8  6E1E               	movwf	(stoa@i+1)^0,c
  4078  0041DA  0E00               	movlw	0
  4079  0041DC  6E1D               	movwf	stoa@i^0,c
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4082  0041DE  EF10  F021         	goto	l8097
  4083  0041E2                     l8091:
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  4086  0041E2  C021  FFF6         	movff	stoa@cp,tblptrl
  4087  0041E6  C022  FFF7         	movff	stoa@cp+1,tblptrh
  4088  0041EA  0E00               	movlw	low (__smallconst shr (0+16))
  4089  0041EC  6EF8               	movwf	tblptru,c
  4090  0041EE  0E0D               	movlw	(high __ramtop+-1)
  4091  0041F0  64F7               	cpfsgt	tblptrh,c
  4092  0041F2  D003               	bra	u10797
  4093  0041F4  0008               	tblrd		*
  4094  0041F6  50F5               	movf	tablat,w,c
  4095  0041F8  D005               	bra	u10790
  4096  0041FA                     u10797:
  4097  0041FA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4098  0041FE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4099  004202  50E7               	movf	indf1,w,c
  4100  004204                     u10790:
  4101  004204  6E15               	movwf	??_stoa^0,c
  4102  004206  5015               	movf	??_stoa^0,w,c
  4103  004208  6E08               	movwf	fputc@c^0,c
  4104  00420A  6A09               	clrf	(fputc@c+1)^0,c
  4105  00420C  C011  F00A         	movff	stoa@fp,fputc@fp
  4106  004210  C012  F00B         	movff	stoa@fp+1,fputc@fp+1
  4107  004214  EC05  F029         	call	_fputc	;wreg free
  4108  004218                     
  4109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  4110  004218  4A21               	infsnz	stoa@cp^0,f,c
  4111  00421A  2A22               	incf	(stoa@cp+1)^0,f,c
  4112  00421C                     
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  4114  00421C  4A1D               	infsnz	stoa@i^0,f,c
  4115  00421E  2A1E               	incf	(stoa@i+1)^0,f,c
  4116  004220                     l8097:
  4117                           
  4118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4119  004220  5023               	movf	stoa@p^0,w,c
  4120  004222  5C1D               	subwf	stoa@i^0,w,c
  4121  004224  501E               	movf	(stoa@i+1)^0,w,c
  4122  004226  0A80               	xorlw	128
  4123  004228  6E15               	movwf	??_stoa^0,c
  4124  00422A  5024               	movf	(stoa@p+1)^0,w,c
  4125  00422C  0A80               	xorlw	128
  4126  00422E  5815               	subwfb	??_stoa^0,w,c
  4127  004230  A0D8               	btfss	status,0,c
  4128  004232  EF1D  F021         	goto	u10801
  4129  004236  EF1F  F021         	goto	u10800
  4130  00423A                     u10801:
  4131  00423A  EFF1  F020         	goto	l8091
  4132  00423E                     u10800:
  4133  00423E                     
  4134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  4135  00423E  A050               	btfss	_flags^0,0,c
  4136  004240  EF24  F021         	goto	u10811
  4137  004244  EF26  F021         	goto	u10810
  4138  004248                     u10811:
  4139  004248  EF43  F021         	goto	l1651
  4140  00424C                     u10810:
  4141  00424C  EF34  F021         	goto	l8105
  4142  004250                     l8101:
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  4145  004250  0E00               	movlw	0
  4146  004252  6E09               	movwf	(fputc@c+1)^0,c
  4147  004254  0E20               	movlw	32
  4148  004256  6E08               	movwf	fputc@c^0,c
  4149  004258  C011  F00A         	movff	stoa@fp,fputc@fp
  4150  00425C  C012  F00B         	movff	stoa@fp+1,fputc@fp+1
  4151  004260  EC05  F029         	call	_fputc	;wreg free
  4152  004264                     
  4153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  4154  004264  4A25               	infsnz	stoa@l^0,f,c
  4155  004266  2A26               	incf	(stoa@l+1)^0,f,c
  4156  004268                     l8105:
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  4159  004268  501F               	movf	stoa@w^0,w,c
  4160  00426A  5C25               	subwf	stoa@l^0,w,c
  4161  00426C  5026               	movf	(stoa@l+1)^0,w,c
  4162  00426E  0A80               	xorlw	128
  4163  004270  6E15               	movwf	??_stoa^0,c
  4164  004272  5020               	movf	(stoa@w+1)^0,w,c
  4165  004274  0A80               	xorlw	128
  4166  004276  5815               	subwfb	??_stoa^0,w,c
  4167  004278  A0D8               	btfss	status,0,c
  4168  00427A  EF41  F021         	goto	u10821
  4169  00427E  EF43  F021         	goto	u10820
  4170  004282                     u10821:
  4171  004282  EF28  F021         	goto	l8101
  4172  004286                     u10820:
  4173  004286                     l1651:
  4174                           
  4175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  4176  004286  C025  F011         	movff	stoa@l,?_stoa
  4177  00428A  C026  F012         	movff	stoa@l+1,?_stoa+1
  4178  00428E  0012               	return		;funcret
  4179  004290                     __end_of_stoa:
  4180                           	callstack 0
  4181                           
  4182 ;; *************** function _efgtoa *****************
  4183 ;; Defined at:
  4184 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  4187 ;;		 -> sprintf@f(6), 
  4188 ;;  f               4   72[COMRAM] PTR struct _IO_FILE
  4189 ;;  c               1   76[COMRAM] unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  u               4   57[BANK0 ] unsigned char 
  4192 ;;  g               4   49[BANK0 ] unsigned char 
  4193 ;;  l               4   43[BANK0 ] unsigned char 
  4194 ;;  h               4   39[BANK0 ] unsigned char 
  4195 ;;  ou              4   25[BANK0 ] unsigned char 
  4196 ;;  n               2   55[BANK0 ] int 
  4197 ;;  e               2   53[BANK0 ] int 
  4198 ;;  i               2   47[BANK0 ] int 
  4199 ;;  w               2   35[BANK0 ] int 
  4200 ;;  p               2   33[BANK0 ] int 
  4201 ;;  sign            2   31[BANK0 ] int 
  4202 ;;  d               2   29[BANK0 ] int 
  4203 ;;  m               2   23[BANK0 ] int 
  4204 ;;  ne              2   21[BANK0 ] int 
  4205 ;;  pp              2   19[BANK0 ] int 
  4206 ;;  t               2   17[BANK0 ] int 
  4207 ;;  mode            1   38[BANK0 ] unsigned char 
  4208 ;;  nmode           1   37[BANK0 ] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  2   70[COMRAM] int 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4218 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4220 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;      Totals:         7      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4222 ;;Total ram usage:       68 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 11
  4225 ;; This function calls:
  4226 ;;		___awdiv
  4227 ;;		___awmod
  4228 ;;		___fladd
  4229 ;;		___fldiv
  4230 ;;		___fleq
  4231 ;;		___flge
  4232 ;;		___flmul
  4233 ;;		___flneg
  4234 ;;		___flsub
  4235 ;;		___fltol
  4236 ;;		___fpclassifyf
  4237 ;;		_floorf
  4238 ;;		_isupper
  4239 ;;		_pad
  4240 ;;		_strcpy
  4241 ;;		_tolower
  4242 ;; This function is called by:
  4243 ;;		_vfpfcnvrt
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text15
  4248  000EB8                     __ptext15:
  4249                           	callstack 0
  4250  000EB8                     _efgtoa:
  4251                           	callstack 14
  4252  000EB8                     
  4253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4254  000EB8  0E00               	movlw	0
  4255  000EBA  0100               	movlb	0	; () banked
  4256  000EBC  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4257  000EBE  0E00               	movlw	0
  4258  000EC0  6F7F               	movwf	efgtoa@sign& (0+255),b
  4259  000EC2                     
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4262  000EC2  C049  F091         	movff	efgtoa@f,efgtoa@g
  4263  000EC6  C04A  F092         	movff	efgtoa@f+1,efgtoa@g+1
  4264  000ECA  C04B  F093         	movff	efgtoa@f+2,efgtoa@g+2
  4265  000ECE  C04C  F094         	movff	efgtoa@f+3,efgtoa@g+3
  4266  000ED2                     
  4267                           ; BSR set to: 0
  4268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4269  000ED2  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4270  000ED4  EF70  F007         	goto	u10190
  4271  000ED8  EF6E  F007         	goto	u10191
  4272  000EDC                     u10191:
  4273  000EDC  EF86  F007         	goto	l7767
  4274  000EE0                     u10190:
  4275  000EE0                     
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4278  000EE0  0E00               	movlw	0
  4279  000EE2  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4280  000EE4  0E01               	movlw	1
  4281  000EE6  6F7F               	movwf	efgtoa@sign& (0+255),b
  4282  000EE8                     
  4283                           ; BSR set to: 0
  4284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4285  000EE8  C091  F008         	movff	efgtoa@g,___flneg@f1
  4286  000EEC  C092  F009         	movff	efgtoa@g+1,___flneg@f1+1
  4287  000EF0  C093  F00A         	movff	efgtoa@g+2,___flneg@f1+2
  4288  000EF4  C094  F00B         	movff	efgtoa@g+3,___flneg@f1+3
  4289  000EF8  ECA2  F02F         	call	___flneg	;wreg free
  4290  000EFC  C008  F091         	movff	?___flneg,efgtoa@g
  4291  000F00  C009  F092         	movff	?___flneg+1,efgtoa@g+1
  4292  000F04  C00A  F093         	movff	?___flneg+2,efgtoa@g+2
  4293  000F08  C00B  F094         	movff	?___flneg+3,efgtoa@g+3
  4294  000F0C                     l7767:
  4295                           
  4296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4297  000F0C  0E00               	movlw	0
  4298  000F0E  0100               	movlb	0	; () banked
  4299  000F10  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  4300  000F12  0E00               	movlw	0
  4301  000F14  6F97               	movwf	efgtoa@n& (0+255),b
  4302  000F16                     
  4303                           ; BSR set to: 0
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4305  000F16  C11E  F083         	movff	_width,efgtoa@w
  4306  000F1A  C11F  F084         	movff	_width+1,efgtoa@w+1
  4307  000F1E                     
  4308                           ; BSR set to: 0
  4309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4310  000F1E  517F               	movf	efgtoa@sign& (0+255),w,b
  4311  000F20  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4312  000F22  A4D8               	btfss	status,2,c
  4313  000F24  EF96  F007         	goto	u10201
  4314  000F28  EF98  F007         	goto	u10200
  4315  000F2C                     u10201:
  4316  000F2C  EF9F  F007         	goto	l7775
  4317  000F30                     u10200:
  4318  000F30                     
  4319                           ; BSR set to: 0
  4320  000F30  A450               	btfss	_flags^0,2,c
  4321  000F32  EF9D  F007         	goto	u10211
  4322  000F36  EF9F  F007         	goto	u10210
  4323  000F3A                     u10211:
  4324  000F3A  EFB9  F007         	goto	l7787
  4325  000F3E                     u10210:
  4326  000F3E                     l7775:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4330  000F3E  517F               	movf	efgtoa@sign& (0+255),w,b
  4331  000F40  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4332  000F42  A4D8               	btfss	status,2,c
  4333  000F44  EFA6  F007         	goto	u10221
  4334  000F48  EFA8  F007         	goto	u10220
  4335  000F4C                     u10221:
  4336  000F4C  EFAE  F007         	goto	l7779
  4337  000F50                     u10220:
  4338  000F50                     
  4339                           ; BSR set to: 0
  4340  000F50  0E00               	movlw	0
  4341  000F52  6F66               	movwf	(_efgtoa$3244+1)& (0+255),b
  4342  000F54  0E2B               	movlw	43
  4343  000F56  6F65               	movwf	_efgtoa$3244& (0+255),b
  4344  000F58  EFB2  F007         	goto	l7781
  4345  000F5C                     l7779:
  4346                           
  4347                           ; BSR set to: 0
  4348  000F5C  0E00               	movlw	0
  4349  000F5E  6F66               	movwf	(_efgtoa$3244+1)& (0+255),b
  4350  000F60  0E2D               	movlw	45
  4351  000F62  6F65               	movwf	_efgtoa$3244& (0+255),b
  4352  000F64                     l7781:
  4353                           
  4354                           ; BSR set to: 0
  4355  000F64  C065  F125         	movff	_efgtoa$3244,_dbuf
  4356  000F68                     
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4359  000F68  4B97               	infsnz	efgtoa@n& (0+255),f,b
  4360  000F6A  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  4361  000F6C                     
  4362                           ; BSR set to: 0
  4363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4364  000F6C  0783               	decf	efgtoa@w& (0+255),f,b
  4365  000F6E  A0D8               	btfss	status,0,c
  4366  000F70  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4367  000F72                     l7787:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4371  000F72  C091  F008         	movff	efgtoa@g,___fpclassifyf@x
  4372  000F76  C092  F009         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4373  000F7A  C093  F00A         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4374  000F7E  C094  F00B         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4375  000F82  ECAB  F027         	call	___fpclassifyf	;wreg free
  4376  000F86  0408               	decf	?___fpclassifyf^0,w,c
  4377  000F88  1009               	iorwf	(?___fpclassifyf+1)^0,w,c
  4378  000F8A  A4D8               	btfss	status,2,c
  4379  000F8C  EFCA  F007         	goto	u10231
  4380  000F90  EFCC  F007         	goto	u10230
  4381  000F94                     u10231:
  4382  000F94  EF23  F008         	goto	l7805
  4383  000F98                     u10230:
  4384  000F98  0EBF               	movlw	191
  4385  000F9A  0100               	movlb	0	; () banked
  4386  000F9C  6F60               	movwf	??_efgtoa& (0+255),b
  4387  000F9E  0EFF               	movlw	255
  4388  000FA0  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4389  000FA2  504D               	movf	efgtoa@c^0,w,c
  4390  000FA4  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  4391  000FA6  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  4392  000FA8  5160               	movf	??_efgtoa& (0+255),w,b
  4393  000FAA  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  4394  000FAC  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  4395  000FAE  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4396  000FB0  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  4397  000FB2  E10A               	bnz	u10240
  4398  000FB4  0E1A               	movlw	26
  4399  000FB6  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  4400  000FB8  A0D8               	btfss	status,0,c
  4401  000FBA  EFE1  F007         	goto	u10241
  4402  000FBE  EFE4  F007         	goto	u10240
  4403  000FC2                     u10241:
  4404  000FC2  0E01               	movlw	1
  4405  000FC4  EFE5  F007         	goto	u10250
  4406  000FC8                     u10240:
  4407  000FC8  0E00               	movlw	0
  4408  000FCA                     u10250:
  4409  000FCA  6F67               	movwf	_efgtoa$3245& (0+255),b
  4410  000FCC  6B68               	clrf	(_efgtoa$3245+1)& (0+255),b
  4411  000FCE                     
  4412                           ; BSR set to: 0
  4413  000FCE  5167               	movf	_efgtoa$3245& (0+255),w,b
  4414  000FD0  1168               	iorwf	(_efgtoa$3245+1)& (0+255),w,b
  4415  000FD2  B4D8               	btfsc	status,2,c
  4416  000FD4  EFEE  F007         	goto	u10261
  4417  000FD8  EFF0  F007         	goto	u10260
  4418  000FDC                     u10261:
  4419  000FDC  EFFE  F007         	goto	l7797
  4420  000FE0                     u10260:
  4421  000FE0                     
  4422                           ; BSR set to: 0
  4423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4424  000FE0  0E25               	movlw	low _dbuf
  4425  000FE2  2597               	addwf	efgtoa@n& (0+255),w,b
  4426  000FE4  6E08               	movwf	strcpy@dest^0,c
  4427  000FE6  0E01               	movlw	high _dbuf
  4428  000FE8  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4429  000FEA  6E09               	movwf	(strcpy@dest+1)^0,c
  4430  000FEC  0E9F               	movlw	low STR_20
  4431  000FEE  6E0A               	movwf	strcpy@src^0,c
  4432  000FF0  0E0E               	movlw	high STR_20
  4433  000FF2  6E0B               	movwf	(strcpy@src+1)^0,c
  4434  000FF4  EC58  F02C         	call	_strcpy	;wreg free
  4435                           
  4436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4437  000FF8  EF0A  F008         	goto	l7799
  4438  000FFC                     l7797:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4442  000FFC  0E25               	movlw	low _dbuf
  4443  000FFE  2597               	addwf	efgtoa@n& (0+255),w,b
  4444  001000  6E08               	movwf	strcpy@dest^0,c
  4445  001002  0E01               	movlw	high _dbuf
  4446  001004  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4447  001006  6E09               	movwf	(strcpy@dest+1)^0,c
  4448  001008  0EA7               	movlw	low STR_21
  4449  00100A  6E0A               	movwf	strcpy@src^0,c
  4450  00100C  0E0E               	movlw	high STR_21
  4451  00100E  6E0B               	movwf	(strcpy@src+1)^0,c
  4452  001010  EC58  F02C         	call	_strcpy	;wreg free
  4453  001014                     l7799:
  4454                           
  4455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4456  001014  0100               	movlb	0	; () banked
  4457  001016  0EFD               	movlw	253
  4458  001018  2783               	addwf	efgtoa@w& (0+255),f,b
  4459  00101A  0EFF               	movlw	255
  4460  00101C  2384               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4461  00101E                     l7801:
  4462                           
  4463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4464  00101E  C047  F018         	movff	efgtoa@fp,pad@fp
  4465  001022  C048  F019         	movff	efgtoa@fp+1,pad@fp+1
  4466  001026  0E25               	movlw	low _dbuf
  4467  001028  6E1A               	movwf	pad@buf^0,c
  4468  00102A  0E01               	movlw	high _dbuf
  4469  00102C  6E1B               	movwf	(pad@buf+1)^0,c
  4470  00102E  C083  F01C         	movff	efgtoa@w,pad@p
  4471  001032  C084  F01D         	movff	efgtoa@w+1,pad@p+1
  4472  001036  ECCC  F029         	call	_pad	;wreg free
  4473  00103A  C018  F047         	movff	?_pad,?_efgtoa
  4474  00103E  C019  F048         	movff	?_pad+1,?_efgtoa+1
  4475  001042  EF88  F00D         	goto	l1557
  4476  001046                     l7805:
  4477                           
  4478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4479  001046  C091  F008         	movff	efgtoa@g,___fpclassifyf@x
  4480  00104A  C092  F009         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4481  00104E  C093  F00A         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4482  001052  C094  F00B         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4483  001056  ECAB  F027         	call	___fpclassifyf	;wreg free
  4484  00105A  5008               	movf	?___fpclassifyf^0,w,c
  4485  00105C  1009               	iorwf	(?___fpclassifyf+1)^0,w,c
  4486  00105E  A4D8               	btfss	status,2,c
  4487  001060  EF34  F008         	goto	u10271
  4488  001064  EF36  F008         	goto	u10270
  4489  001068                     u10271:
  4490  001068  EF76  F008         	goto	l7823
  4491  00106C                     u10270:
  4492  00106C  0EBF               	movlw	191
  4493  00106E  0100               	movlb	0	; () banked
  4494  001070  6F60               	movwf	??_efgtoa& (0+255),b
  4495  001072  0EFF               	movlw	255
  4496  001074  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4497  001076  504D               	movf	efgtoa@c^0,w,c
  4498  001078  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  4499  00107A  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  4500  00107C  5160               	movf	??_efgtoa& (0+255),w,b
  4501  00107E  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  4502  001080  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  4503  001082  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4504  001084  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  4505  001086  E10A               	bnz	u10280
  4506  001088  0E1A               	movlw	26
  4507  00108A  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  4508  00108C  A0D8               	btfss	status,0,c
  4509  00108E  EF4B  F008         	goto	u10281
  4510  001092  EF4E  F008         	goto	u10280
  4511  001096                     u10281:
  4512  001096  0E01               	movlw	1
  4513  001098  EF4F  F008         	goto	u10290
  4514  00109C                     u10280:
  4515  00109C  0E00               	movlw	0
  4516  00109E                     u10290:
  4517  00109E  6F69               	movwf	_efgtoa$3249& (0+255),b
  4518  0010A0  6B6A               	clrf	(_efgtoa$3249+1)& (0+255),b
  4519  0010A2                     
  4520                           ; BSR set to: 0
  4521  0010A2  5169               	movf	_efgtoa$3249& (0+255),w,b
  4522  0010A4  116A               	iorwf	(_efgtoa$3249+1)& (0+255),w,b
  4523  0010A6  B4D8               	btfsc	status,2,c
  4524  0010A8  EF58  F008         	goto	u10301
  4525  0010AC  EF5A  F008         	goto	u10300
  4526  0010B0                     u10301:
  4527  0010B0  EF68  F008         	goto	l7815
  4528  0010B4                     u10300:
  4529  0010B4                     
  4530                           ; BSR set to: 0
  4531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4532  0010B4  0E25               	movlw	low _dbuf
  4533  0010B6  2597               	addwf	efgtoa@n& (0+255),w,b
  4534  0010B8  6E08               	movwf	strcpy@dest^0,c
  4535  0010BA  0E01               	movlw	high _dbuf
  4536  0010BC  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4537  0010BE  6E09               	movwf	(strcpy@dest+1)^0,c
  4538  0010C0  0EA3               	movlw	low STR_24
  4539  0010C2  6E0A               	movwf	strcpy@src^0,c
  4540  0010C4  0E0E               	movlw	high STR_24
  4541  0010C6  6E0B               	movwf	(strcpy@src+1)^0,c
  4542  0010C8  EC58  F02C         	call	_strcpy	;wreg free
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4545  0010CC  EF0A  F008         	goto	l7799
  4546  0010D0                     l7815:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4550  0010D0  0E25               	movlw	low _dbuf
  4551  0010D2  2597               	addwf	efgtoa@n& (0+255),w,b
  4552  0010D4  6E08               	movwf	strcpy@dest^0,c
  4553  0010D6  0E01               	movlw	high _dbuf
  4554  0010D8  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4555  0010DA  6E09               	movwf	(strcpy@dest+1)^0,c
  4556  0010DC  0EAB               	movlw	low STR_25
  4557  0010DE  6E0A               	movwf	strcpy@src^0,c
  4558  0010E0  0E0E               	movlw	high STR_25
  4559  0010E2  6E0B               	movwf	(strcpy@src+1)^0,c
  4560  0010E4  EC58  F02C         	call	_strcpy	;wreg free
  4561  0010E8  EF0A  F008         	goto	l7799
  4562  0010EC                     l7823:
  4563                           
  4564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4565  0010EC  0E00               	movlw	0
  4566  0010EE  0100               	movlb	0	; () banked
  4567  0010F0  6F99               	movwf	efgtoa@u& (0+255),b
  4568  0010F2  0E00               	movlw	0
  4569  0010F4  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  4570  0010F6  0E80               	movlw	128
  4571  0010F8  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  4572  0010FA  0E3F               	movlw	63
  4573  0010FC  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  4574                           
  4575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4576  0010FE  0E00               	movlw	0
  4577  001100  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  4578  001102  0E00               	movlw	0
  4579  001104  6F95               	movwf	efgtoa@e& (0+255),b
  4580  001106                     
  4581                           ; BSR set to: 0
  4582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4583  001106  C091  F008         	movff	efgtoa@g,___fleq@ff1
  4584  00110A  C092  F009         	movff	efgtoa@g+1,___fleq@ff1+1
  4585  00110E  C093  F00A         	movff	efgtoa@g+2,___fleq@ff1+2
  4586  001112  C094  F00B         	movff	efgtoa@g+3,___fleq@ff1+3
  4587  001116  0E00               	movlw	0
  4588  001118  6E0C               	movwf	___fleq@ff2^0,c
  4589  00111A  0E00               	movlw	0
  4590  00111C  6E0D               	movwf	(___fleq@ff2+1)^0,c
  4591  00111E  0E00               	movlw	0
  4592  001120  6E0E               	movwf	(___fleq@ff2+2)^0,c
  4593  001122  0E00               	movlw	0
  4594  001124  6E0F               	movwf	(___fleq@ff2+3)^0,c
  4595  001126  EC85  F02A         	call	___fleq	;wreg free
  4596  00112A  B0D8               	btfsc	status,0,c
  4597  00112C  EF9A  F008         	goto	u10311
  4598  001130  EF9C  F008         	goto	u10310
  4599  001134                     u10311:
  4600  001134  EF1F  F009         	goto	l7841
  4601  001138                     u10310:
  4602  001138  EFBB  F008         	goto	l7833
  4603  00113C                     l7829:
  4604                           
  4605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4606  00113C  C099  F016         	movff	efgtoa@u,___flmul@b
  4607  001140  C09A  F017         	movff	efgtoa@u+1,___flmul@b+1
  4608  001144  C09B  F018         	movff	efgtoa@u+2,___flmul@b+2
  4609  001148  C09C  F019         	movff	efgtoa@u+3,___flmul@b+3
  4610  00114C  0E00               	movlw	0
  4611  00114E  6E1A               	movwf	___flmul@a^0,c
  4612  001150  0E00               	movlw	0
  4613  001152  6E1B               	movwf	(___flmul@a+1)^0,c
  4614  001154  0E20               	movlw	32
  4615  001156  6E1C               	movwf	(___flmul@a+2)^0,c
  4616  001158  0E41               	movlw	65
  4617  00115A  6E1D               	movwf	(___flmul@a+3)^0,c
  4618  00115C  ECB4  F016         	call	___flmul	;wreg free
  4619  001160  C016  F099         	movff	?___flmul,efgtoa@u
  4620  001164  C017  F09A         	movff	?___flmul+1,efgtoa@u+1
  4621  001168  C018  F09B         	movff	?___flmul+2,efgtoa@u+2
  4622  00116C  C019  F09C         	movff	?___flmul+3,efgtoa@u+3
  4623  001170                     
  4624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4625  001170  0100               	movlb	0	; () banked
  4626  001172  4B95               	infsnz	efgtoa@e& (0+255),f,b
  4627  001174  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  4628  001176                     l7833:
  4629                           
  4630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4631  001176  C091  F02F         	movff	efgtoa@g,___flge@ff1
  4632  00117A  C092  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4633  00117E  C093  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4634  001182  C094  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4635  001186  0E00               	movlw	0
  4636  001188  6E1A               	movwf	___flmul@a^0,c
  4637  00118A  0E00               	movlw	0
  4638  00118C  6E1B               	movwf	(___flmul@a+1)^0,c
  4639  00118E  0E20               	movlw	32
  4640  001190  6E1C               	movwf	(___flmul@a+2)^0,c
  4641  001192  0E41               	movlw	65
  4642  001194  6E1D               	movwf	(___flmul@a+3)^0,c
  4643  001196  C099  F016         	movff	efgtoa@u,___flmul@b
  4644  00119A  C09A  F017         	movff	efgtoa@u+1,___flmul@b+1
  4645  00119E  C09B  F018         	movff	efgtoa@u+2,___flmul@b+2
  4646  0011A2  C09C  F019         	movff	efgtoa@u+3,___flmul@b+3
  4647  0011A6  ECB4  F016         	call	___flmul	;wreg free
  4648  0011AA  C016  F033         	movff	?___flmul,___flge@ff2
  4649  0011AE  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  4650  0011B2  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  4651  0011B6  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  4652  0011BA  EC29  F027         	call	___flge	;wreg free
  4653  0011BE  B0D8               	btfsc	status,0,c
  4654  0011C0  EFE4  F008         	goto	u10321
  4655  0011C4  EFE6  F008         	goto	u10320
  4656  0011C8                     u10321:
  4657  0011C8  EF9E  F008         	goto	l7829
  4658  0011CC                     u10320:
  4659  0011CC  EF06  F009         	goto	l7839
  4660  0011D0                     l7835:
  4661                           
  4662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4663  0011D0  C099  F016         	movff	efgtoa@u,___fldiv@b
  4664  0011D4  C09A  F017         	movff	efgtoa@u+1,___fldiv@b+1
  4665  0011D8  C09B  F018         	movff	efgtoa@u+2,___fldiv@b+2
  4666  0011DC  C09C  F019         	movff	efgtoa@u+3,___fldiv@b+3
  4667  0011E0  0E00               	movlw	0
  4668  0011E2  6E1A               	movwf	___fldiv@a^0,c
  4669  0011E4  0E00               	movlw	0
  4670  0011E6  6E1B               	movwf	(___fldiv@a+1)^0,c
  4671  0011E8  0E20               	movlw	32
  4672  0011EA  6E1C               	movwf	(___fldiv@a+2)^0,c
  4673  0011EC  0E41               	movlw	65
  4674  0011EE  6E1D               	movwf	(___fldiv@a+3)^0,c
  4675  0011F0  ECC9  F018         	call	___fldiv	;wreg free
  4676  0011F4  C016  F099         	movff	?___fldiv,efgtoa@u
  4677  0011F8  C017  F09A         	movff	?___fldiv+1,efgtoa@u+1
  4678  0011FC  C018  F09B         	movff	?___fldiv+2,efgtoa@u+2
  4679  001200  C019  F09C         	movff	?___fldiv+3,efgtoa@u+3
  4680  001204                     
  4681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4682  001204  0100               	movlb	0	; () banked
  4683  001206  0795               	decf	efgtoa@e& (0+255),f,b
  4684  001208  A0D8               	btfss	status,0,c
  4685  00120A  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  4686  00120C                     l7839:
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4689  00120C  C091  F02F         	movff	efgtoa@g,___flge@ff1
  4690  001210  C092  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4691  001214  C093  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4692  001218  C094  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4693  00121C  C099  F033         	movff	efgtoa@u,___flge@ff2
  4694  001220  C09A  F034         	movff	efgtoa@u+1,___flge@ff2+1
  4695  001224  C09B  F035         	movff	efgtoa@u+2,___flge@ff2+2
  4696  001228  C09C  F036         	movff	efgtoa@u+3,___flge@ff2+3
  4697  00122C  EC29  F027         	call	___flge	;wreg free
  4698  001230  A0D8               	btfss	status,0,c
  4699  001232  EF1D  F009         	goto	u10331
  4700  001236  EF1F  F009         	goto	u10330
  4701  00123A                     u10331:
  4702  00123A  EFE8  F008         	goto	l7835
  4703  00123E                     u10330:
  4704  00123E                     l7841:
  4705                           
  4706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4707  00123E  C04D  F00E         	movff	efgtoa@c,tolower@c
  4708  001242  6A0F               	clrf	(tolower@c+1)^0,c
  4709  001244  EC28  F02C         	call	_tolower	;wreg free
  4710  001248  500E               	movf	?_tolower^0,w,c
  4711  00124A  0100               	movlb	0	; () banked
  4712  00124C  6F86               	movwf	efgtoa@mode& (0+255),b
  4713  00124E                     
  4714                           ; BSR set to: 0
  4715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4716  00124E  C086  F085         	movff	efgtoa@mode,efgtoa@nmode
  4717  001252                     
  4718                           ; BSR set to: 0
  4719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4720  001252  0E67               	movlw	103
  4721  001254  1986               	xorwf	efgtoa@mode& (0+255),w,b
  4722  001256  A4D8               	btfss	status,2,c
  4723  001258  EF30  F009         	goto	u10341
  4724  00125C  EF32  F009         	goto	u10340
  4725  001260                     u10341:
  4726  001260  EF58  F009         	goto	l7855
  4727  001264                     u10340:
  4728  001264                     
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4731  001264  51EF               	movf	_prec& (0+255),w,b
  4732  001266  11F0               	iorwf	(_prec+1)& (0+255),w,b
  4733  001268  A4D8               	btfss	status,2,c
  4734  00126A  EF39  F009         	goto	u10351
  4735  00126E  EF3B  F009         	goto	u10350
  4736  001272                     u10351:
  4737  001272  EF3F  F009         	goto	l7851
  4738  001276                     u10350:
  4739  001276                     
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4742  001276  0E00               	movlw	0
  4743  001278  6FF0               	movwf	(_prec+1)& (0+255),b
  4744  00127A  0E01               	movlw	1
  4745  00127C  6FEF               	movwf	_prec& (0+255),b
  4746  00127E                     l7851:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4750  00127E  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  4751  001280  EF4C  F009         	goto	u10360
  4752  001284  51F0               	movf	(_prec+1)& (0+255),w,b
  4753  001286  E106               	bnz	u10361
  4754  001288  05EF               	decf	_prec& (0+255),w,b
  4755  00128A  B0D8               	btfsc	status,0,c
  4756  00128C  EF4A  F009         	goto	u10361
  4757  001290  EF4C  F009         	goto	u10360
  4758  001294                     u10361:
  4759  001294  EF52  F009         	goto	l1575
  4760  001298                     u10360:
  4761  001298                     l7853:
  4762                           
  4763                           ; BSR set to: 0
  4764  001298  0E00               	movlw	0
  4765  00129A  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  4766  00129C  0E06               	movlw	6
  4767  00129E  6F81               	movwf	efgtoa@p& (0+255),b
  4768  0012A0  EF61  F009         	goto	l7861
  4769  0012A4                     l1575:
  4770                           
  4771                           ; BSR set to: 0
  4772  0012A4  C0EF  F081         	movff	_prec,efgtoa@p
  4773  0012A8  C0F0  F082         	movff	_prec+1,efgtoa@p+1
  4774  0012AC  EF61  F009         	goto	l7861
  4775  0012B0                     l7855:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4779  0012B0  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  4780  0012B2  EF5D  F009         	goto	u10371
  4781  0012B6  EF5F  F009         	goto	u10370
  4782  0012BA                     u10371:
  4783  0012BA  EF4C  F009         	goto	l7853
  4784  0012BE                     u10370:
  4785  0012BE  EF52  F009         	goto	l1575
  4786  0012C2                     l7861:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4790  0012C2  0E67               	movlw	103
  4791  0012C4  1986               	xorwf	efgtoa@mode& (0+255),w,b
  4792  0012C6  A4D8               	btfss	status,2,c
  4793  0012C8  EF68  F009         	goto	u10381
  4794  0012CC  EF6A  F009         	goto	u10380
  4795  0012D0                     u10381:
  4796  0012D0  EF99  F009         	goto	l7871
  4797  0012D4                     u10380:
  4798  0012D4                     
  4799                           ; BSR set to: 0
  4800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4801  0012D4  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  4802  0012D6  EF78  F009         	goto	u10390
  4803  0012DA  0EFC               	movlw	252
  4804  0012DC  5D95               	subwf	efgtoa@e& (0+255),w,b
  4805  0012DE  0EFF               	movlw	255
  4806  0012E0  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4807  0012E2  A0D8               	btfss	status,0,c
  4808  0012E4  EF76  F009         	goto	u10391
  4809  0012E8  EF78  F009         	goto	u10390
  4810  0012EC                     u10391:
  4811  0012EC  EF97  F009         	goto	l7869
  4812  0012F0                     u10390:
  4813  0012F0                     
  4814                           ; BSR set to: 0
  4815  0012F0  0EFF               	movlw	255
  4816  0012F2  6F60               	movwf	??_efgtoa& (0+255),b
  4817  0012F4  0EFF               	movlw	255
  4818  0012F6  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4819  0012F8  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  4820  0012FC  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  4821  001300  5160               	movf	??_efgtoa& (0+255),w,b
  4822  001302  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  4823  001304  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  4824  001306  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4825  001308  5195               	movf	efgtoa@e& (0+255),w,b
  4826  00130A  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  4827  00130C  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  4828  00130E  0A80               	xorlw	128
  4829  001310  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  4830  001312  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  4831  001314  0A80               	xorlw	128
  4832  001316  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4833  001318  A0D8               	btfss	status,0,c
  4834  00131A  EF91  F009         	goto	u10401
  4835  00131E  EF93  F009         	goto	u10400
  4836  001322                     u10401:
  4837  001322  EF97  F009         	goto	l7869
  4838  001326                     u10400:
  4839  001326                     
  4840                           ; BSR set to: 0
  4841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4842  001326  0E66               	movlw	102
  4843  001328  6F85               	movwf	efgtoa@nmode& (0+255),b
  4844                           
  4845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4846  00132A  EF99  F009         	goto	l7871
  4847  00132E                     l7869:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4851  00132E  0E65               	movlw	101
  4852  001330  6F85               	movwf	efgtoa@nmode& (0+255),b
  4853  001332                     l7871:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4857  001332  C081  F077         	movff	efgtoa@p,efgtoa@m
  4858  001336  C082  F078         	movff	efgtoa@p+1,efgtoa@m+1
  4859  00133A                     
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4862  00133A  0E67               	movlw	103
  4863  00133C  1986               	xorwf	efgtoa@mode& (0+255),w,b
  4864  00133E  A4D8               	btfss	status,2,c
  4865  001340  EFA4  F009         	goto	u10411
  4866  001344  EFA6  F009         	goto	u10410
  4867  001348                     u10411:
  4868  001348  EFB6  F009         	goto	l7879
  4869  00134C                     u10410:
  4870  00134C                     
  4871                           ; BSR set to: 0
  4872  00134C  0E66               	movlw	102
  4873  00134E  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  4874  001350  A4D8               	btfss	status,2,c
  4875  001352  EFAD  F009         	goto	u10421
  4876  001356  EFAF  F009         	goto	u10420
  4877  00135A                     u10421:
  4878  00135A  EFB8  F009         	goto	l7881
  4879  00135E                     u10420:
  4880  00135E                     
  4881                           ; BSR set to: 0
  4882  00135E  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4883  001360  EFB6  F009         	goto	u10430
  4884  001364  EFB4  F009         	goto	u10431
  4885  001368                     u10431:
  4886  001368  EFB8  F009         	goto	l7881
  4887  00136C                     u10430:
  4888  00136C                     l7879:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4892  00136C  4B77               	infsnz	efgtoa@m& (0+255),f,b
  4893  00136E  2B78               	incf	(efgtoa@m+1)& (0+255),f,b
  4894  001370                     l7881:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4898  001370  0E66               	movlw	102
  4899  001372  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  4900  001374  A4D8               	btfss	status,2,c
  4901  001376  EFBF  F009         	goto	u10441
  4902  00137A  EFC1  F009         	goto	u10440
  4903  00137E                     u10441:
  4904  00137E  EFE1  F009         	goto	l7891
  4905  001382                     u10440:
  4906  001382                     
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4909  001382  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4910  001384  EFC8  F009         	goto	u10450
  4911  001388  EFC6  F009         	goto	u10451
  4912  00138C                     u10451:
  4913  00138C  EFD4  F009         	goto	l7887
  4914  001390                     u10450:
  4915  001390                     
  4916                           ; BSR set to: 0
  4917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4918  001390  0E00               	movlw	0
  4919  001392  6F99               	movwf	efgtoa@u& (0+255),b
  4920  001394  0E00               	movlw	0
  4921  001396  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  4922  001398  0E80               	movlw	128
  4923  00139A  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  4924  00139C  0E3F               	movlw	63
  4925  00139E  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  4926                           
  4927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4928  0013A0  0E00               	movlw	0
  4929  0013A2  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  4930  0013A4  0E00               	movlw	0
  4931  0013A6  6F95               	movwf	efgtoa@e& (0+255),b
  4932  0013A8                     l7887:
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4936  0013A8  0E67               	movlw	103
  4937  0013AA  1986               	xorwf	efgtoa@mode& (0+255),w,b
  4938  0013AC  B4D8               	btfsc	status,2,c
  4939  0013AE  EFDB  F009         	goto	u10461
  4940  0013B2  EFDD  F009         	goto	u10460
  4941  0013B6                     u10461:
  4942  0013B6  EFE1  F009         	goto	l7891
  4943  0013BA                     u10460:
  4944  0013BA                     
  4945                           ; BSR set to: 0
  4946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4947  0013BA  5195               	movf	efgtoa@e& (0+255),w,b
  4948  0013BC  2777               	addwf	efgtoa@m& (0+255),f,b
  4949  0013BE  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  4950  0013C0  2378               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4951  0013C2                     l7891:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4955  0013C2  0E00               	movlw	0
  4956  0013C4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  4957  0013C6  0E00               	movlw	0
  4958  0013C8  6F8F               	movwf	efgtoa@i& (0+255),b
  4959  0013CA                     
  4960                           ; BSR set to: 0
  4961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4962  0013CA  C091  F087         	movff	efgtoa@g,efgtoa@h
  4963  0013CE  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  4964  0013D2  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  4965  0013D6  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  4966  0013DA                     
  4967                           ; BSR set to: 0
  4968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4969  0013DA  C099  F079         	movff	efgtoa@u,efgtoa@ou
  4970  0013DE  C09A  F07A         	movff	efgtoa@u+1,efgtoa@ou+1
  4971  0013E2  C09B  F07B         	movff	efgtoa@u+2,efgtoa@ou+2
  4972  0013E6  C09C  F07C         	movff	efgtoa@u+3,efgtoa@ou+3
  4973                           
  4974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4975  0013EA  EF72  F00A         	goto	l7905
  4976  0013EE                     l7897:
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4980  0013EE  C087  F016         	movff	efgtoa@h,___fldiv@b
  4981  0013F2  C088  F017         	movff	efgtoa@h+1,___fldiv@b+1
  4982  0013F6  C089  F018         	movff	efgtoa@h+2,___fldiv@b+2
  4983  0013FA  C08A  F019         	movff	efgtoa@h+3,___fldiv@b+3
  4984  0013FE  C099  F01A         	movff	efgtoa@u,___fldiv@a
  4985  001402  C09A  F01B         	movff	efgtoa@u+1,___fldiv@a+1
  4986  001406  C09B  F01C         	movff	efgtoa@u+2,___fldiv@a+2
  4987  00140A  C09C  F01D         	movff	efgtoa@u+3,___fldiv@a+3
  4988  00140E  ECC9  F018         	call	___fldiv	;wreg free
  4989  001412  C016  F02F         	movff	?___fldiv,floorf@x
  4990  001416  C017  F030         	movff	?___fldiv+1,floorf@x+1
  4991  00141A  C018  F031         	movff	?___fldiv+2,floorf@x+2
  4992  00141E  C019  F032         	movff	?___fldiv+3,floorf@x+3
  4993  001422  EC06  F01C         	call	_floorf	;wreg free
  4994  001426  C02F  F08B         	movff	?_floorf,efgtoa@l
  4995  00142A  C030  F08C         	movff	?_floorf+1,efgtoa@l+1
  4996  00142E  C031  F08D         	movff	?_floorf+2,efgtoa@l+2
  4997  001432  C032  F08E         	movff	?_floorf+3,efgtoa@l+3
  4998                           
  4999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5000  001436  C08B  F008         	movff	efgtoa@l,___fltol@f1
  5001  00143A  C08C  F009         	movff	efgtoa@l+1,___fltol@f1+1
  5002  00143E  C08D  F00A         	movff	efgtoa@l+2,___fltol@f1+2
  5003  001442  C08E  F00B         	movff	efgtoa@l+3,___fltol@f1+3
  5004  001446  ECA6  F026         	call	___fltol	;wreg free
  5005  00144A  C008  F07D         	movff	?___fltol,efgtoa@d
  5006  00144E  C009  F07E         	movff	?___fltol+1,efgtoa@d+1
  5007  001452                     
  5008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5009  001452  C087  F03F         	movff	efgtoa@h,___flsub@b
  5010  001456  C088  F040         	movff	efgtoa@h+1,___flsub@b+1
  5011  00145A  C089  F041         	movff	efgtoa@h+2,___flsub@b+2
  5012  00145E  C08A  F042         	movff	efgtoa@h+3,___flsub@b+3
  5013  001462  C099  F01A         	movff	efgtoa@u,___flmul@a
  5014  001466  C09A  F01B         	movff	efgtoa@u+1,___flmul@a+1
  5015  00146A  C09B  F01C         	movff	efgtoa@u+2,___flmul@a+2
  5016  00146E  C09C  F01D         	movff	efgtoa@u+3,___flmul@a+3
  5017  001472  C08B  F016         	movff	efgtoa@l,___flmul@b
  5018  001476  C08C  F017         	movff	efgtoa@l+1,___flmul@b+1
  5019  00147A  C08D  F018         	movff	efgtoa@l+2,___flmul@b+2
  5020  00147E  C08E  F019         	movff	efgtoa@l+3,___flmul@b+3
  5021  001482  ECB4  F016         	call	___flmul	;wreg free
  5022  001486  C016  F043         	movff	?___flmul,___flsub@a
  5023  00148A  C017  F044         	movff	?___flmul+1,___flsub@a+1
  5024  00148E  C018  F045         	movff	?___flmul+2,___flsub@a+2
  5025  001492  C019  F046         	movff	?___flmul+3,___flsub@a+3
  5026  001496  ECC2  F02E         	call	___flsub	;wreg free
  5027  00149A  C03F  F087         	movff	?___flsub,efgtoa@h
  5028  00149E  C040  F088         	movff	?___flsub+1,efgtoa@h+1
  5029  0014A2  C041  F089         	movff	?___flsub+2,efgtoa@h+2
  5030  0014A6  C042  F08A         	movff	?___flsub+3,efgtoa@h+3
  5031  0014AA                     
  5032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5033  0014AA  C099  F016         	movff	efgtoa@u,___fldiv@b
  5034  0014AE  C09A  F017         	movff	efgtoa@u+1,___fldiv@b+1
  5035  0014B2  C09B  F018         	movff	efgtoa@u+2,___fldiv@b+2
  5036  0014B6  C09C  F019         	movff	efgtoa@u+3,___fldiv@b+3
  5037  0014BA  0E00               	movlw	0
  5038  0014BC  6E1A               	movwf	___fldiv@a^0,c
  5039  0014BE  0E00               	movlw	0
  5040  0014C0  6E1B               	movwf	(___fldiv@a+1)^0,c
  5041  0014C2  0E20               	movlw	32
  5042  0014C4  6E1C               	movwf	(___fldiv@a+2)^0,c
  5043  0014C6  0E41               	movlw	65
  5044  0014C8  6E1D               	movwf	(___fldiv@a+3)^0,c
  5045  0014CA  ECC9  F018         	call	___fldiv	;wreg free
  5046  0014CE  C016  F099         	movff	?___fldiv,efgtoa@u
  5047  0014D2  C017  F09A         	movff	?___fldiv+1,efgtoa@u+1
  5048  0014D6  C018  F09B         	movff	?___fldiv+2,efgtoa@u+2
  5049  0014DA  C019  F09C         	movff	?___fldiv+3,efgtoa@u+3
  5050  0014DE                     
  5051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5052  0014DE  0100               	movlb	0	; () banked
  5053  0014E0  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  5054  0014E2  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  5055  0014E4                     l7905:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5059  0014E4  5177               	movf	efgtoa@m& (0+255),w,b
  5060  0014E6  5D8F               	subwf	efgtoa@i& (0+255),w,b
  5061  0014E8  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  5062  0014EA  0A80               	xorlw	128
  5063  0014EC  6F60               	movwf	??_efgtoa& (0+255),b
  5064  0014EE  5178               	movf	(efgtoa@m+1)& (0+255),w,b
  5065  0014F0  0A80               	xorlw	128
  5066  0014F2  5960               	subwfb	??_efgtoa& (0+255),w,b
  5067  0014F4  A0D8               	btfss	status,0,c
  5068  0014F6  EF7F  F00A         	goto	u10471
  5069  0014FA  EF81  F00A         	goto	u10470
  5070  0014FE                     u10471:
  5071  0014FE  EFF7  F009         	goto	l7897
  5072  001502                     u10470:
  5073  001502                     
  5074                           ; BSR set to: 0
  5075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5076  001502  C099  F016         	movff	efgtoa@u,___flmul@b
  5077  001506  C09A  F017         	movff	efgtoa@u+1,___flmul@b+1
  5078  00150A  C09B  F018         	movff	efgtoa@u+2,___flmul@b+2
  5079  00150E  C09C  F019         	movff	efgtoa@u+3,___flmul@b+3
  5080  001512  0E00               	movlw	0
  5081  001514  6E1A               	movwf	___flmul@a^0,c
  5082  001516  0E00               	movlw	0
  5083  001518  6E1B               	movwf	(___flmul@a+1)^0,c
  5084  00151A  0EA0               	movlw	160
  5085  00151C  6E1C               	movwf	(___flmul@a+2)^0,c
  5086  00151E  0E40               	movlw	64
  5087  001520  6E1D               	movwf	(___flmul@a+3)^0,c
  5088  001522  ECB4  F016         	call	___flmul	;wreg free
  5089  001526  C016  F08B         	movff	?___flmul,efgtoa@l
  5090  00152A  C017  F08C         	movff	?___flmul+1,efgtoa@l+1
  5091  00152E  C018  F08D         	movff	?___flmul+2,efgtoa@l+2
  5092  001532  C019  F08E         	movff	?___flmul+3,efgtoa@l+3
  5093  001536                     
  5094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5095  001536  C087  F02F         	movff	efgtoa@h,___flge@ff1
  5096  00153A  C088  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5097  00153E  C089  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5098  001542  C08A  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5099  001546  C08B  F033         	movff	efgtoa@l,___flge@ff2
  5100  00154A  C08C  F034         	movff	efgtoa@l+1,___flge@ff2+1
  5101  00154E  C08D  F035         	movff	efgtoa@l+2,___flge@ff2+2
  5102  001552  C08E  F036         	movff	efgtoa@l+3,___flge@ff2+3
  5103  001556  EC29  F027         	call	___flge	;wreg free
  5104  00155A  B0D8               	btfsc	status,0,c
  5105  00155C  EFB2  F00A         	goto	u10481
  5106  001560  EFB4  F00A         	goto	u10480
  5107  001564                     u10481:
  5108  001564  EFBF  F00A         	goto	l7913
  5109  001568                     u10480:
  5110  001568                     
  5111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5112  001568  0E00               	movlw	0
  5113  00156A  0100               	movlb	0	; () banked
  5114  00156C  6F8B               	movwf	efgtoa@l& (0+255),b
  5115  00156E  0E00               	movlw	0
  5116  001570  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  5117  001572  0E00               	movlw	0
  5118  001574  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  5119  001576  0E00               	movlw	0
  5120  001578  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  5121                           
  5122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5123  00157A  EFE8  F00A         	goto	l7919
  5124  00157E                     l7913:
  5125                           
  5126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5127  00157E  C087  F008         	movff	efgtoa@h,___fleq@ff1
  5128  001582  C088  F009         	movff	efgtoa@h+1,___fleq@ff1+1
  5129  001586  C089  F00A         	movff	efgtoa@h+2,___fleq@ff1+2
  5130  00158A  C08A  F00B         	movff	efgtoa@h+3,___fleq@ff1+3
  5131  00158E  C08B  F00C         	movff	efgtoa@l,___fleq@ff2
  5132  001592  C08C  F00D         	movff	efgtoa@l+1,___fleq@ff2+1
  5133  001596  C08D  F00E         	movff	efgtoa@l+2,___fleq@ff2+2
  5134  00159A  C08E  F00F         	movff	efgtoa@l+3,___fleq@ff2+3
  5135  00159E  EC85  F02A         	call	___fleq	;wreg free
  5136  0015A2  A0D8               	btfss	status,0,c
  5137  0015A4  EFD6  F00A         	goto	u10491
  5138  0015A8  EFD8  F00A         	goto	u10490
  5139  0015AC                     u10491:
  5140  0015AC  EFE8  F00A         	goto	l7919
  5141  0015B0                     u10490:
  5142  0015B0  0100               	movlb	0	; () banked
  5143  0015B2  B17D               	btfsc	efgtoa@d& (0+255),0,b
  5144  0015B4  EFDE  F00A         	goto	u10501
  5145  0015B8  EFE0  F00A         	goto	u10500
  5146  0015BC                     u10501:
  5147  0015BC  EFE8  F00A         	goto	l7919
  5148  0015C0                     u10500:
  5149  0015C0                     
  5150                           ; BSR set to: 0
  5151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5152  0015C0  0E00               	movlw	0
  5153  0015C2  6F8B               	movwf	efgtoa@l& (0+255),b
  5154  0015C4  0E00               	movlw	0
  5155  0015C6  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  5156  0015C8  0E00               	movlw	0
  5157  0015CA  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  5158  0015CC  0E00               	movlw	0
  5159  0015CE  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  5160  0015D0                     l7919:
  5161                           
  5162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5163  0015D0  C091  F02F         	movff	efgtoa@g,___fladd@b
  5164  0015D4  C092  F030         	movff	efgtoa@g+1,___fladd@b+1
  5165  0015D8  C093  F031         	movff	efgtoa@g+2,___fladd@b+2
  5166  0015DC  C094  F032         	movff	efgtoa@g+3,___fladd@b+3
  5167  0015E0  C08B  F033         	movff	efgtoa@l,___fladd@a
  5168  0015E4  C08C  F034         	movff	efgtoa@l+1,___fladd@a+1
  5169  0015E8  C08D  F035         	movff	efgtoa@l+2,___fladd@a+2
  5170  0015EC  C08E  F036         	movff	efgtoa@l+3,___fladd@a+3
  5171  0015F0  EC54  F014         	call	___fladd	;wreg free
  5172  0015F4  C02F  F087         	movff	?___fladd,efgtoa@h
  5173  0015F8  C030  F088         	movff	?___fladd+1,efgtoa@h+1
  5174  0015FC  C031  F089         	movff	?___fladd+2,efgtoa@h+2
  5175  001600  C032  F08A         	movff	?___fladd+3,efgtoa@h+3
  5176  001604                     
  5177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5178  001604  C087  F02F         	movff	efgtoa@h,___flge@ff1
  5179  001608  C088  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5180  00160C  C089  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5181  001610  C08A  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5182  001614  0E00               	movlw	0
  5183  001616  6E1A               	movwf	___flmul@a^0,c
  5184  001618  0E00               	movlw	0
  5185  00161A  6E1B               	movwf	(___flmul@a+1)^0,c
  5186  00161C  0E20               	movlw	32
  5187  00161E  6E1C               	movwf	(___flmul@a+2)^0,c
  5188  001620  0E41               	movlw	65
  5189  001622  6E1D               	movwf	(___flmul@a+3)^0,c
  5190  001624  C079  F016         	movff	efgtoa@ou,___flmul@b
  5191  001628  C07A  F017         	movff	efgtoa@ou+1,___flmul@b+1
  5192  00162C  C07B  F018         	movff	efgtoa@ou+2,___flmul@b+2
  5193  001630  C07C  F019         	movff	efgtoa@ou+3,___flmul@b+3
  5194  001634  ECB4  F016         	call	___flmul	;wreg free
  5195  001638  C016  F033         	movff	?___flmul,___flge@ff2
  5196  00163C  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  5197  001640  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  5198  001644  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  5199  001648  EC29  F027         	call	___flge	;wreg free
  5200  00164C  A0D8               	btfss	status,0,c
  5201  00164E  EF2B  F00B         	goto	u10511
  5202  001652  EF2D  F00B         	goto	u10510
  5203  001656                     u10511:
  5204  001656  EF56  F00B         	goto	l7931
  5205  00165A                     u10510:
  5206  00165A                     
  5207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5208  00165A  0100               	movlb	0	; () banked
  5209  00165C  4B95               	infsnz	efgtoa@e& (0+255),f,b
  5210  00165E  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  5211  001660                     
  5212                           ; BSR set to: 0
  5213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5214  001660  C079  F016         	movff	efgtoa@ou,___flmul@b
  5215  001664  C07A  F017         	movff	efgtoa@ou+1,___flmul@b+1
  5216  001668  C07B  F018         	movff	efgtoa@ou+2,___flmul@b+2
  5217  00166C  C07C  F019         	movff	efgtoa@ou+3,___flmul@b+3
  5218  001670  0E00               	movlw	0
  5219  001672  6E1A               	movwf	___flmul@a^0,c
  5220  001674  0E00               	movlw	0
  5221  001676  6E1B               	movwf	(___flmul@a+1)^0,c
  5222  001678  0E20               	movlw	32
  5223  00167A  6E1C               	movwf	(___flmul@a+2)^0,c
  5224  00167C  0E41               	movlw	65
  5225  00167E  6E1D               	movwf	(___flmul@a+3)^0,c
  5226  001680  ECB4  F016         	call	___flmul	;wreg free
  5227  001684  C016  F079         	movff	?___flmul,efgtoa@ou
  5228  001688  C017  F07A         	movff	?___flmul+1,efgtoa@ou+1
  5229  00168C  C018  F07B         	movff	?___flmul+2,efgtoa@ou+2
  5230  001690  C019  F07C         	movff	?___flmul+3,efgtoa@ou+3
  5231  001694                     
  5232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5233  001694  0E66               	movlw	102
  5234  001696  0100               	movlb	0	; () banked
  5235  001698  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  5236  00169A  A4D8               	btfss	status,2,c
  5237  00169C  EF52  F00B         	goto	u10521
  5238  0016A0  EF54  F00B         	goto	u10520
  5239  0016A4                     u10521:
  5240  0016A4  EF56  F00B         	goto	l7931
  5241  0016A8                     u10520:
  5242  0016A8                     
  5243                           ; BSR set to: 0
  5244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5245  0016A8  4B77               	infsnz	efgtoa@m& (0+255),f,b
  5246  0016AA  2B78               	incf	(efgtoa@m+1)& (0+255),f,b
  5247  0016AC                     l7931:
  5248                           
  5249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5250  0016AC  C079  F099         	movff	efgtoa@ou,efgtoa@u
  5251  0016B0  C07A  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  5252  0016B4  C07B  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  5253  0016B8  C07C  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  5254  0016BC                     
  5255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5256  0016BC  0E65               	movlw	101
  5257  0016BE  0100               	movlb	0	; () banked
  5258  0016C0  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  5259  0016C2  B4D8               	btfsc	status,2,c
  5260  0016C4  EF66  F00B         	goto	u10531
  5261  0016C8  EF68  F00B         	goto	u10530
  5262  0016CC                     u10531:
  5263  0016CC  EF6E  F00B         	goto	l7937
  5264  0016D0                     u10530:
  5265  0016D0                     
  5266                           ; BSR set to: 0
  5267  0016D0  C095  F075         	movff	efgtoa@e,efgtoa@ne
  5268  0016D4  C096  F076         	movff	efgtoa@e+1,efgtoa@ne+1
  5269  0016D8  EF72  F00B         	goto	l1603
  5270  0016DC                     l7937:
  5271                           
  5272                           ; BSR set to: 0
  5273  0016DC  0E00               	movlw	0
  5274  0016DE  6F76               	movwf	(efgtoa@ne+1)& (0+255),b
  5275  0016E0  0E00               	movlw	0
  5276  0016E2  6F75               	movwf	efgtoa@ne& (0+255),b
  5277  0016E4                     l1603:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5281  0016E4  0E00               	movlw	0
  5282  0016E6  6F74               	movwf	(efgtoa@pp+1)& (0+255),b
  5283  0016E8  0E00               	movlw	0
  5284  0016EA  6F73               	movwf	efgtoa@pp& (0+255),b
  5285                           
  5286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5287  0016EC  0E00               	movlw	0
  5288  0016EE  6F72               	movwf	(efgtoa@t+1)& (0+255),b
  5289  0016F0  0E00               	movlw	0
  5290  0016F2  6F71               	movwf	efgtoa@t& (0+255),b
  5291                           
  5292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5293  0016F4  0E00               	movlw	0
  5294  0016F6  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  5295  0016F8  0E00               	movlw	0
  5296  0016FA  6F8F               	movwf	efgtoa@i& (0+255),b
  5297                           
  5298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5299  0016FC  EF6E  F00C         	goto	l7987
  5300  001700                     l7939:
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5304  001700  C087  F016         	movff	efgtoa@h,___fldiv@b
  5305  001704  C088  F017         	movff	efgtoa@h+1,___fldiv@b+1
  5306  001708  C089  F018         	movff	efgtoa@h+2,___fldiv@b+2
  5307  00170C  C08A  F019         	movff	efgtoa@h+3,___fldiv@b+3
  5308  001710  C099  F01A         	movff	efgtoa@u,___fldiv@a
  5309  001714  C09A  F01B         	movff	efgtoa@u+1,___fldiv@a+1
  5310  001718  C09B  F01C         	movff	efgtoa@u+2,___fldiv@a+2
  5311  00171C  C09C  F01D         	movff	efgtoa@u+3,___fldiv@a+3
  5312  001720  ECC9  F018         	call	___fldiv	;wreg free
  5313  001724  C016  F02F         	movff	?___fldiv,floorf@x
  5314  001728  C017  F030         	movff	?___fldiv+1,floorf@x+1
  5315  00172C  C018  F031         	movff	?___fldiv+2,floorf@x+2
  5316  001730  C019  F032         	movff	?___fldiv+3,floorf@x+3
  5317  001734  EC06  F01C         	call	_floorf	;wreg free
  5318  001738  C02F  F08B         	movff	?_floorf,efgtoa@l
  5319  00173C  C030  F08C         	movff	?_floorf+1,efgtoa@l+1
  5320  001740  C031  F08D         	movff	?_floorf+2,efgtoa@l+2
  5321  001744  C032  F08E         	movff	?_floorf+3,efgtoa@l+3
  5322                           
  5323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5324  001748  C08B  F008         	movff	efgtoa@l,___fltol@f1
  5325  00174C  C08C  F009         	movff	efgtoa@l+1,___fltol@f1+1
  5326  001750  C08D  F00A         	movff	efgtoa@l+2,___fltol@f1+2
  5327  001754  C08E  F00B         	movff	efgtoa@l+3,___fltol@f1+3
  5328  001758  ECA6  F026         	call	___fltol	;wreg free
  5329  00175C  C008  F07D         	movff	?___fltol,efgtoa@d
  5330  001760  C009  F07E         	movff	?___fltol+1,efgtoa@d+1
  5331  001764                     
  5332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5333  001764  B850               	btfsc	_flags^0,4,c
  5334  001766  EFB7  F00B         	goto	u10541
  5335  00176A  EFB9  F00B         	goto	u10540
  5336  00176E                     u10541:
  5337  00176E  EFD7  F00B         	goto	l7951
  5338  001772                     u10540:
  5339  001772  0100               	movlb	0	; () banked
  5340  001774  517D               	movf	efgtoa@d& (0+255),w,b
  5341  001776  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5342  001778  A4D8               	btfss	status,2,c
  5343  00177A  EFC1  F00B         	goto	u10551
  5344  00177E  EFC3  F00B         	goto	u10550
  5345  001782                     u10551:
  5346  001782  EFD7  F00B         	goto	l7951
  5347  001786                     u10550:
  5348  001786                     
  5349                           ; BSR set to: 0
  5350  001786  0E67               	movlw	103
  5351  001788  1986               	xorwf	efgtoa@mode& (0+255),w,b
  5352  00178A  A4D8               	btfss	status,2,c
  5353  00178C  EFCA  F00B         	goto	u10561
  5354  001790  EFCC  F00B         	goto	u10560
  5355  001794                     u10561:
  5356  001794  EFD7  F00B         	goto	l7951
  5357  001798                     u10560:
  5358  001798                     
  5359                           ; BSR set to: 0
  5360  001798  BF76               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5361  00179A  EFD3  F00B         	goto	u10570
  5362  00179E  EFD1  F00B         	goto	u10571
  5363  0017A2                     u10571:
  5364  0017A2  EFD7  F00B         	goto	l7951
  5365  0017A6                     u10570:
  5366  0017A6                     
  5367                           ; BSR set to: 0
  5368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5369  0017A6  4B71               	infsnz	efgtoa@t& (0+255),f,b
  5370  0017A8  2B72               	incf	(efgtoa@t+1)& (0+255),f,b
  5371                           
  5372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5373  0017AA  EF22  F00C         	goto	l7979
  5374  0017AE                     l7951:
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5377  0017AE  0100               	movlb	0	; () banked
  5378  0017B0  5173               	movf	efgtoa@pp& (0+255),w,b
  5379  0017B2  1174               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5380  0017B4  A4D8               	btfss	status,2,c
  5381  0017B6  EFDF  F00B         	goto	u10581
  5382  0017BA  EFE1  F00B         	goto	u10580
  5383  0017BE                     u10581:
  5384  0017BE  EF0B  F00C         	goto	l7971
  5385  0017C2                     u10580:
  5386  0017C2                     
  5387                           ; BSR set to: 0
  5388  0017C2  BF76               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5389  0017C4  EFE8  F00B         	goto	u10590
  5390  0017C8  EFE6  F00B         	goto	u10591
  5391  0017CC                     u10591:
  5392  0017CC  EF0B  F00C         	goto	l7971
  5393  0017D0                     u10590:
  5394  0017D0                     
  5395                           ; BSR set to: 0
  5396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5397  0017D0  0E25               	movlw	low _dbuf
  5398  0017D2  2597               	addwf	efgtoa@n& (0+255),w,b
  5399  0017D4  6ED9               	movwf	fsr2l,c
  5400  0017D6  0E01               	movlw	high _dbuf
  5401  0017D8  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5402  0017DA  6EDA               	movwf	fsr2h,c
  5403  0017DC  0E2E               	movlw	46
  5404  0017DE  6EDF               	movwf	indf2,c
  5405  0017E0                     
  5406                           ; BSR set to: 0
  5407  0017E0  4B97               	infsnz	efgtoa@n& (0+255),f,b
  5408  0017E2  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  5409  0017E4                     
  5410                           ; BSR set to: 0
  5411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5412  0017E4  0783               	decf	efgtoa@w& (0+255),f,b
  5413  0017E6  A0D8               	btfss	status,0,c
  5414  0017E8  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  5415  0017EA                     
  5416                           ; BSR set to: 0
  5417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5418  0017EA  0E00               	movlw	0
  5419  0017EC  6F74               	movwf	(efgtoa@pp+1)& (0+255),b
  5420  0017EE  0E01               	movlw	1
  5421  0017F0  6F73               	movwf	efgtoa@pp& (0+255),b
  5422  0017F2  EF0B  F00C         	goto	l7971
  5423  0017F6                     l7963:
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5427  0017F6  0E25               	movlw	low _dbuf
  5428  0017F8  2597               	addwf	efgtoa@n& (0+255),w,b
  5429  0017FA  6ED9               	movwf	fsr2l,c
  5430  0017FC  0E01               	movlw	high _dbuf
  5431  0017FE  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5432  001800  6EDA               	movwf	fsr2h,c
  5433  001802  0E30               	movlw	48
  5434  001804  6EDF               	movwf	indf2,c
  5435  001806                     
  5436                           ; BSR set to: 0
  5437  001806  4B97               	infsnz	efgtoa@n& (0+255),f,b
  5438  001808  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  5439  00180A                     
  5440                           ; BSR set to: 0
  5441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5442  00180A  0783               	decf	efgtoa@w& (0+255),f,b
  5443  00180C  A0D8               	btfss	status,0,c
  5444  00180E  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  5445  001810                     
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5448  001810  0771               	decf	efgtoa@t& (0+255),f,b
  5449  001812  A0D8               	btfss	status,0,c
  5450  001814  0772               	decf	(efgtoa@t+1)& (0+255),f,b
  5451  001816                     l7971:
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5455  001816  5171               	movf	efgtoa@t& (0+255),w,b
  5456  001818  1172               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5457  00181A  A4D8               	btfss	status,2,c
  5458  00181C  EF12  F00C         	goto	u10601
  5459  001820  EF14  F00C         	goto	u10600
  5460  001824                     u10601:
  5461  001824  EFFB  F00B         	goto	l7963
  5462  001828                     u10600:
  5463  001828                     
  5464                           ; BSR set to: 0
  5465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5466  001828  0E25               	movlw	low _dbuf
  5467  00182A  2597               	addwf	efgtoa@n& (0+255),w,b
  5468  00182C  6ED9               	movwf	fsr2l,c
  5469  00182E  0E01               	movlw	high _dbuf
  5470  001830  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5471  001832  6EDA               	movwf	fsr2h,c
  5472  001834  517D               	movf	efgtoa@d& (0+255),w,b
  5473  001836  0F30               	addlw	48
  5474  001838  6EDF               	movwf	indf2,c
  5475  00183A                     
  5476                           ; BSR set to: 0
  5477  00183A  4B97               	infsnz	efgtoa@n& (0+255),f,b
  5478  00183C  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  5479  00183E                     
  5480                           ; BSR set to: 0
  5481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5482  00183E  0783               	decf	efgtoa@w& (0+255),f,b
  5483  001840  A0D8               	btfss	status,0,c
  5484  001842  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  5485  001844                     l7979:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5489  001844  C087  F03F         	movff	efgtoa@h,___flsub@b
  5490  001848  C088  F040         	movff	efgtoa@h+1,___flsub@b+1
  5491  00184C  C089  F041         	movff	efgtoa@h+2,___flsub@b+2
  5492  001850  C08A  F042         	movff	efgtoa@h+3,___flsub@b+3
  5493  001854  C099  F01A         	movff	efgtoa@u,___flmul@a
  5494  001858  C09A  F01B         	movff	efgtoa@u+1,___flmul@a+1
  5495  00185C  C09B  F01C         	movff	efgtoa@u+2,___flmul@a+2
  5496  001860  C09C  F01D         	movff	efgtoa@u+3,___flmul@a+3
  5497  001864  C08B  F016         	movff	efgtoa@l,___flmul@b
  5498  001868  C08C  F017         	movff	efgtoa@l+1,___flmul@b+1
  5499  00186C  C08D  F018         	movff	efgtoa@l+2,___flmul@b+2
  5500  001870  C08E  F019         	movff	efgtoa@l+3,___flmul@b+3
  5501  001874  ECB4  F016         	call	___flmul	;wreg free
  5502  001878  C016  F043         	movff	?___flmul,___flsub@a
  5503  00187C  C017  F044         	movff	?___flmul+1,___flsub@a+1
  5504  001880  C018  F045         	movff	?___flmul+2,___flsub@a+2
  5505  001884  C019  F046         	movff	?___flmul+3,___flsub@a+3
  5506  001888  ECC2  F02E         	call	___flsub	;wreg free
  5507  00188C  C03F  F087         	movff	?___flsub,efgtoa@h
  5508  001890  C040  F088         	movff	?___flsub+1,efgtoa@h+1
  5509  001894  C041  F089         	movff	?___flsub+2,efgtoa@h+2
  5510  001898  C042  F08A         	movff	?___flsub+3,efgtoa@h+3
  5511  00189C                     
  5512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5513  00189C  C099  F016         	movff	efgtoa@u,___fldiv@b
  5514  0018A0  C09A  F017         	movff	efgtoa@u+1,___fldiv@b+1
  5515  0018A4  C09B  F018         	movff	efgtoa@u+2,___fldiv@b+2
  5516  0018A8  C09C  F019         	movff	efgtoa@u+3,___fldiv@b+3
  5517  0018AC  0E00               	movlw	0
  5518  0018AE  6E1A               	movwf	___fldiv@a^0,c
  5519  0018B0  0E00               	movlw	0
  5520  0018B2  6E1B               	movwf	(___fldiv@a+1)^0,c
  5521  0018B4  0E20               	movlw	32
  5522  0018B6  6E1C               	movwf	(___fldiv@a+2)^0,c
  5523  0018B8  0E41               	movlw	65
  5524  0018BA  6E1D               	movwf	(___fldiv@a+3)^0,c
  5525  0018BC  ECC9  F018         	call	___fldiv	;wreg free
  5526  0018C0  C016  F099         	movff	?___fldiv,efgtoa@u
  5527  0018C4  C017  F09A         	movff	?___fldiv+1,efgtoa@u+1
  5528  0018C8  C018  F09B         	movff	?___fldiv+2,efgtoa@u+2
  5529  0018CC  C019  F09C         	movff	?___fldiv+3,efgtoa@u+3
  5530  0018D0                     
  5531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5532  0018D0  0100               	movlb	0	; () banked
  5533  0018D2  0775               	decf	efgtoa@ne& (0+255),f,b
  5534  0018D4  A0D8               	btfss	status,0,c
  5535  0018D6  0776               	decf	(efgtoa@ne+1)& (0+255),f,b
  5536  0018D8                     
  5537                           ; BSR set to: 0
  5538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5539  0018D8  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  5540  0018DA  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  5541  0018DC                     l7987:
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5545  0018DC  5177               	movf	efgtoa@m& (0+255),w,b
  5546  0018DE  5D8F               	subwf	efgtoa@i& (0+255),w,b
  5547  0018E0  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  5548  0018E2  0A80               	xorlw	128
  5549  0018E4  6F60               	movwf	??_efgtoa& (0+255),b
  5550  0018E6  5178               	movf	(efgtoa@m+1)& (0+255),w,b
  5551  0018E8  0A80               	xorlw	128
  5552  0018EA  5960               	subwfb	??_efgtoa& (0+255),w,b
  5553  0018EC  B0D8               	btfsc	status,0,c
  5554  0018EE  EF7B  F00C         	goto	u10611
  5555  0018F2  EF7D  F00C         	goto	u10610
  5556  0018F6                     u10611:
  5557  0018F6  EF8B  F00C         	goto	l7991
  5558  0018FA                     u10610:
  5559  0018FA                     
  5560                           ; BSR set to: 0
  5561  0018FA  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5562  0018FC  EF89  F00C         	goto	u10621
  5563  001900  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  5564  001902  E109               	bnz	u10620
  5565  001904  0E4B               	movlw	75
  5566  001906  5D97               	subwf	efgtoa@n& (0+255),w,b
  5567  001908  A0D8               	btfss	status,0,c
  5568  00190A  EF89  F00C         	goto	u10621
  5569  00190E  EF8B  F00C         	goto	u10620
  5570  001912                     u10621:
  5571  001912  EF80  F00B         	goto	l7939
  5572  001916                     u10620:
  5573  001916                     l7991:
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5577  001916  5173               	movf	efgtoa@pp& (0+255),w,b
  5578  001918  1174               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5579  00191A  A4D8               	btfss	status,2,c
  5580  00191C  EF92  F00C         	goto	u10631
  5581  001920  EF94  F00C         	goto	u10630
  5582  001924                     u10631:
  5583  001924  EFA5  F00C         	goto	l7999
  5584  001928                     u10630:
  5585  001928                     
  5586                           ; BSR set to: 0
  5587  001928  A850               	btfss	_flags^0,4,c
  5588  00192A  EF99  F00C         	goto	u10641
  5589  00192E  EF9B  F00C         	goto	u10640
  5590  001932                     u10641:
  5591  001932  EFA5  F00C         	goto	l7999
  5592  001936                     u10640:
  5593  001936                     
  5594                           ; BSR set to: 0
  5595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5596  001936  0E25               	movlw	low _dbuf
  5597  001938  2597               	addwf	efgtoa@n& (0+255),w,b
  5598  00193A  6ED9               	movwf	fsr2l,c
  5599  00193C  0E01               	movlw	high _dbuf
  5600  00193E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5601  001940  6EDA               	movwf	fsr2h,c
  5602  001942  0E2E               	movlw	46
  5603  001944  6EDF               	movwf	indf2,c
  5604  001946                     
  5605                           ; BSR set to: 0
  5606  001946  4B97               	infsnz	efgtoa@n& (0+255),f,b
  5607  001948  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  5608  00194A                     l7999:
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5612  00194A  0E25               	movlw	low _dbuf
  5613  00194C  2597               	addwf	efgtoa@n& (0+255),w,b
  5614  00194E  6ED9               	movwf	fsr2l,c
  5615  001950  0E01               	movlw	high _dbuf
  5616  001952  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5617  001954  6EDA               	movwf	fsr2h,c
  5618  001956  0E00               	movlw	0
  5619  001958  6EDF               	movwf	indf2,c
  5620  00195A                     
  5621                           ; BSR set to: 0
  5622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5623  00195A  0E65               	movlw	101
  5624  00195C  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  5625  00195E  A4D8               	btfss	status,2,c
  5626  001960  EFB4  F00C         	goto	u10651
  5627  001964  EFB6  F00C         	goto	u10650
  5628  001968                     u10651:
  5629  001968  EF0F  F008         	goto	l7801
  5630  00196C                     u10650:
  5631  00196C                     
  5632                           ; BSR set to: 0
  5633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5634  00196C  0E00               	movlw	0
  5635  00196E  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  5636  001970  0E4F               	movlw	79
  5637  001972  6F8F               	movwf	efgtoa@i& (0+255),b
  5638  001974                     
  5639                           ; BSR set to: 0
  5640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5641  001974  0E25               	movlw	low _dbuf
  5642  001976  258F               	addwf	efgtoa@i& (0+255),w,b
  5643  001978  6ED9               	movwf	fsr2l,c
  5644  00197A  0E01               	movlw	high _dbuf
  5645  00197C  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5646  00197E  6EDA               	movwf	fsr2h,c
  5647  001980  0E00               	movlw	0
  5648  001982  6EDF               	movwf	indf2,c
  5649  001984                     
  5650                           ; BSR set to: 0
  5651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5652  001984  0E00               	movlw	0
  5653  001986  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  5654  001988  0E00               	movlw	0
  5655  00198A  6F7F               	movwf	efgtoa@sign& (0+255),b
  5656  00198C                     
  5657                           ; BSR set to: 0
  5658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5659  00198C  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5660  00198E  EFCD  F00C         	goto	u10660
  5661  001992  EFCB  F00C         	goto	u10661
  5662  001996                     u10661:
  5663  001996  EFD5  F00C         	goto	l8015
  5664  00199A                     u10660:
  5665  00199A                     
  5666                           ; BSR set to: 0
  5667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5668  00199A  0E00               	movlw	0
  5669  00199C  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  5670  00199E  0E01               	movlw	1
  5671  0019A0  6F7F               	movwf	efgtoa@sign& (0+255),b
  5672  0019A2                     
  5673                           ; BSR set to: 0
  5674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5675  0019A2  6D95               	negf	efgtoa@e& (0+255),b
  5676  0019A4  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  5677  0019A6  B0D8               	btfsc	status,0,c
  5678  0019A8  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  5679  0019AA                     l8015:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5683  0019AA  0E00               	movlw	0
  5684  0019AC  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  5685  0019AE  0E02               	movlw	2
  5686  0019B0  6F81               	movwf	efgtoa@p& (0+255),b
  5687                           
  5688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5689  0019B2  EF06  F00D         	goto	l8027
  5690  0019B6                     l8017:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5694  0019B6  078F               	decf	efgtoa@i& (0+255),f,b
  5695  0019B8  A0D8               	btfss	status,0,c
  5696  0019BA  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  5697  0019BC                     
  5698                           ; BSR set to: 0
  5699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5700  0019BC  0E25               	movlw	low _dbuf
  5701  0019BE  258F               	addwf	efgtoa@i& (0+255),w,b
  5702  0019C0  6ED9               	movwf	fsr2l,c
  5703  0019C2  0E01               	movlw	high _dbuf
  5704  0019C4  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5705  0019C6  6EDA               	movwf	fsr2h,c
  5706  0019C8  C095  F008         	movff	efgtoa@e,___awmod@dividend
  5707  0019CC  C096  F009         	movff	efgtoa@e+1,___awmod@dividend+1
  5708  0019D0  0E00               	movlw	0
  5709  0019D2  6E0B               	movwf	(___awmod@divisor+1)^0,c
  5710  0019D4  0E0A               	movlw	10
  5711  0019D6  6E0A               	movwf	___awmod@divisor^0,c
  5712  0019D8  EC2D  F02A         	call	___awmod	;wreg free
  5713  0019DC  5008               	movf	?___awmod^0,w,c
  5714  0019DE  0F30               	addlw	48
  5715  0019E0  6EDF               	movwf	indf2,c
  5716  0019E2                     
  5717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5718  0019E2  C095  F00E         	movff	efgtoa@e,___awdiv@dividend
  5719  0019E6  C096  F00F         	movff	efgtoa@e+1,___awdiv@dividend+1
  5720  0019EA  0E00               	movlw	0
  5721  0019EC  6E11               	movwf	(___awdiv@divisor+1)^0,c
  5722  0019EE  0E0A               	movlw	10
  5723  0019F0  6E10               	movwf	___awdiv@divisor^0,c
  5724  0019F2  EC6A  F029         	call	___awdiv	;wreg free
  5725  0019F6  C00E  F095         	movff	?___awdiv,efgtoa@e
  5726  0019FA  C00F  F096         	movff	?___awdiv+1,efgtoa@e+1
  5727  0019FE                     
  5728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5729  0019FE  0100               	movlb	0	; () banked
  5730  001A00  0781               	decf	efgtoa@p& (0+255),f,b
  5731  001A02  A0D8               	btfss	status,0,c
  5732  001A04  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  5733  001A06                     
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5736  001A06  0783               	decf	efgtoa@w& (0+255),f,b
  5737  001A08  A0D8               	btfss	status,0,c
  5738  001A0A  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  5739  001A0C                     l8027:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5743  001A0C  5195               	movf	efgtoa@e& (0+255),w,b
  5744  001A0E  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5745  001A10  A4D8               	btfss	status,2,c
  5746  001A12  EF0D  F00D         	goto	u10671
  5747  001A16  EF0F  F00D         	goto	u10670
  5748  001A1A                     u10671:
  5749  001A1A  EFDB  F00C         	goto	l8017
  5750  001A1E                     u10670:
  5751  001A1E                     
  5752                           ; BSR set to: 0
  5753  001A1E  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5754  001A20  EF1C  F00D         	goto	u10680
  5755  001A24  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  5756  001A26  E106               	bnz	u10681
  5757  001A28  0581               	decf	efgtoa@p& (0+255),w,b
  5758  001A2A  B0D8               	btfsc	status,0,c
  5759  001A2C  EF1A  F00D         	goto	u10681
  5760  001A30  EF1C  F00D         	goto	u10680
  5761  001A34                     u10681:
  5762  001A34  EFDB  F00C         	goto	l8017
  5763  001A38                     u10680:
  5764  001A38                     
  5765                           ; BSR set to: 0
  5766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5767  001A38  078F               	decf	efgtoa@i& (0+255),f,b
  5768  001A3A  A0D8               	btfss	status,0,c
  5769  001A3C  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  5770  001A3E                     
  5771                           ; BSR set to: 0
  5772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5773  001A3E  517F               	movf	efgtoa@sign& (0+255),w,b
  5774  001A40  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5775  001A42  A4D8               	btfss	status,2,c
  5776  001A44  EF26  F00D         	goto	u10691
  5777  001A48  EF28  F00D         	goto	u10690
  5778  001A4C                     u10691:
  5779  001A4C  EF2E  F00D         	goto	l8037
  5780  001A50                     u10690:
  5781  001A50                     
  5782                           ; BSR set to: 0
  5783  001A50  0E00               	movlw	0
  5784  001A52  6F6C               	movwf	(_efgtoa$3253+1)& (0+255),b
  5785  001A54  0E2B               	movlw	43
  5786  001A56  6F6B               	movwf	_efgtoa$3253& (0+255),b
  5787  001A58  EF32  F00D         	goto	l8039
  5788  001A5C                     l8037:
  5789                           
  5790                           ; BSR set to: 0
  5791  001A5C  0E00               	movlw	0
  5792  001A5E  6F6C               	movwf	(_efgtoa$3253+1)& (0+255),b
  5793  001A60  0E2D               	movlw	45
  5794  001A62  6F6B               	movwf	_efgtoa$3253& (0+255),b
  5795  001A64                     l8039:
  5796                           
  5797                           ; BSR set to: 0
  5798  001A64  0E25               	movlw	low _dbuf
  5799  001A66  258F               	addwf	efgtoa@i& (0+255),w,b
  5800  001A68  6ED9               	movwf	fsr2l,c
  5801  001A6A  0E01               	movlw	high _dbuf
  5802  001A6C  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5803  001A6E  6EDA               	movwf	fsr2h,c
  5804  001A70  C06B  FFDF         	movff	_efgtoa$3253,indf2
  5805  001A74                     
  5806                           ; BSR set to: 0
  5807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5808  001A74  0783               	decf	efgtoa@w& (0+255),f,b
  5809  001A76  A0D8               	btfss	status,0,c
  5810  001A78  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  5811  001A7A                     
  5812                           ; BSR set to: 0
  5813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5814  001A7A  078F               	decf	efgtoa@i& (0+255),f,b
  5815  001A7C  A0D8               	btfss	status,0,c
  5816  001A7E  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  5817  001A80                     
  5818                           ; BSR set to: 0
  5819  001A80  0EBF               	movlw	191
  5820  001A82  6F60               	movwf	??_efgtoa& (0+255),b
  5821  001A84  0EFF               	movlw	255
  5822  001A86  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  5823  001A88  504D               	movf	efgtoa@c^0,w,c
  5824  001A8A  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  5825  001A8C  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  5826  001A8E  5160               	movf	??_efgtoa& (0+255),w,b
  5827  001A90  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  5828  001A92  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  5829  001A94  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5830  001A96  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  5831  001A98  E10A               	bnz	u10700
  5832  001A9A  0E1A               	movlw	26
  5833  001A9C  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  5834  001A9E  A0D8               	btfss	status,0,c
  5835  001AA0  EF54  F00D         	goto	u10701
  5836  001AA4  EF57  F00D         	goto	u10700
  5837  001AA8                     u10701:
  5838  001AA8  0E01               	movlw	1
  5839  001AAA  EF58  F00D         	goto	u10710
  5840  001AAE                     u10700:
  5841  001AAE  0E00               	movlw	0
  5842  001AB0                     u10710:
  5843  001AB0  6F6F               	movwf	_efgtoa$3255& (0+255),b
  5844  001AB2  6B70               	clrf	(_efgtoa$3255+1)& (0+255),b
  5845  001AB4                     
  5846                           ; BSR set to: 0
  5847  001AB4  516F               	movf	_efgtoa$3255& (0+255),w,b
  5848  001AB6  1170               	iorwf	(_efgtoa$3255+1)& (0+255),w,b
  5849  001AB8  A4D8               	btfss	status,2,c
  5850  001ABA  EF61  F00D         	goto	u10721
  5851  001ABE  EF63  F00D         	goto	u10720
  5852  001AC2                     u10721:
  5853  001AC2  EF69  F00D         	goto	l8053
  5854  001AC6                     u10720:
  5855  001AC6                     
  5856                           ; BSR set to: 0
  5857  001AC6  0E00               	movlw	0
  5858  001AC8  6F6E               	movwf	(_efgtoa$3254+1)& (0+255),b
  5859  001ACA  0E65               	movlw	101
  5860  001ACC  6F6D               	movwf	_efgtoa$3254& (0+255),b
  5861  001ACE  EF6D  F00D         	goto	l8055
  5862  001AD2                     l8053:
  5863                           
  5864                           ; BSR set to: 0
  5865  001AD2  0E00               	movlw	0
  5866  001AD4  6F6E               	movwf	(_efgtoa$3254+1)& (0+255),b
  5867  001AD6  0E45               	movlw	69
  5868  001AD8  6F6D               	movwf	_efgtoa$3254& (0+255),b
  5869  001ADA                     l8055:
  5870                           
  5871                           ; BSR set to: 0
  5872  001ADA  0E25               	movlw	low _dbuf
  5873  001ADC  258F               	addwf	efgtoa@i& (0+255),w,b
  5874  001ADE  6ED9               	movwf	fsr2l,c
  5875  001AE0  0E01               	movlw	high _dbuf
  5876  001AE2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5877  001AE4  6EDA               	movwf	fsr2h,c
  5878  001AE6  C06D  FFDF         	movff	_efgtoa$3254,indf2
  5879  001AEA                     
  5880                           ; BSR set to: 0
  5881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5882  001AEA  0783               	decf	efgtoa@w& (0+255),f,b
  5883  001AEC  A0D8               	btfss	status,0,c
  5884  001AEE  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  5885  001AF0                     
  5886                           ; BSR set to: 0
  5887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5888  001AF0  0E25               	movlw	low _dbuf
  5889  001AF2  2597               	addwf	efgtoa@n& (0+255),w,b
  5890  001AF4  6E08               	movwf	strcpy@dest^0,c
  5891  001AF6  0E01               	movlw	high _dbuf
  5892  001AF8  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5893  001AFA  6E09               	movwf	(strcpy@dest+1)^0,c
  5894  001AFC  0E25               	movlw	low _dbuf
  5895  001AFE  258F               	addwf	efgtoa@i& (0+255),w,b
  5896  001B00  6E0A               	movwf	strcpy@src^0,c
  5897  001B02  0E01               	movlw	high _dbuf
  5898  001B04  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5899  001B06  6E0B               	movwf	(strcpy@src+1)^0,c
  5900  001B08  EC58  F02C         	call	_strcpy	;wreg free
  5901  001B0C  EF0F  F008         	goto	l7801
  5902  001B10                     l1557:
  5903  001B10  0012               	return		;funcret
  5904  001B12                     __end_of_efgtoa:
  5905                           	callstack 0
  5906                           
  5907 ;; *************** function _tolower *****************
  5908 ;; Defined at:
  5909 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  c               2   13[COMRAM] int 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  2   13[COMRAM] int 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5927 ;;Total ram usage:        8 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; Hardware stack levels required when called: 8
  5930 ;; This function calls:
  5931 ;;		_isupper
  5932 ;; This function is called by:
  5933 ;;		_efgtoa
  5934 ;;		_vfpfcnvrt
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text16
  5939  005850                     __ptext16:
  5940                           	callstack 0
  5941  005850                     _tolower:
  5942                           	callstack 17
  5943  005850  0EBF               	movlw	191
  5944  005852  6E10               	movwf	??_tolower^0,c
  5945  005854  0EFF               	movlw	255
  5946  005856  6E11               	movwf	(??_tolower+1)^0,c
  5947  005858  C00E  F012         	movff	tolower@c,??_tolower+2
  5948  00585C  C00F  F013         	movff	tolower@c+1,??_tolower+3
  5949  005860  5010               	movf	??_tolower^0,w,c
  5950  005862  2612               	addwf	(??_tolower+2)^0,f,c
  5951  005864  5011               	movf	(??_tolower+1)^0,w,c
  5952  005866  2213               	addwfc	(??_tolower+3)^0,f,c
  5953  005868  5013               	movf	(??_tolower+3)^0,w,c
  5954  00586A  E10A               	bnz	u9850
  5955  00586C  0E1A               	movlw	26
  5956  00586E  5C12               	subwf	(??_tolower+2)^0,w,c
  5957  005870  A0D8               	btfss	status,0,c
  5958  005872  EF3D  F02C         	goto	u9851
  5959  005876  EF40  F02C         	goto	u9850
  5960  00587A                     u9851:
  5961  00587A  0E01               	movlw	1
  5962  00587C  EF41  F02C         	goto	u9860
  5963  005880                     u9850:
  5964  005880  0E00               	movlw	0
  5965  005882                     u9860:
  5966  005882  6E14               	movwf	_tolower$3416^0,c
  5967  005884  6A15               	clrf	(_tolower$3416+1)^0,c
  5968  005886  5014               	movf	_tolower$3416^0,w,c
  5969  005888  1015               	iorwf	(_tolower$3416+1)^0,w,c
  5970  00588A  B4D8               	btfsc	status,2,c
  5971  00588C  EF4A  F02C         	goto	u9871
  5972  005890  EF4C  F02C         	goto	u9870
  5973  005894                     u9871:
  5974  005894  EF53  F02C         	goto	l1821
  5975  005898                     u9870:
  5976  005898  0E20               	movlw	32
  5977  00589A  100E               	iorwf	tolower@c^0,w,c
  5978  00589C  6E0E               	movwf	?_tolower^0,c
  5979  00589E  500F               	movf	(tolower@c+1)^0,w,c
  5980  0058A0  6E0F               	movwf	(?_tolower+1)^0,c
  5981  0058A2  EF57  F02C         	goto	l1826
  5982  0058A6                     l1821:
  5983  0058A6  C00E  F00E         	movff	tolower@c,?_tolower
  5984  0058AA  C00F  F00F         	movff	tolower@c+1,?_tolower+1
  5985  0058AE                     l1826:
  5986  0058AE  0012               	return		;funcret
  5987  0058B0                     __end_of_tolower:
  5988                           	callstack 0
  5989                           
  5990 ;; *************** function _isupper *****************
  5991 ;; Defined at:
  5992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  c               2    7[COMRAM] int 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  2    7[COMRAM] int 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;Total ram usage:        6 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; Hardware stack levels required when called: 7
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_efgtoa
  6017 ;;		_vfpfcnvrt
  6018 ;;		_tolower
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text17
  6023  005F0C                     __ptext17:
  6024                           	callstack 0
  6025  005F0C                     _isupper:
  6026                           	callstack 17
  6027  005F0C  0EBF               	movlw	191
  6028  005F0E  6E0A               	movwf	??_isupper^0,c
  6029  005F10  0EFF               	movlw	255
  6030  005F12  6E0B               	movwf	(??_isupper+1)^0,c
  6031  005F14  C008  F00C         	movff	isupper@c,??_isupper+2
  6032  005F18  C009  F00D         	movff	isupper@c+1,??_isupper+3
  6033  005F1C  500A               	movf	??_isupper^0,w,c
  6034  005F1E  260C               	addwf	(??_isupper+2)^0,f,c
  6035  005F20  500B               	movf	(??_isupper+1)^0,w,c
  6036  005F22  220D               	addwfc	(??_isupper+3)^0,f,c
  6037  005F24  500D               	movf	(??_isupper+3)^0,w,c
  6038  005F26  E10A               	bnz	u8860
  6039  005F28  0E1A               	movlw	26
  6040  005F2A  5C0C               	subwf	(??_isupper+2)^0,w,c
  6041  005F2C  A0D8               	btfss	status,0,c
  6042  005F2E  EF9B  F02F         	goto	u8861
  6043  005F32  EF9E  F02F         	goto	u8860
  6044  005F36                     u8861:
  6045  005F36  0E01               	movlw	1
  6046  005F38  EF9F  F02F         	goto	u8870
  6047  005F3C                     u8860:
  6048  005F3C  0E00               	movlw	0
  6049  005F3E                     u8870:
  6050  005F3E  6E08               	movwf	?_isupper^0,c
  6051  005F40  6A09               	clrf	(?_isupper+1)^0,c
  6052  005F42  0012               	return		;funcret
  6053  005F44                     __end_of_isupper:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _strcpy *****************
  6057 ;; Defined at:
  6058 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6061 ;;		 -> dbuf(80), 
  6062 ;;  src             2    9[COMRAM] PTR const unsigned char 
  6063 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6064 ;;		 -> dbuf(80), 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  d               2   15[COMRAM] PTR unsigned char 
  6067 ;;		 -> dbuf(80), 
  6068 ;;  s               2   13[COMRAM] PTR const unsigned char 
  6069 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6070 ;;		 -> dbuf(80), 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  2    7[COMRAM] PTR unsigned char 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;Total ram usage:       10 bytes
  6085 ;; Hardware stack levels used: 1
  6086 ;; Hardware stack levels required when called: 7
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_efgtoa
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text18
  6095  0058B0                     __ptext18:
  6096                           	callstack 0
  6097  0058B0                     _strcpy:
  6098                           	callstack 17
  6099  0058B0  C00A  F00E         	movff	strcpy@src,strcpy@s
  6100  0058B4  C00B  F00F         	movff	strcpy@src+1,strcpy@s+1
  6101  0058B8  C008  F010         	movff	strcpy@dest,strcpy@d
  6102  0058BC  C009  F011         	movff	strcpy@dest+1,strcpy@d+1
  6103  0058C0                     l7635:
  6104  0058C0  500E               	movf	strcpy@s^0,w,c
  6105  0058C2  6E0C               	movwf	??_strcpy^0,c
  6106  0058C4  500F               	movf	(strcpy@s+1)^0,w,c
  6107  0058C6  6E0D               	movwf	(??_strcpy+1)^0,c
  6108  0058C8  4A0E               	infsnz	strcpy@s^0,f,c
  6109  0058CA  2A0F               	incf	(strcpy@s+1)^0,f,c
  6110  0058CC  C00C  FFF6         	movff	??_strcpy,tblptrl
  6111  0058D0  C00D  FFF7         	movff	??_strcpy+1,tblptrh
  6112  0058D4  0E00               	movlw	low (__smallconst shr (0+16))
  6113  0058D6  6EF8               	movwf	tblptru,c
  6114  0058D8  C010  FFD9         	movff	strcpy@d,fsr2l
  6115  0058DC  C011  FFDA         	movff	strcpy@d+1,fsr2h
  6116  0058E0  4A10               	infsnz	strcpy@d^0,f,c
  6117  0058E2  2A11               	incf	(strcpy@d+1)^0,f,c
  6118  0058E4  0E0D               	movlw	(high __ramtop+-1)
  6119  0058E6  64F7               	cpfsgt	tblptrh,c
  6120  0058E8  D003               	bra	u9837
  6121  0058EA  0008               	tblrd		*
  6122  0058EC  50F5               	movf	tablat,w,c
  6123  0058EE  D005               	bra	u9830
  6124  0058F0                     u9837:
  6125  0058F0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6126  0058F4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6127  0058F8  50E7               	movf	indf1,w,c
  6128  0058FA                     u9830:
  6129  0058FA  6EDF               	movwf	indf2,c
  6130  0058FC  50DF               	movf	indf2,w,c
  6131  0058FE  A4D8               	btfss	status,2,c
  6132  005900  EF84  F02C         	goto	u9841
  6133  005904  EF86  F02C         	goto	u9840
  6134  005908                     u9841:
  6135  005908  EF60  F02C         	goto	l7635
  6136  00590C                     u9840:
  6137  00590C  0012               	return		;funcret
  6138  00590E                     __end_of_strcpy:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _floorf *****************
  6142 ;; Defined at:
  6143 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  x               4   46[COMRAM] float 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  u               4   62[COMRAM] struct .
  6148 ;;  m               4   56[COMRAM] unsigned long 
  6149 ;;  e               2   60[COMRAM] int 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  4   46[COMRAM] float 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;Total ram usage:       20 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; Hardware stack levels required when called: 7
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_efgtoa
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text19
  6174  00380C                     __ptext19:
  6175                           	callstack 0
  6176  00380C                     _floorf:
  6177                           	callstack 17
  6178  00380C  C114  F03F         	movff	floorf@F527,floorf@u
  6179  003810  C115  F040         	movff	floorf@F527+1,floorf@u+1
  6180  003814  C116  F041         	movff	floorf@F527+2,floorf@u+2
  6181  003818  C117  F042         	movff	floorf@F527+3,floorf@u+3
  6182  00381C  C02F  F03F         	movff	floorf@x,floorf@u
  6183  003820  C030  F040         	movff	floorf@x+1,floorf@u+1
  6184  003824  C031  F041         	movff	floorf@x+2,floorf@u+2
  6185  003828  C032  F042         	movff	floorf@x+3,floorf@u+3
  6186  00382C  0E81               	movlw	129
  6187  00382E  6E33               	movwf	??_floorf^0,c
  6188  003830  0EFF               	movlw	255
  6189  003832  6E34               	movwf	(??_floorf+1)^0,c
  6190  003834  C03F  F035         	movff	floorf@u,??_floorf+2
  6191  003838  C040  F036         	movff	floorf@u+1,??_floorf+3
  6192  00383C  C041  F037         	movff	floorf@u+2,??_floorf+4
  6193  003840  C042  F038         	movff	floorf@u+3,??_floorf+5
  6194  003844  0E18               	movlw	24
  6195  003846  EF2A  F01C         	goto	u9880
  6196  00384A                     u9885:
  6197  00384A  90D8               	bcf	status,0,c
  6198  00384C  3238               	rrcf	(??_floorf+5)^0,f,c
  6199  00384E  3237               	rrcf	(??_floorf+4)^0,f,c
  6200  003850  3236               	rrcf	(??_floorf+3)^0,f,c
  6201  003852  3235               	rrcf	(??_floorf+2)^0,f,c
  6202  003854                     u9880:
  6203  003854  2EE8               	decfsz	wreg,f,c
  6204  003856  EF25  F01C         	goto	u9885
  6205  00385A  5035               	movf	(??_floorf+2)^0,w,c
  6206  00385C  2433               	addwf	??_floorf^0,w,c
  6207  00385E  6E3D               	movwf	floorf@e^0,c
  6208  003860  0E00               	movlw	0
  6209  003862  2034               	addwfc	(??_floorf+1)^0,w,c
  6210  003864  6E3E               	movwf	(floorf@e+1)^0,c
  6211  003866  BE3E               	btfsc	(floorf@e+1)^0,7,c
  6212  003868  EF3F  F01C         	goto	u9891
  6213  00386C  503E               	movf	(floorf@e+1)^0,w,c
  6214  00386E  E109               	bnz	u9890
  6215  003870  0E17               	movlw	23
  6216  003872  5C3D               	subwf	floorf@e^0,w,c
  6217  003874  A0D8               	btfss	status,0,c
  6218  003876  EF3F  F01C         	goto	u9891
  6219  00387A  EF41  F01C         	goto	u9890
  6220  00387E                     u9891:
  6221  00387E  EF4B  F01C         	goto	l7653
  6222  003882                     u9890:
  6223  003882                     l7651:
  6224  003882  C02F  F02F         	movff	floorf@x,?_floorf
  6225  003886  C030  F030         	movff	floorf@x+1,?_floorf+1
  6226  00388A  C031  F031         	movff	floorf@x+2,?_floorf+2
  6227  00388E  C032  F032         	movff	floorf@x+3,?_floorf+3
  6228  003892  EF0E  F01D         	goto	l1745
  6229  003896                     l7653:
  6230  003896  BE3E               	btfsc	(floorf@e+1)^0,7,c
  6231  003898  EF50  F01C         	goto	u9901
  6232  00389C  EF52  F01C         	goto	u9900
  6233  0038A0                     u9901:
  6234  0038A0  EFC2  F01C         	goto	l7663
  6235  0038A4                     u9900:
  6236  0038A4  C03D  F033         	movff	floorf@e,??_floorf
  6237  0038A8  0EFF               	movlw	255
  6238  0038AA  6E34               	movwf	(??_floorf+1)^0,c
  6239  0038AC  0EFF               	movlw	255
  6240  0038AE  6E35               	movwf	(??_floorf+2)^0,c
  6241  0038B0  0E7F               	movlw	127
  6242  0038B2  6E36               	movwf	(??_floorf+3)^0,c
  6243  0038B4  0E00               	movlw	0
  6244  0038B6  6E37               	movwf	(??_floorf+4)^0,c
  6245  0038B8                     u9915:
  6246  0038B8  6633               	tstfsz	??_floorf^0,c
  6247  0038BA  EF61  F01C         	goto	u9916
  6248  0038BE  EF69  F01C         	goto	u9917
  6249  0038C2                     u9916:
  6250  0038C2  3437               	rlcf	(??_floorf+4)^0,w,c
  6251  0038C4  3237               	rrcf	(??_floorf+4)^0,f,c
  6252  0038C6  3236               	rrcf	(??_floorf+3)^0,f,c
  6253  0038C8  3235               	rrcf	(??_floorf+2)^0,f,c
  6254  0038CA  3234               	rrcf	(??_floorf+1)^0,f,c
  6255  0038CC  2E33               	decfsz	??_floorf^0,f,c
  6256  0038CE  EF5C  F01C         	goto	u9915
  6257  0038D2                     u9917:
  6258  0038D2  C034  F039         	movff	??_floorf+1,floorf@m
  6259  0038D6  C035  F03A         	movff	??_floorf+2,floorf@m+1
  6260  0038DA  C036  F03B         	movff	??_floorf+3,floorf@m+2
  6261  0038DE  C037  F03C         	movff	??_floorf+4,floorf@m+3
  6262  0038E2  5039               	movf	floorf@m^0,w,c
  6263  0038E4  143F               	andwf	floorf@u^0,w,c
  6264  0038E6  6E33               	movwf	??_floorf^0,c
  6265  0038E8  503A               	movf	(floorf@m+1)^0,w,c
  6266  0038EA  1440               	andwf	(floorf@u+1)^0,w,c
  6267  0038EC  6E34               	movwf	(??_floorf+1)^0,c
  6268  0038EE  503B               	movf	(floorf@m+2)^0,w,c
  6269  0038F0  1441               	andwf	(floorf@u+2)^0,w,c
  6270  0038F2  6E35               	movwf	(??_floorf+2)^0,c
  6271  0038F4  503C               	movf	(floorf@m+3)^0,w,c
  6272  0038F6  1442               	andwf	(floorf@u+3)^0,w,c
  6273  0038F8  6E36               	movwf	(??_floorf+3)^0,c
  6274  0038FA  5033               	movf	??_floorf^0,w,c
  6275  0038FC  1034               	iorwf	(??_floorf+1)^0,w,c
  6276  0038FE  1035               	iorwf	(??_floorf+2)^0,w,c
  6277  003900  1036               	iorwf	(??_floorf+3)^0,w,c
  6278  003902  A4D8               	btfss	status,2,c
  6279  003904  EF86  F01C         	goto	u9921
  6280  003908  EF88  F01C         	goto	u9920
  6281  00390C                     u9921:
  6282  00390C  EF8A  F01C         	goto	l7659
  6283  003910                     u9920:
  6284  003910  EF41  F01C         	goto	l7651
  6285  003914                     l7659:
  6286  003914  C03F  F033         	movff	floorf@u,??_floorf
  6287  003918  C040  F034         	movff	floorf@u+1,??_floorf+1
  6288  00391C  C041  F035         	movff	floorf@u+2,??_floorf+2
  6289  003920  C042  F036         	movff	floorf@u+3,??_floorf+3
  6290  003924  0E20               	movlw	32
  6291  003926  EF9A  F01C         	goto	u9930
  6292  00392A                     u9935:
  6293  00392A  90D8               	bcf	status,0,c
  6294  00392C  3236               	rrcf	(??_floorf+3)^0,f,c
  6295  00392E  3235               	rrcf	(??_floorf+2)^0,f,c
  6296  003930  3234               	rrcf	(??_floorf+1)^0,f,c
  6297  003932  3233               	rrcf	??_floorf^0,f,c
  6298  003934                     u9930:
  6299  003934  2EE8               	decfsz	wreg,f,c
  6300  003936  EF95  F01C         	goto	u9935
  6301  00393A  5033               	movf	??_floorf^0,w,c
  6302  00393C  1034               	iorwf	(??_floorf+1)^0,w,c
  6303  00393E  1035               	iorwf	(??_floorf+2)^0,w,c
  6304  003940  1036               	iorwf	(??_floorf+3)^0,w,c
  6305  003942  B4D8               	btfsc	status,2,c
  6306  003944  EFA6  F01C         	goto	u9941
  6307  003948  EFA8  F01C         	goto	u9940
  6308  00394C                     u9941:
  6309  00394C  EFB0  F01C         	goto	l1748
  6310  003950                     u9940:
  6311  003950  5039               	movf	floorf@m^0,w,c
  6312  003952  263F               	addwf	floorf@u^0,f,c
  6313  003954  503A               	movf	(floorf@m+1)^0,w,c
  6314  003956  2240               	addwfc	(floorf@u+1)^0,f,c
  6315  003958  503B               	movf	(floorf@m+2)^0,w,c
  6316  00395A  2241               	addwfc	(floorf@u+2)^0,f,c
  6317  00395C  503C               	movf	(floorf@m+3)^0,w,c
  6318  00395E  2242               	addwfc	(floorf@u+3)^0,f,c
  6319  003960                     l1748:
  6320  003960  1C39               	comf	floorf@m^0,w,c
  6321  003962  6E33               	movwf	??_floorf^0,c
  6322  003964  1C3A               	comf	(floorf@m+1)^0,w,c
  6323  003966  6E34               	movwf	(??_floorf+1)^0,c
  6324  003968  1C3B               	comf	(floorf@m+2)^0,w,c
  6325  00396A  6E35               	movwf	(??_floorf+2)^0,c
  6326  00396C  1C3C               	comf	(floorf@m+3)^0,w,c
  6327  00396E  6E36               	movwf	(??_floorf+3)^0,c
  6328  003970  5033               	movf	??_floorf^0,w,c
  6329  003972  163F               	andwf	floorf@u^0,f,c
  6330  003974  5034               	movf	(??_floorf+1)^0,w,c
  6331  003976  1640               	andwf	(floorf@u+1)^0,f,c
  6332  003978  5035               	movf	(??_floorf+2)^0,w,c
  6333  00397A  1641               	andwf	(floorf@u+2)^0,f,c
  6334  00397C  5036               	movf	(??_floorf+3)^0,w,c
  6335  00397E  1642               	andwf	(floorf@u+3)^0,f,c
  6336  003980  EF06  F01D         	goto	l7671
  6337  003984                     l7663:
  6338  003984  C03F  F033         	movff	floorf@u,??_floorf
  6339  003988  C040  F034         	movff	floorf@u+1,??_floorf+1
  6340  00398C  C041  F035         	movff	floorf@u+2,??_floorf+2
  6341  003990  C042  F036         	movff	floorf@u+3,??_floorf+3
  6342  003994  0E20               	movlw	32
  6343  003996  EFD2  F01C         	goto	u9950
  6344  00399A                     u9955:
  6345  00399A  90D8               	bcf	status,0,c
  6346  00399C  3236               	rrcf	(??_floorf+3)^0,f,c
  6347  00399E  3235               	rrcf	(??_floorf+2)^0,f,c
  6348  0039A0  3234               	rrcf	(??_floorf+1)^0,f,c
  6349  0039A2  3233               	rrcf	??_floorf^0,f,c
  6350  0039A4                     u9950:
  6351  0039A4  2EE8               	decfsz	wreg,f,c
  6352  0039A6  EFCD  F01C         	goto	u9955
  6353  0039AA  5033               	movf	??_floorf^0,w,c
  6354  0039AC  1034               	iorwf	(??_floorf+1)^0,w,c
  6355  0039AE  1035               	iorwf	(??_floorf+2)^0,w,c
  6356  0039B0  1036               	iorwf	(??_floorf+3)^0,w,c
  6357  0039B2  A4D8               	btfss	status,2,c
  6358  0039B4  EFDE  F01C         	goto	u9961
  6359  0039B8  EFE0  F01C         	goto	u9960
  6360  0039BC                     u9961:
  6361  0039BC  EFEA  F01C         	goto	l7667
  6362  0039C0                     u9960:
  6363  0039C0  0E00               	movlw	0
  6364  0039C2  6E3F               	movwf	floorf@u^0,c
  6365  0039C4  0E00               	movlw	0
  6366  0039C6  6E40               	movwf	(floorf@u+1)^0,c
  6367  0039C8  0E00               	movlw	0
  6368  0039CA  6E41               	movwf	(floorf@u+2)^0,c
  6369  0039CC  0E00               	movlw	0
  6370  0039CE  6E42               	movwf	(floorf@u+3)^0,c
  6371  0039D0  EF06  F01D         	goto	l7671
  6372  0039D4                     l7667:
  6373  0039D4  90D8               	bcf	status,0,c
  6374  0039D6  343F               	rlcf	floorf@u^0,w,c
  6375  0039D8  6E33               	movwf	??_floorf^0,c
  6376  0039DA  3440               	rlcf	(floorf@u+1)^0,w,c
  6377  0039DC  6E34               	movwf	(??_floorf+1)^0,c
  6378  0039DE  3441               	rlcf	(floorf@u+2)^0,w,c
  6379  0039E0  6E35               	movwf	(??_floorf+2)^0,c
  6380  0039E2  3442               	rlcf	(floorf@u+3)^0,w,c
  6381  0039E4  6E36               	movwf	(??_floorf+3)^0,c
  6382  0039E6  5033               	movf	??_floorf^0,w,c
  6383  0039E8  1034               	iorwf	(??_floorf+1)^0,w,c
  6384  0039EA  1035               	iorwf	(??_floorf+2)^0,w,c
  6385  0039EC  1036               	iorwf	(??_floorf+3)^0,w,c
  6386  0039EE  B4D8               	btfsc	status,2,c
  6387  0039F0  EFFC  F01C         	goto	u9971
  6388  0039F4  EFFE  F01C         	goto	u9970
  6389  0039F8                     u9971:
  6390  0039F8  EF06  F01D         	goto	l7671
  6391  0039FC                     u9970:
  6392  0039FC  0E00               	movlw	0
  6393  0039FE  6E3F               	movwf	floorf@u^0,c
  6394  003A00  0E00               	movlw	0
  6395  003A02  6E40               	movwf	(floorf@u+1)^0,c
  6396  003A04  0E80               	movlw	128
  6397  003A06  6E41               	movwf	(floorf@u+2)^0,c
  6398  003A08  0EBF               	movlw	191
  6399  003A0A  6E42               	movwf	(floorf@u+3)^0,c
  6400  003A0C                     l7671:
  6401  003A0C  C03F  F02F         	movff	floorf@u,?_floorf
  6402  003A10  C040  F030         	movff	floorf@u+1,?_floorf+1
  6403  003A14  C041  F031         	movff	floorf@u+2,?_floorf+2
  6404  003A18  C042  F032         	movff	floorf@u+3,?_floorf+3
  6405  003A1C                     l1745:
  6406  003A1C  0012               	return		;funcret
  6407  003A1E                     __end_of_floorf:
  6408                           	callstack 0
  6409                           
  6410 ;; *************** function ___fpclassifyf *****************
  6411 ;; Defined at:
  6412 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  x               4    7[COMRAM] float 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  u               4   17[COMRAM] struct .
  6417 ;;  e               2   15[COMRAM] int 
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  2    7[COMRAM] int 
  6420 ;; Registers used:
  6421 ;;		wreg, status,2, status,0
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6428 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6430 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6431 ;;Total ram usage:       14 bytes
  6432 ;; Hardware stack levels used: 1
  6433 ;; Hardware stack levels required when called: 7
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_efgtoa
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text20
  6442  004F56                     __ptext20:
  6443                           	callstack 0
  6444  004F56                     ___fpclassifyf:
  6445                           	callstack 17
  6446  004F56  C118  F012         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6447  004F5A  C119  F013         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6448  004F5E  C11A  F014         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6449  004F62  C11B  F015         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6450  004F66  C008  F012         	movff	___fpclassifyf@x,___fpclassifyf@u
  6451  004F6A  C009  F013         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6452  004F6E  C00A  F014         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6453  004F72  C00B  F015         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6454  004F76  C012  F00C         	movff	___fpclassifyf@u,??___fpclassifyf
  6455  004F7A  C013  F00D         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6456  004F7E  C014  F00E         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6457  004F82  C015  F00F         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6458  004F86  0E18               	movlw	24
  6459  004F88  EFCB  F027         	goto	u9760
  6460  004F8C                     u9765:
  6461  004F8C  90D8               	bcf	status,0,c
  6462  004F8E  320F               	rrcf	(??___fpclassifyf+3)^0,f,c
  6463  004F90  320E               	rrcf	(??___fpclassifyf+2)^0,f,c
  6464  004F92  320D               	rrcf	(??___fpclassifyf+1)^0,f,c
  6465  004F94  320C               	rrcf	??___fpclassifyf^0,f,c
  6466  004F96                     u9760:
  6467  004F96  2EE8               	decfsz	wreg,f,c
  6468  004F98  EFC6  F027         	goto	u9765
  6469  004F9C  500C               	movf	??___fpclassifyf^0,w,c
  6470  004F9E  6E10               	movwf	___fpclassifyf@e^0,c
  6471  004FA0  6A11               	clrf	(___fpclassifyf@e+1)^0,c
  6472  004FA2  5010               	movf	___fpclassifyf@e^0,w,c
  6473  004FA4  1011               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6474  004FA6  A4D8               	btfss	status,2,c
  6475  004FA8  EFD8  F027         	goto	u9771
  6476  004FAC  EFDA  F027         	goto	u9770
  6477  004FB0                     u9771:
  6478  004FB0  EFFA  F027         	goto	l7623
  6479  004FB4                     u9770:
  6480  004FB4  90D8               	bcf	status,0,c
  6481  004FB6  3412               	rlcf	___fpclassifyf@u^0,w,c
  6482  004FB8  6E0C               	movwf	??___fpclassifyf^0,c
  6483  004FBA  3413               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6484  004FBC  6E0D               	movwf	(??___fpclassifyf+1)^0,c
  6485  004FBE  3414               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6486  004FC0  6E0E               	movwf	(??___fpclassifyf+2)^0,c
  6487  004FC2  3415               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6488  004FC4  6E0F               	movwf	(??___fpclassifyf+3)^0,c
  6489  004FC6  500C               	movf	??___fpclassifyf^0,w,c
  6490  004FC8  100D               	iorwf	(??___fpclassifyf+1)^0,w,c
  6491  004FCA  100E               	iorwf	(??___fpclassifyf+2)^0,w,c
  6492  004FCC  100F               	iorwf	(??___fpclassifyf+3)^0,w,c
  6493  004FCE  A4D8               	btfss	status,2,c
  6494  004FD0  EFEC  F027         	goto	u9781
  6495  004FD4  EFEE  F027         	goto	u9780
  6496  004FD8                     u9781:
  6497  004FD8  EFF4  F027         	goto	l7619
  6498  004FDC                     u9780:
  6499  004FDC  0E00               	movlw	0
  6500  004FDE  6E09               	movwf	(?___fpclassifyf+1)^0,c
  6501  004FE0  0E02               	movlw	2
  6502  004FE2  6E08               	movwf	?___fpclassifyf^0,c
  6503  004FE4  EF29  F028         	goto	l1700
  6504  004FE8                     l7619:
  6505  004FE8  0E00               	movlw	0
  6506  004FEA  6E09               	movwf	(?___fpclassifyf+1)^0,c
  6507  004FEC  0E03               	movlw	3
  6508  004FEE  6E08               	movwf	?___fpclassifyf^0,c
  6509  004FF0  EF29  F028         	goto	l1700
  6510  004FF4                     l7623:
  6511  004FF4  2810               	incf	___fpclassifyf@e^0,w,c
  6512  004FF6  1011               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6513  004FF8  A4D8               	btfss	status,2,c
  6514  004FFA  EF01  F028         	goto	u9791
  6515  004FFE  EF03  F028         	goto	u9790
  6516  005002                     u9791:
  6517  005002  EF25  F028         	goto	l7629
  6518  005006                     u9790:
  6519  005006  C012  F00C         	movff	___fpclassifyf@u,??___fpclassifyf
  6520  00500A  C013  F00D         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6521  00500E  C014  F00E         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6522  005012  C015  F00F         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6523  005016  0E09               	movlw	9
  6524  005018                     u9805:
  6525  005018  90D8               	bcf	status,0,c
  6526  00501A  360C               	rlcf	??___fpclassifyf^0,f,c
  6527  00501C  360D               	rlcf	(??___fpclassifyf+1)^0,f,c
  6528  00501E  360E               	rlcf	(??___fpclassifyf+2)^0,f,c
  6529  005020  360F               	rlcf	(??___fpclassifyf+3)^0,f,c
  6530  005022  2EE8               	decfsz	wreg,f,c
  6531  005024  EF0C  F028         	goto	u9805
  6532  005028  500C               	movf	??___fpclassifyf^0,w,c
  6533  00502A  100D               	iorwf	(??___fpclassifyf+1)^0,w,c
  6534  00502C  100E               	iorwf	(??___fpclassifyf+2)^0,w,c
  6535  00502E  100F               	iorwf	(??___fpclassifyf+3)^0,w,c
  6536  005030  B4D8               	btfsc	status,2,c
  6537  005032  EF1D  F028         	goto	u9811
  6538  005036  EF20  F028         	goto	u9810
  6539  00503A                     u9811:
  6540  00503A  0E01               	movlw	1
  6541  00503C  EF21  F028         	goto	u9820
  6542  005040                     u9810:
  6543  005040  0E00               	movlw	0
  6544  005042                     u9820:
  6545  005042  6E08               	movwf	?___fpclassifyf^0,c
  6546  005044  6A09               	clrf	(?___fpclassifyf+1)^0,c
  6547  005046  EF29  F028         	goto	l1700
  6548  00504A                     l7629:
  6549  00504A  0E00               	movlw	0
  6550  00504C  6E09               	movwf	(?___fpclassifyf+1)^0,c
  6551  00504E  0E04               	movlw	4
  6552  005050  6E08               	movwf	?___fpclassifyf^0,c
  6553  005052                     l1700:
  6554  005052  0012               	return		;funcret
  6555  005054                     __end_of___fpclassifyf:
  6556                           	callstack 0
  6557                           
  6558 ;; *************** function ___fltol *****************
  6559 ;; Defined at:
  6560 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  f1              4    7[COMRAM] int 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  exp1            1   16[COMRAM] unsigned char 
  6565 ;;  sign1           1   15[COMRAM] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  4    7[COMRAM] long 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;Total ram usage:       10 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 7
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_efgtoa
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text21
  6590  004D4C                     __ptext21:
  6591                           	callstack 0
  6592  004D4C                     ___fltol:
  6593                           	callstack 17
  6594  004D4C  340A               	rlcf	(___fltol@f1+2)^0,w,c
  6595  004D4E  340B               	rlcf	(___fltol@f1+3)^0,w,c
  6596  004D50  6E11               	movwf	___fltol@exp1^0,c
  6597  004D52  5011               	movf	___fltol@exp1^0,w,c
  6598  004D54  A4D8               	btfss	status,2,c
  6599  004D56  EFAF  F026         	goto	u9641
  6600  004D5A  EFB1  F026         	goto	u9640
  6601  004D5E                     u9641:
  6602  004D5E  EFBB  F026         	goto	l7547
  6603  004D62                     u9640:
  6604  004D62                     l7543:
  6605  004D62  0E00               	movlw	0
  6606  004D64  6E08               	movwf	?___fltol^0,c
  6607  004D66  0E00               	movlw	0
  6608  004D68  6E09               	movwf	(?___fltol+1)^0,c
  6609  004D6A  0E00               	movlw	0
  6610  004D6C  6E0A               	movwf	(?___fltol+2)^0,c
  6611  004D6E  0E00               	movlw	0
  6612  004D70  6E0B               	movwf	(?___fltol+3)^0,c
  6613  004D72  EF28  F027         	goto	l1084
  6614  004D76                     l7547:
  6615  004D76  C008  F00C         	movff	___fltol@f1,??___fltol
  6616  004D7A  C009  F00D         	movff	___fltol@f1+1,??___fltol+1
  6617  004D7E  C00A  F00E         	movff	___fltol@f1+2,??___fltol+2
  6618  004D82  C00B  F00F         	movff	___fltol@f1+3,??___fltol+3
  6619  004D86  0E20               	movlw	32
  6620  004D88  EFCB  F026         	goto	u9650
  6621  004D8C                     u9655:
  6622  004D8C  90D8               	bcf	status,0,c
  6623  004D8E  320F               	rrcf	(??___fltol+3)^0,f,c
  6624  004D90  320E               	rrcf	(??___fltol+2)^0,f,c
  6625  004D92  320D               	rrcf	(??___fltol+1)^0,f,c
  6626  004D94  320C               	rrcf	??___fltol^0,f,c
  6627  004D96                     u9650:
  6628  004D96  2EE8               	decfsz	wreg,f,c
  6629  004D98  EFC6  F026         	goto	u9655
  6630  004D9C  500C               	movf	??___fltol^0,w,c
  6631  004D9E  6E10               	movwf	___fltol@sign1^0,c
  6632  004DA0  8E0A               	bsf	(___fltol@f1+2)^0,7,c
  6633  004DA2  0EFF               	movlw	255
  6634  004DA4  1608               	andwf	___fltol@f1^0,f,c
  6635  004DA6  0EFF               	movlw	255
  6636  004DA8  1609               	andwf	(___fltol@f1+1)^0,f,c
  6637  004DAA  0EFF               	movlw	255
  6638  004DAC  160A               	andwf	(___fltol@f1+2)^0,f,c
  6639  004DAE  0E00               	movlw	0
  6640  004DB0  160B               	andwf	(___fltol@f1+3)^0,f,c
  6641  004DB2  0E96               	movlw	150
  6642  004DB4  5E11               	subwf	___fltol@exp1^0,f,c
  6643  004DB6  BE11               	btfsc	___fltol@exp1^0,7,c
  6644  004DB8  EFE2  F026         	goto	u9660
  6645  004DBC  EFE0  F026         	goto	u9661
  6646  004DC0                     u9661:
  6647  004DC0  EFF8  F026         	goto	l7567
  6648  004DC4                     u9660:
  6649  004DC4  5011               	movf	___fltol@exp1^0,w,c
  6650  004DC6  0A80               	xorlw	128
  6651  004DC8  0F97               	addlw	151
  6652  004DCA  B0D8               	btfsc	status,0,c
  6653  004DCC  EFEA  F026         	goto	u9671
  6654  004DD0  EFEC  F026         	goto	u9670
  6655  004DD4                     u9671:
  6656  004DD4  EFEE  F026         	goto	l7563
  6657  004DD8                     u9670:
  6658  004DD8  EFB1  F026         	goto	l7543
  6659  004DDC                     l7563:
  6660  004DDC  90D8               	bcf	status,0,c
  6661  004DDE  320B               	rrcf	(___fltol@f1+3)^0,f,c
  6662  004DE0  320A               	rrcf	(___fltol@f1+2)^0,f,c
  6663  004DE2  3209               	rrcf	(___fltol@f1+1)^0,f,c
  6664  004DE4  3208               	rrcf	___fltol@f1^0,f,c
  6665  004DE6  3E11               	incfsz	___fltol@exp1^0,f,c
  6666  004DE8  EFEE  F026         	goto	l7563
  6667  004DEC  EF10  F027         	goto	l7577
  6668  004DF0                     l7567:
  6669  004DF0  0E1F               	movlw	31
  6670  004DF2  6411               	cpfsgt	___fltol@exp1^0,c
  6671  004DF4  EFFE  F026         	goto	u9681
  6672  004DF8  EF00  F027         	goto	u9680
  6673  004DFC                     u9681:
  6674  004DFC  EF08  F027         	goto	l7575
  6675  004E00                     u9680:
  6676  004E00  EFB1  F026         	goto	l7543
  6677  004E04                     l7573:
  6678  004E04  90D8               	bcf	status,0,c
  6679  004E06  3608               	rlcf	___fltol@f1^0,f,c
  6680  004E08  3609               	rlcf	(___fltol@f1+1)^0,f,c
  6681  004E0A  360A               	rlcf	(___fltol@f1+2)^0,f,c
  6682  004E0C  360B               	rlcf	(___fltol@f1+3)^0,f,c
  6683  004E0E  0611               	decf	___fltol@exp1^0,f,c
  6684  004E10                     l7575:
  6685  004E10  5011               	movf	___fltol@exp1^0,w,c
  6686  004E12  A4D8               	btfss	status,2,c
  6687  004E14  EF0E  F027         	goto	u9691
  6688  004E18  EF10  F027         	goto	u9690
  6689  004E1C                     u9691:
  6690  004E1C  EF02  F027         	goto	l7573
  6691  004E20                     u9690:
  6692  004E20                     l7577:
  6693  004E20  5010               	movf	___fltol@sign1^0,w,c
  6694  004E22  B4D8               	btfsc	status,2,c
  6695  004E24  EF16  F027         	goto	u9701
  6696  004E28  EF18  F027         	goto	u9700
  6697  004E2C                     u9701:
  6698  004E2C  EF20  F027         	goto	l7581
  6699  004E30                     u9700:
  6700  004E30  1E0B               	comf	(___fltol@f1+3)^0,f,c
  6701  004E32  1E0A               	comf	(___fltol@f1+2)^0,f,c
  6702  004E34  1E09               	comf	(___fltol@f1+1)^0,f,c
  6703  004E36  6C08               	negf	___fltol@f1^0,c
  6704  004E38  0E00               	movlw	0
  6705  004E3A  2209               	addwfc	(___fltol@f1+1)^0,f,c
  6706  004E3C  220A               	addwfc	(___fltol@f1+2)^0,f,c
  6707  004E3E  220B               	addwfc	(___fltol@f1+3)^0,f,c
  6708  004E40                     l7581:
  6709  004E40  C008  F008         	movff	___fltol@f1,?___fltol
  6710  004E44  C009  F009         	movff	___fltol@f1+1,?___fltol+1
  6711  004E48  C00A  F00A         	movff	___fltol@f1+2,?___fltol+2
  6712  004E4C  C00B  F00B         	movff	___fltol@f1+3,?___fltol+3
  6713  004E50                     l1084:
  6714  004E50  0012               	return		;funcret
  6715  004E52                     __end_of___fltol:
  6716                           	callstack 0
  6717                           
  6718 ;; *************** function ___flsub *****************
  6719 ;; Defined at:
  6720 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  b               4   62[COMRAM] long 
  6723 ;;  a               4   66[COMRAM] long 
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;		None
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  4   62[COMRAM] long 
  6728 ;; Registers used:
  6729 ;;		wreg, status,2, status,0, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6735 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;Total ram usage:        8 bytes
  6740 ;; Hardware stack levels used: 1
  6741 ;; Hardware stack levels required when called: 8
  6742 ;; This function calls:
  6743 ;;		___fladd
  6744 ;; This function is called by:
  6745 ;;		_efgtoa
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	text22
  6750  005D84                     __ptext22:
  6751                           	callstack 0
  6752  005D84                     ___flsub:
  6753                           	callstack 16
  6754  005D84  0E00               	movlw	0
  6755  005D86  1A43               	xorwf	___flsub@a^0,f,c
  6756  005D88  0E00               	movlw	0
  6757  005D8A  1A44               	xorwf	(___flsub@a+1)^0,f,c
  6758  005D8C  0E00               	movlw	0
  6759  005D8E  1A45               	xorwf	(___flsub@a+2)^0,f,c
  6760  005D90  0E80               	movlw	128
  6761  005D92  1A46               	xorwf	(___flsub@a+3)^0,f,c
  6762  005D94  C03F  F02F         	movff	___flsub@b,___fladd@b
  6763  005D98  C040  F030         	movff	___flsub@b+1,___fladd@b+1
  6764  005D9C  C041  F031         	movff	___flsub@b+2,___fladd@b+2
  6765  005DA0  C042  F032         	movff	___flsub@b+3,___fladd@b+3
  6766  005DA4  C043  F033         	movff	___flsub@a,___fladd@a
  6767  005DA8  C044  F034         	movff	___flsub@a+1,___fladd@a+1
  6768  005DAC  C045  F035         	movff	___flsub@a+2,___fladd@a+2
  6769  005DB0  C046  F036         	movff	___flsub@a+3,___fladd@a+3
  6770  005DB4  EC54  F014         	call	___fladd	;wreg free
  6771  005DB8  C02F  F03F         	movff	?___fladd,?___flsub
  6772  005DBC  C030  F040         	movff	?___fladd+1,?___flsub+1
  6773  005DC0  C031  F041         	movff	?___fladd+2,?___flsub+2
  6774  005DC4  C032  F042         	movff	?___fladd+3,?___flsub+3
  6775  005DC8  0012               	return		;funcret
  6776  005DCA                     __end_of___flsub:
  6777                           	callstack 0
  6778                           
  6779 ;; *************** function ___flneg *****************
  6780 ;; Defined at:
  6781 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  f1              4    7[COMRAM] long 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;		None
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  4    7[COMRAM] long 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;Total ram usage:        4 bytes
  6800 ;; Hardware stack levels used: 1
  6801 ;; Hardware stack levels required when called: 7
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_efgtoa
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text23
  6810  005F44                     __ptext23:
  6811                           	callstack 0
  6812  005F44                     ___flneg:
  6813                           	callstack 17
  6814  005F44  5008               	movf	___flneg@f1^0,w,c
  6815  005F46  1009               	iorwf	(___flneg@f1+1)^0,w,c
  6816  005F48  100A               	iorwf	(___flneg@f1+2)^0,w,c
  6817  005F4A  100B               	iorwf	(___flneg@f1+3)^0,w,c
  6818  005F4C  B4D8               	btfsc	status,2,c
  6819  005F4E  EFAB  F02F         	goto	u9631
  6820  005F52  EFAD  F02F         	goto	u9630
  6821  005F56                     u9631:
  6822  005F56  EFB5  F02F         	goto	l7537
  6823  005F5A                     u9630:
  6824  005F5A  0E00               	movlw	0
  6825  005F5C  1A08               	xorwf	___flneg@f1^0,f,c
  6826  005F5E  0E00               	movlw	0
  6827  005F60  1A09               	xorwf	(___flneg@f1+1)^0,f,c
  6828  005F62  0E00               	movlw	0
  6829  005F64  1A0A               	xorwf	(___flneg@f1+2)^0,f,c
  6830  005F66  0E80               	movlw	128
  6831  005F68  1A0B               	xorwf	(___flneg@f1+3)^0,f,c
  6832  005F6A                     l7537:
  6833  005F6A  C008  F008         	movff	___flneg@f1,?___flneg
  6834  005F6E  C009  F009         	movff	___flneg@f1+1,?___flneg+1
  6835  005F72  C00A  F00A         	movff	___flneg@f1+2,?___flneg+2
  6836  005F76  C00B  F00B         	movff	___flneg@f1+3,?___flneg+3
  6837  005F7A  0012               	return		;funcret
  6838  005F7C                     __end_of___flneg:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function ___fleq *****************
  6842 ;; Defined at:
  6843 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  ff1             4    7[COMRAM] long 
  6846 ;;  ff2             4   11[COMRAM] long 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;		None
  6849 ;; Return value:  Size  Location     Type
  6850 ;;		None               void
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6858 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;Total ram usage:       12 bytes
  6863 ;; Hardware stack levels used: 1
  6864 ;; Hardware stack levels required when called: 7
  6865 ;; This function calls:
  6866 ;;		Nothing
  6867 ;; This function is called by:
  6868 ;;		_efgtoa
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	text24
  6873  00550A                     __ptext24:
  6874                           	callstack 0
  6875  00550A                     ___fleq:
  6876                           	callstack 17
  6877  00550A  0E00               	movlw	0
  6878  00550C  1408               	andwf	___fleq@ff1^0,w,c
  6879  00550E  6E10               	movwf	??___fleq^0,c
  6880  005510  0E00               	movlw	0
  6881  005512  1409               	andwf	(___fleq@ff1+1)^0,w,c
  6882  005514  6E11               	movwf	(??___fleq+1)^0,c
  6883  005516  0E80               	movlw	128
  6884  005518  140A               	andwf	(___fleq@ff1+2)^0,w,c
  6885  00551A  6E12               	movwf	(??___fleq+2)^0,c
  6886  00551C  0E7F               	movlw	127
  6887  00551E  140B               	andwf	(___fleq@ff1+3)^0,w,c
  6888  005520  6E13               	movwf	(??___fleq+3)^0,c
  6889  005522  5010               	movf	??___fleq^0,w,c
  6890  005524  1011               	iorwf	(??___fleq+1)^0,w,c
  6891  005526  1012               	iorwf	(??___fleq+2)^0,w,c
  6892  005528  1013               	iorwf	(??___fleq+3)^0,w,c
  6893  00552A  A4D8               	btfss	status,2,c
  6894  00552C  EF9A  F02A         	goto	u9551
  6895  005530  EF9C  F02A         	goto	u9550
  6896  005534                     u9551:
  6897  005534  EFA4  F02A         	goto	l7499
  6898  005538                     u9550:
  6899  005538  0E00               	movlw	0
  6900  00553A  6E08               	movwf	___fleq@ff1^0,c
  6901  00553C  0E00               	movlw	0
  6902  00553E  6E09               	movwf	(___fleq@ff1+1)^0,c
  6903  005540  0E00               	movlw	0
  6904  005542  6E0A               	movwf	(___fleq@ff1+2)^0,c
  6905  005544  0E00               	movlw	0
  6906  005546  6E0B               	movwf	(___fleq@ff1+3)^0,c
  6907  005548                     l7499:
  6908  005548  0E00               	movlw	0
  6909  00554A  140C               	andwf	___fleq@ff2^0,w,c
  6910  00554C  6E10               	movwf	??___fleq^0,c
  6911  00554E  0E00               	movlw	0
  6912  005550  140D               	andwf	(___fleq@ff2+1)^0,w,c
  6913  005552  6E11               	movwf	(??___fleq+1)^0,c
  6914  005554  0E80               	movlw	128
  6915  005556  140E               	andwf	(___fleq@ff2+2)^0,w,c
  6916  005558  6E12               	movwf	(??___fleq+2)^0,c
  6917  00555A  0E7F               	movlw	127
  6918  00555C  140F               	andwf	(___fleq@ff2+3)^0,w,c
  6919  00555E  6E13               	movwf	(??___fleq+3)^0,c
  6920  005560  5010               	movf	??___fleq^0,w,c
  6921  005562  1011               	iorwf	(??___fleq+1)^0,w,c
  6922  005564  1012               	iorwf	(??___fleq+2)^0,w,c
  6923  005566  1013               	iorwf	(??___fleq+3)^0,w,c
  6924  005568  A4D8               	btfss	status,2,c
  6925  00556A  EFB9  F02A         	goto	u9561
  6926  00556E  EFBB  F02A         	goto	u9560
  6927  005572                     u9561:
  6928  005572  EFC3  F02A         	goto	l7503
  6929  005576                     u9560:
  6930  005576  0E00               	movlw	0
  6931  005578  6E0C               	movwf	___fleq@ff2^0,c
  6932  00557A  0E00               	movlw	0
  6933  00557C  6E0D               	movwf	(___fleq@ff2+1)^0,c
  6934  00557E  0E00               	movlw	0
  6935  005580  6E0E               	movwf	(___fleq@ff2+2)^0,c
  6936  005582  0E00               	movlw	0
  6937  005584  6E0F               	movwf	(___fleq@ff2+3)^0,c
  6938  005586                     l7503:
  6939  005586  500C               	movf	___fleq@ff2^0,w,c
  6940  005588  1808               	xorwf	___fleq@ff1^0,w,c
  6941  00558A  E10F               	bnz	u9570
  6942  00558C  500D               	movf	(___fleq@ff2+1)^0,w,c
  6943  00558E  1809               	xorwf	(___fleq@ff1+1)^0,w,c
  6944  005590  E10C               	bnz	u9570
  6945  005592  500E               	movf	(___fleq@ff2+2)^0,w,c
  6946  005594  180A               	xorwf	(___fleq@ff1+2)^0,w,c
  6947  005596  E109               	bnz	u9570
  6948  005598  500F               	movf	(___fleq@ff2+3)^0,w,c
  6949  00559A  180B               	xorwf	(___fleq@ff1+3)^0,w,c
  6950  00559C  B4D8               	btfsc	status,2,c
  6951  00559E  EFD3  F02A         	goto	u9571
  6952  0055A2  EFD5  F02A         	goto	u9570
  6953  0055A6                     u9571:
  6954  0055A6  EFD8  F02A         	goto	l7507
  6955  0055AA                     u9570:
  6956  0055AA  90D8               	bcf	status,0,c
  6957  0055AC  EFD9  F02A         	goto	l1046
  6958  0055B0                     l7507:
  6959  0055B0  80D8               	bsf	status,0,c
  6960  0055B2                     l1046:
  6961  0055B2  0012               	return		;funcret
  6962  0055B4                     __end_of___fleq:
  6963                           	callstack 0
  6964                           
  6965 ;; *************** function ___awmod *****************
  6966 ;; Defined at:
  6967 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  dividend        2    7[COMRAM] int 
  6970 ;;  divisor         2    9[COMRAM] int 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  sign            1   12[COMRAM] unsigned char 
  6973 ;;  counter         1   11[COMRAM] unsigned char 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  2    7[COMRAM] int 
  6976 ;; Registers used:
  6977 ;;		wreg, status,2, status,0
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6986 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6987 ;;Total ram usage:        6 bytes
  6988 ;; Hardware stack levels used: 1
  6989 ;; Hardware stack levels required when called: 7
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_efgtoa
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text25
  6998  00545A                     __ptext25:
  6999                           	callstack 0
  7000  00545A                     ___awmod:
  7001                           	callstack 17
  7002  00545A  0E00               	movlw	0
  7003  00545C  6E0D               	movwf	___awmod@sign^0,c
  7004  00545E  BE09               	btfsc	(___awmod@dividend+1)^0,7,c
  7005  005460  EF36  F02A         	goto	u9490
  7006  005464  EF34  F02A         	goto	u9491
  7007  005468                     u9491:
  7008  005468  EF3C  F02A         	goto	l7467
  7009  00546C                     u9490:
  7010  00546C  6C08               	negf	___awmod@dividend^0,c
  7011  00546E  1E09               	comf	(___awmod@dividend+1)^0,f,c
  7012  005470  B0D8               	btfsc	status,0,c
  7013  005472  2A09               	incf	(___awmod@dividend+1)^0,f,c
  7014  005474  0E01               	movlw	1
  7015  005476  6E0D               	movwf	___awmod@sign^0,c
  7016  005478                     l7467:
  7017  005478  BE0B               	btfsc	(___awmod@divisor+1)^0,7,c
  7018  00547A  EF43  F02A         	goto	u9500
  7019  00547E  EF41  F02A         	goto	u9501
  7020  005482                     u9501:
  7021  005482  EF47  F02A         	goto	l7471
  7022  005486                     u9500:
  7023  005486  6C0A               	negf	___awmod@divisor^0,c
  7024  005488  1E0B               	comf	(___awmod@divisor+1)^0,f,c
  7025  00548A  B0D8               	btfsc	status,0,c
  7026  00548C  2A0B               	incf	(___awmod@divisor+1)^0,f,c
  7027  00548E                     l7471:
  7028  00548E  500A               	movf	___awmod@divisor^0,w,c
  7029  005490  100B               	iorwf	(___awmod@divisor+1)^0,w,c
  7030  005492  B4D8               	btfsc	status,2,c
  7031  005494  EF4E  F02A         	goto	u9511
  7032  005498  EF50  F02A         	goto	u9510
  7033  00549C                     u9511:
  7034  00549C  EF74  F02A         	goto	l7487
  7035  0054A0                     u9510:
  7036  0054A0  0E01               	movlw	1
  7037  0054A2  6E0C               	movwf	___awmod@counter^0,c
  7038  0054A4  EF58  F02A         	goto	l7477
  7039  0054A8                     l7475:
  7040  0054A8  90D8               	bcf	status,0,c
  7041  0054AA  360A               	rlcf	___awmod@divisor^0,f,c
  7042  0054AC  360B               	rlcf	(___awmod@divisor+1)^0,f,c
  7043  0054AE  2A0C               	incf	___awmod@counter^0,f,c
  7044  0054B0                     l7477:
  7045  0054B0  AE0B               	btfss	(___awmod@divisor+1)^0,7,c
  7046  0054B2  EF5D  F02A         	goto	u9521
  7047  0054B6  EF5F  F02A         	goto	u9520
  7048  0054BA                     u9521:
  7049  0054BA  EF54  F02A         	goto	l7475
  7050  0054BE                     u9520:
  7051  0054BE                     l7479:
  7052  0054BE  500A               	movf	___awmod@divisor^0,w,c
  7053  0054C0  5C08               	subwf	___awmod@dividend^0,w,c
  7054  0054C2  500B               	movf	(___awmod@divisor+1)^0,w,c
  7055  0054C4  5809               	subwfb	(___awmod@dividend+1)^0,w,c
  7056  0054C6  A0D8               	btfss	status,0,c
  7057  0054C8  EF68  F02A         	goto	u9531
  7058  0054CC  EF6A  F02A         	goto	u9530
  7059  0054D0                     u9531:
  7060  0054D0  EF6E  F02A         	goto	l7483
  7061  0054D4                     u9530:
  7062  0054D4  500A               	movf	___awmod@divisor^0,w,c
  7063  0054D6  5E08               	subwf	___awmod@dividend^0,f,c
  7064  0054D8  500B               	movf	(___awmod@divisor+1)^0,w,c
  7065  0054DA  5A09               	subwfb	(___awmod@dividend+1)^0,f,c
  7066  0054DC                     l7483:
  7067  0054DC  90D8               	bcf	status,0,c
  7068  0054DE  320B               	rrcf	(___awmod@divisor+1)^0,f,c
  7069  0054E0  320A               	rrcf	___awmod@divisor^0,f,c
  7070  0054E2  2E0C               	decfsz	___awmod@counter^0,f,c
  7071  0054E4  EF5F  F02A         	goto	l7479
  7072  0054E8                     l7487:
  7073  0054E8  500D               	movf	___awmod@sign^0,w,c
  7074  0054EA  B4D8               	btfsc	status,2,c
  7075  0054EC  EF7A  F02A         	goto	u9541
  7076  0054F0  EF7C  F02A         	goto	u9540
  7077  0054F4                     u9541:
  7078  0054F4  EF80  F02A         	goto	l7491
  7079  0054F8                     u9540:
  7080  0054F8  6C08               	negf	___awmod@dividend^0,c
  7081  0054FA  1E09               	comf	(___awmod@dividend+1)^0,f,c
  7082  0054FC  B0D8               	btfsc	status,0,c
  7083  0054FE  2A09               	incf	(___awmod@dividend+1)^0,f,c
  7084  005500                     l7491:
  7085  005500  C008  F008         	movff	___awmod@dividend,?___awmod
  7086  005504  C009  F009         	movff	___awmod@dividend+1,?___awmod+1
  7087  005508  0012               	return		;funcret
  7088  00550A                     __end_of___awmod:
  7089                           	callstack 0
  7090                           
  7091 ;; *************** function _dtoa *****************
  7092 ;; Defined at:
  7093 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  7096 ;;		 -> sprintf@f(6), 
  7097 ;;  d               8   36[COMRAM] long long 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  n               8   60[COMRAM] long long 
  7100 ;;  i               2   68[COMRAM] int 
  7101 ;;  s               2   58[COMRAM] int 
  7102 ;;  w               2   56[COMRAM] int 
  7103 ;;  p               2   54[COMRAM] int 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  2   34[COMRAM] int 
  7106 ;; Registers used:
  7107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7113 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7115 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7116 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7117 ;;Total ram usage:       36 bytes
  7118 ;; Hardware stack levels used: 1
  7119 ;; Hardware stack levels required when called: 11
  7120 ;; This function calls:
  7121 ;;		___aodiv
  7122 ;;		___aomod
  7123 ;;		_abs
  7124 ;;		_pad
  7125 ;; This function is called by:
  7126 ;;		_vfpfcnvrt
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text26
  7131  00352C                     __ptext26:
  7132                           	callstack 0
  7133  00352C                     _dtoa:
  7134                           	callstack 14
  7135  00352C                     
  7136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7137  00352C  C025  F03D         	movff	dtoa@d,dtoa@n
  7138  003530  C026  F03E         	movff	dtoa@d+1,dtoa@n+1
  7139  003534  C027  F03F         	movff	dtoa@d+2,dtoa@n+2
  7140  003538  C028  F040         	movff	dtoa@d+3,dtoa@n+3
  7141  00353C  C029  F041         	movff	dtoa@d+4,dtoa@n+4
  7142  003540  C02A  F042         	movff	dtoa@d+5,dtoa@n+5
  7143  003544  C02B  F043         	movff	dtoa@d+6,dtoa@n+6
  7144  003548  C02C  F044         	movff	dtoa@d+7,dtoa@n+7
  7145  00354C                     
  7146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7147  00354C  BE44               	btfsc	(dtoa@n+7)^0,7,c
  7148  00354E  EFAB  F01A         	goto	u10041
  7149  003552  EFAE  F01A         	goto	u10040
  7150  003556                     u10041:
  7151  003556  0E01               	movlw	1
  7152  003558  EFAF  F01A         	goto	u10050
  7153  00355C                     u10040:
  7154  00355C  0E00               	movlw	0
  7155  00355E                     u10050:
  7156  00355E  6E3B               	movwf	dtoa@s^0,c
  7157  003560  6A3C               	clrf	(dtoa@s+1)^0,c
  7158                           
  7159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7160  003562  503B               	movf	dtoa@s^0,w,c
  7161  003564  103C               	iorwf	(dtoa@s+1)^0,w,c
  7162  003566  B4D8               	btfsc	status,2,c
  7163  003568  EFB8  F01A         	goto	u10061
  7164  00356C  EFBA  F01A         	goto	u10060
  7165  003570                     u10061:
  7166  003570  EFCA  F01A         	goto	l7701
  7167  003574                     u10060:
  7168  003574                     
  7169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7170  003574  1E44               	comf	(dtoa@n+7)^0,f,c
  7171  003576  1E43               	comf	(dtoa@n+6)^0,f,c
  7172  003578  1E42               	comf	(dtoa@n+5)^0,f,c
  7173  00357A  1E41               	comf	(dtoa@n+4)^0,f,c
  7174  00357C  1E40               	comf	(dtoa@n+3)^0,f,c
  7175  00357E  1E3F               	comf	(dtoa@n+2)^0,f,c
  7176  003580  1E3E               	comf	(dtoa@n+1)^0,f,c
  7177  003582  6C3D               	negf	dtoa@n^0,c
  7178  003584  0E00               	movlw	0
  7179  003586  223E               	addwfc	(dtoa@n+1)^0,f,c
  7180  003588  223F               	addwfc	(dtoa@n+2)^0,f,c
  7181  00358A  2240               	addwfc	(dtoa@n+3)^0,f,c
  7182  00358C  2241               	addwfc	(dtoa@n+4)^0,f,c
  7183  00358E  2242               	addwfc	(dtoa@n+5)^0,f,c
  7184  003590  2243               	addwfc	(dtoa@n+6)^0,f,c
  7185  003592  2244               	addwfc	(dtoa@n+7)^0,f,c
  7186  003594                     l7701:
  7187                           
  7188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7189  003594  0100               	movlb	0	; () banked
  7190  003596  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  7191  003598  EFD0  F01A         	goto	u10071
  7192  00359C  EFD2  F01A         	goto	u10070
  7193  0035A0                     u10071:
  7194  0035A0  EFD3  F01A         	goto	l7705
  7195  0035A4                     u10070:
  7196  0035A4                     
  7197                           ; BSR set to: 0
  7198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7199  0035A4  9250               	bcf	_flags^0,1,c
  7200  0035A6                     l7705:
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7204  0035A6  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  7205  0035A8  EFE0  F01A         	goto	u10080
  7206  0035AC  51F0               	movf	(_prec+1)& (0+255),w,b
  7207  0035AE  E106               	bnz	u10081
  7208  0035B0  05EF               	decf	_prec& (0+255),w,b
  7209  0035B2  B0D8               	btfsc	status,0,c
  7210  0035B4  EFDE  F01A         	goto	u10081
  7211  0035B8  EFE0  F01A         	goto	u10080
  7212  0035BC                     u10081:
  7213  0035BC  EFE6  F01A         	goto	l1519
  7214  0035C0                     u10080:
  7215  0035C0                     
  7216                           ; BSR set to: 0
  7217  0035C0  0E00               	movlw	0
  7218  0035C2  6E38               	movwf	(dtoa@p+1)^0,c
  7219  0035C4  0E01               	movlw	1
  7220  0035C6  6E37               	movwf	dtoa@p^0,c
  7221  0035C8  EFEA  F01A         	goto	l1521
  7222  0035CC                     l1519:
  7223                           
  7224                           ; BSR set to: 0
  7225  0035CC  C0EF  F037         	movff	_prec,dtoa@p
  7226  0035D0  C0F0  F038         	movff	_prec+1,dtoa@p+1
  7227  0035D4                     l1521:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7231  0035D4  C11E  F039         	movff	_width,dtoa@w
  7232  0035D8  C11F  F03A         	movff	_width+1,dtoa@w+1
  7233  0035DC                     
  7234                           ; BSR set to: 0
  7235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7236  0035DC  503B               	movf	dtoa@s^0,w,c
  7237  0035DE  103C               	iorwf	(dtoa@s+1)^0,w,c
  7238  0035E0  A4D8               	btfss	status,2,c
  7239  0035E2  EFF5  F01A         	goto	u10091
  7240  0035E6  EFF7  F01A         	goto	u10090
  7241  0035EA                     u10091:
  7242  0035EA  EFFE  F01A         	goto	l7713
  7243  0035EE                     u10090:
  7244  0035EE                     
  7245                           ; BSR set to: 0
  7246  0035EE  A450               	btfss	_flags^0,2,c
  7247  0035F0  EFFC  F01A         	goto	u10101
  7248  0035F4  EFFE  F01A         	goto	u10100
  7249  0035F8                     u10101:
  7250  0035F8  EF01  F01B         	goto	l7715
  7251  0035FC                     u10100:
  7252  0035FC                     l7713:
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7256  0035FC  0639               	decf	dtoa@w^0,f,c
  7257  0035FE  A0D8               	btfss	status,0,c
  7258  003600  063A               	decf	(dtoa@w+1)^0,f,c
  7259  003602                     l7715:
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7263  003602  0E00               	movlw	0
  7264  003604  6E46               	movwf	(dtoa@i+1)^0,c
  7265  003606  0E4F               	movlw	79
  7266  003608  6E45               	movwf	dtoa@i^0,c
  7267  00360A                     
  7268                           ; BSR set to: 0
  7269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7270  00360A  0E00               	movlw	0
  7271  00360C  0101               	movlb	1	; () banked
  7272  00360E  6F74               	movwf	(_dbuf+79)& (0+255),b
  7273                           
  7274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7275  003610  EF86  F01B         	goto	l7729
  7276  003614                     l7719:
  7277                           
  7278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7279  003614  0645               	decf	dtoa@i^0,f,c
  7280  003616  A0D8               	btfss	status,0,c
  7281  003618  0646               	decf	(dtoa@i+1)^0,f,c
  7282  00361A                     
  7283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7284  00361A  0E25               	movlw	low _dbuf
  7285  00361C  2445               	addwf	dtoa@i^0,w,c
  7286  00361E  6ED9               	movwf	fsr2l,c
  7287  003620  0E01               	movlw	high _dbuf
  7288  003622  2046               	addwfc	(dtoa@i+1)^0,w,c
  7289  003624  6EDA               	movwf	fsr2h,c
  7290  003626  C03D  F008         	movff	dtoa@n,___aomod@dividend
  7291  00362A  C03E  F009         	movff	dtoa@n+1,___aomod@dividend+1
  7292  00362E  C03F  F00A         	movff	dtoa@n+2,___aomod@dividend+2
  7293  003632  C040  F00B         	movff	dtoa@n+3,___aomod@dividend+3
  7294  003636  C041  F00C         	movff	dtoa@n+4,___aomod@dividend+4
  7295  00363A  C042  F00D         	movff	dtoa@n+5,___aomod@dividend+5
  7296  00363E  C043  F00E         	movff	dtoa@n+6,___aomod@dividend+6
  7297  003642  C044  F00F         	movff	dtoa@n+7,___aomod@dividend+7
  7298  003646  0E0A               	movlw	10
  7299  003648  6E10               	movwf	___aomod@divisor^0,c
  7300  00364A  0E00               	movlw	0
  7301  00364C  6E11               	movwf	(___aomod@divisor+1)^0,c
  7302  00364E  0E00               	movlw	0
  7303  003650  6E12               	movwf	(___aomod@divisor+2)^0,c
  7304  003652  0E00               	movlw	0
  7305  003654  6E13               	movwf	(___aomod@divisor+3)^0,c
  7306  003656  0E00               	movlw	0
  7307  003658  6E14               	movwf	(___aomod@divisor+4)^0,c
  7308  00365A  0E00               	movlw	0
  7309  00365C  6E15               	movwf	(___aomod@divisor+5)^0,c
  7310  00365E  0E00               	movlw	0
  7311  003660  6E16               	movwf	(___aomod@divisor+6)^0,c
  7312  003662  0E00               	movlw	0
  7313  003664  6E17               	movwf	(___aomod@divisor+7)^0,c
  7314  003666  ECC7  F022         	call	___aomod	;wreg free
  7315  00366A  C008  F02D         	movff	?___aomod,??_dtoa
  7316  00366E  C009  F02E         	movff	?___aomod+1,??_dtoa+1
  7317  003672  C00A  F02F         	movff	?___aomod+2,??_dtoa+2
  7318  003676  C00B  F030         	movff	?___aomod+3,??_dtoa+3
  7319  00367A  C00C  F031         	movff	?___aomod+4,??_dtoa+4
  7320  00367E  C00D  F032         	movff	?___aomod+5,??_dtoa+5
  7321  003682  C00E  F033         	movff	?___aomod+6,??_dtoa+6
  7322  003686  C00F  F034         	movff	?___aomod+7,??_dtoa+7
  7323  00368A  C02D  F01A         	movff	??_dtoa,abs@a
  7324  00368E  C02F  F01B         	movff	??_dtoa+2,abs@a+1
  7325  003692  EC4A  F02F         	call	_abs	;wreg free
  7326  003696  501A               	movf	?_abs^0,w,c
  7327  003698  0F30               	addlw	48
  7328  00369A  6EDF               	movwf	indf2,c
  7329  00369C                     
  7330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7331  00369C  0637               	decf	dtoa@p^0,f,c
  7332  00369E  A0D8               	btfss	status,0,c
  7333  0036A0  0638               	decf	(dtoa@p+1)^0,f,c
  7334  0036A2                     
  7335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7336  0036A2  0639               	decf	dtoa@w^0,f,c
  7337  0036A4  A0D8               	btfss	status,0,c
  7338  0036A6  063A               	decf	(dtoa@w+1)^0,f,c
  7339  0036A8                     
  7340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7341  0036A8  C03D  F008         	movff	dtoa@n,___aodiv@dividend
  7342  0036AC  C03E  F009         	movff	dtoa@n+1,___aodiv@dividend+1
  7343  0036B0  C03F  F00A         	movff	dtoa@n+2,___aodiv@dividend+2
  7344  0036B4  C040  F00B         	movff	dtoa@n+3,___aodiv@dividend+3
  7345  0036B8  C041  F00C         	movff	dtoa@n+4,___aodiv@dividend+4
  7346  0036BC  C042  F00D         	movff	dtoa@n+5,___aodiv@dividend+5
  7347  0036C0  C043  F00E         	movff	dtoa@n+6,___aodiv@dividend+6
  7348  0036C4  C044  F00F         	movff	dtoa@n+7,___aodiv@dividend+7
  7349  0036C8  0E0A               	movlw	10
  7350  0036CA  6E10               	movwf	___aodiv@divisor^0,c
  7351  0036CC  0E00               	movlw	0
  7352  0036CE  6E11               	movwf	(___aodiv@divisor+1)^0,c
  7353  0036D0  0E00               	movlw	0
  7354  0036D2  6E12               	movwf	(___aodiv@divisor+2)^0,c
  7355  0036D4  0E00               	movlw	0
  7356  0036D6  6E13               	movwf	(___aodiv@divisor+3)^0,c
  7357  0036D8  0E00               	movlw	0
  7358  0036DA  6E14               	movwf	(___aodiv@divisor+4)^0,c
  7359  0036DC  0E00               	movlw	0
  7360  0036DE  6E15               	movwf	(___aodiv@divisor+5)^0,c
  7361  0036E0  0E00               	movlw	0
  7362  0036E2  6E16               	movwf	(___aodiv@divisor+6)^0,c
  7363  0036E4  0E00               	movlw	0
  7364  0036E6  6E17               	movwf	(___aodiv@divisor+7)^0,c
  7365  0036E8  EC48  F021         	call	___aodiv	;wreg free
  7366  0036EC  C008  F03D         	movff	?___aodiv,dtoa@n
  7367  0036F0  C009  F03E         	movff	?___aodiv+1,dtoa@n+1
  7368  0036F4  C00A  F03F         	movff	?___aodiv+2,dtoa@n+2
  7369  0036F8  C00B  F040         	movff	?___aodiv+3,dtoa@n+3
  7370  0036FC  C00C  F041         	movff	?___aodiv+4,dtoa@n+4
  7371  003700  C00D  F042         	movff	?___aodiv+5,dtoa@n+5
  7372  003704  C00E  F043         	movff	?___aodiv+6,dtoa@n+6
  7373  003708  C00F  F044         	movff	?___aodiv+7,dtoa@n+7
  7374  00370C                     l7729:
  7375                           
  7376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7377  00370C  BE46               	btfsc	(dtoa@i+1)^0,7,c
  7378  00370E  EF91  F01B         	goto	u10111
  7379  003712  5046               	movf	(dtoa@i+1)^0,w,c
  7380  003714  E108               	bnz	u10110
  7381  003716  0445               	decf	dtoa@i^0,w,c
  7382  003718  A0D8               	btfss	status,0,c
  7383  00371A  EF91  F01B         	goto	u10111
  7384  00371E  EF93  F01B         	goto	u10110
  7385  003722                     u10111:
  7386  003722  EFC3  F01B         	goto	l7739
  7387  003726                     u10110:
  7388  003726  503D               	movf	dtoa@n^0,w,c
  7389  003728  103E               	iorwf	(dtoa@n+1)^0,w,c
  7390  00372A  103F               	iorwf	(dtoa@n+2)^0,w,c
  7391  00372C  1040               	iorwf	(dtoa@n+3)^0,w,c
  7392  00372E  1041               	iorwf	(dtoa@n+4)^0,w,c
  7393  003730  1042               	iorwf	(dtoa@n+5)^0,w,c
  7394  003732  1043               	iorwf	(dtoa@n+6)^0,w,c
  7395  003734  1044               	iorwf	(dtoa@n+7)^0,w,c
  7396  003736  A4D8               	btfss	status,2,c
  7397  003738  EFA0  F01B         	goto	u10121
  7398  00373C  EFA2  F01B         	goto	u10120
  7399  003740                     u10121:
  7400  003740  EF0A  F01B         	goto	l7719
  7401  003744                     u10120:
  7402  003744  BE38               	btfsc	(dtoa@p+1)^0,7,c
  7403  003746  EFAF  F01B         	goto	u10130
  7404  00374A  5038               	movf	(dtoa@p+1)^0,w,c
  7405  00374C  E106               	bnz	u10131
  7406  00374E  0437               	decf	dtoa@p^0,w,c
  7407  003750  B0D8               	btfsc	status,0,c
  7408  003752  EFAD  F01B         	goto	u10131
  7409  003756  EFAF  F01B         	goto	u10130
  7410  00375A                     u10131:
  7411  00375A  EF0A  F01B         	goto	l7719
  7412  00375E                     u10130:
  7413  00375E  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  7414  003760  EFBA  F01B         	goto	u10141
  7415  003764  503A               	movf	(dtoa@w+1)^0,w,c
  7416  003766  E108               	bnz	u10140
  7417  003768  0439               	decf	dtoa@w^0,w,c
  7418  00376A  A0D8               	btfss	status,0,c
  7419  00376C  EFBA  F01B         	goto	u10141
  7420  003770  EFBC  F01B         	goto	u10140
  7421  003774                     u10141:
  7422  003774  EFC3  F01B         	goto	l7739
  7423  003778                     u10140:
  7424  003778  B250               	btfsc	_flags^0,1,c
  7425  00377A  EFC1  F01B         	goto	u10151
  7426  00377E  EFC3  F01B         	goto	u10150
  7427  003782                     u10151:
  7428  003782  EF0A  F01B         	goto	l7719
  7429  003786                     u10150:
  7430  003786                     l7739:
  7431                           
  7432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7433  003786  503B               	movf	dtoa@s^0,w,c
  7434  003788  103C               	iorwf	(dtoa@s+1)^0,w,c
  7435  00378A  A4D8               	btfss	status,2,c
  7436  00378C  EFCA  F01B         	goto	u10161
  7437  003790  EFCC  F01B         	goto	u10160
  7438  003794                     u10161:
  7439  003794  EFD3  F01B         	goto	l7743
  7440  003798                     u10160:
  7441  003798  A450               	btfss	_flags^0,2,c
  7442  00379A  EFD1  F01B         	goto	u10171
  7443  00379E  EFD3  F01B         	goto	u10170
  7444  0037A2                     u10171:
  7445  0037A2  EFF1  F01B         	goto	l7753
  7446  0037A6                     u10170:
  7447  0037A6                     l7743:
  7448                           
  7449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7450  0037A6  0645               	decf	dtoa@i^0,f,c
  7451  0037A8  A0D8               	btfss	status,0,c
  7452  0037AA  0646               	decf	(dtoa@i+1)^0,f,c
  7453  0037AC                     
  7454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7455  0037AC  503B               	movf	dtoa@s^0,w,c
  7456  0037AE  103C               	iorwf	(dtoa@s+1)^0,w,c
  7457  0037B0  A4D8               	btfss	status,2,c
  7458  0037B2  EFDD  F01B         	goto	u10181
  7459  0037B6  EFDF  F01B         	goto	u10180
  7460  0037BA                     u10181:
  7461  0037BA  EFE5  F01B         	goto	l7749
  7462  0037BE                     u10180:
  7463  0037BE  0E00               	movlw	0
  7464  0037C0  6E36               	movwf	(_dtoa$3220+1)^0,c
  7465  0037C2  0E2B               	movlw	43
  7466  0037C4  6E35               	movwf	_dtoa$3220^0,c
  7467  0037C6  EFE9  F01B         	goto	l7751
  7468  0037CA                     l7749:
  7469  0037CA  0E00               	movlw	0
  7470  0037CC  6E36               	movwf	(_dtoa$3220+1)^0,c
  7471  0037CE  0E2D               	movlw	45
  7472  0037D0  6E35               	movwf	_dtoa$3220^0,c
  7473  0037D2                     l7751:
  7474  0037D2  0E25               	movlw	low _dbuf
  7475  0037D4  2445               	addwf	dtoa@i^0,w,c
  7476  0037D6  6ED9               	movwf	fsr2l,c
  7477  0037D8  0E01               	movlw	high _dbuf
  7478  0037DA  2046               	addwfc	(dtoa@i+1)^0,w,c
  7479  0037DC  6EDA               	movwf	fsr2h,c
  7480  0037DE  C035  FFDF         	movff	_dtoa$3220,indf2
  7481  0037E2                     l7753:
  7482                           
  7483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7484  0037E2  C023  F018         	movff	dtoa@fp,pad@fp
  7485  0037E6  C024  F019         	movff	dtoa@fp+1,pad@fp+1
  7486  0037EA  0E25               	movlw	low _dbuf
  7487  0037EC  2445               	addwf	dtoa@i^0,w,c
  7488  0037EE  6E1A               	movwf	pad@buf^0,c
  7489  0037F0  0E01               	movlw	high _dbuf
  7490  0037F2  2046               	addwfc	(dtoa@i+1)^0,w,c
  7491  0037F4  6E1B               	movwf	(pad@buf+1)^0,c
  7492  0037F6  C039  F01C         	movff	dtoa@w,pad@p
  7493  0037FA  C03A  F01D         	movff	dtoa@w+1,pad@p+1
  7494  0037FE  ECCC  F029         	call	_pad	;wreg free
  7495  003802  C018  F023         	movff	?_pad,?_dtoa
  7496  003806  C019  F024         	movff	?_pad+1,?_dtoa+1
  7497  00380A  0012               	return		;funcret
  7498  00380C                     __end_of_dtoa:
  7499                           	callstack 0
  7500                           
  7501 ;; *************** function _pad *****************
  7502 ;; Defined at:
  7503 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7506 ;;		 -> sprintf@f(6), 
  7507 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7508 ;;		 -> dbuf(80), 
  7509 ;;  p               2   27[COMRAM] int 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  w               2   32[COMRAM] int 
  7512 ;;  i               2   30[COMRAM] int 
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  2   23[COMRAM] int 
  7515 ;; Registers used:
  7516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7522 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;Total ram usage:       11 bytes
  7527 ;; Hardware stack levels used: 1
  7528 ;; Hardware stack levels required when called: 10
  7529 ;; This function calls:
  7530 ;;		_fputc
  7531 ;;		_fputs
  7532 ;;		_strlen
  7533 ;; This function is called by:
  7534 ;;		_dtoa
  7535 ;;		_efgtoa
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text27
  7540  005398                     __ptext27:
  7541                           	callstack 0
  7542  005398                     _pad:
  7543                           	callstack 14
  7544  005398                     
  7545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7546  005398  A050               	btfss	_flags^0,0,c
  7547  00539A  EFD1  F029         	goto	u9711
  7548  00539E  EFD3  F029         	goto	u9710
  7549  0053A2                     u9711:
  7550  0053A2  EFDD  F029         	goto	l7589
  7551  0053A6                     u9710:
  7552  0053A6                     
  7553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7554  0053A6  C01A  F011         	movff	pad@buf,fputs@s
  7555  0053AA  C01B  F012         	movff	pad@buf+1,fputs@s+1
  7556  0053AE  C018  F013         	movff	pad@fp,fputs@fp
  7557  0053B2  C019  F014         	movff	pad@fp+1,fputs@fp+1
  7558  0053B6  ECE5  F02E         	call	_fputs	;wreg free
  7559  0053BA                     l7589:
  7560                           
  7561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7562  0053BA  BE1D               	btfsc	(pad@p+1)^0,7,c
  7563  0053BC  EFE2  F029         	goto	u9721
  7564  0053C0  EFE4  F029         	goto	u9720
  7565  0053C4                     u9721:
  7566  0053C4  EFEA  F029         	goto	l7593
  7567  0053C8                     u9720:
  7568  0053C8  C01C  F021         	movff	pad@p,pad@w
  7569  0053CC  C01D  F022         	movff	pad@p+1,pad@w+1
  7570  0053D0  EFEE  F029         	goto	l1508
  7571  0053D4                     l7593:
  7572  0053D4  0E00               	movlw	0
  7573  0053D6  6E22               	movwf	(pad@w+1)^0,c
  7574  0053D8  0E00               	movlw	0
  7575  0053DA  6E21               	movwf	pad@w^0,c
  7576  0053DC                     l1508:
  7577                           
  7578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7579  0053DC  0E00               	movlw	0
  7580  0053DE  6E20               	movwf	(pad@i+1)^0,c
  7581  0053E0  0E00               	movlw	0
  7582  0053E2  6E1F               	movwf	pad@i^0,c
  7583                           
  7584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7585  0053E4  EF00  F02A         	goto	l7599
  7586  0053E8                     l7595:
  7587                           
  7588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7589  0053E8  0E00               	movlw	0
  7590  0053EA  6E09               	movwf	(fputc@c+1)^0,c
  7591  0053EC  0E20               	movlw	32
  7592  0053EE  6E08               	movwf	fputc@c^0,c
  7593  0053F0  C018  F00A         	movff	pad@fp,fputc@fp
  7594  0053F4  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  7595  0053F8  EC05  F029         	call	_fputc	;wreg free
  7596  0053FC                     
  7597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7598  0053FC  4A1F               	infsnz	pad@i^0,f,c
  7599  0053FE  2A20               	incf	(pad@i+1)^0,f,c
  7600  005400                     l7599:
  7601                           
  7602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7603  005400  5021               	movf	pad@w^0,w,c
  7604  005402  5C1F               	subwf	pad@i^0,w,c
  7605  005404  5020               	movf	(pad@i+1)^0,w,c
  7606  005406  0A80               	xorlw	128
  7607  005408  6E1E               	movwf	??_pad^0,c
  7608  00540A  5022               	movf	(pad@w+1)^0,w,c
  7609  00540C  0A80               	xorlw	128
  7610  00540E  581E               	subwfb	??_pad^0,w,c
  7611  005410  A0D8               	btfss	status,0,c
  7612  005412  EF0D  F02A         	goto	u9731
  7613  005416  EF0F  F02A         	goto	u9730
  7614  00541A                     u9731:
  7615  00541A  EFF4  F029         	goto	l7595
  7616  00541E                     u9730:
  7617  00541E                     
  7618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7619  00541E  B050               	btfsc	_flags^0,0,c
  7620  005420  EF14  F02A         	goto	u9741
  7621  005424  EF16  F02A         	goto	u9740
  7622  005428                     u9741:
  7623  005428  EF20  F02A         	goto	l7603
  7624  00542C                     u9740:
  7625  00542C                     
  7626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7627  00542C  C01A  F011         	movff	pad@buf,fputs@s
  7628  005430  C01B  F012         	movff	pad@buf+1,fputs@s+1
  7629  005434  C018  F013         	movff	pad@fp,fputs@fp
  7630  005438  C019  F014         	movff	pad@fp+1,fputs@fp+1
  7631  00543C  ECE5  F02E         	call	_fputs	;wreg free
  7632  005440                     l7603:
  7633                           
  7634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7635  005440  C01A  F008         	movff	pad@buf,strlen@s
  7636  005444  C01B  F009         	movff	pad@buf+1,strlen@s+1
  7637  005448  EC34  F02D         	call	_strlen	;wreg free
  7638  00544C  5021               	movf	pad@w^0,w,c
  7639  00544E  2408               	addwf	?_strlen^0,w,c
  7640  005450  6E18               	movwf	?_pad^0,c
  7641  005452  5022               	movf	(pad@w+1)^0,w,c
  7642  005454  2009               	addwfc	(?_strlen+1)^0,w,c
  7643  005456  6E19               	movwf	(?_pad+1)^0,c
  7644  005458  0012               	return		;funcret
  7645  00545A                     __end_of_pad:
  7646                           	callstack 0
  7647                           
  7648 ;; *************** function _strlen *****************
  7649 ;; Defined at:
  7650 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7653 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  7654 ;;		 -> STR_16(6), STR_14(5), STR_12(7), STR_10(11), 
  7655 ;;		 -> STR_8(6), STR_6(5), STR_4(4), STR_2(7), 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;  a               2    9[COMRAM] PTR const unsigned char 
  7658 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  7659 ;;		 -> STR_16(6), STR_14(5), STR_12(7), STR_10(11), 
  7660 ;;		 -> STR_8(6), STR_6(5), STR_4(4), STR_2(7), 
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  2    7[COMRAM] unsigned int 
  7663 ;; Registers used:
  7664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;Total ram usage:        4 bytes
  7675 ;; Hardware stack levels used: 1
  7676 ;; Hardware stack levels required when called: 7
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_pad
  7681 ;;		_stoa
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text28
  7686  005A68                     __ptext28:
  7687                           	callstack 0
  7688  005A68                     _strlen:
  7689                           	callstack 17
  7690  005A68  C008  F00A         	movff	strlen@s,strlen@a
  7691  005A6C  C009  F00B         	movff	strlen@s+1,strlen@a+1
  7692  005A70  EF3C  F02D         	goto	l7045
  7693  005A74                     l7043:
  7694  005A74  4A08               	infsnz	strlen@s^0,f,c
  7695  005A76  2A09               	incf	(strlen@s+1)^0,f,c
  7696  005A78                     l7045:
  7697  005A78  C008  FFF6         	movff	strlen@s,tblptrl
  7698  005A7C  C009  FFF7         	movff	strlen@s+1,tblptrh
  7699  005A80  0E00               	movlw	low (__smallconst shr (0+16))
  7700  005A82  6EF8               	movwf	tblptru,c
  7701  005A84  0E0D               	movlw	(high __ramtop+-1)
  7702  005A86  64F7               	cpfsgt	tblptrh,c
  7703  005A88  D003               	bra	u8847
  7704  005A8A  0008               	tblrd		*
  7705  005A8C  50F5               	movf	tablat,w,c
  7706  005A8E  D005               	bra	u8840
  7707  005A90                     u8847:
  7708  005A90  CFF6 FFE1          	movff	tblptrl,fsr1l
  7709  005A94  CFF7 FFE2          	movff	tblptrh,fsr1h
  7710  005A98  50E7               	movf	indf1,w,c
  7711  005A9A                     u8840:
  7712  005A9A  0900               	iorlw	0
  7713  005A9C  A4D8               	btfss	status,2,c
  7714  005A9E  EF53  F02D         	goto	u8851
  7715  005AA2  EF55  F02D         	goto	u8850
  7716  005AA6                     u8851:
  7717  005AA6  EF3A  F02D         	goto	l7043
  7718  005AAA                     u8850:
  7719  005AAA  500A               	movf	strlen@a^0,w,c
  7720  005AAC  5C08               	subwf	strlen@s^0,w,c
  7721  005AAE  6E08               	movwf	?_strlen^0,c
  7722  005AB0  500B               	movf	(strlen@a+1)^0,w,c
  7723  005AB2  5809               	subwfb	(strlen@s+1)^0,w,c
  7724  005AB4  6E09               	movwf	(?_strlen+1)^0,c
  7725  005AB6  0012               	return		;funcret
  7726  005AB8                     __end_of_strlen:
  7727                           	callstack 0
  7728                           
  7729 ;; *************** function _fputs *****************
  7730 ;; Defined at:
  7731 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7734 ;;		 -> dbuf(80), 
  7735 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7736 ;;		 -> sprintf@f(6), 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  i               2   21[COMRAM] int 
  7739 ;;  c               1   20[COMRAM] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  2   16[COMRAM] int 
  7742 ;; Registers used:
  7743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7749 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7750 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7753 ;;Total ram usage:        7 bytes
  7754 ;; Hardware stack levels used: 1
  7755 ;; Hardware stack levels required when called: 9
  7756 ;; This function calls:
  7757 ;;		_fputc
  7758 ;; This function is called by:
  7759 ;;		_pad
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text29
  7764  005DCA                     __ptext29:
  7765                           	callstack 0
  7766  005DCA                     _fputs:
  7767                           	callstack 14
  7768  005DCA  0E00               	movlw	0
  7769  005DCC  6E17               	movwf	(fputs@i+1)^0,c
  7770  005DCE  0E00               	movlw	0
  7771  005DD0  6E16               	movwf	fputs@i^0,c
  7772  005DD2  EFF6  F02E         	goto	l7039
  7773  005DD6                     l7035:
  7774  005DD6  C015  F008         	movff	fputs@c,fputc@c
  7775  005DDA  6A09               	clrf	(fputc@c+1)^0,c
  7776  005DDC  C013  F00A         	movff	fputs@fp,fputc@fp
  7777  005DE0  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  7778  005DE4  EC05  F029         	call	_fputc	;wreg free
  7779  005DE8  4A16               	infsnz	fputs@i^0,f,c
  7780  005DEA  2A17               	incf	(fputs@i+1)^0,f,c
  7781  005DEC                     l7039:
  7782  005DEC  5016               	movf	fputs@i^0,w,c
  7783  005DEE  2411               	addwf	fputs@s^0,w,c
  7784  005DF0  6ED9               	movwf	fsr2l,c
  7785  005DF2  5017               	movf	(fputs@i+1)^0,w,c
  7786  005DF4  2012               	addwfc	(fputs@s+1)^0,w,c
  7787  005DF6  6EDA               	movwf	fsr2h,c
  7788  005DF8  50DF               	movf	indf2,w,c
  7789  005DFA  6E15               	movwf	fputs@c^0,c
  7790  005DFC  5015               	movf	fputs@c^0,w,c
  7791  005DFE  A4D8               	btfss	status,2,c
  7792  005E00  EF04  F02F         	goto	u8831
  7793  005E04  EF06  F02F         	goto	u8830
  7794  005E08                     u8831:
  7795  005E08  EFEB  F02E         	goto	l7035
  7796  005E0C                     u8830:
  7797  005E0C  0012               	return		;funcret
  7798  005E0E                     __end_of_fputs:
  7799                           	callstack 0
  7800                           
  7801 ;; *************** function _fputc *****************
  7802 ;; Defined at:
  7803 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  c               2    7[COMRAM] int 
  7806 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7807 ;;		 -> sprintf@f(6), 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  2    7[COMRAM] int 
  7812 ;; Registers used:
  7813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;Total ram usage:        9 bytes
  7824 ;; Hardware stack levels used: 1
  7825 ;; Hardware stack levels required when called: 8
  7826 ;; This function calls:
  7827 ;;		_putch
  7828 ;; This function is called by:
  7829 ;;		_pad
  7830 ;;		_stoa
  7831 ;;		_vfpfcnvrt
  7832 ;;		_fputs
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text30
  7837  00520A                     __ptext30:
  7838                           	callstack 0
  7839  00520A                     _fputc:
  7840                           	callstack 16
  7841  00520A  500A               	movf	fputc@fp^0,w,c
  7842  00520C  100B               	iorwf	(fputc@fp+1)^0,w,c
  7843  00520E  B4D8               	btfsc	status,2,c
  7844  005210  EF0C  F029         	goto	u8401
  7845  005214  EF0E  F029         	goto	u8400
  7846  005218                     u8401:
  7847  005218  EF17  F029         	goto	l6821
  7848  00521C                     u8400:
  7849  00521C  500A               	movf	fputc@fp^0,w,c
  7850  00521E  100B               	iorwf	(fputc@fp+1)^0,w,c
  7851  005220  A4D8               	btfss	status,2,c
  7852  005222  EF15  F029         	goto	u8411
  7853  005226  EF17  F029         	goto	u8410
  7854  00522A                     u8411:
  7855  00522A  EF1C  F029         	goto	l6823
  7856  00522E                     u8410:
  7857  00522E                     l6821:
  7858  00522E  5008               	movf	fputc@c^0,w,c
  7859  005230  EC28  F031         	call	_putch
  7860  005234  EF69  F029         	goto	l1784
  7861  005238                     l6823:
  7862  005238  EE20 F004          	lfsr	2,4
  7863  00523C  500A               	movf	fputc@fp^0,w,c
  7864  00523E  26D9               	addwf	fsr2l,f,c
  7865  005240  500B               	movf	(fputc@fp+1)^0,w,c
  7866  005242  22DA               	addwfc	fsr2h,f,c
  7867  005244  50DE               	movf	postinc2,w,c
  7868  005246  10DE               	iorwf	postinc2,w,c
  7869  005248  B4D8               	btfsc	status,2,c
  7870  00524A  EF29  F029         	goto	u8421
  7871  00524E  EF2B  F029         	goto	u8420
  7872  005252                     u8421:
  7873  005252  EF46  F029         	goto	l6827
  7874  005256                     u8420:
  7875  005256  EE20 F004          	lfsr	2,4
  7876  00525A  500A               	movf	fputc@fp^0,w,c
  7877  00525C  26D9               	addwf	fsr2l,f,c
  7878  00525E  500B               	movf	(fputc@fp+1)^0,w,c
  7879  005260  22DA               	addwfc	fsr2h,f,c
  7880  005262  EE10 F002          	lfsr	1,2
  7881  005266  500A               	movf	fputc@fp^0,w,c
  7882  005268  26E1               	addwf	fsr1l,f,c
  7883  00526A  500B               	movf	(fputc@fp+1)^0,w,c
  7884  00526C  22E2               	addwfc	fsr1h,f,c
  7885  00526E  50DE               	movf	postinc2,w,c
  7886  005270  5CE6               	subwf	postinc1,w,c
  7887  005272  50E6               	movf	postinc1,w,c
  7888  005274  0A80               	xorlw	128
  7889  005276  6E10               	movwf	(??_fputc+4)^0,c
  7890  005278  50DE               	movf	postinc2,w,c
  7891  00527A  0A80               	xorlw	128
  7892  00527C  5810               	subwfb	(??_fputc+4)^0,w,c
  7893  00527E  B0D8               	btfsc	status,0,c
  7894  005280  EF44  F029         	goto	u8431
  7895  005284  EF46  F029         	goto	u8430
  7896  005288                     u8431:
  7897  005288  EF69  F029         	goto	l1784
  7898  00528C                     u8430:
  7899  00528C                     l6827:
  7900  00528C  EE20 F002          	lfsr	2,2
  7901  005290  500A               	movf	fputc@fp^0,w,c
  7902  005292  26D9               	addwf	fsr2l,f,c
  7903  005294  500B               	movf	(fputc@fp+1)^0,w,c
  7904  005296  22DA               	addwfc	fsr2h,f,c
  7905  005298  CFDE F00C          	movff	postinc2,??_fputc
  7906  00529C  CFDD F00D          	movff	postdec2,??_fputc+1
  7907  0052A0  C00A  FFD9         	movff	fputc@fp,fsr2l
  7908  0052A4  C00B  FFDA         	movff	fputc@fp+1,fsr2h
  7909  0052A8  CFDE F00E          	movff	postinc2,??_fputc+2
  7910  0052AC  CFDD F00F          	movff	postdec2,??_fputc+3
  7911  0052B0  500C               	movf	??_fputc^0,w,c
  7912  0052B2  240E               	addwf	(??_fputc+2)^0,w,c
  7913  0052B4  6ED9               	movwf	fsr2l,c
  7914  0052B6  500D               	movf	(??_fputc+1)^0,w,c
  7915  0052B8  200F               	addwfc	(??_fputc+3)^0,w,c
  7916  0052BA  6EDA               	movwf	fsr2h,c
  7917  0052BC  C008  FFDF         	movff	fputc@c,indf2
  7918  0052C0  EE20 F002          	lfsr	2,2
  7919  0052C4  500A               	movf	fputc@fp^0,w,c
  7920  0052C6  26D9               	addwf	fsr2l,f,c
  7921  0052C8  500B               	movf	(fputc@fp+1)^0,w,c
  7922  0052CA  22DA               	addwfc	fsr2h,f,c
  7923  0052CC  2ADE               	incf	postinc2,f,c
  7924  0052CE  0E00               	movlw	0
  7925  0052D0  22DD               	addwfc	postdec2,f,c
  7926  0052D2                     l1784:
  7927  0052D2  0012               	return		;funcret
  7928  0052D4                     __end_of_fputc:
  7929                           	callstack 0
  7930                           
  7931 ;; *************** function _putch *****************
  7932 ;; Defined at:
  7933 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  c               1    wreg     unsigned char 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  c               1    0[COMRAM] unsigned char 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; Hardware stack levels required when called: 7
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_fputc
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text31
  7962  006250                     __ptext31:
  7963                           	callstack 0
  7964  006250                     _putch:
  7965                           	callstack 16
  7966  006250  0012               	return		;funcret
  7967  006252                     __end_of_putch:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function _abs *****************
  7971 ;; Defined at:
  7972 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  a               2   25[COMRAM] int 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  2   25[COMRAM] int 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;Total ram usage:        4 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 7
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_dtoa
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text32
  8001  005E94                     __ptext32:
  8002                           	callstack 0
  8003  005E94                     _abs:
  8004                           	callstack 17
  8005  005E94  BE1B               	btfsc	(abs@a+1)^0,7,c
  8006  005E96  EF57  F02F         	goto	u9750
  8007  005E9A  501B               	movf	(abs@a+1)^0,w,c
  8008  005E9C  E106               	bnz	u9751
  8009  005E9E  041A               	decf	abs@a^0,w,c
  8010  005EA0  B0D8               	btfsc	status,0,c
  8011  005EA2  EF55  F02F         	goto	u9751
  8012  005EA6  EF57  F02F         	goto	u9750
  8013  005EAA                     u9751:
  8014  005EAA  EF65  F02F         	goto	l1705
  8015  005EAE                     u9750:
  8016  005EAE  C01A  F01C         	movff	abs@a,??_abs
  8017  005EB2  C01B  F01D         	movff	abs@a+1,??_abs+1
  8018  005EB6  1E1C               	comf	??_abs^0,f,c
  8019  005EB8  1E1D               	comf	(??_abs+1)^0,f,c
  8020  005EBA  4A1C               	infsnz	??_abs^0,f,c
  8021  005EBC  2A1D               	incf	(??_abs+1)^0,f,c
  8022  005EBE  C01C  F01A         	movff	??_abs,?_abs
  8023  005EC2  C01D  F01B         	movff	??_abs+1,?_abs+1
  8024  005EC6  EF69  F02F         	goto	l1708
  8025  005ECA                     l1705:
  8026  005ECA  C01A  F01A         	movff	abs@a,?_abs
  8027  005ECE  C01B  F01B         	movff	abs@a+1,?_abs+1
  8028  005ED2                     l1708:
  8029  005ED2  0012               	return		;funcret
  8030  005ED4                     __end_of_abs:
  8031                           	callstack 0
  8032                           
  8033 ;; *************** function ___aomod *****************
  8034 ;; Defined at:
  8035 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  dividend        8    7[COMRAM] long long 
  8038 ;;  divisor         8   15[COMRAM] long long 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  sign            1   24[COMRAM] unsigned char 
  8041 ;;  counter         1   23[COMRAM] unsigned char 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  8    7[COMRAM] long long 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8051 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;Total ram usage:       18 bytes
  8056 ;; Hardware stack levels used: 1
  8057 ;; Hardware stack levels required when called: 7
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_dtoa
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text33
  8066  00458E                     __ptext33:
  8067                           	callstack 0
  8068  00458E                     ___aomod:
  8069                           	callstack 17
  8070  00458E  0E00               	movlw	0
  8071  004590  6E19               	movwf	___aomod@sign^0,c
  8072  004592  BE0F               	btfsc	(___aomod@dividend+7)^0,7,c
  8073  004594  EFD0  F022         	goto	u8950
  8074  004598  EFCE  F022         	goto	u8951
  8075  00459C                     u8951:
  8076  00459C  EFE2  F022         	goto	l7113
  8077  0045A0                     u8950:
  8078  0045A0  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  8079  0045A2  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  8080  0045A4  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  8081  0045A6  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  8082  0045A8  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  8083  0045AA  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  8084  0045AC  1E09               	comf	(___aomod@dividend+1)^0,f,c
  8085  0045AE  6C08               	negf	___aomod@dividend^0,c
  8086  0045B0  0E00               	movlw	0
  8087  0045B2  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  8088  0045B4  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  8089  0045B6  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  8090  0045B8  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  8091  0045BA  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  8092  0045BC  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  8093  0045BE  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  8094  0045C0  0E01               	movlw	1
  8095  0045C2  6E19               	movwf	___aomod@sign^0,c
  8096  0045C4                     l7113:
  8097  0045C4  BE17               	btfsc	(___aomod@divisor+7)^0,7,c
  8098  0045C6  EFE9  F022         	goto	u8960
  8099  0045CA  EFE7  F022         	goto	u8961
  8100  0045CE                     u8961:
  8101  0045CE  EFF9  F022         	goto	l7117
  8102  0045D2                     u8960:
  8103  0045D2  1E17               	comf	(___aomod@divisor+7)^0,f,c
  8104  0045D4  1E16               	comf	(___aomod@divisor+6)^0,f,c
  8105  0045D6  1E15               	comf	(___aomod@divisor+5)^0,f,c
  8106  0045D8  1E14               	comf	(___aomod@divisor+4)^0,f,c
  8107  0045DA  1E13               	comf	(___aomod@divisor+3)^0,f,c
  8108  0045DC  1E12               	comf	(___aomod@divisor+2)^0,f,c
  8109  0045DE  1E11               	comf	(___aomod@divisor+1)^0,f,c
  8110  0045E0  6C10               	negf	___aomod@divisor^0,c
  8111  0045E2  0E00               	movlw	0
  8112  0045E4  2211               	addwfc	(___aomod@divisor+1)^0,f,c
  8113  0045E6  2212               	addwfc	(___aomod@divisor+2)^0,f,c
  8114  0045E8  2213               	addwfc	(___aomod@divisor+3)^0,f,c
  8115  0045EA  2214               	addwfc	(___aomod@divisor+4)^0,f,c
  8116  0045EC  2215               	addwfc	(___aomod@divisor+5)^0,f,c
  8117  0045EE  2216               	addwfc	(___aomod@divisor+6)^0,f,c
  8118  0045F0  2217               	addwfc	(___aomod@divisor+7)^0,f,c
  8119  0045F2                     l7117:
  8120  0045F2  5010               	movf	___aomod@divisor^0,w,c
  8121  0045F4  1011               	iorwf	(___aomod@divisor+1)^0,w,c
  8122  0045F6  1012               	iorwf	(___aomod@divisor+2)^0,w,c
  8123  0045F8  1013               	iorwf	(___aomod@divisor+3)^0,w,c
  8124  0045FA  1014               	iorwf	(___aomod@divisor+4)^0,w,c
  8125  0045FC  1015               	iorwf	(___aomod@divisor+5)^0,w,c
  8126  0045FE  1016               	iorwf	(___aomod@divisor+6)^0,w,c
  8127  004600  1017               	iorwf	(___aomod@divisor+7)^0,w,c
  8128  004602  B4D8               	btfsc	status,2,c
  8129  004604  EF06  F023         	goto	u8971
  8130  004608  EF08  F023         	goto	u8970
  8131  00460C                     u8971:
  8132  00460C  EF50  F023         	goto	l7133
  8133  004610                     u8970:
  8134  004610  0E01               	movlw	1
  8135  004612  6E18               	movwf	___aomod@counter^0,c
  8136  004614  EF16  F023         	goto	l7123
  8137  004618                     l7121:
  8138  004618  90D8               	bcf	status,0,c
  8139  00461A  3610               	rlcf	___aomod@divisor^0,f,c
  8140  00461C  3611               	rlcf	(___aomod@divisor+1)^0,f,c
  8141  00461E  3612               	rlcf	(___aomod@divisor+2)^0,f,c
  8142  004620  3613               	rlcf	(___aomod@divisor+3)^0,f,c
  8143  004622  3614               	rlcf	(___aomod@divisor+4)^0,f,c
  8144  004624  3615               	rlcf	(___aomod@divisor+5)^0,f,c
  8145  004626  3616               	rlcf	(___aomod@divisor+6)^0,f,c
  8146  004628  3617               	rlcf	(___aomod@divisor+7)^0,f,c
  8147  00462A  2A18               	incf	___aomod@counter^0,f,c
  8148  00462C                     l7123:
  8149  00462C  AE17               	btfss	(___aomod@divisor+7)^0,7,c
  8150  00462E  EF1B  F023         	goto	u8981
  8151  004632  EF1D  F023         	goto	u8980
  8152  004636                     u8981:
  8153  004636  EF0C  F023         	goto	l7121
  8154  00463A                     u8980:
  8155  00463A                     l7125:
  8156  00463A  5010               	movf	___aomod@divisor^0,w,c
  8157  00463C  5C08               	subwf	___aomod@dividend^0,w,c
  8158  00463E  5011               	movf	(___aomod@divisor+1)^0,w,c
  8159  004640  5809               	subwfb	(___aomod@dividend+1)^0,w,c
  8160  004642  5012               	movf	(___aomod@divisor+2)^0,w,c
  8161  004644  580A               	subwfb	(___aomod@dividend+2)^0,w,c
  8162  004646  5013               	movf	(___aomod@divisor+3)^0,w,c
  8163  004648  580B               	subwfb	(___aomod@dividend+3)^0,w,c
  8164  00464A  5014               	movf	(___aomod@divisor+4)^0,w,c
  8165  00464C  580C               	subwfb	(___aomod@dividend+4)^0,w,c
  8166  00464E  5015               	movf	(___aomod@divisor+5)^0,w,c
  8167  004650  580D               	subwfb	(___aomod@dividend+5)^0,w,c
  8168  004652  5016               	movf	(___aomod@divisor+6)^0,w,c
  8169  004654  580E               	subwfb	(___aomod@dividend+6)^0,w,c
  8170  004656  5017               	movf	(___aomod@divisor+7)^0,w,c
  8171  004658  580F               	subwfb	(___aomod@dividend+7)^0,w,c
  8172  00465A  A0D8               	btfss	status,0,c
  8173  00465C  EF32  F023         	goto	u8991
  8174  004660  EF34  F023         	goto	u8990
  8175  004664                     u8991:
  8176  004664  EF44  F023         	goto	l7129
  8177  004668                     u8990:
  8178  004668  5010               	movf	___aomod@divisor^0,w,c
  8179  00466A  5E08               	subwf	___aomod@dividend^0,f,c
  8180  00466C  5011               	movf	(___aomod@divisor+1)^0,w,c
  8181  00466E  5A09               	subwfb	(___aomod@dividend+1)^0,f,c
  8182  004670  5012               	movf	(___aomod@divisor+2)^0,w,c
  8183  004672  5A0A               	subwfb	(___aomod@dividend+2)^0,f,c
  8184  004674  5013               	movf	(___aomod@divisor+3)^0,w,c
  8185  004676  5A0B               	subwfb	(___aomod@dividend+3)^0,f,c
  8186  004678  5014               	movf	(___aomod@divisor+4)^0,w,c
  8187  00467A  5A0C               	subwfb	(___aomod@dividend+4)^0,f,c
  8188  00467C  5015               	movf	(___aomod@divisor+5)^0,w,c
  8189  00467E  5A0D               	subwfb	(___aomod@dividend+5)^0,f,c
  8190  004680  5016               	movf	(___aomod@divisor+6)^0,w,c
  8191  004682  5A0E               	subwfb	(___aomod@dividend+6)^0,f,c
  8192  004684  5017               	movf	(___aomod@divisor+7)^0,w,c
  8193  004686  5A0F               	subwfb	(___aomod@dividend+7)^0,f,c
  8194  004688                     l7129:
  8195  004688  90D8               	bcf	status,0,c
  8196  00468A  3217               	rrcf	(___aomod@divisor+7)^0,f,c
  8197  00468C  3216               	rrcf	(___aomod@divisor+6)^0,f,c
  8198  00468E  3215               	rrcf	(___aomod@divisor+5)^0,f,c
  8199  004690  3214               	rrcf	(___aomod@divisor+4)^0,f,c
  8200  004692  3213               	rrcf	(___aomod@divisor+3)^0,f,c
  8201  004694  3212               	rrcf	(___aomod@divisor+2)^0,f,c
  8202  004696  3211               	rrcf	(___aomod@divisor+1)^0,f,c
  8203  004698  3210               	rrcf	___aomod@divisor^0,f,c
  8204  00469A  2E18               	decfsz	___aomod@counter^0,f,c
  8205  00469C  EF1D  F023         	goto	l7125
  8206  0046A0                     l7133:
  8207  0046A0  5019               	movf	___aomod@sign^0,w,c
  8208  0046A2  B4D8               	btfsc	status,2,c
  8209  0046A4  EF56  F023         	goto	u9001
  8210  0046A8  EF58  F023         	goto	u9000
  8211  0046AC                     u9001:
  8212  0046AC  EF68  F023         	goto	l7137
  8213  0046B0                     u9000:
  8214  0046B0  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  8215  0046B2  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  8216  0046B4  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  8217  0046B6  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  8218  0046B8  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  8219  0046BA  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  8220  0046BC  1E09               	comf	(___aomod@dividend+1)^0,f,c
  8221  0046BE  6C08               	negf	___aomod@dividend^0,c
  8222  0046C0  0E00               	movlw	0
  8223  0046C2  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  8224  0046C4  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  8225  0046C6  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  8226  0046C8  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  8227  0046CA  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  8228  0046CC  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  8229  0046CE  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  8230  0046D0                     l7137:
  8231  0046D0  C008  F008         	movff	___aomod@dividend,?___aomod
  8232  0046D4  C009  F009         	movff	___aomod@dividend+1,?___aomod+1
  8233  0046D8  C00A  F00A         	movff	___aomod@dividend+2,?___aomod+2
  8234  0046DC  C00B  F00B         	movff	___aomod@dividend+3,?___aomod+3
  8235  0046E0  C00C  F00C         	movff	___aomod@dividend+4,?___aomod+4
  8236  0046E4  C00D  F00D         	movff	___aomod@dividend+5,?___aomod+5
  8237  0046E8  C00E  F00E         	movff	___aomod@dividend+6,?___aomod+6
  8238  0046EC  C00F  F00F         	movff	___aomod@dividend+7,?___aomod+7
  8239  0046F0  0012               	return		;funcret
  8240  0046F2                     __end_of___aomod:
  8241                           	callstack 0
  8242                           
  8243 ;; *************** function ___aodiv *****************
  8244 ;; Defined at:
  8245 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  dividend        8    7[COMRAM] long long 
  8248 ;;  divisor         8   15[COMRAM] long long 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;  quotient        8   25[COMRAM] long long 
  8251 ;;  sign            1   24[COMRAM] unsigned char 
  8252 ;;  counter         1   23[COMRAM] unsigned char 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  8    7[COMRAM] long long 
  8255 ;; Registers used:
  8256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8262 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8263 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;Total ram usage:       26 bytes
  8267 ;; Hardware stack levels used: 1
  8268 ;; Hardware stack levels required when called: 7
  8269 ;; This function calls:
  8270 ;;		Nothing
  8271 ;; This function is called by:
  8272 ;;		_dtoa
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           	psect	text34
  8277  004290                     __ptext34:
  8278                           	callstack 0
  8279  004290                     ___aodiv:
  8280                           	callstack 17
  8281  004290  0E00               	movlw	0
  8282  004292  6E19               	movwf	___aodiv@sign^0,c
  8283  004294  BE17               	btfsc	(___aodiv@divisor+7)^0,7,c
  8284  004296  EF51  F021         	goto	u8880
  8285  00429A  EF4F  F021         	goto	u8881
  8286  00429E                     u8881:
  8287  00429E  EF63  F021         	goto	l7069
  8288  0042A2                     u8880:
  8289  0042A2  1E17               	comf	(___aodiv@divisor+7)^0,f,c
  8290  0042A4  1E16               	comf	(___aodiv@divisor+6)^0,f,c
  8291  0042A6  1E15               	comf	(___aodiv@divisor+5)^0,f,c
  8292  0042A8  1E14               	comf	(___aodiv@divisor+4)^0,f,c
  8293  0042AA  1E13               	comf	(___aodiv@divisor+3)^0,f,c
  8294  0042AC  1E12               	comf	(___aodiv@divisor+2)^0,f,c
  8295  0042AE  1E11               	comf	(___aodiv@divisor+1)^0,f,c
  8296  0042B0  6C10               	negf	___aodiv@divisor^0,c
  8297  0042B2  0E00               	movlw	0
  8298  0042B4  2211               	addwfc	(___aodiv@divisor+1)^0,f,c
  8299  0042B6  2212               	addwfc	(___aodiv@divisor+2)^0,f,c
  8300  0042B8  2213               	addwfc	(___aodiv@divisor+3)^0,f,c
  8301  0042BA  2214               	addwfc	(___aodiv@divisor+4)^0,f,c
  8302  0042BC  2215               	addwfc	(___aodiv@divisor+5)^0,f,c
  8303  0042BE  2216               	addwfc	(___aodiv@divisor+6)^0,f,c
  8304  0042C0  2217               	addwfc	(___aodiv@divisor+7)^0,f,c
  8305  0042C2  0E01               	movlw	1
  8306  0042C4  6E19               	movwf	___aodiv@sign^0,c
  8307  0042C6                     l7069:
  8308  0042C6  BE0F               	btfsc	(___aodiv@dividend+7)^0,7,c
  8309  0042C8  EF6A  F021         	goto	u8890
  8310  0042CC  EF68  F021         	goto	u8891
  8311  0042D0                     u8891:
  8312  0042D0  EF7C  F021         	goto	l7075
  8313  0042D4                     u8890:
  8314  0042D4  1E0F               	comf	(___aodiv@dividend+7)^0,f,c
  8315  0042D6  1E0E               	comf	(___aodiv@dividend+6)^0,f,c
  8316  0042D8  1E0D               	comf	(___aodiv@dividend+5)^0,f,c
  8317  0042DA  1E0C               	comf	(___aodiv@dividend+4)^0,f,c
  8318  0042DC  1E0B               	comf	(___aodiv@dividend+3)^0,f,c
  8319  0042DE  1E0A               	comf	(___aodiv@dividend+2)^0,f,c
  8320  0042E0  1E09               	comf	(___aodiv@dividend+1)^0,f,c
  8321  0042E2  6C08               	negf	___aodiv@dividend^0,c
  8322  0042E4  0E00               	movlw	0
  8323  0042E6  2209               	addwfc	(___aodiv@dividend+1)^0,f,c
  8324  0042E8  220A               	addwfc	(___aodiv@dividend+2)^0,f,c
  8325  0042EA  220B               	addwfc	(___aodiv@dividend+3)^0,f,c
  8326  0042EC  220C               	addwfc	(___aodiv@dividend+4)^0,f,c
  8327  0042EE  220D               	addwfc	(___aodiv@dividend+5)^0,f,c
  8328  0042F0  220E               	addwfc	(___aodiv@dividend+6)^0,f,c
  8329  0042F2  220F               	addwfc	(___aodiv@dividend+7)^0,f,c
  8330  0042F4  0E01               	movlw	1
  8331  0042F6  1A19               	xorwf	___aodiv@sign^0,f,c
  8332  0042F8                     l7075:
  8333  0042F8  EE20  F01A         	lfsr	2,___aodiv@quotient
  8334  0042FC  0E07               	movlw	7
  8335  0042FE                     u8901:
  8336  0042FE  6ADE               	clrf	postinc2,c
  8337  004300  06E8               	decf	wreg,f,c
  8338  004302  E2FD               	bc	u8901
  8339  004304  5010               	movf	___aodiv@divisor^0,w,c
  8340  004306  1011               	iorwf	(___aodiv@divisor+1)^0,w,c
  8341  004308  1012               	iorwf	(___aodiv@divisor+2)^0,w,c
  8342  00430A  1013               	iorwf	(___aodiv@divisor+3)^0,w,c
  8343  00430C  1014               	iorwf	(___aodiv@divisor+4)^0,w,c
  8344  00430E  1015               	iorwf	(___aodiv@divisor+5)^0,w,c
  8345  004310  1016               	iorwf	(___aodiv@divisor+6)^0,w,c
  8346  004312  1017               	iorwf	(___aodiv@divisor+7)^0,w,c
  8347  004314  B4D8               	btfsc	status,2,c
  8348  004316  EF8F  F021         	goto	u8911
  8349  00431A  EF91  F021         	goto	u8910
  8350  00431E                     u8911:
  8351  00431E  EFE3  F021         	goto	l7097
  8352  004322                     u8910:
  8353  004322  0E01               	movlw	1
  8354  004324  6E18               	movwf	___aodiv@counter^0,c
  8355  004326  EF9F  F021         	goto	l7083
  8356  00432A                     l7081:
  8357  00432A  90D8               	bcf	status,0,c
  8358  00432C  3610               	rlcf	___aodiv@divisor^0,f,c
  8359  00432E  3611               	rlcf	(___aodiv@divisor+1)^0,f,c
  8360  004330  3612               	rlcf	(___aodiv@divisor+2)^0,f,c
  8361  004332  3613               	rlcf	(___aodiv@divisor+3)^0,f,c
  8362  004334  3614               	rlcf	(___aodiv@divisor+4)^0,f,c
  8363  004336  3615               	rlcf	(___aodiv@divisor+5)^0,f,c
  8364  004338  3616               	rlcf	(___aodiv@divisor+6)^0,f,c
  8365  00433A  3617               	rlcf	(___aodiv@divisor+7)^0,f,c
  8366  00433C  2A18               	incf	___aodiv@counter^0,f,c
  8367  00433E                     l7083:
  8368  00433E  AE17               	btfss	(___aodiv@divisor+7)^0,7,c
  8369  004340  EFA4  F021         	goto	u8921
  8370  004344  EFA6  F021         	goto	u8920
  8371  004348                     u8921:
  8372  004348  EF95  F021         	goto	l7081
  8373  00434C                     u8920:
  8374  00434C                     l7085:
  8375  00434C  90D8               	bcf	status,0,c
  8376  00434E  361A               	rlcf	___aodiv@quotient^0,f,c
  8377  004350  361B               	rlcf	(___aodiv@quotient+1)^0,f,c
  8378  004352  361C               	rlcf	(___aodiv@quotient+2)^0,f,c
  8379  004354  361D               	rlcf	(___aodiv@quotient+3)^0,f,c
  8380  004356  361E               	rlcf	(___aodiv@quotient+4)^0,f,c
  8381  004358  361F               	rlcf	(___aodiv@quotient+5)^0,f,c
  8382  00435A  3620               	rlcf	(___aodiv@quotient+6)^0,f,c
  8383  00435C  3621               	rlcf	(___aodiv@quotient+7)^0,f,c
  8384  00435E  5010               	movf	___aodiv@divisor^0,w,c
  8385  004360  5C08               	subwf	___aodiv@dividend^0,w,c
  8386  004362  5011               	movf	(___aodiv@divisor+1)^0,w,c
  8387  004364  5809               	subwfb	(___aodiv@dividend+1)^0,w,c
  8388  004366  5012               	movf	(___aodiv@divisor+2)^0,w,c
  8389  004368  580A               	subwfb	(___aodiv@dividend+2)^0,w,c
  8390  00436A  5013               	movf	(___aodiv@divisor+3)^0,w,c
  8391  00436C  580B               	subwfb	(___aodiv@dividend+3)^0,w,c
  8392  00436E  5014               	movf	(___aodiv@divisor+4)^0,w,c
  8393  004370  580C               	subwfb	(___aodiv@dividend+4)^0,w,c
  8394  004372  5015               	movf	(___aodiv@divisor+5)^0,w,c
  8395  004374  580D               	subwfb	(___aodiv@dividend+5)^0,w,c
  8396  004376  5016               	movf	(___aodiv@divisor+6)^0,w,c
  8397  004378  580E               	subwfb	(___aodiv@dividend+6)^0,w,c
  8398  00437A  5017               	movf	(___aodiv@divisor+7)^0,w,c
  8399  00437C  580F               	subwfb	(___aodiv@dividend+7)^0,w,c
  8400  00437E  A0D8               	btfss	status,0,c
  8401  004380  EFC4  F021         	goto	u8931
  8402  004384  EFC6  F021         	goto	u8930
  8403  004388                     u8931:
  8404  004388  EFD7  F021         	goto	l7093
  8405  00438C                     u8930:
  8406  00438C  5010               	movf	___aodiv@divisor^0,w,c
  8407  00438E  5E08               	subwf	___aodiv@dividend^0,f,c
  8408  004390  5011               	movf	(___aodiv@divisor+1)^0,w,c
  8409  004392  5A09               	subwfb	(___aodiv@dividend+1)^0,f,c
  8410  004394  5012               	movf	(___aodiv@divisor+2)^0,w,c
  8411  004396  5A0A               	subwfb	(___aodiv@dividend+2)^0,f,c
  8412  004398  5013               	movf	(___aodiv@divisor+3)^0,w,c
  8413  00439A  5A0B               	subwfb	(___aodiv@dividend+3)^0,f,c
  8414  00439C  5014               	movf	(___aodiv@divisor+4)^0,w,c
  8415  00439E  5A0C               	subwfb	(___aodiv@dividend+4)^0,f,c
  8416  0043A0  5015               	movf	(___aodiv@divisor+5)^0,w,c
  8417  0043A2  5A0D               	subwfb	(___aodiv@dividend+5)^0,f,c
  8418  0043A4  5016               	movf	(___aodiv@divisor+6)^0,w,c
  8419  0043A6  5A0E               	subwfb	(___aodiv@dividend+6)^0,f,c
  8420  0043A8  5017               	movf	(___aodiv@divisor+7)^0,w,c
  8421  0043AA  5A0F               	subwfb	(___aodiv@dividend+7)^0,f,c
  8422  0043AC  801A               	bsf	___aodiv@quotient^0,0,c
  8423  0043AE                     l7093:
  8424  0043AE  90D8               	bcf	status,0,c
  8425  0043B0  3217               	rrcf	(___aodiv@divisor+7)^0,f,c
  8426  0043B2  3216               	rrcf	(___aodiv@divisor+6)^0,f,c
  8427  0043B4  3215               	rrcf	(___aodiv@divisor+5)^0,f,c
  8428  0043B6  3214               	rrcf	(___aodiv@divisor+4)^0,f,c
  8429  0043B8  3213               	rrcf	(___aodiv@divisor+3)^0,f,c
  8430  0043BA  3212               	rrcf	(___aodiv@divisor+2)^0,f,c
  8431  0043BC  3211               	rrcf	(___aodiv@divisor+1)^0,f,c
  8432  0043BE  3210               	rrcf	___aodiv@divisor^0,f,c
  8433  0043C0  2E18               	decfsz	___aodiv@counter^0,f,c
  8434  0043C2  EFA6  F021         	goto	l7085
  8435  0043C6                     l7097:
  8436  0043C6  5019               	movf	___aodiv@sign^0,w,c
  8437  0043C8  B4D8               	btfsc	status,2,c
  8438  0043CA  EFE9  F021         	goto	u8941
  8439  0043CE  EFEB  F021         	goto	u8940
  8440  0043D2                     u8941:
  8441  0043D2  EFFB  F021         	goto	l7101
  8442  0043D6                     u8940:
  8443  0043D6  1E21               	comf	(___aodiv@quotient+7)^0,f,c
  8444  0043D8  1E20               	comf	(___aodiv@quotient+6)^0,f,c
  8445  0043DA  1E1F               	comf	(___aodiv@quotient+5)^0,f,c
  8446  0043DC  1E1E               	comf	(___aodiv@quotient+4)^0,f,c
  8447  0043DE  1E1D               	comf	(___aodiv@quotient+3)^0,f,c
  8448  0043E0  1E1C               	comf	(___aodiv@quotient+2)^0,f,c
  8449  0043E2  1E1B               	comf	(___aodiv@quotient+1)^0,f,c
  8450  0043E4  6C1A               	negf	___aodiv@quotient^0,c
  8451  0043E6  0E00               	movlw	0
  8452  0043E8  221B               	addwfc	(___aodiv@quotient+1)^0,f,c
  8453  0043EA  221C               	addwfc	(___aodiv@quotient+2)^0,f,c
  8454  0043EC  221D               	addwfc	(___aodiv@quotient+3)^0,f,c
  8455  0043EE  221E               	addwfc	(___aodiv@quotient+4)^0,f,c
  8456  0043F0  221F               	addwfc	(___aodiv@quotient+5)^0,f,c
  8457  0043F2  2220               	addwfc	(___aodiv@quotient+6)^0,f,c
  8458  0043F4  2221               	addwfc	(___aodiv@quotient+7)^0,f,c
  8459  0043F6                     l7101:
  8460  0043F6  C01A  F008         	movff	___aodiv@quotient,?___aodiv
  8461  0043FA  C01B  F009         	movff	___aodiv@quotient+1,?___aodiv+1
  8462  0043FE  C01C  F00A         	movff	___aodiv@quotient+2,?___aodiv+2
  8463  004402  C01D  F00B         	movff	___aodiv@quotient+3,?___aodiv+3
  8464  004406  C01E  F00C         	movff	___aodiv@quotient+4,?___aodiv+4
  8465  00440A  C01F  F00D         	movff	___aodiv@quotient+5,?___aodiv+5
  8466  00440E  C020  F00E         	movff	___aodiv@quotient+6,?___aodiv+6
  8467  004412  C021  F00F         	movff	___aodiv@quotient+7,?___aodiv+7
  8468  004416  0012               	return		;funcret
  8469  004418                     __end_of___aodiv:
  8470                           	callstack 0
  8471                           
  8472 ;; *************** function _atoi *****************
  8473 ;; Defined at:
  8474 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  s               2   14[COMRAM] PTR const unsigned char 
  8477 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  8478 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  8479 ;;		 -> STR_3(64), STR_1(64), 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;  n               2   27[COMRAM] int 
  8482 ;;  neg             2   20[COMRAM] int 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  2   14[COMRAM] int 
  8485 ;; Registers used:
  8486 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8493 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8494 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8495 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;Total ram usage:       15 bytes
  8497 ;; Hardware stack levels used: 1
  8498 ;; Hardware stack levels required when called: 8
  8499 ;; This function calls:
  8500 ;;		___wmul
  8501 ;;		_isdigit
  8502 ;;		_isspace
  8503 ;; This function is called by:
  8504 ;;		_vfpfcnvrt
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text35
  8509  003F52                     __ptext35:
  8510                           	callstack 0
  8511  003F52                     _atoi:
  8512                           	callstack 17
  8513  003F52  0E00               	movlw	0
  8514  003F54  6E1D               	movwf	(atoi@n+1)^0,c
  8515  003F56  0E00               	movlw	0
  8516  003F58  6E1C               	movwf	atoi@n^0,c
  8517  003F5A  0E00               	movlw	0
  8518  003F5C  6E16               	movwf	(atoi@neg+1)^0,c
  8519  003F5E  0E00               	movlw	0
  8520  003F60  6E15               	movwf	atoi@neg^0,c
  8521  003F62  EFB5  F01F         	goto	l8111
  8522  003F66                     l8109:
  8523  003F66  4A0F               	infsnz	atoi@s^0,f,c
  8524  003F68  2A10               	incf	(atoi@s+1)^0,f,c
  8525  003F6A                     l8111:
  8526  003F6A  0E01               	movlw	1
  8527  003F6C  6E1B               	movwf	_atoi$3323^0,c
  8528  003F6E  C00F  FFF6         	movff	atoi@s,tblptrl
  8529  003F72  C010  FFF7         	movff	atoi@s+1,tblptrh
  8530  003F76                     	if	0	;tblptru may be non-zero
  8531  003F76                     	endif
  8532  003F76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8533  003F76  0E00               	movlw	low (__mediumconst shr (0+16))
  8534  003F78  6EF8               	movwf	tblptru,c
  8535  003F7A                     	endif
  8536  003F7A  0008               	tblrd		*
  8537  003F7C  50F5               	movf	tablat,w,c
  8538  003F7E  0A20               	xorlw	32
  8539  003F80  B4D8               	btfsc	status,2,c
  8540  003F82  EFC5  F01F         	goto	u10831
  8541  003F86  EFC7  F01F         	goto	u10830
  8542  003F8A                     u10831:
  8543  003F8A  EFE6  F01F         	goto	l8119
  8544  003F8E                     u10830:
  8545  003F8E  0EF7               	movlw	247
  8546  003F90  6E11               	movwf	??_atoi^0,c
  8547  003F92  0EFF               	movlw	255
  8548  003F94  6E12               	movwf	(??_atoi+1)^0,c
  8549  003F96  C00F  FFF6         	movff	atoi@s,tblptrl
  8550  003F9A  C010  FFF7         	movff	atoi@s+1,tblptrh
  8551  003F9E                     	if	0	;tblptru may be non-zero
  8552  003F9E                     	endif
  8553  003F9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8554  003F9E  0E00               	movlw	low (__mediumconst shr (0+16))
  8555  003FA0  6EF8               	movwf	tblptru,c
  8556  003FA2                     	endif
  8557  003FA2  0008               	tblrd		*
  8558  003FA4  50F5               	movf	tablat,w,c
  8559  003FA6  6E13               	movwf	(??_atoi+2)^0,c
  8560  003FA8  6A14               	clrf	(??_atoi+3)^0,c
  8561  003FAA  5011               	movf	??_atoi^0,w,c
  8562  003FAC  2613               	addwf	(??_atoi+2)^0,f,c
  8563  003FAE  5012               	movf	(??_atoi+1)^0,w,c
  8564  003FB0  2214               	addwfc	(??_atoi+3)^0,f,c
  8565  003FB2  5014               	movf	(??_atoi+3)^0,w,c
  8566  003FB4  E109               	bnz	u10840
  8567  003FB6  0E05               	movlw	5
  8568  003FB8  5C13               	subwf	(??_atoi+2)^0,w,c
  8569  003FBA  A0D8               	btfss	status,0,c
  8570  003FBC  EFE2  F01F         	goto	u10841
  8571  003FC0  EFE4  F01F         	goto	u10840
  8572  003FC4                     u10841:
  8573  003FC4  EFE6  F01F         	goto	l8119
  8574  003FC8                     u10840:
  8575  003FC8  0E00               	movlw	0
  8576  003FCA  6E1B               	movwf	_atoi$3323^0,c
  8577  003FCC                     l8119:
  8578  003FCC  C01B  F017         	movff	_atoi$3323,_atoi$3322
  8579  003FD0  6A18               	clrf	(_atoi$3322+1)^0,c
  8580  003FD2  5017               	movf	_atoi$3322^0,w,c
  8581  003FD4  1018               	iorwf	(_atoi$3322+1)^0,w,c
  8582  003FD6  A4D8               	btfss	status,2,c
  8583  003FD8  EFF0  F01F         	goto	u10851
  8584  003FDC  EFF2  F01F         	goto	u10850
  8585  003FE0                     u10851:
  8586  003FE0  EFB3  F01F         	goto	l8109
  8587  003FE4                     u10850:
  8588  003FE4  EFFC  F01F         	goto	l8129
  8589  003FE8                     l8125:
  8590  003FE8  0E00               	movlw	0
  8591  003FEA  6E16               	movwf	(atoi@neg+1)^0,c
  8592  003FEC  0E01               	movlw	1
  8593  003FEE  6E15               	movwf	atoi@neg^0,c
  8594  003FF0                     l8127:
  8595  003FF0  4A0F               	infsnz	atoi@s^0,f,c
  8596  003FF2  2A10               	incf	(atoi@s+1)^0,f,c
  8597  003FF4  EF35  F020         	goto	l8135
  8598  003FF8                     l8129:
  8599  003FF8  C00F  FFF6         	movff	atoi@s,tblptrl
  8600  003FFC  C010  FFF7         	movff	atoi@s+1,tblptrh
  8601  004000                     	if	0	;tblptru may be non-zero
  8602  004000                     	endif
  8603  004000                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8604  004000  0E00               	movlw	low (__mediumconst shr (0+16))
  8605  004002  6EF8               	movwf	tblptru,c
  8606  004004                     	endif
  8607  004004  0008               	tblrd		*
  8608  004006  50F5               	movf	tablat,w,c
  8609  004008  6E11               	movwf	??_atoi^0,c
  8610  00400A  6A12               	clrf	(??_atoi+1)^0,c
  8611                           
  8612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8613                           ; Switch size 1, requested type "simple"
  8614                           ; Number of cases is 1, Range of values is 0 to 0
  8615                           ; switch strategies available:
  8616                           ; Name         Instructions Cycles
  8617                           ; simple_byte            4     3 (average)
  8618                           ;	Chosen strategy is simple_byte
  8619  00400C  5012               	movf	(??_atoi+1)^0,w,c
  8620  00400E  0A00               	xorlw	0	; case 0
  8621  004010  B4D8               	btfsc	status,2,c
  8622  004012  EF0D  F020         	goto	l9039
  8623  004016  EF35  F020         	goto	l8135
  8624  00401A                     l9039:
  8625                           
  8626                           ; Switch size 1, requested type "simple"
  8627                           ; Number of cases is 2, Range of values is 43 to 45
  8628                           ; switch strategies available:
  8629                           ; Name         Instructions Cycles
  8630                           ; simple_byte            7     4 (average)
  8631                           ;	Chosen strategy is simple_byte
  8632  00401A  5011               	movf	??_atoi^0,w,c
  8633  00401C  0A2B               	xorlw	43	; case 43
  8634  00401E  B4D8               	btfsc	status,2,c
  8635  004020  EFF8  F01F         	goto	l8127
  8636  004024  0A06               	xorlw	6	; case 45
  8637  004026  B4D8               	btfsc	status,2,c
  8638  004028  EFF4  F01F         	goto	l8125
  8639  00402C  EF35  F020         	goto	l8135
  8640  004030                     l8131:
  8641  004030  C01C  F008         	movff	atoi@n,___wmul@multiplier
  8642  004034  C01D  F009         	movff	atoi@n+1,___wmul@multiplier+1
  8643  004038  0E00               	movlw	0
  8644  00403A  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  8645  00403C  0E0A               	movlw	10
  8646  00403E  6E0A               	movwf	___wmul@multiplicand^0,c
  8647  004040  EC2F  F030         	call	___wmul	;wreg free
  8648  004044  C00F  FFF6         	movff	atoi@s,tblptrl
  8649  004048  C010  FFF7         	movff	atoi@s+1,tblptrh
  8650  00404C                     	if	0	;tblptru may be non-zero
  8651  00404C                     	endif
  8652  00404C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8653  00404C  0E00               	movlw	low (__mediumconst shr (0+16))
  8654  00404E  6EF8               	movwf	tblptru,c
  8655  004050                     	endif
  8656  004050  0008               	tblrd		*
  8657  004052  50F5               	movf	tablat,w,c
  8658  004054  5E08               	subwf	?___wmul^0,f,c
  8659  004056  0E00               	movlw	0
  8660  004058  5A09               	subwfb	(?___wmul+1)^0,f,c
  8661  00405A  0E30               	movlw	48
  8662  00405C  2408               	addwf	?___wmul^0,w,c
  8663  00405E  6E1C               	movwf	atoi@n^0,c
  8664  004060  0E00               	movlw	0
  8665  004062  2009               	addwfc	(?___wmul+1)^0,w,c
  8666  004064  6E1D               	movwf	(atoi@n+1)^0,c
  8667  004066  EFF8  F01F         	goto	l8127
  8668  00406A                     l8135:
  8669  00406A  0ED0               	movlw	208
  8670  00406C  6E11               	movwf	??_atoi^0,c
  8671  00406E  0EFF               	movlw	255
  8672  004070  6E12               	movwf	(??_atoi+1)^0,c
  8673  004072  C00F  FFF6         	movff	atoi@s,tblptrl
  8674  004076  C010  FFF7         	movff	atoi@s+1,tblptrh
  8675  00407A                     	if	0	;tblptru may be non-zero
  8676  00407A                     	endif
  8677  00407A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8678  00407A  0E00               	movlw	low (__mediumconst shr (0+16))
  8679  00407C  6EF8               	movwf	tblptru,c
  8680  00407E                     	endif
  8681  00407E  0008               	tblrd		*
  8682  004080  50F5               	movf	tablat,w,c
  8683  004082  6E13               	movwf	(??_atoi+2)^0,c
  8684  004084  6A14               	clrf	(??_atoi+3)^0,c
  8685  004086  5011               	movf	??_atoi^0,w,c
  8686  004088  2613               	addwf	(??_atoi+2)^0,f,c
  8687  00408A  5012               	movf	(??_atoi+1)^0,w,c
  8688  00408C  2214               	addwfc	(??_atoi+3)^0,f,c
  8689  00408E  5014               	movf	(??_atoi+3)^0,w,c
  8690  004090  E10A               	bnz	u10860
  8691  004092  0E0A               	movlw	10
  8692  004094  5C13               	subwf	(??_atoi+2)^0,w,c
  8693  004096  A0D8               	btfss	status,0,c
  8694  004098  EF50  F020         	goto	u10861
  8695  00409C  EF53  F020         	goto	u10860
  8696  0040A0                     u10861:
  8697  0040A0  0E01               	movlw	1
  8698  0040A2  EF54  F020         	goto	u10870
  8699  0040A6                     u10860:
  8700  0040A6  0E00               	movlw	0
  8701  0040A8                     u10870:
  8702  0040A8  6E19               	movwf	_atoi$3324^0,c
  8703  0040AA  6A1A               	clrf	(_atoi$3324+1)^0,c
  8704  0040AC  5019               	movf	_atoi$3324^0,w,c
  8705  0040AE  101A               	iorwf	(_atoi$3324+1)^0,w,c
  8706  0040B0  A4D8               	btfss	status,2,c
  8707  0040B2  EF5D  F020         	goto	u10881
  8708  0040B6  EF5F  F020         	goto	u10880
  8709  0040BA                     u10881:
  8710  0040BA  EF18  F020         	goto	l8131
  8711  0040BE                     u10880:
  8712  0040BE  5015               	movf	atoi@neg^0,w,c
  8713  0040C0  1016               	iorwf	(atoi@neg+1)^0,w,c
  8714  0040C2  A4D8               	btfss	status,2,c
  8715  0040C4  EF66  F020         	goto	u10891
  8716  0040C8  EF68  F020         	goto	u10890
  8717  0040CC                     u10891:
  8718  0040CC  EF76  F020         	goto	l1736
  8719  0040D0                     u10890:
  8720  0040D0  C01C  F011         	movff	atoi@n,??_atoi
  8721  0040D4  C01D  F012         	movff	atoi@n+1,??_atoi+1
  8722  0040D8  1E11               	comf	??_atoi^0,f,c
  8723  0040DA  1E12               	comf	(??_atoi+1)^0,f,c
  8724  0040DC  4A11               	infsnz	??_atoi^0,f,c
  8725  0040DE  2A12               	incf	(??_atoi+1)^0,f,c
  8726  0040E0  C011  F00F         	movff	??_atoi,?_atoi
  8727  0040E4  C012  F010         	movff	??_atoi+1,?_atoi+1
  8728  0040E8  EF7A  F020         	goto	l1739
  8729  0040EC                     l1736:
  8730  0040EC  C01C  F00F         	movff	atoi@n,?_atoi
  8731  0040F0  C01D  F010         	movff	atoi@n+1,?_atoi+1
  8732  0040F4                     l1739:
  8733  0040F4  0012               	return		;funcret
  8734  0040F6                     __end_of_atoi:
  8735                           	callstack 0
  8736                           
  8737 ;; *************** function _isspace *****************
  8738 ;; Defined at:
  8739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  c               2    7[COMRAM] int 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  2    7[COMRAM] int 
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8756 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8757 ;;Total ram usage:        7 bytes
  8758 ;; Hardware stack levels used: 1
  8759 ;; Hardware stack levels required when called: 7
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_atoi
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text36
  8768  005A16                     __ptext36:
  8769                           	callstack 0
  8770  005A16                     _isspace:
  8771                           	callstack 17
  8772  005A16  0E01               	movlw	1
  8773  005A18  6E0E               	movwf	_isspace$3353^0,c
  8774  005A1A  0E20               	movlw	32
  8775  005A1C  1808               	xorwf	isspace@c^0,w,c
  8776  005A1E  1009               	iorwf	(isspace@c+1)^0,w,c
  8777  005A20  B4D8               	btfsc	status,2,c
  8778  005A22  EF15  F02D         	goto	u10001
  8779  005A26  EF17  F02D         	goto	u10000
  8780  005A2A                     u10001:
  8781  005A2A  EF30  F02D         	goto	l7687
  8782  005A2E                     u10000:
  8783  005A2E  0EF7               	movlw	247
  8784  005A30  6E0A               	movwf	??_isspace^0,c
  8785  005A32  0EFF               	movlw	255
  8786  005A34  6E0B               	movwf	(??_isspace+1)^0,c
  8787  005A36  C008  F00C         	movff	isspace@c,??_isspace+2
  8788  005A3A  C009  F00D         	movff	isspace@c+1,??_isspace+3
  8789  005A3E  500A               	movf	??_isspace^0,w,c
  8790  005A40  260C               	addwf	(??_isspace+2)^0,f,c
  8791  005A42  500B               	movf	(??_isspace+1)^0,w,c
  8792  005A44  220D               	addwfc	(??_isspace+3)^0,f,c
  8793  005A46  500D               	movf	(??_isspace+3)^0,w,c
  8794  005A48  E109               	bnz	u10010
  8795  005A4A  0E05               	movlw	5
  8796  005A4C  5C0C               	subwf	(??_isspace+2)^0,w,c
  8797  005A4E  A0D8               	btfss	status,0,c
  8798  005A50  EF2C  F02D         	goto	u10011
  8799  005A54  EF2E  F02D         	goto	u10010
  8800  005A58                     u10011:
  8801  005A58  EF30  F02D         	goto	l7687
  8802  005A5C                     u10010:
  8803  005A5C  0E00               	movlw	0
  8804  005A5E  6E0E               	movwf	_isspace$3353^0,c
  8805  005A60                     l7687:
  8806  005A60  C00E  F008         	movff	_isspace$3353,?_isspace
  8807  005A64  6A09               	clrf	(?_isspace+1)^0,c
  8808  005A66  0012               	return		;funcret
  8809  005A68                     __end_of_isspace:
  8810                           	callstack 0
  8811                           
  8812 ;; *************** function _isdigit *****************
  8813 ;; Defined at:
  8814 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  c               2    7[COMRAM] int 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  2    7[COMRAM] int 
  8821 ;; Registers used:
  8822 ;;		wreg, status,2, status,0
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8830 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8831 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8832 ;;Total ram usage:        6 bytes
  8833 ;; Hardware stack levels used: 1
  8834 ;; Hardware stack levels required when called: 7
  8835 ;; This function calls:
  8836 ;;		Nothing
  8837 ;; This function is called by:
  8838 ;;		_vfpfcnvrt
  8839 ;;		_atoi
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           	psect	text37
  8844  005F7C                     __ptext37:
  8845                           	callstack 0
  8846  005F7C                     _isdigit:
  8847                           	callstack 18
  8848  005F7C  0ED0               	movlw	208
  8849  005F7E  6E0A               	movwf	??_isdigit^0,c
  8850  005F80  0EFF               	movlw	255
  8851  005F82  6E0B               	movwf	(??_isdigit+1)^0,c
  8852  005F84  C008  F00C         	movff	isdigit@c,??_isdigit+2
  8853  005F88  C009  F00D         	movff	isdigit@c+1,??_isdigit+3
  8854  005F8C  500A               	movf	??_isdigit^0,w,c
  8855  005F8E  260C               	addwf	(??_isdigit+2)^0,f,c
  8856  005F90  500B               	movf	(??_isdigit+1)^0,w,c
  8857  005F92  220D               	addwfc	(??_isdigit+3)^0,f,c
  8858  005F94  500D               	movf	(??_isdigit+3)^0,w,c
  8859  005F96  E10A               	bnz	u9980
  8860  005F98  0E0A               	movlw	10
  8861  005F9A  5C0C               	subwf	(??_isdigit+2)^0,w,c
  8862  005F9C  A0D8               	btfss	status,0,c
  8863  005F9E  EFD3  F02F         	goto	u9981
  8864  005FA2  EFD6  F02F         	goto	u9980
  8865  005FA6                     u9981:
  8866  005FA6  0E01               	movlw	1
  8867  005FA8  EFD7  F02F         	goto	u9990
  8868  005FAC                     u9980:
  8869  005FAC  0E00               	movlw	0
  8870  005FAE                     u9990:
  8871  005FAE  6E08               	movwf	?_isdigit^0,c
  8872  005FB0  6A09               	clrf	(?_isdigit+1)^0,c
  8873  005FB2  0012               	return		;funcret
  8874  005FB4                     __end_of_isdigit:
  8875                           	callstack 0
  8876                           
  8877 ;; *************** function _sendStringSerial4 *****************
  8878 ;; Defined at:
  8879 ;;		line 46 in file "serial_comm.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;  string          2    8[COMRAM] PTR unsigned char 
  8882 ;;		 -> colourclick_testing@buf(40), colourcards_testingRGBC@buf(30), 
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;		None
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;Total ram usage:        2 bytes
  8899 ;; Hardware stack levels used: 1
  8900 ;; Hardware stack levels required when called: 8
  8901 ;; This function calls:
  8902 ;;		_sendCharSerial4
  8903 ;; This function is called by:
  8904 ;;		_colourclick_testing
  8905 ;;		_colourcards_testingRGBC
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text38
  8910  005FB4                     __ptext38:
  8911                           	callstack 0
  8912  005FB4                     _sendStringSerial4:
  8913                           	callstack 20
  8914  005FB4                     
  8915                           ;serial_comm.c: 48:     while (*string != 0) {
  8916  005FB4  EFE5  F02F         	goto	l8395
  8917  005FB8                     l8391:
  8918                           
  8919                           ;serial_comm.c: 49:         sendCharSerial4(*string++);
  8920  005FB8  C009  FFD9         	movff	sendStringSerial4@string,fsr2l
  8921  005FBC  C00A  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8922  005FC0  50DF               	movf	indf2,w,c
  8923  005FC2  ECCA  F030         	call	_sendCharSerial4
  8924  005FC6  4A09               	infsnz	sendStringSerial4@string^0,f,c
  8925  005FC8  2A0A               	incf	(sendStringSerial4@string+1)^0,f,c
  8926  005FCA                     l8395:
  8927                           
  8928                           ;serial_comm.c: 48:     while (*string != 0) {
  8929  005FCA  C009  FFD9         	movff	sendStringSerial4@string,fsr2l
  8930  005FCE  C00A  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8931  005FD2  50DF               	movf	indf2,w,c
  8932  005FD4  A4D8               	btfss	status,2,c
  8933  005FD6  EFEF  F02F         	goto	u11231
  8934  005FDA  EFF1  F02F         	goto	u11230
  8935  005FDE                     u11231:
  8936  005FDE  EFDC  F02F         	goto	l8391
  8937  005FE2                     u11230:
  8938  005FE2  0012               	return		;funcret
  8939  005FE4                     __end_of_sendStringSerial4:
  8940                           	callstack 0
  8941                           
  8942 ;; *************** function _sendCharSerial4 *****************
  8943 ;; Defined at:
  8944 ;;		line 37 in file "serial_comm.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  charToSend      1    wreg     unsigned char 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  charToSend      1    7[COMRAM] unsigned char 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8962 ;;Total ram usage:        1 bytes
  8963 ;; Hardware stack levels used: 1
  8964 ;; Hardware stack levels required when called: 7
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_sendStringSerial4
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text39
  8973  006194                     __ptext39:
  8974                           	callstack 0
  8975  006194                     _sendCharSerial4:
  8976                           	callstack 20
  8977                           
  8978                           ;incstack = 0
  8979                           ;sendCharSerial4@charToSend stored from wreg
  8980  006194  6E08               	movwf	sendCharSerial4@charToSend^0,c
  8981  006196                     l523:
  8982  006196  010E               	movlb	14	; () banked
  8983  006198  A537               	btfss	55,2,b	;volatile
  8984  00619A  EFD1  F030         	goto	u11141
  8985  00619E  EFD3  F030         	goto	u11140
  8986  0061A2                     u11141:
  8987  0061A2  EFCB  F030         	goto	l523
  8988  0061A6                     u11140:
  8989  0061A6                     
  8990                           ; BSR set to: 14
  8991                           ;serial_comm.c: 39:     TX4REG = charToSend;
  8992  0061A6  C008  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8993  0061AA                     
  8994                           ; BSR set to: 14
  8995  0061AA  0012               	return		;funcret
  8996  0061AC                     __end_of_sendCharSerial4:
  8997                           	callstack 0
  8998                           
  8999 ;; *************** function _colourcards_readRGBC *****************
  9000 ;; Defined at:
  9001 ;;		line 12 in file "colour_cards.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  abs             2    6[BANK0 ] PTR struct .
  9004 ;;		 -> main@current(8), 
  9005 ;;  mL              2    8[BANK0 ] PTR struct .
  9006 ;;		 -> main@motorL(9), 
  9007 ;;  mR              2   10[BANK0 ] PTR struct .
  9008 ;;		 -> main@motorR(9), 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  rel            12   12[BANK0 ] struct .
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9020 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9021 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9023 ;;      Totals:         2      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9024 ;;Total ram usage:       20 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 12
  9027 ;; This function calls:
  9028 ;;		___flge
  9029 ;;		_colourcards_normaliseRGBC
  9030 ;;		_colourclick_readRGBC
  9031 ;;		_colourclick_readRGBC2
  9032 ;;		_forward
  9033 ;;		_reverse
  9034 ;;		_stop
  9035 ;;		_turnleft
  9036 ;;		_turnright
  9037 ;; This function is called by:
  9038 ;;		_main
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text40
  9043  001B12                     __ptext40:
  9044                           	callstack 0
  9045  001B12                     _colourcards_readRGBC:
  9046                           	callstack 18
  9047  001B12                     
  9048                           ;colour_cards.c: 12: void colourcards_readRGBC(RGBC_val *abs, DC_motor *mL, DC_motor *mR
      +                          );colour_cards.c: 13: {;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  9049  001B12  010E               	movlb	14	; () banked
  9050  001B14  9329               	bcf	41,1,b	;volatile
  9051  001B16                     
  9052                           ; BSR set to: 14
  9053                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  9054  001B16  C066  F013         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  9055  001B1A  C067  F014         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  9056  001B1E  EC87  F02C         	call	_colourclick_readRGBC	;wreg free
  9057                           
  9058                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  9059  001B22  C066  F02F         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9060  001B26  C067  F030         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9061  001B2A  0E6C               	movlw	low colourcards_readRGBC@rel
  9062  001B2C  6E31               	movwf	colourcards_normaliseRGBC@rel^0,c
  9063  001B2E  0E00               	movlw	high colourcards_readRGBC@rel
  9064  001B30  6E32               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9065  001B32  EC0C  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9066  001B36                     
  9067                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  9068  001B36  0E71               	movlw	113
  9069  001B38  6E2F               	movwf	___flge@ff1^0,c
  9070  001B3A  0E3D               	movlw	61
  9071  001B3C  6E30               	movwf	(___flge@ff1+1)^0,c
  9072  001B3E  0E0A               	movlw	10
  9073  001B40  6E31               	movwf	(___flge@ff1+2)^0,c
  9074  001B42  0E3F               	movlw	63
  9075  001B44  6E32               	movwf	(___flge@ff1+3)^0,c
  9076  001B46  C06C  F033         	movff	colourcards_readRGBC@rel,___flge@ff2
  9077  001B4A  C06D  F034         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9078  001B4E  C06E  F035         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9079  001B52  C06F  F036         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9080  001B56  EC29  F027         	call	___flge	;wreg free
  9081  001B5A  B0D8               	btfsc	status,0,c
  9082  001B5C  EFB2  F00D         	goto	u11641
  9083  001B60  EFB4  F00D         	goto	u11640
  9084  001B64                     u11641:
  9085  001B64  EF4A  F00E         	goto	l8739
  9086  001B68                     u11640:
  9087  001B68  C070  F02F         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  9088  001B6C  C071  F030         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  9089  001B70  C072  F031         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  9090  001B74  C073  F032         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  9091  001B78  0E48               	movlw	72
  9092  001B7A  6E33               	movwf	___flge@ff2^0,c
  9093  001B7C  0EE1               	movlw	225
  9094  001B7E  6E34               	movwf	(___flge@ff2+1)^0,c
  9095  001B80  0E7A               	movlw	122
  9096  001B82  6E35               	movwf	(___flge@ff2+2)^0,c
  9097  001B84  0E3E               	movlw	62
  9098  001B86  6E36               	movwf	(___flge@ff2+3)^0,c
  9099  001B88  EC29  F027         	call	___flge	;wreg free
  9100  001B8C  B0D8               	btfsc	status,0,c
  9101  001B8E  EFCB  F00D         	goto	u11651
  9102  001B92  EFCD  F00D         	goto	u11650
  9103  001B96                     u11651:
  9104  001B96  EF4A  F00E         	goto	l8739
  9105  001B9A                     u11650:
  9106  001B9A  C074  F02F         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  9107  001B9E  C075  F030         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  9108  001BA2  C076  F031         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  9109  001BA6  C077  F032         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  9110  001BAA  0EEC               	movlw	236
  9111  001BAC  6E33               	movwf	___flge@ff2^0,c
  9112  001BAE  0E51               	movlw	81
  9113  001BB0  6E34               	movwf	(___flge@ff2+1)^0,c
  9114  001BB2  0E38               	movlw	56
  9115  001BB4  6E35               	movwf	(___flge@ff2+2)^0,c
  9116  001BB6  0E3E               	movlw	62
  9117  001BB8  6E36               	movwf	(___flge@ff2+3)^0,c
  9118  001BBA  EC29  F027         	call	___flge	;wreg free
  9119  001BBE  B0D8               	btfsc	status,0,c
  9120  001BC0  EFE4  F00D         	goto	u11661
  9121  001BC4  EFE6  F00D         	goto	u11660
  9122  001BC8                     u11661:
  9123  001BC8  EF4A  F00E         	goto	l8739
  9124  001BCC                     u11660:
  9125  001BCC                     
  9126                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  9127  001BCC  C066  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  9128  001BD0  C067  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  9129  001BD4  0E03               	movlw	3
  9130  001BD6  6E17               	movwf	colourclick_readRGBC2@mode^0,c
  9131  001BD8  EC79  F023         	call	_colourclick_readRGBC2	;wreg free
  9132                           
  9133                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  9134  001BDC  C066  F02F         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9135  001BE0  C067  F030         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9136  001BE4  0E6C               	movlw	low colourcards_readRGBC@rel
  9137  001BE6  6E31               	movwf	colourcards_normaliseRGBC@rel^0,c
  9138  001BE8  0E00               	movlw	high colourcards_readRGBC@rel
  9139  001BEA  6E32               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9140  001BEC  EC0C  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9141  001BF0                     
  9142                           ;colour_cards.c: 27:         if (rel.B<0.56) {
  9143  001BF0  C074  F02F         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  9144  001BF4  C075  F030         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  9145  001BF8  C076  F031         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  9146  001BFC  C077  F032         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  9147  001C00  0E29               	movlw	41
  9148  001C02  6E33               	movwf	___flge@ff2^0,c
  9149  001C04  0E5C               	movlw	92
  9150  001C06  6E34               	movwf	(___flge@ff2+1)^0,c
  9151  001C08  0E0F               	movlw	15
  9152  001C0A  6E35               	movwf	(___flge@ff2+2)^0,c
  9153  001C0C  0E3F               	movlw	63
  9154  001C0E  6E36               	movwf	(___flge@ff2+3)^0,c
  9155  001C10  EC29  F027         	call	___flge	;wreg free
  9156  001C14  B0D8               	btfsc	status,0,c
  9157  001C16  EF0F  F00E         	goto	u11671
  9158  001C1A  EF11  F00E         	goto	u11670
  9159  001C1E                     u11671:
  9160  001C1E  EF2F  F00E         	goto	l8735
  9161  001C22                     u11670:
  9162  001C22                     
  9163                           ;colour_cards.c: 29:             turnright(mL, mR, 135);
  9164  001C22  C068  F060         	movff	colourcards_readRGBC@mL,turnright@mL
  9165  001C26  C069  F061         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9166  001C2A  C06A  F062         	movff	colourcards_readRGBC@mR,turnright@mR
  9167  001C2E  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9168  001C32  0E00               	movlw	0
  9169  001C34  0100               	movlb	0	; () banked
  9170  001C36  6F65               	movwf	(turnright@deg+1)& (0+255),b
  9171  001C38  0E87               	movlw	135
  9172  001C3A  6F64               	movwf	turnright@deg& (0+255),b
  9173  001C3C  EC24  F02E         	call	_turnright	;wreg free
  9174                           
  9175                           ;colour_cards.c: 30:             stop(mL, mR);
  9176  001C40  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9177  001C44  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9178  001C48  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9179  001C4C  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9180  001C50  ECB8  F02B         	call	_stop	;wreg free
  9181  001C54                     l8733:
  9182                           
  9183                           ;colour_cards.c: 31:             unknowncard_flag = 0;
  9184  001C54  0E00               	movlw	0
  9185  001C56  0100               	movlb	0	; () banked
  9186  001C58  6FF2               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9187                           
  9188                           ;colour_cards.c: 32:         } else {
  9189  001C5A  EF5A  F011         	goto	l8839
  9190  001C5E                     l8735:
  9191                           
  9192                           ;colour_cards.c: 34:             turnright(mL, mR, 90);
  9193  001C5E  C068  F060         	movff	colourcards_readRGBC@mL,turnright@mL
  9194  001C62  C069  F061         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9195  001C66  C06A  F062         	movff	colourcards_readRGBC@mR,turnright@mR
  9196  001C6A  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9197  001C6E  0E00               	movlw	0
  9198  001C70  0100               	movlb	0	; () banked
  9199  001C72  6F65               	movwf	(turnright@deg+1)& (0+255),b
  9200  001C74  0E5A               	movlw	90
  9201  001C76  6F64               	movwf	turnright@deg& (0+255),b
  9202  001C78  EC24  F02E         	call	_turnright	;wreg free
  9203                           
  9204                           ;colour_cards.c: 35:             stop(mL, mR);
  9205  001C7C  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9206  001C80  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9207  001C84  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9208  001C88  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9209  001C8C  ECB8  F02B         	call	_stop	;wreg free
  9210  001C90  EF2A  F00E         	goto	l8733
  9211  001C94                     l8739:
  9212  001C94  C06C  F02F         	movff	colourcards_readRGBC@rel,___flge@ff1
  9213  001C98  C06D  F030         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9214  001C9C  C06E  F031         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9215  001CA0  C06F  F032         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9216  001CA4  0EAE               	movlw	174
  9217  001CA6  6E33               	movwf	___flge@ff2^0,c
  9218  001CA8  0E47               	movlw	71
  9219  001CAA  6E34               	movwf	(___flge@ff2+1)^0,c
  9220  001CAC  0EE1               	movlw	225
  9221  001CAE  6E35               	movwf	(___flge@ff2+2)^0,c
  9222  001CB0  0E3E               	movlw	62
  9223  001CB2  6E36               	movwf	(___flge@ff2+3)^0,c
  9224  001CB4  EC29  F027         	call	___flge	;wreg free
  9225  001CB8  B0D8               	btfsc	status,0,c
  9226  001CBA  EF61  F00E         	goto	u11681
  9227  001CBE  EF63  F00E         	goto	u11680
  9228  001CC2                     u11681:
  9229  001CC2  EF5C  F00F         	goto	l8767
  9230  001CC6                     u11680:
  9231  001CC6  0E9A               	movlw	154
  9232  001CC8  6E2F               	movwf	___flge@ff1^0,c
  9233  001CCA  0E99               	movlw	153
  9234  001CCC  6E30               	movwf	(___flge@ff1+1)^0,c
  9235  001CCE  0E99               	movlw	153
  9236  001CD0  6E31               	movwf	(___flge@ff1+2)^0,c
  9237  001CD2  0E3E               	movlw	62
  9238  001CD4  6E32               	movwf	(___flge@ff1+3)^0,c
  9239  001CD6  C070  F033         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9240  001CDA  C071  F034         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9241  001CDE  C072  F035         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9242  001CE2  C073  F036         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9243  001CE6  EC29  F027         	call	___flge	;wreg free
  9244  001CEA  B0D8               	btfsc	status,0,c
  9245  001CEC  EF7A  F00E         	goto	u11691
  9246  001CF0  EF7C  F00E         	goto	u11690
  9247  001CF4                     u11691:
  9248  001CF4  EF5C  F00F         	goto	l8767
  9249  001CF8                     u11690:
  9250  001CF8  0E14               	movlw	20
  9251  001CFA  6E2F               	movwf	___flge@ff1^0,c
  9252  001CFC  0EAE               	movlw	174
  9253  001CFE  6E30               	movwf	(___flge@ff1+1)^0,c
  9254  001D00  0E47               	movlw	71
  9255  001D02  6E31               	movwf	(___flge@ff1+2)^0,c
  9256  001D04  0E3E               	movlw	62
  9257  001D06  6E32               	movwf	(___flge@ff1+3)^0,c
  9258  001D08  C074  F033         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9259  001D0C  C075  F034         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9260  001D10  C076  F035         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9261  001D14  C077  F036         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9262  001D18  EC29  F027         	call	___flge	;wreg free
  9263  001D1C  B0D8               	btfsc	status,0,c
  9264  001D1E  EF93  F00E         	goto	u11701
  9265  001D22  EF95  F00E         	goto	u11700
  9266  001D26                     u11701:
  9267  001D26  EF5C  F00F         	goto	l8767
  9268  001D2A                     u11700:
  9269  001D2A                     
  9270                           ;colour_cards.c: 41:         colourclick_readRGBC2(abs, 3);
  9271  001D2A  C066  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  9272  001D2E  C067  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  9273  001D32  0E03               	movlw	3
  9274  001D34  6E17               	movwf	colourclick_readRGBC2@mode^0,c
  9275  001D36  EC79  F023         	call	_colourclick_readRGBC2	;wreg free
  9276                           
  9277                           ;colour_cards.c: 42:         colourcards_normaliseRGBC(abs, &rel);
  9278  001D3A  C066  F02F         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9279  001D3E  C067  F030         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9280  001D42  0E6C               	movlw	low colourcards_readRGBC@rel
  9281  001D44  6E31               	movwf	colourcards_normaliseRGBC@rel^0,c
  9282  001D46  0E00               	movlw	high colourcards_readRGBC@rel
  9283  001D48  6E32               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9284  001D4A  EC0C  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9285  001D4E                     
  9286                           ;colour_cards.c: 43:         if ((rel.R<0.65) && (rel.B>0.67)) {
  9287  001D4E  C06C  F02F         	movff	colourcards_readRGBC@rel,___flge@ff1
  9288  001D52  C06D  F030         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9289  001D56  C06E  F031         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9290  001D5A  C06F  F032         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9291  001D5E  0E66               	movlw	102
  9292  001D60  6E33               	movwf	___flge@ff2^0,c
  9293  001D62  0E66               	movlw	102
  9294  001D64  6E34               	movwf	(___flge@ff2+1)^0,c
  9295  001D66  0E26               	movlw	38
  9296  001D68  6E35               	movwf	(___flge@ff2+2)^0,c
  9297  001D6A  0E3F               	movlw	63
  9298  001D6C  6E36               	movwf	(___flge@ff2+3)^0,c
  9299  001D6E  EC29  F027         	call	___flge	;wreg free
  9300  001D72  B0D8               	btfsc	status,0,c
  9301  001D74  EFBE  F00E         	goto	u11711
  9302  001D78  EFC0  F00E         	goto	u11710
  9303  001D7C                     u11711:
  9304  001D7C  EFF4  F00E         	goto	l8755
  9305  001D80                     u11710:
  9306  001D80  0E1F               	movlw	31
  9307  001D82  6E2F               	movwf	___flge@ff1^0,c
  9308  001D84  0E85               	movlw	133
  9309  001D86  6E30               	movwf	(___flge@ff1+1)^0,c
  9310  001D88  0E2B               	movlw	43
  9311  001D8A  6E31               	movwf	(___flge@ff1+2)^0,c
  9312  001D8C  0E3F               	movlw	63
  9313  001D8E  6E32               	movwf	(___flge@ff1+3)^0,c
  9314  001D90  C074  F033         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9315  001D94  C075  F034         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9316  001D98  C076  F035         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9317  001D9C  C077  F036         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9318  001DA0  EC29  F027         	call	___flge	;wreg free
  9319  001DA4  B0D8               	btfsc	status,0,c
  9320  001DA6  EFD7  F00E         	goto	u11721
  9321  001DAA  EFD9  F00E         	goto	u11720
  9322  001DAE                     u11721:
  9323  001DAE  EFF4  F00E         	goto	l8755
  9324  001DB2                     u11720:
  9325  001DB2                     
  9326                           ;colour_cards.c: 45:             turnright(mL, mR, 180);
  9327  001DB2  C068  F060         	movff	colourcards_readRGBC@mL,turnright@mL
  9328  001DB6  C069  F061         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9329  001DBA  C06A  F062         	movff	colourcards_readRGBC@mR,turnright@mR
  9330  001DBE  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9331  001DC2  0E00               	movlw	0
  9332  001DC4  0100               	movlb	0	; () banked
  9333  001DC6  6F65               	movwf	(turnright@deg+1)& (0+255),b
  9334  001DC8  0EB4               	movlw	180
  9335  001DCA  6F64               	movwf	turnright@deg& (0+255),b
  9336  001DCC  EC24  F02E         	call	_turnright	;wreg free
  9337                           
  9338                           ;colour_cards.c: 46:             stop(mL, mR);
  9339  001DD0  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9340  001DD4  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9341  001DD8  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9342  001DDC  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9343  001DE0  ECB8  F02B         	call	_stop	;wreg free
  9344  001DE4  EF2A  F00E         	goto	l8733
  9345  001DE8                     l8755:
  9346  001DE8  C06C  F02F         	movff	colourcards_readRGBC@rel,___flge@ff1
  9347  001DEC  C06D  F030         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9348  001DF0  C06E  F031         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9349  001DF4  C06F  F032         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9350  001DF8  0EEC               	movlw	236
  9351  001DFA  6E33               	movwf	___flge@ff2^0,c
  9352  001DFC  0E51               	movlw	81
  9353  001DFE  6E34               	movwf	(___flge@ff2+1)^0,c
  9354  001E00  0EB8               	movlw	184
  9355  001E02  6E35               	movwf	(___flge@ff2+2)^0,c
  9356  001E04  0E3D               	movlw	61
  9357  001E06  6E36               	movwf	(___flge@ff2+3)^0,c
  9358  001E08  EC29  F027         	call	___flge	;wreg free
  9359  001E0C  B0D8               	btfsc	status,0,c
  9360  001E0E  EF0B  F00F         	goto	u11731
  9361  001E12  EF0D  F00F         	goto	u11730
  9362  001E16                     u11731:
  9363  001E16  EF41  F00F         	goto	l8763
  9364  001E1A                     u11730:
  9365  001E1A  0E52               	movlw	82
  9366  001E1C  6E2F               	movwf	___flge@ff1^0,c
  9367  001E1E  0EB8               	movlw	184
  9368  001E20  6E30               	movwf	(___flge@ff1+1)^0,c
  9369  001E22  0E1E               	movlw	30
  9370  001E24  6E31               	movwf	(___flge@ff1+2)^0,c
  9371  001E26  0E3F               	movlw	63
  9372  001E28  6E32               	movwf	(___flge@ff1+3)^0,c
  9373  001E2A  C074  F033         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9374  001E2E  C075  F034         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9375  001E32  C076  F035         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9376  001E36  C077  F036         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9377  001E3A  EC29  F027         	call	___flge	;wreg free
  9378  001E3E  B0D8               	btfsc	status,0,c
  9379  001E40  EF24  F00F         	goto	u11741
  9380  001E44  EF26  F00F         	goto	u11740
  9381  001E48                     u11741:
  9382  001E48  EF41  F00F         	goto	l8763
  9383  001E4C                     u11740:
  9384  001E4C                     
  9385                           ;colour_cards.c: 50:             turnleft(mL, mR, 90);
  9386  001E4C  C068  F060         	movff	colourcards_readRGBC@mL,turnleft@mL
  9387  001E50  C069  F061         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9388  001E54  C06A  F062         	movff	colourcards_readRGBC@mR,turnleft@mR
  9389  001E58  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9390  001E5C  0E00               	movlw	0
  9391  001E5E  0100               	movlb	0	; () banked
  9392  001E60  6F65               	movwf	(turnleft@deg+1)& (0+255),b
  9393  001E62  0E5A               	movlw	90
  9394  001E64  6F64               	movwf	turnleft@deg& (0+255),b
  9395  001E66  EC4C  F02E         	call	_turnleft	;wreg free
  9396                           
  9397                           ;colour_cards.c: 51:             stop(mL, mR);
  9398  001E6A  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9399  001E6E  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9400  001E72  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9401  001E76  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9402  001E7A  ECB8  F02B         	call	_stop	;wreg free
  9403  001E7E  EF2A  F00E         	goto	l8733
  9404  001E82                     l8763:
  9405                           
  9406                           ;colour_cards.c: 55:             turnleft(mL, mR, 135);
  9407  001E82  C068  F060         	movff	colourcards_readRGBC@mL,turnleft@mL
  9408  001E86  C069  F061         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9409  001E8A  C06A  F062         	movff	colourcards_readRGBC@mR,turnleft@mR
  9410  001E8E  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9411  001E92  0E00               	movlw	0
  9412  001E94  0100               	movlb	0	; () banked
  9413  001E96  6F65               	movwf	(turnleft@deg+1)& (0+255),b
  9414  001E98  0E87               	movlw	135
  9415  001E9A  6F64               	movwf	turnleft@deg& (0+255),b
  9416  001E9C  EC4C  F02E         	call	_turnleft	;wreg free
  9417                           
  9418                           ;colour_cards.c: 56:             stop(mL, mR);
  9419  001EA0  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9420  001EA4  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9421  001EA8  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9422  001EAC  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9423  001EB0  ECB8  F02B         	call	_stop	;wreg free
  9424  001EB4  EF2A  F00E         	goto	l8733
  9425  001EB8                     l8767:
  9426  001EB8  0E48               	movlw	72
  9427  001EBA  6E2F               	movwf	___flge@ff1^0,c
  9428  001EBC  0EE1               	movlw	225
  9429  001EBE  6E30               	movwf	(___flge@ff1+1)^0,c
  9430  001EC0  0EFA               	movlw	250
  9431  001EC2  6E31               	movwf	(___flge@ff1+2)^0,c
  9432  001EC4  0E3E               	movlw	62
  9433  001EC6  6E32               	movwf	(___flge@ff1+3)^0,c
  9434  001EC8  C06C  F033         	movff	colourcards_readRGBC@rel,___flge@ff2
  9435  001ECC  C06D  F034         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9436  001ED0  C06E  F035         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9437  001ED4  C06F  F036         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9438  001ED8  EC29  F027         	call	___flge	;wreg free
  9439  001EDC  B0D8               	btfsc	status,0,c
  9440  001EDE  EF73  F00F         	goto	u11751
  9441  001EE2  EF75  F00F         	goto	u11750
  9442  001EE6                     u11751:
  9443  001EE6  EFE2  F00F         	goto	l8783
  9444  001EEA                     u11750:
  9445  001EEA  0E85               	movlw	133
  9446  001EEC  6E2F               	movwf	___flge@ff1^0,c
  9447  001EEE  0EEB               	movlw	235
  9448  001EF0  6E30               	movwf	(___flge@ff1+1)^0,c
  9449  001EF2  0E91               	movlw	145
  9450  001EF4  6E31               	movwf	(___flge@ff1+2)^0,c
  9451  001EF6  0E3E               	movlw	62
  9452  001EF8  6E32               	movwf	(___flge@ff1+3)^0,c
  9453  001EFA  C070  F033         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9454  001EFE  C071  F034         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9455  001F02  C072  F035         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9456  001F06  C073  F036         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9457  001F0A  EC29  F027         	call	___flge	;wreg free
  9458  001F0E  B0D8               	btfsc	status,0,c
  9459  001F10  EF8C  F00F         	goto	u11761
  9460  001F14  EF8E  F00F         	goto	u11760
  9461  001F18                     u11761:
  9462  001F18  EFE2  F00F         	goto	l8783
  9463  001F1C                     u11760:
  9464  001F1C  0EEC               	movlw	236
  9465  001F1E  6E2F               	movwf	___flge@ff1^0,c
  9466  001F20  0E51               	movlw	81
  9467  001F22  6E30               	movwf	(___flge@ff1+1)^0,c
  9468  001F24  0E38               	movlw	56
  9469  001F26  6E31               	movwf	(___flge@ff1+2)^0,c
  9470  001F28  0E3E               	movlw	62
  9471  001F2A  6E32               	movwf	(___flge@ff1+3)^0,c
  9472  001F2C  C074  F033         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9473  001F30  C075  F034         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9474  001F34  C076  F035         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9475  001F38  C077  F036         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9476  001F3C  EC29  F027         	call	___flge	;wreg free
  9477  001F40  B0D8               	btfsc	status,0,c
  9478  001F42  EFA5  F00F         	goto	u11771
  9479  001F46  EFA7  F00F         	goto	u11770
  9480  001F4A                     u11771:
  9481  001F4A  EFE2  F00F         	goto	l8783
  9482  001F4E                     u11770:
  9483  001F4E                     
  9484                           ;colour_cards.c: 63:         reverse(mL, mR);
  9485  001F4E  C068  F021         	movff	colourcards_readRGBC@mL,reverse@mL
  9486  001F52  C069  F022         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9487  001F56  C06A  F023         	movff	colourcards_readRGBC@mR,reverse@mR
  9488  001F5A  C06B  F024         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9489  001F5E  EC2A  F02B         	call	_reverse	;wreg free
  9490                           
  9491                           ;colour_cards.c: 64:         stop(mL, mR);
  9492  001F62  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9493  001F66  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9494  001F6A  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9495  001F6E  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9496  001F72  ECB8  F02B         	call	_stop	;wreg free
  9497  001F76                     
  9498                           ;colour_cards.c: 65:         _delay((unsigned long)((100)*(64000000/4000.0)));
  9499  001F76  0E09               	movlw	9
  9500  001F78  6E4D               	movwf	(??_colourcards_readRGBC+1)^0,c
  9501  001F7A  0E1E               	movlw	30
  9502  001F7C  6E4C               	movwf	??_colourcards_readRGBC^0,c
  9503  001F7E  0EE4               	movlw	228
  9504  001F80                     u12397:
  9505  001F80  2EE8               	decfsz	wreg,f,c
  9506  001F82  D7FE               	bra	u12397
  9507  001F84  2E4C               	decfsz	??_colourcards_readRGBC^0,f,c
  9508  001F86  D7FC               	bra	u12397
  9509  001F88  2E4D               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9510  001F8A  D7FA               	bra	u12397
  9511  001F8C  D000               	nop2	
  9512  001F8E                     
  9513                           ;colour_cards.c: 66:         turnright(mL, mR, 90);
  9514  001F8E  C068  F060         	movff	colourcards_readRGBC@mL,turnright@mL
  9515  001F92  C069  F061         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9516  001F96  C06A  F062         	movff	colourcards_readRGBC@mR,turnright@mR
  9517  001F9A  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9518  001F9E  0E00               	movlw	0
  9519  001FA0  0100               	movlb	0	; () banked
  9520  001FA2  6F65               	movwf	(turnright@deg+1)& (0+255),b
  9521  001FA4  0E5A               	movlw	90
  9522  001FA6  6F64               	movwf	turnright@deg& (0+255),b
  9523  001FA8  EC24  F02E         	call	_turnright	;wreg free
  9524  001FAC                     l8779:
  9525                           
  9526                           ;colour_cards.c: 67:         stop(mL, mR);
  9527  001FAC  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9528  001FB0  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9529  001FB4  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9530  001FB8  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9531  001FBC  ECB8  F02B         	call	_stop	;wreg free
  9532  001FC0  EF2A  F00E         	goto	l8733
  9533  001FC4                     l8783:
  9534  001FC4  0E48               	movlw	72
  9535  001FC6  6E2F               	movwf	___flge@ff1^0,c
  9536  001FC8  0EE1               	movlw	225
  9537  001FCA  6E30               	movwf	(___flge@ff1+1)^0,c
  9538  001FCC  0EFA               	movlw	250
  9539  001FCE  6E31               	movwf	(___flge@ff1+2)^0,c
  9540  001FD0  0E3E               	movlw	62
  9541  001FD2  6E32               	movwf	(___flge@ff1+3)^0,c
  9542  001FD4  C06C  F033         	movff	colourcards_readRGBC@rel,___flge@ff2
  9543  001FD8  C06D  F034         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9544  001FDC  C06E  F035         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9545  001FE0  C06F  F036         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9546  001FE4  EC29  F027         	call	___flge	;wreg free
  9547  001FE8  B0D8               	btfsc	status,0,c
  9548  001FEA  EFF9  F00F         	goto	u11781
  9549  001FEE  EFFB  F00F         	goto	u11780
  9550  001FF2                     u11781:
  9551  001FF2  EF5E  F010         	goto	l8799
  9552  001FF6                     u11780:
  9553  001FF6  C070  F02F         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  9554  001FFA  C071  F030         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  9555  001FFE  C072  F031         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  9556  002002  C073  F032         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  9557  002006  0ECD               	movlw	205
  9558  002008  6E33               	movwf	___flge@ff2^0,c
  9559  00200A  0ECC               	movlw	204
  9560  00200C  6E34               	movwf	(___flge@ff2+1)^0,c
  9561  00200E  0E8C               	movlw	140
  9562  002010  6E35               	movwf	(___flge@ff2+2)^0,c
  9563  002012  0E3E               	movlw	62
  9564  002014  6E36               	movwf	(___flge@ff2+3)^0,c
  9565  002016  EC29  F027         	call	___flge	;wreg free
  9566  00201A  B0D8               	btfsc	status,0,c
  9567  00201C  EF12  F010         	goto	u11791
  9568  002020  EF14  F010         	goto	u11790
  9569  002024                     u11791:
  9570  002024  EF5E  F010         	goto	l8799
  9571  002028                     u11790:
  9572  002028  0E14               	movlw	20
  9573  00202A  6E2F               	movwf	___flge@ff1^0,c
  9574  00202C  0EAE               	movlw	174
  9575  00202E  6E30               	movwf	(___flge@ff1+1)^0,c
  9576  002030  0E47               	movlw	71
  9577  002032  6E31               	movwf	(___flge@ff1+2)^0,c
  9578  002034  0E3E               	movlw	62
  9579  002036  6E32               	movwf	(___flge@ff1+3)^0,c
  9580  002038  C074  F033         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9581  00203C  C075  F034         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9582  002040  C076  F035         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9583  002044  C077  F036         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9584  002048  EC29  F027         	call	___flge	;wreg free
  9585  00204C  B0D8               	btfsc	status,0,c
  9586  00204E  EF2B  F010         	goto	u11801
  9587  002052  EF2D  F010         	goto	u11800
  9588  002056                     u11801:
  9589  002056  EF5E  F010         	goto	l8799
  9590  00205A                     u11800:
  9591  00205A                     
  9592                           ;colour_cards.c: 72:         reverse(mL, mR);
  9593  00205A  C068  F021         	movff	colourcards_readRGBC@mL,reverse@mL
  9594  00205E  C069  F022         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9595  002062  C06A  F023         	movff	colourcards_readRGBC@mR,reverse@mR
  9596  002066  C06B  F024         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9597  00206A  EC2A  F02B         	call	_reverse	;wreg free
  9598                           
  9599                           ;colour_cards.c: 73:         stop(mL, mR);
  9600  00206E  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9601  002072  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9602  002076  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9603  00207A  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9604  00207E  ECB8  F02B         	call	_stop	;wreg free
  9605  002082                     
  9606                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  9607  002082  0E09               	movlw	9
  9608  002084  6E4D               	movwf	(??_colourcards_readRGBC+1)^0,c
  9609  002086  0E1E               	movlw	30
  9610  002088  6E4C               	movwf	??_colourcards_readRGBC^0,c
  9611  00208A  0EE4               	movlw	228
  9612  00208C                     u12407:
  9613  00208C  2EE8               	decfsz	wreg,f,c
  9614  00208E  D7FE               	bra	u12407
  9615  002090  2E4C               	decfsz	??_colourcards_readRGBC^0,f,c
  9616  002092  D7FC               	bra	u12407
  9617  002094  2E4D               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9618  002096  D7FA               	bra	u12407
  9619  002098  D000               	nop2	
  9620  00209A                     
  9621                           ;colour_cards.c: 75:         turnleft(mL, mR, 90);
  9622  00209A  C068  F060         	movff	colourcards_readRGBC@mL,turnleft@mL
  9623  00209E  C069  F061         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9624  0020A2  C06A  F062         	movff	colourcards_readRGBC@mR,turnleft@mR
  9625  0020A6  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9626  0020AA  0E00               	movlw	0
  9627  0020AC  0100               	movlb	0	; () banked
  9628  0020AE  6F65               	movwf	(turnleft@deg+1)& (0+255),b
  9629  0020B0  0E5A               	movlw	90
  9630  0020B2  6F64               	movwf	turnleft@deg& (0+255),b
  9631  0020B4  EC4C  F02E         	call	_turnleft	;wreg free
  9632  0020B8  EFD6  F00F         	goto	l8779
  9633  0020BC                     l8799:
  9634  0020BC  C06C  F02F         	movff	colourcards_readRGBC@rel,___flge@ff1
  9635  0020C0  C06D  F030         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9636  0020C4  C06E  F031         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9637  0020C8  C06F  F032         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9638  0020CC  0E1F               	movlw	31
  9639  0020CE  6E33               	movwf	___flge@ff2^0,c
  9640  0020D0  0E85               	movlw	133
  9641  0020D2  6E34               	movwf	(___flge@ff2+1)^0,c
  9642  0020D4  0EEB               	movlw	235
  9643  0020D6  6E35               	movwf	(___flge@ff2+2)^0,c
  9644  0020D8  0E3E               	movlw	62
  9645  0020DA  6E36               	movwf	(___flge@ff2+3)^0,c
  9646  0020DC  EC29  F027         	call	___flge	;wreg free
  9647  0020E0  B0D8               	btfsc	status,0,c
  9648  0020E2  EF75  F010         	goto	u11811
  9649  0020E6  EF77  F010         	goto	u11810
  9650  0020EA                     u11811:
  9651  0020EA  EFC9  F010         	goto	l8811
  9652  0020EE                     u11810:
  9653  0020EE  0E3D               	movlw	61
  9654  0020F0  6E2F               	movwf	___flge@ff1^0,c
  9655  0020F2  0E0A               	movlw	10
  9656  0020F4  6E30               	movwf	(___flge@ff1+1)^0,c
  9657  0020F6  0E97               	movlw	151
  9658  0020F8  6E31               	movwf	(___flge@ff1+2)^0,c
  9659  0020FA  0E3E               	movlw	62
  9660  0020FC  6E32               	movwf	(___flge@ff1+3)^0,c
  9661  0020FE  C070  F033         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9662  002102  C071  F034         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9663  002106  C072  F035         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9664  00210A  C073  F036         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9665  00210E  EC29  F027         	call	___flge	;wreg free
  9666  002112  B0D8               	btfsc	status,0,c
  9667  002114  EF8E  F010         	goto	u11821
  9668  002118  EF90  F010         	goto	u11820
  9669  00211C                     u11821:
  9670  00211C  EFC9  F010         	goto	l8811
  9671  002120                     u11820:
  9672  002120  0E3D               	movlw	61
  9673  002122  6E2F               	movwf	___flge@ff1^0,c
  9674  002124  0E0A               	movlw	10
  9675  002126  6E30               	movwf	(___flge@ff1+1)^0,c
  9676  002128  0E57               	movlw	87
  9677  00212A  6E31               	movwf	(___flge@ff1+2)^0,c
  9678  00212C  0E3E               	movlw	62
  9679  00212E  6E32               	movwf	(___flge@ff1+3)^0,c
  9680  002130  C074  F033         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9681  002134  C075  F034         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9682  002138  C076  F035         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9683  00213C  C077  F036         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9684  002140  EC29  F027         	call	___flge	;wreg free
  9685  002144  B0D8               	btfsc	status,0,c
  9686  002146  EFA7  F010         	goto	u11831
  9687  00214A  EFA9  F010         	goto	u11830
  9688  00214E                     u11831:
  9689  00214E  EFC9  F010         	goto	l8811
  9690  002152                     u11830:
  9691  002152                     
  9692                           ;colour_cards.c: 81:         turnright(mL, mR, 180);
  9693  002152  C068  F060         	movff	colourcards_readRGBC@mL,turnright@mL
  9694  002156  C069  F061         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9695  00215A  C06A  F062         	movff	colourcards_readRGBC@mR,turnright@mR
  9696  00215E  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9697  002162  0E00               	movlw	0
  9698  002164  0100               	movlb	0	; () banked
  9699  002166  6F65               	movwf	(turnright@deg+1)& (0+255),b
  9700  002168  0EB4               	movlw	180
  9701  00216A  6F64               	movwf	turnright@deg& (0+255),b
  9702  00216C  EC24  F02E         	call	_turnright	;wreg free
  9703                           
  9704                           ;colour_cards.c: 82:         stop(mL, mR);
  9705  002170  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9706  002174  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9707  002178  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9708  00217C  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9709  002180  ECB8  F02B         	call	_stop	;wreg free
  9710  002184                     
  9711                           ;colour_cards.c: 83:         unknowncard_flag = 0;
  9712  002184  0E00               	movlw	0
  9713  002186  0100               	movlb	0	; () banked
  9714  002188  6FF2               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9715  00218A                     
  9716                           ; BSR set to: 0
  9717                           ;colour_cards.c: 84:         returnhome_flag = 1;
  9718  00218A  0E01               	movlw	1
  9719  00218C  6FF1               	movwf	_returnhome_flag& (0+255),b	;volatile
  9720                           
  9721                           ;colour_cards.c: 86:     } else {
  9722  00218E  EF5A  F011         	goto	l8839
  9723  002192                     l8811:
  9724                           
  9725                           ;colour_cards.c: 88:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  9726  002192  0E52               	movlw	82
  9727  002194  6E4D               	movwf	(??_colourcards_readRGBC+1)^0,c
  9728  002196  0E2B               	movlw	43
  9729  002198  6E4C               	movwf	??_colourcards_readRGBC^0,c
  9730  00219A  0E00               	movlw	0
  9731  00219C                     u12417:
  9732  00219C  2EE8               	decfsz	wreg,f,c
  9733  00219E  D7FE               	bra	u12417
  9734  0021A0  2E4C               	decfsz	??_colourcards_readRGBC^0,f,c
  9735  0021A2  D7FC               	bra	u12417
  9736  0021A4  2E4D               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9737  0021A6  D7FA               	bra	u12417
  9738  0021A8  D000               	nop2	
  9739  0021AA                     
  9740                           ;colour_cards.c: 89:         forward(mL, mR);
  9741  0021AA  C068  F021         	movff	colourcards_readRGBC@mL,forward@mL
  9742  0021AE  C069  F022         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  9743  0021B2  C06A  F023         	movff	colourcards_readRGBC@mR,forward@mR
  9744  0021B6  C06B  F024         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  9745  0021BA  EC71  F02B         	call	_forward	;wreg free
  9746  0021BE                     
  9747                           ;colour_cards.c: 90:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9748  0021BE  0ED0               	movlw	208
  9749  0021C0  6E4C               	movwf	??_colourcards_readRGBC^0,c
  9750  0021C2  0ECA               	movlw	202
  9751  0021C4                     u12427:
  9752  0021C4  2EE8               	decfsz	wreg,f,c
  9753  0021C6  D7FE               	bra	u12427
  9754  0021C8  2E4C               	decfsz	??_colourcards_readRGBC^0,f,c
  9755  0021CA  D7FC               	bra	u12427
  9756                           
  9757                           ;colour_cards.c: 91:         stop(mL, mR);
  9758  0021CC  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9759  0021D0  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9760  0021D4  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9761  0021D8  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9762  0021DC  ECB8  F02B         	call	_stop	;wreg free
  9763  0021E0                     
  9764                           ;colour_cards.c: 92:         colourclick_readRGBC(abs);
  9765  0021E0  C066  F013         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  9766  0021E4  C067  F014         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  9767  0021E8  EC87  F02C         	call	_colourclick_readRGBC	;wreg free
  9768  0021EC                     
  9769                           ;colour_cards.c: 93:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrupt
      +                          s_upperbound)) {
  9770  0021EC  0100               	movlb	0	; () banked
  9771  0021EE  EE20 F006          	lfsr	2,6
  9772  0021F2  5166               	movf	colourcards_readRGBC@abs& (0+255),w,b
  9773  0021F4  26D9               	addwf	fsr2l,f,c
  9774  0021F6  5167               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  9775  0021F8  22DA               	addwfc	fsr2h,f,c
  9776  0021FA  5052               	movf	_interrupts_lowerbound^0,w,c	;volatile
  9777  0021FC  5CDE               	subwf	postinc2,w,c
  9778  0021FE  5053               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  9779  002200  58DE               	subwfb	postinc2,w,c
  9780  002202  A0D8               	btfss	status,0,c
  9781  002204  EF06  F011         	goto	u11841
  9782  002208  EF08  F011         	goto	u11840
  9783  00220C                     u11841:
  9784  00220C  EF19  F011         	goto	l8823
  9785  002210                     u11840:
  9786  002210                     
  9787                           ; BSR set to: 0
  9788  002210  EE20 F006          	lfsr	2,6
  9789  002214  5166               	movf	colourcards_readRGBC@abs& (0+255),w,b
  9790  002216  26D9               	addwf	fsr2l,f,c
  9791  002218  5167               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  9792  00221A  22DA               	addwfc	fsr2h,f,c
  9793  00221C  50DE               	movf	postinc2,w,c
  9794  00221E  5C55               	subwf	_interrupts_upperbound^0,w,c	;volatile
  9795  002220  50DE               	movf	postinc2,w,c
  9796  002222  5856               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  9797  002224  B0D8               	btfsc	status,0,c
  9798  002226  EF17  F011         	goto	u11851
  9799  00222A  EF19  F011         	goto	u11850
  9800  00222E                     u11851:
  9801  00222E  EF4E  F011         	goto	l8835
  9802  002232                     u11850:
  9803  002232                     l8823:
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;colour_cards.c: 94:             if (unknowncard_flag<3) {
  9807  002232  0E03               	movlw	3
  9808  002234  61F2               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  9809  002236  EF1F  F011         	goto	u11861
  9810  00223A  EF21  F011         	goto	u11860
  9811  00223E                     u11861:
  9812  00223E  EF27  F011         	goto	l216
  9813  002242                     u11860:
  9814  002242                     
  9815                           ; BSR set to: 0
  9816                           ;colour_cards.c: 95:                 PIR0bits.INT1IF = 1;
  9817  002242  010E               	movlb	14	; () banked
  9818  002244  8333               	bsf	51,1,b	;volatile
  9819  002246                     
  9820                           ; BSR set to: 14
  9821                           ;colour_cards.c: 96:                 unknowncard_flag++;
  9822  002246  0100               	movlb	0	; () banked
  9823  002248  2BF2               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  9824                           
  9825                           ;colour_cards.c: 97:             } else {
  9826  00224A  EF5A  F011         	goto	l8839
  9827  00224E                     l216:
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;colour_cards.c: 98:                 LATHbits.LATH3 = 1;
  9831  00224E  8680               	bsf	128,3,c	;volatile
  9832  002250                     
  9833                           ; BSR set to: 0
  9834                           ;colour_cards.c: 99:                 turnright(mL, mR, 180);
  9835  002250  C068  F060         	movff	colourcards_readRGBC@mL,turnright@mL
  9836  002254  C069  F061         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9837  002258  C06A  F062         	movff	colourcards_readRGBC@mR,turnright@mR
  9838  00225C  C06B  F063         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9839  002260  0E00               	movlw	0
  9840  002262  6F65               	movwf	(turnright@deg+1)& (0+255),b
  9841  002264  0EB4               	movlw	180
  9842  002266  6F64               	movwf	turnright@deg& (0+255),b
  9843  002268  EC24  F02E         	call	_turnright	;wreg free
  9844                           
  9845                           ;colour_cards.c: 100:                 stop(mL, mR);
  9846  00226C  C068  F021         	movff	colourcards_readRGBC@mL,stop@mL
  9847  002270  C069  F022         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9848  002274  C06A  F023         	movff	colourcards_readRGBC@mR,stop@mR
  9849  002278  C06B  F024         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9850  00227C  ECB8  F02B         	call	_stop	;wreg free
  9851  002280                     
  9852                           ;colour_cards.c: 101:                 returnhome_flag = !returnhome_flag;
  9853  002280  0100               	movlb	0	; () banked
  9854  002282  51F1               	movf	_returnhome_flag& (0+255),w,b	;volatile
  9855  002284  B4D8               	btfsc	status,2,c
  9856  002286  EF47  F011         	goto	u11871
  9857  00228A  EF4A  F011         	goto	u11870
  9858  00228E                     u11871:
  9859  00228E  0E01               	movlw	1
  9860  002290  EF4B  F011         	goto	u11880
  9861  002294                     u11870:
  9862  002294  0E00               	movlw	0
  9863  002296                     u11880:
  9864  002296  6FF1               	movwf	_returnhome_flag& (0+255),b	;volatile
  9865  002298  EF2A  F00E         	goto	l8733
  9866  00229C                     l8835:
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;colour_cards.c: 105:             forward(mL, mR);
  9870  00229C  C068  F021         	movff	colourcards_readRGBC@mL,forward@mL
  9871  0022A0  C069  F022         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  9872  0022A4  C06A  F023         	movff	colourcards_readRGBC@mR,forward@mR
  9873  0022A8  C06B  F024         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  9874  0022AC  EC71  F02B         	call	_forward	;wreg free
  9875  0022B0  EF2A  F00E         	goto	l8733
  9876  0022B4                     l8839:
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;colour_cards.c: 110:     PIE0bits.INT1IE = 1;
  9880  0022B4  010E               	movlb	14	; () banked
  9881  0022B6  8329               	bsf	41,1,b	;volatile
  9882  0022B8                     
  9883                           ; BSR set to: 14
  9884  0022B8  0012               	return		;funcret
  9885  0022BA                     __end_of_colourcards_readRGBC:
  9886                           	callstack 0
  9887                           
  9888 ;; *************** function _reverse *****************
  9889 ;; Defined at:
  9890 ;;		line 108 in file "DC_motors.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  mL              2   32[COMRAM] PTR struct .
  9893 ;;		 -> main@motorL(9), 
  9894 ;;  mR              2   34[COMRAM] PTR struct .
  9895 ;;		 -> main@motorR(9), 
  9896 ;; Auto vars:     Size  Location     Type
  9897 ;;		None
  9898 ;; Return value:  Size  Location     Type
  9899 ;;                  1    wreg      void 
  9900 ;; Registers used:
  9901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9902 ;; Tracked objects:
  9903 ;;		On entry : 0/0
  9904 ;;		On exit  : 0/0
  9905 ;;		Unchanged: 0/0
  9906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9910 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;Total ram usage:        5 bytes
  9912 ;; Hardware stack levels used: 1
  9913 ;; Hardware stack levels required when called: 9
  9914 ;; This function calls:
  9915 ;;		_DCmotors_setPWM
  9916 ;; This function is called by:
  9917 ;;		_colourcards_readRGBC
  9918 ;;		_DCmotors_testing
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           	psect	text41
  9923  005654                     __ptext41:
  9924                           	callstack 0
  9925  005654                     _reverse:
  9926                           	callstack 20
  9927  005654                     
  9928                           ;DC_motors.c: 108: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 109: {;DC_motor
      +                          s.c: 111:     mL->direction = 0;
  9929  005654  EE20 F001          	lfsr	2,1
  9930  005658  5021               	movf	reverse@mL^0,w,c
  9931  00565A  26D9               	addwf	fsr2l,f,c
  9932  00565C  5022               	movf	(reverse@mL+1)^0,w,c
  9933  00565E  22DA               	addwfc	fsr2h,f,c
  9934  005660  0E00               	movlw	0
  9935  005662  6EDF               	movwf	indf2,c
  9936                           
  9937                           ;DC_motors.c: 112:     mR->direction = 0;
  9938  005664  EE20 F001          	lfsr	2,1
  9939  005668  5023               	movf	reverse@mR^0,w,c
  9940  00566A  26D9               	addwf	fsr2l,f,c
  9941  00566C  5024               	movf	(reverse@mR+1)^0,w,c
  9942  00566E  22DA               	addwfc	fsr2h,f,c
  9943  005670  0E00               	movlw	0
  9944  005672  6EDF               	movwf	indf2,c
  9945                           
  9946                           ;DC_motors.c: 115:     while((mL->power < 40) && (mR->power < 40)){
  9947  005674  EF58  F02B         	goto	l8583
  9948  005678                     l8575:
  9949                           
  9950                           ;DC_motors.c: 116:         mL->power += 10;
  9951  005678  C021  FFD9         	movff	reverse@mL,fsr2l
  9952  00567C  C022  FFDA         	movff	reverse@mL+1,fsr2h
  9953  005680  0E0A               	movlw	10
  9954  005682  26DF               	addwf	indf2,f,c
  9955                           
  9956                           ;DC_motors.c: 117:         mR->power += 10;
  9957  005684  C023  FFD9         	movff	reverse@mR,fsr2l
  9958  005688  C024  FFDA         	movff	reverse@mR+1,fsr2h
  9959  00568C  0E0A               	movlw	10
  9960  00568E  26DF               	addwf	indf2,f,c
  9961  005690                     
  9962                           ;DC_motors.c: 119:         DCmotors_setPWM(mL);
  9963  005690  C021  F016         	movff	reverse@mL,DCmotors_setPWM@m
  9964  005694  C022  F017         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  9965  005698  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
  9966  00569C                     
  9967                           ;DC_motors.c: 120:         DCmotors_setPWM(mR);
  9968  00569C  C023  F016         	movff	reverse@mR,DCmotors_setPWM@m
  9969  0056A0  C024  F017         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  9970  0056A4  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
  9971  0056A8                     
  9972                           ;DC_motors.c: 121:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  9973  0056A8  0EA0               	movlw	160
  9974  0056AA                     u12437:
  9975  0056AA  D000               	nop2	
  9976  0056AC  2EE8               	decfsz	wreg,f,c
  9977  0056AE  D7FD               	bra	u12437
  9978  0056B0                     l8583:
  9979                           
  9980                           ;DC_motors.c: 115:     while((mL->power < 40) && (mR->power < 40)){
  9981  0056B0  C021  FFD9         	movff	reverse@mL,fsr2l
  9982  0056B4  C022  FFDA         	movff	reverse@mL+1,fsr2h
  9983  0056B8  0E28               	movlw	40
  9984  0056BA  60DF               	cpfslt	indf2,c
  9985  0056BC  EF62  F02B         	goto	u11471
  9986  0056C0  EF64  F02B         	goto	u11470
  9987  0056C4                     u11471:
  9988  0056C4  EF70  F02B         	goto	l650
  9989  0056C8                     u11470:
  9990  0056C8  C023  FFD9         	movff	reverse@mR,fsr2l
  9991  0056CC  C024  FFDA         	movff	reverse@mR+1,fsr2h
  9992  0056D0  0E27               	movlw	39
  9993  0056D2  64DF               	cpfsgt	indf2,c
  9994  0056D4  EF6E  F02B         	goto	u11481
  9995  0056D8  EF70  F02B         	goto	u11480
  9996  0056DC                     u11481:
  9997  0056DC  EF3C  F02B         	goto	l8575
  9998  0056E0                     u11480:
  9999  0056E0                     l650:
 10000  0056E0  0012               	return		;funcret
 10001  0056E2                     __end_of_reverse:
 10002                           	callstack 0
 10003                           
 10004 ;; *************** function _forward *****************
 10005 ;; Defined at:
 10006 ;;		line 88 in file "DC_motors.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;  mL              2   32[COMRAM] PTR struct .
 10009 ;;		 -> main@motorL(9), 
 10010 ;;  mR              2   34[COMRAM] PTR struct .
 10011 ;;		 -> main@motorR(9), 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10026 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10027 ;;Total ram usage:        5 bytes
 10028 ;; Hardware stack levels used: 1
 10029 ;; Hardware stack levels required when called: 9
 10030 ;; This function calls:
 10031 ;;		_DCmotors_setPWM
 10032 ;; This function is called by:
 10033 ;;		_main
 10034 ;;		_colourcards_readRGBC
 10035 ;;		_DCmotors_testing
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text42
 10040  0056E2                     __ptext42:
 10041                           	callstack 0
 10042  0056E2                     _forward:
 10043                           	callstack 21
 10044  0056E2                     
 10045                           ;DC_motors.c: 88: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 89: {;DC_motors.
      +                          c: 90:     mL->direction = 1;
 10046  0056E2  EE20 F001          	lfsr	2,1
 10047  0056E6  5021               	movf	forward@mL^0,w,c
 10048  0056E8  26D9               	addwf	fsr2l,f,c
 10049  0056EA  5022               	movf	(forward@mL+1)^0,w,c
 10050  0056EC  22DA               	addwfc	fsr2h,f,c
 10051  0056EE  0E01               	movlw	1
 10052  0056F0  6EDF               	movwf	indf2,c
 10053                           
 10054                           ;DC_motors.c: 91:     mR->direction = 1;
 10055  0056F2  EE20 F001          	lfsr	2,1
 10056  0056F6  5023               	movf	forward@mR^0,w,c
 10057  0056F8  26D9               	addwf	fsr2l,f,c
 10058  0056FA  5024               	movf	(forward@mR+1)^0,w,c
 10059  0056FC  22DA               	addwfc	fsr2h,f,c
 10060  0056FE  0E01               	movlw	1
 10061  005700  6EDF               	movwf	indf2,c
 10062                           
 10063                           ;DC_motors.c: 94:     while((mL->power < 20) && (mR->power < 20)){
 10064  005702  EF9F  F02B         	goto	l8477
 10065  005706                     l8469:
 10066                           
 10067                           ;DC_motors.c: 95:         mL->power += 10;
 10068  005706  C021  FFD9         	movff	forward@mL,fsr2l
 10069  00570A  C022  FFDA         	movff	forward@mL+1,fsr2h
 10070  00570E  0E0A               	movlw	10
 10071  005710  26DF               	addwf	indf2,f,c
 10072                           
 10073                           ;DC_motors.c: 96:         mR->power += 10;
 10074  005712  C023  FFD9         	movff	forward@mR,fsr2l
 10075  005716  C024  FFDA         	movff	forward@mR+1,fsr2h
 10076  00571A  0E0A               	movlw	10
 10077  00571C  26DF               	addwf	indf2,f,c
 10078  00571E                     
 10079                           ;DC_motors.c: 98:         DCmotors_setPWM(mL);
 10080  00571E  C021  F016         	movff	forward@mL,DCmotors_setPWM@m
 10081  005722  C022  F017         	movff	forward@mL+1,DCmotors_setPWM@m+1
 10082  005726  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
 10083  00572A                     
 10084                           ;DC_motors.c: 99:         DCmotors_setPWM(mR);
 10085  00572A  C023  F016         	movff	forward@mR,DCmotors_setPWM@m
 10086  00572E  C024  F017         	movff	forward@mR+1,DCmotors_setPWM@m+1
 10087  005732  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
 10088  005736                     
 10089                           ;DC_motors.c: 100:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 10090  005736  0EA0               	movlw	160
 10091  005738                     u12447:
 10092  005738  D000               	nop2	
 10093  00573A  2EE8               	decfsz	wreg,f,c
 10094  00573C  D7FD               	bra	u12447
 10095  00573E                     l8477:
 10096                           
 10097                           ;DC_motors.c: 94:     while((mL->power < 20) && (mR->power < 20)){
 10098  00573E  C021  FFD9         	movff	forward@mL,fsr2l
 10099  005742  C022  FFDA         	movff	forward@mL+1,fsr2h
 10100  005746  0E14               	movlw	20
 10101  005748  60DF               	cpfslt	indf2,c
 10102  00574A  EFA9  F02B         	goto	u11381
 10103  00574E  EFAB  F02B         	goto	u11380
 10104  005752                     u11381:
 10105  005752  EFB7  F02B         	goto	l642
 10106  005756                     u11380:
 10107  005756  C023  FFD9         	movff	forward@mR,fsr2l
 10108  00575A  C024  FFDA         	movff	forward@mR+1,fsr2h
 10109  00575E  0E13               	movlw	19
 10110  005760  64DF               	cpfsgt	indf2,c
 10111  005762  EFB5  F02B         	goto	u11391
 10112  005766  EFB7  F02B         	goto	u11390
 10113  00576A                     u11391:
 10114  00576A  EF83  F02B         	goto	l8469
 10115  00576E                     u11390:
 10116  00576E                     l642:
 10117  00576E  0012               	return		;funcret
 10118  005770                     __end_of_forward:
 10119                           	callstack 0
 10120                           
 10121 ;; *************** function _colourclick_readRGBC2 *****************
 10122 ;; Defined at:
 10123 ;;		line 140 in file "colour_click.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  tmpval          2   20[COMRAM] PTR struct .
 10126 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
 10127 ;;  mode            1   22[COMRAM] unsigned char 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;		None
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10139 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10142 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10143 ;;Total ram usage:        5 bytes
 10144 ;; Hardware stack levels used: 1
 10145 ;; Hardware stack levels required when called: 11
 10146 ;; This function calls:
 10147 ;;		_colourclickLEDs_C
 10148 ;;		_colourclick_readRGBC
 10149 ;; This function is called by:
 10150 ;;		_colourcards_readRGBC
 10151 ;;		_colourcards_testingRGBC
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           	psect	text43
 10156  0046F2                     __ptext43:
 10157                           	callstack 0
 10158  0046F2                     _colourclick_readRGBC2:
 10159                           	callstack 18
 10160  0046F2                     
 10161                           ;colour_click.c: 140: void colourclick_readRGBC2(RGBC_val *tmpval, unsigned char mode);c
      +                          olour_click.c: 141: {;colour_click.c: 142:     colourclickLEDs_C(0);
 10162  0046F2  0E00               	movlw	0
 10163  0046F4  EC42  F030         	call	_colourclickLEDs_C
 10164  0046F8                     
 10165                           ;colour_click.c: 143:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10166  0046F8  0E09               	movlw	9
 10167  0046FA  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10168  0046FC  0E1E               	movlw	30
 10169  0046FE  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10170  004700  0EE4               	movlw	228
 10171  004702                     u12457:
 10172  004702  2EE8               	decfsz	wreg,f,c
 10173  004704  D7FE               	bra	u12457
 10174  004706  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10175  004708  D7FC               	bra	u12457
 10176  00470A  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10177  00470C  D7FA               	bra	u12457
 10178  00470E  D000               	nop2	
 10179  004710                     
 10180                           ;colour_click.c: 145:     if (mode==1) {
 10181  004710  0417               	decf	colourclick_readRGBC2@mode^0,w,c
 10182  004712  A4D8               	btfss	status,2,c
 10183  004714  EF8E  F023         	goto	u11401
 10184  004718  EF90  F023         	goto	u11400
 10185  00471C                     u11401:
 10186  00471C  EFBE  F023         	goto	l8515
 10187  004720                     u11400:
 10188  004720                     
 10189                           ;colour_click.c: 146:         LATGbits.LATG1 = 1;
 10190  004720  827F               	bsf	127,1,c	;volatile
 10191  004722                     
 10192                           ;colour_click.c: 147:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10193  004722  0E52               	movlw	82
 10194  004724  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10195  004726  0E2B               	movlw	43
 10196  004728  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10197  00472A  0E00               	movlw	0
 10198  00472C                     u12467:
 10199  00472C  2EE8               	decfsz	wreg,f,c
 10200  00472E  D7FE               	bra	u12467
 10201  004730  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10202  004732  D7FC               	bra	u12467
 10203  004734  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10204  004736  D7FA               	bra	u12467
 10205  004738  D000               	nop2	
 10206  00473A                     
 10207                           ;colour_click.c: 148:         colourclick_readRGBC(tmpval);
 10208  00473A  C015  F013         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10209  00473E  C016  F014         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10210  004742  EC87  F02C         	call	_colourclick_readRGBC	;wreg free
 10211  004746                     
 10212                           ;colour_click.c: 149:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10213  004746  0E52               	movlw	82
 10214  004748  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10215  00474A  0E2B               	movlw	43
 10216  00474C  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10217  00474E  0E00               	movlw	0
 10218  004750                     u12477:
 10219  004750  2EE8               	decfsz	wreg,f,c
 10220  004752  D7FE               	bra	u12477
 10221  004754  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10222  004756  D7FC               	bra	u12477
 10223  004758  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10224  00475A  D7FA               	bra	u12477
 10225  00475C  D000               	nop2	
 10226  00475E                     
 10227                           ;colour_click.c: 150:         LATGbits.LATG1 = 0;
 10228  00475E  927F               	bcf	127,1,c	;volatile
 10229  004760                     l8513:
 10230                           
 10231                           ;colour_click.c: 151:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10232  004760  0E02               	movlw	2
 10233  004762  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10234  004764  0EA0               	movlw	160
 10235  004766  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10236  004768  0E92               	movlw	146
 10237  00476A                     u12487:
 10238  00476A  2EE8               	decfsz	wreg,f,c
 10239  00476C  D7FE               	bra	u12487
 10240  00476E  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10241  004770  D7FC               	bra	u12487
 10242  004772  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10243  004774  D7FA               	bra	u12487
 10244  004776  D000               	nop2	
 10245                           
 10246                           ;colour_click.c: 152:     } else if (mode==2) {
 10247  004778  EF14  F024         	goto	l8543
 10248  00477C                     l8515:
 10249  00477C  0E02               	movlw	2
 10250  00477E  1817               	xorwf	colourclick_readRGBC2@mode^0,w,c
 10251  004780  A4D8               	btfss	status,2,c
 10252  004782  EFC5  F023         	goto	u11411
 10253  004786  EFC7  F023         	goto	u11410
 10254  00478A                     u11411:
 10255  00478A  EFE9  F023         	goto	l8529
 10256  00478E                     u11410:
 10257  00478E                     
 10258                           ;colour_click.c: 153:         LATAbits.LATA4 = 1;
 10259  00478E  8879               	bsf	121,4,c	;volatile
 10260  004790                     
 10261                           ;colour_click.c: 154:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10262  004790  0E52               	movlw	82
 10263  004792  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10264  004794  0E2B               	movlw	43
 10265  004796  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10266  004798  0E00               	movlw	0
 10267  00479A                     u12497:
 10268  00479A  2EE8               	decfsz	wreg,f,c
 10269  00479C  D7FE               	bra	u12497
 10270  00479E  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10271  0047A0  D7FC               	bra	u12497
 10272  0047A2  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10273  0047A4  D7FA               	bra	u12497
 10274  0047A6  D000               	nop2	
 10275  0047A8                     
 10276                           ;colour_click.c: 155:         colourclick_readRGBC(tmpval);
 10277  0047A8  C015  F013         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10278  0047AC  C016  F014         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10279  0047B0  EC87  F02C         	call	_colourclick_readRGBC	;wreg free
 10280  0047B4                     
 10281                           ;colour_click.c: 156:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10282  0047B4  0E52               	movlw	82
 10283  0047B6  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10284  0047B8  0E2B               	movlw	43
 10285  0047BA  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10286  0047BC  0E00               	movlw	0
 10287  0047BE                     u12507:
 10288  0047BE  2EE8               	decfsz	wreg,f,c
 10289  0047C0  D7FE               	bra	u12507
 10290  0047C2  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10291  0047C4  D7FC               	bra	u12507
 10292  0047C6  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10293  0047C8  D7FA               	bra	u12507
 10294  0047CA  D000               	nop2	
 10295  0047CC                     
 10296                           ;colour_click.c: 157:         LATAbits.LATA4 = 0;
 10297  0047CC  9879               	bcf	121,4,c	;volatile
 10298  0047CE  EFB0  F023         	goto	l8513
 10299  0047D2                     l8529:
 10300  0047D2  0E03               	movlw	3
 10301  0047D4  1817               	xorwf	colourclick_readRGBC2@mode^0,w,c
 10302  0047D6  A4D8               	btfss	status,2,c
 10303  0047D8  EFF0  F023         	goto	u11421
 10304  0047DC  EFF2  F023         	goto	u11420
 10305  0047E0                     u11421:
 10306  0047E0  EF14  F024         	goto	l8543
 10307  0047E4                     u11420:
 10308  0047E4                     
 10309                           ;colour_click.c: 160:         LATFbits.LATF7 = 1;
 10310  0047E4  8E7E               	bsf	126,7,c	;volatile
 10311  0047E6                     
 10312                           ;colour_click.c: 161:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10313  0047E6  0E52               	movlw	82
 10314  0047E8  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10315  0047EA  0E2B               	movlw	43
 10316  0047EC  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10317  0047EE  0E00               	movlw	0
 10318  0047F0                     u12517:
 10319  0047F0  2EE8               	decfsz	wreg,f,c
 10320  0047F2  D7FE               	bra	u12517
 10321  0047F4  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10322  0047F6  D7FC               	bra	u12517
 10323  0047F8  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10324  0047FA  D7FA               	bra	u12517
 10325  0047FC  D000               	nop2	
 10326  0047FE                     
 10327                           ;colour_click.c: 162:         colourclick_readRGBC(tmpval);
 10328  0047FE  C015  F013         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10329  004802  C016  F014         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10330  004806  EC87  F02C         	call	_colourclick_readRGBC	;wreg free
 10331  00480A                     
 10332                           ;colour_click.c: 163:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10333  00480A  0E52               	movlw	82
 10334  00480C  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10335  00480E  0E2B               	movlw	43
 10336  004810  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10337  004812  0E00               	movlw	0
 10338  004814                     u12527:
 10339  004814  2EE8               	decfsz	wreg,f,c
 10340  004816  D7FE               	bra	u12527
 10341  004818  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10342  00481A  D7FC               	bra	u12527
 10343  00481C  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10344  00481E  D7FA               	bra	u12527
 10345  004820  D000               	nop2	
 10346  004822                     
 10347                           ;colour_click.c: 164:         LATFbits.LATF7 = 0;
 10348  004822  9E7E               	bcf	126,7,c	;volatile
 10349  004824  EFB0  F023         	goto	l8513
 10350  004828                     l8543:
 10351                           
 10352                           ;colour_click.c: 168:     colourclickLEDs_C(1);
 10353  004828  0E01               	movlw	1
 10354  00482A  EC42  F030         	call	_colourclickLEDs_C
 10355  00482E                     
 10356                           ;colour_click.c: 169:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10357  00482E  0E09               	movlw	9
 10358  004830  6E19               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10359  004832  0E1E               	movlw	30
 10360  004834  6E18               	movwf	??_colourclick_readRGBC2^0,c
 10361  004836  0EE4               	movlw	228
 10362  004838                     u12537:
 10363  004838  2EE8               	decfsz	wreg,f,c
 10364  00483A  D7FE               	bra	u12537
 10365  00483C  2E18               	decfsz	??_colourclick_readRGBC2^0,f,c
 10366  00483E  D7FC               	bra	u12537
 10367  004840  2E19               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10368  004842  D7FA               	bra	u12537
 10369  004844  D000               	nop2	
 10370  004846  0012               	return		;funcret
 10371  004848                     __end_of_colourclick_readRGBC2:
 10372                           	callstack 0
 10373                           
 10374 ;; *************** function _colourclick_readRGBC *****************
 10375 ;; Defined at:
 10376 ;;		line 128 in file "colour_click.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;  tmpval          2   18[COMRAM] PTR struct .
 10379 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), colourcards_testingRGBC@abs(8), main@cur
      +rent(8), 
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;		None
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      void 
 10384 ;; Registers used:
 10385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10395 ;;Total ram usage:        2 bytes
 10396 ;; Hardware stack levels used: 1
 10397 ;; Hardware stack levels required when called: 10
 10398 ;; This function calls:
 10399 ;;		_colourclick_readB
 10400 ;;		_colourclick_readC
 10401 ;;		_colourclick_readG
 10402 ;;		_colourclick_readR
 10403 ;; This function is called by:
 10404 ;;		_colourcards_readRGBC
 10405 ;;		_colourclick_readRGBC2
 10406 ;;		_colourclick_calibration
 10407 ;;		_colourcards_testingRGBC
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text44
 10412  00590E                     __ptext44:
 10413                           	callstack 0
 10414  00590E                     _colourclick_readRGBC:
 10415                           	callstack 19
 10416  00590E                     
 10417                           ;colour_click.c: 128: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 129: {
      +                          ;colour_click.c: 130:     tmpval->R = colourclick_readR();
 10418  00590E  EC5C  F02D         	call	_colourclick_readR	;wreg free
 10419  005912  C013  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
 10420  005916  C014  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
 10421  00591A  C00C  FFDE         	movff	?_colourclick_readR,postinc2
 10422  00591E  C00D  FFDD         	movff	?_colourclick_readR+1,postdec2
 10423                           
 10424                           ;colour_click.c: 131:     tmpval->G = colourclick_readG();
 10425  005922  EC84  F02D         	call	_colourclick_readG	;wreg free
 10426  005926  EE20 F002          	lfsr	2,2
 10427  00592A  5013               	movf	colourclick_readRGBC@tmpval^0,w,c
 10428  00592C  26D9               	addwf	fsr2l,f,c
 10429  00592E  5014               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10430  005930  22DA               	addwfc	fsr2h,f,c
 10431  005932  C00C  FFDE         	movff	?_colourclick_readG,postinc2
 10432  005936  C00D  FFDD         	movff	?_colourclick_readG+1,postdec2
 10433                           
 10434                           ;colour_click.c: 132:     tmpval->B = colourclick_readB();
 10435  00593A  ECD4  F02D         	call	_colourclick_readB	;wreg free
 10436  00593E  EE20 F004          	lfsr	2,4
 10437  005942  5013               	movf	colourclick_readRGBC@tmpval^0,w,c
 10438  005944  26D9               	addwf	fsr2l,f,c
 10439  005946  5014               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10440  005948  22DA               	addwfc	fsr2h,f,c
 10441  00594A  C00C  FFDE         	movff	?_colourclick_readB,postinc2
 10442  00594E  C00D  FFDD         	movff	?_colourclick_readB+1,postdec2
 10443                           
 10444                           ;colour_click.c: 133:     tmpval->C = colourclick_readC();
 10445  005952  ECAC  F02D         	call	_colourclick_readC	;wreg free
 10446  005956  EE20 F006          	lfsr	2,6
 10447  00595A  5013               	movf	colourclick_readRGBC@tmpval^0,w,c
 10448  00595C  26D9               	addwf	fsr2l,f,c
 10449  00595E  5014               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10450  005960  22DA               	addwfc	fsr2h,f,c
 10451  005962  C00C  FFDE         	movff	?_colourclick_readC,postinc2
 10452  005966  C00D  FFDD         	movff	?_colourclick_readC+1,postdec2
 10453  00596A  0012               	return		;funcret
 10454  00596C                     __end_of_colourclick_readRGBC:
 10455                           	callstack 0
 10456                           
 10457 ;; *************** function _colourclick_readR *****************
 10458 ;; Defined at:
 10459 ;;		line 53 in file "colour_click.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;		None
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  tmp             2   16[COMRAM] unsigned int 
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  2   11[COMRAM] unsigned int 
 10466 ;; Registers used:
 10467 ;;		wreg, status,2, status,0, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;Total ram usage:        7 bytes
 10478 ;; Hardware stack levels used: 1
 10479 ;; Hardware stack levels required when called: 9
 10480 ;; This function calls:
 10481 ;;		_I2C_2_Master_Read
 10482 ;;		_I2C_2_Master_RepStart
 10483 ;;		_I2C_2_Master_Start
 10484 ;;		_I2C_2_Master_Stop
 10485 ;;		_I2C_2_Master_Write
 10486 ;; This function is called by:
 10487 ;;		_colourclick_readRGBC
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text45
 10492  005AB8                     __ptext45:
 10493                           	callstack 0
 10494  005AB8                     _colourclick_readR:
 10495                           	callstack 19
 10496  005AB8                     
 10497                           ;colour_click.c: 55:  unsigned int tmp;;colour_click.c: 56:  I2C_2_Master_Start();
 10498  005AB8  EC0B  F031         	call	_I2C_2_Master_Start	;wreg free
 10499                           
 10500                           ;colour_click.c: 57:  I2C_2_Master_Write(0x52 | 0x00);
 10501  005ABC  0E52               	movlw	82
 10502  005ABE  ECF4  F030         	call	_I2C_2_Master_Write
 10503                           
 10504                           ;colour_click.c: 58:  I2C_2_Master_Write(0xA0 | 0x16);
 10505  005AC2  0EB6               	movlw	182
 10506  005AC4  ECF4  F030         	call	_I2C_2_Master_Write
 10507                           
 10508                           ;colour_click.c: 59:  I2C_2_Master_RepStart();
 10509  005AC8  EC10  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10510                           
 10511                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x01);
 10512  005ACC  0E53               	movlw	83
 10513  005ACE  ECF4  F030         	call	_I2C_2_Master_Write
 10514                           
 10515                           ;colour_click.c: 61:  tmp=I2C_2_Master_Read(1);
 10516  005AD2  0E01               	movlw	1
 10517  005AD4  EC29  F02F         	call	_I2C_2_Master_Read
 10518  005AD8  6E0E               	movwf	??_colourclick_readR^0,c
 10519  005ADA  500E               	movf	??_colourclick_readR^0,w,c
 10520  005ADC  6E11               	movwf	colourclick_readR@tmp^0,c
 10521  005ADE  6A12               	clrf	(colourclick_readR@tmp+1)^0,c
 10522                           
 10523                           ;colour_click.c: 62:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10524  005AE0  0E00               	movlw	0
 10525  005AE2  EC29  F02F         	call	_I2C_2_Master_Read
 10526  005AE6  6E0E               	movwf	??_colourclick_readR^0,c
 10527  005AE8  500E               	movf	??_colourclick_readR^0,w,c
 10528  005AEA  6E10               	movwf	(??_colourclick_readR+2)^0,c
 10529  005AEC  6A0F               	clrf	(??_colourclick_readR+1)^0,c
 10530  005AEE  5011               	movf	colourclick_readR@tmp^0,w,c
 10531  005AF0  100F               	iorwf	(??_colourclick_readR+1)^0,w,c
 10532  005AF2  6E11               	movwf	colourclick_readR@tmp^0,c
 10533  005AF4  5012               	movf	(colourclick_readR@tmp+1)^0,w,c
 10534  005AF6  1010               	iorwf	(??_colourclick_readR+2)^0,w,c
 10535  005AF8  6E12               	movwf	(colourclick_readR@tmp+1)^0,c
 10536                           
 10537                           ;colour_click.c: 63:  I2C_2_Master_Stop();
 10538  005AFA  EC06  F031         	call	_I2C_2_Master_Stop	;wreg free
 10539  005AFE                     
 10540                           ;colour_click.c: 64:  return tmp;
 10541  005AFE  C011  F00C         	movff	colourclick_readR@tmp,?_colourclick_readR
 10542  005B02  C012  F00D         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
 10543  005B06  0012               	return		;funcret
 10544  005B08                     __end_of_colourclick_readR:
 10545                           	callstack 0
 10546                           
 10547 ;; *************** function _colourclick_readG *****************
 10548 ;; Defined at:
 10549 ;;		line 72 in file "colour_click.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;		None
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;  tmp             2   16[COMRAM] unsigned int 
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  2   11[COMRAM] unsigned int 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10566 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;Total ram usage:        7 bytes
 10568 ;; Hardware stack levels used: 1
 10569 ;; Hardware stack levels required when called: 9
 10570 ;; This function calls:
 10571 ;;		_I2C_2_Master_Read
 10572 ;;		_I2C_2_Master_RepStart
 10573 ;;		_I2C_2_Master_Start
 10574 ;;		_I2C_2_Master_Stop
 10575 ;;		_I2C_2_Master_Write
 10576 ;; This function is called by:
 10577 ;;		_colourclick_readRGBC
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text46
 10582  005B08                     __ptext46:
 10583                           	callstack 0
 10584  005B08                     _colourclick_readG:
 10585                           	callstack 19
 10586  005B08                     
 10587                           ;colour_click.c: 74:  unsigned int tmp;;colour_click.c: 75:  I2C_2_Master_Start();
 10588  005B08  EC0B  F031         	call	_I2C_2_Master_Start	;wreg free
 10589                           
 10590                           ;colour_click.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
 10591  005B0C  0E52               	movlw	82
 10592  005B0E  ECF4  F030         	call	_I2C_2_Master_Write
 10593                           
 10594                           ;colour_click.c: 77:  I2C_2_Master_Write(0xA0 | 0x18);
 10595  005B12  0EB8               	movlw	184
 10596  005B14  ECF4  F030         	call	_I2C_2_Master_Write
 10597                           
 10598                           ;colour_click.c: 78:  I2C_2_Master_RepStart();
 10599  005B18  EC10  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10600                           
 10601                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
 10602  005B1C  0E53               	movlw	83
 10603  005B1E  ECF4  F030         	call	_I2C_2_Master_Write
 10604                           
 10605                           ;colour_click.c: 80:  tmp=I2C_2_Master_Read(1);
 10606  005B22  0E01               	movlw	1
 10607  005B24  EC29  F02F         	call	_I2C_2_Master_Read
 10608  005B28  6E0E               	movwf	??_colourclick_readG^0,c
 10609  005B2A  500E               	movf	??_colourclick_readG^0,w,c
 10610  005B2C  6E11               	movwf	colourclick_readG@tmp^0,c
 10611  005B2E  6A12               	clrf	(colourclick_readG@tmp+1)^0,c
 10612                           
 10613                           ;colour_click.c: 81:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10614  005B30  0E00               	movlw	0
 10615  005B32  EC29  F02F         	call	_I2C_2_Master_Read
 10616  005B36  6E0E               	movwf	??_colourclick_readG^0,c
 10617  005B38  500E               	movf	??_colourclick_readG^0,w,c
 10618  005B3A  6E10               	movwf	(??_colourclick_readG+2)^0,c
 10619  005B3C  6A0F               	clrf	(??_colourclick_readG+1)^0,c
 10620  005B3E  5011               	movf	colourclick_readG@tmp^0,w,c
 10621  005B40  100F               	iorwf	(??_colourclick_readG+1)^0,w,c
 10622  005B42  6E11               	movwf	colourclick_readG@tmp^0,c
 10623  005B44  5012               	movf	(colourclick_readG@tmp+1)^0,w,c
 10624  005B46  1010               	iorwf	(??_colourclick_readG+2)^0,w,c
 10625  005B48  6E12               	movwf	(colourclick_readG@tmp+1)^0,c
 10626                           
 10627                           ;colour_click.c: 82:  I2C_2_Master_Stop();
 10628  005B4A  EC06  F031         	call	_I2C_2_Master_Stop	;wreg free
 10629  005B4E                     
 10630                           ;colour_click.c: 83:  return tmp;
 10631  005B4E  C011  F00C         	movff	colourclick_readG@tmp,?_colourclick_readG
 10632  005B52  C012  F00D         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
 10633  005B56  0012               	return		;funcret
 10634  005B58                     __end_of_colourclick_readG:
 10635                           	callstack 0
 10636                           
 10637 ;; *************** function _colourclick_readC *****************
 10638 ;; Defined at:
 10639 ;;		line 110 in file "colour_click.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;		None
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;  tmp             2   16[COMRAM] unsigned int 
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  2   11[COMRAM] unsigned int 
 10646 ;; Registers used:
 10647 ;;		wreg, status,2, status,0, cstack
 10648 ;; Tracked objects:
 10649 ;;		On entry : 0/0
 10650 ;;		On exit  : 0/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10656 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;Total ram usage:        7 bytes
 10658 ;; Hardware stack levels used: 1
 10659 ;; Hardware stack levels required when called: 9
 10660 ;; This function calls:
 10661 ;;		_I2C_2_Master_Read
 10662 ;;		_I2C_2_Master_RepStart
 10663 ;;		_I2C_2_Master_Start
 10664 ;;		_I2C_2_Master_Stop
 10665 ;;		_I2C_2_Master_Write
 10666 ;; This function is called by:
 10667 ;;		_colourclick_readRGBC
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text47
 10672  005B58                     __ptext47:
 10673                           	callstack 0
 10674  005B58                     _colourclick_readC:
 10675                           	callstack 19
 10676  005B58                     
 10677                           ;colour_click.c: 112:  unsigned int tmp;;colour_click.c: 113:  I2C_2_Master_Start();
 10678  005B58  EC0B  F031         	call	_I2C_2_Master_Start	;wreg free
 10679                           
 10680                           ;colour_click.c: 114:  I2C_2_Master_Write(0x52 | 0x00);
 10681  005B5C  0E52               	movlw	82
 10682  005B5E  ECF4  F030         	call	_I2C_2_Master_Write
 10683                           
 10684                           ;colour_click.c: 115:  I2C_2_Master_Write(0xA0 | 0x14);
 10685  005B62  0EB4               	movlw	180
 10686  005B64  ECF4  F030         	call	_I2C_2_Master_Write
 10687                           
 10688                           ;colour_click.c: 116:  I2C_2_Master_RepStart();
 10689  005B68  EC10  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10690                           
 10691                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x01);
 10692  005B6C  0E53               	movlw	83
 10693  005B6E  ECF4  F030         	call	_I2C_2_Master_Write
 10694                           
 10695                           ;colour_click.c: 118:  tmp=I2C_2_Master_Read(1);
 10696  005B72  0E01               	movlw	1
 10697  005B74  EC29  F02F         	call	_I2C_2_Master_Read
 10698  005B78  6E0E               	movwf	??_colourclick_readC^0,c
 10699  005B7A  500E               	movf	??_colourclick_readC^0,w,c
 10700  005B7C  6E11               	movwf	colourclick_readC@tmp^0,c
 10701  005B7E  6A12               	clrf	(colourclick_readC@tmp+1)^0,c
 10702                           
 10703                           ;colour_click.c: 119:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10704  005B80  0E00               	movlw	0
 10705  005B82  EC29  F02F         	call	_I2C_2_Master_Read
 10706  005B86  6E0E               	movwf	??_colourclick_readC^0,c
 10707  005B88  500E               	movf	??_colourclick_readC^0,w,c
 10708  005B8A  6E10               	movwf	(??_colourclick_readC+2)^0,c
 10709  005B8C  6A0F               	clrf	(??_colourclick_readC+1)^0,c
 10710  005B8E  5011               	movf	colourclick_readC@tmp^0,w,c
 10711  005B90  100F               	iorwf	(??_colourclick_readC+1)^0,w,c
 10712  005B92  6E11               	movwf	colourclick_readC@tmp^0,c
 10713  005B94  5012               	movf	(colourclick_readC@tmp+1)^0,w,c
 10714  005B96  1010               	iorwf	(??_colourclick_readC+2)^0,w,c
 10715  005B98  6E12               	movwf	(colourclick_readC@tmp+1)^0,c
 10716                           
 10717                           ;colour_click.c: 120:  I2C_2_Master_Stop();
 10718  005B9A  EC06  F031         	call	_I2C_2_Master_Stop	;wreg free
 10719  005B9E                     
 10720                           ;colour_click.c: 121:  return tmp;
 10721  005B9E  C011  F00C         	movff	colourclick_readC@tmp,?_colourclick_readC
 10722  005BA2  C012  F00D         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
 10723  005BA6  0012               	return		;funcret
 10724  005BA8                     __end_of_colourclick_readC:
 10725                           	callstack 0
 10726                           
 10727 ;; *************** function _colourclick_readB *****************
 10728 ;; Defined at:
 10729 ;;		line 91 in file "colour_click.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;		None
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  tmp             2   16[COMRAM] unsigned int 
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  2   11[COMRAM] unsigned int 
 10736 ;; Registers used:
 10737 ;;		wreg, status,2, status,0, cstack
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10745 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10746 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10747 ;;Total ram usage:        7 bytes
 10748 ;; Hardware stack levels used: 1
 10749 ;; Hardware stack levels required when called: 9
 10750 ;; This function calls:
 10751 ;;		_I2C_2_Master_Read
 10752 ;;		_I2C_2_Master_RepStart
 10753 ;;		_I2C_2_Master_Start
 10754 ;;		_I2C_2_Master_Stop
 10755 ;;		_I2C_2_Master_Write
 10756 ;; This function is called by:
 10757 ;;		_colourclick_readRGBC
 10758 ;; This function uses a non-reentrant model
 10759 ;;
 10760                           
 10761                           	psect	text48
 10762  005BA8                     __ptext48:
 10763                           	callstack 0
 10764  005BA8                     _colourclick_readB:
 10765                           	callstack 19
 10766  005BA8                     
 10767                           ;colour_click.c: 93:  unsigned int tmp;;colour_click.c: 94:  I2C_2_Master_Start();
 10768  005BA8  EC0B  F031         	call	_I2C_2_Master_Start	;wreg free
 10769                           
 10770                           ;colour_click.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
 10771  005BAC  0E52               	movlw	82
 10772  005BAE  ECF4  F030         	call	_I2C_2_Master_Write
 10773                           
 10774                           ;colour_click.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
 10775  005BB2  0EBA               	movlw	186
 10776  005BB4  ECF4  F030         	call	_I2C_2_Master_Write
 10777                           
 10778                           ;colour_click.c: 97:  I2C_2_Master_RepStart();
 10779  005BB8  EC10  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10780                           
 10781                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
 10782  005BBC  0E53               	movlw	83
 10783  005BBE  ECF4  F030         	call	_I2C_2_Master_Write
 10784                           
 10785                           ;colour_click.c: 99:  tmp=I2C_2_Master_Read(1);
 10786  005BC2  0E01               	movlw	1
 10787  005BC4  EC29  F02F         	call	_I2C_2_Master_Read
 10788  005BC8  6E0E               	movwf	??_colourclick_readB^0,c
 10789  005BCA  500E               	movf	??_colourclick_readB^0,w,c
 10790  005BCC  6E11               	movwf	colourclick_readB@tmp^0,c
 10791  005BCE  6A12               	clrf	(colourclick_readB@tmp+1)^0,c
 10792                           
 10793                           ;colour_click.c: 100:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10794  005BD0  0E00               	movlw	0
 10795  005BD2  EC29  F02F         	call	_I2C_2_Master_Read
 10796  005BD6  6E0E               	movwf	??_colourclick_readB^0,c
 10797  005BD8  500E               	movf	??_colourclick_readB^0,w,c
 10798  005BDA  6E10               	movwf	(??_colourclick_readB+2)^0,c
 10799  005BDC  6A0F               	clrf	(??_colourclick_readB+1)^0,c
 10800  005BDE  5011               	movf	colourclick_readB@tmp^0,w,c
 10801  005BE0  100F               	iorwf	(??_colourclick_readB+1)^0,w,c
 10802  005BE2  6E11               	movwf	colourclick_readB@tmp^0,c
 10803  005BE4  5012               	movf	(colourclick_readB@tmp+1)^0,w,c
 10804  005BE6  1010               	iorwf	(??_colourclick_readB+2)^0,w,c
 10805  005BE8  6E12               	movwf	(colourclick_readB@tmp+1)^0,c
 10806                           
 10807                           ;colour_click.c: 101:  I2C_2_Master_Stop();
 10808  005BEA  EC06  F031         	call	_I2C_2_Master_Stop	;wreg free
 10809  005BEE                     
 10810                           ;colour_click.c: 102:  return tmp;
 10811  005BEE  C011  F00C         	movff	colourclick_readB@tmp,?_colourclick_readB
 10812  005BF2  C012  F00D         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
 10813  005BF6  0012               	return		;funcret
 10814  005BF8                     __end_of_colourclick_readB:
 10815                           	callstack 0
 10816                           
 10817 ;; *************** function _I2C_2_Master_Write *****************
 10818 ;; Defined at:
 10819 ;;		line 69 in file "I2C.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  data_byte       1    wreg     unsigned char 
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;  data_byte       1    8[COMRAM] unsigned char 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      void 
 10826 ;; Registers used:
 10827 ;;		wreg, status,2, status,0, cstack
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10837 ;;Total ram usage:        1 bytes
 10838 ;; Hardware stack levels used: 1
 10839 ;; Hardware stack levels required when called: 8
 10840 ;; This function calls:
 10841 ;;		_I2C_2_Master_Idle
 10842 ;; This function is called by:
 10843 ;;		_interrupts_clear
 10844 ;;		_colourclick_writetoaddr
 10845 ;;		_colourclick_readR
 10846 ;;		_colourclick_readG
 10847 ;;		_colourclick_readB
 10848 ;;		_colourclick_readC
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text49
 10853  0061E8                     __ptext49:
 10854                           	callstack 0
 10855  0061E8                     _I2C_2_Master_Write:
 10856                           	callstack 18
 10857                           
 10858                           ;incstack = 0
 10859                           ;I2C_2_Master_Write@data_byte stored from wreg
 10860  0061E8  6E09               	movwf	I2C_2_Master_Write@data_byte^0,c
 10861  0061EA                     
 10862                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 10863  0061EA  EC07  F030         	call	_I2C_2_Master_Idle	;wreg free
 10864  0061EE                     
 10865                           ;I2C.c: 72:   SSP2BUF = data_byte;
 10866  0061EE  C009  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10867  0061F2  0012               	return		;funcret
 10868  0061F4                     __end_of_I2C_2_Master_Write:
 10869                           	callstack 0
 10870                           
 10871 ;; *************** function _I2C_2_Master_Stop *****************
 10872 ;; Defined at:
 10873 ;;		line 59 in file "I2C.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;		None
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;		None
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  1    wreg      void 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2, status,0, cstack
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10891 ;;Total ram usage:        0 bytes
 10892 ;; Hardware stack levels used: 1
 10893 ;; Hardware stack levels required when called: 8
 10894 ;; This function calls:
 10895 ;;		_I2C_2_Master_Idle
 10896 ;; This function is called by:
 10897 ;;		_interrupts_clear
 10898 ;;		_colourclick_writetoaddr
 10899 ;;		_colourclick_readR
 10900 ;;		_colourclick_readG
 10901 ;;		_colourclick_readB
 10902 ;;		_colourclick_readC
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           	psect	text50
 10907  00620C                     __ptext50:
 10908                           	callstack 0
 10909  00620C                     _I2C_2_Master_Stop:
 10910                           	callstack 18
 10911  00620C                     
 10912                           ;I2C.c: 61:   I2C_2_Master_Idle();
 10913  00620C  EC07  F030         	call	_I2C_2_Master_Idle	;wreg free
 10914  006210                     
 10915                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 10916  006210  010E               	movlb	14	; () banked
 10917  006212  85DA               	bsf	218,2,b	;volatile
 10918  006214                     
 10919                           ; BSR set to: 14
 10920  006214  0012               	return		;funcret
 10921  006216                     __end_of_I2C_2_Master_Stop:
 10922                           	callstack 0
 10923                           
 10924 ;; *************** function _I2C_2_Master_Start *****************
 10925 ;; Defined at:
 10926 ;;		line 39 in file "I2C.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;		None
 10929 ;; Auto vars:     Size  Location     Type
 10930 ;;		None
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  1    wreg      void 
 10933 ;; Registers used:
 10934 ;;		wreg, status,2, status,0, cstack
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10944 ;;Total ram usage:        0 bytes
 10945 ;; Hardware stack levels used: 1
 10946 ;; Hardware stack levels required when called: 8
 10947 ;; This function calls:
 10948 ;;		_I2C_2_Master_Idle
 10949 ;; This function is called by:
 10950 ;;		_interrupts_clear
 10951 ;;		_colourclick_writetoaddr
 10952 ;;		_colourclick_readR
 10953 ;;		_colourclick_readG
 10954 ;;		_colourclick_readB
 10955 ;;		_colourclick_readC
 10956 ;; This function uses a non-reentrant model
 10957 ;;
 10958                           
 10959                           	psect	text51
 10960  006216                     __ptext51:
 10961                           	callstack 0
 10962  006216                     _I2C_2_Master_Start:
 10963                           	callstack 18
 10964  006216                     
 10965                           ;I2C.c: 41:   I2C_2_Master_Idle();
 10966  006216  EC07  F030         	call	_I2C_2_Master_Idle	;wreg free
 10967  00621A                     
 10968                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 10969  00621A  010E               	movlb	14	; () banked
 10970  00621C  81DA               	bsf	218,0,b	;volatile
 10971  00621E                     
 10972                           ; BSR set to: 14
 10973  00621E  0012               	return		;funcret
 10974  006220                     __end_of_I2C_2_Master_Start:
 10975                           	callstack 0
 10976                           
 10977 ;; *************** function _I2C_2_Master_RepStart *****************
 10978 ;; Defined at:
 10979 ;;		line 49 in file "I2C.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;		None
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;		None
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  1    wreg      void 
 10986 ;; Registers used:
 10987 ;;		wreg, status,2, status,0, cstack
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10997 ;;Total ram usage:        0 bytes
 10998 ;; Hardware stack levels used: 1
 10999 ;; Hardware stack levels required when called: 8
 11000 ;; This function calls:
 11001 ;;		_I2C_2_Master_Idle
 11002 ;; This function is called by:
 11003 ;;		_colourclick_readR
 11004 ;;		_colourclick_readG
 11005 ;;		_colourclick_readB
 11006 ;;		_colourclick_readC
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text52
 11011  006220                     __ptext52:
 11012                           	callstack 0
 11013  006220                     _I2C_2_Master_RepStart:
 11014                           	callstack 19
 11015  006220                     
 11016                           ;I2C.c: 51:   I2C_2_Master_Idle();
 11017  006220  EC07  F030         	call	_I2C_2_Master_Idle	;wreg free
 11018  006224                     
 11019                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
 11020  006224  010E               	movlb	14	; () banked
 11021  006226  83DA               	bsf	218,1,b	;volatile
 11022  006228                     
 11023                           ; BSR set to: 14
 11024  006228  0012               	return		;funcret
 11025  00622A                     __end_of_I2C_2_Master_RepStart:
 11026                           	callstack 0
 11027                           
 11028 ;; *************** function _I2C_2_Master_Read *****************
 11029 ;; Defined at:
 11030 ;;		line 79 in file "I2C.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  ack             1    wreg     unsigned char 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;  ack             1    9[COMRAM] unsigned char 
 11035 ;;  tmp             1   10[COMRAM] unsigned char 
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  1    wreg      unsigned char 
 11038 ;; Registers used:
 11039 ;;		wreg, status,2, status,0, cstack
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11048 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11049 ;;Total ram usage:        3 bytes
 11050 ;; Hardware stack levels used: 1
 11051 ;; Hardware stack levels required when called: 8
 11052 ;; This function calls:
 11053 ;;		_I2C_2_Master_Idle
 11054 ;; This function is called by:
 11055 ;;		_colourclick_readR
 11056 ;;		_colourclick_readG
 11057 ;;		_colourclick_readB
 11058 ;;		_colourclick_readC
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           	psect	text53
 11063  005E52                     __ptext53:
 11064                           	callstack 0
 11065  005E52                     _I2C_2_Master_Read:
 11066                           	callstack 19
 11067                           
 11068                           ; BSR set to: 14
 11069                           ;incstack = 0
 11070                           ;I2C_2_Master_Read@ack stored from wreg
 11071  005E52  6E0A               	movwf	I2C_2_Master_Read@ack^0,c
 11072  005E54                     
 11073                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
 11074  005E54  EC07  F030         	call	_I2C_2_Master_Idle	;wreg free
 11075  005E58                     
 11076                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
 11077  005E58  010E               	movlb	14	; () banked
 11078  005E5A  87DA               	bsf	218,3,b	;volatile
 11079                           
 11080                           ;I2C.c: 84:   I2C_2_Master_Idle();
 11081  005E5C  EC07  F030         	call	_I2C_2_Master_Idle	;wreg free
 11082  005E60                     
 11083                           ;I2C.c: 85:   tmp = SSP2BUF;
 11084  005E60  CED5 F00B          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 11085                           
 11086                           ;I2C.c: 86:   I2C_2_Master_Idle();
 11087  005E64  EC07  F030         	call	_I2C_2_Master_Idle	;wreg free
 11088  005E68                     
 11089                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
 11090  005E68  500A               	movf	I2C_2_Master_Read@ack^0,w,c
 11091  005E6A  B4D8               	btfsc	status,2,c
 11092  005E6C  EF3A  F02F         	goto	u10951
 11093  005E70  EF3E  F02F         	goto	u10950
 11094  005E74                     u10951:
 11095  005E74  6A09               	clrf	??_I2C_2_Master_Read^0,c
 11096  005E76  2A09               	incf	??_I2C_2_Master_Read^0,f,c
 11097  005E78  EF3F  F02F         	goto	u10968
 11098  005E7C                     u10950:
 11099  005E7C  6A09               	clrf	??_I2C_2_Master_Read^0,c
 11100  005E7E                     u10968:
 11101  005E7E  3A09               	swapf	??_I2C_2_Master_Read^0,f,c
 11102  005E80  4609               	rlncf	??_I2C_2_Master_Read^0,f,c
 11103  005E82  010E               	movlb	14	; () banked
 11104  005E84  51DA               	movf	218,w,b	;volatile
 11105  005E86  1809               	xorwf	??_I2C_2_Master_Read^0,w,c
 11106  005E88  0BDF               	andlw	-33
 11107  005E8A  1809               	xorwf	??_I2C_2_Master_Read^0,w,c
 11108  005E8C  6FDA               	movwf	218,b	;volatile
 11109  005E8E                     
 11110                           ; BSR set to: 14
 11111                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
 11112  005E8E  89DA               	bsf	218,4,b	;volatile
 11113  005E90                     
 11114                           ; BSR set to: 14
 11115                           ;I2C.c: 89:   return tmp;
 11116  005E90  500B               	movf	I2C_2_Master_Read@tmp^0,w,c
 11117  005E92                     
 11118                           ; BSR set to: 14
 11119  005E92  0012               	return		;funcret
 11120  005E94                     __end_of_I2C_2_Master_Read:
 11121                           	callstack 0
 11122                           
 11123 ;; *************** function _I2C_2_Master_Idle *****************
 11124 ;; Defined at:
 11125 ;;		line 30 in file "I2C.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;		None
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;		None
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  1    wreg      void 
 11132 ;; Registers used:
 11133 ;;		wreg, status,2, status,0
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11143 ;;Total ram usage:        1 bytes
 11144 ;; Hardware stack levels used: 1
 11145 ;; Hardware stack levels required when called: 7
 11146 ;; This function calls:
 11147 ;;		Nothing
 11148 ;; This function is called by:
 11149 ;;		_I2C_2_Master_Start
 11150 ;;		_I2C_2_Master_RepStart
 11151 ;;		_I2C_2_Master_Stop
 11152 ;;		_I2C_2_Master_Write
 11153 ;;		_I2C_2_Master_Read
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text54
 11158  00600E                     __ptext54:
 11159                           	callstack 0
 11160  00600E                     _I2C_2_Master_Idle:
 11161                           	callstack 18
 11162  00600E                     l457:
 11163  00600E  010E               	movlb	14	; () banked
 11164  006010  B5D8               	btfsc	216,2,b	;volatile
 11165  006012  EF0D  F030         	goto	u10021
 11166  006016  EF0F  F030         	goto	u10020
 11167  00601A                     u10021:
 11168  00601A  EF07  F030         	goto	l457
 11169  00601E                     u10020:
 11170  00601E                     
 11171                           ; BSR set to: 14
 11172  00601E  CEDA F008          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11173  006022  0E1F               	movlw	31
 11174  006024  1608               	andwf	??_I2C_2_Master_Idle^0,f,c
 11175  006026  A4D8               	btfss	status,2,c
 11176  006028  EF18  F030         	goto	u10031
 11177  00602C  EF1A  F030         	goto	u10030
 11178  006030                     u10031:
 11179  006030  EF07  F030         	goto	l457
 11180  006034                     u10030:
 11181  006034                     
 11182                           ; BSR set to: 14
 11183  006034  0012               	return		;funcret
 11184  006036                     __end_of_I2C_2_Master_Idle:
 11185                           	callstack 0
 11186                           
 11187 ;; *************** function _colourclickLEDs_C *****************
 11188 ;; Defined at:
 11189 ;;		line 84 in file "buttons_n_LEDs.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;  tog             1    wreg     unsigned char 
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;  tog             1    7[COMRAM] unsigned char 
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  1    wreg      void 
 11196 ;; Registers used:
 11197 ;;		wreg
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11207 ;;Total ram usage:        1 bytes
 11208 ;; Hardware stack levels used: 1
 11209 ;; Hardware stack levels required when called: 7
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		_main
 11214 ;;		_colourclick_readRGBC2
 11215 ;;		_colourclick_calibration
 11216 ;;		_colourclickLEDs_init
 11217 ;;		_colourcards_testingRGBC
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           	psect	text55
 11222  006084                     __ptext55:
 11223                           	callstack 0
 11224  006084                     _colourclickLEDs_C:
 11225                           	callstack 21
 11226                           
 11227                           ; BSR set to: 14
 11228                           ;incstack = 0
 11229                           ;colourclickLEDs_C@tog stored from wreg
 11230  006084  6E08               	movwf	colourclickLEDs_C@tog^0,c
 11231  006086                     
 11232                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
 11233  006086  B008               	btfsc	colourclickLEDs_C@tog^0,0,c
 11234  006088  D002               	bra	u11205
 11235  00608A  927F               	bcf	127,1,c	;volatile
 11236  00608C  D001               	bra	u11206
 11237  00608E                     u11205:
 11238  00608E  827F               	bsf	127,1,c	;volatile
 11239  006090                     u11206:
 11240                           
 11241                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
 11242  006090  B008               	btfsc	colourclickLEDs_C@tog^0,0,c
 11243  006092  D002               	bra	u11215
 11244  006094  9879               	bcf	121,4,c	;volatile
 11245  006096  D001               	bra	u11216
 11246  006098                     u11215:
 11247  006098  8879               	bsf	121,4,c	;volatile
 11248  00609A                     u11216:
 11249                           
 11250                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
 11251  00609A  B008               	btfsc	colourclickLEDs_C@tog^0,0,c
 11252  00609C  D002               	bra	u11225
 11253  00609E  9E7E               	bcf	126,7,c	;volatile
 11254  0060A0  D001               	bra	u11226
 11255  0060A2                     u11225:
 11256  0060A2  8E7E               	bsf	126,7,c	;volatile
 11257  0060A4                     u11226:
 11258  0060A4  0012               	return		;funcret
 11259  0060A6                     __end_of_colourclickLEDs_C:
 11260                           	callstack 0
 11261                           
 11262 ;; *************** function _colourcards_normaliseRGBC *****************
 11263 ;; Defined at:
 11264 ;;		line 210 in file "colour_cards.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;  abs             2   46[COMRAM] PTR struct .
 11267 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
 11268 ;;  rel             2   48[COMRAM] PTR struct .
 11269 ;;		 -> colourcards_testingRGBC@rel(12), colourcards_readRGBC@rel(12), 
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;  C               2   56[COMRAM] unsigned int 
 11272 ;;  B               2   54[COMRAM] unsigned int 
 11273 ;;  G               2   52[COMRAM] unsigned int 
 11274 ;;  R               2   50[COMRAM] unsigned int 
 11275 ;; Return value:  Size  Location     Type
 11276 ;;                  1    wreg      void 
 11277 ;; Registers used:
 11278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11284 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11285 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11287 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11288 ;;Total ram usage:       12 bytes
 11289 ;; Hardware stack levels used: 1
 11290 ;; Hardware stack levels required when called: 8
 11291 ;; This function calls:
 11292 ;;		___fldiv
 11293 ;;		___xxtofl
 11294 ;; This function is called by:
 11295 ;;		_colourcards_readRGBC
 11296 ;;		_colourcards_testingRGBC
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           	psect	text56
 11301  004418                     __ptext56:
 11302                           	callstack 0
 11303  004418                     _colourcards_normaliseRGBC:
 11304                           	callstack 21
 11305  004418                     
 11306                           ;colour_cards.c: 210: void colourcards_normaliseRGBC(RGBC_val *abs, RGB_rel *rel);colour
      +                          _cards.c: 211: {;colour_cards.c: 212:     unsigned int R = abs->R;
 11307  004418  C02F  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
 11308  00441C  C030  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
 11309  004420  CFDE F033          	movff	postinc2,colourcards_normaliseRGBC@R
 11310  004424  CFDD F034          	movff	postdec2,colourcards_normaliseRGBC@R+1
 11311  004428                     
 11312                           ;colour_cards.c: 213:     unsigned int G = abs->G;
 11313  004428  EE20 F002          	lfsr	2,2
 11314  00442C  502F               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11315  00442E  26D9               	addwf	fsr2l,f,c
 11316  004430  5030               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11317  004432  22DA               	addwfc	fsr2h,f,c
 11318  004434  CFDE F035          	movff	postinc2,colourcards_normaliseRGBC@G
 11319  004438  CFDD F036          	movff	postdec2,colourcards_normaliseRGBC@G+1
 11320  00443C                     
 11321                           ;colour_cards.c: 214:     unsigned int B = abs->B;
 11322  00443C  EE20 F004          	lfsr	2,4
 11323  004440  502F               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11324  004442  26D9               	addwf	fsr2l,f,c
 11325  004444  5030               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11326  004446  22DA               	addwfc	fsr2h,f,c
 11327  004448  CFDE F037          	movff	postinc2,colourcards_normaliseRGBC@B
 11328  00444C  CFDD F038          	movff	postdec2,colourcards_normaliseRGBC@B+1
 11329  004450                     
 11330                           ;colour_cards.c: 215:     unsigned int C = abs->C;
 11331  004450  EE20 F006          	lfsr	2,6
 11332  004454  502F               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11333  004456  26D9               	addwf	fsr2l,f,c
 11334  004458  5030               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11335  00445A  22DA               	addwfc	fsr2h,f,c
 11336  00445C  CFDE F039          	movff	postinc2,colourcards_normaliseRGBC@C
 11337  004460  CFDD F03A          	movff	postdec2,colourcards_normaliseRGBC@C+1
 11338  004464                     
 11339                           ;colour_cards.c: 217:     rel->R = (float)R/(float)C;
 11340  004464  C033  F008         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
 11341  004468  C034  F009         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
 11342  00446C  6A0A               	clrf	(___xxtofl@val+2)^0,c
 11343  00446E  6A0B               	clrf	(___xxtofl@val+3)^0,c
 11344  004470  0E00               	movlw	0
 11345  004472  ECF9  F01D         	call	___xxtofl
 11346  004476  C008  F016         	movff	?___xxtofl,___fldiv@b
 11347  00447A  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
 11348  00447E  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
 11349  004482  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
 11350  004486  C039  F008         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11351  00448A  C03A  F009         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11352  00448E  6A0A               	clrf	(___xxtofl@val+2)^0,c
 11353  004490  6A0B               	clrf	(___xxtofl@val+3)^0,c
 11354  004492  0E00               	movlw	0
 11355  004494  ECF9  F01D         	call	___xxtofl
 11356  004498  C008  F01A         	movff	?___xxtofl,___fldiv@a
 11357  00449C  C009  F01B         	movff	?___xxtofl+1,___fldiv@a+1
 11358  0044A0  C00A  F01C         	movff	?___xxtofl+2,___fldiv@a+2
 11359  0044A4  C00B  F01D         	movff	?___xxtofl+3,___fldiv@a+3
 11360  0044A8  ECC9  F018         	call	___fldiv	;wreg free
 11361  0044AC  C031  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
 11362  0044B0  C032  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
 11363  0044B4  C016  FFDE         	movff	?___fldiv,postinc2
 11364  0044B8  C017  FFDE         	movff	?___fldiv+1,postinc2
 11365  0044BC  C018  FFDE         	movff	?___fldiv+2,postinc2
 11366  0044C0  C019  FFDE         	movff	?___fldiv+3,postinc2
 11367  0044C4                     
 11368                           ;colour_cards.c: 218:     rel->G = (float)G/(float)C;
 11369  0044C4  C035  F008         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
 11370  0044C8  C036  F009         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
 11371  0044CC  6A0A               	clrf	(___xxtofl@val+2)^0,c
 11372  0044CE  6A0B               	clrf	(___xxtofl@val+3)^0,c
 11373  0044D0  0E00               	movlw	0
 11374  0044D2  ECF9  F01D         	call	___xxtofl
 11375  0044D6  C008  F016         	movff	?___xxtofl,___fldiv@b
 11376  0044DA  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
 11377  0044DE  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
 11378  0044E2  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
 11379  0044E6  C039  F008         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11380  0044EA  C03A  F009         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11381  0044EE  6A0A               	clrf	(___xxtofl@val+2)^0,c
 11382  0044F0  6A0B               	clrf	(___xxtofl@val+3)^0,c
 11383  0044F2  0E00               	movlw	0
 11384  0044F4  ECF9  F01D         	call	___xxtofl
 11385  0044F8  C008  F01A         	movff	?___xxtofl,___fldiv@a
 11386  0044FC  C009  F01B         	movff	?___xxtofl+1,___fldiv@a+1
 11387  004500  C00A  F01C         	movff	?___xxtofl+2,___fldiv@a+2
 11388  004504  C00B  F01D         	movff	?___xxtofl+3,___fldiv@a+3
 11389  004508  ECC9  F018         	call	___fldiv	;wreg free
 11390  00450C  EE20 F004          	lfsr	2,4
 11391  004510  5031               	movf	colourcards_normaliseRGBC@rel^0,w,c
 11392  004512  26D9               	addwf	fsr2l,f,c
 11393  004514  5032               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
 11394  004516  22DA               	addwfc	fsr2h,f,c
 11395  004518  C016  FFDE         	movff	?___fldiv,postinc2
 11396  00451C  C017  FFDE         	movff	?___fldiv+1,postinc2
 11397  004520  C018  FFDE         	movff	?___fldiv+2,postinc2
 11398  004524  C019  FFDE         	movff	?___fldiv+3,postinc2
 11399  004528                     
 11400                           ;colour_cards.c: 219:     rel->B = (float)B/(float)C;
 11401  004528  C037  F008         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
 11402  00452C  C038  F009         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
 11403  004530  6A0A               	clrf	(___xxtofl@val+2)^0,c
 11404  004532  6A0B               	clrf	(___xxtofl@val+3)^0,c
 11405  004534  0E00               	movlw	0
 11406  004536  ECF9  F01D         	call	___xxtofl
 11407  00453A  C008  F016         	movff	?___xxtofl,___fldiv@b
 11408  00453E  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
 11409  004542  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
 11410  004546  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
 11411  00454A  C039  F008         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11412  00454E  C03A  F009         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11413  004552  6A0A               	clrf	(___xxtofl@val+2)^0,c
 11414  004554  6A0B               	clrf	(___xxtofl@val+3)^0,c
 11415  004556  0E00               	movlw	0
 11416  004558  ECF9  F01D         	call	___xxtofl
 11417  00455C  C008  F01A         	movff	?___xxtofl,___fldiv@a
 11418  004560  C009  F01B         	movff	?___xxtofl+1,___fldiv@a+1
 11419  004564  C00A  F01C         	movff	?___xxtofl+2,___fldiv@a+2
 11420  004568  C00B  F01D         	movff	?___xxtofl+3,___fldiv@a+3
 11421  00456C  ECC9  F018         	call	___fldiv	;wreg free
 11422  004570  EE20 F008          	lfsr	2,8
 11423  004574  5031               	movf	colourcards_normaliseRGBC@rel^0,w,c
 11424  004576  26D9               	addwf	fsr2l,f,c
 11425  004578  5032               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
 11426  00457A  22DA               	addwfc	fsr2h,f,c
 11427  00457C  C016  FFDE         	movff	?___fldiv,postinc2
 11428  004580  C017  FFDE         	movff	?___fldiv+1,postinc2
 11429  004584  C018  FFDE         	movff	?___fldiv+2,postinc2
 11430  004588  C019  FFDE         	movff	?___fldiv+3,postinc2
 11431  00458C  0012               	return		;funcret
 11432  00458E                     __end_of_colourcards_normaliseRGBC:
 11433                           	callstack 0
 11434                           
 11435 ;; *************** function ___fldiv *****************
 11436 ;; Defined at:
 11437 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  b               4   21[COMRAM] void 
 11440 ;;  a               4   25[COMRAM] void 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;  grs             4   40[COMRAM] unsigned long 
 11443 ;;  rem             4   33[COMRAM] unsigned long 
 11444 ;;  new_exp         2   38[COMRAM] short 
 11445 ;;  aexp            1   45[COMRAM] unsigned char 
 11446 ;;  bexp            1   44[COMRAM] unsigned char 
 11447 ;;  sign            1   37[COMRAM] unsigned char 
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  4   21[COMRAM] unsigned char 
 11450 ;; Registers used:
 11451 ;;		wreg, status,2, status,0
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11457 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11458 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11459 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11460 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11461 ;;Total ram usage:       25 bytes
 11462 ;; Hardware stack levels used: 1
 11463 ;; Hardware stack levels required when called: 7
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_colourcards_normaliseRGBC
 11468 ;;		_efgtoa
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text57
 11473  003192                     __ptext57:
 11474                           	callstack 0
 11475  003192                     ___fldiv:
 11476                           	callstack 17
 11477  003192  5019               	movf	(___fldiv@b+3)^0,w,c
 11478  003194  0B80               	andlw	128
 11479  003196  6E26               	movwf	___fldiv@sign^0,c
 11480  003198  5019               	movf	(___fldiv@b+3)^0,w,c
 11481  00319A  2419               	addwf	(___fldiv@b+3)^0,w,c
 11482  00319C  6E2D               	movwf	___fldiv@bexp^0,c
 11483  00319E  AE18               	btfss	(___fldiv@b+2)^0,7,c
 11484  0031A0  EFD4  F018         	goto	u9011
 11485  0031A4  EFD6  F018         	goto	u9010
 11486  0031A8                     u9011:
 11487  0031A8  EFD7  F018         	goto	l7147
 11488  0031AC                     u9010:
 11489  0031AC  802D               	bsf	___fldiv@bexp^0,0,c
 11490  0031AE                     l7147:
 11491  0031AE  502D               	movf	___fldiv@bexp^0,w,c
 11492  0031B0  B4D8               	btfsc	status,2,c
 11493  0031B2  EFDD  F018         	goto	u9021
 11494  0031B6  EFDF  F018         	goto	u9020
 11495  0031BA                     u9021:
 11496  0031BA  EFF4  F018         	goto	l7157
 11497  0031BE                     u9020:
 11498  0031BE  282D               	incf	___fldiv@bexp^0,w,c
 11499  0031C0  A4D8               	btfss	status,2,c
 11500  0031C2  EFE5  F018         	goto	u9031
 11501  0031C6  EFE7  F018         	goto	u9030
 11502  0031CA                     u9031:
 11503  0031CA  EFEF  F018         	goto	l7153
 11504  0031CE                     u9030:
 11505  0031CE  0E00               	movlw	0
 11506  0031D0  6E16               	movwf	___fldiv@b^0,c
 11507  0031D2  0E00               	movlw	0
 11508  0031D4  6E17               	movwf	(___fldiv@b+1)^0,c
 11509  0031D6  0E00               	movlw	0
 11510  0031D8  6E18               	movwf	(___fldiv@b+2)^0,c
 11511  0031DA  0E00               	movlw	0
 11512  0031DC  6E19               	movwf	(___fldiv@b+3)^0,c
 11513  0031DE                     l7153:
 11514  0031DE  8E18               	bsf	(___fldiv@b+2)^0,7,c
 11515  0031E0  0E00               	movlw	0
 11516  0031E2  6E19               	movwf	(___fldiv@b+3)^0,c
 11517  0031E4  EFFC  F018         	goto	l7159
 11518  0031E8                     l7157:
 11519  0031E8  0E00               	movlw	0
 11520  0031EA  6E16               	movwf	___fldiv@b^0,c
 11521  0031EC  0E00               	movlw	0
 11522  0031EE  6E17               	movwf	(___fldiv@b+1)^0,c
 11523  0031F0  0E00               	movlw	0
 11524  0031F2  6E18               	movwf	(___fldiv@b+2)^0,c
 11525  0031F4  0E00               	movlw	0
 11526  0031F6  6E19               	movwf	(___fldiv@b+3)^0,c
 11527  0031F8                     l7159:
 11528  0031F8  501D               	movf	(___fldiv@a+3)^0,w,c
 11529  0031FA  0B80               	andlw	128
 11530  0031FC  1A26               	xorwf	___fldiv@sign^0,f,c
 11531  0031FE  501D               	movf	(___fldiv@a+3)^0,w,c
 11532  003200  241D               	addwf	(___fldiv@a+3)^0,w,c
 11533  003202  6E2E               	movwf	___fldiv@aexp^0,c
 11534  003204  AE1C               	btfss	(___fldiv@a+2)^0,7,c
 11535  003206  EF07  F019         	goto	u9041
 11536  00320A  EF09  F019         	goto	u9040
 11537  00320E                     u9041:
 11538  00320E  EF0A  F019         	goto	l7167
 11539  003212                     u9040:
 11540  003212  802E               	bsf	___fldiv@aexp^0,0,c
 11541  003214                     l7167:
 11542  003214  502E               	movf	___fldiv@aexp^0,w,c
 11543  003216  B4D8               	btfsc	status,2,c
 11544  003218  EF10  F019         	goto	u9051
 11545  00321C  EF12  F019         	goto	u9050
 11546  003220                     u9051:
 11547  003220  EF27  F019         	goto	l7177
 11548  003224                     u9050:
 11549  003224  282E               	incf	___fldiv@aexp^0,w,c
 11550  003226  A4D8               	btfss	status,2,c
 11551  003228  EF18  F019         	goto	u9061
 11552  00322C  EF1A  F019         	goto	u9060
 11553  003230                     u9061:
 11554  003230  EF22  F019         	goto	l7173
 11555  003234                     u9060:
 11556  003234  0E00               	movlw	0
 11557  003236  6E1A               	movwf	___fldiv@a^0,c
 11558  003238  0E00               	movlw	0
 11559  00323A  6E1B               	movwf	(___fldiv@a+1)^0,c
 11560  00323C  0E00               	movlw	0
 11561  00323E  6E1C               	movwf	(___fldiv@a+2)^0,c
 11562  003240  0E00               	movlw	0
 11563  003242  6E1D               	movwf	(___fldiv@a+3)^0,c
 11564  003244                     l7173:
 11565  003244  8E1C               	bsf	(___fldiv@a+2)^0,7,c
 11566  003246  0E00               	movlw	0
 11567  003248  6E1D               	movwf	(___fldiv@a+3)^0,c
 11568  00324A  EF2F  F019         	goto	l7179
 11569  00324E                     l7177:
 11570  00324E  0E00               	movlw	0
 11571  003250  6E1A               	movwf	___fldiv@a^0,c
 11572  003252  0E00               	movlw	0
 11573  003254  6E1B               	movwf	(___fldiv@a+1)^0,c
 11574  003256  0E00               	movlw	0
 11575  003258  6E1C               	movwf	(___fldiv@a+2)^0,c
 11576  00325A  0E00               	movlw	0
 11577  00325C  6E1D               	movwf	(___fldiv@a+3)^0,c
 11578  00325E                     l7179:
 11579  00325E  501A               	movf	___fldiv@a^0,w,c
 11580  003260  101B               	iorwf	(___fldiv@a+1)^0,w,c
 11581  003262  101C               	iorwf	(___fldiv@a+2)^0,w,c
 11582  003264  101D               	iorwf	(___fldiv@a+3)^0,w,c
 11583  003266  A4D8               	btfss	status,2,c
 11584  003268  EF38  F019         	goto	u9071
 11585  00326C  EF3A  F019         	goto	u9070
 11586  003270                     u9071:
 11587  003270  EF52  F019         	goto	l7191
 11588  003274                     u9070:
 11589  003274  0E00               	movlw	0
 11590  003276  6E16               	movwf	___fldiv@b^0,c
 11591  003278  0E00               	movlw	0
 11592  00327A  6E17               	movwf	(___fldiv@b+1)^0,c
 11593  00327C  0E00               	movlw	0
 11594  00327E  6E18               	movwf	(___fldiv@b+2)^0,c
 11595  003280  0E00               	movlw	0
 11596  003282  6E19               	movwf	(___fldiv@b+3)^0,c
 11597  003284  0E80               	movlw	128
 11598  003286  1218               	iorwf	(___fldiv@b+2)^0,f,c
 11599  003288  0E7F               	movlw	127
 11600  00328A  1219               	iorwf	(___fldiv@b+3)^0,f,c
 11601  00328C                     l7185:
 11602  00328C  5026               	movf	___fldiv@sign^0,w,c
 11603  00328E  1219               	iorwf	(___fldiv@b+3)^0,f,c
 11604  003290  C016  F016         	movff	___fldiv@b,?___fldiv
 11605  003294  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
 11606  003298  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
 11607  00329C  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
 11608  0032A0  EF95  F01A         	goto	l1369
 11609  0032A4                     l7191:
 11610  0032A4  502D               	movf	___fldiv@bexp^0,w,c
 11611  0032A6  A4D8               	btfss	status,2,c
 11612  0032A8  EF58  F019         	goto	u9081
 11613  0032AC  EF5A  F019         	goto	u9080
 11614  0032B0                     u9081:
 11615  0032B0  EF64  F019         	goto	l7199
 11616  0032B4                     u9080:
 11617  0032B4  0E00               	movlw	0
 11618  0032B6  6E16               	movwf	?___fldiv^0,c
 11619  0032B8  0E00               	movlw	0
 11620  0032BA  6E17               	movwf	(?___fldiv+1)^0,c
 11621  0032BC  0E00               	movlw	0
 11622  0032BE  6E18               	movwf	(?___fldiv+2)^0,c
 11623  0032C0  0E00               	movlw	0
 11624  0032C2  6E19               	movwf	(?___fldiv+3)^0,c
 11625  0032C4  EF95  F01A         	goto	l1369
 11626  0032C8                     l7199:
 11627  0032C8  502E               	movf	___fldiv@aexp^0,w,c
 11628  0032CA  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
 11629  0032CE  6A1F               	clrf	(??___fldiv+1)^0,c
 11630  0032D0  5E1E               	subwf	??___fldiv^0,f,c
 11631  0032D2  0E00               	movlw	0
 11632  0032D4  5A1F               	subwfb	(??___fldiv+1)^0,f,c
 11633  0032D6  0E7F               	movlw	127
 11634  0032D8  241E               	addwf	??___fldiv^0,w,c
 11635  0032DA  6E27               	movwf	___fldiv@new_exp^0,c
 11636  0032DC  0E00               	movlw	0
 11637  0032DE  201F               	addwfc	(??___fldiv+1)^0,w,c
 11638  0032E0  6E28               	movwf	(___fldiv@new_exp+1)^0,c
 11639  0032E2  C016  F022         	movff	___fldiv@b,___fldiv@rem
 11640  0032E6  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
 11641  0032EA  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
 11642  0032EE  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
 11643  0032F2  0E00               	movlw	0
 11644  0032F4  6E16               	movwf	___fldiv@b^0,c
 11645  0032F6  0E00               	movlw	0
 11646  0032F8  6E17               	movwf	(___fldiv@b+1)^0,c
 11647  0032FA  0E00               	movlw	0
 11648  0032FC  6E18               	movwf	(___fldiv@b+2)^0,c
 11649  0032FE  0E00               	movlw	0
 11650  003300  6E19               	movwf	(___fldiv@b+3)^0,c
 11651  003302  0E00               	movlw	0
 11652  003304  6E29               	movwf	___fldiv@grs^0,c
 11653  003306  0E00               	movlw	0
 11654  003308  6E2A               	movwf	(___fldiv@grs+1)^0,c
 11655  00330A  0E00               	movlw	0
 11656  00330C  6E2B               	movwf	(___fldiv@grs+2)^0,c
 11657  00330E  0E00               	movlw	0
 11658  003310  6E2C               	movwf	(___fldiv@grs+3)^0,c
 11659  003312  0E00               	movlw	0
 11660  003314  6E2E               	movwf	___fldiv@aexp^0,c
 11661  003316  EFC5  F019         	goto	l1371
 11662  00331A                     l7209:
 11663  00331A  502E               	movf	___fldiv@aexp^0,w,c
 11664  00331C  B4D8               	btfsc	status,2,c
 11665  00331E  EF93  F019         	goto	u9091
 11666  003322  EF95  F019         	goto	u9090
 11667  003326                     u9091:
 11668  003326  EFAC  F019         	goto	l7217
 11669  00332A                     u9090:
 11670  00332A  90D8               	bcf	status,0,c
 11671  00332C  3622               	rlcf	___fldiv@rem^0,f,c
 11672  00332E  3623               	rlcf	(___fldiv@rem+1)^0,f,c
 11673  003330  3624               	rlcf	(___fldiv@rem+2)^0,f,c
 11674  003332  3625               	rlcf	(___fldiv@rem+3)^0,f,c
 11675  003334  90D8               	bcf	status,0,c
 11676  003336  3616               	rlcf	___fldiv@b^0,f,c
 11677  003338  3617               	rlcf	(___fldiv@b+1)^0,f,c
 11678  00333A  3618               	rlcf	(___fldiv@b+2)^0,f,c
 11679  00333C  3619               	rlcf	(___fldiv@b+3)^0,f,c
 11680  00333E  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
 11681  003340  EFA4  F019         	goto	u9101
 11682  003344  EFA6  F019         	goto	u9100
 11683  003348                     u9101:
 11684  003348  EFA7  F019         	goto	l1374
 11685  00334C                     u9100:
 11686  00334C  8016               	bsf	___fldiv@b^0,0,c
 11687  00334E                     l1374:
 11688  00334E  90D8               	bcf	status,0,c
 11689  003350  3629               	rlcf	___fldiv@grs^0,f,c
 11690  003352  362A               	rlcf	(___fldiv@grs+1)^0,f,c
 11691  003354  362B               	rlcf	(___fldiv@grs+2)^0,f,c
 11692  003356  362C               	rlcf	(___fldiv@grs+3)^0,f,c
 11693  003358                     l7217:
 11694  003358  501A               	movf	___fldiv@a^0,w,c
 11695  00335A  5C22               	subwf	___fldiv@rem^0,w,c
 11696  00335C  501B               	movf	(___fldiv@a+1)^0,w,c
 11697  00335E  5823               	subwfb	(___fldiv@rem+1)^0,w,c
 11698  003360  501C               	movf	(___fldiv@a+2)^0,w,c
 11699  003362  5824               	subwfb	(___fldiv@rem+2)^0,w,c
 11700  003364  501D               	movf	(___fldiv@a+3)^0,w,c
 11701  003366  5825               	subwfb	(___fldiv@rem+3)^0,w,c
 11702  003368  A0D8               	btfss	status,0,c
 11703  00336A  EFB9  F019         	goto	u9111
 11704  00336E  EFBB  F019         	goto	u9110
 11705  003372                     u9111:
 11706  003372  EFC4  F019         	goto	l7223
 11707  003376                     u9110:
 11708  003376  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
 11709  003378  501A               	movf	___fldiv@a^0,w,c
 11710  00337A  5E22               	subwf	___fldiv@rem^0,f,c
 11711  00337C  501B               	movf	(___fldiv@a+1)^0,w,c
 11712  00337E  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
 11713  003380  501C               	movf	(___fldiv@a+2)^0,w,c
 11714  003382  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
 11715  003384  501D               	movf	(___fldiv@a+3)^0,w,c
 11716  003386  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
 11717  003388                     l7223:
 11718  003388  2A2E               	incf	___fldiv@aexp^0,f,c
 11719  00338A                     l1371:
 11720  00338A  0E19               	movlw	25
 11721  00338C  642E               	cpfsgt	___fldiv@aexp^0,c
 11722  00338E  EFCB  F019         	goto	u9121
 11723  003392  EFCD  F019         	goto	u9120
 11724  003396                     u9121:
 11725  003396  EF8D  F019         	goto	l7209
 11726  00339A                     u9120:
 11727  00339A  5022               	movf	___fldiv@rem^0,w,c
 11728  00339C  1023               	iorwf	(___fldiv@rem+1)^0,w,c
 11729  00339E  1024               	iorwf	(___fldiv@rem+2)^0,w,c
 11730  0033A0  1025               	iorwf	(___fldiv@rem+3)^0,w,c
 11731  0033A2  B4D8               	btfsc	status,2,c
 11732  0033A4  EFD6  F019         	goto	u9131
 11733  0033A8  EFD8  F019         	goto	u9130
 11734  0033AC                     u9131:
 11735  0033AC  EFF0  F019         	goto	l7235
 11736  0033B0                     u9130:
 11737  0033B0  8029               	bsf	___fldiv@grs^0,0,c
 11738  0033B2  EFF0  F019         	goto	l7235
 11739  0033B6                     l7229:
 11740  0033B6  90D8               	bcf	status,0,c
 11741  0033B8  3616               	rlcf	___fldiv@b^0,f,c
 11742  0033BA  3617               	rlcf	(___fldiv@b+1)^0,f,c
 11743  0033BC  3618               	rlcf	(___fldiv@b+2)^0,f,c
 11744  0033BE  3619               	rlcf	(___fldiv@b+3)^0,f,c
 11745  0033C0  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
 11746  0033C2  EFE5  F019         	goto	u9141
 11747  0033C6  EFE7  F019         	goto	u9140
 11748  0033CA                     u9141:
 11749  0033CA  EFE8  F019         	goto	l1380
 11750  0033CE                     u9140:
 11751  0033CE  8016               	bsf	___fldiv@b^0,0,c
 11752  0033D0                     l1380:
 11753  0033D0  90D8               	bcf	status,0,c
 11754  0033D2  3629               	rlcf	___fldiv@grs^0,f,c
 11755  0033D4  362A               	rlcf	(___fldiv@grs+1)^0,f,c
 11756  0033D6  362B               	rlcf	(___fldiv@grs+2)^0,f,c
 11757  0033D8  362C               	rlcf	(___fldiv@grs+3)^0,f,c
 11758  0033DA  0627               	decf	___fldiv@new_exp^0,f,c
 11759  0033DC  A0D8               	btfss	status,0,c
 11760  0033DE  0628               	decf	(___fldiv@new_exp+1)^0,f,c
 11761  0033E0                     l7235:
 11762  0033E0  AE18               	btfss	(___fldiv@b+2)^0,7,c
 11763  0033E2  EFF5  F019         	goto	u9151
 11764  0033E6  EFF7  F019         	goto	u9150
 11765  0033EA                     u9151:
 11766  0033EA  EFDB  F019         	goto	l7229
 11767  0033EE                     u9150:
 11768  0033EE  0E00               	movlw	0
 11769  0033F0  6E2E               	movwf	___fldiv@aexp^0,c
 11770  0033F2  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
 11771  0033F4  EFFE  F019         	goto	u9161
 11772  0033F8  EF00  F01A         	goto	u9160
 11773  0033FC                     u9161:
 11774  0033FC  EF24  F01A         	goto	l1382
 11775  003400                     u9160:
 11776  003400  0EFF               	movlw	255
 11777  003402  1429               	andwf	___fldiv@grs^0,w,c
 11778  003404  6E1E               	movwf	??___fldiv^0,c
 11779  003406  0EFF               	movlw	255
 11780  003408  142A               	andwf	(___fldiv@grs+1)^0,w,c
 11781  00340A  6E1F               	movwf	(??___fldiv+1)^0,c
 11782  00340C  0EFF               	movlw	255
 11783  00340E  142B               	andwf	(___fldiv@grs+2)^0,w,c
 11784  003410  6E20               	movwf	(??___fldiv+2)^0,c
 11785  003412  0E7F               	movlw	127
 11786  003414  142C               	andwf	(___fldiv@grs+3)^0,w,c
 11787  003416  6E21               	movwf	(??___fldiv+3)^0,c
 11788  003418  501E               	movf	??___fldiv^0,w,c
 11789  00341A  101F               	iorwf	(??___fldiv+1)^0,w,c
 11790  00341C  1020               	iorwf	(??___fldiv+2)^0,w,c
 11791  00341E  1021               	iorwf	(??___fldiv+3)^0,w,c
 11792  003420  B4D8               	btfsc	status,2,c
 11793  003422  EF15  F01A         	goto	u9171
 11794  003426  EF17  F01A         	goto	u9170
 11795  00342A                     u9171:
 11796  00342A  EF1B  F01A         	goto	l1383
 11797  00342E                     u9170:
 11798  00342E                     l7243:
 11799  00342E  0E01               	movlw	1
 11800  003430  6E2E               	movwf	___fldiv@aexp^0,c
 11801  003432  EF24  F01A         	goto	l1382
 11802  003436                     l1383:
 11803  003436  A016               	btfss	___fldiv@b^0,0,c
 11804  003438  EF20  F01A         	goto	u9181
 11805  00343C  EF22  F01A         	goto	u9180
 11806  003440                     u9181:
 11807  003440  EF24  F01A         	goto	l1382
 11808  003444                     u9180:
 11809  003444  EF17  F01A         	goto	l7243
 11810  003448                     l1382:
 11811  003448  502E               	movf	___fldiv@aexp^0,w,c
 11812  00344A  B4D8               	btfsc	status,2,c
 11813  00344C  EF2A  F01A         	goto	u9191
 11814  003450  EF2C  F01A         	goto	u9190
 11815  003454                     u9191:
 11816  003454  EF50  F01A         	goto	l7255
 11817  003458                     u9190:
 11818  003458  0E01               	movlw	1
 11819  00345A  2616               	addwf	___fldiv@b^0,f,c
 11820  00345C  0E00               	movlw	0
 11821  00345E  2217               	addwfc	(___fldiv@b+1)^0,f,c
 11822  003460  2218               	addwfc	(___fldiv@b+2)^0,f,c
 11823  003462  2219               	addwfc	(___fldiv@b+3)^0,f,c
 11824  003464  A019               	btfss	(___fldiv@b+3)^0,0,c
 11825  003466  EF37  F01A         	goto	u9201
 11826  00346A  EF39  F01A         	goto	u9200
 11827  00346E                     u9201:
 11828  00346E  EF50  F01A         	goto	l7255
 11829  003472                     u9200:
 11830  003472  C016  F01E         	movff	___fldiv@b,??___fldiv
 11831  003476  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
 11832  00347A  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
 11833  00347E  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
 11834  003482  3421               	rlcf	(??___fldiv+3)^0,w,c
 11835  003484  3221               	rrcf	(??___fldiv+3)^0,f,c
 11836  003486  3220               	rrcf	(??___fldiv+2)^0,f,c
 11837  003488  321F               	rrcf	(??___fldiv+1)^0,f,c
 11838  00348A  321E               	rrcf	??___fldiv^0,f,c
 11839  00348C  C01E  F016         	movff	??___fldiv,___fldiv@b
 11840  003490  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
 11841  003494  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
 11842  003498  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
 11843  00349C  4A27               	infsnz	___fldiv@new_exp^0,f,c
 11844  00349E  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
 11845  0034A0                     l7255:
 11846  0034A0  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11847  0034A2  EF5B  F01A         	goto	u9211
 11848  0034A6  5028               	movf	(___fldiv@new_exp+1)^0,w,c
 11849  0034A8  E108               	bnz	u9210
 11850  0034AA  2827               	incf	___fldiv@new_exp^0,w,c
 11851  0034AC  A0D8               	btfss	status,0,c
 11852  0034AE  EF5B  F01A         	goto	u9211
 11853  0034B2  EF5D  F01A         	goto	u9210
 11854  0034B6                     u9211:
 11855  0034B6  EF68  F01A         	goto	l7259
 11856  0034BA                     u9210:
 11857  0034BA  0E00               	movlw	0
 11858  0034BC  6E28               	movwf	(___fldiv@new_exp+1)^0,c
 11859  0034BE  6827               	setf	___fldiv@new_exp^0,c
 11860  0034C0  0E00               	movlw	0
 11861  0034C2  6E16               	movwf	___fldiv@b^0,c
 11862  0034C4  0E00               	movlw	0
 11863  0034C6  6E17               	movwf	(___fldiv@b+1)^0,c
 11864  0034C8  0E00               	movlw	0
 11865  0034CA  6E18               	movwf	(___fldiv@b+2)^0,c
 11866  0034CC  0E00               	movlw	0
 11867  0034CE  6E19               	movwf	(___fldiv@b+3)^0,c
 11868  0034D0                     l7259:
 11869  0034D0  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11870  0034D2  EF75  F01A         	goto	u9220
 11871  0034D6  5028               	movf	(___fldiv@new_exp+1)^0,w,c
 11872  0034D8  E106               	bnz	u9221
 11873  0034DA  0427               	decf	___fldiv@new_exp^0,w,c
 11874  0034DC  B0D8               	btfsc	status,0,c
 11875  0034DE  EF73  F01A         	goto	u9221
 11876  0034E2  EF75  F01A         	goto	u9220
 11877  0034E6                     u9221:
 11878  0034E6  EF83  F01A         	goto	l7263
 11879  0034EA                     u9220:
 11880  0034EA  0E00               	movlw	0
 11881  0034EC  6E28               	movwf	(___fldiv@new_exp+1)^0,c
 11882  0034EE  0E00               	movlw	0
 11883  0034F0  6E27               	movwf	___fldiv@new_exp^0,c
 11884  0034F2  0E00               	movlw	0
 11885  0034F4  6E16               	movwf	___fldiv@b^0,c
 11886  0034F6  0E00               	movlw	0
 11887  0034F8  6E17               	movwf	(___fldiv@b+1)^0,c
 11888  0034FA  0E00               	movlw	0
 11889  0034FC  6E18               	movwf	(___fldiv@b+2)^0,c
 11890  0034FE  0E00               	movlw	0
 11891  003500  6E19               	movwf	(___fldiv@b+3)^0,c
 11892  003502  0E00               	movlw	0
 11893  003504  6E26               	movwf	___fldiv@sign^0,c
 11894  003506                     l7263:
 11895  003506  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
 11896  00350A  A02D               	btfss	___fldiv@bexp^0,0,c
 11897  00350C  EF8A  F01A         	goto	u9231
 11898  003510  EF8C  F01A         	goto	u9230
 11899  003514                     u9231:
 11900  003514  EF8F  F01A         	goto	l7269
 11901  003518                     u9230:
 11902  003518  8E18               	bsf	(___fldiv@b+2)^0,7,c
 11903  00351A  EF90  F01A         	goto	l7271
 11904  00351E                     l7269:
 11905  00351E  9E18               	bcf	(___fldiv@b+2)^0,7,c
 11906  003520                     l7271:
 11907  003520  90D8               	bcf	status,0,c
 11908  003522  302D               	rrcf	___fldiv@bexp^0,w,c
 11909  003524  6E19               	movwf	(___fldiv@b+3)^0,c
 11910  003526  EF46  F019         	goto	l7185
 11911  00352A                     l1369:
 11912  00352A  0012               	return		;funcret
 11913  00352C                     __end_of___fldiv:
 11914                           	callstack 0
 11915                           
 11916 ;; *************** function _checkbatterylevel *****************
 11917 ;; Defined at:
 11918 ;;		line 73 in file "DC_motors.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;  batterylevel    1    8[COMRAM] unsigned char 
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      void 
 11925 ;; Registers used:
 11926 ;;		wreg, status,2, status,0, cstack
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11936 ;;Total ram usage:        1 bytes
 11937 ;; Hardware stack levels used: 1
 11938 ;; Hardware stack levels required when called: 8
 11939 ;; This function calls:
 11940 ;;		_ADC_getval
 11941 ;; This function is called by:
 11942 ;;		_main
 11943 ;; This function uses a non-reentrant model
 11944 ;;
 11945                           
 11946                           	psect	text58
 11947  0060E6                     __ptext58:
 11948                           	callstack 0
 11949  0060E6                     _checkbatterylevel:
 11950                           	callstack 22
 11951  0060E6                     
 11952                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
 11953  0060E6  ECD6  F030         	call	_ADC_getval	;wreg free
 11954  0060EA  6E09               	movwf	checkbatterylevel@batterylevel^0,c
 11955  0060EC                     
 11956                           ;DC_motors.c: 77:     if (batterylevel<200) {
 11957  0060EC  0EC8               	movlw	200
 11958  0060EE  6009               	cpfslt	checkbatterylevel@batterylevel^0,c
 11959  0060F0  EF7C  F030         	goto	u7461
 11960  0060F4  EF7E  F030         	goto	u7460
 11961  0060F8                     u7461:
 11962  0060F8  EF81  F030         	goto	l632
 11963  0060FC                     u7460:
 11964  0060FC                     
 11965                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
 11966  0060FC  8E7C               	bsf	124,7,c	;volatile
 11967                           
 11968                           ;DC_motors.c: 79:     } else {
 11969  0060FE  EF82  F030         	goto	l634
 11970  006102                     l632:
 11971                           
 11972                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
 11973  006102  9E7C               	bcf	124,7,c	;volatile
 11974  006104                     l634:
 11975  006104  0012               	return		;funcret
 11976  006106                     __end_of_checkbatterylevel:
 11977                           	callstack 0
 11978                           
 11979 ;; *************** function _ADC_getval *****************
 11980 ;; Defined at:
 11981 ;;		line 26 in file "ADC.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;		None
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;  tmpval          1    7[COMRAM] unsigned char 
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  1    wreg      unsigned char 
 11988 ;; Registers used:
 11989 ;;		wreg, status,2
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11999 ;;Total ram usage:        1 bytes
 12000 ;; Hardware stack levels used: 1
 12001 ;; Hardware stack levels required when called: 7
 12002 ;; This function calls:
 12003 ;;		Nothing
 12004 ;; This function is called by:
 12005 ;;		_checkbatterylevel
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           	psect	text59
 12010  0061AC                     __ptext59:
 12011                           	callstack 0
 12012  0061AC                     _ADC_getval:
 12013                           	callstack 22
 12014  0061AC                     
 12015                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
 12016  0061AC  8060               	bsf	96,0,c	;volatile
 12017  0061AE                     l380:
 12018  0061AE  B060               	btfsc	96,0,c	;volatile
 12019  0061B0  EFDC  F030         	goto	u7421
 12020  0061B4  EFDE  F030         	goto	u7420
 12021  0061B8                     u7421:
 12022  0061B8  EFD7  F030         	goto	l380
 12023  0061BC                     u7420:
 12024  0061BC                     
 12025                           ;ADC.c: 31:     tmpval = ADRESH;
 12026  0061BC  CF64 F008          	movff	3940,ADC_getval@tmpval	;volatile
 12027  0061C0                     
 12028                           ;ADC.c: 34:     return tmpval;
 12029  0061C0  5008               	movf	ADC_getval@tmpval^0,w,c
 12030  0061C2  0012               	return		;funcret
 12031  0061C4                     __end_of_ADC_getval:
 12032                           	callstack 0
 12033                           
 12034 ;; *************** function _USART4_init *****************
 12035 ;; Defined at:
 12036 ;;		line 7 in file "serial_comm.c"
 12037 ;; Parameters:    Size  Location     Type
 12038 ;;		None
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;		None
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  1    wreg      void 
 12043 ;; Registers used:
 12044 ;;		wreg, status,2
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12054 ;;Total ram usage:        0 bytes
 12055 ;; Hardware stack levels used: 1
 12056 ;; Hardware stack levels required when called: 7
 12057 ;; This function calls:
 12058 ;;		Nothing
 12059 ;; This function is called by:
 12060 ;;		_main
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text60
 12065  006106                     __ptext60:
 12066                           	callstack 0
 12067  006106                     _USART4_init:
 12068                           	callstack 23
 12069  006106                     
 12070                           ;serial_comm.c: 10:     RC0PPS = 0x12;
 12071  006106  0E12               	movlw	18
 12072  006108  010E               	movlb	14	; () banked
 12073  00610A  6F62               	movwf	98,b	;volatile
 12074                           
 12075                           ;serial_comm.c: 11:     RX4PPS = 0x11;
 12076  00610C  0E11               	movlw	17
 12077  00610E  6F15               	movwf	21,b	;volatile
 12078  006110                     
 12079                           ; BSR set to: 14
 12080                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
 12081  006110  8283               	bsf	131,1,c	;volatile
 12082  006112                     
 12083                           ; BSR set to: 14
 12084                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
 12085  006112  97E9               	bcf	233,3,b	;volatile
 12086  006114                     
 12087                           ; BSR set to: 14
 12088                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
 12089  006114  95E8               	bcf	232,2,b	;volatile
 12090                           
 12091                           ;serial_comm.c: 16:     SP4BRGL = 51;
 12092  006116  0E33               	movlw	51
 12093  006118  6FE5               	movwf	229,b	;volatile
 12094                           
 12095                           ;serial_comm.c: 17:     SP4BRGH = 0;
 12096  00611A  0E00               	movlw	0
 12097  00611C  6FE6               	movwf	230,b	;volatile
 12098  00611E                     
 12099                           ; BSR set to: 14
 12100                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
 12101  00611E  89E7               	bsf	231,4,b	;volatile
 12102  006120                     
 12103                           ; BSR set to: 14
 12104                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
 12105  006120  8BE8               	bsf	232,5,b	;volatile
 12106  006122                     
 12107                           ; BSR set to: 14
 12108                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
 12109  006122  8FE7               	bsf	231,7,b	;volatile
 12110  006124                     
 12111                           ; BSR set to: 14
 12112  006124  0012               	return		;funcret
 12113  006126                     __end_of_USART4_init:
 12114                           	callstack 0
 12115                           
 12116 ;; *************** function _DCmotors_init *****************
 12117 ;; Defined at:
 12118 ;;		line 10 in file "DC_motors.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;  PWMperiod       1    wreg     unsigned char 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  PWMperiod       1    7[COMRAM] unsigned char 
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      void 
 12125 ;; Registers used:
 12126 ;;		wreg, status,2, cstack
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12136 ;;Total ram usage:        1 bytes
 12137 ;; Hardware stack levels used: 1
 12138 ;; Hardware stack levels required when called: 8
 12139 ;; This function calls:
 12140 ;;		_buggyLEDs_init
 12141 ;;		_clicker2LEDs_init
 12142 ;;		_clicker2buttons_init
 12143 ;; This function is called by:
 12144 ;;		_main
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text61
 12149  005BF8                     __ptext61:
 12150                           	callstack 0
 12151  005BF8                     _DCmotors_init:
 12152                           	callstack 22
 12153                           
 12154                           ; BSR set to: 14
 12155                           ;incstack = 0
 12156                           ;DCmotors_init@PWMperiod stored from wreg
 12157  005BF8  6E08               	movwf	DCmotors_init@PWMperiod^0,c
 12158  005BFA                     
 12159                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
 12160  005BFA  50BD               	movf	189,w,c	;volatile
 12161  005BFC  0B8F               	andlw	-113
 12162  005BFE  0940               	iorlw	64
 12163  005C00  6EBD               	movwf	189,c	;volatile
 12164                           
 12165                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
 12166  005C02  0EE0               	movlw	-32
 12167  005C04  16BE               	andwf	190,f,c	;volatile
 12168                           
 12169                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
 12170  005C06  50BF               	movf	191,w,c	;volatile
 12171  005C08  0BF0               	andlw	-16
 12172  005C0A  0901               	iorlw	1
 12173  005C0C  6EBF               	movwf	191,c	;volatile
 12174  005C0E                     
 12175                           ;DC_motors.c: 18:     T2PR=PWMperiod;
 12176  005C0E  C008  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 12177  005C12                     
 12178                           ;DC_motors.c: 19:     T2CONbits.ON=1;
 12179  005C12  8EBD               	bsf	189,7,c	;volatile
 12180  005C14                     
 12181                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
 12182  005C14  9485               	bcf	133,2,c	;volatile
 12183  005C16                     
 12184                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
 12185  005C16  9885               	bcf	133,4,c	;volatile
 12186  005C18                     
 12187                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
 12188  005C18  9E83               	bcf	131,7,c	;volatile
 12189  005C1A                     
 12190                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
 12191  005C1A  9C87               	bcf	135,6,c	;volatile
 12192  005C1C                     
 12193                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
 12194  005C1C  947D               	bcf	125,2,c	;volatile
 12195  005C1E                     
 12196                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
 12197  005C1E  987D               	bcf	125,4,c	;volatile
 12198  005C20                     
 12199                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
 12200  005C20  9E7B               	bcf	123,7,c	;volatile
 12201  005C22                     
 12202                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
 12203  005C22  9C7F               	bcf	127,6,c	;volatile
 12204                           
 12205                           ;DC_motors.c: 32:     PWM6DCH=0;
 12206  005C24  0E00               	movlw	0
 12207  005C26  6EA3               	movwf	163,c	;volatile
 12208                           
 12209                           ;DC_motors.c: 33:     PWM7DCH=0;
 12210  005C28  0E00               	movlw	0
 12211  005C2A  6EA0               	movwf	160,c	;volatile
 12212  005C2C                     
 12213                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
 12214  005C2C  8EA4               	bsf	164,7,c	;volatile
 12215  005C2E                     
 12216                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
 12217  005C2E  8EA1               	bsf	161,7,c	;volatile
 12218                           
 12219                           ;DC_motors.c: 38:     RE2PPS=0x0A;
 12220  005C30  0E0A               	movlw	10
 12221  005C32  010E               	movlb	14	; () banked
 12222  005C34  6F74               	movwf	116,b	;volatile
 12223                           
 12224                           ;DC_motors.c: 39:     RC7PPS=0x0B;
 12225  005C36  0E0B               	movlw	11
 12226  005C38  6F69               	movwf	105,b	;volatile
 12227  005C3A                     
 12228                           ; BSR set to: 14
 12229                           ;DC_motors.c: 42:     clicker2buttons_init();
 12230  005C3A  ECFA  F030         	call	_clicker2buttons_init	;wreg free
 12231  005C3E                     
 12232                           ;DC_motors.c: 43:     clicker2LEDs_init();
 12233  005C3E  EC15  F031         	call	_clicker2LEDs_init	;wreg free
 12234  005C42                     
 12235                           ;DC_motors.c: 44:     buggyLEDs_init();
 12236  005C42  ECE2  F030         	call	_buggyLEDs_init	;wreg free
 12237  005C46  0012               	return		;funcret
 12238  005C48                     __end_of_DCmotors_init:
 12239                           	callstack 0
 12240                           
 12241 ;; *************** function _clicker2buttons_init *****************
 12242 ;; Defined at:
 12243 ;;		line 7 in file "buttons_n_LEDs.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;		None
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;		None
 12248 ;; Return value:  Size  Location     Type
 12249 ;;                  1    wreg      void 
 12250 ;; Registers used:
 12251 ;;		None
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12261 ;;Total ram usage:        0 bytes
 12262 ;; Hardware stack levels used: 1
 12263 ;; Hardware stack levels required when called: 7
 12264 ;; This function calls:
 12265 ;;		Nothing
 12266 ;; This function is called by:
 12267 ;;		_DCmotors_init
 12268 ;; This function uses a non-reentrant model
 12269 ;;
 12270                           
 12271                           	psect	text62
 12272  0061F4                     __ptext62:
 12273                           	callstack 0
 12274  0061F4                     _clicker2buttons_init:
 12275                           	callstack 22
 12276  0061F4                     
 12277                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
 12278  0061F4  8486               	bsf	134,2,c	;volatile
 12279                           
 12280                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
 12281  0061F6  8686               	bsf	134,3,c	;volatile
 12282                           
 12283                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
 12284  0061F8  010E               	movlb	14	; () banked
 12285  0061FA  95B4               	bcf	180,2,b	;volatile
 12286                           
 12287                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
 12288  0061FC  97B4               	bcf	180,3,b	;volatile
 12289  0061FE                     
 12290                           ; BSR set to: 14
 12291  0061FE  0012               	return		;funcret
 12292  006200                     __end_of_clicker2buttons_init:
 12293                           	callstack 0
 12294                           
 12295 ;; *************** function _clicker2LEDs_init *****************
 12296 ;; Defined at:
 12297 ;;		line 19 in file "buttons_n_LEDs.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;		None
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;		None
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  1    wreg      void 
 12304 ;; Registers used:
 12305 ;;		None
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12315 ;;Total ram usage:        0 bytes
 12316 ;; Hardware stack levels used: 1
 12317 ;; Hardware stack levels required when called: 7
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		_DCmotors_init
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           	psect	text63
 12326  00622A                     __ptext63:
 12327                           	callstack 0
 12328  00622A                     _clicker2LEDs_init:
 12329                           	callstack 22
 12330  00622A                     
 12331                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
 12332  00622A  9E84               	bcf	132,7,c	;volatile
 12333                           
 12334                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
 12335  00622C  9688               	bcf	136,3,c	;volatile
 12336                           
 12337                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
 12338  00622E  9E7C               	bcf	124,7,c	;volatile
 12339                           
 12340                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
 12341  006230  9680               	bcf	128,3,c	;volatile
 12342  006232  0012               	return		;funcret
 12343  006234                     __end_of_clicker2LEDs_init:
 12344                           	callstack 0
 12345                           
 12346 ;; *************** function _buggyLEDs_init *****************
 12347 ;; Defined at:
 12348 ;;		line 31 in file "buttons_n_LEDs.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		None
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12366 ;;Total ram usage:        0 bytes
 12367 ;; Hardware stack levels used: 1
 12368 ;; Hardware stack levels required when called: 7
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_DCmotors_init
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           	psect	text64
 12377  0061C4                     __ptext64:
 12378                           	callstack 0
 12379  0061C4                     _buggyLEDs_init:
 12380                           	callstack 22
 12381  0061C4                     
 12382                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
 12383  0061C4  9288               	bcf	136,1,c	;volatile
 12384                           
 12385                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
 12386  0061C6  9684               	bcf	132,3,c	;volatile
 12387                           
 12388                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
 12389  0061C8  9884               	bcf	132,4,c	;volatile
 12390                           
 12391                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
 12392  0061CA  9086               	bcf	134,0,c	;volatile
 12393                           
 12394                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
 12395  0061CC  9088               	bcf	136,0,c	;volatile
 12396                           
 12397                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
 12398  0061CE  9280               	bcf	128,1,c	;volatile
 12399                           
 12400                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
 12401  0061D0  967C               	bcf	124,3,c	;volatile
 12402                           
 12403                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
 12404  0061D2  987C               	bcf	124,4,c	;volatile
 12405                           
 12406                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
 12407  0061D4  907E               	bcf	126,0,c	;volatile
 12408                           
 12409                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
 12410  0061D6  9080               	bcf	128,0,c	;volatile
 12411  0061D8  0012               	return		;funcret
 12412  0061DA                     __end_of_buggyLEDs_init:
 12413                           	callstack 0
 12414                           
 12415 ;; *************** function _DCmotors_calibration *****************
 12416 ;; Defined at:
 12417 ;;		line 243 in file "DC_motors.c"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;  mL              2   75[COMRAM] PTR struct .
 12420 ;;		 -> main@motorL(9), 
 12421 ;;  mR              2   77[COMRAM] PTR struct .
 12422 ;;		 -> main@motorR(9), 
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;		None
 12425 ;; Return value:  Size  Location     Type
 12426 ;;                  1    wreg      void 
 12427 ;; Registers used:
 12428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12429 ;; Tracked objects:
 12430 ;;		On entry : 0/0
 12431 ;;		On exit  : 0/0
 12432 ;;		Unchanged: 0/0
 12433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12436 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12437 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12438 ;;Total ram usage:        6 bytes
 12439 ;; Hardware stack levels used: 1
 12440 ;; Hardware stack levels required when called: 11
 12441 ;; This function calls:
 12442 ;;		_DCmotors_adjustval
 12443 ;;		_stop
 12444 ;;		_turnleft
 12445 ;;		_turnright
 12446 ;; This function is called by:
 12447 ;;		_main
 12448 ;; This function uses a non-reentrant model
 12449 ;;
 12450                           
 12451                           	psect	text65
 12452  004848                     __ptext65:
 12453                           	callstack 0
 12454  004848                     _DCmotors_calibration:
 12455                           	callstack 19
 12456  004848                     l693:
 12457  004848  A48E               	btfss	142,2,c	;volatile
 12458  00484A  EF29  F024         	goto	u11561
 12459  00484E  EF2B  F024         	goto	u11560
 12460  004852                     u11561:
 12461  004852  EF32  F024         	goto	l697
 12462  004856                     u11560:
 12463  004856  B68E               	btfsc	142,3,c	;volatile
 12464  004858  EF30  F024         	goto	u11571
 12465  00485C  EF32  F024         	goto	u11570
 12466  004860                     u11571:
 12467  004860  EF24  F024         	goto	l693
 12468  004864                     u11570:
 12469  004864                     l697:
 12470                           
 12471                           ;DC_motors.c: 246:     LATDbits.LATD3 = 1;
 12472  004864  867C               	bsf	124,3,c	;volatile
 12473  004866                     
 12474                           ;DC_motors.c: 247:     turnleft(mL, mR, 360);
 12475  004866  C04C  F060         	movff	DCmotors_calibration@mL,turnleft@mL
 12476  00486A  C04D  F061         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
 12477  00486E  C04E  F062         	movff	DCmotors_calibration@mR,turnleft@mR
 12478  004872  C04F  F063         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
 12479  004876  0E01               	movlw	1
 12480  004878  0100               	movlb	0	; () banked
 12481  00487A  6F65               	movwf	(turnleft@deg+1)& (0+255),b
 12482  00487C  0E68               	movlw	104
 12483  00487E  6F64               	movwf	turnleft@deg& (0+255),b
 12484  004880  EC4C  F02E         	call	_turnleft	;wreg free
 12485  004884                     
 12486                           ;DC_motors.c: 248:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12487  004884  0E52               	movlw	82
 12488  004886  0100               	movlb	0	; () banked
 12489  004888  6F67               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12490  00488A  0E2B               	movlw	43
 12491  00488C  6F66               	movwf	??_DCmotors_calibration& (0+255),b
 12492  00488E  0E00               	movlw	0
 12493  004890                     u12547:
 12494  004890  2EE8               	decfsz	wreg,f,c
 12495  004892  D7FE               	bra	u12547
 12496  004894  2F66               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12497  004896  D7FC               	bra	u12547
 12498  004898  2F67               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12499  00489A  D7FA               	bra	u12547
 12500  00489C  F000               	nop	
 12501  00489E                     
 12502                           ;DC_motors.c: 249:     stop(mL, mR);
 12503  00489E  C04C  F021         	movff	DCmotors_calibration@mL,stop@mL
 12504  0048A2  C04D  F022         	movff	DCmotors_calibration@mL+1,stop@mL+1
 12505  0048A6  C04E  F023         	movff	DCmotors_calibration@mR,stop@mR
 12506  0048AA  C04F  F024         	movff	DCmotors_calibration@mR+1,stop@mR+1
 12507  0048AE  ECB8  F02B         	call	_stop	;wreg free
 12508  0048B2                     l698:
 12509  0048B2  A48E               	btfss	142,2,c	;volatile
 12510  0048B4  EF5E  F024         	goto	u11581
 12511  0048B8  EF60  F024         	goto	u11580
 12512  0048BC                     u11581:
 12513  0048BC  EF67  F024         	goto	l8677
 12514  0048C0                     u11580:
 12515  0048C0  B68E               	btfsc	142,3,c	;volatile
 12516  0048C2  EF65  F024         	goto	u11591
 12517  0048C6  EF67  F024         	goto	u11590
 12518  0048CA                     u11591:
 12519  0048CA  EF59  F024         	goto	l698
 12520  0048CE                     u11590:
 12521  0048CE                     l8677:
 12522                           
 12523                           ;DC_motors.c: 252:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12524  0048CE  0E52               	movlw	82
 12525  0048D0  0100               	movlb	0	; () banked
 12526  0048D2  6F67               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12527  0048D4  0E2B               	movlw	43
 12528  0048D6  6F66               	movwf	??_DCmotors_calibration& (0+255),b
 12529  0048D8  0E00               	movlw	0
 12530  0048DA                     u12557:
 12531  0048DA  2EE8               	decfsz	wreg,f,c
 12532  0048DC  D7FE               	bra	u12557
 12533  0048DE  2F66               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12534  0048E0  D7FC               	bra	u12557
 12535  0048E2  2F67               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12536  0048E4  D7FA               	bra	u12557
 12537  0048E6  F000               	nop	
 12538  0048E8                     
 12539                           ;DC_motors.c: 253:     DCmotors_adjustval();
 12540  0048E8  ECDA  F02A         	call	_DCmotors_adjustval	;wreg free
 12541  0048EC                     
 12542                           ;DC_motors.c: 254:     LATDbits.LATD3 = 0;
 12543  0048EC  967C               	bcf	124,3,c	;volatile
 12544  0048EE                     l703:
 12545  0048EE  A48E               	btfss	142,2,c	;volatile
 12546  0048F0  EF7C  F024         	goto	u11601
 12547  0048F4  EF7E  F024         	goto	u11600
 12548  0048F8                     u11601:
 12549  0048F8  EF85  F024         	goto	l707
 12550  0048FC                     u11600:
 12551  0048FC  B68E               	btfsc	142,3,c	;volatile
 12552  0048FE  EF83  F024         	goto	u11611
 12553  004902  EF85  F024         	goto	u11610
 12554  004906                     u11611:
 12555  004906  EF77  F024         	goto	l703
 12556  00490A                     u11610:
 12557  00490A                     l707:
 12558                           
 12559                           ;DC_motors.c: 257:     LATDbits.LATD3 = 1;
 12560  00490A  867C               	bsf	124,3,c	;volatile
 12561  00490C                     
 12562                           ;DC_motors.c: 258:     turnright(mL, mR, 360);
 12563  00490C  C04C  F060         	movff	DCmotors_calibration@mL,turnright@mL
 12564  004910  C04D  F061         	movff	DCmotors_calibration@mL+1,turnright@mL+1
 12565  004914  C04E  F062         	movff	DCmotors_calibration@mR,turnright@mR
 12566  004918  C04F  F063         	movff	DCmotors_calibration@mR+1,turnright@mR+1
 12567  00491C  0E01               	movlw	1
 12568  00491E  0100               	movlb	0	; () banked
 12569  004920  6F65               	movwf	(turnright@deg+1)& (0+255),b
 12570  004922  0E68               	movlw	104
 12571  004924  6F64               	movwf	turnright@deg& (0+255),b
 12572  004926  EC24  F02E         	call	_turnright	;wreg free
 12573  00492A                     
 12574                           ;DC_motors.c: 259:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12575  00492A  0E52               	movlw	82
 12576  00492C  0100               	movlb	0	; () banked
 12577  00492E  6F67               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12578  004930  0E2B               	movlw	43
 12579  004932  6F66               	movwf	??_DCmotors_calibration& (0+255),b
 12580  004934  0E00               	movlw	0
 12581  004936                     u12567:
 12582  004936  2EE8               	decfsz	wreg,f,c
 12583  004938  D7FE               	bra	u12567
 12584  00493A  2F66               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12585  00493C  D7FC               	bra	u12567
 12586  00493E  2F67               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12587  004940  D7FA               	bra	u12567
 12588  004942  F000               	nop	
 12589  004944                     
 12590                           ;DC_motors.c: 260:     stop(mL, mR);
 12591  004944  C04C  F021         	movff	DCmotors_calibration@mL,stop@mL
 12592  004948  C04D  F022         	movff	DCmotors_calibration@mL+1,stop@mL+1
 12593  00494C  C04E  F023         	movff	DCmotors_calibration@mR,stop@mR
 12594  004950  C04F  F024         	movff	DCmotors_calibration@mR+1,stop@mR+1
 12595  004954  ECB8  F02B         	call	_stop	;wreg free
 12596  004958                     l708:
 12597  004958  A48E               	btfss	142,2,c	;volatile
 12598  00495A  EFB1  F024         	goto	u11621
 12599  00495E  EFB3  F024         	goto	u11620
 12600  004962                     u11621:
 12601  004962  EFBA  F024         	goto	l8693
 12602  004966                     u11620:
 12603  004966  B68E               	btfsc	142,3,c	;volatile
 12604  004968  EFB8  F024         	goto	u11631
 12605  00496C  EFBA  F024         	goto	u11630
 12606  004970                     u11631:
 12607  004970  EFAC  F024         	goto	l708
 12608  004974                     u11630:
 12609  004974                     l8693:
 12610                           
 12611                           ;DC_motors.c: 263:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12612  004974  0E52               	movlw	82
 12613  004976  0100               	movlb	0	; () banked
 12614  004978  6F67               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12615  00497A  0E2B               	movlw	43
 12616  00497C  6F66               	movwf	??_DCmotors_calibration& (0+255),b
 12617  00497E  0E00               	movlw	0
 12618  004980                     u12577:
 12619  004980  2EE8               	decfsz	wreg,f,c
 12620  004982  D7FE               	bra	u12577
 12621  004984  2F66               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12622  004986  D7FC               	bra	u12577
 12623  004988  2F67               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12624  00498A  D7FA               	bra	u12577
 12625  00498C  F000               	nop	
 12626  00498E                     
 12627                           ;DC_motors.c: 264:     DCmotors_adjustval();
 12628  00498E  ECDA  F02A         	call	_DCmotors_adjustval	;wreg free
 12629  004992                     
 12630                           ;DC_motors.c: 265:     LATDbits.LATD3 = 0;
 12631  004992  967C               	bcf	124,3,c	;volatile
 12632  004994  0012               	return		;funcret
 12633  004996                     __end_of_DCmotors_calibration:
 12634                           	callstack 0
 12635                           
 12636 ;; *************** function _turnright *****************
 12637 ;; Defined at:
 12638 ;;		line 231 in file "DC_motors.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;  mL              2    0[BANK0 ] PTR struct .
 12641 ;;		 -> main@motorL(9), 
 12642 ;;  mR              2    2[BANK0 ] PTR struct .
 12643 ;;		 -> main@motorR(9), 
 12644 ;;  deg             2    4[BANK0 ] unsigned int 
 12645 ;; Auto vars:     Size  Location     Type
 12646 ;;		None
 12647 ;; Return value:  Size  Location     Type
 12648 ;;                  1    wreg      void 
 12649 ;; Registers used:
 12650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12651 ;; Tracked objects:
 12652 ;;		On entry : 0/0
 12653 ;;		On exit  : 0/0
 12654 ;;		Unchanged: 0/0
 12655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12659 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12660 ;;Total ram usage:        6 bytes
 12661 ;; Hardware stack levels used: 1
 12662 ;; Hardware stack levels required when called: 10
 12663 ;; This function calls:
 12664 ;;		_left
 12665 ;;		_right
 12666 ;; This function is called by:
 12667 ;;		_colourcards_readRGBC
 12668 ;;		_DCmotors_calibration
 12669 ;;		_DCmotors_testing
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673                           	psect	text66
 12674  005C48                     __ptext66:
 12675                           	callstack 0
 12676  005C48                     _turnright:
 12677                           	callstack 19
 12678  005C48                     
 12679                           ;DC_motors.c: 231: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 232: {;DC_motors.c: 233:     if (returnhome_flag==0) {
 12680  005C48  0100               	movlb	0	; () banked
 12681  005C4A  51F1               	movf	_returnhome_flag& (0+255),w,b	;volatile
 12682  005C4C  A4D8               	btfss	status,2,c
 12683  005C4E  EF2B  F02E         	goto	u11431
 12684  005C52  EF2D  F02E         	goto	u11430
 12685  005C56                     u11431:
 12686  005C56  EF3D  F02E         	goto	l8551
 12687  005C5A                     u11430:
 12688  005C5A                     
 12689                           ; BSR set to: 0
 12690                           ;DC_motors.c: 234:         right(mL, mR, deg);
 12691  005C5A  C060  F021         	movff	turnright@mL,right@mL
 12692  005C5E  C061  F022         	movff	turnright@mL+1,right@mL+1
 12693  005C62  C062  F023         	movff	turnright@mR,right@mR
 12694  005C66  C063  F024         	movff	turnright@mR+1,right@mR+1
 12695  005C6A  C064  F025         	movff	turnright@deg,right@deg
 12696  005C6E  C065  F026         	movff	turnright@deg+1,right@deg+1
 12697  005C72  ECCB  F024         	call	_right	;wreg free
 12698                           
 12699                           ;DC_motors.c: 235:     } else {
 12700  005C76  EF4B  F02E         	goto	l690
 12701  005C7A                     l8551:
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;DC_motors.c: 236:         left(mL, mR, deg);
 12705  005C7A  C060  F03F         	movff	turnright@mL,left@mL
 12706  005C7E  C061  F040         	movff	turnright@mL+1,left@mL+1
 12707  005C82  C062  F041         	movff	turnright@mR,left@mR
 12708  005C86  C063  F042         	movff	turnright@mR+1,left@mR+1
 12709  005C8A  C064  F043         	movff	turnright@deg,left@deg
 12710  005C8E  C065  F044         	movff	turnright@deg+1,left@deg+1
 12711  005C92  ECD3  F01E         	call	_left	;wreg free
 12712  005C96                     l690:
 12713  005C96  0012               	return		;funcret
 12714  005C98                     __end_of_turnright:
 12715                           	callstack 0
 12716                           
 12717 ;; *************** function _turnleft *****************
 12718 ;; Defined at:
 12719 ;;		line 218 in file "DC_motors.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  mL              2    0[BANK0 ] PTR struct .
 12722 ;;		 -> main@motorL(9), 
 12723 ;;  mR              2    2[BANK0 ] PTR struct .
 12724 ;;		 -> main@motorR(9), 
 12725 ;;  deg             2    4[BANK0 ] unsigned int 
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;		None
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  1    wreg      void 
 12730 ;; Registers used:
 12731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12737 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12740 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12741 ;;Total ram usage:        6 bytes
 12742 ;; Hardware stack levels used: 1
 12743 ;; Hardware stack levels required when called: 10
 12744 ;; This function calls:
 12745 ;;		_left
 12746 ;;		_right
 12747 ;; This function is called by:
 12748 ;;		_colourcards_readRGBC
 12749 ;;		_DCmotors_calibration
 12750 ;;		_DCmotors_testing
 12751 ;; This function uses a non-reentrant model
 12752 ;;
 12753                           
 12754                           	psect	text67
 12755  005C98                     __ptext67:
 12756                           	callstack 0
 12757  005C98                     _turnleft:
 12758                           	callstack 19
 12759  005C98                     
 12760                           ;DC_motors.c: 218: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {
 12761  005C98  0100               	movlb	0	; () banked
 12762  005C9A  51F1               	movf	_returnhome_flag& (0+255),w,b	;volatile
 12763  005C9C  A4D8               	btfss	status,2,c
 12764  005C9E  EF53  F02E         	goto	u11461
 12765  005CA2  EF55  F02E         	goto	u11460
 12766  005CA6                     u11461:
 12767  005CA6  EF65  F02E         	goto	l8571
 12768  005CAA                     u11460:
 12769  005CAA                     
 12770                           ; BSR set to: 0
 12771                           ;DC_motors.c: 221:         left(mL, mR, deg);
 12772  005CAA  C060  F03F         	movff	turnleft@mL,left@mL
 12773  005CAE  C061  F040         	movff	turnleft@mL+1,left@mL+1
 12774  005CB2  C062  F041         	movff	turnleft@mR,left@mR
 12775  005CB6  C063  F042         	movff	turnleft@mR+1,left@mR+1
 12776  005CBA  C064  F043         	movff	turnleft@deg,left@deg
 12777  005CBE  C065  F044         	movff	turnleft@deg+1,left@deg+1
 12778  005CC2  ECD3  F01E         	call	_left	;wreg free
 12779                           
 12780                           ;DC_motors.c: 222:     } else {
 12781  005CC6  EF73  F02E         	goto	l685
 12782  005CCA                     l8571:
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;DC_motors.c: 223:         right(mL, mR, deg);
 12786  005CCA  C060  F021         	movff	turnleft@mL,right@mL
 12787  005CCE  C061  F022         	movff	turnleft@mL+1,right@mL+1
 12788  005CD2  C062  F023         	movff	turnleft@mR,right@mR
 12789  005CD6  C063  F024         	movff	turnleft@mR+1,right@mR+1
 12790  005CDA  C064  F025         	movff	turnleft@deg,right@deg
 12791  005CDE  C065  F026         	movff	turnleft@deg+1,right@deg+1
 12792  005CE2  ECCB  F024         	call	_right	;wreg free
 12793  005CE6                     l685:
 12794  005CE6  0012               	return		;funcret
 12795  005CE8                     __end_of_turnleft:
 12796                           	callstack 0
 12797                           
 12798 ;; *************** function _right *****************
 12799 ;; Defined at:
 12800 ;;		line 183 in file "DC_motors.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;  mL              2   32[COMRAM] PTR struct .
 12803 ;;		 -> main@motorL(9), 
 12804 ;;  mR              2   34[COMRAM] PTR struct .
 12805 ;;		 -> main@motorR(9), 
 12806 ;;  deg             2   36[COMRAM] unsigned int 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;  i               2   42[COMRAM] unsigned int 
 12809 ;;  delay           2   40[COMRAM] unsigned int 
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  1    wreg      void 
 12812 ;; Registers used:
 12813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12819 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12822 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12823 ;;Total ram usage:       12 bytes
 12824 ;; Hardware stack levels used: 1
 12825 ;; Hardware stack levels required when called: 9
 12826 ;; This function calls:
 12827 ;;		_DCmotors_setPWM
 12828 ;; This function is called by:
 12829 ;;		_turnleft
 12830 ;;		_turnright
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           	psect	text68
 12835  004996                     __ptext68:
 12836                           	callstack 0
 12837  004996                     _right:
 12838                           	callstack 19
 12839  004996                     
 12840                           ;DC_motors.c: 183: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           184: {;DC_motors.c: 186:     unsigned int delay = (8*deg) + 180;
 12841  004996  C025  F027         	movff	right@deg,??_right
 12842  00499A  C026  F028         	movff	right@deg+1,??_right+1
 12843  00499E  90D8               	bcf	status,0,c
 12844  0049A0  3627               	rlcf	??_right^0,f,c
 12845  0049A2  3628               	rlcf	(??_right+1)^0,f,c
 12846  0049A4  90D8               	bcf	status,0,c
 12847  0049A6  3627               	rlcf	??_right^0,f,c
 12848  0049A8  3628               	rlcf	(??_right+1)^0,f,c
 12849  0049AA  90D8               	bcf	status,0,c
 12850  0049AC  3627               	rlcf	??_right^0,f,c
 12851  0049AE  3628               	rlcf	(??_right+1)^0,f,c
 12852  0049B0  0EB4               	movlw	180
 12853  0049B2  2427               	addwf	??_right^0,w,c
 12854  0049B4  6E29               	movwf	right@delay^0,c
 12855  0049B6  0E00               	movlw	0
 12856  0049B8  2028               	addwfc	(??_right+1)^0,w,c
 12857  0049BA  6E2A               	movwf	(right@delay+1)^0,c
 12858  0049BC                     
 12859                           ;DC_motors.c: 189:     mL->direction = 1;
 12860  0049BC  EE20 F001          	lfsr	2,1
 12861  0049C0  5021               	movf	right@mL^0,w,c
 12862  0049C2  26D9               	addwf	fsr2l,f,c
 12863  0049C4  5022               	movf	(right@mL+1)^0,w,c
 12864  0049C6  22DA               	addwfc	fsr2h,f,c
 12865  0049C8  0E01               	movlw	1
 12866  0049CA  6EDF               	movwf	indf2,c
 12867  0049CC                     
 12868                           ;DC_motors.c: 190:     mR->direction = 0;
 12869  0049CC  EE20 F001          	lfsr	2,1
 12870  0049D0  5023               	movf	right@mR^0,w,c
 12871  0049D2  26D9               	addwf	fsr2l,f,c
 12872  0049D4  5024               	movf	(right@mR+1)^0,w,c
 12873  0049D6  22DA               	addwfc	fsr2h,f,c
 12874  0049D8  0E00               	movlw	0
 12875  0049DA  6EDF               	movwf	indf2,c
 12876                           
 12877                           ;DC_motors.c: 193:     while((mL->power < 40) || (mR->power < 40)){
 12878  0049DC  EF33  F025         	goto	l8453
 12879  0049E0                     l8437:
 12880                           
 12881                           ;DC_motors.c: 195:         LATHbits.LATH0 = !LATHbits.LATH0;
 12882  0049E0  A080               	btfss	128,0,c	;volatile
 12883  0049E2  EFF5  F024         	goto	u11311
 12884  0049E6  EFF9  F024         	goto	u11310
 12885  0049EA                     u11311:
 12886  0049EA  6A27               	clrf	??_right^0,c
 12887  0049EC  2A27               	incf	??_right^0,f,c
 12888  0049EE  EFFA  F024         	goto	u11328
 12889  0049F2                     u11310:
 12890  0049F2  6A27               	clrf	??_right^0,c
 12891  0049F4                     u11328:
 12892  0049F4  5080               	movf	128,w,c	;volatile
 12893  0049F6  1827               	xorwf	??_right^0,w,c
 12894  0049F8  0BFE               	andlw	-2
 12895  0049FA  1827               	xorwf	??_right^0,w,c
 12896  0049FC  6E80               	movwf	128,c	;volatile
 12897  0049FE                     
 12898                           ;DC_motors.c: 198:         if (mL->power < 40) {mL->power += 10;}
 12899  0049FE  C021  FFD9         	movff	right@mL,fsr2l
 12900  004A02  C022  FFDA         	movff	right@mL+1,fsr2h
 12901  004A06  0E28               	movlw	40
 12902  004A08  60DF               	cpfslt	indf2,c
 12903  004A0A  EF09  F025         	goto	u11331
 12904  004A0E  EF0B  F025         	goto	u11330
 12905  004A12                     u11331:
 12906  004A12  EF11  F025         	goto	l8443
 12907  004A16                     u11330:
 12908  004A16  C021  FFD9         	movff	right@mL,fsr2l
 12909  004A1A  C022  FFDA         	movff	right@mL+1,fsr2h
 12910  004A1E  0E0A               	movlw	10
 12911  004A20  26DF               	addwf	indf2,f,c
 12912  004A22                     l8443:
 12913                           
 12914                           ;DC_motors.c: 199:         if (mR->power < 40) {mR->power += 10;}
 12915  004A22  C023  FFD9         	movff	right@mR,fsr2l
 12916  004A26  C024  FFDA         	movff	right@mR+1,fsr2h
 12917  004A2A  0E28               	movlw	40
 12918  004A2C  60DF               	cpfslt	indf2,c
 12919  004A2E  EF1B  F025         	goto	u11341
 12920  004A32  EF1D  F025         	goto	u11340
 12921  004A36                     u11341:
 12922  004A36  EF23  F025         	goto	l8447
 12923  004A3A                     u11340:
 12924  004A3A  C023  FFD9         	movff	right@mR,fsr2l
 12925  004A3E  C024  FFDA         	movff	right@mR+1,fsr2h
 12926  004A42  0E0A               	movlw	10
 12927  004A44  26DF               	addwf	indf2,f,c
 12928  004A46                     l8447:
 12929                           
 12930                           ;DC_motors.c: 202:         DCmotors_setPWM(mL);
 12931  004A46  C021  F016         	movff	right@mL,DCmotors_setPWM@m
 12932  004A4A  C022  F017         	movff	right@mL+1,DCmotors_setPWM@m+1
 12933  004A4E  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
 12934  004A52                     
 12935                           ;DC_motors.c: 203:         DCmotors_setPWM(mR);
 12936  004A52  C023  F016         	movff	right@mR,DCmotors_setPWM@m
 12937  004A56  C024  F017         	movff	right@mR+1,DCmotors_setPWM@m+1
 12938  004A5A  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
 12939  004A5E                     
 12940                           ;DC_motors.c: 204:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 12941  004A5E  0EA0               	movlw	160
 12942  004A60                     u12587:
 12943  004A60  D000               	nop2	
 12944  004A62  2EE8               	decfsz	wreg,f,c
 12945  004A64  D7FD               	bra	u12587
 12946  004A66                     l8453:
 12947                           
 12948                           ;DC_motors.c: 193:     while((mL->power < 40) || (mR->power < 40)){
 12949  004A66  C021  FFD9         	movff	right@mL,fsr2l
 12950  004A6A  C022  FFDA         	movff	right@mL+1,fsr2h
 12951  004A6E  0E27               	movlw	39
 12952  004A70  64DF               	cpfsgt	indf2,c
 12953  004A72  EF3D  F025         	goto	u11351
 12954  004A76  EF3F  F025         	goto	u11350
 12955  004A7A                     u11351:
 12956  004A7A  EFF0  F024         	goto	l8437
 12957  004A7E                     u11350:
 12958  004A7E  C023  FFD9         	movff	right@mR,fsr2l
 12959  004A82  C024  FFDA         	movff	right@mR+1,fsr2h
 12960  004A86  0E27               	movlw	39
 12961  004A88  64DF               	cpfsgt	indf2,c
 12962  004A8A  EF49  F025         	goto	u11361
 12963  004A8E  EF4B  F025         	goto	u11360
 12964  004A92                     u11361:
 12965  004A92  EFF0  F024         	goto	l8437
 12966  004A96                     u11360:
 12967  004A96                     
 12968                           ;DC_motors.c: 207:     unsigned int i;;DC_motors.c: 208:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
 12969  004A96  0E00               	movlw	0
 12970  004A98  6E2C               	movwf	(right@i+1)^0,c
 12971  004A9A  0E00               	movlw	0
 12972  004A9C  6E2B               	movwf	right@i^0,c
 12973  004A9E  EF5B  F025         	goto	l677
 12974  004AA2                     l8459:
 12975  004AA2  0E15               	movlw	21
 12976  004AA4  6E27               	movwf	??_right^0,c
 12977  004AA6  0EC6               	movlw	198
 12978  004AA8                     u12597:
 12979  004AA8  2EE8               	decfsz	wreg,f,c
 12980  004AAA  D7FE               	bra	u12597
 12981  004AAC  2E27               	decfsz	??_right^0,f,c
 12982  004AAE  D7FC               	bra	u12597
 12983  004AB0  D000               	nop2	
 12984  004AB2  4A2B               	infsnz	right@i^0,f,c
 12985  004AB4  2A2C               	incf	(right@i+1)^0,f,c
 12986  004AB6                     l677:
 12987  004AB6  5029               	movf	right@delay^0,w,c
 12988  004AB8  5C2B               	subwf	right@i^0,w,c
 12989  004ABA  502A               	movf	(right@delay+1)^0,w,c
 12990  004ABC  582C               	subwfb	(right@i+1)^0,w,c
 12991  004ABE  A0D8               	btfss	status,0,c
 12992  004AC0  EF64  F025         	goto	u11371
 12993  004AC4  EF66  F025         	goto	u11370
 12994  004AC8                     u11371:
 12995  004AC8  EF51  F025         	goto	l8459
 12996  004ACC                     u11370:
 12997  004ACC                     
 12998                           ;DC_motors.c: 209:     _delay((unsigned long)((1)*(64000000/4000.0)));
 12999  004ACC  0E15               	movlw	21
 13000  004ACE  6E27               	movwf	??_right^0,c
 13001  004AD0  0EC6               	movlw	198
 13002  004AD2                     u12607:
 13003  004AD2  2EE8               	decfsz	wreg,f,c
 13004  004AD4  D7FE               	bra	u12607
 13005  004AD6  2E27               	decfsz	??_right^0,f,c
 13006  004AD8  D7FC               	bra	u12607
 13007  004ADA  D000               	nop2	
 13008  004ADC                     
 13009                           ;DC_motors.c: 211:     LATHbits.LATH0 = 0;
 13010  004ADC  9080               	bcf	128,0,c	;volatile
 13011  004ADE  0012               	return		;funcret
 13012  004AE0                     __end_of_right:
 13013                           	callstack 0
 13014                           
 13015 ;; *************** function _left *****************
 13016 ;; Defined at:
 13017 ;;		line 150 in file "DC_motors.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;  mL              2   62[COMRAM] PTR struct .
 13020 ;;		 -> main@motorL(9), 
 13021 ;;  mR              2   64[COMRAM] PTR struct .
 13022 ;;		 -> main@motorR(9), 
 13023 ;;  deg             2   66[COMRAM] unsigned int 
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;  delay           4   69[COMRAM] unsigned int 
 13026 ;;  i               2   73[COMRAM] unsigned int 
 13027 ;; Return value:  Size  Location     Type
 13028 ;;                  1    wreg      void 
 13029 ;; Registers used:
 13030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13031 ;; Tracked objects:
 13032 ;;		On entry : 0/0
 13033 ;;		On exit  : 0/0
 13034 ;;		Unchanged: 0/0
 13035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13036 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13037 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13039 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13040 ;;Total ram usage:       13 bytes
 13041 ;; Hardware stack levels used: 1
 13042 ;; Hardware stack levels required when called: 9
 13043 ;; This function calls:
 13044 ;;		_DCmotors_setPWM
 13045 ;;		___fladd
 13046 ;;		___flge
 13047 ;;		___flmul
 13048 ;;		___xxtofl
 13049 ;; This function is called by:
 13050 ;;		_turnleft
 13051 ;;		_turnright
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           	psect	text69
 13056  003DA6                     __ptext69:
 13057                           	callstack 0
 13058  003DA6                     _left:
 13059                           	callstack 19
 13060  003DA6                     
 13061                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     double delay = (deg*12.5) - 135;
 13062  003DA6  0E00               	movlw	0
 13063  003DA8  6E1A               	movwf	___flmul@a^0,c
 13064  003DAA  0E00               	movlw	0
 13065  003DAC  6E1B               	movwf	(___flmul@a+1)^0,c
 13066  003DAE  0E48               	movlw	72
 13067  003DB0  6E1C               	movwf	(___flmul@a+2)^0,c
 13068  003DB2  0E41               	movlw	65
 13069  003DB4  6E1D               	movwf	(___flmul@a+3)^0,c
 13070  003DB6  C043  F008         	movff	left@deg,___xxtofl@val
 13071  003DBA  C044  F009         	movff	left@deg+1,___xxtofl@val+1
 13072  003DBE  6A0A               	clrf	(___xxtofl@val+2)^0,c
 13073  003DC0  6A0B               	clrf	(___xxtofl@val+3)^0,c
 13074  003DC2  0E00               	movlw	0
 13075  003DC4  ECF9  F01D         	call	___xxtofl
 13076  003DC8  C008  F016         	movff	?___xxtofl,___flmul@b
 13077  003DCC  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
 13078  003DD0  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
 13079  003DD4  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
 13080  003DD8  ECB4  F016         	call	___flmul	;wreg free
 13081  003DDC  C016  F02F         	movff	?___flmul,___fladd@b
 13082  003DE0  C017  F030         	movff	?___flmul+1,___fladd@b+1
 13083  003DE4  C018  F031         	movff	?___flmul+2,___fladd@b+2
 13084  003DE8  C019  F032         	movff	?___flmul+3,___fladd@b+3
 13085  003DEC  0E00               	movlw	0
 13086  003DEE  6E33               	movwf	___fladd@a^0,c
 13087  003DF0  0E00               	movlw	0
 13088  003DF2  6E34               	movwf	(___fladd@a+1)^0,c
 13089  003DF4  0E07               	movlw	7
 13090  003DF6  6E35               	movwf	(___fladd@a+2)^0,c
 13091  003DF8  0EC3               	movlw	195
 13092  003DFA  6E36               	movwf	(___fladd@a+3)^0,c
 13093  003DFC  EC54  F014         	call	___fladd	;wreg free
 13094  003E00  C02F  F046         	movff	?___fladd,left@delay
 13095  003E04  C030  F047         	movff	?___fladd+1,left@delay+1
 13096  003E08  C031  F048         	movff	?___fladd+2,left@delay+2
 13097  003E0C  C032  F049         	movff	?___fladd+3,left@delay+3
 13098  003E10                     
 13099                           ;DC_motors.c: 156:     mL->direction = 0;
 13100  003E10  EE20 F001          	lfsr	2,1
 13101  003E14  503F               	movf	left@mL^0,w,c
 13102  003E16  26D9               	addwf	fsr2l,f,c
 13103  003E18  5040               	movf	(left@mL+1)^0,w,c
 13104  003E1A  22DA               	addwfc	fsr2h,f,c
 13105  003E1C  0E00               	movlw	0
 13106  003E1E  6EDF               	movwf	indf2,c
 13107  003E20                     
 13108                           ;DC_motors.c: 157:     mR->direction = 1;
 13109  003E20  EE20 F001          	lfsr	2,1
 13110  003E24  5041               	movf	left@mR^0,w,c
 13111  003E26  26D9               	addwf	fsr2l,f,c
 13112  003E28  5042               	movf	(left@mR+1)^0,w,c
 13113  003E2A  22DA               	addwfc	fsr2h,f,c
 13114  003E2C  0E01               	movlw	1
 13115  003E2E  6EDF               	movwf	indf2,c
 13116                           
 13117                           ;DC_motors.c: 160:     while((mL->power < 40) || (mR->power < 40)){
 13118  003E30  EF5D  F01F         	goto	l8419
 13119  003E34                     l8403:
 13120                           
 13121                           ;DC_motors.c: 162:         LATFbits.LATF0 = !LATFbits.LATF0;
 13122  003E34  A07E               	btfss	126,0,c	;volatile
 13123  003E36  EF1F  F01F         	goto	u11241
 13124  003E3A  EF23  F01F         	goto	u11240
 13125  003E3E                     u11241:
 13126  003E3E  6A45               	clrf	??_left^0,c
 13127  003E40  2A45               	incf	??_left^0,f,c
 13128  003E42  EF24  F01F         	goto	u11258
 13129  003E46                     u11240:
 13130  003E46  6A45               	clrf	??_left^0,c
 13131  003E48                     u11258:
 13132  003E48  507E               	movf	126,w,c	;volatile
 13133  003E4A  1845               	xorwf	??_left^0,w,c
 13134  003E4C  0BFE               	andlw	-2
 13135  003E4E  1845               	xorwf	??_left^0,w,c
 13136  003E50  6E7E               	movwf	126,c	;volatile
 13137  003E52                     
 13138                           ;DC_motors.c: 165:         if (mL->power < 40) {mL->power += 10;}
 13139  003E52  C03F  FFD9         	movff	left@mL,fsr2l
 13140  003E56  C040  FFDA         	movff	left@mL+1,fsr2h
 13141  003E5A  0E28               	movlw	40
 13142  003E5C  60DF               	cpfslt	indf2,c
 13143  003E5E  EF33  F01F         	goto	u11261
 13144  003E62  EF35  F01F         	goto	u11260
 13145  003E66                     u11261:
 13146  003E66  EF3B  F01F         	goto	l8409
 13147  003E6A                     u11260:
 13148  003E6A  C03F  FFD9         	movff	left@mL,fsr2l
 13149  003E6E  C040  FFDA         	movff	left@mL+1,fsr2h
 13150  003E72  0E0A               	movlw	10
 13151  003E74  26DF               	addwf	indf2,f,c
 13152  003E76                     l8409:
 13153                           
 13154                           ;DC_motors.c: 166:         if (mR->power < 40) {mR->power += 10;}
 13155  003E76  C041  FFD9         	movff	left@mR,fsr2l
 13156  003E7A  C042  FFDA         	movff	left@mR+1,fsr2h
 13157  003E7E  0E28               	movlw	40
 13158  003E80  60DF               	cpfslt	indf2,c
 13159  003E82  EF45  F01F         	goto	u11271
 13160  003E86  EF47  F01F         	goto	u11270
 13161  003E8A                     u11271:
 13162  003E8A  EF4D  F01F         	goto	l8413
 13163  003E8E                     u11270:
 13164  003E8E  C041  FFD9         	movff	left@mR,fsr2l
 13165  003E92  C042  FFDA         	movff	left@mR+1,fsr2h
 13166  003E96  0E0A               	movlw	10
 13167  003E98  26DF               	addwf	indf2,f,c
 13168  003E9A                     l8413:
 13169                           
 13170                           ;DC_motors.c: 169:         DCmotors_setPWM(mL);
 13171  003E9A  C03F  F016         	movff	left@mL,DCmotors_setPWM@m
 13172  003E9E  C040  F017         	movff	left@mL+1,DCmotors_setPWM@m+1
 13173  003EA2  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
 13174  003EA6                     
 13175                           ;DC_motors.c: 170:         DCmotors_setPWM(mR);
 13176  003EA6  C041  F016         	movff	left@mR,DCmotors_setPWM@m
 13177  003EAA  C042  F017         	movff	left@mR+1,DCmotors_setPWM@m+1
 13178  003EAE  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
 13179  003EB2                     
 13180                           ;DC_motors.c: 171:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 13181  003EB2  0EA0               	movlw	160
 13182  003EB4                     u12617:
 13183  003EB4  D000               	nop2	
 13184  003EB6  2EE8               	decfsz	wreg,f,c
 13185  003EB8  D7FD               	bra	u12617
 13186  003EBA                     l8419:
 13187                           
 13188                           ;DC_motors.c: 160:     while((mL->power < 40) || (mR->power < 40)){
 13189  003EBA  C03F  FFD9         	movff	left@mL,fsr2l
 13190  003EBE  C040  FFDA         	movff	left@mL+1,fsr2h
 13191  003EC2  0E27               	movlw	39
 13192  003EC4  64DF               	cpfsgt	indf2,c
 13193  003EC6  EF67  F01F         	goto	u11281
 13194  003ECA  EF69  F01F         	goto	u11280
 13195  003ECE                     u11281:
 13196  003ECE  EF1A  F01F         	goto	l8403
 13197  003ED2                     u11280:
 13198  003ED2  C041  FFD9         	movff	left@mR,fsr2l
 13199  003ED6  C042  FFDA         	movff	left@mR+1,fsr2h
 13200  003EDA  0E27               	movlw	39
 13201  003EDC  64DF               	cpfsgt	indf2,c
 13202  003EDE  EF73  F01F         	goto	u11291
 13203  003EE2  EF75  F01F         	goto	u11290
 13204  003EE6                     u11291:
 13205  003EE6  EF1A  F01F         	goto	l8403
 13206  003EEA                     u11290:
 13207  003EEA                     
 13208                           ;DC_motors.c: 174:     unsigned int i;;DC_motors.c: 175:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
 13209  003EEA  0E00               	movlw	0
 13210  003EEC  6E4B               	movwf	(left@i+1)^0,c
 13211  003EEE  0E00               	movlw	0
 13212  003EF0  6E4A               	movwf	left@i^0,c
 13213  003EF2  EF85  F01F         	goto	l8429
 13214  003EF6                     l8425:
 13215  003EF6  0E15               	movlw	21
 13216  003EF8  6E45               	movwf	??_left^0,c
 13217  003EFA  0EC6               	movlw	198
 13218  003EFC                     u12627:
 13219  003EFC  2EE8               	decfsz	wreg,f,c
 13220  003EFE  D7FE               	bra	u12627
 13221  003F00  2E45               	decfsz	??_left^0,f,c
 13222  003F02  D7FC               	bra	u12627
 13223  003F04  D000               	nop2	
 13224  003F06  4A4A               	infsnz	left@i^0,f,c
 13225  003F08  2A4B               	incf	(left@i+1)^0,f,c
 13226  003F0A                     l8429:
 13227  003F0A  C04A  F008         	movff	left@i,___xxtofl@val
 13228  003F0E  C04B  F009         	movff	left@i+1,___xxtofl@val+1
 13229  003F12  6A0A               	clrf	(___xxtofl@val+2)^0,c
 13230  003F14  6A0B               	clrf	(___xxtofl@val+3)^0,c
 13231  003F16  0E00               	movlw	0
 13232  003F18  ECF9  F01D         	call	___xxtofl
 13233  003F1C  C008  F02F         	movff	?___xxtofl,___flge@ff1
 13234  003F20  C009  F030         	movff	?___xxtofl+1,___flge@ff1+1
 13235  003F24  C00A  F031         	movff	?___xxtofl+2,___flge@ff1+2
 13236  003F28  C00B  F032         	movff	?___xxtofl+3,___flge@ff1+3
 13237  003F2C  C046  F033         	movff	left@delay,___flge@ff2
 13238  003F30  C047  F034         	movff	left@delay+1,___flge@ff2+1
 13239  003F34  C048  F035         	movff	left@delay+2,___flge@ff2+2
 13240  003F38  C049  F036         	movff	left@delay+3,___flge@ff2+3
 13241  003F3C  EC29  F027         	call	___flge	;wreg free
 13242  003F40  A0D8               	btfss	status,0,c
 13243  003F42  EFA5  F01F         	goto	u11301
 13244  003F46  EFA7  F01F         	goto	u11300
 13245  003F4A                     u11301:
 13246  003F4A  EF7B  F01F         	goto	l8425
 13247  003F4E                     u11300:
 13248  003F4E                     
 13249                           ;DC_motors.c: 177:     LATFbits.LATF0 = 0;
 13250  003F4E  907E               	bcf	126,0,c	;volatile
 13251  003F50  0012               	return		;funcret
 13252  003F52                     __end_of_left:
 13253                           	callstack 0
 13254                           
 13255 ;; *************** function ___xxtofl *****************
 13256 ;; Defined at:
 13257 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  sign            1    wreg     unsigned char 
 13260 ;;  val             4    7[COMRAM] long 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;  sign            1   15[COMRAM] unsigned char 
 13263 ;;  arg             4   17[COMRAM] unsigned long 
 13264 ;;  exp             1   16[COMRAM] unsigned char 
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  4    7[COMRAM] unsigned char 
 13267 ;; Registers used:
 13268 ;;		wreg, status,2, status,0
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13275 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13277 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13278 ;;Total ram usage:       14 bytes
 13279 ;; Hardware stack levels used: 1
 13280 ;; Hardware stack levels required when called: 7
 13281 ;; This function calls:
 13282 ;;		Nothing
 13283 ;; This function is called by:
 13284 ;;		_colourcards_normaliseRGBC
 13285 ;;		_left
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text70
 13290  003BF2                     __ptext70:
 13291                           	callstack 0
 13292  003BF2                     ___xxtofl:
 13293                           	callstack 20
 13294                           
 13295                           ;incstack = 0
 13296                           ;___xxtofl@sign stored from wreg
 13297  003BF2  6E10               	movwf	___xxtofl@sign^0,c
 13298  003BF4  5010               	movf	___xxtofl@sign^0,w,c
 13299  003BF6  B4D8               	btfsc	status,2,c
 13300  003BF8  EF00  F01E         	goto	u7021
 13301  003BFC  EF02  F01E         	goto	u7020
 13302  003C00                     u7021:
 13303  003C00  EF24  F01E         	goto	l1442
 13304  003C04                     u7020:
 13305  003C04  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
 13306  003C06  EF09  F01E         	goto	u7030
 13307  003C0A  EF07  F01E         	goto	u7031
 13308  003C0E                     u7031:
 13309  003C0E  EF24  F01E         	goto	l1442
 13310  003C12                     u7030:
 13311  003C12  C008  F00C         	movff	___xxtofl@val,??___xxtofl
 13312  003C16  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
 13313  003C1A  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
 13314  003C1E  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
 13315  003C22  1E0C               	comf	??___xxtofl^0,f,c
 13316  003C24  1E0D               	comf	(??___xxtofl+1)^0,f,c
 13317  003C26  1E0E               	comf	(??___xxtofl+2)^0,f,c
 13318  003C28  1E0F               	comf	(??___xxtofl+3)^0,f,c
 13319  003C2A  2A0C               	incf	??___xxtofl^0,f,c
 13320  003C2C  0E00               	movlw	0
 13321  003C2E  220D               	addwfc	(??___xxtofl+1)^0,f,c
 13322  003C30  220E               	addwfc	(??___xxtofl+2)^0,f,c
 13323  003C32  220F               	addwfc	(??___xxtofl+3)^0,f,c
 13324  003C34  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
 13325  003C38  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
 13326  003C3C  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
 13327  003C40  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
 13328  003C44  EF2C  F01E         	goto	l5889
 13329  003C48                     l1442:
 13330  003C48  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
 13331  003C4C  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13332  003C50  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13333  003C54  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13334  003C58                     l5889:
 13335  003C58  5008               	movf	___xxtofl@val^0,w,c
 13336  003C5A  1009               	iorwf	(___xxtofl@val+1)^0,w,c
 13337  003C5C  100A               	iorwf	(___xxtofl@val+2)^0,w,c
 13338  003C5E  100B               	iorwf	(___xxtofl@val+3)^0,w,c
 13339  003C60  A4D8               	btfss	status,2,c
 13340  003C62  EF35  F01E         	goto	u7041
 13341  003C66  EF37  F01E         	goto	u7040
 13342  003C6A                     u7041:
 13343  003C6A  EF41  F01E         	goto	l5895
 13344  003C6E                     u7040:
 13345  003C6E  0E00               	movlw	0
 13346  003C70  6E08               	movwf	?___xxtofl^0,c
 13347  003C72  0E00               	movlw	0
 13348  003C74  6E09               	movwf	(?___xxtofl+1)^0,c
 13349  003C76  0E00               	movlw	0
 13350  003C78  6E0A               	movwf	(?___xxtofl+2)^0,c
 13351  003C7A  0E00               	movlw	0
 13352  003C7C  6E0B               	movwf	(?___xxtofl+3)^0,c
 13353  003C7E  EFD2  F01E         	goto	l1445
 13354  003C82                     l5895:
 13355  003C82  0E96               	movlw	150
 13356  003C84  6E11               	movwf	___xxtofl@exp^0,c
 13357  003C86  EF4B  F01E         	goto	l5899
 13358  003C8A                     l5897:
 13359  003C8A  2A11               	incf	___xxtofl@exp^0,f,c
 13360  003C8C  90D8               	bcf	status,0,c
 13361  003C8E  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
 13362  003C90  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
 13363  003C92  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
 13364  003C94  3212               	rrcf	___xxtofl@arg^0,f,c
 13365  003C96                     l5899:
 13366  003C96  0E00               	movlw	0
 13367  003C98  1412               	andwf	___xxtofl@arg^0,w,c
 13368  003C9A  6E0C               	movwf	??___xxtofl^0,c
 13369  003C9C  0E00               	movlw	0
 13370  003C9E  1413               	andwf	(___xxtofl@arg+1)^0,w,c
 13371  003CA0  6E0D               	movwf	(??___xxtofl+1)^0,c
 13372  003CA2  0E00               	movlw	0
 13373  003CA4  1414               	andwf	(___xxtofl@arg+2)^0,w,c
 13374  003CA6  6E0E               	movwf	(??___xxtofl+2)^0,c
 13375  003CA8  0EFE               	movlw	254
 13376  003CAA  1415               	andwf	(___xxtofl@arg+3)^0,w,c
 13377  003CAC  6E0F               	movwf	(??___xxtofl+3)^0,c
 13378  003CAE  500C               	movf	??___xxtofl^0,w,c
 13379  003CB0  100D               	iorwf	(??___xxtofl+1)^0,w,c
 13380  003CB2  100E               	iorwf	(??___xxtofl+2)^0,w,c
 13381  003CB4  100F               	iorwf	(??___xxtofl+3)^0,w,c
 13382  003CB6  A4D8               	btfss	status,2,c
 13383  003CB8  EF60  F01E         	goto	u7051
 13384  003CBC  EF62  F01E         	goto	u7050
 13385  003CC0                     u7051:
 13386  003CC0  EF45  F01E         	goto	l5897
 13387  003CC4                     u7050:
 13388  003CC4  EF70  F01E         	goto	l1449
 13389  003CC8                     l5901:
 13390  003CC8  2A11               	incf	___xxtofl@exp^0,f,c
 13391  003CCA  0E01               	movlw	1
 13392  003CCC  2612               	addwf	___xxtofl@arg^0,f,c
 13393  003CCE  0E00               	movlw	0
 13394  003CD0  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
 13395  003CD2  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
 13396  003CD4  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
 13397  003CD6  90D8               	bcf	status,0,c
 13398  003CD8  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
 13399  003CDA  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
 13400  003CDC  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
 13401  003CDE  3212               	rrcf	___xxtofl@arg^0,f,c
 13402  003CE0                     l1449:
 13403  003CE0  0E00               	movlw	0
 13404  003CE2  1412               	andwf	___xxtofl@arg^0,w,c
 13405  003CE4  6E0C               	movwf	??___xxtofl^0,c
 13406  003CE6  0E00               	movlw	0
 13407  003CE8  1413               	andwf	(___xxtofl@arg+1)^0,w,c
 13408  003CEA  6E0D               	movwf	(??___xxtofl+1)^0,c
 13409  003CEC  0E00               	movlw	0
 13410  003CEE  1414               	andwf	(___xxtofl@arg+2)^0,w,c
 13411  003CF0  6E0E               	movwf	(??___xxtofl+2)^0,c
 13412  003CF2  0EFF               	movlw	255
 13413  003CF4  1415               	andwf	(___xxtofl@arg+3)^0,w,c
 13414  003CF6  6E0F               	movwf	(??___xxtofl+3)^0,c
 13415  003CF8  500C               	movf	??___xxtofl^0,w,c
 13416  003CFA  100D               	iorwf	(??___xxtofl+1)^0,w,c
 13417  003CFC  100E               	iorwf	(??___xxtofl+2)^0,w,c
 13418  003CFE  100F               	iorwf	(??___xxtofl+3)^0,w,c
 13419  003D00  A4D8               	btfss	status,2,c
 13420  003D02  EF85  F01E         	goto	u7061
 13421  003D06  EF87  F01E         	goto	u7060
 13422  003D0A                     u7061:
 13423  003D0A  EF64  F01E         	goto	l5901
 13424  003D0E                     u7060:
 13425  003D0E  EF8F  F01E         	goto	l5909
 13426  003D12                     l5907:
 13427  003D12  0611               	decf	___xxtofl@exp^0,f,c
 13428  003D14  90D8               	bcf	status,0,c
 13429  003D16  3612               	rlcf	___xxtofl@arg^0,f,c
 13430  003D18  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
 13431  003D1A  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
 13432  003D1C  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
 13433  003D1E                     l5909:
 13434  003D1E  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
 13435  003D20  EF94  F01E         	goto	u7071
 13436  003D24  EF96  F01E         	goto	u7070
 13437  003D28                     u7071:
 13438  003D28  EF9E  F01E         	goto	l1456
 13439  003D2C                     u7070:
 13440  003D2C  0E02               	movlw	2
 13441  003D2E  6011               	cpfslt	___xxtofl@exp^0,c
 13442  003D30  EF9C  F01E         	goto	u7081
 13443  003D34  EF9E  F01E         	goto	u7080
 13444  003D38                     u7081:
 13445  003D38  EF89  F01E         	goto	l5907
 13446  003D3C                     u7080:
 13447  003D3C                     l1456:
 13448  003D3C  B011               	btfsc	___xxtofl@exp^0,0,c
 13449  003D3E  EFA3  F01E         	goto	u7091
 13450  003D42  EFA5  F01E         	goto	u7090
 13451  003D46                     u7091:
 13452  003D46  EFA6  F01E         	goto	l5915
 13453  003D4A                     u7090:
 13454  003D4A  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
 13455  003D4C                     l5915:
 13456  003D4C  90D8               	bcf	status,0,c
 13457  003D4E  3211               	rrcf	___xxtofl@exp^0,f,c
 13458  003D50  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
 13459  003D54  6A0D               	clrf	(??___xxtofl+1)^0,c
 13460  003D56  6A0E               	clrf	(??___xxtofl+2)^0,c
 13461  003D58  6A0F               	clrf	(??___xxtofl+3)^0,c
 13462  003D5A  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
 13463  003D5E  6A0E               	clrf	(??___xxtofl+2)^0,c
 13464  003D60  6A0D               	clrf	(??___xxtofl+1)^0,c
 13465  003D62  6A0C               	clrf	??___xxtofl^0,c
 13466  003D64  500C               	movf	??___xxtofl^0,w,c
 13467  003D66  1212               	iorwf	___xxtofl@arg^0,f,c
 13468  003D68  500D               	movf	(??___xxtofl+1)^0,w,c
 13469  003D6A  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
 13470  003D6C  500E               	movf	(??___xxtofl+2)^0,w,c
 13471  003D6E  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
 13472  003D70  500F               	movf	(??___xxtofl+3)^0,w,c
 13473  003D72  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
 13474  003D74  5010               	movf	___xxtofl@sign^0,w,c
 13475  003D76  B4D8               	btfsc	status,2,c
 13476  003D78  EFC0  F01E         	goto	u7101
 13477  003D7C  EFC2  F01E         	goto	u7100
 13478  003D80                     u7101:
 13479  003D80  EFCA  F01E         	goto	l5925
 13480  003D84                     u7100:
 13481  003D84  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
 13482  003D86  EFC9  F01E         	goto	u7110
 13483  003D8A  EFC7  F01E         	goto	u7111
 13484  003D8E                     u7111:
 13485  003D8E  EFCA  F01E         	goto	l5925
 13486  003D92                     u7110:
 13487  003D92  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
 13488  003D94                     l5925:
 13489  003D94  C012  F008         	movff	___xxtofl@arg,?___xxtofl
 13490  003D98  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
 13491  003D9C  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
 13492  003DA0  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
 13493  003DA4                     l1445:
 13494  003DA4  0012               	return		;funcret
 13495  003DA6                     __end_of___xxtofl:
 13496                           	callstack 0
 13497                           
 13498 ;; *************** function ___flmul *****************
 13499 ;; Defined at:
 13500 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;  b               4   21[COMRAM] unsigned char 
 13503 ;;  a               4   25[COMRAM] unsigned char 
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;  prod            4   40[COMRAM] struct .
 13506 ;;  grs             4   35[COMRAM] unsigned long 
 13507 ;;  temp            2   44[COMRAM] struct .
 13508 ;;  bexp            1   39[COMRAM] unsigned char 
 13509 ;;  aexp            1   34[COMRAM] unsigned char 
 13510 ;;  sign            1   33[COMRAM] unsigned char 
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  4   21[COMRAM] unsigned char 
 13513 ;; Registers used:
 13514 ;;		wreg, status,2, status,0, prodl, prodh
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13520 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13521 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13522 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13523 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13524 ;;Total ram usage:       25 bytes
 13525 ;; Hardware stack levels used: 1
 13526 ;; Hardware stack levels required when called: 7
 13527 ;; This function calls:
 13528 ;;		Nothing
 13529 ;; This function is called by:
 13530 ;;		_left
 13531 ;;		_efgtoa
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text71
 13536  002D68                     __ptext71:
 13537                           	callstack 0
 13538  002D68                     ___flmul:
 13539                           	callstack 17
 13540  002D68  5019               	movf	(___flmul@b+3)^0,w,c
 13541  002D6A  0B80               	andlw	128
 13542  002D6C  6E22               	movwf	___flmul@sign^0,c
 13543  002D6E  5019               	movf	(___flmul@b+3)^0,w,c
 13544  002D70  2419               	addwf	(___flmul@b+3)^0,w,c
 13545  002D72  6E28               	movwf	___flmul@bexp^0,c
 13546  002D74  AE18               	btfss	(___flmul@b+2)^0,7,c
 13547  002D76  EFBF  F016         	goto	u9241
 13548  002D7A  EFC1  F016         	goto	u9240
 13549  002D7E                     u9241:
 13550  002D7E  EFC2  F016         	goto	l7285
 13551  002D82                     u9240:
 13552  002D82  8028               	bsf	___flmul@bexp^0,0,c
 13553  002D84                     l7285:
 13554  002D84  5028               	movf	___flmul@bexp^0,w,c
 13555  002D86  B4D8               	btfsc	status,2,c
 13556  002D88  EFC8  F016         	goto	u9251
 13557  002D8C  EFCA  F016         	goto	u9250
 13558  002D90                     u9251:
 13559  002D90  EFDD  F016         	goto	l7293
 13560  002D94                     u9250:
 13561  002D94  2828               	incf	___flmul@bexp^0,w,c
 13562  002D96  A4D8               	btfss	status,2,c
 13563  002D98  EFD0  F016         	goto	u9261
 13564  002D9C  EFD2  F016         	goto	u9260
 13565  002DA0                     u9261:
 13566  002DA0  EFDA  F016         	goto	l7291
 13567  002DA4                     u9260:
 13568  002DA4  0E00               	movlw	0
 13569  002DA6  6E16               	movwf	___flmul@b^0,c
 13570  002DA8  0E00               	movlw	0
 13571  002DAA  6E17               	movwf	(___flmul@b+1)^0,c
 13572  002DAC  0E00               	movlw	0
 13573  002DAE  6E18               	movwf	(___flmul@b+2)^0,c
 13574  002DB0  0E00               	movlw	0
 13575  002DB2  6E19               	movwf	(___flmul@b+3)^0,c
 13576  002DB4                     l7291:
 13577  002DB4  8E18               	bsf	(___flmul@b+2)^0,7,c
 13578  002DB6  EFE5  F016         	goto	l7295
 13579  002DBA                     l7293:
 13580  002DBA  0E00               	movlw	0
 13581  002DBC  6E16               	movwf	___flmul@b^0,c
 13582  002DBE  0E00               	movlw	0
 13583  002DC0  6E17               	movwf	(___flmul@b+1)^0,c
 13584  002DC2  0E00               	movlw	0
 13585  002DC4  6E18               	movwf	(___flmul@b+2)^0,c
 13586  002DC6  0E00               	movlw	0
 13587  002DC8  6E19               	movwf	(___flmul@b+3)^0,c
 13588  002DCA                     l7295:
 13589  002DCA  501D               	movf	(___flmul@a+3)^0,w,c
 13590  002DCC  0B80               	andlw	128
 13591  002DCE  1A22               	xorwf	___flmul@sign^0,f,c
 13592  002DD0  501D               	movf	(___flmul@a+3)^0,w,c
 13593  002DD2  241D               	addwf	(___flmul@a+3)^0,w,c
 13594  002DD4  6E23               	movwf	___flmul@aexp^0,c
 13595  002DD6  AE1C               	btfss	(___flmul@a+2)^0,7,c
 13596  002DD8  EFF0  F016         	goto	u9271
 13597  002DDC  EFF2  F016         	goto	u9270
 13598  002DE0                     u9271:
 13599  002DE0  EFF3  F016         	goto	l7303
 13600  002DE4                     u9270:
 13601  002DE4  8023               	bsf	___flmul@aexp^0,0,c
 13602  002DE6                     l7303:
 13603  002DE6  5023               	movf	___flmul@aexp^0,w,c
 13604  002DE8  B4D8               	btfsc	status,2,c
 13605  002DEA  EFF9  F016         	goto	u9281
 13606  002DEE  EFFB  F016         	goto	u9280
 13607  002DF2                     u9281:
 13608  002DF2  EF0E  F017         	goto	l7311
 13609  002DF6                     u9280:
 13610  002DF6  2823               	incf	___flmul@aexp^0,w,c
 13611  002DF8  A4D8               	btfss	status,2,c
 13612  002DFA  EF01  F017         	goto	u9291
 13613  002DFE  EF03  F017         	goto	u9290
 13614  002E02                     u9291:
 13615  002E02  EF0B  F017         	goto	l7309
 13616  002E06                     u9290:
 13617  002E06  0E00               	movlw	0
 13618  002E08  6E1A               	movwf	___flmul@a^0,c
 13619  002E0A  0E00               	movlw	0
 13620  002E0C  6E1B               	movwf	(___flmul@a+1)^0,c
 13621  002E0E  0E00               	movlw	0
 13622  002E10  6E1C               	movwf	(___flmul@a+2)^0,c
 13623  002E12  0E00               	movlw	0
 13624  002E14  6E1D               	movwf	(___flmul@a+3)^0,c
 13625  002E16                     l7309:
 13626  002E16  8E1C               	bsf	(___flmul@a+2)^0,7,c
 13627  002E18  EF16  F017         	goto	l1401
 13628  002E1C                     l7311:
 13629  002E1C  0E00               	movlw	0
 13630  002E1E  6E1A               	movwf	___flmul@a^0,c
 13631  002E20  0E00               	movlw	0
 13632  002E22  6E1B               	movwf	(___flmul@a+1)^0,c
 13633  002E24  0E00               	movlw	0
 13634  002E26  6E1C               	movwf	(___flmul@a+2)^0,c
 13635  002E28  0E00               	movlw	0
 13636  002E2A  6E1D               	movwf	(___flmul@a+3)^0,c
 13637  002E2C                     l1401:
 13638  002E2C  5023               	movf	___flmul@aexp^0,w,c
 13639  002E2E  B4D8               	btfsc	status,2,c
 13640  002E30  EF1C  F017         	goto	u9301
 13641  002E34  EF1E  F017         	goto	u9300
 13642  002E38                     u9301:
 13643  002E38  EF26  F017         	goto	l7315
 13644  002E3C                     u9300:
 13645  002E3C  5028               	movf	___flmul@bexp^0,w,c
 13646  002E3E  A4D8               	btfss	status,2,c
 13647  002E40  EF24  F017         	goto	u9311
 13648  002E44  EF26  F017         	goto	u9310
 13649  002E48                     u9311:
 13650  002E48  EF30  F017         	goto	l7319
 13651  002E4C                     u9310:
 13652  002E4C                     l7315:
 13653  002E4C  0E00               	movlw	0
 13654  002E4E  6E16               	movwf	?___flmul^0,c
 13655  002E50  0E00               	movlw	0
 13656  002E52  6E17               	movwf	(?___flmul+1)^0,c
 13657  002E54  0E00               	movlw	0
 13658  002E56  6E18               	movwf	(?___flmul+2)^0,c
 13659  002E58  0E00               	movlw	0
 13660  002E5A  6E19               	movwf	(?___flmul+3)^0,c
 13661  002E5C  EFC8  F018         	goto	l1405
 13662  002E60                     l7319:
 13663  002E60  501C               	movf	(___flmul@a+2)^0,w,c
 13664  002E62  0216               	mulwf	___flmul@b^0,c
 13665  002E64  CFF3 F02D          	movff	prodl,___flmul@temp
 13666  002E68  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13667  002E6C  502D               	movf	___flmul@temp^0,w,c
 13668  002E6E  6E24               	movwf	___flmul@grs^0,c
 13669  002E70  6A25               	clrf	(___flmul@grs+1)^0,c
 13670  002E72  6A26               	clrf	(___flmul@grs+2)^0,c
 13671  002E74  6A27               	clrf	(___flmul@grs+3)^0,c
 13672  002E76  502E               	movf	(___flmul@temp+1)^0,w,c
 13673  002E78  6E29               	movwf	___flmul@prod^0,c
 13674  002E7A  6A2A               	clrf	(___flmul@prod+1)^0,c
 13675  002E7C  6A2B               	clrf	(___flmul@prod+2)^0,c
 13676  002E7E  6A2C               	clrf	(___flmul@prod+3)^0,c
 13677  002E80  501B               	movf	(___flmul@a+1)^0,w,c
 13678  002E82  0217               	mulwf	(___flmul@b+1)^0,c
 13679  002E84  CFF3 F02D          	movff	prodl,___flmul@temp
 13680  002E88  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13681  002E8C  502D               	movf	___flmul@temp^0,w,c
 13682  002E8E  2624               	addwf	___flmul@grs^0,f,c
 13683  002E90  0E00               	movlw	0
 13684  002E92  2225               	addwfc	(___flmul@grs+1)^0,f,c
 13685  002E94  2226               	addwfc	(___flmul@grs+2)^0,f,c
 13686  002E96  2227               	addwfc	(___flmul@grs+3)^0,f,c
 13687  002E98  502E               	movf	(___flmul@temp+1)^0,w,c
 13688  002E9A  2629               	addwf	___flmul@prod^0,f,c
 13689  002E9C  0E00               	movlw	0
 13690  002E9E  222A               	addwfc	(___flmul@prod+1)^0,f,c
 13691  002EA0  222B               	addwfc	(___flmul@prod+2)^0,f,c
 13692  002EA2  222C               	addwfc	(___flmul@prod+3)^0,f,c
 13693  002EA4  501A               	movf	___flmul@a^0,w,c
 13694  002EA6  0218               	mulwf	(___flmul@b+2)^0,c
 13695  002EA8  CFF3 F02D          	movff	prodl,___flmul@temp
 13696  002EAC  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13697  002EB0  502D               	movf	___flmul@temp^0,w,c
 13698  002EB2  2624               	addwf	___flmul@grs^0,f,c
 13699  002EB4  0E00               	movlw	0
 13700  002EB6  2225               	addwfc	(___flmul@grs+1)^0,f,c
 13701  002EB8  2226               	addwfc	(___flmul@grs+2)^0,f,c
 13702  002EBA  2227               	addwfc	(___flmul@grs+3)^0,f,c
 13703  002EBC  502E               	movf	(___flmul@temp+1)^0,w,c
 13704  002EBE  2629               	addwf	___flmul@prod^0,f,c
 13705  002EC0  0E00               	movlw	0
 13706  002EC2  222A               	addwfc	(___flmul@prod+1)^0,f,c
 13707  002EC4  222B               	addwfc	(___flmul@prod+2)^0,f,c
 13708  002EC6  222C               	addwfc	(___flmul@prod+3)^0,f,c
 13709  002EC8  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
 13710  002ECC  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
 13711  002ED0  C024  F025         	movff	___flmul@grs,___flmul@grs+1
 13712  002ED4  6A24               	clrf	___flmul@grs^0,c
 13713  002ED6  501A               	movf	___flmul@a^0,w,c
 13714  002ED8  0217               	mulwf	(___flmul@b+1)^0,c
 13715  002EDA  CFF3 F02D          	movff	prodl,___flmul@temp
 13716  002EDE  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13717  002EE2  502D               	movf	___flmul@temp^0,w,c
 13718  002EE4  2624               	addwf	___flmul@grs^0,f,c
 13719  002EE6  502E               	movf	(___flmul@temp+1)^0,w,c
 13720  002EE8  2225               	addwfc	(___flmul@grs+1)^0,f,c
 13721  002EEA  0E00               	movlw	0
 13722  002EEC  2226               	addwfc	(___flmul@grs+2)^0,f,c
 13723  002EEE  0E00               	movlw	0
 13724  002EF0  2227               	addwfc	(___flmul@grs+3)^0,f,c
 13725  002EF2  501B               	movf	(___flmul@a+1)^0,w,c
 13726  002EF4  0216               	mulwf	___flmul@b^0,c
 13727  002EF6  CFF3 F02D          	movff	prodl,___flmul@temp
 13728  002EFA  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13729  002EFE  502D               	movf	___flmul@temp^0,w,c
 13730  002F00  2624               	addwf	___flmul@grs^0,f,c
 13731  002F02  502E               	movf	(___flmul@temp+1)^0,w,c
 13732  002F04  2225               	addwfc	(___flmul@grs+1)^0,f,c
 13733  002F06  0E00               	movlw	0
 13734  002F08  2226               	addwfc	(___flmul@grs+2)^0,f,c
 13735  002F0A  0E00               	movlw	0
 13736  002F0C  2227               	addwfc	(___flmul@grs+3)^0,f,c
 13737  002F0E  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
 13738  002F12  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
 13739  002F16  C024  F025         	movff	___flmul@grs,___flmul@grs+1
 13740  002F1A  6A24               	clrf	___flmul@grs^0,c
 13741  002F1C  501A               	movf	___flmul@a^0,w,c
 13742  002F1E  0216               	mulwf	___flmul@b^0,c
 13743  002F20  CFF3 F02D          	movff	prodl,___flmul@temp
 13744  002F24  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13745  002F28  502D               	movf	___flmul@temp^0,w,c
 13746  002F2A  2624               	addwf	___flmul@grs^0,f,c
 13747  002F2C  502E               	movf	(___flmul@temp+1)^0,w,c
 13748  002F2E  2225               	addwfc	(___flmul@grs+1)^0,f,c
 13749  002F30  0E00               	movlw	0
 13750  002F32  2226               	addwfc	(___flmul@grs+2)^0,f,c
 13751  002F34  0E00               	movlw	0
 13752  002F36  2227               	addwfc	(___flmul@grs+3)^0,f,c
 13753  002F38  501C               	movf	(___flmul@a+2)^0,w,c
 13754  002F3A  0217               	mulwf	(___flmul@b+1)^0,c
 13755  002F3C  CFF3 F02D          	movff	prodl,___flmul@temp
 13756  002F40  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13757  002F44  502D               	movf	___flmul@temp^0,w,c
 13758  002F46  2629               	addwf	___flmul@prod^0,f,c
 13759  002F48  502E               	movf	(___flmul@temp+1)^0,w,c
 13760  002F4A  222A               	addwfc	(___flmul@prod+1)^0,f,c
 13761  002F4C  0E00               	movlw	0
 13762  002F4E  222B               	addwfc	(___flmul@prod+2)^0,f,c
 13763  002F50  0E00               	movlw	0
 13764  002F52  222C               	addwfc	(___flmul@prod+3)^0,f,c
 13765  002F54  501B               	movf	(___flmul@a+1)^0,w,c
 13766  002F56  0218               	mulwf	(___flmul@b+2)^0,c
 13767  002F58  CFF3 F02D          	movff	prodl,___flmul@temp
 13768  002F5C  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13769  002F60  502D               	movf	___flmul@temp^0,w,c
 13770  002F62  2629               	addwf	___flmul@prod^0,f,c
 13771  002F64  502E               	movf	(___flmul@temp+1)^0,w,c
 13772  002F66  222A               	addwfc	(___flmul@prod+1)^0,f,c
 13773  002F68  0E00               	movlw	0
 13774  002F6A  222B               	addwfc	(___flmul@prod+2)^0,f,c
 13775  002F6C  0E00               	movlw	0
 13776  002F6E  222C               	addwfc	(___flmul@prod+3)^0,f,c
 13777  002F70  501C               	movf	(___flmul@a+2)^0,w,c
 13778  002F72  0218               	mulwf	(___flmul@b+2)^0,c
 13779  002F74  CFF3 F02D          	movff	prodl,___flmul@temp
 13780  002F78  CFF4 F02E          	movff	prodh,___flmul@temp+1
 13781  002F7C  502D               	movf	___flmul@temp^0,w,c
 13782  002F7E  6E1E               	movwf	??___flmul^0,c
 13783  002F80  502E               	movf	(___flmul@temp+1)^0,w,c
 13784  002F82  6E1F               	movwf	(??___flmul+1)^0,c
 13785  002F84  6A20               	clrf	(??___flmul+2)^0,c
 13786  002F86  6A21               	clrf	(??___flmul+3)^0,c
 13787  002F88  C020  F021         	movff	??___flmul+2,??___flmul+3
 13788  002F8C  C01F  F020         	movff	??___flmul+1,??___flmul+2
 13789  002F90  C01E  F01F         	movff	??___flmul,??___flmul+1
 13790  002F94  6A1E               	clrf	??___flmul^0,c
 13791  002F96  501E               	movf	??___flmul^0,w,c
 13792  002F98  2629               	addwf	___flmul@prod^0,f,c
 13793  002F9A  501F               	movf	(??___flmul+1)^0,w,c
 13794  002F9C  222A               	addwfc	(___flmul@prod+1)^0,f,c
 13795  002F9E  5020               	movf	(??___flmul+2)^0,w,c
 13796  002FA0  222B               	addwfc	(___flmul@prod+2)^0,f,c
 13797  002FA2  5021               	movf	(??___flmul+3)^0,w,c
 13798  002FA4  222C               	addwfc	(___flmul@prod+3)^0,f,c
 13799  002FA6  C024  F01E         	movff	___flmul@grs,??___flmul
 13800  002FAA  C025  F01F         	movff	___flmul@grs+1,??___flmul+1
 13801  002FAE  C026  F020         	movff	___flmul@grs+2,??___flmul+2
 13802  002FB2  C027  F021         	movff	___flmul@grs+3,??___flmul+3
 13803  002FB6  0E19               	movlw	25
 13804  002FB8  EFE3  F017         	goto	u9320
 13805  002FBC                     u9325:
 13806  002FBC  90D8               	bcf	status,0,c
 13807  002FBE  3221               	rrcf	(??___flmul+3)^0,f,c
 13808  002FC0  3220               	rrcf	(??___flmul+2)^0,f,c
 13809  002FC2  321F               	rrcf	(??___flmul+1)^0,f,c
 13810  002FC4  321E               	rrcf	??___flmul^0,f,c
 13811  002FC6                     u9320:
 13812  002FC6  2EE8               	decfsz	wreg,f,c
 13813  002FC8  EFDE  F017         	goto	u9325
 13814  002FCC  501E               	movf	??___flmul^0,w,c
 13815  002FCE  2629               	addwf	___flmul@prod^0,f,c
 13816  002FD0  501F               	movf	(??___flmul+1)^0,w,c
 13817  002FD2  222A               	addwfc	(___flmul@prod+1)^0,f,c
 13818  002FD4  5020               	movf	(??___flmul+2)^0,w,c
 13819  002FD6  222B               	addwfc	(___flmul@prod+2)^0,f,c
 13820  002FD8  5021               	movf	(??___flmul+3)^0,w,c
 13821  002FDA  222C               	addwfc	(___flmul@prod+3)^0,f,c
 13822  002FDC  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
 13823  002FE0  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
 13824  002FE4  C024  F025         	movff	___flmul@grs,___flmul@grs+1
 13825  002FE8  6A24               	clrf	___flmul@grs^0,c
 13826  002FEA  5023               	movf	___flmul@aexp^0,w,c
 13827  002FEC  C028  F01E         	movff	___flmul@bexp,??___flmul
 13828  002FF0  6A1F               	clrf	(??___flmul+1)^0,c
 13829  002FF2  261E               	addwf	??___flmul^0,f,c
 13830  002FF4  0E00               	movlw	0
 13831  002FF6  221F               	addwfc	(??___flmul+1)^0,f,c
 13832  002FF8  0E82               	movlw	130
 13833  002FFA  241E               	addwf	??___flmul^0,w,c
 13834  002FFC  6E2D               	movwf	___flmul@temp^0,c
 13835  002FFE  0EFF               	movlw	255
 13836  003000  201F               	addwfc	(??___flmul+1)^0,w,c
 13837  003002  6E2E               	movwf	(___flmul@temp+1)^0,c
 13838  003004  EF19  F018         	goto	l7367
 13839  003008                     l7361:
 13840  003008  90D8               	bcf	status,0,c
 13841  00300A  3629               	rlcf	___flmul@prod^0,f,c
 13842  00300C  362A               	rlcf	(___flmul@prod+1)^0,f,c
 13843  00300E  362B               	rlcf	(___flmul@prod+2)^0,f,c
 13844  003010  362C               	rlcf	(___flmul@prod+3)^0,f,c
 13845  003012  AE27               	btfss	(___flmul@grs+3)^0,7,c
 13846  003014  EF0E  F018         	goto	u9331
 13847  003018  EF10  F018         	goto	u9330
 13848  00301C                     u9331:
 13849  00301C  EF11  F018         	goto	l1408
 13850  003020                     u9330:
 13851  003020  8029               	bsf	___flmul@prod^0,0,c
 13852  003022                     l1408:
 13853  003022  90D8               	bcf	status,0,c
 13854  003024  3624               	rlcf	___flmul@grs^0,f,c
 13855  003026  3625               	rlcf	(___flmul@grs+1)^0,f,c
 13856  003028  3626               	rlcf	(___flmul@grs+2)^0,f,c
 13857  00302A  3627               	rlcf	(___flmul@grs+3)^0,f,c
 13858  00302C  062D               	decf	___flmul@temp^0,f,c
 13859  00302E  A0D8               	btfss	status,0,c
 13860  003030  062E               	decf	(___flmul@temp+1)^0,f,c
 13861  003032                     l7367:
 13862  003032  AE2B               	btfss	(___flmul@prod+2)^0,7,c
 13863  003034  EF1E  F018         	goto	u9341
 13864  003038  EF20  F018         	goto	u9340
 13865  00303C                     u9341:
 13866  00303C  EF04  F018         	goto	l7361
 13867  003040                     u9340:
 13868  003040  0E00               	movlw	0
 13869  003042  6E23               	movwf	___flmul@aexp^0,c
 13870  003044  AE27               	btfss	(___flmul@grs+3)^0,7,c
 13871  003046  EF27  F018         	goto	u9351
 13872  00304A  EF29  F018         	goto	u9350
 13873  00304E                     u9351:
 13874  00304E  EF4D  F018         	goto	l1410
 13875  003052                     u9350:
 13876  003052  0EFF               	movlw	255
 13877  003054  1424               	andwf	___flmul@grs^0,w,c
 13878  003056  6E1E               	movwf	??___flmul^0,c
 13879  003058  0EFF               	movlw	255
 13880  00305A  1425               	andwf	(___flmul@grs+1)^0,w,c
 13881  00305C  6E1F               	movwf	(??___flmul+1)^0,c
 13882  00305E  0EFF               	movlw	255
 13883  003060  1426               	andwf	(___flmul@grs+2)^0,w,c
 13884  003062  6E20               	movwf	(??___flmul+2)^0,c
 13885  003064  0E7F               	movlw	127
 13886  003066  1427               	andwf	(___flmul@grs+3)^0,w,c
 13887  003068  6E21               	movwf	(??___flmul+3)^0,c
 13888  00306A  501E               	movf	??___flmul^0,w,c
 13889  00306C  101F               	iorwf	(??___flmul+1)^0,w,c
 13890  00306E  1020               	iorwf	(??___flmul+2)^0,w,c
 13891  003070  1021               	iorwf	(??___flmul+3)^0,w,c
 13892  003072  B4D8               	btfsc	status,2,c
 13893  003074  EF3E  F018         	goto	u9361
 13894  003078  EF40  F018         	goto	u9360
 13895  00307C                     u9361:
 13896  00307C  EF44  F018         	goto	l1411
 13897  003080                     u9360:
 13898  003080                     l7375:
 13899  003080  0E01               	movlw	1
 13900  003082  6E23               	movwf	___flmul@aexp^0,c
 13901  003084  EF4D  F018         	goto	l1410
 13902  003088                     l1411:
 13903  003088  A029               	btfss	___flmul@prod^0,0,c
 13904  00308A  EF49  F018         	goto	u9371
 13905  00308E  EF4B  F018         	goto	u9370
 13906  003092                     u9371:
 13907  003092  EF4D  F018         	goto	l1410
 13908  003096                     u9370:
 13909  003096  EF40  F018         	goto	l7375
 13910  00309A                     l1410:
 13911  00309A  5023               	movf	___flmul@aexp^0,w,c
 13912  00309C  B4D8               	btfsc	status,2,c
 13913  00309E  EF53  F018         	goto	u9381
 13914  0030A2  EF55  F018         	goto	u9380
 13915  0030A6                     u9381:
 13916  0030A6  EF79  F018         	goto	l7387
 13917  0030AA                     u9380:
 13918  0030AA  0E01               	movlw	1
 13919  0030AC  2629               	addwf	___flmul@prod^0,f,c
 13920  0030AE  0E00               	movlw	0
 13921  0030B0  222A               	addwfc	(___flmul@prod+1)^0,f,c
 13922  0030B2  222B               	addwfc	(___flmul@prod+2)^0,f,c
 13923  0030B4  222C               	addwfc	(___flmul@prod+3)^0,f,c
 13924  0030B6  A02C               	btfss	(___flmul@prod+3)^0,0,c
 13925  0030B8  EF60  F018         	goto	u9391
 13926  0030BC  EF62  F018         	goto	u9390
 13927  0030C0                     u9391:
 13928  0030C0  EF79  F018         	goto	l7387
 13929  0030C4                     u9390:
 13930  0030C4  C029  F01E         	movff	___flmul@prod,??___flmul
 13931  0030C8  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
 13932  0030CC  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
 13933  0030D0  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
 13934  0030D4  3421               	rlcf	(??___flmul+3)^0,w,c
 13935  0030D6  3221               	rrcf	(??___flmul+3)^0,f,c
 13936  0030D8  3220               	rrcf	(??___flmul+2)^0,f,c
 13937  0030DA  321F               	rrcf	(??___flmul+1)^0,f,c
 13938  0030DC  321E               	rrcf	??___flmul^0,f,c
 13939  0030DE  C01E  F029         	movff	??___flmul,___flmul@prod
 13940  0030E2  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
 13941  0030E6  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
 13942  0030EA  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
 13943  0030EE  4A2D               	infsnz	___flmul@temp^0,f,c
 13944  0030F0  2A2E               	incf	(___flmul@temp+1)^0,f,c
 13945  0030F2                     l7387:
 13946  0030F2  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 13947  0030F4  EF84  F018         	goto	u9401
 13948  0030F8  502E               	movf	(___flmul@temp+1)^0,w,c
 13949  0030FA  E108               	bnz	u9400
 13950  0030FC  282D               	incf	___flmul@temp^0,w,c
 13951  0030FE  A0D8               	btfss	status,0,c
 13952  003100  EF84  F018         	goto	u9401
 13953  003104  EF86  F018         	goto	u9400
 13954  003108                     u9401:
 13955  003108  EF90  F018         	goto	l7391
 13956  00310C                     u9400:
 13957  00310C  0E00               	movlw	0
 13958  00310E  6E29               	movwf	___flmul@prod^0,c
 13959  003110  0E00               	movlw	0
 13960  003112  6E2A               	movwf	(___flmul@prod+1)^0,c
 13961  003114  0E80               	movlw	128
 13962  003116  6E2B               	movwf	(___flmul@prod+2)^0,c
 13963  003118  0E7F               	movlw	127
 13964  00311A  6E2C               	movwf	(___flmul@prod+3)^0,c
 13965  00311C  EFBE  F018         	goto	l7403
 13966  003120                     l7391:
 13967  003120  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 13968  003122  EF9D  F018         	goto	u9410
 13969  003126  502E               	movf	(___flmul@temp+1)^0,w,c
 13970  003128  E106               	bnz	u9411
 13971  00312A  042D               	decf	___flmul@temp^0,w,c
 13972  00312C  B0D8               	btfsc	status,0,c
 13973  00312E  EF9B  F018         	goto	u9411
 13974  003132  EF9D  F018         	goto	u9410
 13975  003136                     u9411:
 13976  003136  EFA9  F018         	goto	l1418
 13977  00313A                     u9410:
 13978  00313A  0E00               	movlw	0
 13979  00313C  6E29               	movwf	___flmul@prod^0,c
 13980  00313E  0E00               	movlw	0
 13981  003140  6E2A               	movwf	(___flmul@prod+1)^0,c
 13982  003142  0E00               	movlw	0
 13983  003144  6E2B               	movwf	(___flmul@prod+2)^0,c
 13984  003146  0E00               	movlw	0
 13985  003148  6E2C               	movwf	(___flmul@prod+3)^0,c
 13986  00314A  0E00               	movlw	0
 13987  00314C  6E22               	movwf	___flmul@sign^0,c
 13988  00314E  EFBE  F018         	goto	l7403
 13989  003152                     l1418:
 13990  003152  C02D  F028         	movff	___flmul@temp,___flmul@bexp
 13991  003156  0EFF               	movlw	255
 13992  003158  1629               	andwf	___flmul@prod^0,f,c
 13993  00315A  0EFF               	movlw	255
 13994  00315C  162A               	andwf	(___flmul@prod+1)^0,f,c
 13995  00315E  0E7F               	movlw	127
 13996  003160  162B               	andwf	(___flmul@prod+2)^0,f,c
 13997  003162  0E00               	movlw	0
 13998  003164  162C               	andwf	(___flmul@prod+3)^0,f,c
 13999  003166  A028               	btfss	___flmul@bexp^0,0,c
 14000  003168  EFB8  F018         	goto	u9421
 14001  00316C  EFBA  F018         	goto	u9420
 14002  003170                     u9421:
 14003  003170  EFBB  F018         	goto	l7401
 14004  003174                     u9420:
 14005  003174  8E2B               	bsf	(___flmul@prod+2)^0,7,c
 14006  003176                     l7401:
 14007  003176  90D8               	bcf	status,0,c
 14008  003178  3028               	rrcf	___flmul@bexp^0,w,c
 14009  00317A  6E2C               	movwf	(___flmul@prod+3)^0,c
 14010  00317C                     l7403:
 14011  00317C  5022               	movf	___flmul@sign^0,w,c
 14012  00317E  122C               	iorwf	(___flmul@prod+3)^0,f,c
 14013  003180  C029  F016         	movff	___flmul@prod,?___flmul
 14014  003184  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
 14015  003188  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
 14016  00318C  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
 14017  003190                     l1405:
 14018  003190  0012               	return		;funcret
 14019  003192                     __end_of___flmul:
 14020                           	callstack 0
 14021                           
 14022 ;; *************** function ___flge *****************
 14023 ;; Defined at:
 14024 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 14025 ;; Parameters:    Size  Location     Type
 14026 ;;  ff1             4   46[COMRAM] unsigned char 
 14027 ;;  ff2             4   50[COMRAM] unsigned char 
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;		None
 14030 ;; Return value:  Size  Location     Type
 14031 ;;		None               void
 14032 ;; Registers used:
 14033 ;;		wreg, status,2, status,0
 14034 ;; Tracked objects:
 14035 ;;		On entry : 0/0
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14039 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14042 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14043 ;;Total ram usage:       12 bytes
 14044 ;; Hardware stack levels used: 1
 14045 ;; Hardware stack levels required when called: 7
 14046 ;; This function calls:
 14047 ;;		Nothing
 14048 ;; This function is called by:
 14049 ;;		_colourcards_readRGBC
 14050 ;;		_left
 14051 ;;		_efgtoa
 14052 ;;		_colourcards_testingRGBC
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           	psect	text72
 14057  004E52                     __ptext72:
 14058                           	callstack 0
 14059  004E52                     ___flge:
 14060                           	callstack 17
 14061  004E52  0E00               	movlw	0
 14062  004E54  142F               	andwf	___flge@ff1^0,w,c
 14063  004E56  6E37               	movwf	??___flge^0,c
 14064  004E58  0E00               	movlw	0
 14065  004E5A  1430               	andwf	(___flge@ff1+1)^0,w,c
 14066  004E5C  6E38               	movwf	(??___flge+1)^0,c
 14067  004E5E  0E80               	movlw	128
 14068  004E60  1431               	andwf	(___flge@ff1+2)^0,w,c
 14069  004E62  6E39               	movwf	(??___flge+2)^0,c
 14070  004E64  0E7F               	movlw	127
 14071  004E66  1432               	andwf	(___flge@ff1+3)^0,w,c
 14072  004E68  6E3A               	movwf	(??___flge+3)^0,c
 14073  004E6A  5037               	movf	??___flge^0,w,c
 14074  004E6C  1038               	iorwf	(??___flge+1)^0,w,c
 14075  004E6E  1039               	iorwf	(??___flge+2)^0,w,c
 14076  004E70  103A               	iorwf	(??___flge+3)^0,w,c
 14077  004E72  A4D8               	btfss	status,2,c
 14078  004E74  EF3E  F027         	goto	u9581
 14079  004E78  EF40  F027         	goto	u9580
 14080  004E7C                     u9581:
 14081  004E7C  EF48  F027         	goto	l7515
 14082  004E80                     u9580:
 14083  004E80  0E00               	movlw	0
 14084  004E82  6E2F               	movwf	___flge@ff1^0,c
 14085  004E84  0E00               	movlw	0
 14086  004E86  6E30               	movwf	(___flge@ff1+1)^0,c
 14087  004E88  0E00               	movlw	0
 14088  004E8A  6E31               	movwf	(___flge@ff1+2)^0,c
 14089  004E8C  0E00               	movlw	0
 14090  004E8E  6E32               	movwf	(___flge@ff1+3)^0,c
 14091  004E90                     l7515:
 14092  004E90  0E00               	movlw	0
 14093  004E92  1433               	andwf	___flge@ff2^0,w,c
 14094  004E94  6E37               	movwf	??___flge^0,c
 14095  004E96  0E00               	movlw	0
 14096  004E98  1434               	andwf	(___flge@ff2+1)^0,w,c
 14097  004E9A  6E38               	movwf	(??___flge+1)^0,c
 14098  004E9C  0E80               	movlw	128
 14099  004E9E  1435               	andwf	(___flge@ff2+2)^0,w,c
 14100  004EA0  6E39               	movwf	(??___flge+2)^0,c
 14101  004EA2  0E7F               	movlw	127
 14102  004EA4  1436               	andwf	(___flge@ff2+3)^0,w,c
 14103  004EA6  6E3A               	movwf	(??___flge+3)^0,c
 14104  004EA8  5037               	movf	??___flge^0,w,c
 14105  004EAA  1038               	iorwf	(??___flge+1)^0,w,c
 14106  004EAC  1039               	iorwf	(??___flge+2)^0,w,c
 14107  004EAE  103A               	iorwf	(??___flge+3)^0,w,c
 14108  004EB0  A4D8               	btfss	status,2,c
 14109  004EB2  EF5D  F027         	goto	u9591
 14110  004EB6  EF5F  F027         	goto	u9590
 14111  004EBA                     u9591:
 14112  004EBA  EF67  F027         	goto	l7519
 14113  004EBE                     u9590:
 14114  004EBE  0E00               	movlw	0
 14115  004EC0  6E33               	movwf	___flge@ff2^0,c
 14116  004EC2  0E00               	movlw	0
 14117  004EC4  6E34               	movwf	(___flge@ff2+1)^0,c
 14118  004EC6  0E00               	movlw	0
 14119  004EC8  6E35               	movwf	(___flge@ff2+2)^0,c
 14120  004ECA  0E00               	movlw	0
 14121  004ECC  6E36               	movwf	(___flge@ff2+3)^0,c
 14122  004ECE                     l7519:
 14123  004ECE  AE32               	btfss	(___flge@ff1+3)^0,7,c
 14124  004ED0  EF6C  F027         	goto	u9601
 14125  004ED4  EF6E  F027         	goto	u9600
 14126  004ED8                     u9601:
 14127  004ED8  EF77  F027         	goto	l7523
 14128  004EDC                     u9600:
 14129  004EDC  6C2F               	negf	___flge@ff1^0,c
 14130  004EDE  1E30               	comf	(___flge@ff1+1)^0,f,c
 14131  004EE0  B0D8               	btfsc	status,0,c
 14132  004EE2  2A30               	incf	(___flge@ff1+1)^0,f,c
 14133  004EE4  1E31               	comf	(___flge@ff1+2)^0,f,c
 14134  004EE6  B0D8               	btfsc	status,0,c
 14135  004EE8  2A31               	incf	(___flge@ff1+2)^0,f,c
 14136  004EEA  0E80               	movlw	128
 14137  004EEC  5632               	subfwb	(___flge@ff1+3)^0,f,c
 14138  004EEE                     l7523:
 14139  004EEE  AE36               	btfss	(___flge@ff2+3)^0,7,c
 14140  004EF0  EF7C  F027         	goto	u9611
 14141  004EF4  EF7E  F027         	goto	u9610
 14142  004EF8                     u9611:
 14143  004EF8  EF87  F027         	goto	l1052
 14144  004EFC                     u9610:
 14145  004EFC  6C33               	negf	___flge@ff2^0,c
 14146  004EFE  1E34               	comf	(___flge@ff2+1)^0,f,c
 14147  004F00  B0D8               	btfsc	status,0,c
 14148  004F02  2A34               	incf	(___flge@ff2+1)^0,f,c
 14149  004F04  1E35               	comf	(___flge@ff2+2)^0,f,c
 14150  004F06  B0D8               	btfsc	status,0,c
 14151  004F08  2A35               	incf	(___flge@ff2+2)^0,f,c
 14152  004F0A  0E80               	movlw	128
 14153  004F0C  5636               	subfwb	(___flge@ff2+3)^0,f,c
 14154  004F0E                     l1052:
 14155  004F0E  0E00               	movlw	0
 14156  004F10  1A2F               	xorwf	___flge@ff1^0,f,c
 14157  004F12  0E00               	movlw	0
 14158  004F14  1A30               	xorwf	(___flge@ff1+1)^0,f,c
 14159  004F16  0E00               	movlw	0
 14160  004F18  1A31               	xorwf	(___flge@ff1+2)^0,f,c
 14161  004F1A  0E80               	movlw	128
 14162  004F1C  1A32               	xorwf	(___flge@ff1+3)^0,f,c
 14163  004F1E  0E00               	movlw	0
 14164  004F20  1A33               	xorwf	___flge@ff2^0,f,c
 14165  004F22  0E00               	movlw	0
 14166  004F24  1A34               	xorwf	(___flge@ff2+1)^0,f,c
 14167  004F26  0E00               	movlw	0
 14168  004F28  1A35               	xorwf	(___flge@ff2+2)^0,f,c
 14169  004F2A  0E80               	movlw	128
 14170  004F2C  1A36               	xorwf	(___flge@ff2+3)^0,f,c
 14171  004F2E  5033               	movf	___flge@ff2^0,w,c
 14172  004F30  5C2F               	subwf	___flge@ff1^0,w,c
 14173  004F32  5034               	movf	(___flge@ff2+1)^0,w,c
 14174  004F34  5830               	subwfb	(___flge@ff1+1)^0,w,c
 14175  004F36  5035               	movf	(___flge@ff2+2)^0,w,c
 14176  004F38  5831               	subwfb	(___flge@ff1+2)^0,w,c
 14177  004F3A  5036               	movf	(___flge@ff2+3)^0,w,c
 14178  004F3C  5832               	subwfb	(___flge@ff1+3)^0,w,c
 14179  004F3E  B0D8               	btfsc	status,0,c
 14180  004F40  EFA4  F027         	goto	u9621
 14181  004F44  EFA6  F027         	goto	u9620
 14182  004F48                     u9621:
 14183  004F48  EFA9  F027         	goto	l7529
 14184  004F4C                     u9620:
 14185  004F4C  90D8               	bcf	status,0,c
 14186  004F4E  EFAA  F027         	goto	l1057
 14187  004F52                     l7529:
 14188  004F52  80D8               	bsf	status,0,c
 14189  004F54                     l1057:
 14190  004F54  0012               	return		;funcret
 14191  004F56                     __end_of___flge:
 14192                           	callstack 0
 14193                           
 14194 ;; *************** function ___fladd *****************
 14195 ;; Defined at:
 14196 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;  b               4   46[COMRAM] unsigned char 
 14199 ;;  a               4   50[COMRAM] unsigned char 
 14200 ;; Auto vars:     Size  Location     Type
 14201 ;;  grs             1   61[COMRAM] unsigned char 
 14202 ;;  bexp            1   60[COMRAM] unsigned char 
 14203 ;;  aexp            1   59[COMRAM] unsigned char 
 14204 ;;  signs           1   58[COMRAM] unsigned char 
 14205 ;; Return value:  Size  Location     Type
 14206 ;;                  4   46[COMRAM] unsigned char 
 14207 ;; Registers used:
 14208 ;;		wreg, status,2, status,0
 14209 ;; Tracked objects:
 14210 ;;		On entry : 0/0
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14214 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14215 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14216 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14217 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14218 ;;Total ram usage:       16 bytes
 14219 ;; Hardware stack levels used: 1
 14220 ;; Hardware stack levels required when called: 7
 14221 ;; This function calls:
 14222 ;;		Nothing
 14223 ;; This function is called by:
 14224 ;;		_left
 14225 ;;		___flsub
 14226 ;;		_efgtoa
 14227 ;; This function uses a non-reentrant model
 14228 ;;
 14229                           
 14230                           	psect	text73
 14231  0028A8                     __ptext73:
 14232                           	callstack 0
 14233  0028A8                     ___fladd:
 14234                           	callstack 16
 14235  0028A8  5032               	movf	(___fladd@b+3)^0,w,c
 14236  0028AA  0B80               	andlw	128
 14237  0028AC  6E3B               	movwf	___fladd@signs^0,c
 14238  0028AE  5032               	movf	(___fladd@b+3)^0,w,c
 14239  0028B0  2432               	addwf	(___fladd@b+3)^0,w,c
 14240  0028B2  6E3D               	movwf	___fladd@bexp^0,c
 14241  0028B4  AE31               	btfss	(___fladd@b+2)^0,7,c
 14242  0028B6  EF5F  F014         	goto	u8441
 14243  0028BA  EF61  F014         	goto	u8440
 14244  0028BE                     u8441:
 14245  0028BE  EF62  F014         	goto	l6837
 14246  0028C2                     u8440:
 14247  0028C2  803D               	bsf	___fladd@bexp^0,0,c
 14248  0028C4                     l6837:
 14249  0028C4  503D               	movf	___fladd@bexp^0,w,c
 14250  0028C6  B4D8               	btfsc	status,2,c
 14251  0028C8  EF68  F014         	goto	u8451
 14252  0028CC  EF6A  F014         	goto	u8450
 14253  0028D0                     u8451:
 14254  0028D0  EF7F  F014         	goto	l6847
 14255  0028D4                     u8450:
 14256  0028D4  283D               	incf	___fladd@bexp^0,w,c
 14257  0028D6  A4D8               	btfss	status,2,c
 14258  0028D8  EF70  F014         	goto	u8461
 14259  0028DC  EF72  F014         	goto	u8460
 14260  0028E0                     u8461:
 14261  0028E0  EF7A  F014         	goto	l6843
 14262  0028E4                     u8460:
 14263  0028E4  0E00               	movlw	0
 14264  0028E6  6E2F               	movwf	___fladd@b^0,c
 14265  0028E8  0E00               	movlw	0
 14266  0028EA  6E30               	movwf	(___fladd@b+1)^0,c
 14267  0028EC  0E00               	movlw	0
 14268  0028EE  6E31               	movwf	(___fladd@b+2)^0,c
 14269  0028F0  0E00               	movlw	0
 14270  0028F2  6E32               	movwf	(___fladd@b+3)^0,c
 14271  0028F4                     l6843:
 14272  0028F4  8E31               	bsf	(___fladd@b+2)^0,7,c
 14273  0028F6  0E00               	movlw	0
 14274  0028F8  6E32               	movwf	(___fladd@b+3)^0,c
 14275  0028FA  EF87  F014         	goto	l6849
 14276  0028FE                     l6847:
 14277  0028FE  0E00               	movlw	0
 14278  002900  6E2F               	movwf	___fladd@b^0,c
 14279  002902  0E00               	movlw	0
 14280  002904  6E30               	movwf	(___fladd@b+1)^0,c
 14281  002906  0E00               	movlw	0
 14282  002908  6E31               	movwf	(___fladd@b+2)^0,c
 14283  00290A  0E00               	movlw	0
 14284  00290C  6E32               	movwf	(___fladd@b+3)^0,c
 14285  00290E                     l6849:
 14286  00290E  5036               	movf	(___fladd@a+3)^0,w,c
 14287  002910  0B80               	andlw	128
 14288  002912  6E3C               	movwf	___fladd@aexp^0,c
 14289  002914  503B               	movf	___fladd@signs^0,w,c
 14290  002916  183C               	xorwf	___fladd@aexp^0,w,c
 14291  002918  B4D8               	btfsc	status,2,c
 14292  00291A  EF91  F014         	goto	u8471
 14293  00291E  EF93  F014         	goto	u8470
 14294  002922                     u8471:
 14295  002922  EF94  F014         	goto	l6855
 14296  002926                     u8470:
 14297  002926  8C3B               	bsf	___fladd@signs^0,6,c
 14298  002928                     l6855:
 14299  002928  5036               	movf	(___fladd@a+3)^0,w,c
 14300  00292A  2436               	addwf	(___fladd@a+3)^0,w,c
 14301  00292C  6E3C               	movwf	___fladd@aexp^0,c
 14302  00292E  AE35               	btfss	(___fladd@a+2)^0,7,c
 14303  002930  EF9C  F014         	goto	u8481
 14304  002934  EF9E  F014         	goto	u8480
 14305  002938                     u8481:
 14306  002938  EF9F  F014         	goto	l6861
 14307  00293C                     u8480:
 14308  00293C  803C               	bsf	___fladd@aexp^0,0,c
 14309  00293E                     l6861:
 14310  00293E  503C               	movf	___fladd@aexp^0,w,c
 14311  002940  B4D8               	btfsc	status,2,c
 14312  002942  EFA5  F014         	goto	u8491
 14313  002946  EFA7  F014         	goto	u8490
 14314  00294A                     u8491:
 14315  00294A  EFBC  F014         	goto	l6871
 14316  00294E                     u8490:
 14317  00294E  283C               	incf	___fladd@aexp^0,w,c
 14318  002950  A4D8               	btfss	status,2,c
 14319  002952  EFAD  F014         	goto	u8501
 14320  002956  EFAF  F014         	goto	u8500
 14321  00295A                     u8501:
 14322  00295A  EFB7  F014         	goto	l6867
 14323  00295E                     u8500:
 14324  00295E  0E00               	movlw	0
 14325  002960  6E33               	movwf	___fladd@a^0,c
 14326  002962  0E00               	movlw	0
 14327  002964  6E34               	movwf	(___fladd@a+1)^0,c
 14328  002966  0E00               	movlw	0
 14329  002968  6E35               	movwf	(___fladd@a+2)^0,c
 14330  00296A  0E00               	movlw	0
 14331  00296C  6E36               	movwf	(___fladd@a+3)^0,c
 14332  00296E                     l6867:
 14333  00296E  8E35               	bsf	(___fladd@a+2)^0,7,c
 14334  002970  0E00               	movlw	0
 14335  002972  6E36               	movwf	(___fladd@a+3)^0,c
 14336  002974  EFC4  F014         	goto	l6873
 14337  002978                     l6871:
 14338  002978  0E00               	movlw	0
 14339  00297A  6E33               	movwf	___fladd@a^0,c
 14340  00297C  0E00               	movlw	0
 14341  00297E  6E34               	movwf	(___fladd@a+1)^0,c
 14342  002980  0E00               	movlw	0
 14343  002982  6E35               	movwf	(___fladd@a+2)^0,c
 14344  002984  0E00               	movlw	0
 14345  002986  6E36               	movwf	(___fladd@a+3)^0,c
 14346  002988                     l6873:
 14347  002988  503D               	movf	___fladd@bexp^0,w,c
 14348  00298A  5C3C               	subwf	___fladd@aexp^0,w,c
 14349  00298C  B0D8               	btfsc	status,0,c
 14350  00298E  EFCB  F014         	goto	u8511
 14351  002992  EFCD  F014         	goto	u8510
 14352  002996                     u8511:
 14353  002996  EFF4  F014         	goto	l6909
 14354  00299A                     u8510:
 14355  00299A  AC3B               	btfss	___fladd@signs^0,6,c
 14356  00299C  EFD2  F014         	goto	u8521
 14357  0029A0  EFD4  F014         	goto	u8520
 14358  0029A4                     u8521:
 14359  0029A4  EFD6  F014         	goto	l6879
 14360  0029A8                     u8520:
 14361  0029A8  0E80               	movlw	128
 14362  0029AA  1A3B               	xorwf	___fladd@signs^0,f,c
 14363  0029AC                     l6879:
 14364  0029AC  C03D  F03E         	movff	___fladd@bexp,___fladd@grs
 14365  0029B0  C03C  F03D         	movff	___fladd@aexp,___fladd@bexp
 14366  0029B4  C03E  F03C         	movff	___fladd@grs,___fladd@aexp
 14367  0029B8  C02F  F03E         	movff	___fladd@b,___fladd@grs
 14368  0029BC  C033  F02F         	movff	___fladd@a,___fladd@b
 14369  0029C0  C03E  F033         	movff	___fladd@grs,___fladd@a
 14370  0029C4  C030  F03E         	movff	___fladd@b+1,___fladd@grs
 14371  0029C8  C034  F030         	movff	___fladd@a+1,___fladd@b+1
 14372  0029CC  C03E  F034         	movff	___fladd@grs,___fladd@a+1
 14373  0029D0  C031  F03E         	movff	___fladd@b+2,___fladd@grs
 14374  0029D4  C035  F031         	movff	___fladd@a+2,___fladd@b+2
 14375  0029D8  C03E  F035         	movff	___fladd@grs,___fladd@a+2
 14376  0029DC  C032  F03E         	movff	___fladd@b+3,___fladd@grs
 14377  0029E0  C036  F032         	movff	___fladd@a+3,___fladd@b+3
 14378  0029E4  C03E  F036         	movff	___fladd@grs,___fladd@a+3
 14379  0029E8                     l6909:
 14380  0029E8  0E00               	movlw	0
 14381  0029EA  6E3E               	movwf	___fladd@grs^0,c
 14382  0029EC  503D               	movf	___fladd@bexp^0,w,c
 14383  0029EE  C03C  F037         	movff	___fladd@aexp,??___fladd
 14384  0029F2  6A38               	clrf	(??___fladd+1)^0,c
 14385  0029F4  5E37               	subwf	??___fladd^0,f,c
 14386  0029F6  0E00               	movlw	0
 14387  0029F8  5A38               	subwfb	(??___fladd+1)^0,f,c
 14388  0029FA  BE38               	btfsc	(??___fladd+1)^0,7,c
 14389  0029FC  EF09  F015         	goto	u8531
 14390  002A00  5038               	movf	(??___fladd+1)^0,w,c
 14391  002A02  E109               	bnz	u8530
 14392  002A04  0E1A               	movlw	26
 14393  002A06  5C37               	subwf	??___fladd^0,w,c
 14394  002A08  A0D8               	btfss	status,0,c
 14395  002A0A  EF09  F015         	goto	u8531
 14396  002A0E  EF0B  F015         	goto	u8530
 14397  002A12                     u8531:
 14398  002A12  EF42  F015         	goto	l1316
 14399  002A16                     u8530:
 14400  002A16  502F               	movf	___fladd@b^0,w,c
 14401  002A18  1030               	iorwf	(___fladd@b+1)^0,w,c
 14402  002A1A  1031               	iorwf	(___fladd@b+2)^0,w,c
 14403  002A1C  1032               	iorwf	(___fladd@b+3)^0,w,c
 14404  002A1E  A4D8               	btfss	status,2,c
 14405  002A20  EF14  F015         	goto	u8541
 14406  002A24  EF17  F015         	goto	u8540
 14407  002A28                     u8541:
 14408  002A28  0E01               	movlw	1
 14409  002A2A  EF18  F015         	goto	u8550
 14410  002A2E                     u8540:
 14411  002A2E  0E00               	movlw	0
 14412  002A30                     u8550:
 14413  002A30  6E3E               	movwf	___fladd@grs^0,c
 14414  002A32  0E00               	movlw	0
 14415  002A34  6E2F               	movwf	___fladd@b^0,c
 14416  002A36  0E00               	movlw	0
 14417  002A38  6E30               	movwf	(___fladd@b+1)^0,c
 14418  002A3A  0E00               	movlw	0
 14419  002A3C  6E31               	movwf	(___fladd@b+2)^0,c
 14420  002A3E  0E00               	movlw	0
 14421  002A40  6E32               	movwf	(___fladd@b+3)^0,c
 14422  002A42  C03C  F03D         	movff	___fladd@aexp,___fladd@bexp
 14423  002A46  EF4B  F015         	goto	l1315
 14424  002A4A                     l1317:
 14425  002A4A  A03E               	btfss	___fladd@grs^0,0,c
 14426  002A4C  EF2A  F015         	goto	u8561
 14427  002A50  EF2C  F015         	goto	u8560
 14428  002A54                     u8561:
 14429  002A54  EF32  F015         	goto	l6921
 14430  002A58                     u8560:
 14431  002A58  90D8               	bcf	status,0,c
 14432  002A5A  303E               	rrcf	___fladd@grs^0,w,c
 14433  002A5C  0901               	iorlw	1
 14434  002A5E  6E3E               	movwf	___fladd@grs^0,c
 14435  002A60  EF34  F015         	goto	l6923
 14436  002A64                     l6921:
 14437  002A64  90D8               	bcf	status,0,c
 14438  002A66  323E               	rrcf	___fladd@grs^0,f,c
 14439  002A68                     l6923:
 14440  002A68  A02F               	btfss	___fladd@b^0,0,c
 14441  002A6A  EF39  F015         	goto	u8571
 14442  002A6E  EF3B  F015         	goto	u8570
 14443  002A72                     u8571:
 14444  002A72  EF3C  F015         	goto	l6927
 14445  002A76                     u8570:
 14446  002A76  8E3E               	bsf	___fladd@grs^0,7,c
 14447  002A78                     l6927:
 14448  002A78  3432               	rlcf	(___fladd@b+3)^0,w,c
 14449  002A7A  3232               	rrcf	(___fladd@b+3)^0,f,c
 14450  002A7C  3231               	rrcf	(___fladd@b+2)^0,f,c
 14451  002A7E  3230               	rrcf	(___fladd@b+1)^0,f,c
 14452  002A80  322F               	rrcf	___fladd@b^0,f,c
 14453  002A82  2A3D               	incf	___fladd@bexp^0,f,c
 14454  002A84                     l1316:
 14455  002A84  503C               	movf	___fladd@aexp^0,w,c
 14456  002A86  5C3D               	subwf	___fladd@bexp^0,w,c
 14457  002A88  A0D8               	btfss	status,0,c
 14458  002A8A  EF49  F015         	goto	u8581
 14459  002A8E  EF4B  F015         	goto	u8580
 14460  002A92                     u8581:
 14461  002A92  EF25  F015         	goto	l1317
 14462  002A96                     u8580:
 14463  002A96                     l1315:
 14464  002A96  BC3B               	btfsc	___fladd@signs^0,6,c
 14465  002A98  EF50  F015         	goto	u8591
 14466  002A9C  EF52  F015         	goto	u8590
 14467  002AA0                     u8591:
 14468  002AA0  EF92  F015         	goto	l6955
 14469  002AA4                     u8590:
 14470  002AA4  503D               	movf	___fladd@bexp^0,w,c
 14471  002AA6  A4D8               	btfss	status,2,c
 14472  002AA8  EF58  F015         	goto	u8601
 14473  002AAC  EF5A  F015         	goto	u8600
 14474  002AB0                     u8601:
 14475  002AB0  EF64  F015         	goto	l6937
 14476  002AB4                     u8600:
 14477  002AB4  0E00               	movlw	0
 14478  002AB6  6E2F               	movwf	?___fladd^0,c
 14479  002AB8  0E00               	movlw	0
 14480  002ABA  6E30               	movwf	(?___fladd+1)^0,c
 14481  002ABC  0E00               	movlw	0
 14482  002ABE  6E31               	movwf	(?___fladd+2)^0,c
 14483  002AC0  0E00               	movlw	0
 14484  002AC2  6E32               	movwf	(?___fladd+3)^0,c
 14485  002AC4  EFB3  F016         	goto	l1324
 14486  002AC8                     l6937:
 14487  002AC8  5033               	movf	___fladd@a^0,w,c
 14488  002ACA  262F               	addwf	___fladd@b^0,f,c
 14489  002ACC  5034               	movf	(___fladd@a+1)^0,w,c
 14490  002ACE  2230               	addwfc	(___fladd@b+1)^0,f,c
 14491  002AD0  5035               	movf	(___fladd@a+2)^0,w,c
 14492  002AD2  2231               	addwfc	(___fladd@b+2)^0,f,c
 14493  002AD4  5036               	movf	(___fladd@a+3)^0,w,c
 14494  002AD6  2232               	addwfc	(___fladd@b+3)^0,f,c
 14495  002AD8  A032               	btfss	(___fladd@b+3)^0,0,c
 14496  002ADA  EF71  F015         	goto	u8611
 14497  002ADE  EF73  F015         	goto	u8610
 14498  002AE2                     u8611:
 14499  002AE2  EF1F  F016         	goto	l6991
 14500  002AE6                     u8610:
 14501  002AE6  A03E               	btfss	___fladd@grs^0,0,c
 14502  002AE8  EF78  F015         	goto	u8621
 14503  002AEC  EF7A  F015         	goto	u8620
 14504  002AF0                     u8621:
 14505  002AF0  EF80  F015         	goto	l6945
 14506  002AF4                     u8620:
 14507  002AF4  90D8               	bcf	status,0,c
 14508  002AF6  303E               	rrcf	___fladd@grs^0,w,c
 14509  002AF8  0901               	iorlw	1
 14510  002AFA  6E3E               	movwf	___fladd@grs^0,c
 14511  002AFC  EF82  F015         	goto	l6947
 14512  002B00                     l6945:
 14513  002B00  90D8               	bcf	status,0,c
 14514  002B02  323E               	rrcf	___fladd@grs^0,f,c
 14515  002B04                     l6947:
 14516  002B04  A02F               	btfss	___fladd@b^0,0,c
 14517  002B06  EF87  F015         	goto	u8631
 14518  002B0A  EF89  F015         	goto	u8630
 14519  002B0E                     u8631:
 14520  002B0E  EF8A  F015         	goto	l6951
 14521  002B12                     u8630:
 14522  002B12  8E3E               	bsf	___fladd@grs^0,7,c
 14523  002B14                     l6951:
 14524  002B14  3432               	rlcf	(___fladd@b+3)^0,w,c
 14525  002B16  3232               	rrcf	(___fladd@b+3)^0,f,c
 14526  002B18  3231               	rrcf	(___fladd@b+2)^0,f,c
 14527  002B1A  3230               	rrcf	(___fladd@b+1)^0,f,c
 14528  002B1C  322F               	rrcf	___fladd@b^0,f,c
 14529  002B1E  2A3D               	incf	___fladd@bexp^0,f,c
 14530  002B20  EF1F  F016         	goto	l6991
 14531  002B24                     l6955:
 14532  002B24  5033               	movf	___fladd@a^0,w,c
 14533  002B26  5C2F               	subwf	___fladd@b^0,w,c
 14534  002B28  5034               	movf	(___fladd@a+1)^0,w,c
 14535  002B2A  5830               	subwfb	(___fladd@b+1)^0,w,c
 14536  002B2C  5035               	movf	(___fladd@a+2)^0,w,c
 14537  002B2E  5831               	subwfb	(___fladd@b+2)^0,w,c
 14538  002B30  5032               	movf	(___fladd@b+3)^0,w,c
 14539  002B32  0A80               	xorlw	128
 14540  002B34  6E37               	movwf	??___fladd^0,c
 14541  002B36  5036               	movf	(___fladd@a+3)^0,w,c
 14542  002B38  0A80               	xorlw	128
 14543  002B3A  5837               	subwfb	??___fladd^0,w,c
 14544  002B3C  B0D8               	btfsc	status,0,c
 14545  002B3E  EFA3  F015         	goto	u8641
 14546  002B42  EFA5  F015         	goto	u8640
 14547  002B46                     u8641:
 14548  002B46  EFD0  F015         	goto	l6965
 14549  002B4A                     u8640:
 14550  002B4A  502F               	movf	___fladd@b^0,w,c
 14551  002B4C  5C33               	subwf	___fladd@a^0,w,c
 14552  002B4E  6E37               	movwf	??___fladd^0,c
 14553  002B50  5030               	movf	(___fladd@b+1)^0,w,c
 14554  002B52  5834               	subwfb	(___fladd@a+1)^0,w,c
 14555  002B54  6E38               	movwf	(??___fladd+1)^0,c
 14556  002B56  5031               	movf	(___fladd@b+2)^0,w,c
 14557  002B58  5835               	subwfb	(___fladd@a+2)^0,w,c
 14558  002B5A  6E39               	movwf	(??___fladd+2)^0,c
 14559  002B5C  5032               	movf	(___fladd@b+3)^0,w,c
 14560  002B5E  5836               	subwfb	(___fladd@a+3)^0,w,c
 14561  002B60  6E3A               	movwf	(??___fladd+3)^0,c
 14562  002B62  0EFF               	movlw	255
 14563  002B64  2437               	addwf	??___fladd^0,w,c
 14564  002B66  6E2F               	movwf	___fladd@b^0,c
 14565  002B68  0EFF               	movlw	255
 14566  002B6A  2038               	addwfc	(??___fladd+1)^0,w,c
 14567  002B6C  6E30               	movwf	(___fladd@b+1)^0,c
 14568  002B6E  0EFF               	movlw	255
 14569  002B70  2039               	addwfc	(??___fladd+2)^0,w,c
 14570  002B72  6E31               	movwf	(___fladd@b+2)^0,c
 14571  002B74  0EFF               	movlw	255
 14572  002B76  203A               	addwfc	(??___fladd+3)^0,w,c
 14573  002B78  6E32               	movwf	(___fladd@b+3)^0,c
 14574  002B7A  0E80               	movlw	128
 14575  002B7C  1A3B               	xorwf	___fladd@signs^0,f,c
 14576  002B7E  6C3E               	negf	___fladd@grs^0,c
 14577  002B80  503E               	movf	___fladd@grs^0,w,c
 14578  002B82  A4D8               	btfss	status,2,c
 14579  002B84  EFC6  F015         	goto	u8651
 14580  002B88  EFC8  F015         	goto	u8650
 14581  002B8C                     u8651:
 14582  002B8C  EFD8  F015         	goto	l1332
 14583  002B90                     u8650:
 14584  002B90  0E01               	movlw	1
 14585  002B92  262F               	addwf	___fladd@b^0,f,c
 14586  002B94  0E00               	movlw	0
 14587  002B96  2230               	addwfc	(___fladd@b+1)^0,f,c
 14588  002B98  2231               	addwfc	(___fladd@b+2)^0,f,c
 14589  002B9A  2232               	addwfc	(___fladd@b+3)^0,f,c
 14590  002B9C  EFD8  F015         	goto	l1332
 14591  002BA0                     l6965:
 14592  002BA0  5033               	movf	___fladd@a^0,w,c
 14593  002BA2  5E2F               	subwf	___fladd@b^0,f,c
 14594  002BA4  5034               	movf	(___fladd@a+1)^0,w,c
 14595  002BA6  5A30               	subwfb	(___fladd@b+1)^0,f,c
 14596  002BA8  5035               	movf	(___fladd@a+2)^0,w,c
 14597  002BAA  5A31               	subwfb	(___fladd@b+2)^0,f,c
 14598  002BAC  5036               	movf	(___fladd@a+3)^0,w,c
 14599  002BAE  5A32               	subwfb	(___fladd@b+3)^0,f,c
 14600  002BB0                     l1332:
 14601  002BB0  502F               	movf	___fladd@b^0,w,c
 14602  002BB2  1030               	iorwf	(___fladd@b+1)^0,w,c
 14603  002BB4  1031               	iorwf	(___fladd@b+2)^0,w,c
 14604  002BB6  1032               	iorwf	(___fladd@b+3)^0,w,c
 14605  002BB8  A4D8               	btfss	status,2,c
 14606  002BBA  EFE1  F015         	goto	u8661
 14607  002BBE  EFE3  F015         	goto	u8660
 14608  002BC2                     u8661:
 14609  002BC2  EF18  F016         	goto	l6989
 14610  002BC6                     u8660:
 14611  002BC6  503E               	movf	___fladd@grs^0,w,c
 14612  002BC8  A4D8               	btfss	status,2,c
 14613  002BCA  EFE9  F015         	goto	u8671
 14614  002BCE  EFEB  F015         	goto	u8670
 14615  002BD2                     u8671:
 14616  002BD2  EF18  F016         	goto	l6989
 14617  002BD6                     u8670:
 14618  002BD6  0E00               	movlw	0
 14619  002BD8  6E2F               	movwf	?___fladd^0,c
 14620  002BDA  0E00               	movlw	0
 14621  002BDC  6E30               	movwf	(?___fladd+1)^0,c
 14622  002BDE  0E00               	movlw	0
 14623  002BE0  6E31               	movwf	(?___fladd+2)^0,c
 14624  002BE2  0E00               	movlw	0
 14625  002BE4  6E32               	movwf	(?___fladd+3)^0,c
 14626  002BE6  EFB3  F016         	goto	l1324
 14627  002BEA                     l6973:
 14628  002BEA  90D8               	bcf	status,0,c
 14629  002BEC  362F               	rlcf	___fladd@b^0,f,c
 14630  002BEE  3630               	rlcf	(___fladd@b+1)^0,f,c
 14631  002BF0  3631               	rlcf	(___fladd@b+2)^0,f,c
 14632  002BF2  3632               	rlcf	(___fladd@b+3)^0,f,c
 14633  002BF4  AE3E               	btfss	___fladd@grs^0,7,c
 14634  002BF6  EFFF  F015         	goto	u8681
 14635  002BFA  EF01  F016         	goto	u8680
 14636  002BFE                     u8681:
 14637  002BFE  EF02  F016         	goto	l6979
 14638  002C02                     u8680:
 14639  002C02  802F               	bsf	___fladd@b^0,0,c
 14640  002C04                     l6979:
 14641  002C04  A03E               	btfss	___fladd@grs^0,0,c
 14642  002C06  EF07  F016         	goto	u8691
 14643  002C0A  EF09  F016         	goto	u8690
 14644  002C0E                     u8691:
 14645  002C0E  EF0D  F016         	goto	l6983
 14646  002C12                     u8690:
 14647  002C12  80D8               	bsf	status,0,c
 14648  002C14  363E               	rlcf	___fladd@grs^0,f,c
 14649  002C16  EF0F  F016         	goto	l6985
 14650  002C1A                     l6983:
 14651  002C1A  90D8               	bcf	status,0,c
 14652  002C1C  363E               	rlcf	___fladd@grs^0,f,c
 14653  002C1E                     l6985:
 14654  002C1E  503D               	movf	___fladd@bexp^0,w,c
 14655  002C20  B4D8               	btfsc	status,2,c
 14656  002C22  EF15  F016         	goto	u8701
 14657  002C26  EF17  F016         	goto	u8700
 14658  002C2A                     u8701:
 14659  002C2A  EF18  F016         	goto	l6989
 14660  002C2E                     u8700:
 14661  002C2E  063D               	decf	___fladd@bexp^0,f,c
 14662  002C30                     l6989:
 14663  002C30  AE31               	btfss	(___fladd@b+2)^0,7,c
 14664  002C32  EF1D  F016         	goto	u8711
 14665  002C36  EF1F  F016         	goto	u8710
 14666  002C3A                     u8711:
 14667  002C3A  EFF5  F015         	goto	l6973
 14668  002C3E                     u8710:
 14669  002C3E                     l6991:
 14670  002C3E  0E00               	movlw	0
 14671  002C40  6E3C               	movwf	___fladd@aexp^0,c
 14672  002C42  AE3E               	btfss	___fladd@grs^0,7,c
 14673  002C44  EF26  F016         	goto	u8721
 14674  002C48  EF28  F016         	goto	u8720
 14675  002C4C                     u8721:
 14676  002C4C  EF40  F016         	goto	l1341
 14677  002C50                     u8720:
 14678  002C50  C03E  F037         	movff	___fladd@grs,??___fladd
 14679  002C54  0E7F               	movlw	127
 14680  002C56  1637               	andwf	??___fladd^0,f,c
 14681  002C58  B4D8               	btfsc	status,2,c
 14682  002C5A  EF31  F016         	goto	u8731
 14683  002C5E  EF33  F016         	goto	u8730
 14684  002C62                     u8731:
 14685  002C62  EF37  F016         	goto	l1342
 14686  002C66                     u8730:
 14687  002C66                     l6997:
 14688  002C66  0E01               	movlw	1
 14689  002C68  6E3C               	movwf	___fladd@aexp^0,c
 14690  002C6A  EF40  F016         	goto	l1341
 14691  002C6E                     l1342:
 14692  002C6E  A02F               	btfss	___fladd@b^0,0,c
 14693  002C70  EF3C  F016         	goto	u8741
 14694  002C74  EF3E  F016         	goto	u8740
 14695  002C78                     u8741:
 14696  002C78  EF40  F016         	goto	l1341
 14697  002C7C                     u8740:
 14698  002C7C  EF33  F016         	goto	l6997
 14699  002C80                     l1341:
 14700  002C80  503C               	movf	___fladd@aexp^0,w,c
 14701  002C82  B4D8               	btfsc	status,2,c
 14702  002C84  EF46  F016         	goto	u8751
 14703  002C88  EF48  F016         	goto	u8750
 14704  002C8C                     u8751:
 14705  002C8C  EF73  F016         	goto	l7009
 14706  002C90                     u8750:
 14707  002C90  0E01               	movlw	1
 14708  002C92  262F               	addwf	___fladd@b^0,f,c
 14709  002C94  0E00               	movlw	0
 14710  002C96  2230               	addwfc	(___fladd@b+1)^0,f,c
 14711  002C98  2231               	addwfc	(___fladd@b+2)^0,f,c
 14712  002C9A  2232               	addwfc	(___fladd@b+3)^0,f,c
 14713  002C9C  A032               	btfss	(___fladd@b+3)^0,0,c
 14714  002C9E  EF53  F016         	goto	u8761
 14715  002CA2  EF55  F016         	goto	u8760
 14716  002CA6                     u8761:
 14717  002CA6  EF73  F016         	goto	l7009
 14718  002CAA                     u8760:
 14719  002CAA  C02F  F037         	movff	___fladd@b,??___fladd
 14720  002CAE  C030  F038         	movff	___fladd@b+1,??___fladd+1
 14721  002CB2  C031  F039         	movff	___fladd@b+2,??___fladd+2
 14722  002CB6  C032  F03A         	movff	___fladd@b+3,??___fladd+3
 14723  002CBA  343A               	rlcf	(??___fladd+3)^0,w,c
 14724  002CBC  323A               	rrcf	(??___fladd+3)^0,f,c
 14725  002CBE  3239               	rrcf	(??___fladd+2)^0,f,c
 14726  002CC0  3238               	rrcf	(??___fladd+1)^0,f,c
 14727  002CC2  3237               	rrcf	??___fladd^0,f,c
 14728  002CC4  C037  F02F         	movff	??___fladd,___fladd@b
 14729  002CC8  C038  F030         	movff	??___fladd+1,___fladd@b+1
 14730  002CCC  C039  F031         	movff	??___fladd+2,___fladd@b+2
 14731  002CD0  C03A  F032         	movff	??___fladd+3,___fladd@b+3
 14732  002CD4  283D               	incf	___fladd@bexp^0,w,c
 14733  002CD6  B4D8               	btfsc	status,2,c
 14734  002CD8  EF70  F016         	goto	u8771
 14735  002CDC  EF72  F016         	goto	u8770
 14736  002CE0                     u8771:
 14737  002CE0  EF73  F016         	goto	l7009
 14738  002CE4                     u8770:
 14739  002CE4  2A3D               	incf	___fladd@bexp^0,f,c
 14740  002CE6                     l7009:
 14741  002CE6  283D               	incf	___fladd@bexp^0,w,c
 14742  002CE8  B4D8               	btfsc	status,2,c
 14743  002CEA  EF79  F016         	goto	u8781
 14744  002CEE  EF7B  F016         	goto	u8780
 14745  002CF2                     u8781:
 14746  002CF2  EF83  F016         	goto	l7013
 14747  002CF6                     u8780:
 14748  002CF6  503D               	movf	___fladd@bexp^0,w,c
 14749  002CF8  A4D8               	btfss	status,2,c
 14750  002CFA  EF81  F016         	goto	u8791
 14751  002CFE  EF83  F016         	goto	u8790
 14752  002D02                     u8791:
 14753  002D02  EF95  F016         	goto	l7017
 14754  002D06                     u8790:
 14755  002D06                     l7013:
 14756  002D06  0E00               	movlw	0
 14757  002D08  6E2F               	movwf	___fladd@b^0,c
 14758  002D0A  0E00               	movlw	0
 14759  002D0C  6E30               	movwf	(___fladd@b+1)^0,c
 14760  002D0E  0E00               	movlw	0
 14761  002D10  6E31               	movwf	(___fladd@b+2)^0,c
 14762  002D12  0E00               	movlw	0
 14763  002D14  6E32               	movwf	(___fladd@b+3)^0,c
 14764  002D16  503D               	movf	___fladd@bexp^0,w,c
 14765  002D18  A4D8               	btfss	status,2,c
 14766  002D1A  EF91  F016         	goto	u8801
 14767  002D1E  EF93  F016         	goto	u8800
 14768  002D22                     u8801:
 14769  002D22  EF95  F016         	goto	l7017
 14770  002D26                     u8800:
 14771  002D26  0E00               	movlw	0
 14772  002D28  6E3B               	movwf	___fladd@signs^0,c
 14773  002D2A                     l7017:
 14774  002D2A  A03D               	btfss	___fladd@bexp^0,0,c
 14775  002D2C  EF9A  F016         	goto	u8811
 14776  002D30  EF9C  F016         	goto	u8810
 14777  002D34                     u8811:
 14778  002D34  EF9F  F016         	goto	l7021
 14779  002D38                     u8810:
 14780  002D38  8E31               	bsf	(___fladd@b+2)^0,7,c
 14781  002D3A  EFA0  F016         	goto	l7023
 14782  002D3E                     l7021:
 14783  002D3E  9E31               	bcf	(___fladd@b+2)^0,7,c
 14784  002D40                     l7023:
 14785  002D40  90D8               	bcf	status,0,c
 14786  002D42  303D               	rrcf	___fladd@bexp^0,w,c
 14787  002D44  6E32               	movwf	(___fladd@b+3)^0,c
 14788  002D46  AE3B               	btfss	___fladd@signs^0,7,c
 14789  002D48  EFA8  F016         	goto	u8821
 14790  002D4C  EFAA  F016         	goto	u8820
 14791  002D50                     u8821:
 14792  002D50  EFAB  F016         	goto	l7029
 14793  002D54                     u8820:
 14794  002D54  8E32               	bsf	(___fladd@b+3)^0,7,c
 14795  002D56                     l7029:
 14796  002D56  C02F  F02F         	movff	___fladd@b,?___fladd
 14797  002D5A  C030  F030         	movff	___fladd@b+1,?___fladd+1
 14798  002D5E  C031  F031         	movff	___fladd@b+2,?___fladd+2
 14799  002D62  C032  F032         	movff	___fladd@b+3,?___fladd+3
 14800  002D66                     l1324:
 14801  002D66  0012               	return		;funcret
 14802  002D68                     __end_of___fladd:
 14803                           	callstack 0
 14804                           
 14805 ;; *************** function _stop *****************
 14806 ;; Defined at:
 14807 ;;		line 129 in file "DC_motors.c"
 14808 ;; Parameters:    Size  Location     Type
 14809 ;;  mL              2   32[COMRAM] PTR struct .
 14810 ;;		 -> main@motorL(9), 
 14811 ;;  mR              2   34[COMRAM] PTR struct .
 14812 ;;		 -> main@motorR(9), 
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;		None
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      void 
 14817 ;; Registers used:
 14818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14828 ;;Total ram usage:        4 bytes
 14829 ;; Hardware stack levels used: 1
 14830 ;; Hardware stack levels required when called: 9
 14831 ;; This function calls:
 14832 ;;		_DCmotors_setPWM
 14833 ;; This function is called by:
 14834 ;;		_colourcards_readRGBC
 14835 ;;		_DCmotors_calibration
 14836 ;;		_DCmotors_testing
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text74
 14841  005770                     __ptext74:
 14842                           	callstack 0
 14843  005770                     _stop:
 14844                           	callstack 20
 14845  005770                     
 14846                           ;DC_motors.c: 129: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 130: {;DC_motors.c
      +                          : 131:     LATDbits.LATD4 = 1;
 14847  005770  887C               	bsf	124,4,c	;volatile
 14848                           
 14849                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
 14850  005772  EFD7  F02B         	goto	l8563
 14851  005776                     l8555:
 14852                           
 14853                           ;DC_motors.c: 135:         mL->power -= 10;
 14854  005776  C021  FFD9         	movff	stop@mL,fsr2l
 14855  00577A  C022  FFDA         	movff	stop@mL+1,fsr2h
 14856  00577E  0E0A               	movlw	10
 14857  005780  5EDF               	subwf	indf2,f,c
 14858                           
 14859                           ;DC_motors.c: 136:         mR->power -= 10;
 14860  005782  C023  FFD9         	movff	stop@mR,fsr2l
 14861  005786  C024  FFDA         	movff	stop@mR+1,fsr2h
 14862  00578A  0E0A               	movlw	10
 14863  00578C  5EDF               	subwf	indf2,f,c
 14864  00578E                     
 14865                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
 14866  00578E  C021  F016         	movff	stop@mL,DCmotors_setPWM@m
 14867  005792  C022  F017         	movff	stop@mL+1,DCmotors_setPWM@m+1
 14868  005796  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
 14869  00579A                     
 14870                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
 14871  00579A  C023  F016         	movff	stop@mR,DCmotors_setPWM@m
 14872  00579E  C024  F017         	movff	stop@mR+1,DCmotors_setPWM@m+1
 14873  0057A2  EC0F  F01D         	call	_DCmotors_setPWM	;wreg free
 14874  0057A6                     
 14875                           ;DC_motors.c: 141:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 14876  0057A6  0EA0               	movlw	160
 14877  0057A8                     u12637:
 14878  0057A8  D000               	nop2	
 14879  0057AA  2EE8               	decfsz	wreg,f,c
 14880  0057AC  D7FD               	bra	u12637
 14881  0057AE                     l8563:
 14882                           
 14883                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
 14884  0057AE  C021  FFD9         	movff	stop@mL,fsr2l
 14885  0057B2  C022  FFDA         	movff	stop@mL+1,fsr2h
 14886  0057B6  50DF               	movf	indf2,w,c
 14887  0057B8  B4D8               	btfsc	status,2,c
 14888  0057BA  EFE1  F02B         	goto	u11441
 14889  0057BE  EFE3  F02B         	goto	u11440
 14890  0057C2                     u11441:
 14891  0057C2  EFEF  F02B         	goto	l657
 14892  0057C6                     u11440:
 14893  0057C6  C023  FFD9         	movff	stop@mR,fsr2l
 14894  0057CA  C024  FFDA         	movff	stop@mR+1,fsr2h
 14895  0057CE  50DF               	movf	indf2,w,c
 14896  0057D0  A4D8               	btfss	status,2,c
 14897  0057D2  EFED  F02B         	goto	u11451
 14898  0057D6  EFEF  F02B         	goto	u11450
 14899  0057DA                     u11451:
 14900  0057DA  EFBB  F02B         	goto	l8555
 14901  0057DE                     u11450:
 14902  0057DE                     l657:
 14903                           
 14904                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
 14905  0057DE  987C               	bcf	124,4,c	;volatile
 14906  0057E0  0012               	return		;funcret
 14907  0057E2                     __end_of_stop:
 14908                           	callstack 0
 14909                           
 14910 ;; *************** function _DCmotors_setPWM *****************
 14911 ;; Defined at:
 14912 ;;		line 51 in file "DC_motors.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  m               2   21[COMRAM] PTR struct .
 14915 ;;		 -> main@motorR(9), main@motorL(9), 
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;  PWMduty         2   30[COMRAM] int 
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14929 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14930 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14931 ;;Total ram usage:       11 bytes
 14932 ;; Hardware stack levels used: 1
 14933 ;; Hardware stack levels required when called: 8
 14934 ;; This function calls:
 14935 ;;		___awdiv
 14936 ;;		___wmul
 14937 ;; This function is called by:
 14938 ;;		_forward
 14939 ;;		_reverse
 14940 ;;		_stop
 14941 ;;		_left
 14942 ;;		_right
 14943 ;; This function uses a non-reentrant model
 14944 ;;
 14945                           
 14946                           	psect	text75
 14947  003A1E                     __ptext75:
 14948                           	callstack 0
 14949  003A1E                     _DCmotors_setPWM:
 14950                           	callstack 21
 14951  003A1E                     
 14952                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
 14953  003A1E  EE20 F001          	lfsr	2,1
 14954  003A22  5016               	movf	DCmotors_setPWM@m^0,w,c
 14955  003A24  26D9               	addwf	fsr2l,f,c
 14956  003A26  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 14957  003A28  22DA               	addwfc	fsr2h,f,c
 14958  003A2A  50DF               	movf	indf2,w,c
 14959  003A2C  B4D8               	btfsc	status,2,c
 14960  003A2E  EF1B  F01D         	goto	u11151
 14961  003A32  EF1D  F01D         	goto	u11150
 14962  003A36                     u11151:
 14963  003A36  EF4E  F01D         	goto	l8341
 14964  003A3A                     u11150:
 14965  003A3A                     
 14966                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
 14967  003A3A  C016  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 14968  003A3E  C017  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 14969  003A42  50DF               	movf	indf2,w,c
 14970  003A44  6E18               	movwf	??_DCmotors_setPWM^0,c
 14971  003A46  5018               	movf	??_DCmotors_setPWM^0,w,c
 14972  003A48  6E08               	movwf	___wmul@multiplier^0,c
 14973  003A4A  6A09               	clrf	(___wmul@multiplier+1)^0,c
 14974  003A4C  EE20 F007          	lfsr	2,7
 14975  003A50  5016               	movf	DCmotors_setPWM@m^0,w,c
 14976  003A52  26D9               	addwf	fsr2l,f,c
 14977  003A54  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 14978  003A56  22DA               	addwfc	fsr2h,f,c
 14979  003A58  CFDE F00A          	movff	postinc2,___wmul@multiplicand
 14980  003A5C  CFDD F00B          	movff	postdec2,___wmul@multiplicand+1
 14981  003A60  EC2F  F030         	call	___wmul	;wreg free
 14982  003A64  C008  F00E         	movff	?___wmul,___awdiv@dividend
 14983  003A68  C009  F00F         	movff	?___wmul+1,___awdiv@dividend+1
 14984  003A6C  0E00               	movlw	0
 14985  003A6E  6E11               	movwf	(___awdiv@divisor+1)^0,c
 14986  003A70  0E64               	movlw	100
 14987  003A72  6E10               	movwf	___awdiv@divisor^0,c
 14988  003A74  EC6A  F029         	call	___awdiv	;wreg free
 14989  003A78  EE20 F007          	lfsr	2,7
 14990  003A7C  5016               	movf	DCmotors_setPWM@m^0,w,c
 14991  003A7E  26D9               	addwf	fsr2l,f,c
 14992  003A80  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 14993  003A82  22DA               	addwfc	fsr2h,f,c
 14994  003A84  CFDE F019          	movff	postinc2,??_DCmotors_setPWM+1
 14995  003A88  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+2
 14996  003A8C  500E               	movf	?___awdiv^0,w,c
 14997  003A8E  5C19               	subwf	(??_DCmotors_setPWM+1)^0,w,c
 14998  003A90  6E1F               	movwf	DCmotors_setPWM@PWMduty^0,c
 14999  003A92  500F               	movf	(?___awdiv+1)^0,w,c
 15000  003A94  581A               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
 15001  003A96  6E20               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
 15002                           
 15003                           ;DC_motors.c: 57:  } else {
 15004  003A98  EF71  F01D         	goto	l8343
 15005  003A9C                     l8341:
 15006                           
 15007                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 15008  003A9C  C016  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 15009  003AA0  C017  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 15010  003AA4  50DF               	movf	indf2,w,c
 15011  003AA6  6E18               	movwf	??_DCmotors_setPWM^0,c
 15012  003AA8  5018               	movf	??_DCmotors_setPWM^0,w,c
 15013  003AAA  6E08               	movwf	___wmul@multiplier^0,c
 15014  003AAC  6A09               	clrf	(___wmul@multiplier+1)^0,c
 15015  003AAE  EE20 F007          	lfsr	2,7
 15016  003AB2  5016               	movf	DCmotors_setPWM@m^0,w,c
 15017  003AB4  26D9               	addwf	fsr2l,f,c
 15018  003AB6  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15019  003AB8  22DA               	addwfc	fsr2h,f,c
 15020  003ABA  CFDE F00A          	movff	postinc2,___wmul@multiplicand
 15021  003ABE  CFDD F00B          	movff	postdec2,___wmul@multiplicand+1
 15022  003AC2  EC2F  F030         	call	___wmul	;wreg free
 15023  003AC6  C008  F00E         	movff	?___wmul,___awdiv@dividend
 15024  003ACA  C009  F00F         	movff	?___wmul+1,___awdiv@dividend+1
 15025  003ACE  0E00               	movlw	0
 15026  003AD0  6E11               	movwf	(___awdiv@divisor+1)^0,c
 15027  003AD2  0E64               	movlw	100
 15028  003AD4  6E10               	movwf	___awdiv@divisor^0,c
 15029  003AD6  EC6A  F029         	call	___awdiv	;wreg free
 15030  003ADA  C00E  F01F         	movff	?___awdiv,DCmotors_setPWM@PWMduty
 15031  003ADE  C00F  F020         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
 15032  003AE2                     l8343:
 15033                           
 15034                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
 15035  003AE2  EE20 F002          	lfsr	2,2
 15036  003AE6  5016               	movf	DCmotors_setPWM@m^0,w,c
 15037  003AE8  26D9               	addwf	fsr2l,f,c
 15038  003AEA  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15039  003AEC  22DA               	addwfc	fsr2h,f,c
 15040  003AEE  CFDE F018          	movff	postinc2,??_DCmotors_setPWM
 15041  003AF2  CFDD F019          	movff	postdec2,??_DCmotors_setPWM+1
 15042  003AF6  C018  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15043  003AFA  C019  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15044  003AFE  C01F  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
 15045  003B02                     
 15046                           ;DC_motors.c: 63:  if (m->direction){
 15047  003B02  EE20 F001          	lfsr	2,1
 15048  003B06  5016               	movf	DCmotors_setPWM@m^0,w,c
 15049  003B08  26D9               	addwf	fsr2l,f,c
 15050  003B0A  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15051  003B0C  22DA               	addwfc	fsr2h,f,c
 15052  003B0E  50DF               	movf	indf2,w,c
 15053  003B10  B4D8               	btfsc	status,2,c
 15054  003B12  EF8D  F01D         	goto	u11161
 15055  003B16  EF8F  F01D         	goto	u11160
 15056  003B1A                     u11161:
 15057  003B1A  EFC4  F01D         	goto	l8349
 15058  003B1E                     u11160:
 15059  003B1E                     
 15060                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
 15061  003B1E  EE20 F004          	lfsr	2,4
 15062  003B22  5016               	movf	DCmotors_setPWM@m^0,w,c
 15063  003B24  26D9               	addwf	fsr2l,f,c
 15064  003B26  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15065  003B28  22DA               	addwfc	fsr2h,f,c
 15066  003B2A  CFDE F018          	movff	postinc2,??_DCmotors_setPWM
 15067  003B2E  CFDD F019          	movff	postdec2,??_DCmotors_setPWM+1
 15068  003B32  C018  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15069  003B36  C019  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15070  003B3A  EE10 F004          	lfsr	1,4
 15071  003B3E  5016               	movf	DCmotors_setPWM@m^0,w,c
 15072  003B40  26E1               	addwf	fsr1l,f,c
 15073  003B42  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15074  003B44  22E2               	addwfc	fsr1h,f,c
 15075  003B46  CFE6 F01A          	movff	postinc1,??_DCmotors_setPWM+2
 15076  003B4A  CFE5 F01B          	movff	postdec1,??_DCmotors_setPWM+3
 15077  003B4E  C01A  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 15078  003B52  C01B  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 15079  003B56  50E7               	movf	indf1,w,c
 15080  003B58  6E1C               	movwf	(??_DCmotors_setPWM+4)^0,c
 15081  003B5A  EE10 F006          	lfsr	1,6
 15082  003B5E  5016               	movf	DCmotors_setPWM@m^0,w,c
 15083  003B60  26E1               	addwf	fsr1l,f,c
 15084  003B62  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15085  003B64  22E2               	addwfc	fsr1h,f,c
 15086  003B66  50E7               	movf	indf1,w,c
 15087  003B68  6E1D               	movwf	(??_DCmotors_setPWM+5)^0,c
 15088  003B6A  0E01               	movlw	1
 15089  003B6C  6E1E               	movwf	(??_DCmotors_setPWM+6)^0,c
 15090  003B6E  2A1D               	incf	(??_DCmotors_setPWM+5)^0,f,c
 15091  003B70  EFBC  F01D         	goto	u11174
 15092  003B74                     u11175:
 15093  003B74  90D8               	bcf	status,0,c
 15094  003B76  361E               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 15095  003B78                     u11174:
 15096  003B78  2E1D               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 15097  003B7A  EFBA  F01D         	goto	u11175
 15098  003B7E  501E               	movf	(??_DCmotors_setPWM+6)^0,w,c
 15099  003B80  101C               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
 15100  003B82  6EDF               	movwf	indf2,c
 15101                           
 15102                           ;DC_motors.c: 65:  } else {
 15103  003B84  EFF8  F01D         	goto	l629
 15104  003B88                     l8349:
 15105                           
 15106                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
 15107  003B88  EE20 F004          	lfsr	2,4
 15108  003B8C  5016               	movf	DCmotors_setPWM@m^0,w,c
 15109  003B8E  26D9               	addwf	fsr2l,f,c
 15110  003B90  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15111  003B92  22DA               	addwfc	fsr2h,f,c
 15112  003B94  CFDE F018          	movff	postinc2,??_DCmotors_setPWM
 15113  003B98  CFDD F019          	movff	postdec2,??_DCmotors_setPWM+1
 15114  003B9C  C018  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15115  003BA0  C019  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15116  003BA4  EE10 F004          	lfsr	1,4
 15117  003BA8  5016               	movf	DCmotors_setPWM@m^0,w,c
 15118  003BAA  26E1               	addwf	fsr1l,f,c
 15119  003BAC  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15120  003BAE  22E2               	addwfc	fsr1h,f,c
 15121  003BB0  CFE6 F01A          	movff	postinc1,??_DCmotors_setPWM+2
 15122  003BB4  CFE5 F01B          	movff	postdec1,??_DCmotors_setPWM+3
 15123  003BB8  C01A  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 15124  003BBC  C01B  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 15125  003BC0  50E7               	movf	indf1,w,c
 15126  003BC2  6E1C               	movwf	(??_DCmotors_setPWM+4)^0,c
 15127  003BC4  EE10 F006          	lfsr	1,6
 15128  003BC8  5016               	movf	DCmotors_setPWM@m^0,w,c
 15129  003BCA  26E1               	addwf	fsr1l,f,c
 15130  003BCC  5017               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15131  003BCE  22E2               	addwfc	fsr1h,f,c
 15132  003BD0  50E7               	movf	indf1,w,c
 15133  003BD2  6E1D               	movwf	(??_DCmotors_setPWM+5)^0,c
 15134  003BD4  0E01               	movlw	1
 15135  003BD6  6E1E               	movwf	(??_DCmotors_setPWM+6)^0,c
 15136  003BD8  2A1D               	incf	(??_DCmotors_setPWM+5)^0,f,c
 15137  003BDA  EFF1  F01D         	goto	u11184
 15138  003BDE                     u11185:
 15139  003BDE  90D8               	bcf	status,0,c
 15140  003BE0  361E               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 15141  003BE2                     u11184:
 15142  003BE2  2E1D               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 15143  003BE4  EFEF  F01D         	goto	u11185
 15144  003BE8  501E               	movf	(??_DCmotors_setPWM+6)^0,w,c
 15145  003BEA  0AFF               	xorlw	255
 15146  003BEC  141C               	andwf	(??_DCmotors_setPWM+4)^0,w,c
 15147  003BEE  6EDF               	movwf	indf2,c
 15148  003BF0                     l629:
 15149  003BF0  0012               	return		;funcret
 15150  003BF2                     __end_of_DCmotors_setPWM:
 15151                           	callstack 0
 15152                           
 15153 ;; *************** function ___wmul *****************
 15154 ;; Defined at:
 15155 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;  multiplier      2    7[COMRAM] unsigned int 
 15158 ;;  multiplicand    2    9[COMRAM] unsigned int 
 15159 ;; Auto vars:     Size  Location     Type
 15160 ;;  product         2   11[COMRAM] unsigned int 
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  2    7[COMRAM] unsigned int 
 15163 ;; Registers used:
 15164 ;;		wreg, status,2, status,0, prodl, prodh
 15165 ;; Tracked objects:
 15166 ;;		On entry : 0/0
 15167 ;;		On exit  : 0/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15174 ;;Total ram usage:        6 bytes
 15175 ;; Hardware stack levels used: 1
 15176 ;; Hardware stack levels required when called: 7
 15177 ;; This function calls:
 15178 ;;		Nothing
 15179 ;; This function is called by:
 15180 ;;		_DCmotors_setPWM
 15181 ;;		_atoi
 15182 ;; This function uses a non-reentrant model
 15183 ;;
 15184                           
 15185                           	psect	text76
 15186  00605E                     __ptext76:
 15187                           	callstack 0
 15188  00605E                     ___wmul:
 15189                           	callstack 21
 15190  00605E  5008               	movf	___wmul@multiplier^0,w,c
 15191  006060  020A               	mulwf	___wmul@multiplicand^0,c
 15192  006062  CFF3 F00C          	movff	prodl,___wmul@product
 15193  006066  CFF4 F00D          	movff	prodh,___wmul@product+1
 15194  00606A  5008               	movf	___wmul@multiplier^0,w,c
 15195  00606C  020B               	mulwf	(___wmul@multiplicand+1)^0,c
 15196  00606E  50F3               	movf	243,w,c
 15197  006070  260D               	addwf	(___wmul@product+1)^0,f,c
 15198  006072  5009               	movf	(___wmul@multiplier+1)^0,w,c
 15199  006074  020A               	mulwf	___wmul@multiplicand^0,c
 15200  006076  50F3               	movf	243,w,c
 15201  006078  260D               	addwf	(___wmul@product+1)^0,f,c
 15202  00607A  C00C  F008         	movff	___wmul@product,?___wmul
 15203  00607E  C00D  F009         	movff	___wmul@product+1,?___wmul+1
 15204  006082  0012               	return		;funcret
 15205  006084                     __end_of___wmul:
 15206                           	callstack 0
 15207                           
 15208 ;; *************** function ___awdiv *****************
 15209 ;; Defined at:
 15210 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;  dividend        2   13[COMRAM] int 
 15213 ;;  divisor         2   15[COMRAM] int 
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;  quotient        2   19[COMRAM] int 
 15216 ;;  sign            1   18[COMRAM] unsigned char 
 15217 ;;  counter         1   17[COMRAM] unsigned char 
 15218 ;; Return value:  Size  Location     Type
 15219 ;;                  2   13[COMRAM] int 
 15220 ;; Registers used:
 15221 ;;		wreg, status,2, status,0
 15222 ;; Tracked objects:
 15223 ;;		On entry : 0/0
 15224 ;;		On exit  : 0/0
 15225 ;;		Unchanged: 0/0
 15226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15228 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15230 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15231 ;;Total ram usage:        8 bytes
 15232 ;; Hardware stack levels used: 1
 15233 ;; Hardware stack levels required when called: 7
 15234 ;; This function calls:
 15235 ;;		Nothing
 15236 ;; This function is called by:
 15237 ;;		_DCmotors_setPWM
 15238 ;;		_efgtoa
 15239 ;; This function uses a non-reentrant model
 15240 ;;
 15241                           
 15242                           	psect	text77
 15243  0052D4                     __ptext77:
 15244                           	callstack 0
 15245  0052D4                     ___awdiv:
 15246                           	callstack 21
 15247  0052D4  0E00               	movlw	0
 15248  0052D6  6E13               	movwf	___awdiv@sign^0,c
 15249  0052D8  BE11               	btfsc	(___awdiv@divisor+1)^0,7,c
 15250  0052DA  EF73  F029         	goto	u9430
 15251  0052DE  EF71  F029         	goto	u9431
 15252  0052E2                     u9431:
 15253  0052E2  EF79  F029         	goto	l7423
 15254  0052E6                     u9430:
 15255  0052E6  6C10               	negf	___awdiv@divisor^0,c
 15256  0052E8  1E11               	comf	(___awdiv@divisor+1)^0,f,c
 15257  0052EA  B0D8               	btfsc	status,0,c
 15258  0052EC  2A11               	incf	(___awdiv@divisor+1)^0,f,c
 15259  0052EE  0E01               	movlw	1
 15260  0052F0  6E13               	movwf	___awdiv@sign^0,c
 15261  0052F2                     l7423:
 15262  0052F2  BE0F               	btfsc	(___awdiv@dividend+1)^0,7,c
 15263  0052F4  EF80  F029         	goto	u9440
 15264  0052F8  EF7E  F029         	goto	u9441
 15265  0052FC                     u9441:
 15266  0052FC  EF86  F029         	goto	l7429
 15267  005300                     u9440:
 15268  005300  6C0E               	negf	___awdiv@dividend^0,c
 15269  005302  1E0F               	comf	(___awdiv@dividend+1)^0,f,c
 15270  005304  B0D8               	btfsc	status,0,c
 15271  005306  2A0F               	incf	(___awdiv@dividend+1)^0,f,c
 15272  005308  0E01               	movlw	1
 15273  00530A  1A13               	xorwf	___awdiv@sign^0,f,c
 15274  00530C                     l7429:
 15275  00530C  0E00               	movlw	0
 15276  00530E  6E15               	movwf	(___awdiv@quotient+1)^0,c
 15277  005310  0E00               	movlw	0
 15278  005312  6E14               	movwf	___awdiv@quotient^0,c
 15279  005314  5010               	movf	___awdiv@divisor^0,w,c
 15280  005316  1011               	iorwf	(___awdiv@divisor+1)^0,w,c
 15281  005318  B4D8               	btfsc	status,2,c
 15282  00531A  EF91  F029         	goto	u9451
 15283  00531E  EF93  F029         	goto	u9450
 15284  005322                     u9451:
 15285  005322  EFBB  F029         	goto	l7451
 15286  005326                     u9450:
 15287  005326  0E01               	movlw	1
 15288  005328  6E12               	movwf	___awdiv@counter^0,c
 15289  00532A  EF9B  F029         	goto	l7437
 15290  00532E                     l7435:
 15291  00532E  90D8               	bcf	status,0,c
 15292  005330  3610               	rlcf	___awdiv@divisor^0,f,c
 15293  005332  3611               	rlcf	(___awdiv@divisor+1)^0,f,c
 15294  005334  2A12               	incf	___awdiv@counter^0,f,c
 15295  005336                     l7437:
 15296  005336  AE11               	btfss	(___awdiv@divisor+1)^0,7,c
 15297  005338  EFA0  F029         	goto	u9461
 15298  00533C  EFA2  F029         	goto	u9460
 15299  005340                     u9461:
 15300  005340  EF97  F029         	goto	l7435
 15301  005344                     u9460:
 15302  005344                     l7439:
 15303  005344  90D8               	bcf	status,0,c
 15304  005346  3614               	rlcf	___awdiv@quotient^0,f,c
 15305  005348  3615               	rlcf	(___awdiv@quotient+1)^0,f,c
 15306  00534A  5010               	movf	___awdiv@divisor^0,w,c
 15307  00534C  5C0E               	subwf	___awdiv@dividend^0,w,c
 15308  00534E  5011               	movf	(___awdiv@divisor+1)^0,w,c
 15309  005350  580F               	subwfb	(___awdiv@dividend+1)^0,w,c
 15310  005352  A0D8               	btfss	status,0,c
 15311  005354  EFAE  F029         	goto	u9471
 15312  005358  EFB0  F029         	goto	u9470
 15313  00535C                     u9471:
 15314  00535C  EFB5  F029         	goto	l7447
 15315  005360                     u9470:
 15316  005360  5010               	movf	___awdiv@divisor^0,w,c
 15317  005362  5E0E               	subwf	___awdiv@dividend^0,f,c
 15318  005364  5011               	movf	(___awdiv@divisor+1)^0,w,c
 15319  005366  5A0F               	subwfb	(___awdiv@dividend+1)^0,f,c
 15320  005368  8014               	bsf	___awdiv@quotient^0,0,c
 15321  00536A                     l7447:
 15322  00536A  90D8               	bcf	status,0,c
 15323  00536C  3211               	rrcf	(___awdiv@divisor+1)^0,f,c
 15324  00536E  3210               	rrcf	___awdiv@divisor^0,f,c
 15325  005370  2E12               	decfsz	___awdiv@counter^0,f,c
 15326  005372  EFA2  F029         	goto	l7439
 15327  005376                     l7451:
 15328  005376  5013               	movf	___awdiv@sign^0,w,c
 15329  005378  B4D8               	btfsc	status,2,c
 15330  00537A  EFC1  F029         	goto	u9481
 15331  00537E  EFC3  F029         	goto	u9480
 15332  005382                     u9481:
 15333  005382  EFC7  F029         	goto	l7455
 15334  005386                     u9480:
 15335  005386  6C14               	negf	___awdiv@quotient^0,c
 15336  005388  1E15               	comf	(___awdiv@quotient+1)^0,f,c
 15337  00538A  B0D8               	btfsc	status,0,c
 15338  00538C  2A15               	incf	(___awdiv@quotient+1)^0,f,c
 15339  00538E                     l7455:
 15340  00538E  C014  F00E         	movff	___awdiv@quotient,?___awdiv
 15341  005392  C015  F00F         	movff	___awdiv@quotient+1,?___awdiv+1
 15342  005396  0012               	return		;funcret
 15343  005398                     __end_of___awdiv:
 15344                           	callstack 0
 15345                           
 15346 ;; *************** function _DCmotors_adjustval *****************
 15347 ;; Defined at:
 15348 ;;		line 271 in file "DC_motors.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;  i               1    9[COMRAM] unsigned char 
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      void 
 15355 ;; Registers used:
 15356 ;;		wreg, status,2, status,0
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15365 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15366 ;;Total ram usage:        3 bytes
 15367 ;; Hardware stack levels used: 1
 15368 ;; Hardware stack levels required when called: 7
 15369 ;; This function calls:
 15370 ;;		Nothing
 15371 ;; This function is called by:
 15372 ;;		_DCmotors_calibration
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376                           	psect	text78
 15377  0055B4                     __ptext78:
 15378                           	callstack 0
 15379  0055B4                     _DCmotors_adjustval:
 15380                           	callstack 22
 15381  0055B4                     
 15382                           ;DC_motors.c: 273:     unsigned char i;;DC_motors.c: 274:     for (i=0; i<10; i++) {
 15383  0055B4  0E00               	movlw	0
 15384  0055B6  6E0A               	movwf	DCmotors_adjustval@i^0,c
 15385  0055B8                     l716:
 15386                           
 15387                           ;DC_motors.c: 275:         if (PORTFbits.RF2) {
 15388  0055B8  A48E               	btfss	142,2,c	;volatile
 15389  0055BA  EFE1  F02A         	goto	u7431
 15390  0055BE  EFE3  F02A         	goto	u7430
 15391  0055C2                     u7431:
 15392  0055C2  EF04  F02B         	goto	l718
 15393  0055C6                     u7430:
 15394  0055C6                     
 15395                           ;DC_motors.c: 276:             LATDbits.LATD7 = 1;
 15396  0055C6  8E7C               	bsf	124,7,c	;volatile
 15397  0055C8                     
 15398                           ;DC_motors.c: 277:             DCmotors_turntime+=5;
 15399  0055C8  0E05               	movlw	5
 15400  0055CA  0101               	movlb	1	; () banked
 15401  0055CC  27D9               	addwf	_DCmotors_turntime& (0+255),f,b	;volatile
 15402  0055CE  0E00               	movlw	0
 15403  0055D0  23DA               	addwfc	(_DCmotors_turntime+1)& (0+255),f,b	;volatile
 15404  0055D2                     
 15405                           ; BSR set to: 1
 15406                           ;DC_motors.c: 278:             _delay((unsigned long)((100)*(64000000/4000.0)));
 15407  0055D2  0E09               	movlw	9
 15408  0055D4  6E09               	movwf	(??_DCmotors_adjustval+1)^0,c
 15409  0055D6  0E1E               	movlw	30
 15410  0055D8  6E08               	movwf	??_DCmotors_adjustval^0,c
 15411  0055DA  0EE4               	movlw	228
 15412  0055DC                     u12647:
 15413  0055DC  2EE8               	decfsz	wreg,f,c
 15414  0055DE  D7FE               	bra	u12647
 15415  0055E0  2E08               	decfsz	??_DCmotors_adjustval^0,f,c
 15416  0055E2  D7FC               	bra	u12647
 15417  0055E4  2E09               	decfsz	(??_DCmotors_adjustval+1)^0,f,c
 15418  0055E6  D7FA               	bra	u12647
 15419  0055E8  D000               	nop2	
 15420  0055EA                     
 15421                           ;DC_motors.c: 279:             LATDbits.LATD7 = 0;
 15422  0055EA  9E7C               	bcf	124,7,c	;volatile
 15423  0055EC                     l6237:
 15424                           
 15425                           ;DC_motors.c: 280:             _delay((unsigned long)((1000)*(64000000/4000.0)));
 15426  0055EC  0E52               	movlw	82
 15427  0055EE  6E09               	movwf	(??_DCmotors_adjustval+1)^0,c
 15428  0055F0  0E2B               	movlw	43
 15429  0055F2  6E08               	movwf	??_DCmotors_adjustval^0,c
 15430  0055F4  0E00               	movlw	0
 15431  0055F6                     u12657:
 15432  0055F6  2EE8               	decfsz	wreg,f,c
 15433  0055F8  D7FE               	bra	u12657
 15434  0055FA  2E08               	decfsz	??_DCmotors_adjustval^0,f,c
 15435  0055FC  D7FC               	bra	u12657
 15436  0055FE  2E09               	decfsz	(??_DCmotors_adjustval+1)^0,f,c
 15437  005600  D7FA               	bra	u12657
 15438  005602  D000               	nop2	
 15439                           
 15440                           ;DC_motors.c: 281:         } else if (PORTFbits.RF3) {
 15441  005604  EF20  F02B         	goto	l6249
 15442  005608                     l718:
 15443  005608  A68E               	btfss	142,3,c	;volatile
 15444  00560A  EF09  F02B         	goto	u7441
 15445  00560E  EF0B  F02B         	goto	u7440
 15446  005612                     u7441:
 15447  005612  EF20  F02B         	goto	l6249
 15448  005616                     u7440:
 15449  005616                     
 15450                           ;DC_motors.c: 282:             LATHbits.LATH3 = 1;
 15451  005616  8680               	bsf	128,3,c	;volatile
 15452  005618                     
 15453                           ;DC_motors.c: 283:             DCmotors_turntime-=5;
 15454  005618  0E05               	movlw	5
 15455  00561A  0101               	movlb	1	; () banked
 15456  00561C  5FD9               	subwf	_DCmotors_turntime& (0+255),f,b	;volatile
 15457  00561E  0E00               	movlw	0
 15458  005620  5BDA               	subwfb	(_DCmotors_turntime+1)& (0+255),f,b	;volatile
 15459  005622                     
 15460                           ; BSR set to: 1
 15461                           ;DC_motors.c: 284:             _delay((unsigned long)((100)*(64000000/4000.0)));
 15462  005622  0E09               	movlw	9
 15463  005624  6E09               	movwf	(??_DCmotors_adjustval+1)^0,c
 15464  005626  0E1E               	movlw	30
 15465  005628  6E08               	movwf	??_DCmotors_adjustval^0,c
 15466  00562A  0EE4               	movlw	228
 15467  00562C                     u12667:
 15468  00562C  2EE8               	decfsz	wreg,f,c
 15469  00562E  D7FE               	bra	u12667
 15470  005630  2E08               	decfsz	??_DCmotors_adjustval^0,f,c
 15471  005632  D7FC               	bra	u12667
 15472  005634  2E09               	decfsz	(??_DCmotors_adjustval+1)^0,f,c
 15473  005636  D7FA               	bra	u12667
 15474  005638  D000               	nop2	
 15475  00563A                     
 15476                           ;DC_motors.c: 285:             LATHbits.LATH3 = 0;
 15477  00563A  9680               	bcf	128,3,c	;volatile
 15478  00563C  EFF6  F02A         	goto	l6237
 15479  005640                     l6249:
 15480                           
 15481                           ;DC_motors.c: 288:     }
 15482  005640  2A0A               	incf	DCmotors_adjustval@i^0,f,c
 15483  005642  0E09               	movlw	9
 15484  005644  640A               	cpfsgt	DCmotors_adjustval@i^0,c
 15485  005646  EF27  F02B         	goto	u7451
 15486  00564A  EF29  F02B         	goto	u7450
 15487  00564E                     u7451:
 15488  00564E  EFDC  F02A         	goto	l716
 15489  005652                     u7450:
 15490  005652  0012               	return		;funcret
 15491  005654                     __end_of_DCmotors_adjustval:
 15492                           	callstack 0
 15493                           
 15494 ;; *************** function _ADC_init *****************
 15495 ;; Defined at:
 15496 ;;		line 8 in file "ADC.c"
 15497 ;; Parameters:    Size  Location     Type
 15498 ;;		None
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;		None
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  1    wreg      void 
 15503 ;; Registers used:
 15504 ;;		wreg, status,2
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15514 ;;Total ram usage:        0 bytes
 15515 ;; Hardware stack levels used: 1
 15516 ;; Hardware stack levels required when called: 7
 15517 ;; This function calls:
 15518 ;;		Nothing
 15519 ;; This function is called by:
 15520 ;;		_main
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           	psect	text79
 15525  006160                     __ptext79:
 15526                           	callstack 0
 15527  006160                     _ADC_init:
 15528                           	callstack 23
 15529  006160                     
 15530                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 15531  006160  8C86               	bsf	134,6,c	;volatile
 15532                           
 15533                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 15534  006162  010E               	movlb	14	; () banked
 15535  006164  8DB4               	bsf	180,6,b	;volatile
 15536                           
 15537                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 15538  006166  010F               	movlb	15	; () banked
 15539  006168  9958               	bcf	88,4,b	;volatile
 15540  00616A                     
 15541                           ; BSR set to: 15
 15542                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 15543  00616A  0EFC               	movlw	-4
 15544  00616C  1758               	andwf	88,f,b	;volatile
 15545                           
 15546                           ;ADC.c: 16:     ADPCH=0b101110;
 15547  00616E  0E2E               	movlw	46
 15548  006170  6F5F               	movwf	95,b	;volatile
 15549  006172                     
 15550                           ; BSR set to: 15
 15551                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 15552  006172  9460               	bcf	96,2,c	;volatile
 15553  006174                     
 15554                           ; BSR set to: 15
 15555                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 15556  006174  8860               	bsf	96,4,c	;volatile
 15557  006176                     
 15558                           ; BSR set to: 15
 15559                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 15560  006176  8E60               	bsf	96,7,c	;volatile
 15561  006178                     
 15562                           ; BSR set to: 15
 15563  006178  0012               	return		;funcret
 15564  00617A                     __end_of_ADC_init:
 15565                           	callstack 0
 15566                           
 15567 ;; *************** function _LowISR *****************
 15568 ;; Defined at:
 15569 ;;		line 79 in file "interrupts.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;		None
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;		None
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		None
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15587 ;;Total ram usage:        1 bytes
 15588 ;; Hardware stack levels used: 1
 15589 ;; Hardware stack levels required when called: 6
 15590 ;; This function calls:
 15591 ;;		Nothing
 15592 ;; This function is called by:
 15593 ;;		Interrupt level 1
 15594 ;; This function uses a non-reentrant model
 15595 ;;
 15596                           
 15597                           	psect	intcodelo
 15598  000018                     __pintcodelo:
 15599                           	callstack 0
 15600  000018                     _LowISR:
 15601                           	callstack 14
 15602                           
 15603                           ; BSR set to: 15
 15604                           ;incstack = 0
 15605  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 15606  00001A  CFE0 F007          	movff	bsr,??_LowISR
 15607  00001E  C007  FFE0         	movff	??_LowISR,bsr
 15608  000022  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 15609  000024  0010               	retfie	
 15610  000026                     __end_of_LowISR:
 15611                           	callstack 0
 15612                           
 15613 ;; *************** function _HighISR *****************
 15614 ;; Defined at:
 15615 ;;		line 64 in file "interrupts.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;		None
 15618 ;; Auto vars:     Size  Location     Type
 15619 ;;		None
 15620 ;; Return value:  Size  Location     Type
 15621 ;;                  1    wreg      void 
 15622 ;; Registers used:
 15623 ;;		wreg, status,2, status,0, cstack
 15624 ;; Tracked objects:
 15625 ;;		On entry : 0/0
 15626 ;;		On exit  : 0/0
 15627 ;;		Unchanged: 0/0
 15628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15633 ;;Total ram usage:        1 bytes
 15634 ;; Hardware stack levels used: 1
 15635 ;; Hardware stack levels required when called: 5
 15636 ;; This function calls:
 15637 ;;		i2_interrupts_clear
 15638 ;; This function is called by:
 15639 ;;		Interrupt level 2
 15640 ;; This function uses a non-reentrant model
 15641 ;;
 15642                           
 15643                           	psect	intcode
 15644  000008                     __pintcode:
 15645                           	callstack 0
 15646  000008                     _HighISR:
 15647                           	callstack 14
 15648                           
 15649                           ;incstack = 0
 15650  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15651  00000A  EF07  F02F         	goto	int_func
 15652                           
 15653                           	psect	intcode_body
 15654  005E0E                     __pintcode_body:
 15655                           	callstack 14
 15656  005E0E                     int_func:
 15657                           	callstack 14
 15658  005E0E                     
 15659                           ;interrupts.c: 65:     if (PIR0bits.INT1IF) {
 15660  005E0E  010E               	movlb	14	; () banked
 15661  005E10  A333               	btfss	51,1,b	;volatile
 15662  005E12  EF0D  F02F         	goto	i2u792_41
 15663  005E16  EF0F  F02F         	goto	i2u792_40
 15664  005E1A                     i2u792_41:
 15665  005E1A  EF27  F02F         	goto	i2l125
 15666  005E1E                     i2u792_40:
 15667  005E1E                     
 15668                           ; BSR set to: 14
 15669                           ;interrupts.c: 66:         colourcard_flag = 1;
 15670  005E1E  0E01               	movlw	1
 15671  005E20  0101               	movlb	1	; () banked
 15672  005E22  6F24               	movwf	_colourcard_flag& (0+255),b	;volatile
 15673  005E24                     
 15674                           ; BSR set to: 1
 15675                           ;interrupts.c: 67:         LATDbits.LATD7 = !LATDbits.LATD7;
 15676  005E24  AE7C               	btfss	124,7,c	;volatile
 15677  005E26  EF17  F02F         	goto	i2u793_41
 15678  005E2A  EF1B  F02F         	goto	i2u793_40
 15679  005E2E                     i2u793_41:
 15680  005E2E  6A06               	clrf	??_HighISR^0,c
 15681  005E30  2A06               	incf	??_HighISR^0,f,c
 15682  005E32  EF1C  F02F         	goto	i2u794_48
 15683  005E36                     i2u793_40:
 15684  005E36  6A06               	clrf	??_HighISR^0,c
 15685  005E38                     i2u794_48:
 15686  005E38  3206               	rrcf	??_HighISR^0,f,c
 15687  005E3A  3206               	rrcf	??_HighISR^0,f,c
 15688  005E3C  507C               	movf	124,w,c	;volatile
 15689  005E3E  1806               	xorwf	??_HighISR^0,w,c
 15690  005E40  0B7F               	andlw	-129
 15691  005E42  1806               	xorwf	??_HighISR^0,w,c
 15692  005E44  6E7C               	movwf	124,c	;volatile
 15693  005E46                     
 15694                           ;interrupts.c: 68:         interrupts_clear();
 15695  005E46  ECBD  F030         	call	i2_interrupts_clear	;wreg free
 15696  005E4A                     
 15697                           ;interrupts.c: 69:         PIR0bits.INT1IF = 0;
 15698  005E4A  010E               	movlb	14	; () banked
 15699  005E4C  9333               	bcf	51,1,b	;volatile
 15700  005E4E                     i2l125:
 15701                           
 15702                           ; BSR set to: 14
 15703  005E4E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15704  005E50  0011               	retfie		f
 15705  005E52                     __end_of_HighISR:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function i2_interrupts_clear *****************
 15709 ;; Defined at:
 15710 ;;		line 36 in file "interrupts.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, status,2, status,0, cstack
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15728 ;;Total ram usage:        0 bytes
 15729 ;; Hardware stack levels used: 1
 15730 ;; Hardware stack levels required when called: 4
 15731 ;; This function calls:
 15732 ;;		i2_I2C_2_Master_Start
 15733 ;;		i2_I2C_2_Master_Stop
 15734 ;;		i2_I2C_2_Master_Write
 15735 ;;		i2_interrupts_colour
 15736 ;; This function is called by:
 15737 ;;		_HighISR
 15738 ;; This function uses a non-reentrant model
 15739 ;;
 15740                           
 15741                           	psect	text82
 15742  00617A                     __ptext82:
 15743                           	callstack 0
 15744  00617A                     i2_interrupts_clear:
 15745                           	callstack 14
 15746  00617A                     
 15747                           ;interrupts.c: 37:     I2C_2_Master_Start();
 15748  00617A  EC1F  F031         	call	i2_I2C_2_Master_Start	;wreg free
 15749                           
 15750                           ;interrupts.c: 38:     I2C_2_Master_Write(0x52 | 0x00);
 15751  00617E  0E52               	movlw	82
 15752  006180  EC00  F031         	call	i2_I2C_2_Master_Write
 15753                           
 15754                           ;interrupts.c: 39:     I2C_2_Master_Write(0b11100110);
 15755  006184  0EE6               	movlw	230
 15756  006186  EC00  F031         	call	i2_I2C_2_Master_Write
 15757                           
 15758                           ;interrupts.c: 40:     I2C_2_Master_Stop();
 15759  00618A  EC1A  F031         	call	i2_I2C_2_Master_Stop	;wreg free
 15760                           
 15761                           ;interrupts.c: 42:     interrupts_colour();
 15762  00618E  EC9B  F02E         	call	i2_interrupts_colour	;wreg free
 15763  006192  0012               	return		;funcret
 15764  006194                     __end_ofi2_interrupts_clear:
 15765                           	callstack 0
 15766                           
 15767 ;; *************** function i2_interrupts_colour *****************
 15768 ;; Defined at:
 15769 ;;		line 48 in file "interrupts.c"
 15770 ;; Parameters:    Size  Location     Type
 15771 ;;		None
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;		None
 15774 ;; Return value:  Size  Location     Type
 15775 ;;                  1    wreg      void 
 15776 ;; Registers used:
 15777 ;;		wreg, status,2, status,0, cstack
 15778 ;; Tracked objects:
 15779 ;;		On entry : 0/0
 15780 ;;		On exit  : 0/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15787 ;;Total ram usage:        1 bytes
 15788 ;; Hardware stack levels used: 1
 15789 ;; Hardware stack levels required when called: 3
 15790 ;; This function calls:
 15791 ;;		i2_colourclick_writetoaddr
 15792 ;; This function is called by:
 15793 ;;		i2_interrupts_clear
 15794 ;; This function uses a non-reentrant model
 15795 ;;
 15796                           
 15797                           	psect	text83
 15798  005D36                     __ptext83:
 15799                           	callstack 0
 15800  005D36                     i2_interrupts_colour:
 15801                           	callstack 14
 15802  005D36                     
 15803                           ;interrupts.c: 49:     colourclick_writetoaddr(0x00, 0b10011);
 15804  005D36  0E13               	movlw	19
 15805  005D38  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15806  005D3A  0E00               	movlw	0
 15807  005D3C  EC93  F030         	call	i2_colourclick_writetoaddr
 15808  005D40                     
 15809                           ;interrupts.c: 50:     _delay((unsigned long)((3)*(64000000/4000.0)));
 15810  005D40  0E3F               	movlw	63
 15811  005D42  6E05               	movwf	??i2_interrupts_colour^0,c
 15812  005D44  0E55               	movlw	85
 15813  005D46                     i2u1267_47:
 15814  005D46  2EE8               	decfsz	wreg,f,c
 15815  005D48  D7FE               	bra	i2u1267_47
 15816  005D4A  2E05               	decfsz	??i2_interrupts_colour^0,f,c
 15817  005D4C  D7FC               	bra	i2u1267_47
 15818  005D4E  F000               	nop	
 15819  005D50                     
 15820                           ;interrupts.c: 51:     colourclick_writetoaddr(0x0C, 0b0100);
 15821  005D50  0E04               	movlw	4
 15822  005D52  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15823  005D54  0E0C               	movlw	12
 15824  005D56  EC93  F030         	call	i2_colourclick_writetoaddr
 15825  005D5A                     
 15826                           ;interrupts.c: 52:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
 15827  005D5A  C052  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
 15828  005D5E  0E04               	movlw	4
 15829  005D60  EC93  F030         	call	i2_colourclick_writetoaddr
 15830  005D64                     
 15831                           ;interrupts.c: 53:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
 15832  005D64  5053               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
 15833  005D66  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15834  005D68  0E05               	movlw	5
 15835  005D6A  EC93  F030         	call	i2_colourclick_writetoaddr
 15836  005D6E                     
 15837                           ;interrupts.c: 54:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
 15838  005D6E  C055  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
 15839  005D72  0E06               	movlw	6
 15840  005D74  EC93  F030         	call	i2_colourclick_writetoaddr
 15841  005D78                     
 15842                           ;interrupts.c: 55:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
 15843  005D78  5056               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
 15844  005D7A  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15845  005D7C  0E07               	movlw	7
 15846  005D7E  EC93  F030         	call	i2_colourclick_writetoaddr
 15847  005D82  0012               	return		;funcret
 15848  005D84                     __end_ofi2_interrupts_colour:
 15849                           	callstack 0
 15850                           
 15851 ;; *************** function i2_colourclick_writetoaddr *****************
 15852 ;; Defined at:
 15853 ;;		line 39 in file "colour_click.c"
 15854 ;; Parameters:    Size  Location     Type
 15855 ;;  address         1    wreg     unsigned char 
 15856 ;;  value           1    2[COMRAM] unsigned char 
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;  address         1    3[COMRAM] unsigned char 
 15859 ;; Return value:  Size  Location     Type
 15860 ;;                  1    wreg      void 
 15861 ;; Registers used:
 15862 ;;		wreg, status,2, status,0, cstack
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/0
 15865 ;;		On exit  : 0/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15868 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15872 ;;Total ram usage:        2 bytes
 15873 ;; Hardware stack levels used: 1
 15874 ;; Hardware stack levels required when called: 2
 15875 ;; This function calls:
 15876 ;;		i2_I2C_2_Master_Start
 15877 ;;		i2_I2C_2_Master_Stop
 15878 ;;		i2_I2C_2_Master_Write
 15879 ;; This function is called by:
 15880 ;;		i2_interrupts_colour
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884                           	psect	text84
 15885  006126                     __ptext84:
 15886                           	callstack 0
 15887  006126                     i2_colourclick_writetoaddr:
 15888                           	callstack 14
 15889                           
 15890                           ;incstack = 0
 15891                           ;i2colourclick_writetoaddr@address stored from wreg
 15892  006126  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
 15893  006128                     
 15894                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
 15895  006128  EC1F  F031         	call	i2_I2C_2_Master_Start	;wreg free
 15896                           
 15897                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
 15898  00612C  0E52               	movlw	82
 15899  00612E  EC00  F031         	call	i2_I2C_2_Master_Write
 15900                           
 15901                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
 15902  006132  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
 15903  006134  0980               	iorlw	128
 15904  006136  EC00  F031         	call	i2_I2C_2_Master_Write
 15905                           
 15906                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
 15907  00613A  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
 15908  00613C  EC00  F031         	call	i2_I2C_2_Master_Write
 15909                           
 15910                           ;colour_click.c: 45:     I2C_2_Master_Stop();
 15911  006140  EC1A  F031         	call	i2_I2C_2_Master_Stop	;wreg free
 15912  006144  0012               	return		;funcret
 15913  006146                     __end_ofi2_colourclick_writetoaddr:
 15914                           	callstack 0
 15915                           
 15916 ;; *************** function i2_I2C_2_Master_Write *****************
 15917 ;; Defined at:
 15918 ;;		line 69 in file "I2C.c"
 15919 ;; Parameters:    Size  Location     Type
 15920 ;;  data_byte       1    wreg     unsigned char 
 15921 ;; Auto vars:     Size  Location     Type
 15922 ;;  data_byte       1    1[COMRAM] unsigned char 
 15923 ;; Return value:  Size  Location     Type
 15924 ;;                  1    wreg      void 
 15925 ;; Registers used:
 15926 ;;		wreg, status,2, status,0, cstack
 15927 ;; Tracked objects:
 15928 ;;		On entry : 0/0
 15929 ;;		On exit  : 0/0
 15930 ;;		Unchanged: 0/0
 15931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15936 ;;Total ram usage:        1 bytes
 15937 ;; Hardware stack levels used: 1
 15938 ;; Hardware stack levels required when called: 1
 15939 ;; This function calls:
 15940 ;;		i2_I2C_2_Master_Idle
 15941 ;; This function is called by:
 15942 ;;		i2_interrupts_clear
 15943 ;;		i2_colourclick_writetoaddr
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           	psect	text85
 15948  006200                     __ptext85:
 15949                           	callstack 0
 15950  006200                     i2_I2C_2_Master_Write:
 15951                           	callstack 14
 15952                           
 15953                           ;incstack = 0
 15954                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 15955  006200  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 15956  006202                     
 15957                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 15958  006202  EC1B  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 15959  006206                     
 15960                           ;I2C.c: 72:   SSP2BUF = data_byte;
 15961  006206  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 15962  00620A  0012               	return		;funcret
 15963  00620C                     __end_ofi2_I2C_2_Master_Write:
 15964                           	callstack 0
 15965                           
 15966 ;; *************** function i2_I2C_2_Master_Stop *****************
 15967 ;; Defined at:
 15968 ;;		line 59 in file "I2C.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;		None
 15971 ;; Auto vars:     Size  Location     Type
 15972 ;;		None
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  1    wreg      void 
 15975 ;; Registers used:
 15976 ;;		wreg, status,2, status,0, cstack
 15977 ;; Tracked objects:
 15978 ;;		On entry : 0/0
 15979 ;;		On exit  : 0/0
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15986 ;;Total ram usage:        0 bytes
 15987 ;; Hardware stack levels used: 1
 15988 ;; Hardware stack levels required when called: 1
 15989 ;; This function calls:
 15990 ;;		i2_I2C_2_Master_Idle
 15991 ;; This function is called by:
 15992 ;;		i2_interrupts_clear
 15993 ;;		i2_colourclick_writetoaddr
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           	psect	text86
 15998  006234                     __ptext86:
 15999                           	callstack 0
 16000  006234                     i2_I2C_2_Master_Stop:
 16001                           	callstack 14
 16002  006234                     
 16003                           ;I2C.c: 61:   I2C_2_Master_Idle();
 16004  006234  EC1B  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 16005  006238                     
 16006                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 16007  006238  010E               	movlb	14	; () banked
 16008  00623A  85DA               	bsf	218,2,b	;volatile
 16009  00623C                     
 16010                           ; BSR set to: 14
 16011  00623C  0012               	return		;funcret
 16012  00623E                     __end_ofi2_I2C_2_Master_Stop:
 16013                           	callstack 0
 16014                           
 16015 ;; *************** function i2_I2C_2_Master_Start *****************
 16016 ;; Defined at:
 16017 ;;		line 39 in file "I2C.c"
 16018 ;; Parameters:    Size  Location     Type
 16019 ;;		None
 16020 ;; Auto vars:     Size  Location     Type
 16021 ;;		None
 16022 ;; Return value:  Size  Location     Type
 16023 ;;                  1    wreg      void 
 16024 ;; Registers used:
 16025 ;;		wreg, status,2, status,0, cstack
 16026 ;; Tracked objects:
 16027 ;;		On entry : 0/0
 16028 ;;		On exit  : 0/0
 16029 ;;		Unchanged: 0/0
 16030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16035 ;;Total ram usage:        0 bytes
 16036 ;; Hardware stack levels used: 1
 16037 ;; Hardware stack levels required when called: 1
 16038 ;; This function calls:
 16039 ;;		i2_I2C_2_Master_Idle
 16040 ;; This function is called by:
 16041 ;;		i2_interrupts_clear
 16042 ;;		i2_colourclick_writetoaddr
 16043 ;; This function uses a non-reentrant model
 16044 ;;
 16045                           
 16046                           	psect	text87
 16047  00623E                     __ptext87:
 16048                           	callstack 0
 16049  00623E                     i2_I2C_2_Master_Start:
 16050                           	callstack 14
 16051  00623E                     
 16052                           ;I2C.c: 41:   I2C_2_Master_Idle();
 16053  00623E  EC1B  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 16054  006242                     
 16055                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 16056  006242  010E               	movlb	14	; () banked
 16057  006244  81DA               	bsf	218,0,b	;volatile
 16058  006246                     
 16059                           ; BSR set to: 14
 16060  006246  0012               	return		;funcret
 16061  006248                     __end_ofi2_I2C_2_Master_Start:
 16062                           	callstack 0
 16063                           
 16064 ;; *************** function i2_I2C_2_Master_Idle *****************
 16065 ;; Defined at:
 16066 ;;		line 30 in file "I2C.c"
 16067 ;; Parameters:    Size  Location     Type
 16068 ;;		None
 16069 ;; Auto vars:     Size  Location     Type
 16070 ;;		None
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  1    wreg      void 
 16073 ;; Registers used:
 16074 ;;		wreg, status,2, status,0
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 0/0
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16084 ;;Total ram usage:        1 bytes
 16085 ;; Hardware stack levels used: 1
 16086 ;; This function calls:
 16087 ;;		Nothing
 16088 ;; This function is called by:
 16089 ;;		i2_I2C_2_Master_Start
 16090 ;;		i2_I2C_2_Master_Stop
 16091 ;;		i2_I2C_2_Master_Write
 16092 ;; This function uses a non-reentrant model
 16093 ;;
 16094                           
 16095                           	psect	text88
 16096  006036                     __ptext88:
 16097                           	callstack 0
 16098  006036                     i2_I2C_2_Master_Idle:
 16099                           	callstack 14
 16100  006036                     i2l457:
 16101  006036  010E               	movlb	14	; () banked
 16102  006038  B5D8               	btfsc	216,2,b	;volatile
 16103  00603A  EF21  F030         	goto	i2u695_41
 16104  00603E  EF23  F030         	goto	i2u695_40
 16105  006042                     i2u695_41:
 16106  006042  EF1B  F030         	goto	i2l457
 16107  006046                     i2u695_40:
 16108  006046                     
 16109                           ; BSR set to: 14
 16110  006046  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 16111  00604A  0E1F               	movlw	31
 16112  00604C  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 16113  00604E  A4D8               	btfss	status,2,c
 16114  006050  EF2C  F030         	goto	i2u696_41
 16115  006054  EF2E  F030         	goto	i2u696_40
 16116  006058                     i2u696_41:
 16117  006058  EF1B  F030         	goto	i2l457
 16118  00605C                     i2u696_40:
 16119  00605C                     
 16120                           ; BSR set to: 14
 16121  00605C  0012               	return		;funcret
 16122  00605E                     __end_ofi2_I2C_2_Master_Idle:
 16123                           	callstack 0
 16124                           
 16125                           	psect	rparam
 16126  0000                     
 16127                           	psect	temp
 16128  000057                     btemp:
 16129                           	callstack 0
 16130  000057                     	ds	1
 16131  0000                     int$flags	set	btemp
 16132  0000                     wtemp8	set	btemp+1
 16133  0000                     ttemp5	set	btemp+1
 16134  0000                     ttemp6	set	btemp+4
 16135  0000                     ttemp7	set	btemp+8
 16136                           
 16137                           	psect	idloc
 16138                           
 16139                           ;Config register IDLOC0 @ 0x200000
 16140                           ;	unspecified, using default values
 16141  200000                     	org	2097152
 16142  200000  0FFF               	dw	4095
 16143                           
 16144                           ;Config register IDLOC1 @ 0x200002
 16145                           ;	unspecified, using default values
 16146  200002                     	org	2097154
 16147  200002  0FFF               	dw	4095
 16148                           
 16149                           ;Config register IDLOC2 @ 0x200004
 16150                           ;	unspecified, using default values
 16151  200004                     	org	2097156
 16152  200004  0FFF               	dw	4095
 16153                           
 16154                           ;Config register IDLOC3 @ 0x200006
 16155                           ;	unspecified, using default values
 16156  200006                     	org	2097158
 16157  200006  0FFF               	dw	4095
 16158                           
 16159                           ;Config register IDLOC4 @ 0x200008
 16160                           ;	unspecified, using default values
 16161  200008                     	org	2097160
 16162  200008  0FFF               	dw	4095
 16163                           
 16164                           ;Config register IDLOC5 @ 0x20000A
 16165                           ;	unspecified, using default values
 16166  20000A                     	org	2097162
 16167  20000A  0FFF               	dw	4095
 16168                           
 16169                           ;Config register IDLOC6 @ 0x20000C
 16170                           ;	unspecified, using default values
 16171  20000C                     	org	2097164
 16172  20000C  0FFF               	dw	4095
 16173                           
 16174                           ;Config register IDLOC7 @ 0x20000E
 16175                           ;	unspecified, using default values
 16176  20000E                     	org	2097166
 16177  20000E  0FFF               	dw	4095
 16178                           
 16179                           	psect	config
 16180                           
 16181                           ;Config register CONFIG1L @ 0x300000
 16182                           ;	External Oscillator mode Selection bits
 16183                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 16184                           ;	Power-up default value for COSC bits
 16185                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 16186  300000                     	org	3145728
 16187  300000  AA                 	db	170
 16188                           
 16189                           ;Config register CONFIG1H @ 0x300001
 16190                           ;	unspecified, using default values
 16191                           ;	Clock Out Enable bit
 16192                           ;	CLKOUTEN = 0x1, unprogrammed default
 16193                           ;	Clock Switch Enable bit
 16194                           ;	CSWEN = 0x1, unprogrammed default
 16195                           ;	Fail-Safe Clock Monitor Enable bit
 16196                           ;	FCMEN = 0x1, unprogrammed default
 16197  300001                     	org	3145729
 16198  300001  FF                 	db	255
 16199                           
 16200                           ;Config register CONFIG2L @ 0x300002
 16201                           ;	unspecified, using default values
 16202                           ;	Master Clear Enable bit
 16203                           ;	MCLRE = 0x1, unprogrammed default
 16204                           ;	Power-up Timer Enable bit
 16205                           ;	PWRTE = 0x1, unprogrammed default
 16206                           ;	Low-power BOR enable bit
 16207                           ;	LPBOREN = 0x1, unprogrammed default
 16208                           ;	Brown-out Reset Enable bits
 16209                           ;	BOREN = 0x3, unprogrammed default
 16210  300002                     	org	3145730
 16211  300002  FF                 	db	255
 16212                           
 16213                           ;Config register CONFIG2H @ 0x300003
 16214                           ;	unspecified, using default values
 16215                           ;	Brown Out Reset Voltage selection bits
 16216                           ;	BORV = 0x3, unprogrammed default
 16217                           ;	ZCD Disable bit
 16218                           ;	ZCD = 0x1, unprogrammed default
 16219                           ;	PPSLOCK bit One-Way Set Enable bit
 16220                           ;	PPS1WAY = 0x1, unprogrammed default
 16221                           ;	Stack Full/Underflow Reset Enable bit
 16222                           ;	STVREN = 0x1, unprogrammed default
 16223                           ;	Debugger Enable bit
 16224                           ;	DEBUG = 0x1, unprogrammed default
 16225                           ;	Extended Instruction Set Enable bit
 16226                           ;	XINST = 0x1, unprogrammed default
 16227  300003                     	org	3145731
 16228  300003  FF                 	db	255
 16229                           
 16230                           ;Config register CONFIG3L @ 0x300004
 16231                           ;	WDT Period Select bits
 16232                           ;	WDTCPS = 0x1F, unprogrammed default
 16233                           ;	WDT operating mode
 16234                           ;	WDTE = OFF, WDT Disabled
 16235  300004                     	org	3145732
 16236  300004  9F                 	db	159
 16237                           
 16238                           ;Config register CONFIG3H @ 0x300005
 16239                           ;	unspecified, using default values
 16240                           ;	WDT Window Select bits
 16241                           ;	WDTCWS = 0x7, unprogrammed default
 16242                           ;	WDT input clock selector
 16243                           ;	WDTCCS = 0x7, unprogrammed default
 16244  300005                     	org	3145733
 16245  300005  FF                 	db	255
 16246                           
 16247                           ;Config register CONFIG4L @ 0x300006
 16248                           ;	unspecified, using default values
 16249                           ;	Write Protection Block 0
 16250                           ;	WRT0 = 0x1, unprogrammed default
 16251                           ;	Write Protection Block 1
 16252                           ;	WRT1 = 0x1, unprogrammed default
 16253                           ;	Write Protection Block 2
 16254                           ;	WRT2 = 0x1, unprogrammed default
 16255                           ;	Write Protection Block 3
 16256                           ;	WRT3 = 0x1, unprogrammed default
 16257                           ;	Write Protection Block 3
 16258                           ;	WRT4 = 0x1, unprogrammed default
 16259                           ;	Write Protection Block 3
 16260                           ;	WRT5 = 0x1, unprogrammed default
 16261                           ;	Write Protection Block 3
 16262                           ;	WRT6 = 0x1, unprogrammed default
 16263                           ;	Write Protection Block 3
 16264                           ;	WRT7 = 0x1, unprogrammed default
 16265  300006                     	org	3145734
 16266  300006  FF                 	db	255
 16267                           
 16268                           ;Config register CONFIG4H @ 0x300007
 16269                           ;	unspecified, using default values
 16270                           ;	Configuration Register Write Protection bit
 16271                           ;	WRTC = 0x1, unprogrammed default
 16272                           ;	Boot Block Write Protection bit
 16273                           ;	WRTB = 0x1, unprogrammed default
 16274                           ;	Data EEPROM Write Protection bit
 16275                           ;	WRTD = 0x1, unprogrammed default
 16276                           ;	Scanner Enable bit
 16277                           ;	SCANE = 0x1, unprogrammed default
 16278                           ;	Low Voltage Programming Enable bit
 16279                           ;	LVP = 0x1, unprogrammed default
 16280  300007                     	org	3145735
 16281  300007  FF                 	db	255
 16282                           
 16283                           ;Config register CONFIG5L @ 0x300008
 16284                           ;	unspecified, using default values
 16285                           ;	UserNVM Program Memory Code Protection bit
 16286                           ;	CP = 0x1, unprogrammed default
 16287                           ;	DataNVM Memory Code Protection bit
 16288                           ;	CPD = 0x1, unprogrammed default
 16289  300008                     	org	3145736
 16290  300008  FF                 	db	255
 16291                           
 16292                           ;Config register CONFIG5H @ 0x300009
 16293                           ;	unspecified, using default values
 16294  300009                     	org	3145737
 16295  300009  FF                 	db	255
 16296                           
 16297                           ;Config register CONFIG6L @ 0x30000A
 16298                           ;	unspecified, using default values
 16299                           ;	Table Read Protection Block 0
 16300                           ;	EBTR0 = 0x1, unprogrammed default
 16301                           ;	Table Read Protection Block 1
 16302                           ;	EBTR1 = 0x1, unprogrammed default
 16303                           ;	Table Read Protection Block 2
 16304                           ;	EBTR2 = 0x1, unprogrammed default
 16305                           ;	Table Read Protection Block 3
 16306                           ;	EBTR3 = 0x1, unprogrammed default
 16307                           ;	Table Read Protection Block 4
 16308                           ;	EBTR4 = 0x1, unprogrammed default
 16309                           ;	Table Read Protection Block 5
 16310                           ;	EBTR5 = 0x1, unprogrammed default
 16311                           ;	Table Read Protection Block 6
 16312                           ;	EBTR6 = 0x1, unprogrammed default
 16313                           ;	Table Read Protection Block 7
 16314                           ;	EBTR7 = 0x1, unprogrammed default
 16315  30000A                     	org	3145738
 16316  30000A  FF                 	db	255
 16317                           
 16318                           ;Config register CONFIG6H @ 0x30000B
 16319                           ;	unspecified, using default values
 16320                           ;	Boot Block Table Read Protection bit
 16321                           ;	EBTRB = 0x1, unprogrammed default
 16322  30000B                     	org	3145739
 16323  30000B  FF                 	db	255
 16324                           tosu	equ	0xFFF
 16325                           tosh	equ	0xFFE
 16326                           tosl	equ	0xFFD
 16327                           stkptr	equ	0xFFC
 16328                           pclatu	equ	0xFFB
 16329                           pclath	equ	0xFFA
 16330                           pcl	equ	0xFF9
 16331                           tblptru	equ	0xFF8
 16332                           tblptrh	equ	0xFF7
 16333                           tblptrl	equ	0xFF6
 16334                           tablat	equ	0xFF5
 16335                           prodh	equ	0xFF4
 16336                           prodl	equ	0xFF3
 16337                           indf0	equ	0xFEF
 16338                           postinc0	equ	0xFEE
 16339                           postdec0	equ	0xFED
 16340                           preinc0	equ	0xFEC
 16341                           plusw0	equ	0xFEB
 16342                           fsr0h	equ	0xFEA
 16343                           fsr0l	equ	0xFE9
 16344                           wreg	equ	0xFE8
 16345                           indf1	equ	0xFE7
 16346                           postinc1	equ	0xFE6
 16347                           postdec1	equ	0xFE5
 16348                           preinc1	equ	0xFE4
 16349                           plusw1	equ	0xFE3
 16350                           fsr1h	equ	0xFE2
 16351                           fsr1l	equ	0xFE1
 16352                           bsr	equ	0xFE0
 16353                           indf2	equ	0xFDF
 16354                           postinc2	equ	0xFDE
 16355                           postdec2	equ	0xFDD
 16356                           preinc2	equ	0xFDC
 16357                           plusw2	equ	0xFDB
 16358                           fsr2h	equ	0xFDA
 16359                           fsr2l	equ	0xFD9
 16360                           status	equ	0xFD8

Data Sizes:
    Strings     181
    Constant    0
    Data        7
    BSS         189
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      86
    BANK0           160    143     150
    BANK1           256     93     219
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), 
		 -> STR_8(CODE[6]), STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), 
		 -> STR_8(CODE[6]), STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[5]), 
		 -> STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), STR_6(CODE[5]), 
		 -> STR_4(CODE[4]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[5]), 
		 -> STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), STR_6(CODE[5]), 
		 -> STR_4(CODE[4]), STR_2(CODE[7]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), 
		 -> STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), 
		 -> STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S3104_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    DCmotors_calibration@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    DCmotors_calibration@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(BANK1[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    colourclick_testing@current	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(BANK1[8]), 

    colourclick_testing@initial	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(BANK1[8]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK1[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(BANK1[8]), colourclick_calibration@initial(BANK1[8]), colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK1[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK1[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK1[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_DCmotors_calibration
    _interrupts_clear->_interrupts_colour
    _interrupts_colour->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___xxtofl
    _checkbatterylevel->_ADC_getval
    _turnright->_left
    _turnleft->_left
    _right->_DCmotors_setPWM
    _left->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colour
    i2_interrupts_colour->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourclick_calibration
    _colourclick_calibration->_colourclick_testing
    _colourclick_testing->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_colourclick_calibration
    _colourclick_calibration->_colourclick_testing

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0  223092
                                            141 BANK0      2     2      0
                                             67 BANK1     26    26      0
                           _ADC_init
               _DCmotors_calibration
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
                            _forward
                    _interrupts_init
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     934
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     934
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _interrupts_colour
 ---------------------------------------------------------------------------------
 (3) _interrupts_colour                                    1     1      0     903
                                             11 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     996
                                             11 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     903
                                              9 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      93
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             19    19      0   63826
                                            139 BANK0      2     2      0
                                             50 BANK1     17    17      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
                _colourclick_testing
 ---------------------------------------------------------------------------------
 (2) _colourclick_testing                                 56    52      4   61706
                                            133 BANK0      6     2      4
                                              0 BANK1     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    10     26   60845
                                             99 BANK0     34     8     26
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   58709
                                             77 COMRAM     2     2      0
                                             93 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   58161
                                             61 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                              7 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2732
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   39680
                                             70 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             13 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                              7 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             46 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     517
                                              7 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             62 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                              7 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    7663
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    5397
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    2077
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             25 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              7 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              7 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1905
                                             14 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              7 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     276
                                              8 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      31
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6   90242
                                             75 COMRAM     2     2      0
                                              6 BANK0     18    12      6
                             ___flge
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    3826
                                             32 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              5     1      4    4006
                                             32 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2499
                                             20 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC                                 2     0      2    1500
                                             18 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (3) _colourclick_readR                                    7     5      2     164
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readG                                    7     5      2     164
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readC                                    7     5      2     164
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readB                                    7     5      2     164
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      31
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                              8 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      93
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    5688
                                             46 COMRAM    12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3263
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                              8 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              7 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_calibration                                 6     2      4   61962
                                             75 COMRAM     4     0      4
                                              6 BANK0      2     2      0
                 _DCmotors_adjustval
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6   27557
                                              0 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6   26747
                                              0 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                               12     6      6    3990
                                             32 COMRAM    12     6      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                13     7      6   20681
                                             62 COMRAM    13     7      6
                    _DCmotors_setPWM
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     930
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3773
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    8366
                                             46 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             46 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    7184
                                             32 COMRAM     4     0      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    3038
                                             21 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     802
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     865
                                             13 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _DCmotors_adjustval                                   3     3      0      46
                                              7 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _LowISR                                              1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             1     1      0     244
                                              5 COMRAM     1     1      0
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (13) i2_interrupts_clear                                  0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_interrupts_colour
 ---------------------------------------------------------------------------------
 (14) i2_interrupts_colour                                 1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (15) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (17) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_calibration
     _DCmotors_adjustval
     _stop
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___xxtofl
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___flge
     _colourcards_normaliseRGBC
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _reverse
       _DCmotors_setPWM
     _stop
     _turnleft
     _turnright
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
     _colourclick_testing
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isdigit
             _isupper
             _stoa
               _fputc
               _strlen
             _strncmp
             _tolower
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colour
         _colourclick_writetoaddr

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colour
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      3C      10       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5D      DB       7       85.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      56       1       91.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     203       8        0.0%
DATA                 0      0     203       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 13 04:23:55 2021

      colourcards_normaliseRGBC@rel 0031         colourclick_readRGBC2@tmpval 0015  
                      ___fldiv@aexp 002E                        ___fldiv@bexp 002D  
                      ___fldiv@sign 0026                                  l65 4CB8  
                                l69 4CD4               __end_of_DCmotors_init 5C48  
                      ___awdiv@sign 0013                                  bsr 000FE0  
               ___wmul@multiplicand 000A                                 l113 60C4  
                               l116 615E                                 l119 5D34  
                               l216 224E                                 l322 60E4  
                               l331 5BF6                                 l219 22B8  
                               l412 61FE                                 l260 458C  
                               l325 5B06                                 l421 61E6  
                               l334 5BA6                                 l350 4AEE  
                               l415 6232                                 l319 5F0A  
                               l328 5B56                                 l352 4C10  
                               l337 596A                                 l345 4846  
                               l353 4B40                                 l418 61D8  
                               l514 6124                                 l362 5208  
                               l427 60A4                                 l523 6196  
                               l355 4B4E                                 l380 61AE  
                               l460 6034                                 l532 5FE2  
                               l348 4AE0                                 l622 5C46  
                               l382 61BC                                 l526 61AA  
                               l454 600C                                 l703 48EE  
                               l383 61C2                                 l463 621E  
                               l359 4C18                                 l632 6102  
                               l472 61F2                                 l377 6178  
                               l721 5652                                 l713 4994  
                               l457 600E                                 l634 6104  
                               l466 6228                                 l642 576E  
                               l650 56E0                                 l707 490A  
                               l475 5E92                                 l716 55B8  
                               l708 4958                                 l629 3BF0  
                               l469 6214                                 l901 4416  
                               l718 5608                                 l680 4ADE  
                               l657 57DE                                 l658 57E0  
                               l690 5C96                                 l914 46F0  
                               l668 3F4E                                 l669 3F50  
                               l677 4AB6                                 l685 5CE6  
                               l693 4848                                 l697 4864  
                               l698 48B2                                 l787 6082  
                               _abs 5E94                                 _pad 5398  
                      ___awmod@sign 000D                                 wreg 000FE8  
              ?_colourclick_testing 00E5                        ___flmul@aexp 0023  
                      ___flmul@bexp 0028                        ___flmul@sign 0022  
                      ___flmul@temp 002D               ?_colourclick_readRGBC 0013  
                      ___flmul@prod 0029                 __size_of_ADC_getval 0018  
                      ___fltol@exp1 0011                                l1031 5508  
                              l1018 5396                                ?_abs 001A  
                              l1052 4F0E                                l1061 5F7A  
                              l1046 55B2                                l1057 4F54  
                              l1401 2E2C                                l1410 309A  
                              l1315 2A96                                l1411 3088  
                              l1332 2BB0                                l1324 2D66  
                              l1316 2A84                                l1084 4E50  
                              l1341 2C80                                l1317 2A4A  
                              l1405 3190                                l1342 2C6E  
                              l1511 541E                                l1408 3022  
                              l1513 5458                                l1521 35D4  
                              l1418 3152                                l1442 3C48  
                              l1371 338A                                l1603 16E4  
                              l1380 33D0                                l1508 53DC  
                              l1700 5052                                l1445 3DA4  
                              l1357 5DC8                                l1382 3448  
                              l1374 334E                                l1383 3436  
                              l1519 35CC                                l1456 3D3C  
                              l1449 3CE0                                l1369 352A  
                              l1705 5ECA                                l1801 590C  
                              l1641 417E                                l1465 5A14  
                              l1650 423E                                l1539 380A  
                              l1651 4286                                l1811 5134  
                              l1708 5ED2                                l1821 58A6  
                              l1557 1B10                                l1807 5AB6  
                              l1575 12A4                                l1655 428E  
                              l1639 4176                                l1736 40EC  
                              l1745 3A1C                                l1826 58AE  
                              l1682 2766                                l1674 28A6  
                              l1690 584E                                l1755 5FB2  
                              l1763 5A66                                l1739 40F4  
                              l1748 3960                                l1784 52D2  
                              l1792 5E0C                                l7001 2C90  
                              l1769 5F42                                l1689 5846  
                              l7011 2CF6                                l7003 2C9C  
                              l6211 61AC                                l1795 6250  
                              l7021 2D3E                                l7013 2D06  
                              l7005 2CAA                                l6221 61C4  
                              l6301 5C1A                                l6213 61C0  
                              l7101 43F6                                ?_pad 0018  
                              l6231 55C8                                l6223 55B4  
                              l7023 2D40                                l7015 2D26  
                              l7007 2CE4                                l6311 5C2C  
                              l6303 5C1C                                l7111 45C0  
                              l6241 5618                                l6233 55D2  
                              l7025 2D46                                l7017 2D2A  
                              l7009 2CE6                                l6217 61F4  
                              l6313 5C2E                                l6305 5C1E  
                              l6321 6106                                l7201 32E2  
                              l7121 4618                                l7113 45C4  
                              l7105 458E                                l7033 5DCA  
                              l7041 5A68                                l8001 195A  
                              l6251 5642                                l6243 5622  
                              l6235 55EA                                l7027 2D54  
                              l7019 2D38                                l6219 622A  
                              l6315 5C3A                                l6307 5C20  
                              l6331 6120                                l6323 6110  
                              l7211 332A                                l7203 32F2  
                              l7131 469A                                l7123 462C  
                              l7115 45D2                                l7107 4592  
                              l7035 5DD6                                l7043 5A74  
                              l7051 5F0C                                l8011 199A  
                              l8003 196C                                l6245 563A  
                              l6237 55EC                                l6229 55C6  
                              l7029 2D56                                l7301 2DE4  
                              l6317 5C3E                                l6309 5C22  
                              l6333 6122                                l6325 6112  
                              l7221 3378                                l7213 333E  
                              l7205 3302                                l7141 3192  
                              l7061 4290                                l7125 463A  
                              l7133 46A0                                l7117 45F2  
                              l7109 45A0                                l7037 5DE8  
                              l7045 5A78                                l8021 19E2  
                              l8013 19A2                                l8005 1974  
                              l8101 4250                                l6181 5FEE  
                              l6271 6172                                l6239 5616  
                              l7055 605E                                l7311 2E1C  
                              l7303 2DE6                                l6319 5C42  
                              l6327 6114                                l6335 60E6  
                              l7231 33C0                                l7223 3388  
                              l7215 334C                                l7207 3312  
                              l7151 31CE                                l7143 319E  
                              l8111 3F6A                                l7071 42D4  
                              l7063 4294                                l7135 46B0  
                              l7127 4668                                l7119 4610  
                              l7039 5DEC                                l7047 5AAA  
                              l8031 1A38                                l8023 19FE  
                              l8015 19AA                                l8007 1984  
                              l8103 4264                                l6183 5FF4  
                              l6273 6174                                l6249 5640  
                              l7057 607A                                l7401 3176  
                              l7321 2E6C                                l7313 2E3C  
                              l7305 2DF6                                l6329 611E  
                              l6337 60EC                                l7241 3400  
                              l7233 33CE                                l7225 339A  
                              l7217 3358                                l7209 331A  
                              l7161 31FE                                l7153 31DE  
                              l7145 31AC                                l8113 3F6E  
                              l7081 432A                                l7073 42F4  
                              l7065 42A2                                l7137 46D0  
                              l7129 4688                                l8041 1A74  
                              l8033 1A3E                                l8025 1A06  
                              l8017 19B6                                l8009 198C  
                              l8105 4268                                l8201 22E2  
                              l6185 5FF6                                l6275 6176  
                              l6267 6160                                l7403 317C  
                              l7331 2EBC                                l7323 2E76  
                              l7315 2E4C                                l7307 2E06  
                              l6291 5C0E                                l6339 60FC  
                              l7251 3472                                l7243 342E  
                              l7227 33B0                                l7235 33E0  
                              l7219 3376                                l7171 3234  
                              l7163 3204                                l7155 31E0  
                              l7147 31AE                                l8131 4030  
                              l8123 3FD2                                l8115 3F8E  
                              l8107 3F52                                l7091 43AC  
                              l7083 433E                                l7075 42F8  
                              l7067 42C2                                l7411 5D94  
                              l8051 1AC6                                l8043 1A7A  
                              l8035 1A50                                l8019 19BC  
                              l8027 1A0C                                l8211 2338  
                              l8203 22F0                                l6187 5FF8  
                              l6179 5FE4                                l6269 616A  
                              l7421 52EE                                l7405 3180  
                              l7341 2EFE                                l7333 2EC8  
                              l7325 2E8C                                l7309 2E16  
                              l5901 3CC8                                l6293 5C12  
                              l7261 34EA                                l7253 349C  
                              l7237 33EE                                l7229 33B6  
                              l7181 3274                                l7173 3244  
                              l7165 3212                                l7149 31BE  
                              l7157 31E8                                l8141 40BE  
                              l8125 3FE8                                l8117 3FC8  
                              l8109 3F66                                l7093 43AE  
                              l7085 434C                                l7077 4304  
                              l7069 42C6                                l7501 5576  
                              l8053 1AD2                                l8045 1A80  
                              l8037 1A5C                                l8029 1A1E  
                              l8301 2894                                l8221 23D6  
                              l8213 2346                                l8205 2302  
                              l6189 5FFA                                l7431 5314  
                              l7423 52F2                                l7415 52D4  
                              l7511 4E52                                l7351 2F60  
                              l7343 2F0E                                l7335 2ED6  
                              l7327 2E98                                l7319 2E60  
                              l5911 3D2C                                l5903 3CCA  
                              l6295 5C14                                l7271 3520  
                              l7263 3506                                l7247 3458  
                              l7255 34A0                                l7239 33F2  
                              l7183 3284                                l7191 32A4  
                              l7175 3246                                l7167 3214  
                              l7159 31F8                                l8311 5AFE  
                              l8143 40D0                                l8135 406A  
                              l8127 3FF0                                l8119 3FCC  
                              l7095 43C0                                l7087 435E  
                              l7079 4322                                l7503 5586  
                              l8055 1ADA                                l8039 1A64  
                              l8071 4122                                l8151 507E  
                              l8231 246A                                l8215 236E  
                              l8207 2308                                l7441 534A  
                              l7433 5326                                l7425 5300  
                              l7417 52D8                                l7521 4EDC  
                              l7513 4E80                                l7361 3008  
                              l7353 2F7C                                l7345 2F28  
                              l7337 2EE2                                l7329 2EB0  
                              l7281 2D74                                l5921 3D84  
                              l5913 3D4A                                l5905 3CD6  
                              l8401 3E20                                l6297 5C16  
                              l6289 5BFA                                l7265 350A  
                              l7257 34BA                                l7249 3464  
                              l7193 32B4                                l7185 328C  
                              l7169 3224                                l7177 324E  
                              l8321 5BA8                                l8129 3FF8  
                              l7089 438C                                l7097 43C6  
                              l7601 542C                                l7505 55AA  
                              l7409 5D84                                l8057 1AEA  
                              l8049 1AB4                                l8073 412A  
                              l8065 40F6                                l8161 50D0  
                              l8241 2536                                l8233 24A0  
                              l8225 2422                                l8217 23A8  
                              l8209 2330                                l7443 5360  
                              l7435 532E                                l7451 5376  
                              l7427 5308                                l7419 52E6  
                              l7523 4EEE                                l7515 4E90  
                              l7371 3044                                l7363 3012  
                              l7355 2FA6                                l7347 2F38  
                              l7339 2EF2                                l7291 2DB4  
                              l7283 2D82                                l5923 3D92  
                              l5915 3D4C                                l5907 3D12  
                              l8411 3E8E                                l8403 3E34  
                              l6299 5C18                                l7267 3518  
                              l7259 34D0                                l7195 32B4  
                              l7187 3290                                l7179 325E  
                              l8171 621A                                l8323 5BEE  
                              l8315 5B08                                l8139 40AC  
                              l7099 43D6                                l7603 5440  
                              l7507 55B0                                l7611 4F56  
                              l8059 1AF0                                l8091 41E2  
                              l8083 41A0                                l8075 413E  
                              l8067 4108                                l8163 50E2  
                              l8155 508A                                l8251 25E2  
                              l8243 257E                                l8235 24B0  
                              l8219 23C8                                l8227 2434  
                              l8307 60C8                                l7453 5386  
                              l7445 5368                                l7437 5336  
                              l7429 530C                                l8341 3A9C  
                              l6901 29D8                                l7525 4EFC  
                              l7517 4EBE                                l7381 30B6  
                              l7373 3052                                l7365 3020  
                              l7357 2FDC                                l7349 2F54  
                              l7293 2DBA                                l7285 2D84  
                              l5925 3D94                                l5917 3D50  
                              l5909 3D1E                                l8421 3ED2  
                              l8413 3E9A                                l8405 3E52  
                              l7269 351E                                l8181 6220  
                              l8173 61EA                                l8317 5B4E  
                              l8309 5AB8                                l8501 4710  
                              l8333 6196                                l6821 522E  
                              l7701 3594                                l7461 545E  
                              l7533 5F44                                l7541 4D4C  
                              l7613 4F76                                l8093 4218  
                              l8085 41B4                                l8077 4146  
                              l8069 4110                                l8165 510E  
                              l8157 5098                                l8149 5054  
                              l8261 267A                                l8253 25F0  
                              l8237 24E6                                l8229 245A  
                              l7455 538E                                l7447 536A  
                              l7439 5344                                l8343 3AE2  
                              l6911 29EC                                l6903 29DC  
                              l6831 28A8                                l7527 4F4C  
                              l7519 4ECE                                l7391 3120  
                              l7383 30C4                                l7375 3080  
                              l7367 3032                                l7359 2FEA  
                              l7295 2DCA                                l7287 2D94  
                              l7279 2D68                                l5919 3D74  
                              l8423 3EEA                                l8415 3EA6  
                              l8407 3E6A                                l8431 4996  
                              l7199 32C8                                l8191 5E68  
                              l8183 6224                                l8175 61EE  
                              l8327 5B58                                l8511 475E  
                              l8503 4720                                l8335 61A6  
                              l9039 401A                                l7607 5E94  
                              l6823 5238                                l7711 35EE  
                              l7703 35A4                                l7471 548E  
                              l7463 546C                                l7535 5F5A  
                              l7551 4DA2                                l7543 4D62  
                              l7615 4FB4                                l7623 4FF4  
                              l8095 421C                                l8087 41B8  
                              l8079 4154                                l8159 50B0  
                              l8255 2620                                l8247 25B6  
                              l8239 250E                                l8351 57E2  
                              l7449 5370                                l8345 3B02  
                              l8337 3A1E                                l6921 2A64  
                              l6913 2A16                                l6905 29E0  
                              l6841 28E4                                l6833 28B4  
                              l7529 4F52                                l7393 313A  
                              l7385 30EE                                l7369 3040  
                              l7297 2DD0                                l7289 2DA4  
                              l8425 3EF6                                l8417 3EB2  
                              l8409 3E76                                l8441 4A16  
                              l8433 49BC                                l8193 5E8E  
                              l8185 5E54                                l8169 6216  
                              l8177 620C                                l8329 5B9E  
                              l8521 47A8                                l8513 4760  
                              l8505 4722                                l7609 5EAE  
                              l6825 5256                                l6817 520A  
                              l7721 361A                                l7713 35FC  
                              l7705 35A6                                l7481 54D4  
                              l7473 54A0                                l7465 5474  
                              l7537 5F6A                                l7553 4DB2  
                              l7625 5006                                l7617 4FDC  
                              l7633 58B0                                l7641 5886  
                              l7801 101E                                l8097 4220  
                              l8089 41D6                                l8265 26F0  
                              l8249 25C8                                l8353 57EA  
                              l8601 5198                                l8361 5CE8  
                              l8347 3B1E                                l8339 3A3A  
                              l6931 2AA4                                l6923 2A68  
                              l6915 2A32                                l6907 29E4  
                              l6851 2914                                l6843 28F4  
                              l6835 28C2                                l7395 3156  
                              l7379 30AA                                l7387 30F2  
                              l7299 2DD6                                l5891 3C6E  
                              l5883 3BF4                                l8427 3F06  
                              l8419 3EBA                                l8451 4A5E  
                              l8443 4A22                                l8435 49CC  
                              l8195 5E90                                l8187 5E58  
                              l8179 6210                                l8531 47E4  
                              l8523 47B4                                l8507 473A  
                              l8515 477C                                l6827 528C  
                              l6819 521C                                l7731 3726  
                              l7723 369C                                l7715 3602  
                              l7707 35C0                                l7491 5500  
                              l7483 54DC                                l7475 54A8  
                              l7467 5478                                l7459 545A  
                              l7563 4DDC                                l7555 4DB6  
                              l7547 4D76                                l7619 4FE8  
                              l7651 3882                                l7635 58C0  
                              l7643 5898                                l7811 10A2  
                              l8283 27F8                                l8267 2702  
                              l8275 277A                                l8259 264C  
                              l8355 57F8                                l8603 51E4  
                              l8611 5EE2                                l8371 5D20  
                              l8363 5CF2                                l8349 3B88  
                              l6941 2AE6                                l6933 2AB4  
                              l6925 2A76                                l6917 2A42  
                              l6909 29E8                                l6861 293E  
                              l6853 2926                                l6845 28F6  
                              l6837 28C4                                l7397 3166  
                              l7389 310C                                l5885 3C04  
                              l8429 3F0A                                l8461 4AB2  
                              l8445 4A3A                                l8437 49E0  
                              l8453 4A66                                l8189 5E60  
                              l8533 47E6                                l8525 47CC  
                              l8517 478E                                l8509 4746  
                              l7741 3798                                l7733 3744  
                              l7725 36A2                                l7717 360A  
                              l7709 35DC                                l7485 54E2  
                              l7477 54B0                                l7469 5486  
                              l7581 4E40                                l7573 4E04  
                              l7565 4DE6                                l7557 4DC4  
                              l7549 4DA0                                l7629 504A  
                              l7661 3950                                l7653 3896  
                              l7637 5850                                l7901 14AA  
                              l7813 10B4                                l7805 1046  
                              l8285 2820                                l8293 2850  
                              l8277 27A2                                l8269 2736  
                              l8357 5826                                l8381 59DE  
                              l8605 51F0                                l8621 4AF0  
                              l8613 5EF2                                l8373 5D2A  
                              l8365 5D02                                l8701 60AC  
                              l6951 2B14                                l6943 2AF4  
                              l6927 2A78                                l6919 2A58  
                              l6863 294E                                l6871 2978  
                              l6855 2928                                l6839 28D4  
                              l6847 28FE                                l7399 3174  
                              l5895 3C82                                l5887 3C12  
                              l8463 4ACC                                l8455 4A7E  
                              l8447 4A46                                l8439 49FE  
                              l8551 5C7A                                l8359 6086  
                              l8375 590E                                l8535 47FE  
                              l8519 4790                                l8543 4828  
                              l8471 571E                                l8391 5FB8  
                              l7591 53C8                                l7751 37D2  
                              l7743 37A6                                l7735 375E  
                              l7727 36A8                                l7719 3614  
                              l7479 54BE                                l7487 54E8  
                              l7495 550A                                l7575 4E10  
                              l7567 4DF0                                l7671 3A0C  
                              l7655 38A4                                l7663 3984  
                              l7647 380C                                l7911 1568  
                              l7903 14DE                                l7831 1170  
                              l7815 10D0                                l7807 106C  
                              l7823 10EC                                l8295 285E  
                              l8287 282E                                l8279 27D8  
                              l8199 22BA                                l8383 59E6  
                              l8631 4B38                                l8623 4AF6  
                              l8615 5EFC                                l8607 5ED4  
                              l8367 5D0C                                l8711 60BE  
                              l8703 60B2                                l8561 57A6  
                              l8553 5770                                l6961 2B80  
                              l6953 2B1E                                l6945 2B00  
                              l6937 2AC8                                l6929 2A82  
                              l6881 29B0                                l6873 2988  
                              l6865 295E                                l6857 292E  
                              l6849 290E                                l5897 3C8A  
                              l5889 3C58                                l8465 4ADC  
                              l8457 4A96                                l8449 4A52  
                              l8545 482E                                l8537 480A  
                              l8529 47D2                                l8473 572A  
                              l8801 20EE                                l8721 1B36  
                              l8393 5FC6                                l7681 5A1A  
                              l7593 53D4                                l7585 5398  
                              l7745 37AC                                l7753 37E2  
                              l7737 3778                                l7729 370C  
                              l7489 54F8                                l7497 5538  
                              l7577 4E20                                l7665 39C0  
                              l7649 382C                                l7921 1604  
                              l7913 157E                                l7905 14E4  
                              l7833 1176                                l7841 123E  
                              l7825 1106                                l7761 0ED2  
                              l8289 2842                                l8385 5A02  
                              l8377 59C4                                l8641 4B5C  
                              l8633 4B3A                                l8625 4AF8  
                              l8617 5F06                                l8609 5ED8  
                              l8369 5D16                                l8481 6146  
                              l8713 60C0                                l8705 60B6  
                              l8555 5776                                l8563 57AE  
                              l6963 2B90                                l6947 2B04  
                              l6939 2AD8                                l6955 2B24  
                              l6891 29C4                                l6883 29B4  
                              l6875 299A                                l6867 296E  
                              l6859 293C                                l5899 3C96  
                              l8459 4AA2                                l8571 5CCA  
                              l8547 5C48                                l8491 4464  
                              l8483 4418                                l7691 600E  
                              l8539 4822                                l8475 5736  
                              l8467 56E2                                l8803 2120  
                              l8811 2192                                l8731 1C22  
                              l8723 1B68                                l8395 5FCA  
                              l7675 5F7C                                l7683 5A2E  
                              l7595 53E8                                l7587 53A6  
                              l7747 37BE                                l7739 3786  
                              l7499 5548                                l7579 4E30  
                              l7667 39D4                                l7659 3914  
                              l7923 165A                                l7931 16AC  
                              l7915 15B0                                l7907 1502  
                              l7851 127E                                l7843 124E  
                              l7835 11D0                                l7771 0F1E  
                              l7763 0EE0                                l8299 286C  
                              l8379 59D6                                l8651 4BC2  
                              l8643 4B74                                l8627 4B12  
                              l8619 4AE0                                l8715 60C2  
                              l8707 60B8                                l8565 57C6  
                              l8557 578E                                l6981 2C12  
                              l6973 2BEA                                l6957 2B4A  
                              l6965 2BA0                                l6949 2B12  
                              l6893 29C8                                l6885 29B8  
                              l6877 29A8                                l6869 2970  
                              l8397 3DA6                                l8549 5C5A  
                              l8493 44C4                                l8485 4428  
                              l7693 601E                                l8469 5706  
                              l8477 573E                                l8581 56A8  
                              l8573 5654                                l8821 2210  
                              l8813 21AA                                l8805 2152  
                              l8741 1CC6                                l8733 1C54  
                              l8725 1B9A                                l8717 1B12  
                              l8389 5FB4                                l7685 5A5C  
                              l7597 53FC                                l7589 53BA  
                              l7749 37CA                                l7669 39FC  
                              l7941 1764                                l7933 16BC  
                              l7925 1660                                l7917 15C0  
                              l7909 1536                                l7861 12C2  
                              l7853 1298                                l7845 1252  
                              l7837 1204                                l7829 113C  
                              l7781 0F64                                l7773 0F30  
                              l7765 0EE8                                l7757 0EB8  
                              l8661 4C00                                l8653 4BCA  
                              l8645 4B8A                                l8629 4B1E  
                              l8709 60BC                                l8559 579A  
                              l6983 2C1A                                l6975 2BF4  
                              l6967 2BC6                                l6959 2B7E  
                              l6991 2C3E                                l6895 29CC  
                              l6887 29BC                                l6879 29AC  
                              l8399 3E10                                l8567 5C98  
                              l8671 4884                                l8495 4528  
                              l8487 443C                                l8479 5756  
                              l8575 5678                                l8583 56B0  
                              l8831 2280                                l8823 2232  
                              l8815 21BE                                l8807 2184  
                              l8751 1DB2                                l8743 1CF8  
                              l8735 1C5E                                l8727 1BCC  
                              l8719 1B16                                l7687 5A60  
                              l7679 5A16                                l7599 5400  
                              l7695 352C                                l7943 1772  
                              l7951 17AE                                l7935 16D0  
                              l7927 1694                                l7919 15D0  
                              l7863 12D4                                l7871 1332  
                              l7847 1264                                l7855 12B0  
                              l7839 120C                                l7783 0F68  
                              l7775 0F3E                                l7767 0F0C  
                              l7759 0EC2                                l8591 5136  
                              l8663 4C12                                l8655 4BE0  
                              l8647 4B96                                l8639 4B50  
                              l6993 2C42                                l6985 2C1E  
                              l6977 2C02                                l6969 2BD6  
                              l6897 29D0                                l6889 29C0  
                              l8569 5CAA                                l8681 48EC  
                              l8673 489E                                l8665 4848  
                              l8489 4450                                l8497 46F2  
                              l8585 56C8                                l8577 5690  
                              l8825 2242                                l8817 21E0  
                              l8809 218A                                l8745 1D2A  
                              l8729 1BF0                                l7697 354C  
                              l7961 17EA                                l7953 17C2  
                              l7945 1786                                l7937 16DC  
                              l7929 16A8                                l7881 1370  
                              l7873 133A                                l7865 12F0  
                              l7849 1276                                l7793 0FCE  
                              l7785 0F6C                                l7777 0F50  
                              l7769 0F16                                l8593 514C  
                              l8657 4BFA                                l8649 4BAC  
                              l8841 4C1A                                l6995 2C50  
                              l6987 2C2E                                l6979 2C04  
                              l6899 29D4                                l8691 4966  
                              l8683 48FC                                l8675 48C0  
                              l8667 4856                                l8499 46F8  
                              l8579 569C                                l8827 2246  
                              l8835 229C                                l8819 21EC  
                              l8771 1F1C                                l8763 1E82  
                              l8755 1DE8                                l8747 1D4E  
                              l8739 1C94                                l7699 3574  
                              l7963 17F6                                l7955 17D0  
                              l7971 1816                                l7947 1798  
                              l7939 1700                                l7883 1382  
                              l7891 13C2                                l7875 134C  
                              l7867 1326                                l7795 0FE0  
                              l7779 0F5C                                l7787 0F72  
                              l8595 515C                                l8659 4BFC  
                              l8587 61DA                                l8851 4C76  
                              l8843 4C4A                                l6997 2C66  
                              l6989 2C30                                l8693 4974  
                              l8685 490C                                l8677 48CE  
                              l8669 4866                                l8829 2250  
                              l8773 1F4E                                l8757 1E1A  
                              l8749 1D80                                l7981 189C  
                              l7973 1828                                l7965 1806  
                              l7957 17E0                                l7949 17A6  
                              l7893 13CA                                l7885 1390  
                              l7877 135E                                l7869 132E  
                              l7797 0FFC                                l7789 0F98  
                              l8597 5170                                l8589 61E0  
                              l8861 4C98                                l8853 4C82  
                              l8845 4C52                                l8695 498E  
                              l8687 492A                                l8679 48E8  
                              l8791 2082                                l8775 1F76  
                              l8783 1FC4                                l8759 1E4C  
                              l8767 1EB8                                l8839 22B4  
                              l7991 1916                                l7983 18D0  
                              l7975 183A                                l7967 180A  
                              l7959 17E4                                l7895 13DA  
                              l7887 13A8                                l7879 136C  
                              l7799 1014                                l8599 5184  
                              l8871 4CD6                                l8863 4C9C  
                              l8855 4C8A                                l8847 4C5E  
                              l8697 4992                                l8689 4944  
                              l8793 209A                                l8785 1FF6  
                              l8777 1F8E                                l8769 1EEA  
                              l7993 1928                                l7985 18D8  
                              l7977 183E                                l7969 1810  
                              l7897 13EE                                l7889 13BA  
                              l8881 4D20                                l8873 4CDC  
                              l8865 4CA0                                l8857 4C8E  
                              l8849 4C6E                                l8787 2028  
                              l8779 1FAC                                l7995 1936  
                              l7979 1844                                l7987 18DC  
                              l7899 1452                                l8699 60A6  
                              l8883 4D3E                                l8875 4CF6  
                              l8867 4CA4                                l8859 4C92  
                              l8789 205A                                l7997 1946  
                              l7989 18FA                                l8877 4CFA  
                              l8869 4CC6                                l8799 20BC  
                              l7999 194A                                l8879 4D0E  
                              STR_1 0E01                                STR_2 0E80  
                              STR_4 0EAF                                STR_8 0E94  
                      _BAUD4CONbits 000EE9                                _LATE 000F7D  
                              _LATG 000F7F                                _T2PR 000FBC  
                              u7100 3D84                                u7020 3C04  
                              u7101 3D80                                u7021 3C00  
                              u7110 3D92                                u7030 3C12  
                              u7111 3D8E                                u7031 3C0E  
                              u7040 3C6E                                u7041 3C6A  
                              u7050 3CC4                                u7051 3CC0  
                              u7060 3D0E                                u7061 3D0A  
                              u7070 3D2C                                u7071 3D28  
                              u7080 3D3C                                u9000 46B0  
                              u7081 3D38                                u9001 46AC  
                              u7090 3D4A                                u9010 31AC  
                              u7091 3D46                                u9011 31A8  
                              u7420 61BC                                u9100 334C  
                              u9020 31BE                                u7421 61B8  
                              u9101 3348                                u9021 31BA  
                              u7430 55C6                                u9110 3376  
                              u9030 31CE                                u7431 55C2  
                              u9111 3372                                u9031 31CA  
                              u7440 5616                                u9200 3472  
                              u9120 339A                                u9040 3212  
                              u8400 521C                                u7441 5612  
                              u9201 346E                                u9121 3396  
                              u9041 320E                                u8401 5218  
                              u7450 5652                                u9210 34BA  
                              u9130 33B0                                u9050 3224  
                              u8410 522E                                u7451 564E  
                              u9211 34B6                                u9131 33AC  
                              u9051 3220                                u8411 522A  
                              u8500 295E                                u9300 2E3C  
                              u7460 60FC                                u9220 34EA  
                              u9140 33CE                                u9060 3234  
                              u8420 5256                                u8501 295A  
                              u9301 2E38                                u7461 60F8  
                              u9221 34E6                                u9141 33CA  
                              u9061 3230                                u8421 5252  
                              u8510 299A                                u9310 2E4C  
                              u9230 3518                                u9150 33EE  
                              u9070 3274                                u8430 528C  
                              u8511 2996                                u9311 2E48  
                              u9231 3514                                u9151 33EA  
                              u9071 3270                                u8431 5288  
                              u8600 2AB4                                u8520 29A8  
                              u8440 28C2                                u9400 310C  
                              u9320 2FC6                                u9240 2D82  
                              u9160 3400                                u9080 32B4  
                              u8601 2AB0                                u8521 29A4  
                              u8441 28BE                                u9401 3108  
                              u9241 2D7E                                u9161 33FC  
                              u9081 32B0                                u8610 2AE6  
                              u8530 2A16                                u8450 28D4  
                              u9410 313A                                u9330 3020  
                              u9250 2D94                                u9170 342E  
                              u9090 332A                                u8611 2AE2  
                              u8531 2A12                                u8451 28D0  
                              u9411 3136                                u9331 301C  
                              u9251 2D90                                u9171 342A  
                              u9091 3326                                u8700 2C2E  
                              u8620 2AF4                                u8540 2A2E  
                              u8460 28E4                                u9420 3174  
                              u9340 3040                                u9260 2DA4  
                              u9180 3444                                u9500 5486  
                              u8701 2C2A                                u8621 2AF0  
                              u8541 2A28                                u8461 28E0  
                              u9421 3170                                u9341 303C  
                              u9325 2FBC                                u9261 2DA0  
                              u9181 3440                                u9501 5482  
                              u9430 52E6                                u8710 2C3E  
                              u8630 2B12                                u8550 2A30  
                              u8470 2926                                u9350 3052  
                              u9270 2DE4                                u9190 3458  
                              u9510 54A0                                u9431 52E2  
                              u8711 2C3A                                u8631 2B0E  
                              u8471 2922                                u9351 304E  
                              u9271 2DE0                                u9191 3454  
                              u9511 549C                                u9440 5300  
                              u8800 2D26                                u8720 2C50  
                              u8640 2B4A                                u8560 2A58  
                              u8480 293C                                u9600 4EDC  
                              u9360 3080                                u9280 2DF6  
                              u9520 54BE                                u9441 52FC  
                              u8801 2D22                                u8721 2C4C  
                              u8641 2B46                                u8561 2A54  
                              u8481 2938                                u9601 4ED8  
                              u9361 307C                                u9281 2DF2  
                              u9521 54BA                                u9450 5326  
                              u8810 2D38                                u8730 2C66  
                              u8650 2B90                                u8570 2A76  
                              u8490 294E                                u9610 4EFC  
                              u9370 3096                                u9290 2E06  
                              u9530 54D4                                u9451 5322  
                              u8811 2D34                                u8731 2C62  
                              u8651 2B8C                                u8571 2A72  
                              u8491 294A                                u9611 4EF8  
                              u9371 3092                                u9291 2E02  
                              u9531 54D0                                u9460 5344  
                              u8820 2D54                                u8740 2C7C  
                              u8660 2BC6                                u8580 2A96  
                              u9620 4F4C                                u9380 30AA  
                              u9540 54F8                                u9700 4E30  
                              u9461 5340                                u8821 2D50  
                              u8741 2C78                                u8661 2BC2  
                              u8581 2A92                                u9621 4F48  
                              u9381 30A6                                u8901 42FE  
                              u9541 54F4                                u9701 4E2C  
                              u9470 5360                                u8750 2C90  
                              u8670 2BD6                                u8590 2AA4  
                              u9390 30C4                                u8910 4322  
                              u8830 5E0C                                u9710 53A6  
                              u9550 5538                                u9630 5F5A  
                              u9471 535C                                u8751 2C8C  
                              u8671 2BD2                                u8591 2AA0  
                              u9391 30C0                                u8911 431E  
                              u8831 5E08                                u9711 53A2  
                              u9551 5534                                u9631 5F56  
                              u9480 5386                                u8760 2CAA  
                              u8680 2C02                                u8920 434C  
                              u8840 5A9A                                u9720 53C8  
                              u9560 5576                                u9640 4D62  
                              u9481 5382                                u8761 2CA6  
                              u8681 2BFE                                u8921 4348  
                              u9721 53C4                                u9561 5572  
                              u9641 4D5E                                u8770 2CE4  
                              u8690 2C12                                u8930 438C  
                              u8850 5AAA                                u9730 541E  
                              u9490 546C                                u9570 55AA  
                              u9650 4D96                                u9810 5040  
                              u8771 2CE0                                u8691 2C0E  
                              u8931 4388                                u8851 5AA6  
                              u9731 541A                                u9491 5468  
                              u9571 55A6                                u9811 503A  
                              u8780 2CF6                                u9580 4E80  
                              u8940 43D6                                u9740 542C  
                              u9660 4DC4                                u9820 5042  
                              u9900 38A4                                u8860 5F3C  
                              u8781 2CF2                                u9581 4E7C  
                              u8941 43D2                                u9741 5428  
                              u9661 4DC0                                u9805 5018  
                              u9901 38A0                                u8861 5F36  
                              u8790 2D06                                u9590 4EBE  
                              u8950 45A0                                u9750 5EAE  
                              u9670 4DD8                                u9830 58FA  
                              u8870 5F3E                                u8791 2D02  
                              u9591 4EBA                                u8951 459C  
                              u9751 5EAA                                u8847 5A90  
                              u9671 4DD4                                u9655 4D8C  
                              u8880 42A2                                u8960 45D2  
                              u9680 4E00                                u9760 4F96  
                              u9920 3910                                u9840 590C  
                              u8881 429E                                u8961 45CE  
                              u9681 4DFC                                u9921 390C  
                              u9841 5908                                u8890 42D4  
                              u8970 4610                                u9690 4E20  
                              u9770 4FB4                                u9930 3934  
                              u9850 5880                                u8891 42D0  
                              u8971 460C                                u9691 4E1C  
                              u9771 4FB0                                u9915 38B8  
                              u9851 587A                                u8980 463A  
                              u9780 4FDC                                u9940 3950  
                              u9916 38C2                                u9860 5882  
                              u8981 4636                                u9781 4FD8  
                              u9765 4F8C                                u9941 394C  
                              u9917 38D2                                u9837 58F0  
                              u8990 4668                                u9790 5006  
                              u9950 39A4                                u9870 5898  
                              u8991 4664                                u9791 5002  
                              u9935 392A                                u9871 5894  
                              u9960 39C0                                u9880 3854  
                              u9961 39BC                                u9970 39FC  
                              u9890 3882                                u9971 39F8  
                              u9955 399A                                u9891 387E  
                              u9980 5FAC                                u9981 5FA6  
                              u9885 384A                                u9990 5FAE  
                       main@current 01B8             __end_of_interrupts_init 60C6  
           __end_of_DCmotors_setPWM 3BF2                                abs@a 001A  
                              _dbuf 0125                                _atoi 3F52  
                              _main 4C1A                                _dtoa 352C  
                              _left 3DA6                                _prec 00EF  
                              _nout 011C                                pad@i 001F  
                              pad@p 001C                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 0021                                fsr2l 000FD9  
                              _stoa 40F6                                btemp 0057  
                              _stop 5770                       ___fpclassifyf 4F56  
                              prodh 000FF4                                prodl 000FF3  
                              start 0026                    __end_of_ADC_init 617A  
                   ___fldiv@new_exp 0027                     __end_of_HighISR 5E52  
                      _tolower$3416 0014                        ___param_bank 000000  
            ?_colourclick_readRGBC2 0015                               ??_abs 001C  
                             ??_pad 001E              ??_clicker2buttons_init 0008  
                     ___fltol@sign1 0010                     __end_of___aodiv 4418  
                             ?_atoi 000F                     __end_of___fladd 2D68  
                             ?_main 0001                               ?_dtoa 0023  
                             ?_left 003F                     __end_of___aomod 46F2  
                             _ADPCH 000F5F                     __end_of___fldiv 352C  
                   __end_of___awdiv 5398                     __end_of___flneg 5F7C  
                             STR_10 0E6D                               STR_20 0E9F  
                             STR_12 0E87                               STR_21 0EA7  
                             STR_30 0EB3                               STR_14 0E9A  
                             STR_24 0EA3                               STR_16 0E8E  
                             STR_25 0EAB                               STR_18 0E78  
                             STR_19 0E41                               STR_28 0EB3  
                   __end_of___awmod 550A                     __end_of___flmul 3192  
                   __end_of___flsub 5DCA                     __end_of___fltol 4E52  
                             ?_stoa 0011                               u10000 5A2E  
                             u10001 5A2A                               u10010 5A5C  
                             u10011 5A58                               u10020 601E  
                             u10100 35FC                               u10021 601A  
                             u10101 35F8                               u10030 6034  
                             u10110 3726                               ?_stop 0021  
                             u10031 6030                               u10111 3722  
                             u10120 3744                               u10040 355C  
                             u10200 0F30                               u11000 241C  
                             u10121 3740                               u10041 3556  
                             u10201 0F2C                               u11001 2416  
                             u10130 375E                               u10050 355E  
                             u10210 0F3E                               u11010 241E  
                             u10131 375A                               u10211 0F3A  
                             u10140 3778                               u10060 3574  
                             u10300 10B4                               u10220 0F50  
                             u11100 26EC                               u11020 2434  
                             u10141 3774                               u10061 3570  
                             u10301 10B0                               u10221 0F4C  
                             u11021 2430                               u10150 3786  
                             u10070 35A4                               u10310 1138  
                             u10230 0F98                               u11110 2702  
                             u11030 246A                               u10151 3782  
                             u10071 35A0                               u10311 1134  
                             u10231 0F94                               u11111 26FE  
                             u11031 2466                               u10160 3798  
                             u10080 35C0                               u10400 1326  
                             u10320 11CC                               u10240 0FC8  
                             u11120 27A2                               u11040 24B0  
                             u10161 3794                               u10081 35BC  
                             u10401 1322                               u10321 11C8  
                             u10241 0FC2                               u11121 279E  
                             u11041 24AC                               u10170 37A6  
                             u10090 35EE                               u10410 134C  
                             u10330 123E                               u10250 0FCA  
                             u11130 2820                               u11050 250E  
                             u10171 37A2                               u10091 35EA  
                             u10411 1348                               u10331 123A  
                             u11131 281C                               u11051 250A  
                             u11300 3F4E                               u11140 61A6  
                             u10180 37BE                               u10500 15C0  
                             u10420 135E                               u10340 1264  
                             u10260 0FE0                               u11060 2536  
                             u11301 3F4A                               u11205 608E  
                             u11141 61A2                               u10181 37BA  
                             u10501 15BC                               u10421 135A  
                             u10341 1260                               u10261 0FDC  
                             u11061 2532                               u11150 3A3A  
                             u11310 49F2                               u11206 6090  
                             u11230 5FE2                               u10510 165A  
                             u10430 136C                               u10350 1276  
                             u10270 106C                               u10190 0EE0  
                             u11070 25C8                               u11151 3A36  
                             u11311 49EA                               u11215 6098  
                             u11231 5FDE                               u10511 1656  
                             u10431 1368                               u10351 1272  
                             u10271 1068                               u10191 0EDC  
                             u11071 25C4                               u11160 3B1E  
                             u11240 3E46                               u11216 609A  
                             u11400 4720                               u10600 1828  
                             u10520 16A8                               u10440 1382  
                             u10360 1298                               u10280 109C  
                             u11080 267A                               u11161 3B1A  
                             u11241 3E3E                               u11225 60A2  
                             u11401 471C                               u10601 1824  
                             u10521 16A4                               u10441 137E  
                             u10361 1294                               u10281 1096  
                             u11081 2676                               u11330 4A16  
                             u11226 60A4                               u11410 478E  
                             u10610 18FA                               u10530 16D0  
                             u10450 1390                               u10370 12BE  
                             u10290 109E                               u11090 26EA  
                             u11331 4A12                               u11411 478A  
                             u10611 18F6                               u10531 16CC  
                             u10451 138C                               u10371 12BA  
                             u11091 26E4                               u11260 3E6A  
                             u11340 4A3A                               u11420 47E4  
                             u10700 1AAE                               u10620 1916  
                             u10540 1772                               u10460 13BA  
                             u10380 12D4                               u11500 4B4E  
                   ___awdiv@divisor 0010                               u11261 3E66  
                             u11341 4A36                               u11421 47E0  
                             u10701 1AA8                               u10621 1912  
                             u10541 176E                               u10461 13B6  
                             u10381 12D0                               u11501 4B4A  
                             u11174 3B78                               u11270 3E8E  
                             u11350 4A7E                               u11430 5C5A  
                             u10710 1AB0                               u10630 1928  
                             u10550 1786                               u10470 1502  
                             u10390 12F0                               u11190 5846  
                             u11510 4B74                               u11175 3B74  
                             u11271 3E8A                               u11351 4A7A  
                             u11431 5C56                               u10631 1924  
                             u10551 1782                               u10471 14FE  
                             u10391 12EC                               u11191 5842  
                             u11511 4B70                               u11184 3BE2  
                             u11440 57C6                               u11280 3ED2  
                             u11360 4A96                               u11328 49F4  
                             u11600 48FC                               u10720 1AC6  
                             u10640 1936                               u10560 1798  
                             u10480 1568                               u10800 423E  
                             u11520 4B8A                               u11185 3BDE  
                             u11441 57C2                               u11281 3ECE  
                             u11361 4A92                               u11601 48F8  
                             u10721 1AC2                               u10641 1932  
                             u10561 1794                               u10481 1564  
                             u10801 423A                               u11521 4B86  
                             u11450 57DE                               u11290 3EEA  
                             u11258 3E48                               u11370 4ACC  
                             u11610 490A                               u10650 196C  
                             u10570 17A6                               u10490 15B0  
                             u10810 424C                               u11530 4BAC  
                             u11451 57DA                               u11291 3EE6  
                             u11371 4AC8                               u11611 4906  
                             u10651 1968                               u10571 17A2  
                             u10491 15AC                               u10811 4248  
                             u10731 4100                               u11531 4BA8  
                             u11460 5CAA                               u11620 4966  
                             u11380 5756                               u11700 1D2A  
                             u10660 199A                               u10580 17C2  
                             u10820 4286                               u10740 4122  
                             u10900 507E                               u11540 4BC2  
                             u11461 5CA6                               u11621 4962  
                             u11381 5752                               u11701 1D26  
                             u10661 1996                               u10581 17BE  
                             u10821 4282                               u10741 411E  
                             u10901 507A                               u11541 4BBE  
                             u11630 4974                               u11390 576E  
                             u11470 56C8                               u11710 1D80  
                             u10830 3F8E                               u10670 1A1E  
                             u10590 17D0                               u10750 4154  
                             u10910 50B0                               u11550 4C10  
                             u11631 4970                               u11391 576A  
                             u11471 56C4                               u12407 208C  
                             u11711 1D7C                               u10831 3F8A  
                             u10671 1A1A                               u10591 17CC  
                             u10751 4150                               u10911 50AC  
                             u11551 4C0C                               u12327 4CE8  
                             u11560 4856                               u11480 56E0  
                             u11800 205A                               u11720 1DB2  
                             u11640 1B68                               u10840 3FC8  
                             u10680 1A38                               u10760 4172  
                             u10920 50D0                               u11561 4852  
                             u11481 56DC                               u12417 219C  
                             u11801 2056                               u11721 1DAE  
                             u11641 1B64                               u10841 3FC4  
                             u10681 1A34                               u10761 416E  
                             u10921 50CC                               u12337 5CF8  
                             u11570 4864                               u11810 20EE  
                             u11730 1E1A                               u11650 1B9A  
                             u10850 3FE4                               u10690 1A50  
                             u10770 419C                               u10930 50E2  
                             u11490 4AEE                               u11571 4860  
                             u12507 47BE                               u12427 21C4  
                             u11811 20EA                               u11731 1E16  
                             u11651 1B96                               u10851 3FE0  
                             u10691 1A4C                               u10771 4198  
                             u10931 50DE                               u11491 4AEA  
                             u12347 5EE8                               u11580 48C0  
                             u11820 2120                               u11740 1E4C  
                             u11660 1BCC                               u10860 40A6  
                             u10780 41D6                               u10940 510E  
                             u11900 4CD4                               u11581 48BC  
                             u12517 47F0                               u12437 56AA  
                             u11821 211C                               u11741 1E48  
                             u11661 1BC8                               u10861 40A0  
                             u10781 41D2                               u10941 510A  
                             u12357 4B04                               u11901 4CD0  
                             u11590 48CE                               u10950 5E7C  
                             u11830 2152                               u11750 1EEA  
                             u11670 1C22                               u10870 40A8  
                             u10790 4204                               u11910 4D20  
                             u12607 4AD2                               u11591 48CA  
                             u10951 5E74                               u12527 4814  
                             u12447 5738                               u11831 214E  
                             u11751 1EE6                               u11671 1C1E  
                             u12367 4B2A                               u11911 4D1C  
                             u11840 2210                               u11760 1F1C  
                             u11680 1CC6                               u10880 40BE  
                             u12617 3EB4                               u12537 4838  
                             u12457 4702                               u11841 220C  
                             u11761 1F18                               u11681 1CC2  
                             u10881 40BA                               u12377 4BEC  
                             u11850 2232                               u11770 1F4E  
                             u11690 1CF8                               u10890 40D0  
                             u10970 22E2                               u12627 3EFC  
                             u12547 4890                               u12467 472C  
                             u11851 222E                               u11771 1F4A  
                             u11691 1CF4                               u10891 40CC  
                             u10971 22DE                               u12387 51FC  
                             u11860 2242                               u11780 1FF6  
                             u10980 2330                               u12637 57A8  
                             u12557 48DA                               u12477 4750  
                             u11861 223E                               u11781 1FF2  
                             u12397 1F80                               u10797 41FA  
                             u10981 232C                               u11870 2294  
                             u11790 2028                               u10990 236E  
                             u12647 55DC                               u12567 4936  
                             u12487 476A                               u11871 228E  
                             u11791 2024                               u10991 236A  
                             u10968 5E7E                               u11880 2296  
                             u12657 55F6                               u12577 4980  
                             u12497 479A                               u11890 4CC6  
                             u12667 562C                               u12587 4A60  
                             u11891 4CC2                               u12597 4AA8  
                             i1l130 001E                               i2l116 6192  
                             i2l125 5E4E                               i2l119 5D82  
                             i2l322 6144                               i2l460 605C  
                             i2l463 6246                               i2l472 620A  
                             i2l457 6036          ?i2_colourclick_writetoaddr 0003  
           _colourclick_writetoaddr 60C6                               i2l469 623C  
                   ___awdiv@counter 0012                        vfpfcnvrt@fmt 009F  
             ??_colourclick_testing 00E9            __end_of_interrupts_clear 6160  
           __end_of_sendCharSerial4 61AC          __end_of_I2C_2_Master_Start 6220  
        __end_of_I2C_2_Master_Write 61F4       __size_of_DCmotors_calibration 014E  
          ?_colourclick_calibration 0001                               _flags 0050  
                             _fputc 520A          __end_of_DCmotors_adjustval 5654  
                   __end_of_forward 5770                               _fputs 5DCA  
                   __end_of_isdigit 5FB4                colourclickLEDs_C@tog 0008  
                             _right 4996                               atoi@n 001C  
                             pad@fp 0018                               atoi@s 000F  
                             _width 011E                               _putch 6250  
                             dtoa@d 0025                               dtoa@i 0045  
                 _clicker2LEDs_init 622A                               dtoa@n 003D  
                             dtoa@p 0037                               dtoa@s 003B  
                             dtoa@w 0039                               left@i 004A  
                   __end_of_isspace 5A68                     __end_of_isupper 5F44  
                             tablat 000FF5                     __end_of_reverse 56E2  
                             plusw1 000FE3                               plusw2 000FDB  
            DCmotors_init@PWMperiod 0008                               stoa@i 001D  
                             stoa@l 0025                  ?_clicker2LEDs_init 0001  
                             stoa@p 0023                               stoa@s 0013  
                             stoa@w 001F                               ttemp5 0058  
                             ttemp6 005B                               ttemp7 005F  
                             status 000FD8                               wtemp8 0058  
                   __end_of_sprintf 5A16                      ?___fpclassifyf 0008  
                   __end_of_tolower 58B0                     __end_of_strncmp 5136  
             _I2C_2_Master_RepStart 6220                     __initialization 596C  
               ??_clicker2LEDs_init 0008                        __end_of_atoi 40F6  
                      __end_of_main 4D4C                        __end_of_dtoa 380C  
                      __end_of_left 3F52                        __end_of_stoa 4290  
                      __end_of_stop 57E2  __size_of_colourcards_normaliseRGBC 0176  
     __size_of_colourcards_readRGBC 07A8                              ??_atoi 0011  
                            ??_main 00ED                              ??_dtoa 002D  
                            ??_left 0045                              ??_stoa 0015  
                            ??_stop 0025                       __activetblptr 000003  
      __size_ofi2_I2C_2_Master_Idle 0028   __end_ofi2_colourclick_writetoaddr 6146  
            ??_colourclick_readRGBC 0015        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 6234                     _colourcard_flag 0124  
                            ?_fputc 0008                              ?_fputs 0011  
                            _ADRESH 000F64           __size_of_colourclick_init 0038  
                            ?_right 0021                    ___awdiv@dividend 000E  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              i2l6057 6128  
                            i2l6261 5D64                              i2l6253 5D36  
                            i2l6263 5D6E                              i2l6255 5D40  
                            i2l6265 5D78                              i2l6257 5D50  
                            i2l6259 5D5A                              i2l6621 5E4A  
                            i2l6613 5E0E                              i2l6615 5E1E  
                            i2l6617 5E24                              i2l5835 6036  
                            i2l6619 5E46                              i2l5837 6046  
                            i2l5941 6234                              i2l5943 6238  
                            i2l6567 617A                              i2l5937 623E  
                            i2l5945 6202                              i2l5939 6242  
                            i2l5947 6206                    ?_interrupts_init 0001  
                  ?_DCmotors_setPWM 0016                           ??_HighISR 0006  
                            _RX4PPS 000E15      i2colourclick_writetoaddr@value 0003  
                            _TX4REG 000EE4                    __end_of___xxtofl 3DA6  
      __size_ofi2_interrupts_colour 004E                              _LowISR 0018  
                      ??_ADC_getval 0008                        vfprintf@cfmt 004E  
                            ___flge 4E52                              ___fleq 550A  
            colourcards_readRGBC@mL 0068              colourcards_readRGBC@mR 006A  
                         ??___aodiv 0018                           ??___fladd 0037  
                         ??___aomod 0018                              ___wmul 605E  
                         ??___fldiv 001E                           ??___awdiv 0012  
                         ??___flneg 000C                           ??___awmod 000C  
                         ??___flmul 001E                           ??___flsub 0047  
                         ??___fltol 000C                              _efgtoa 0EB8  
                  ??_buggyLEDs_init 0008                  i2_interrupts_clear 617A  
                            _floorf 380C           ??_colourclick_writetoaddr 000B  
                            clear_0 5992                              clear_1 599E  
                            clear_2 59AA                    ___awdiv@quotient 0014  
                   ___awmod@divisor 000A                              isa$std 000001  
                   ___awmod@counter 000C   __end_of_colourcards_normaliseRGBC 458E  
                            pad@buf 001A                              dtoa@fp 0023  
                            left@mL 003F                              left@mR 0041  
                            _strcpy 58B0                              _strlen 5A68  
                            fputc@c 0008                              fputs@c 0015  
                            fputs@i 0016                              fputs@s 0011  
                         ??_forward 0025                 ?i2_interrupts_clear 0001  
                         ??_isdigit 000A                     ___fpclassifyf@e 0010  
                   ___fpclassifyf@u 0012                     ___fpclassifyf@x 0008  
                            right@i 002B                        __mediumconst 0000  
                         ??_isspace 000A                              tblptrh 000FF7  
                         ??_isupper 000A                              tblptrl 000FF6  
                            tblptru 000FF8                           ?_ADC_init 0001  
                  ?_sendCharSerial4 0001                           ??_reverse 0025  
                            stoa@cp 0021                              stoa@fp 0011  
                            putch@c 0001                    __end_of_vfprintf 5850  
                            stop@mL 0021                              stop@mR 0023  
                         ??_sprintf 0050                           ??_tolower 0010  
                __end_of_ADC_getval 61C4                        ?_USART4_init 0001  
                         ??_strncmp 000E                          ___flge@ff1 002F  
                        ___flge@ff2 0033                     ??___fpclassifyf 000C  
                      ___xxtofl@arg 0012                        ___xxtofl@exp 0011  
            colourclick_testing@buf 0175                        ___xxtofl@val 0008  
                        ___fleq@ff1 0008                          ___fleq@ff2 000C  
                  __end_of_turnleft 5CE8                          __accesstop 0060  
           __end_of__initialization 59BA                          ___flneg@f1 0008  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
              ??i2_interrupts_clear 0006                          ___fltol@f1 0008  
                    __pcstackCOMRAM 0001                        __pidataBANK1 6248  
                     __end_of_fputc 52D4                       __end_of_fputs 5E0E  
                     __end_of_right 4AE0                       __end_of_putch 6252  
     checkbatterylevel@batterylevel 0009                          ??_ADC_init 0008  
        __size_of_clicker2LEDs_init 000A                             ??_fputc 000C  
                           ??_fputs 0015                             ??_right 0027  
     __size_of_colourclickLEDs_init 000E                             ??_putch 0008  
   __end_of_colourclick_writetoaddr 60E6                          __pbssBANK0 00EF  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                        __pnvCOMRAM 0055                   _checkbatterylevel 60E6  
           ??_colourclick_readRGBC2 0018       __size_ofi2_I2C_2_Master_Start 000A  
     __size_ofi2_I2C_2_Master_Write 000C                  ?_checkbatterylevel 0001  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
                           ?___flge 002F                             ?___fleq 0008  
                           ?___wmul 0008                             ?_efgtoa 0047  
               ??_checkbatterylevel 0009                             ?_floorf 002F  
                           ?_strcpy 0008                             ?_strlen 0008  
                           _INT1PPS 000DF1         ??i2_colourclick_writetoaddr 0004  
                         ?___xxtofl 0008                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                   ?_interrupts_clear 0001  
                __size_of_vfpfcnvrt 05EE                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5                  ??_interrupts_clear 000D  
                  _colourclick_init 5ED4           __end_of_checkbatterylevel 6106  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
                         _ADREFbits 000F58                  _I2C_2_Master_Start 6216  
               i2_I2C_2_Master_Idle 6036                  _I2C_2_Master_Write 61E8  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 6234  
      __end_of_DCmotors_calibration 4996                  __size_of_turnright 0050  
  __size_of_colourclick_calibration 013A                             __Lparam 0000  
                   __size_of_LowISR 000E                  _DCmotors_adjustval 55B4  
           sendStringSerial4@string 0009                     __size_of___flge 0104  
                   __size_of___fleq 00AA                             ___aodiv 4290  
                           ___fladd 28A8                             ___aomod 458E  
                           ___fldiv 3192                             ___awdiv 52D4  
                           ___flneg 5F44             colourcards_readRGBC@abs 0066  
                           ___awmod 545A                             ___flmul 2D68  
                           ___flsub 5D84                             ___fltol 4D4C  
           colourcards_readRGBC@rel 006C                     __size_of___wmul 0026  
               ?_I2C_2_Master_Start 0001                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 00BD                        __psmallconst 0E00  
                   __size_of_efgtoa 0C5A         __end_of_colourclick_testing 520A  
                   __size_of_floorf 0212                             __pcinit 596C  
               ?_DCmotors_adjustval 0001                             __ramtop 0E00  
                           __ptext0 4C1A                             __ptext1 60A6  
                           __ptext2 6146                             __ptext3 5CE8  
                           __ptext4 5ED4                             __ptext5 60C6  
                           __ptext6 61DA                             __ptext7 5FE4  
                           __ptext8 4AE0                             __ptext9 5136  
     __size_of_clicker2buttons_init 000C                           ?_turnleft 0060  
                   __size_of_strcpy 005E                     __size_of_strlen 0050  
               i2_interrupts_colour 5D36                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                        __size_of_abs 0040  
                      __size_of_pad 00C2                             _forward 56E2  
                           _isdigit 5F7C                          ??___xxtofl 000C  
              ?i2_I2C_2_Master_Stop 0001                    ___awmod@dividend 0008  
                           _isspace 5A16                           _T2HLTbits 000FBE  
                           _isupper 5F0C                             efgtoa@c 004D  
                           efgtoa@d 007D                             efgtoa@e 0095  
                           efgtoa@f 0049                             efgtoa@g 0091  
                           efgtoa@h 0087                             efgtoa@i 008F  
                           efgtoa@l 008B                             efgtoa@m 0077  
                           efgtoa@n 0097                             efgtoa@p 0081  
                           efgtoa@t 0071                             efgtoa@u 0099  
                           efgtoa@w 0083                             _reverse 5654  
                     _RxBufWriteCnt 00F5                             atoi@neg 0015  
                           _sprintf 59C4                             _tolower 5850  
              ??_I2C_2_Master_Start 0009                             left@deg 0043  
              ??_I2C_2_Master_Write 0009                             _strncmp 5054  
                    __pintcode_body 5E0E                end_of_initialization 59BA  
      __end_of_colourcards_readRGBC 22BA                             floorf@e 003D  
                           floorf@m 0039                             floorf@u 003F  
                           floorf@x 002F                    ADC_getval@tmpval 0008  
              ??_DCmotors_adjustval 0008                             fputc@fp 000A  
              __size_of_USART4_init 0020                             int_func 5E0E  
                           fputs@fp 0013           i2_colourclick_writetoaddr 6126  
              ?i2_interrupts_colour 0001                           i2u1267_47 5D46  
                           right@mL 0021                             right@mR 0023  
                 __end_of_vfpfcnvrt 28A8                          efgtoa@mode 0086  
                        efgtoa@sign 007F                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
    colourclick_calibration@current 01B0      colourclick_calibration@initial 01A8  
                        ??_vfprintf 004E        colourclick_writetoaddr@value 000A  
                           strcpy@d 0010                             strlen@a 000A  
                           strcpy@s 000E                             strlen@s 0008  
                     _DCmotors_init 5BF8                           _PORTFbits 000F8E  
                        ??_turnleft 004C               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002                         ___fladd@grs 003E  
          colourclick_calibration@i 01A7                       ___xxtofl@sign 0010  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                   __end_of_turnright 5C98  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0029  
                       ___fldiv@rem 0022       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 0009  
              colourclick_readB@tmp 0011                colourclick_readC@tmp 0011  
        __size_of_checkbatterylevel 0020                colourclick_readG@tmp 0011  
                       _CM1CON0bits 000ED0                         _CM1CON1bits 000ED1  
              colourclick_readR@tmp 0011                         ___flmul@grs 0024  
             ??i2_interrupts_colour 0005                        _EUSART4RXbuf 0100  
                      _EUSART4TXbuf 0200           sendCharSerial4@charToSend 0008  
                        main@motorL 01C0                          main@motorR 01C9  
                    __end_of_LowISR 0026            __size_of_interrupts_init 0020  
          __size_of_DCmotors_setPWM 01D4                      __end_of___flge 4F56  
        colourclick_readRGBC@tmpval 0013                      __end_of___fleq 55B4  
                    ?_DCmotors_init 0001                         vfpfcnvrt@ap 00A1  
                       vfpfcnvrt@cp 00AF                         vfpfcnvrt@ct 00B9  
                       vfpfcnvrt@fp 009D                         vfpfcnvrt@ll 00A7  
                    __end_of___wmul 6084                      __end_of_efgtoa 1B12  
                    __end_of_floorf 3A1E                          floorf@F527 0114  
        ?_colourcards_normaliseRGBC 002F                      __end_of_strcpy 590E  
                    __end_of_strlen 5AB8                colourclick_testing@B 01A3  
              colourclick_testing@C 01A5                colourclick_testing@G 01A1  
              colourclick_testing@R 019F                 start_initialization 596C  
                       __end_of_abs 5ED4                _DCmotors_calibration 4848  
                       __end_of_pad 545A                       _TxBufWriteCnt 0054  
                  _unknowncard_flag 00F2                     _returnhome_flag 00F1  
          __size_of_sendCharSerial4 0018               __end_of___fpclassifyf 5054  
           _colourclick_calibration 4AE0         __size_ofi2_interrupts_clear 001A  
                          ??_LowISR 0007                        turnright@deg 0064  
    __size_of_colourclick_readRGBC2 0156       __end_of_colourclick_readRGBC2 4848  
                       vfprintf@fmt 00BF            ?_colourclick_writetoaddr 000A  
        colourcards_normaliseRGBC@B 0037          colourcards_normaliseRGBC@C 0039  
        colourcards_normaliseRGBC@G 0035          colourcards_normaliseRGBC@R 0033  
                          ??___flge 0037                            ??___fleq 0010  
      __end_of_colourclickLEDs_init 61E8                            ??___wmul 000C  
          __end_of_colourclick_init 5F0C                            ??_efgtoa 0060  
                       __pdataBANK1 01D2       i2I2C_2_Master_Write@data_byte 0002  
                          ??_floorf 0033                _colourcards_readRGBC 1B12  
                          ??_strcpy 000C                            ??_strlen 000A  
      __end_ofi2_I2C_2_Master_Start 6248        __end_ofi2_I2C_2_Master_Write 620C  
                         ___fladd@a 0033                           ___fladd@b 002F  
                         ___fldiv@a 001A                           ___fldiv@b 0016  
                         ___flmul@a 001A                           ___flmul@b 0016  
                       __pbssCOMRAM 0050                           ___flsub@a 0043  
                         ___flsub@b 003F                       __pcstackBANK0 0060  
                     __pcstackBANK1 0175               ?_DCmotors_calibration 004C  
                  ___aodiv@dividend 0008             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4                            ?_HighISR 0001  
                         _atoi$3322 0017                           _atoi$3323 001B  
                         _atoi$3324 0019                           __pnvBANK1 01D9  
         __size_of_interrupts_clear 001A                         _efgtoa$3244 0065  
                       _efgtoa$3253 006B                         _efgtoa$3245 0067  
                       _efgtoa$3254 006D                         _efgtoa$3255 006F  
                       _efgtoa$3249 0069                           _dtoa$3220 0035  
                       _clear_lower 0122                         _clear_upper 0120  
                         __pintcode 0008                     ??_DCmotors_init 0008  
                          ?___aodiv 0008                            ?___fladd 002F  
                          ?___aomod 0008                            ?___fldiv 0016  
                          ?___awdiv 000E                    ___aodiv@quotient 001A  
                          ?___flneg 0008                            ?___awmod 0008  
                          ?___flmul 0016                            ?___flsub 003F  
                          ?___fltol 0008  __size_ofi2_colourclick_writetoaddr 0020  
             ?_colourcards_readRGBC 0066                         __pintcodelo 0018  
                        right@delay 0029                I2C_2_Master_Read@ack 000A  
                 __size_of_vfprintf 006E                   ??_interrupts_init 000D  
                 ??_DCmotors_setPWM 0018                I2C_2_Master_Read@tmp 000B  
             _interrupts_lowerbound 0052                         __smallconst 0E00  
                          ?_forward 0021                            ?_isdigit 0008  
                 _I2C_2_Master_Idle 600E                   _I2C_2_Master_Init 5FE4  
                 _I2C_2_Master_Read 5E52                   _I2C_2_Master_Stop 620C  
                          ?_isspace 0008                   __size_of_turnleft 0050  
                          ?_isupper 0008                        _RxBufReadCnt 00F4  
                          _ADC_init 6160                            ?_reverse 0021  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
                          ?_sprintf 00C3                            ?_tolower 000E  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
                          ?_strncmp 0008                      __size_of_right 014A  
                    __size_of_putch 0002           ??_colourclick_calibration 00EB  
      __end_of_clicker2buttons_init 6200                   _sendStringSerial4 5FB4  
               ??_I2C_2_Master_Idle 0008                 ??_I2C_2_Master_Init 0008  
               ??_I2C_2_Master_Read 0009                      ___wmul@product 000C  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0009  
                          _LATCbits 000F7B                   _colourclickLEDs_C 6084  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                   _interrupts_colour 5CE8  
                ?_sendStringSerial4 0009                            _PIE4bits 000E2D  
                ?_colourclickLEDs_C 0001                            _PIR0bits 000E33  
                          _PIR4bits 000E37                  ?_interrupts_colour 0001  
                          i2u695_40 6046                            i2u695_41 6042  
                          i2u696_40 605C                            i2u792_40 5E1E  
                          i2u696_41 6058                            i2u792_41 5E1A  
                          i2u793_40 5E36                            i2u793_41 5E2E  
                          i2u794_48 5E38                   ??_sendCharSerial4 0008  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 000B  
            DCmotors_setPWM@PWMduty 001F          colourclick_testing@ambient 019D  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 0008  
                 _colourclick_readB 5BA8                   _colourclick_readC 5B58  
                 _colourclick_readG 5B08                   _colourclick_readR 5AB8  
                         _vfpfcnvrt 22BA                 ??_interrupts_colour 000C  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 6036  
         __end_of_I2C_2_Master_Init 600E           __end_of_I2C_2_Master_Read 5E94  
        colourclick_testing@current 00E7                   ___wmul@multiplier 0008  
        colourclick_testing@initial 00E5                  ?_colourclick_readB 000C  
                ?_colourclick_readC 000C                  ?_colourclick_readG 000C  
                ?_colourclick_readR 000C           __end_of_I2C_2_Master_Stop 6216  
             _interrupts_upperbound 0055         I2C_2_Master_Write@data_byte 0009  
                 _DCmotors_turntime 01D9              ??_DCmotors_calibration 0066  
      __size_of_colourclick_testing 00D4                           left@delay 0046  
                      _TxBufReadCnt 00F3                        _isspace$3353 000E  
                        _CM1NCHbits 000ED2                 ??_colourclick_readB 000E  
               ??_colourclick_readC 000E                 ??_colourclick_readG 000E  
               ??_colourclick_readR 000E                          _CM1PCHbits 000ED3  
                        vfpfcnvrt@c 00BC                          vfpfcnvrt@f 00B5  
                     ??_USART4_init 0008                           copy_data0 5980  
         __end_of_sendStringSerial4 5FE4         __size_of_I2C_2_Master_Start 000A  
              _colourclickLEDs_init 61DA         __size_of_I2C_2_Master_Write 000C  
                         _turnright 5C48           __end_of_colourclickLEDs_C 60A6  
                       turnleft@deg 0064         __size_of_DCmotors_adjustval 00A0  
    __size_of_I2C_2_Master_RepStart 000A           __end_of_interrupts_colour 5D36  
     __end_of_I2C_2_Master_RepStart 622A                    __size_of_HighISR 5E4A  
              i2_I2C_2_Master_Start 623E                i2_I2C_2_Master_Write 6200  
                          __Hrparam 0000                         turnright@mL 0060  
                       turnright@mR 0062                          _ADC_getval 61AC  
      __end_of_colourclick_readRGBC 596C                          vfprintf@ap 00C1  
                          __Lrparam 0000                          vfprintf@fp 00BD  
         __end_of_colourclick_readB 5BF8           __end_of_colourclick_readC 5BA8  
         __end_of_colourclick_readG 5B58           __end_of_colourclick_readR 5B08  
                         forward@mL 0021                           forward@mR 0023  
            ??_colourcards_readRGBC 004C         __end_ofi2_I2C_2_Master_Idle 605E  
                  __size_of___aodiv 0188                    __size_of___fladd 04C0  
       __end_ofi2_I2C_2_Master_Stop 623E                    __size_of___aomod 0164  
                  __size_of___fldiv 039A                    __size_of___awdiv 00C4  
                  __size_of___flneg 0038                    __size_of___awmod 00B0  
                  __size_of___flmul 042A                    __size_of___flsub 0046  
                  __size_of___fltol 0106                          ?_vfpfcnvrt 009D  
   __end_of_colourclick_calibration 4C1A                     ___aodiv@divisor 0010  
                   ___aodiv@counter 0018                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                  ___fpclassifyf@F465 0118  
                        _ANSELFbits 000EB4         ??_colourcards_normaliseRGBC 0033  
                        sprintf@fmt 00C5                            ___xxtofl 3BF2  
            DCmotors_calibration@mL 004C              DCmotors_calibration@mR 004E  
                    _buggyLEDs_init 61C4                    __size_of_forward 008E  
                  __size_of_isdigit 0038                    __size_of_isspace 0052  
                          __ptext10 59C4                            __ptext11 57E2  
                          __ptext20 4F56                            __ptext12 22BA  
                          __ptext21 4D4C                            __ptext13 5054  
                          __ptext30 520A                            __ptext22 5D84  
                          __ptext14 40F6                            __ptext31 6250  
                          __ptext23 5F44                            __ptext15 0EB8  
                          __ptext40 1B12                            __ptext32 5E94  
                          __ptext24 550A                            __ptext16 5850  
                          __ptext41 5654                            __ptext33 458E  
                          __ptext25 545A                            __ptext17 5F0C  
                          __ptext50 620C                            __ptext42 56E2  
                          __ptext34 4290                            __ptext26 352C  
                          __ptext18 58B0                            __ptext51 6216  
                          __ptext43 46F2                            __ptext35 3F52  
                          __ptext27 5398                            __ptext19 380C  
                          __ptext60 6106                            __ptext52 6220  
                          __ptext44 590E                            __ptext36 5A16  
                          __ptext28 5A68                            __ptext61 5BF8  
                          __ptext53 5E52                            __ptext45 5AB8  
                          __ptext37 5F7C                            __ptext29 5DCA  
                          __ptext70 3BF2                            __ptext62 61F4  
                          __ptext54 600E                            __ptext46 5B08  
                          __ptext38 5FB4                            __ptext71 2D68  
                          __ptext63 622A                            __ptext55 6084  
                          __ptext47 5B58                            __ptext39 6194  
                          __ptext72 4E52                            __ptext64 61C4  
                          __ptext56 4418                            __ptext48 5BA8  
                          __ptext73 28A8                            __ptext65 4848  
                          __ptext57 3192                            __ptext49 61E8  
                          __ptext82 617A                            __ptext74 5770  
                          __ptext66 5C48                            __ptext58 60E6  
                          __ptext83 5D36                            __ptext75 3A1E  
                          __ptext67 5C98                            __ptext59 61AC  
                          __ptext84 6126                            __ptext76 605E  
                          __ptext68 4996                            __ptext85 6200  
                          __ptext77 52D4                            __ptext69 3DA6  
                          __ptext86 6234                            __ptext78 55B4  
                          __ptext87 623E                            __ptext79 6160  
                          __ptext88 6036                    __size_of_isupper 0038  
                  __size_of_reverse 008E         __end_ofi2_interrupts_colour 5D84  
             ?_colourclickLEDs_init 0001                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                    __size_of_sprintf 0052  
                  __size_of_tolower 0060                          ?_turnright 0060  
                        strcpy@dest 0008                    __size_of_strncmp 00E2  
                     __size_of_atoi 01A4                       __size_of_main 0132  
                     __size_of_dtoa 02E0                       __size_of_left 01AC  
                     __size_of_stoa 019A                       __size_of_stop 0072  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
               __end_of_USART4_init 6126                    _interrupts_clear 6146  
                         reverse@mL 0021                           reverse@mR 0023  
                          efgtoa@fp 0047                            efgtoa@ne 0075  
                          efgtoa@pp 0073                            efgtoa@ou 0079  
                         stoa@F1163 01D2                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0057  
                          _vfprintf 57E2                   ?_colourclick_init 0001  
               DCmotors_adjustval@i 000A                  ??_colourclick_init 000C  
        __size_of_I2C_2_Master_Idle 0028          __size_of_I2C_2_Master_Init 002A  
        __size_of_I2C_2_Master_Read 0042                    ___aomod@dividend 0008  
                  DCmotors_setPWM@m 0016                _clicker2buttons_init 61F4  
        __size_of_I2C_2_Master_Stop 000A                            _turnleft 5C98  
                        turnleft@mL 0060                          turnleft@mR 0062  
            __end_of_buggyLEDs_init 61DA                      _vfpfcnvrt$3280 00B1  
                    _vfpfcnvrt$3285 00B3                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 0020      colourclick_writetoaddr@address 000B  
  i2colourclick_writetoaddr@address 0004                            isdigit@c 0008  
                       _PWM6CONbits 000FA4          __size_of_sendStringSerial4 0030  
                       _PWM7CONbits 000FA1                            intlevel1 0000  
                          intlevel2 0000          __size_of_colourclickLEDs_C 0022  
                         sprintf@ap 00DD                        _DAC1CON0bits 000EC6  
                      _DAC1CON1bits 000EC7          __size_of_interrupts_colour 004E  
        __end_ofi2_interrupts_clear 6194                            isspace@c 0008  
                          right@deg 0025           _colourcards_normaliseRGBC 4418  
                         strcpy@src 000A                            isupper@c 0008  
                         strncmp@_l 0008                           strncmp@_r 000A  
                   _interrupts_init 60A6                     _DCmotors_setPWM 3A1E  
                       ?_ADC_getval 0001                         efgtoa@nmode 0085  
        __size_of_colourclick_readB 0050          __size_of_colourclick_readC 0050  
        __size_of_colourclick_readG 0050          __size_of_colourclick_readR 0050  
             _colourclick_readRGBC2 46F2                     ___aomod@divisor 0010  
                       ??_vfpfcnvrt 00A3                            stoa@nuls 0016  
                   ___aomod@counter 0018               ?_clicker2buttons_init 0001  
         colourclick_readRGBC2@mode 0017                            sprintf@f 00DF  
                          tolower@c 000E                            sprintf@s 00C3  
                   ?_buggyLEDs_init 0001              __size_of___fpclassifyf 00FE  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                          strncmp@l 000F                            strncmp@n 000C  
                          strncmp@r 0011              ??_colourclickLEDs_init 0009  
              _colourclick_readRGBC 590E                       ___fladd@signs 003B  
                       _USART4_init 6106                          _TX4STAbits 000EE8  
                       ??_turnright 004C                        ___aodiv@sign 0019  
                   _sendCharSerial4 6194              ??i2_I2C_2_Master_Start 0002  
                      ___fladd@aexp 003C              ??i2_I2C_2_Master_Write 0002  
                      ___fladd@bexp 003D                        ___aomod@sign 0019  
               _colourclick_testing 5136        colourcards_normaliseRGBC@abs 002F  
