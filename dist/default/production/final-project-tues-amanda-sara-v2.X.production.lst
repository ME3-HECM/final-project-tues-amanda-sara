

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 10:57:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81  0000                     
    82                           ; Version 2.20
    83                           ; Generated 05/05/2020 GMT
    84                           ; 
    85                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F67K40 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	nvCOMRAM
   118  0000'                    __pnvCOMRAM:
   119                           	callstack 0
   120  0000'                    _turnright_calangle:
   121                           	callstack 0
   122  0000'                    	ds	2
   123  0002'                    _turnleft_calangle:
   124                           	callstack 0
   125  0002'                    	ds	2
   126  0000                     _INT1PPS	set	3569
   127  0000                     _RC7PPS	set	3689
   128  0000                     _RE2PPS	set	3700
   129  0000                     _TX4REG	set	3812
   130  0000                     _RC4REG	set	3811
   131  0000                     _PIR4bits	set	3639
   132  0000                     _RC4STAbits	set	3815
   133  0000                     _SP4BRGH	set	3814
   134  0000                     _SP4BRGL	set	3813
   135  0000                     _TX4STAbits	set	3816
   136  0000                     _BAUD4CONbits	set	3817
   137  0000                     _RX4PPS	set	3605
   138  0000                     _RC0PPS	set	3682
   139  0000                     _SSP2BUF	set	3797
   140  0000                     _SSP2CON2bits	set	3802
   141  0000                     _SSP2CON2	set	3802
   142  0000                     _SSP2STAT	set	3800
   143  0000                     _RD6PPS	set	3696
   144  0000                     _RD5PPS	set	3695
   145  0000                     _SSP2CLKPPS	set	3612
   146  0000                     _SSP2DATPPS	set	3613
   147  0000                     _ANSELDbits	set	3751
   148  0000                     _SSP2ADD	set	3798
   149  0000                     _SSP2CON1bits	set	3801
   150  0000                     _ANSELFbits	set	3764
   151  0000                     _PIR0bits	set	3635
   152  0000                     _IPR0bits	set	3615
   153  0000                     _PIE0bits	set	3625
   154  0000                     _ANSELBbits	set	3738
   155  0000                     _ADPCH	set	3935
   156  0000                     _ADREFbits	set	3928
   157  0000                     _T0CON0bits	set	4053
   158  0000                     _T0CON1bits	set	4054
   159  0000                     _PWM7CONbits	set	4001
   160  0000                     _PWM6CONbits	set	4004
   161  0000                     _LATCbits	set	3963
   162  0000                     _LATEbits	set	3965
   163  0000                     _TRISEbits	set	3973
   164  0000                     _T2PR	set	4028
   165  0000                     _T2CLKCONbits	set	4031
   166  0000                     _T2HLTbits	set	4030
   167  0000                     _T2CONbits	set	4029
   168  0000                     _TRISCbits	set	3971
   169  0000                     _TRISAbits	set	3969
   170  0000                     _TRISGbits	set	3975
   171  0000                     _TRISHbits	set	3976
   172  0000                     _TRISDbits	set	3972
   173  0000                     _ADRESH	set	3940
   174  0000                     _ADCON0bits	set	3936
   175  0000                     _TRISFbits	set	3974
   176  0000                     _LATFbits	set	3966
   177  0000                     _LATAbits	set	3961
   178  0000                     _LATGbits	set	3967
   179  0000                     _TMR0L	set	4051
   180  0000                     _TMR0H	set	4052
   181  0000                     _INTCONbits	set	4082
   182  0000                     _TRISBbits	set	3970
   183  0000                     _LATHbits	set	3968
   184  0000                     _LATDbits	set	3964
   185  0000                     _PORTFbits	set	3982
   186  0000                     _LATG	set	3967
   187  0000                     _PWM7DCH	set	4000
   188  0000                     _LATE	set	3965
   189  0000                     _PWM6DCH	set	4003
   190                           
   191                           	psect	smallconst
   192  0000'                    __psmallconst:
   193                           	callstack 0
   194  0000' 00                 	db	0
   195  0001'                    STR_1:
   196                           
   197                           ; BSR set to: 14
   198  0001' 52                 	db	82	;'R'
   199  0002' 47                 	db	71	;'G'
   200  0003' 42                 	db	66	;'B'
   201  0004' 43                 	db	67	;'C'
   202  0005' 3A                 	db	58	;':'
   203  0006' 20                 	db	32
   204  0007' 25                 	db	37
   205  0008' 69                 	db	105	;'i'
   206  0009' 20                 	db	32
   207  000A' 25                 	db	37
   208  000B' 69                 	db	105	;'i'
   209  000C' 20                 	db	32
   210  000D' 25                 	db	37
   211  000E' 69                 	db	105	;'i'
   212  000F' 20                 	db	32
   213  0010' 25                 	db	37
   214  0011' 69                 	db	105	;'i'
   215  0012' 20                 	db	32
   216  0013' 20                 	db	32
   217  0014' 20                 	db	32
   218  0015' 20                 	db	32
   219  0016' 20                 	db	32
   220  0017' 52                 	db	82	;'R'
   221  0018' 47                 	db	71	;'G'
   222  0019' 42                 	db	66	;'B'
   223  001A' 43                 	db	67	;'C'
   224  001B' 5F                 	db	95	;'_'
   225  001C' 72                 	db	114	;'r'
   226  001D' 65                 	db	101	;'e'
   227  001E' 6C                 	db	108	;'l'
   228  001F' 3A                 	db	58	;':'
   229  0020' 20                 	db	32
   230  0021' 25                 	db	37
   231  0022' 2E                 	db	46
   232  0023' 33                 	db	51	;'3'
   233  0024' 66                 	db	102	;'f'
   234  0025' 20                 	db	32
   235  0026' 25                 	db	37
   236  0027' 2E                 	db	46
   237  0028' 33                 	db	51	;'3'
   238  0029' 66                 	db	102	;'f'
   239  002A' 20                 	db	32
   240  002B' 25                 	db	37
   241  002C' 2E                 	db	46
   242  002D' 33                 	db	51	;'3'
   243  002E' 66                 	db	102	;'f'
   244  002F' 20                 	db	32
   245  0030' 20                 	db	32
   246  0031' 20                 	db	32
   247  0032' 20                 	db	32
   248  0033' 20                 	db	32
   249  0034' 43                 	db	67	;'C'
   250  0035' 6F                 	db	111	;'o'
   251  0036' 6C                 	db	108	;'l'
   252  0037' 6F                 	db	111	;'o'
   253  0038' 75                 	db	117	;'u'
   254  0039' 72                 	db	114	;'r'
   255  003A' 3A                 	db	58	;':'
   256  003B' 20                 	db	32
   257  003C' 25                 	db	37
   258  003D' 73                 	db	115	;'s'
   259  003E' 0A                 	db	10
   260  003F' 0D                 	db	13
   261  0040' 00                 	db	0
   262  0041'                    
   263                           ; BSR set to: 14
   264  0041' 52                 	db	82	;'R'
   265  0042' 47                 	db	71	;'G'
   266  0043' 42                 	db	66	;'B'
   267  0044' 43                 	db	67	;'C'
   268  0045' 3A                 	db	58	;':'
   269  0046' 20                 	db	32
   270  0047' 25                 	db	37
   271  0048' 69                 	db	105	;'i'
   272  0049' 20                 	db	32
   273  004A' 25                 	db	37
   274  004B' 69                 	db	105	;'i'
   275  004C' 20                 	db	32
   276  004D' 25                 	db	37
   277  004E' 69                 	db	105	;'i'
   278  004F' 20                 	db	32
   279  0050' 25                 	db	37
   280  0051' 69                 	db	105	;'i'
   281  0052' 20                 	db	32
   282  0053' 20                 	db	32
   283  0054' 20                 	db	32
   284  0055' 20                 	db	32
   285  0056' 20                 	db	32
   286  0057' 54                 	db	84	;'T'
   287  0058' 68                 	db	104	;'h'
   288  0059' 72                 	db	114	;'r'
   289  005A' 65                 	db	101	;'e'
   290  005B' 73                 	db	115	;'s'
   291  005C' 68                 	db	104	;'h'
   292  005D' 6F                 	db	111	;'o'
   293  005E' 6C                 	db	108	;'l'
   294  005F' 64                 	db	100	;'d'
   295  0060' 3A                 	db	58	;':'
   296  0061' 20                 	db	32
   297  0062' 25                 	db	37
   298  0063' 69                 	db	105	;'i'
   299  0064' 20                 	db	32
   300  0065' 25                 	db	37
   301  0066' 69                 	db	105	;'i'
   302  0067' 20                 	db	32
   303  0068' 25                 	db	37
   304  0069' 69                 	db	105	;'i'
   305  006A' 0A                 	db	10
   306  006B' 0D                 	db	13
   307  006C' 00                 	db	0
   308  006D'                    STR_10:
   309                           
   310                           ; BSR set to: 14
   311  006D' 6C                 	db	108	;'l'
   312  006E' 69                 	db	105	;'i'
   313  006F' 67                 	db	103	;'g'
   314  0070' 68                 	db	104	;'h'
   315  0071' 74                 	db	116	;'t'
   316  0072' 20                 	db	32
   317  0073' 62                 	db	98	;'b'
   318  0074' 6C                 	db	108	;'l'
   319  0075' 75                 	db	117	;'u'
   320  0076' 65                 	db	101	;'e'
   321  0077' 00                 	db	0
   322  0078'                    
   323                           ; BSR set to: 14
   324  0078' 75                 	db	117	;'u'
   325  0079' 6E                 	db	110	;'n'
   326  007A' 6B                 	db	107	;'k'
   327  007B' 6E                 	db	110	;'n'
   328  007C' 6F                 	db	111	;'o'
   329  007D' 77                 	db	119	;'w'
   330  007E' 6E                 	db	110	;'n'
   331  007F' 00                 	db	0
   332  0080'                    
   333                           ; BSR set to: 14
   334  0080' 6F                 	db	111	;'o'
   335  0081' 72                 	db	114	;'r'
   336  0082' 61                 	db	97	;'a'
   337  0083' 6E                 	db	110	;'n'
   338  0084' 67                 	db	103	;'g'
   339  0085' 65                 	db	101	;'e'
   340  0086' 00                 	db	0
   341  0087'                    
   342                           ; BSR set to: 14
   343  0087' 79                 	db	121	;'y'
   344  0088' 65                 	db	101	;'e'
   345  0089' 6C                 	db	108	;'l'
   346  008A' 6C                 	db	108	;'l'
   347  008B' 6F                 	db	111	;'o'
   348  008C' 77                 	db	119	;'w'
   349  008D' 00                 	db	0
   350  008E'                    
   351                           ; BSR set to: 14
   352  008E' 77                 	db	119	;'w'
   353  008F' 68                 	db	104	;'h'
   354  0090' 69                 	db	105	;'i'
   355  0091' 74                 	db	116	;'t'
   356  0092' 65                 	db	101	;'e'
   357  0093' 00                 	db	0
   358  0094'                    
   359                           ; BSR set to: 14
   360  0094' 67                 	db	103	;'g'
   361  0095' 72                 	db	114	;'r'
   362  0096' 65                 	db	101	;'e'
   363  0097' 65                 	db	101	;'e'
   364  0098' 6E                 	db	110	;'n'
   365  0099' 00                 	db	0
   366  009A'                    
   367                           ; BSR set to: 14
   368  009A' 70                 	db	112	;'p'
   369  009B' 69                 	db	105	;'i'
   370  009C' 6E                 	db	110	;'n'
   371  009D' 6B                 	db	107	;'k'
   372  009E' 00                 	db	0
   373  009F'                    
   374                           ; BSR set to: 14
   375  009F' 72                 	db	114	;'r'
   376  00A0' 65                 	db	101	;'e'
   377  00A1' 64                 	db	100	;'d'
   378  00A2' 00                 	db	0
   379  00A3' 00                 	db	0	; dummy byte at the end
   380  0000                     
   381                           ; #config settings
   382                           
   383                           	psect	cinit
   384  0000'                    __pcinit:
   385                           	callstack 0
   386  0000'                    start_initialization:
   387                           	callstack 0
   388  0000'                    __initialization:
   389                           	callstack 0
   390                           
   391                           ; Clear objects allocated to BANK1 (40 bytes)
   392  0000' EE00' F000'        	lfsr	0,__pbssBANK1
   393  0004' 0E28               	movlw	40
   394  0006'                    clear_0:
   395  0006' 6AEE               	clrf	postinc0,c
   396  0008' 06E8               	decf	wreg,f,c
   397  000A' E1FD               	bnz	clear_0
   398                           
   399                           ; Clear objects allocated to BANK0 (47 bytes)
   400  000C' EE00' F000'        	lfsr	0,__pbssBANK0
   401  0010' 0E2F               	movlw	47
   402  0012'                    clear_1:
   403  0012' 6AEE               	clrf	postinc0,c
   404  0014' 06E8               	decf	wreg,f,c
   405  0016' E1FD               	bnz	clear_1
   406                           
   407                           ; Clear objects allocated to COMRAM (4 bytes)
   408  0018' 6A00'              	clrf	(__pbssCOMRAM+3)& (0+255),c
   409  001A' 6A00'              	clrf	(__pbssCOMRAM+2)& (0+255),c
   410  001C' 6A00'              	clrf	(__pbssCOMRAM+1)& (0+255),c
   411  001E' 6A00'              	clrf	__pbssCOMRAM& (0+255),c
   412  0020'                    end_of_initialization:
   413                           	callstack 0
   414  0020'                    __end_of__initialization:
   415                           	callstack 0
   416  0020' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   417  0022' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   418  0024' 0E00'              	movlw	low (__Lsmallconst shr (0+16))
   419  0026' 6EF8               	movwf	tblptru,c
   420  0028' 0E00'              	movlw	high __Lsmallconst
   421  002A' 6EF7               	movwf	tblptrh,c
   422  002C' 0100               	movlb	0
   423  002E' EF00' F000'        	goto	_main	;jump to C main() function
   424                           
   425                           	psect	bssCOMRAM
   426  0000'                    __pbssCOMRAM:
   427                           	callstack 0
   428  0000'                    _interrupts_upperbound:
   429                           	callstack 0
   430  0000'                    	ds	2
   431  0002'                    _interrupts_lowerbound:
   432                           	callstack 0
   433  0002'                    	ds	2
   434                           
   435                           	psect	bssBANK0
   436  0000'                    __pbssBANK0:
   437                           	callstack 0
   438  0000'                    _instr:
   439                           	callstack 0
   440  0000'                    	ds	40
   441  0028'                    _timer:
   442                           	callstack 0
   443  0028'                    	ds	2
   444  002A'                    _returnhome_flag:
   445                           	callstack 0
   446  002A'                    	ds	1
   447  002B'                    _unknowncard_flag:
   448                           	callstack 0
   449  002B'                    	ds	1
   450  002C'                    _colourcard_flag:
   451                           	callstack 0
   452  002C'                    	ds	1
   453  002D'                    _dur_counter:
   454                           	callstack 0
   455  002D'                    	ds	1
   456  002E'                    _instr_counter:
   457                           	callstack 0
   458  002E'                    	ds	1
   459                           
   460                           	psect	bssBANK1
   461  0000'                    __pbssBANK1:
   462                           	callstack 0
   463  0000'                    _dur:
   464                           	callstack 0
   465  0000'                    	ds	40
   466                           
   467                           	psect	cstackBANK0
   468  0000'                    __pcstackBANK0:
   469                           	callstack 0
   470  0000'                    ??___fldiv:
   471                           
   472                           ; 1 bytes @ 0x0
   473  0000'                    	ds	4
   474  0004'                    ___fldiv@rem:
   475                           	callstack 0
   476                           
   477                           ; 4 bytes @ 0x4
   478  0004'                    	ds	4
   479  0008'                    ___fldiv@sign:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x8
   483  0008'                    	ds	1
   484  0009'                    ___fldiv@new_exp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x9
   488  0009'                    	ds	2
   489  000B'                    ___fldiv@grs:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0xB
   493  000B'                    	ds	4
   494  000F'                    ___fldiv@bexp:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xF
   498  000F'                    	ds	1
   499  0010'                    ___fldiv@aexp:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x10
   503  0010'                    	ds	1
   504  0011'                    colourcards_normaliseRGBC@abs:
   505                           	callstack 0
   506  0011'                    turnleft@mL:
   507                           	callstack 0
   508  0011'                    turnright@mL:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x11
   512  0011'                    	ds	2
   513  0013'                    colourcards_normaliseRGBC@rel:
   514                           	callstack 0
   515  0013'                    turnleft@mR:
   516                           	callstack 0
   517  0013'                    turnright@mR:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x13
   521  0013'                    	ds	2
   522  0015'                    colourcards_normaliseRGBC@R:
   523                           	callstack 0
   524  0015'                    turnleft@deg:
   525                           	callstack 0
   526  0015'                    turnright@deg:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x15
   530  0015'                    	ds	2
   531  0017'                    colourcards_normaliseRGBC@G:
   532                           	callstack 0
   533  0017'                    turnleft@delay:
   534                           	callstack 0
   535  0017'                    turnright@delay:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x17
   539  0017'                    	ds	2
   540  0019'                    colourcards_normaliseRGBC@B:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x19
   544  0019'                    	ds	2
   545  001B'                    colourcards_normaliseRGBC@C:
   546                           	callstack 0
   547  001B'                    _turnleft$3219:
   548                           	callstack 0
   549  001B'                    _turnright$3220:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x1B
   553  001B'                    	ds	4
   554  001F'                    turnleft@i:
   555                           	callstack 0
   556  001F'                    turnright@i:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x1F
   560  001F'                    	ds	2
   561  0021'                    instructions@mL:
   562                           	callstack 0
   563  0021'                    DCmotors_calibration@mL:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x21
   567  0021'                    	ds	2
   568  0023'                    instructions@mR:
   569                           	callstack 0
   570  0023'                    DCmotors_calibration@mR:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x23
   574  0023'                    	ds	2
   575  0025'                    instructions@num:
   576                           	callstack 0
   577  0025'                    DCmotors_calibration@okay:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x25
   581  0025'                    	ds	1
   582  0026'                    colourcards_readRGBC@abs:
   583                           	callstack 0
   584  0026'                    reverseinstructions@mL:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x26
   588  0026'                    	ds	2
   589  0028'                    colourcards_readRGBC@mL:
   590                           	callstack 0
   591  0028'                    reverseinstructions@mR:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x28
   595  0028'                    	ds	2
   596  002A'                    ??_reverseinstructions:
   597  002A'                    colourcards_readRGBC@mR:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x2A
   601  002A'                    	ds	2
   602  002C'                    ??_colourcards_readRGBC:
   603  002C'                    returnhome@mL:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x2C
   607  002C'                    	ds	2
   608  002E'                    returnhome@mR:
   609                           	callstack 0
   610  002E'                    colourcards_readRGBC@rel:
   611                           	callstack 0
   612                           
   613                           ; 12 bytes @ 0x2E
   614  002E'                    	ds	2
   615  0030'                    ??_returnhome:
   616                           
   617                           ; 1 bytes @ 0x30
   618  0030'                    	ds	2
   619  0032'                    returnhome@i:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x32
   623  0032'                    	ds	1
   624  0033'                    returnhome@j:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x33
   628  0033'                    	ds	1
   629  0034'                    returnhome@k:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x34
   633  0034'                    	ds	6
   634  003A'                    ??_main:
   635                           
   636                           ; 1 bytes @ 0x3A
   637  003A'                    	ds	2
   638  003C'                    main@start:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x3C
   642  003C'                    	ds	1
   643  003D'                    main@current:
   644                           	callstack 0
   645                           
   646                           ; 8 bytes @ 0x3D
   647  003D'                    	ds	8
   648  0045'                    main@motorL:
   649                           	callstack 0
   650                           
   651                           ; 9 bytes @ 0x45
   652  0045'                    	ds	9
   653  004E'                    main@motorR:
   654                           	callstack 0
   655                           
   656                           ; 9 bytes @ 0x4E
   657  004E'                    	ds	9
   658                           
   659                           	psect	cstackCOMRAM
   660  0000'                    __pcstackCOMRAM:
   661                           	callstack 0
   662  0000'                    ??i2_I2C_2_Master_Idle:
   663  0000'                    
   664                           ; 1 bytes @ 0x0
   665  0000'                    	ds	1
   666  0001'                    i2I2C_2_Master_Write@data_byte:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x1
   670  0001'                    	ds	1
   671  0002'                    i2colourclick_writetoaddr@value:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x2
   675  0002'                    	ds	1
   676  0003'                    i2colourclick_writetoaddr@address:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x3
   680  0003'                    	ds	1
   681  0004'                    ??i2_interrupts_colourclick:
   682                           
   683                           ; 1 bytes @ 0x4
   684  0004'                    	ds	1
   685  0005'                    ??_LowISR:
   686  0005'                    
   687                           ; 1 bytes @ 0x5
   688  0005'                    	ds	5
   689  000A'                    ??_adjdelay:
   690  000A'                    ??_colourclickLEDs_RGB:
   691  000A'                    ??_I2C_2_Master_Idle:
   692  000A'                    ?___wmul:
   693                           	callstack 0
   694  000A'                    ?___xxtofl:
   695                           	callstack 0
   696  000A'                    ADC_getval@tmpval:
   697                           	callstack 0
   698  000A'                    colourclickLEDs_C@tog:
   699                           	callstack 0
   700  000A'                    DCmotors_init@PWMperiod:
   701                           	callstack 0
   702  000A'                    ___wmul@multiplier:
   703                           	callstack 0
   704  000A'                    ___xxtofl@val:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0xA
   708  000A'                    	ds	1
   709  000B'                    ??_I2C_2_Master_Read:
   710  000B'                    I2C_2_Master_Write@data_byte:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0xB
   714  000B'                    	ds	1
   715  000C'                    ??_checkbatterylevel:
   716  000C'                    colourclick_writetoaddr@value:
   717                           	callstack 0
   718  000C'                    I2C_2_Master_Read@ack:
   719                           	callstack 0
   720  000C'                    adjdelay@mode:
   721                           	callstack 0
   722  000C'                    ___wmul@multiplicand:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0xC
   726  000C'                    	ds	1
   727  000D'                    colourclick_writetoaddr@address:
   728                           	callstack 0
   729  000D'                    I2C_2_Master_Read@tmp:
   730                           	callstack 0
   731  000D'                    checkbatterylevel@batterylevel:
   732                           	callstack 0
   733  000D'                    adjdelay@i:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0xD
   737  000D'                    	ds	1
   738  000E'                    ??_colourclick_init:
   739  000E'                    ??_interrupts_colourclick:
   740  000E'                    ??___xxtofl:
   741  000E'                    ?_colourclick_readR:
   742                           	callstack 0
   743  000E'                    ?_colourclick_readG:
   744                           	callstack 0
   745  000E'                    ?_colourclick_readB:
   746                           	callstack 0
   747  000E'                    ?_colourclick_readC:
   748                           	callstack 0
   749  000E'                    ___wmul@product:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0xE
   753  000E'                    	ds	1
   754  000F'                    
   755                           ; 1 bytes @ 0xF
   756  000F'                    	ds	1
   757  0010'                    ??_colourclick_readR:
   758  0010'                    ??_colourclick_readG:
   759  0010'                    ??_colourclick_readB:
   760  0010'                    ??_colourclick_readC:
   761  0010'                    ?___awdiv:
   762                           	callstack 0
   763  0010'                    ___awdiv@dividend:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x10
   767  0010'                    	ds	2
   768  0012'                    ___xxtofl@sign:
   769                           	callstack 0
   770  0012'                    ___awdiv@divisor:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x12
   774  0012'                    	ds	1
   775  0013'                    ___xxtofl@exp:
   776                           	callstack 0
   777  0013'                    colourclick_readR@tmp:
   778                           	callstack 0
   779  0013'                    colourclick_readG@tmp:
   780                           	callstack 0
   781  0013'                    colourclick_readB@tmp:
   782                           	callstack 0
   783  0013'                    colourclick_readC@tmp:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x13
   787  0013'                    	ds	1
   788  0014'                    ___awdiv@counter:
   789                           	callstack 0
   790  0014'                    ___xxtofl@arg:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x14
   794  0014'                    	ds	1
   795  0015'                    ___awdiv@sign:
   796                           	callstack 0
   797  0015'                    colourclick_readRGBC@tmpval:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x15
   801  0015'                    	ds	1
   802  0016'                    ___awdiv@quotient:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x16
   806  0016'                    	ds	1
   807  0017'                    ??_colourclick_calibration:
   808  0017'                    colourclick_readRGBC2@tmpval:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x17
   812  0017'                    	ds	1
   813  0018'                    ?___flmul:
   814                           	callstack 0
   815  0018'                    DCmotors_setPWM@m:
   816                           	callstack 0
   817  0018'                    ___flge@ff1:
   818                           	callstack 0
   819  0018'                    ___flmul@b:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x18
   823  0018'                    	ds	1
   824  0019'                    colourclick_readRGBC2@mode:
   825                           	callstack 0
   826  0019'                    colourclick_calibration@initial:
   827                           	callstack 0
   828                           
   829                           ; 8 bytes @ 0x19
   830  0019'                    	ds	1
   831  001A'                    ??_colourclick_readRGBC2:
   832  001A'                    ??_DCmotors_setPWM:
   833                           
   834                           ; 1 bytes @ 0x1A
   835  001A'                    	ds	2
   836  001C'                    ___flge@ff2:
   837                           	callstack 0
   838  001C'                    ___flmul@a:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x1C
   842  001C'                    	ds	4
   843  0020'                    ??___flmul:
   844  0020'                    ??___flge:
   845                           
   846                           ; 1 bytes @ 0x20
   847  0020'                    	ds	1
   848  0021'                    DCmotors_setPWM@PWMduty:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x21
   852  0021'                    	ds	2
   853  0023'                    forward@mL:
   854                           	callstack 0
   855  0023'                    reverse@mL:
   856                           	callstack 0
   857  0023'                    stop@mL:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x23
   861  0023'                    	ds	1
   862  0024'                    ___flmul@sign:
   863                           	callstack 0
   864                           
   865                           ; 1 bytes @ 0x24
   866  0024'                    	ds	1
   867  0025'                    forward@mR:
   868                           	callstack 0
   869  0025'                    reverse@mR:
   870                           	callstack 0
   871  0025'                    stop@mR:
   872                           	callstack 0
   873  0025'                    ___flmul@grs:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x25
   877  0025'                    	ds	2
   878  0027'                    ??_stop:
   879  0027'                    
   880                           ; 1 bytes @ 0x27
   881  0027'                    	ds	2
   882  0029'                    ___flmul@aexp:
   883                           	callstack 0
   884  0029'                    clearance@mL:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x29
   888  0029'                    	ds	1
   889  002A'                    ___flmul@bexp:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x2A
   893  002A'                    	ds	1
   894  002B'                    clearance@mR:
   895                           	callstack 0
   896  002B'                    ___flmul@prod:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x2B
   900  002B'                    	ds	2
   901  002D'                    ??_clearance:
   902                           
   903                           ; 1 bytes @ 0x2D
   904  002D'                    	ds	2
   905  002F'                    ___flmul@temp:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x2F
   909  002F'                    	ds	2
   910  0031'                    ?___fladd:
   911                           	callstack 0
   912  0031'                    ___fladd@b:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x31
   916  0031'                    	ds	4
   917  0035'                    ___fladd@a:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x35
   921  0035'                    	ds	4
   922  0039'                    ??___fladd:
   923                           
   924                           ; 1 bytes @ 0x39
   925  0039'                    	ds	4
   926  003D'                    ___fladd@signs:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x3D
   930  003D'                    	ds	1
   931  003E'                    ___fladd@aexp:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x3E
   935  003E'                    	ds	1
   936  003F'                    ___fladd@bexp:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x3F
   940  003F'                    	ds	1
   941  0040'                    ___fladd@grs:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x40
   945  0040'                    	ds	1
   946  0041'                    ?___fldiv:
   947                           	callstack 0
   948  0041'                    ___fldiv@b:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x41
   952  0041'                    	ds	4
   953  0045'                    ___fldiv@a:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x45
   957  0045'                    	ds	4
   958  0049'                    ??_turnleft:
   959  0049'                    ??_turnright:
   960                           
   961                           ; 1 bytes @ 0x49
   962  0049'                    	ds	1
   963  004A'                    ??_DCmotors_calibration:
   964  004A'                    ??_instructions:
   965                           
   966                           ; 1 bytes @ 0x4A
   967  004A'                    	ds	2
   968                           
   969 ;;
   970 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   971 ;;
   972 ;; *************** function _main *****************
   973 ;; Defined at:
   974 ;;		line 7 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  motorR          9   78[BANK0 ] struct .
   979 ;;  motorL          9   69[BANK0 ] struct .
   980 ;;  current         8   61[BANK0 ] struct .
   981 ;;  PWMperiod       1    0        unsigned char 
   982 ;;  start           1   60[BANK0 ] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   993 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;Total ram usage:       29 bytes
   997 ;; Hardware stack levels required when called: 14
   998 ;; This function calls:
   999 ;;		_ADC_init
  1000 ;;		_DCmotors_calibration
  1001 ;;		_DCmotors_init
  1002 ;;		_USART4_init
  1003 ;;		_checkbatterylevel
  1004 ;;		_colourcards_readRGBC
  1005 ;;		_colourclickLEDs_C
  1006 ;;		_colourclick_calibration
  1007 ;;		_colourclick_init
  1008 ;;		_colourclick_readRGBC
  1009 ;;		_forward
  1010 ;;		_interrupts_init
  1011 ;;		_returnhome
  1012 ;;		_reverse
  1013 ;;		_stop
  1014 ;;		_timer0_init
  1015 ;; This function is called by:
  1016 ;;		Startup code after reset
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text0
  1021  0000'                    __ptext0:
  1022                           	callstack 0
  1023  0000'                    _main:
  1024                           	callstack 17
  1025  0000'                    
  1026                           ;main.c: 11:     RGBC_val current;;main.c: 12:     unsigned char start = 0;
  1027  0000' 0E00               	movlw	0
  1028  0002' 0100               	movlb	0	; () banked
  1029  0004' 6F00'              	movwf	main@start& (0+255),b
  1030                           
  1031                           ;main.c: 14:     timer = 0;
  1032  0006' 0E00               	movlw	0
  1033  0008' 6F00'              	movwf	(_timer+1)& (0+255),b	;volatile
  1034  000A' 0E00               	movlw	0
  1035  000C' 6F00'              	movwf	_timer& (0+255),b	;volatile
  1036                           
  1037                           ;main.c: 15:     instr_counter = 0;
  1038  000E' 0E00               	movlw	0
  1039  0010' 6F00'              	movwf	_instr_counter& (0+255),b	;volatile
  1040                           
  1041                           ;main.c: 16:     dur_counter = 0;
  1042  0012' 0E00               	movlw	0
  1043  0014' 6F00'              	movwf	_dur_counter& (0+255),b	;volatile
  1044                           
  1045                           ;main.c: 17:     turnleft_calangle = 360;
  1046  0016' 0E01               	movlw	1
  1047  0018' 6E00'              	movwf	(_turnleft_calangle+1)^0,c	;volatile
  1048  001A' 0E68               	movlw	104
  1049  001C' 6E00'              	movwf	_turnleft_calangle^0,c	;volatile
  1050                           
  1051                           ;main.c: 18:     turnright_calangle = 360;
  1052  001E' 0E01               	movlw	1
  1053  0020' 6E00'              	movwf	(_turnright_calangle+1)^0,c	;volatile
  1054  0022' 0E68               	movlw	104
  1055  0024' 6E00'              	movwf	_turnright_calangle^0,c	;volatile
  1056                           
  1057                           ;main.c: 19:     interrupts_lowerbound = 0;
  1058  0026' 0E00               	movlw	0
  1059  0028' 6E00'              	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1060  002A' 0E00               	movlw	0
  1061  002C' 6E00'              	movwf	_interrupts_lowerbound^0,c	;volatile
  1062                           
  1063                           ;main.c: 20:     interrupts_upperbound = 0;
  1064  002E' 0E00               	movlw	0
  1065  0030' 6E00'              	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1066  0032' 0E00               	movlw	0
  1067  0034' 6E00'              	movwf	_interrupts_upperbound^0,c	;volatile
  1068                           
  1069                           ;main.c: 21:     colourcard_flag = 0;
  1070  0036' 0E00               	movlw	0
  1071  0038' 6F00'              	movwf	_colourcard_flag& (0+255),b	;volatile
  1072                           
  1073                           ;main.c: 22:     unknowncard_flag = 0;
  1074  003A' 0E00               	movlw	0
  1075  003C' 6F00'              	movwf	_unknowncard_flag& (0+255),b	;volatile
  1076                           
  1077                           ;main.c: 23:     returnhome_flag = 0;
  1078  003E' 0E00               	movlw	0
  1079  0040' 6F00'              	movwf	_returnhome_flag& (0+255),b	;volatile
  1080                           
  1081                           ;main.c: 25:     DC_motor motorL;;main.c: 26:     motorL.power=0;
  1082  0042' 0E00               	movlw	0
  1083  0044' 6F00'              	movwf	main@motorL& (0+255),b
  1084                           
  1085                           ;main.c: 27:     motorL.direction=1;
  1086  0046' 0E01               	movlw	1
  1087  0048' 6F00'              	movwf	(main@motorL+1)& (0+255),b
  1088  004A'                    
  1089                           ; BSR set to: 0
  1090                           ;main.c: 28:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1091  004A' 0EA3               	movlw	163
  1092  004C' 6F00'              	movwf	(main@motorL+2)& (0+255),b
  1093  004E' 0E0F               	movlw	15
  1094  0050' 6F00'              	movwf	(main@motorL+3)& (0+255),b
  1095  0052'                    
  1096                           ; BSR set to: 0
  1097                           ;main.c: 29:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1098  0052' 0E7D               	movlw	125
  1099  0054' 6F00'              	movwf	(main@motorL+4)& (0+255),b
  1100  0056' 0E0F               	movlw	15
  1101  0058' 6F00'              	movwf	(main@motorL+5)& (0+255),b
  1102                           
  1103                           ;main.c: 30:     motorL.dir_pin=4;
  1104  005A' 0E04               	movlw	4
  1105  005C' 6F00'              	movwf	(main@motorL+6)& (0+255),b
  1106  005E'                    
  1107                           ; BSR set to: 0
  1108                           ;main.c: 31:     motorL.PWMperiod=PWMperiod;
  1109  005E' 0E00               	movlw	0
  1110  0060' 6F00'              	movwf	(main@motorL+8)& (0+255),b
  1111  0062' 0E63               	movlw	99
  1112  0064' 6F00'              	movwf	(main@motorL+7)& (0+255),b
  1113                           
  1114                           ;main.c: 33:     DC_motor motorR;;main.c: 34:     motorR.power=0;
  1115  0066' 0E00               	movlw	0
  1116  0068' 6F00'              	movwf	main@motorR& (0+255),b
  1117                           
  1118                           ;main.c: 35:     motorR.direction=1;
  1119  006A' 0E01               	movlw	1
  1120  006C' 6F00'              	movwf	(main@motorR+1)& (0+255),b
  1121  006E'                    
  1122                           ; BSR set to: 0
  1123                           ;main.c: 36:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1124  006E' 0EA0               	movlw	160
  1125  0070' 6F00'              	movwf	(main@motorR+2)& (0+255),b
  1126  0072' 0E0F               	movlw	15
  1127  0074' 6F00'              	movwf	(main@motorR+3)& (0+255),b
  1128  0076'                    
  1129                           ; BSR set to: 0
  1130                           ;main.c: 37:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1131  0076' 0E7F               	movlw	127
  1132  0078' 6F00'              	movwf	(main@motorR+4)& (0+255),b
  1133  007A' 0E0F               	movlw	15
  1134  007C' 6F00'              	movwf	(main@motorR+5)& (0+255),b
  1135                           
  1136                           ;main.c: 38:     motorR.dir_pin=6;
  1137  007E' 0E06               	movlw	6
  1138  0080' 6F00'              	movwf	(main@motorR+6)& (0+255),b
  1139  0082'                    
  1140                           ; BSR set to: 0
  1141                           ;main.c: 39:     motorR.PWMperiod=PWMperiod;
  1142  0082' 0E00               	movlw	0
  1143  0084' 6F00'              	movwf	(main@motorR+8)& (0+255),b
  1144  0086' 0E63               	movlw	99
  1145  0088' 6F00'              	movwf	(main@motorR+7)& (0+255),b
  1146  008A'                    
  1147                           ; BSR set to: 0
  1148                           ;main.c: 41:     ADC_init();
  1149  008A' EC00' F000'        	call	_ADC_init	;wreg free
  1150  008E'                    
  1151                           ;main.c: 42:     colourclick_init();
  1152  008E' EC00' F000'        	call	_colourclick_init	;wreg free
  1153  0092'                    
  1154                           ;main.c: 43:     DCmotors_init(PWMperiod);
  1155  0092' 0E63               	movlw	99
  1156  0094' EC00' F000'        	call	_DCmotors_init
  1157  0098'                    
  1158                           ;main.c: 44:     USART4_init();
  1159  0098' EC00' F000'        	call	_USART4_init	;wreg free
  1160  009C'                    
  1161                           ;main.c: 45:     checkbatterylevel();
  1162  009C' EC00' F000'        	call	_checkbatterylevel	;wreg free
  1163  00A0'                    
  1164                           ;main.c: 50:     DCmotors_calibration(&motorL, &motorR);
  1165  00A0' 0E00'              	movlw	low main@motorL
  1166  00A2' 0100               	movlb	0	; () banked
  1167  00A4' 6F00'              	movwf	DCmotors_calibration@mL& (0+255),b
  1168  00A6' 0E00'              	movlw	high main@motorL
  1169  00A8' 6F00'              	movwf	(DCmotors_calibration@mL+1)& (0+255),b
  1170  00AA' 0E00'              	movlw	low main@motorR
  1171  00AC' 6F00'              	movwf	DCmotors_calibration@mR& (0+255),b
  1172  00AE' 0E00'              	movlw	high main@motorR
  1173  00B0' 6F00'              	movwf	(DCmotors_calibration@mR+1)& (0+255),b
  1174  00B2' EC00' F000'        	call	_DCmotors_calibration	;wreg free
  1175  00B6'                    
  1176                           ;main.c: 56:     colourclick_calibration();
  1177  00B6' EC00' F000'        	call	_colourclick_calibration	;wreg free
  1178  00BA'                    l85:
  1179  00BA' A48E               	btfss	142,2,c	;volatile
  1180  00BC' EF00' F000'        	goto	u6381
  1181  00C0' EF00' F000'        	goto	u6380
  1182  00C4'                    u6381:
  1183  00C4' EF00' F000'        	goto	l89
  1184  00C8'                    u6380:
  1185  00C8' B68E               	btfsc	142,3,c	;volatile
  1186  00CA' EF00' F000'        	goto	u6391
  1187  00CE' EF00' F000'        	goto	u6390
  1188  00D2'                    u6391:
  1189  00D2' EF00' F000'        	goto	l85
  1190  00D6'                    u6390:
  1191  00D6'                    l89:
  1192                           
  1193                           ;main.c: 64:     LATDbits.LATD3 = 1;
  1194  00D6' 867C               	bsf	124,3,c	;volatile
  1195  00D8'                    
  1196                           ;main.c: 65:     colourclickLEDs_C(1);
  1197  00D8' 0E01               	movlw	1
  1198  00DA' EC00' F000'        	call	_colourclickLEDs_C
  1199  00DE'                    
  1200                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1201  00DE' 0E52               	movlw	82
  1202  00E0' 0100               	movlb	0	; () banked
  1203  00E2' 6F00'              	movwf	(??_main+1)& (0+255),b
  1204  00E4' 0E2B               	movlw	43
  1205  00E6' 6F00'              	movwf	??_main& (0+255),b
  1206  00E8' 0E00               	movlw	0
  1207  00EA'                    u6927:
  1208  00EA' 2EE8               	decfsz	wreg,f,c
  1209  00EC' D7FE               	bra	u6927
  1210  00EE' 2F00'              	decfsz	??_main& (0+255),f,b
  1211  00F0' D7FC               	bra	u6927
  1212  00F2' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1213  00F4' D7FA               	bra	u6927
  1214  00F6' F000               	nop	
  1215  00F8'                    
  1216                           ;main.c: 67:     interrupts_init();
  1217  00F8' EC00' F000'        	call	_interrupts_init	;wreg free
  1218  00FC'                    
  1219                           ;main.c: 68:     timer0_init();
  1220  00FC' EC00' F000'        	call	_timer0_init	;wreg free
  1221  0100'                    l5547:
  1222                           
  1223                           ;main.c: 75:         checkbatterylevel();
  1224  0100' EC00' F000'        	call	_checkbatterylevel	;wreg free
  1225                           
  1226                           ;main.c: 77:         if (start<1 && colourcard_flag==1) {
  1227  0104' 0100               	movlb	0	; () banked
  1228  0106' 5100'              	movf	main@start& (0+255),w,b
  1229  0108' A4D8               	btfss	status,2,c
  1230  010A' EF00' F000'        	goto	u6401
  1231  010E' EF00' F000'        	goto	u6400
  1232  0112'                    u6401:
  1233  0112' EF00' F000'        	goto	l5553
  1234  0116'                    u6400:
  1235  0116'                    
  1236                           ; BSR set to: 0
  1237  0116' 0500'              	decf	_colourcard_flag& (0+255),w,b	;volatile
  1238  0118' A4D8               	btfss	status,2,c
  1239  011A' EF00' F000'        	goto	u6411
  1240  011E' EF00' F000'        	goto	u6410
  1241  0122'                    u6411:
  1242  0122' EF00' F000'        	goto	l5553
  1243  0126'                    u6410:
  1244  0126'                    
  1245                           ; BSR set to: 0
  1246                           ;main.c: 78:             colourcard_flag = 0;
  1247  0126' 0E00               	movlw	0
  1248  0128' 6F00'              	movwf	_colourcard_flag& (0+255),b	;volatile
  1249                           
  1250                           ;main.c: 79:             start = 1;
  1251  012A' 0E01               	movlw	1
  1252  012C' 6F00'              	movwf	main@start& (0+255),b
  1253                           
  1254                           ;main.c: 81:         } else if (start>0 && colourcard_flag==1) {
  1255  012E' EF00' F000'        	goto	l5547
  1256  0132'                    l5553:
  1257                           
  1258                           ; BSR set to: 0
  1259  0132' 5100'              	movf	main@start& (0+255),w,b
  1260  0134' B4D8               	btfsc	status,2,c
  1261  0136' EF00' F000'        	goto	u6421
  1262  013A' EF00' F000'        	goto	u6420
  1263  013E'                    u6421:
  1264  013E' EF00' F000'        	goto	l5583
  1265  0142'                    u6420:
  1266  0142'                    
  1267                           ; BSR set to: 0
  1268  0142' 0500'              	decf	_colourcard_flag& (0+255),w,b	;volatile
  1269  0144' A4D8               	btfss	status,2,c
  1270  0146' EF00' F000'        	goto	u6431
  1271  014A' EF00' F000'        	goto	u6430
  1272  014E'                    u6431:
  1273  014E' EF00' F000'        	goto	l5583
  1274  0152'                    u6430:
  1275  0152'                    
  1276                           ; BSR set to: 0
  1277                           ;main.c: 82:             stop(&motorL, &motorR);
  1278  0152' 0E00'              	movlw	low main@motorL
  1279  0154' 6E00'              	movwf	stop@mL^0,c
  1280  0156' 0E00'              	movlw	high main@motorL
  1281  0158' 6E00'              	movwf	(stop@mL+1)^0,c
  1282  015A' 0E00'              	movlw	low main@motorR
  1283  015C' 6E00'              	movwf	stop@mR^0,c
  1284  015E' 0E00'              	movlw	high main@motorR
  1285  0160' 6E00'              	movwf	(stop@mR+1)^0,c
  1286  0162' EC00' F000'        	call	_stop	;wreg free
  1287  0166'                    
  1288                           ;main.c: 83:             LATDbits.LATD7 = 1;
  1289  0166' 8E7C               	bsf	124,7,c	;volatile
  1290  0168'                    
  1291                           ;main.c: 84:             LATHbits.LATH3 = 1;
  1292  0168' 8680               	bsf	128,3,c	;volatile
  1293                           
  1294                           ;main.c: 85:             reverse(&motorL, &motorR);
  1295  016A' 0E00'              	movlw	low main@motorL
  1296  016C' 6E00'              	movwf	reverse@mL^0,c
  1297  016E' 0E00'              	movlw	high main@motorL
  1298  0170' 6E00'              	movwf	(reverse@mL+1)^0,c
  1299  0172' 0E00'              	movlw	low main@motorR
  1300  0174' 6E00'              	movwf	reverse@mR^0,c
  1301  0176' 0E00'              	movlw	high main@motorR
  1302  0178' 6E00'              	movwf	(reverse@mR+1)^0,c
  1303  017A' EC00' F000'        	call	_reverse	;wreg free
  1304  017E'                    
  1305                           ;main.c: 86:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1306  017E' 0E09               	movlw	9
  1307  0180' 0100               	movlb	0	; () banked
  1308  0182' 6F00'              	movwf	(??_main+1)& (0+255),b
  1309  0184' 0E1E               	movlw	30
  1310  0186' 6F00'              	movwf	??_main& (0+255),b
  1311  0188' 0EE4               	movlw	228
  1312  018A'                    u6937:
  1313  018A' 2EE8               	decfsz	wreg,f,c
  1314  018C' D7FE               	bra	u6937
  1315  018E' 2F00'              	decfsz	??_main& (0+255),f,b
  1316  0190' D7FC               	bra	u6937
  1317  0192' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1318  0194' D7FA               	bra	u6937
  1319  0196' F000               	nop	
  1320  0198'                    
  1321                           ;main.c: 87:             stop(&motorL, &motorR);
  1322  0198' 0E00'              	movlw	low main@motorL
  1323  019A' 6E00'              	movwf	stop@mL^0,c
  1324  019C' 0E00'              	movlw	high main@motorL
  1325  019E' 6E00'              	movwf	(stop@mL+1)^0,c
  1326  01A0' 0E00'              	movlw	low main@motorR
  1327  01A2' 6E00'              	movwf	stop@mR^0,c
  1328  01A4' 0E00'              	movlw	high main@motorR
  1329  01A6' 6E00'              	movwf	(stop@mR+1)^0,c
  1330  01A8' EC00' F000'        	call	_stop	;wreg free
  1331  01AC'                    
  1332                           ;main.c: 88:             LATDbits.LATD7 = 0;
  1333  01AC' 9E7C               	bcf	124,7,c	;volatile
  1334  01AE'                    
  1335                           ;main.c: 89:             LATHbits.LATH3 = 0;
  1336  01AE' 9680               	bcf	128,3,c	;volatile
  1337                           
  1338                           ;main.c: 90:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1339  01B0' 0E52               	movlw	82
  1340  01B2' 0100               	movlb	0	; () banked
  1341  01B4' 6F00'              	movwf	(??_main+1)& (0+255),b
  1342  01B6' 0E2B               	movlw	43
  1343  01B8' 6F00'              	movwf	??_main& (0+255),b
  1344  01BA' 0E00               	movlw	0
  1345  01BC'                    u6947:
  1346  01BC' 2EE8               	decfsz	wreg,f,c
  1347  01BE' D7FE               	bra	u6947
  1348  01C0' 2F00'              	decfsz	??_main& (0+255),f,b
  1349  01C2' D7FC               	bra	u6947
  1350  01C4' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1351  01C6' D7FA               	bra	u6947
  1352  01C8' F000               	nop	
  1353  01CA'                    
  1354                           ;main.c: 92:             colourcards_readRGBC(&current, &motorL, &motorR);
  1355  01CA' 0E00'              	movlw	low main@current
  1356  01CC' 0100               	movlb	0	; () banked
  1357  01CE' 6F00'              	movwf	colourcards_readRGBC@abs& (0+255),b
  1358  01D0' 0E00'              	movlw	high main@current
  1359  01D2' 6F00'              	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1360  01D4' 0E00'              	movlw	low main@motorL
  1361  01D6' 6F00'              	movwf	colourcards_readRGBC@mL& (0+255),b
  1362  01D8' 0E00'              	movlw	high main@motorL
  1363  01DA' 6F00'              	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1364  01DC' 0E00'              	movlw	low main@motorR
  1365  01DE' 6F00'              	movwf	colourcards_readRGBC@mR& (0+255),b
  1366  01E0' 0E00'              	movlw	high main@motorR
  1367  01E2' 6F00'              	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1368  01E4' EC00' F000'        	call	_colourcards_readRGBC	;wreg free
  1369  01E8'                    
  1370                           ;main.c: 94:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1371  01E8' 0E52               	movlw	82
  1372  01EA' 0100               	movlb	0	; () banked
  1373  01EC' 6F00'              	movwf	(??_main+1)& (0+255),b
  1374  01EE' 0E2B               	movlw	43
  1375  01F0' 6F00'              	movwf	??_main& (0+255),b
  1376  01F2' 0E00               	movlw	0
  1377  01F4'                    u6957:
  1378  01F4' 2EE8               	decfsz	wreg,f,c
  1379  01F6' D7FE               	bra	u6957
  1380  01F8' 2F00'              	decfsz	??_main& (0+255),f,b
  1381  01FA' D7FC               	bra	u6957
  1382  01FC' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1383  01FE' D7FA               	bra	u6957
  1384  0200' F000               	nop	
  1385  0202'                    
  1386                           ;main.c: 95:             colourclick_readRGBC(&current);
  1387  0202' 0E00'              	movlw	low main@current
  1388  0204' 6E00'              	movwf	colourclick_readRGBC@tmpval^0,c
  1389  0206' 0E00'              	movlw	high main@current
  1390  0208' 6E00'              	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1391  020A' EC00' F000'        	call	_colourclick_readRGBC	;wreg free
  1392  020E'                    
  1393                           ;main.c: 96:             interrupts_lowerbound = current.C - 150;
  1394  020E' 0E6A               	movlw	106
  1395  0210' 0100               	movlb	0	; () banked
  1396  0212' 2500'              	addwf	(main@current+6)& (0+255),w,b
  1397  0214' 6E00'              	movwf	_interrupts_lowerbound^0,c	;volatile
  1398  0216' 0EFF               	movlw	255
  1399  0218' 2100'              	addwfc	(main@current+7)& (0+255),w,b
  1400  021A' 6E00'              	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1401  021C'                    
  1402                           ; BSR set to: 0
  1403                           ;main.c: 97:             interrupts_upperbound = current.C + 100;
  1404  021C' 0E64               	movlw	100
  1405  021E' 2500'              	addwf	(main@current+6)& (0+255),w,b
  1406  0220' 6E00'              	movwf	_interrupts_upperbound^0,c	;volatile
  1407  0222' 0E00               	movlw	0
  1408  0224' 2100'              	addwfc	(main@current+7)& (0+255),w,b
  1409  0226' 6E00'              	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1410  0228'                    
  1411                           ; BSR set to: 0
  1412                           ;main.c: 99:             colourcard_flag = 0;
  1413  0228' 0E00               	movlw	0
  1414  022A' 6F00'              	movwf	_colourcard_flag& (0+255),b	;volatile
  1415                           
  1416                           ;main.c: 101:         } else if (returnhome_flag==1) {
  1417  022C' EF00' F000'        	goto	l5547
  1418  0230'                    l5583:
  1419                           
  1420                           ; BSR set to: 0
  1421  0230' 0500'              	decf	_returnhome_flag& (0+255),w,b	;volatile
  1422  0232' A4D8               	btfss	status,2,c
  1423  0234' EF00' F000'        	goto	u6441
  1424  0238' EF00' F000'        	goto	u6440
  1425  023C'                    u6441:
  1426  023C' EF00' F000'        	goto	l5589
  1427  0240'                    u6440:
  1428  0240'                    
  1429                           ; BSR set to: 0
  1430                           ;main.c: 102:             returnhome(&motorL, &motorR);
  1431  0240' 0E00'              	movlw	low main@motorL
  1432  0242' 6F00'              	movwf	returnhome@mL& (0+255),b
  1433  0244' 0E00'              	movlw	high main@motorL
  1434  0246' 6F00'              	movwf	(returnhome@mL+1)& (0+255),b
  1435  0248' 0E00'              	movlw	low main@motorR
  1436  024A' 6F00'              	movwf	returnhome@mR& (0+255),b
  1437  024C' 0E00'              	movlw	high main@motorR
  1438  024E' 6F00'              	movwf	(returnhome@mR+1)& (0+255),b
  1439  0250' EC00' F000'        	call	_returnhome	;wreg free
  1440  0254'                    
  1441                           ;main.c: 103:             returnhome_flag=2;
  1442  0254' 0E02               	movlw	2
  1443  0256' 0100               	movlb	0	; () banked
  1444  0258' 6F00'              	movwf	_returnhome_flag& (0+255),b	;volatile
  1445                           
  1446                           ;main.c: 105:         } else if (returnhome_flag==0) {
  1447  025A' EF00' F000'        	goto	l5547
  1448  025E'                    l5589:
  1449                           
  1450                           ; BSR set to: 0
  1451  025E' 5100'              	movf	_returnhome_flag& (0+255),w,b	;volatile
  1452  0260' A4D8               	btfss	status,2,c
  1453  0262' EF00' F000'        	goto	u6451
  1454  0266' EF00' F000'        	goto	u6450
  1455  026A'                    u6451:
  1456  026A' EF00' F000'        	goto	l92
  1457  026E'                    u6450:
  1458  026E'                    
  1459                           ; BSR set to: 0
  1460                           ;main.c: 106:             forward(&motorL, &motorR);
  1461  026E' 0E00'              	movlw	low main@motorL
  1462  0270' 6E00'              	movwf	forward@mL^0,c
  1463  0272' 0E00'              	movlw	high main@motorL
  1464  0274' 6E00'              	movwf	(forward@mL+1)^0,c
  1465  0276' 0E00'              	movlw	low main@motorR
  1466  0278' 6E00'              	movwf	forward@mR^0,c
  1467  027A' 0E00'              	movlw	high main@motorR
  1468  027C' 6E00'              	movwf	(forward@mR+1)^0,c
  1469  027E' EC00' F000'        	call	_forward	;wreg free
  1470  0282' EF00' F000'        	goto	l5547
  1471  0286'                    l92:
  1472                           
  1473                           ; BSR set to: 0
  1474  0286' EF00' F000'        	goto	l5547
  1475  028A' EF00' F000'        	goto	start
  1476  028E'                    __end_of_main:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _timer0_init *****************
  1480 ;; Defined at:
  1481 ;;		line 8 in file "timers.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 7
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text1
  1510  0000'                    __ptext1:
  1511                           	callstack 0
  1512  0000'                    _timer0_init:
  1513                           	callstack 23
  1514  0000'                    
  1515                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1516  0000' 50D6               	movf	214,w,c	;volatile
  1517  0002' 0B1F               	andlw	-225
  1518  0004' 0940               	iorlw	64
  1519  0006' 6ED6               	movwf	214,c	;volatile
  1520  0008'                    
  1521                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1522  0008' 88D6               	bsf	214,4,c	;volatile
  1523                           
  1524                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
  1525  000A' 50D6               	movf	214,w,c	;volatile
  1526  000C' 0BF0               	andlw	-16
  1527  000E' 0905               	iorlw	5
  1528  0010' 6ED6               	movwf	214,c	;volatile
  1529  0012'                    
  1530                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  1531  0012' 88D5               	bsf	213,4,c	;volatile
  1532                           
  1533                           ;timers.c: 14:     TMR0H=0b00111100;
  1534  0014' 0E3C               	movlw	60
  1535  0016' 6ED4               	movwf	212,c	;volatile
  1536                           
  1537                           ;timers.c: 15:     TMR0L=0b10101111;
  1538  0018' 0EAF               	movlw	175
  1539  001A' 6ED3               	movwf	211,c	;volatile
  1540  001C'                    
  1541                           ;timers.c: 16:     T0CON0bits.T0EN=1;
  1542  001C' 8ED5               	bsf	213,7,c	;volatile
  1543  001E' 0012               	return		;funcret
  1544  0020'                    __end_of_timer0_init:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _returnhome *****************
  1548 ;; Defined at:
  1549 ;;		line 294 in file "DC_motors.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  mL              2   44[BANK0 ] PTR struct .
  1552 ;;		 -> main@motorL(9), 
  1553 ;;  mR              2   46[BANK0 ] PTR struct .
  1554 ;;		 -> main@motorR(9), 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  k               1   52[BANK0 ] unsigned char 
  1557 ;;  j               1   51[BANK0 ] unsigned char 
  1558 ;;  i               1   50[BANK0 ] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1568 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;Total ram usage:        9 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 13
  1575 ;; This function calls:
  1576 ;;		_reverse
  1577 ;;		_reverseinstructions
  1578 ;;		_stop
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text2
  1585  0000'                    __ptext2:
  1586                           	callstack 0
  1587  0000'                    _returnhome:
  1588                           	callstack 17
  1589  0000'                    
  1590                           ;DC_motors.c: 295:     INTCONbits.GIE = 1;
  1591  0000' 8EF2               	bsf	242,7,c	;volatile
  1592                           
  1593                           ;DC_motors.c: 297:     unsigned char i=instr_counter;
  1594  0002' C02E' F032'        	movff	_instr_counter,returnhome@i	;volatile
  1595  0006'                    
  1596                           ;DC_motors.c: 298:     unsigned char j,k;;DC_motors.c: 299:     for (j=0; j<=i; j++) {
  1597  0006' 0E00               	movlw	0
  1598  0008' 0100               	movlb	0	; () banked
  1599  000A' 6F00'              	movwf	returnhome@j& (0+255),b
  1600  000C' EF00' F000'        	goto	l5493
  1601  0010'                    l5473:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;DC_motors.c: 300:         reverse(mL, mR);
  1605  0010' C02C' F023'        	movff	returnhome@mL,reverse@mL
  1606  0014' C02D' F024'        	movff	returnhome@mL+1,reverse@mL+1
  1607  0018' C02E' F025'        	movff	returnhome@mR,reverse@mR
  1608  001C' C02F' F026'        	movff	returnhome@mR+1,reverse@mR+1
  1609  0020' EC00' F000'        	call	_reverse	;wreg free
  1610  0024'                    
  1611                           ;DC_motors.c: 301:         for (k=0; k<=5; k++) {_delay((unsigned long)((100)*(64000000/
      +                          4000.0)));}
  1612  0024' 0E00               	movlw	0
  1613  0026' 0100               	movlb	0	; () banked
  1614  0028' 6F00'              	movwf	returnhome@k& (0+255),b
  1615  002A'                    l5481:
  1616                           
  1617                           ; BSR set to: 0
  1618  002A' 0E09               	movlw	9
  1619  002C' 0100               	movlb	0	; () banked
  1620  002E' 6F00'              	movwf	(??_returnhome+1)& (0+255),b
  1621  0030' 0E1E               	movlw	30
  1622  0032' 6F00'              	movwf	??_returnhome& (0+255),b
  1623  0034' 0EE4               	movlw	228
  1624  0036'                    u6967:
  1625  0036' 2EE8               	decfsz	wreg,f,c
  1626  0038' D7FE               	bra	u6967
  1627  003A' 2F00'              	decfsz	??_returnhome& (0+255),f,b
  1628  003C' D7FC               	bra	u6967
  1629  003E' 2F00'              	decfsz	(??_returnhome+1)& (0+255),f,b
  1630  0040' D7FA               	bra	u6967
  1631  0042' F000               	nop	
  1632  0044' 0100               	movlb	0	; () banked
  1633  0046' 2B00'              	incf	returnhome@k& (0+255),f,b
  1634  0048' 0E05               	movlw	5
  1635  004A' 6500'              	cpfsgt	returnhome@k& (0+255),b
  1636  004C' EF00' F000'        	goto	u6351
  1637  0050' EF00' F000'        	goto	u6350
  1638  0054'                    u6351:
  1639  0054' EF00' F000'        	goto	l5481
  1640  0058'                    u6350:
  1641  0058'                    
  1642                           ; BSR set to: 0
  1643                           ;DC_motors.c: 302:         stop(mL, mR);
  1644  0058' C02C' F023'        	movff	returnhome@mL,stop@mL
  1645  005C' C02D' F024'        	movff	returnhome@mL+1,stop@mL+1
  1646  0060' C02E' F025'        	movff	returnhome@mR,stop@mR
  1647  0064' C02F' F026'        	movff	returnhome@mR+1,stop@mR+1
  1648  0068' EC00' F000'        	call	_stop	;wreg free
  1649                           
  1650                           ;DC_motors.c: 304:         reverseinstructions(mL, mR);
  1651  006C' C02C' F026'        	movff	returnhome@mL,reverseinstructions@mL
  1652  0070' C02D' F027'        	movff	returnhome@mL+1,reverseinstructions@mL+1
  1653  0074' C02E' F028'        	movff	returnhome@mR,reverseinstructions@mR
  1654  0078' C02F' F029'        	movff	returnhome@mR+1,reverseinstructions@mR+1
  1655  007C' EC00' F000'        	call	_reverseinstructions	;wreg free
  1656  0080'                    
  1657                           ;DC_motors.c: 306:         dur_counter--;
  1658  0080' 0100               	movlb	0	; () banked
  1659  0082' 0700'              	decf	_dur_counter& (0+255),f,b	;volatile
  1660  0084'                    
  1661                           ; BSR set to: 0
  1662                           ;DC_motors.c: 307:         instr_counter--;
  1663  0084' 0700'              	decf	_instr_counter& (0+255),f,b	;volatile
  1664  0086'                    
  1665                           ; BSR set to: 0
  1666                           ;DC_motors.c: 308:     }
  1667  0086' 2B00'              	incf	returnhome@j& (0+255),f,b
  1668  0088'                    l5493:
  1669                           
  1670                           ; BSR set to: 0
  1671  0088' 5100'              	movf	returnhome@j& (0+255),w,b
  1672  008A' 5D00'              	subwf	returnhome@i& (0+255),w,b
  1673  008C' B0D8               	btfsc	status,0,c
  1674  008E' EF00' F000'        	goto	u6361
  1675  0092' EF00' F000'        	goto	u6360
  1676  0096'                    u6361:
  1677  0096' EF00' F000'        	goto	l5473
  1678  009A'                    u6360:
  1679  009A'                    
  1680                           ; BSR set to: 0
  1681                           ;DC_motors.c: 309:     reverse(mL, mR);
  1682  009A' C02C' F023'        	movff	returnhome@mL,reverse@mL
  1683  009E' C02D' F024'        	movff	returnhome@mL+1,reverse@mL+1
  1684  00A2' C02E' F025'        	movff	returnhome@mR,reverse@mR
  1685  00A6' C02F' F026'        	movff	returnhome@mR+1,reverse@mR+1
  1686  00AA' EC00' F000'        	call	_reverse	;wreg free
  1687  00AE'                    
  1688                           ;DC_motors.c: 310:     for (k=0; k<=5; k++) {_delay((unsigned long)((100)*(64000000/4000
      +                          .0)));}
  1689  00AE' 0E00               	movlw	0
  1690  00B0' 0100               	movlb	0	; () banked
  1691  00B2' 6F00'              	movwf	returnhome@k& (0+255),b
  1692  00B4'                    l5503:
  1693                           
  1694                           ; BSR set to: 0
  1695  00B4' 0E09               	movlw	9
  1696  00B6' 0100               	movlb	0	; () banked
  1697  00B8' 6F00'              	movwf	(??_returnhome+1)& (0+255),b
  1698  00BA' 0E1E               	movlw	30
  1699  00BC' 6F00'              	movwf	??_returnhome& (0+255),b
  1700  00BE' 0EE4               	movlw	228
  1701  00C0'                    u6977:
  1702  00C0' 2EE8               	decfsz	wreg,f,c
  1703  00C2' D7FE               	bra	u6977
  1704  00C4' 2F00'              	decfsz	??_returnhome& (0+255),f,b
  1705  00C6' D7FC               	bra	u6977
  1706  00C8' 2F00'              	decfsz	(??_returnhome+1)& (0+255),f,b
  1707  00CA' D7FA               	bra	u6977
  1708  00CC' F000               	nop	
  1709  00CE' 0100               	movlb	0	; () banked
  1710  00D0' 2B00'              	incf	returnhome@k& (0+255),f,b
  1711  00D2' 0E05               	movlw	5
  1712  00D4' 6500'              	cpfsgt	returnhome@k& (0+255),b
  1713  00D6' EF00' F000'        	goto	u6371
  1714  00DA' EF00' F000'        	goto	u6370
  1715  00DE'                    u6371:
  1716  00DE' EF00' F000'        	goto	l5503
  1717  00E2'                    u6370:
  1718  00E2'                    
  1719                           ; BSR set to: 0
  1720                           ;DC_motors.c: 311:     stop(mL, mR);
  1721  00E2' C02C' F023'        	movff	returnhome@mL,stop@mL
  1722  00E6' C02D' F024'        	movff	returnhome@mL+1,stop@mL+1
  1723  00EA' C02E' F025'        	movff	returnhome@mR,stop@mR
  1724  00EE' C02F' F026'        	movff	returnhome@mR+1,stop@mR+1
  1725  00F2' EC00' F000'        	call	_stop	;wreg free
  1726  00F6' 0012               	return		;funcret
  1727  00F8'                    __end_of_returnhome:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _reverseinstructions *****************
  1731 ;; Defined at:
  1732 ;;		line 267 in file "DC_motors.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  mL              2   38[BANK0 ] PTR struct .
  1735 ;;		 -> main@motorL(9), 
  1736 ;;  mR              2   40[BANK0 ] PTR struct .
  1737 ;;		 -> main@motorR(9), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1749 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;Total ram usage:        6 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 12
  1756 ;; This function calls:
  1757 ;;		_forward
  1758 ;;		_instructions
  1759 ;;		_stop
  1760 ;;		_turnleft
  1761 ;;		_turnright
  1762 ;; This function is called by:
  1763 ;;		_returnhome
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text3
  1768  0000'                    __ptext3:
  1769                           	callstack 0
  1770  0000'                    _reverseinstructions:
  1771                           	callstack 17
  1772  0000'                    
  1773                           ;DC_motors.c: 268:     if (instr[instr_counter]==1) {instructions(mL, mR, 2);}
  1774  0000' 0100               	movlb	0	; () banked
  1775  0002' 5100'              	movf	_instr_counter& (0+255),w,b	;volatile
  1776  0004' 0D02               	mullw	2
  1777  0006' 0E00'              	movlw	low _instr
  1778  0008' 24F3               	addwf	243,w,c
  1779  000A' 6ED9               	movwf	fsr2l,c
  1780  000C' 0E00'              	movlw	high _instr
  1781  000E' 20F4               	addwfc	prodh,w,c
  1782  0010' 6EDA               	movwf	fsr2h,c
  1783  0012' 04DE               	decf	postinc2,w,c
  1784  0014' 10DE               	iorwf	postinc2,w,c
  1785  0016' A4D8               	btfss	status,2,c
  1786  0018' EF00' F000'        	goto	u5941
  1787  001C' EF00' F000'        	goto	u5940
  1788  0020'                    u5941:
  1789  0020' EF00' F000'        	goto	l5269
  1790  0024'                    u5940:
  1791  0024'                    
  1792                           ; BSR set to: 0
  1793  0024' C026' F021'        	movff	reverseinstructions@mL,instructions@mL
  1794  0028' C027' F022'        	movff	reverseinstructions@mL+1,instructions@mL+1
  1795  002C' C028' F023'        	movff	reverseinstructions@mR,instructions@mR
  1796  0030' C029' F024'        	movff	reverseinstructions@mR+1,instructions@mR+1
  1797  0034' 0E02               	movlw	2
  1798  0036' 6F00'              	movwf	instructions@num& (0+255),b
  1799  0038' EC00' F000'        	call	_instructions	;wreg free
  1800  003C' EF00' F000'        	goto	l720
  1801  0040'                    l5269:
  1802                           
  1803                           ; BSR set to: 0
  1804  0040' 5100'              	movf	_instr_counter& (0+255),w,b	;volatile
  1805  0042' 0D02               	mullw	2
  1806  0044' 0E00'              	movlw	low _instr
  1807  0046' 24F3               	addwf	243,w,c
  1808  0048' 6ED9               	movwf	fsr2l,c
  1809  004A' 0E00'              	movlw	high _instr
  1810  004C' 20F4               	addwfc	prodh,w,c
  1811  004E' 6EDA               	movwf	fsr2h,c
  1812  0050' 0E02               	movlw	2
  1813  0052' 18DE               	xorwf	postinc2,w,c
  1814  0054' 10DE               	iorwf	postinc2,w,c
  1815  0056' A4D8               	btfss	status,2,c
  1816  0058' EF00' F000'        	goto	u5951
  1817  005C' EF00' F000'        	goto	u5950
  1818  0060'                    u5951:
  1819  0060' EF00' F000'        	goto	l5273
  1820  0064'                    u5950:
  1821  0064'                    
  1822                           ; BSR set to: 0
  1823  0064' C026' F021'        	movff	reverseinstructions@mL,instructions@mL
  1824  0068' C027' F022'        	movff	reverseinstructions@mL+1,instructions@mL+1
  1825  006C' C028' F023'        	movff	reverseinstructions@mR,instructions@mR
  1826  0070' C029' F024'        	movff	reverseinstructions@mR+1,instructions@mR+1
  1827  0074' 0E01               	movlw	1
  1828  0076' 6F00'              	movwf	instructions@num& (0+255),b
  1829  0078' EC00' F000'        	call	_instructions	;wreg free
  1830  007C' EF00' F000'        	goto	l720
  1831  0080'                    l5273:
  1832                           
  1833                           ; BSR set to: 0
  1834  0080' 5100'              	movf	_instr_counter& (0+255),w,b	;volatile
  1835  0082' 0D02               	mullw	2
  1836  0084' 0E00'              	movlw	low _instr
  1837  0086' 24F3               	addwf	243,w,c
  1838  0088' 6ED9               	movwf	fsr2l,c
  1839  008A' 0E00'              	movlw	high _instr
  1840  008C' 20F4               	addwfc	prodh,w,c
  1841  008E' 6EDA               	movwf	fsr2h,c
  1842  0090' 0E03               	movlw	3
  1843  0092' 18DE               	xorwf	postinc2,w,c
  1844  0094' 10DE               	iorwf	postinc2,w,c
  1845  0096' A4D8               	btfss	status,2,c
  1846  0098' EF00' F000'        	goto	u5961
  1847  009C' EF00' F000'        	goto	u5960
  1848  00A0'                    u5961:
  1849  00A0' EF00' F000'        	goto	l5277
  1850  00A4'                    u5960:
  1851  00A4'                    
  1852                           ; BSR set to: 0
  1853  00A4' C026' F021'        	movff	reverseinstructions@mL,instructions@mL
  1854  00A8' C027' F022'        	movff	reverseinstructions@mL+1,instructions@mL+1
  1855  00AC' C028' F023'        	movff	reverseinstructions@mR,instructions@mR
  1856  00B0' C029' F024'        	movff	reverseinstructions@mR+1,instructions@mR+1
  1857  00B4' 0E03               	movlw	3
  1858  00B6' 6F00'              	movwf	instructions@num& (0+255),b
  1859  00B8' EC00' F000'        	call	_instructions	;wreg free
  1860  00BC' EF00' F000'        	goto	l720
  1861  00C0'                    l5277:
  1862                           
  1863                           ; BSR set to: 0
  1864  00C0' 5100'              	movf	_instr_counter& (0+255),w,b	;volatile
  1865  00C2' 0D02               	mullw	2
  1866  00C4' 0E00'              	movlw	low _instr
  1867  00C6' 24F3               	addwf	243,w,c
  1868  00C8' 6ED9               	movwf	fsr2l,c
  1869  00CA' 0E00'              	movlw	high _instr
  1870  00CC' 20F4               	addwfc	prodh,w,c
  1871  00CE' 6EDA               	movwf	fsr2h,c
  1872  00D0' 0E04               	movlw	4
  1873  00D2' 18DE               	xorwf	postinc2,w,c
  1874  00D4' 10DE               	iorwf	postinc2,w,c
  1875  00D6' A4D8               	btfss	status,2,c
  1876  00D8' EF00' F000'        	goto	u5971
  1877  00DC' EF00' F000'        	goto	u5970
  1878  00E0'                    u5971:
  1879  00E0' EF00' F000'        	goto	l5285
  1880  00E4'                    u5970:
  1881  00E4'                    
  1882                           ; BSR set to: 0
  1883                           ;DC_motors.c: 272:         _delay((unsigned long)((2500)*(64000000/4000.0)));
  1884  00E4' 0ECB               	movlw	203
  1885  00E6' 0100               	movlb	0	; () banked
  1886  00E8' 6F00'              	movwf	(??_reverseinstructions+1)& (0+255),b
  1887  00EA' 0EEC               	movlw	236
  1888  00EC' 6F00'              	movwf	??_reverseinstructions& (0+255),b
  1889  00EE' 0E84               	movlw	132
  1890  00F0'                    u6987:
  1891  00F0' 2EE8               	decfsz	wreg,f,c
  1892  00F2' D7FE               	bra	u6987
  1893  00F4' 2F00'              	decfsz	??_reverseinstructions& (0+255),f,b
  1894  00F6' D7FC               	bra	u6987
  1895  00F8' 2F00'              	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1896  00FA' D7FA               	bra	u6987
  1897  00FC' F000               	nop	
  1898  00FE'                    
  1899                           ;DC_motors.c: 273:         stop(mL, mR);
  1900  00FE' C026' F023'        	movff	reverseinstructions@mL,stop@mL
  1901  0102' C027' F024'        	movff	reverseinstructions@mL+1,stop@mL+1
  1902  0106' C028' F025'        	movff	reverseinstructions@mR,stop@mR
  1903  010A' C029' F026'        	movff	reverseinstructions@mR+1,stop@mR+1
  1904  010E' EC00' F000'        	call	_stop	;wreg free
  1905  0112'                    
  1906                           ;DC_motors.c: 274:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1907  0112' 0E09               	movlw	9
  1908  0114' 0100               	movlb	0	; () banked
  1909  0116' 6F00'              	movwf	(??_reverseinstructions+1)& (0+255),b
  1910  0118' 0E1E               	movlw	30
  1911  011A' 6F00'              	movwf	??_reverseinstructions& (0+255),b
  1912  011C' 0EE4               	movlw	228
  1913  011E'                    u6997:
  1914  011E' 2EE8               	decfsz	wreg,f,c
  1915  0120' D7FE               	bra	u6997
  1916  0122' 2F00'              	decfsz	??_reverseinstructions& (0+255),f,b
  1917  0124' D7FC               	bra	u6997
  1918  0126' 2F00'              	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1919  0128' D7FA               	bra	u6997
  1920  012A' F000               	nop	
  1921                           
  1922                           ;DC_motors.c: 275:         turnleft(mL, mR, 90);
  1923  012C' C026' F011'        	movff	reverseinstructions@mL,turnleft@mL
  1924  0130' C027' F012'        	movff	reverseinstructions@mL+1,turnleft@mL+1
  1925  0134' C028' F013'        	movff	reverseinstructions@mR,turnleft@mR
  1926  0138' C029' F014'        	movff	reverseinstructions@mR+1,turnleft@mR+1
  1927  013C' 0E00               	movlw	0
  1928  013E' 0100               	movlb	0	; () banked
  1929  0140' 6F00'              	movwf	(turnleft@deg+1)& (0+255),b
  1930  0142' 0E5A               	movlw	90
  1931  0144' 6F00'              	movwf	turnleft@deg& (0+255),b
  1932  0146' EC00' F000'        	call	_turnleft	;wreg free
  1933                           
  1934                           ;DC_motors.c: 276:         stop(mL, mR);
  1935  014A' C026' F023'        	movff	reverseinstructions@mL,stop@mL
  1936  014E' C027' F024'        	movff	reverseinstructions@mL+1,stop@mL+1
  1937  0152' C028' F025'        	movff	reverseinstructions@mR,stop@mR
  1938  0156' C029' F026'        	movff	reverseinstructions@mR+1,stop@mR+1
  1939  015A' EC00' F000'        	call	_stop	;wreg free
  1940                           
  1941                           ;DC_motors.c: 277:     }
  1942  015E' EF00' F000'        	goto	l720
  1943  0162'                    l5285:
  1944                           
  1945                           ; BSR set to: 0
  1946  0162' 5100'              	movf	_instr_counter& (0+255),w,b	;volatile
  1947  0164' 0D02               	mullw	2
  1948  0166' 0E00'              	movlw	low _instr
  1949  0168' 24F3               	addwf	243,w,c
  1950  016A' 6ED9               	movwf	fsr2l,c
  1951  016C' 0E00'              	movlw	high _instr
  1952  016E' 20F4               	addwfc	prodh,w,c
  1953  0170' 6EDA               	movwf	fsr2h,c
  1954  0172' 0E05               	movlw	5
  1955  0174' 18DE               	xorwf	postinc2,w,c
  1956  0176' 10DE               	iorwf	postinc2,w,c
  1957  0178' A4D8               	btfss	status,2,c
  1958  017A' EF00' F000'        	goto	u5981
  1959  017E' EF00' F000'        	goto	u5980
  1960  0182'                    u5981:
  1961  0182' EF00' F000'        	goto	l5297
  1962  0186'                    u5980:
  1963  0186'                    
  1964                           ; BSR set to: 0
  1965                           ;DC_motors.c: 279:         forward(mL, mR);
  1966  0186' C026' F023'        	movff	reverseinstructions@mL,forward@mL
  1967  018A' C027' F024'        	movff	reverseinstructions@mL+1,forward@mL+1
  1968  018E' C028' F025'        	movff	reverseinstructions@mR,forward@mR
  1969  0192' C029' F026'        	movff	reverseinstructions@mR+1,forward@mR+1
  1970  0196' EC00' F000'        	call	_forward	;wreg free
  1971  019A'                    
  1972                           ;DC_motors.c: 280:         _delay((unsigned long)((2500)*(64000000/4000.0)));
  1973  019A' 0ECB               	movlw	203
  1974  019C' 0100               	movlb	0	; () banked
  1975  019E' 6F00'              	movwf	(??_reverseinstructions+1)& (0+255),b
  1976  01A0' 0EEC               	movlw	236
  1977  01A2' 6F00'              	movwf	??_reverseinstructions& (0+255),b
  1978  01A4' 0E84               	movlw	132
  1979  01A6'                    u7007:
  1980  01A6' 2EE8               	decfsz	wreg,f,c
  1981  01A8' D7FE               	bra	u7007
  1982  01AA' 2F00'              	decfsz	??_reverseinstructions& (0+255),f,b
  1983  01AC' D7FC               	bra	u7007
  1984  01AE' 2F00'              	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1985  01B0' D7FA               	bra	u7007
  1986  01B2' F000               	nop	
  1987  01B4'                    
  1988                           ;DC_motors.c: 281:         stop(mL, mR);
  1989  01B4' C026' F023'        	movff	reverseinstructions@mL,stop@mL
  1990  01B8' C027' F024'        	movff	reverseinstructions@mL+1,stop@mL+1
  1991  01BC' C028' F025'        	movff	reverseinstructions@mR,stop@mR
  1992  01C0' C029' F026'        	movff	reverseinstructions@mR+1,stop@mR+1
  1993  01C4' EC00' F000'        	call	_stop	;wreg free
  1994                           
  1995                           ;DC_motors.c: 282:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1996  01C8' 0E09               	movlw	9
  1997  01CA' 0100               	movlb	0	; () banked
  1998  01CC' 6F00'              	movwf	(??_reverseinstructions+1)& (0+255),b
  1999  01CE' 0E1E               	movlw	30
  2000  01D0' 6F00'              	movwf	??_reverseinstructions& (0+255),b
  2001  01D2' 0EE4               	movlw	228
  2002  01D4'                    u7017:
  2003  01D4' 2EE8               	decfsz	wreg,f,c
  2004  01D6' D7FE               	bra	u7017
  2005  01D8' 2F00'              	decfsz	??_reverseinstructions& (0+255),f,b
  2006  01DA' D7FC               	bra	u7017
  2007  01DC' 2F00'              	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  2008  01DE' D7FA               	bra	u7017
  2009  01E0' F000               	nop	
  2010  01E2'                    
  2011                           ;DC_motors.c: 283:         turnright(mL, mR, 90);
  2012  01E2' C026' F011'        	movff	reverseinstructions@mL,turnright@mL
  2013  01E6' C027' F012'        	movff	reverseinstructions@mL+1,turnright@mL+1
  2014  01EA' C028' F013'        	movff	reverseinstructions@mR,turnright@mR
  2015  01EE' C029' F014'        	movff	reverseinstructions@mR+1,turnright@mR+1
  2016  01F2' 0E00               	movlw	0
  2017  01F4' 0100               	movlb	0	; () banked
  2018  01F6' 6F00'              	movwf	(turnright@deg+1)& (0+255),b
  2019  01F8' 0E5A               	movlw	90
  2020  01FA' 6F00'              	movwf	turnright@deg& (0+255),b
  2021  01FC' EC00' F000'        	call	_turnright	;wreg free
  2022  0200'                    
  2023                           ;DC_motors.c: 284:         stop(mL, mR);
  2024  0200' C026' F023'        	movff	reverseinstructions@mL,stop@mL
  2025  0204' C027' F024'        	movff	reverseinstructions@mL+1,stop@mL+1
  2026  0208' C028' F025'        	movff	reverseinstructions@mR,stop@mR
  2027  020C' C029' F026'        	movff	reverseinstructions@mR+1,stop@mR+1
  2028  0210' EC00' F000'        	call	_stop	;wreg free
  2029                           
  2030                           ;DC_motors.c: 285:     }
  2031  0214' EF00' F000'        	goto	l720
  2032  0218'                    l5297:
  2033                           
  2034                           ; BSR set to: 0
  2035  0218' 5100'              	movf	_instr_counter& (0+255),w,b	;volatile
  2036  021A' 0D02               	mullw	2
  2037  021C' 0E00'              	movlw	low _instr
  2038  021E' 24F3               	addwf	243,w,c
  2039  0220' 6ED9               	movwf	fsr2l,c
  2040  0222' 0E00'              	movlw	high _instr
  2041  0224' 20F4               	addwfc	prodh,w,c
  2042  0226' 6EDA               	movwf	fsr2h,c
  2043  0228' 0E06               	movlw	6
  2044  022A' 18DE               	xorwf	postinc2,w,c
  2045  022C' 10DE               	iorwf	postinc2,w,c
  2046  022E' A4D8               	btfss	status,2,c
  2047  0230' EF00' F000'        	goto	u5991
  2048  0234' EF00' F000'        	goto	u5990
  2049  0238'                    u5991:
  2050  0238' EF00' F000'        	goto	l5301
  2051  023C'                    u5990:
  2052  023C'                    
  2053                           ; BSR set to: 0
  2054  023C' C026' F021'        	movff	reverseinstructions@mL,instructions@mL
  2055  0240' C027' F022'        	movff	reverseinstructions@mL+1,instructions@mL+1
  2056  0244' C028' F023'        	movff	reverseinstructions@mR,instructions@mR
  2057  0248' C029' F024'        	movff	reverseinstructions@mR+1,instructions@mR+1
  2058  024C' 0E07               	movlw	7
  2059  024E' 6F00'              	movwf	instructions@num& (0+255),b
  2060  0250' EC00' F000'        	call	_instructions	;wreg free
  2061  0254' EF00' F000'        	goto	l720
  2062  0258'                    l5301:
  2063                           
  2064                           ; BSR set to: 0
  2065  0258' 5100'              	movf	_instr_counter& (0+255),w,b	;volatile
  2066  025A' 0D02               	mullw	2
  2067  025C' 0E00'              	movlw	low _instr
  2068  025E' 24F3               	addwf	243,w,c
  2069  0260' 6ED9               	movwf	fsr2l,c
  2070  0262' 0E00'              	movlw	high _instr
  2071  0264' 20F4               	addwfc	prodh,w,c
  2072  0266' 6EDA               	movwf	fsr2h,c
  2073  0268' 0E07               	movlw	7
  2074  026A' 18DE               	xorwf	postinc2,w,c
  2075  026C' 10DE               	iorwf	postinc2,w,c
  2076  026E' A4D8               	btfss	status,2,c
  2077  0270' EF00' F000'        	goto	u6001
  2078  0274' EF00' F000'        	goto	u6000
  2079  0278'                    u6001:
  2080  0278' EF00' F000'        	goto	l714
  2081  027C'                    u6000:
  2082  027C'                    
  2083                           ; BSR set to: 0
  2084  027C' C026' F021'        	movff	reverseinstructions@mL,instructions@mL
  2085  0280' C027' F022'        	movff	reverseinstructions@mL+1,instructions@mL+1
  2086  0284' C028' F023'        	movff	reverseinstructions@mR,instructions@mR
  2087  0288' C029' F024'        	movff	reverseinstructions@mR+1,instructions@mR+1
  2088  028C' 0E06               	movlw	6
  2089  028E' 6F00'              	movwf	instructions@num& (0+255),b
  2090  0290' EC00' F000'        	call	_instructions	;wreg free
  2091  0294' EF00' F000'        	goto	l720
  2092  0298'                    l714:
  2093  0298'                    l720:
  2094  0298' 0012               	return		;funcret
  2095  029A'                    __end_of_reverseinstructions:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _interrupts_init *****************
  2099 ;; Defined at:
  2100 ;;		line 12 in file "interrupts.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 12
  2121 ;; This function calls:
  2122 ;;		_interrupts_clear
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text4
  2129  0000'                    __ptext4:
  2130                           	callstack 0
  2131  0000'                    _interrupts_init:
  2132                           	callstack 18
  2133  0000'                    
  2134                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  2135  0000' 8282               	bsf	130,1,c	;volatile
  2136                           
  2137                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  2138  0002' 010E               	movlb	14	; () banked
  2139  0004' 939A               	bcf	154,1,b	;volatile
  2140  0006'                    
  2141                           ; BSR set to: 14
  2142                           ;interrupts.c: 15:     INT1PPS=0x09;
  2143  0006' 0E09               	movlw	9
  2144  0008' 010D               	movlb	13	; () banked
  2145  000A' 6FF1               	movwf	241,b	;volatile
  2146  000C'                    
  2147                           ; BSR set to: 13
  2148                           ;interrupts.c: 17:     PIE0bits.INT1IE = 1;
  2149  000C' 010E               	movlb	14	; () banked
  2150  000E' 8329               	bsf	41,1,b	;volatile
  2151  0010'                    
  2152                           ; BSR set to: 14
  2153                           ;interrupts.c: 18:     PIE0bits.TMR0IE = 1;
  2154  0010' 8B29               	bsf	41,5,b	;volatile
  2155  0012'                    
  2156                           ; BSR set to: 14
  2157                           ;interrupts.c: 20:     IPR0bits.INT1IP = 1;
  2158  0012' 831F               	bsf	31,1,b	;volatile
  2159  0014'                    
  2160                           ; BSR set to: 14
  2161                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 0;
  2162  0014' 9B1F               	bcf	31,5,b	;volatile
  2163  0016'                    
  2164                           ; BSR set to: 14
  2165                           ;interrupts.c: 23:     interrupts_clear();
  2166  0016' EC00' F000'        	call	_interrupts_clear	;wreg free
  2167  001A'                    
  2168                           ;interrupts.c: 25:     INTCONbits.INT1EDG = 0;
  2169  001A' 92F2               	bcf	242,1,c	;volatile
  2170  001C'                    
  2171                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  2172  001C' 8AF2               	bsf	242,5,c	;volatile
  2173  001E'                    
  2174                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  2175  001E' 8CF2               	bsf	242,6,c	;volatile
  2176  0020'                    
  2177                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  2178  0020' 8EF2               	bsf	242,7,c	;volatile
  2179  0022' 0012               	return		;funcret
  2180  0024'                    __end_of_interrupts_init:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _interrupts_clear *****************
  2184 ;; Defined at:
  2185 ;;		line 37 in file "interrupts.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 11
  2206 ;; This function calls:
  2207 ;;		_I2C_2_Master_Start
  2208 ;;		_I2C_2_Master_Stop
  2209 ;;		_I2C_2_Master_Write
  2210 ;;		_interrupts_colourclick
  2211 ;; This function is called by:
  2212 ;;		_interrupts_init
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text5
  2217  0000'                    __ptext5:
  2218                           	callstack 0
  2219  0000'                    _interrupts_clear:
  2220                           	callstack 18
  2221  0000'                    
  2222                           ;interrupts.c: 38:     I2C_2_Master_Start();
  2223  0000' EC00' F000'        	call	_I2C_2_Master_Start	;wreg free
  2224                           
  2225                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2226  0004' 0E52               	movlw	82
  2227  0006' EC00' F000'        	call	_I2C_2_Master_Write
  2228                           
  2229                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  2230  000A' 0EE6               	movlw	230
  2231  000C' EC00' F000'        	call	_I2C_2_Master_Write
  2232                           
  2233                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  2234  0010' EC00' F000'        	call	_I2C_2_Master_Stop	;wreg free
  2235                           
  2236                           ;interrupts.c: 43:     interrupts_colourclick();
  2237  0014' EC00' F000'        	call	_interrupts_colourclick	;wreg free
  2238  0018' 0012               	return		;funcret
  2239  001A'                    __end_of_interrupts_clear:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _interrupts_colourclick *****************
  2243 ;; Defined at:
  2244 ;;		line 50 in file "interrupts.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;Total ram usage:        1 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 10
  2265 ;; This function calls:
  2266 ;;		_colourclick_writetoaddr
  2267 ;; This function is called by:
  2268 ;;		_interrupts_clear
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text6
  2273  0000'                    __ptext6:
  2274                           	callstack 0
  2275  0000'                    _interrupts_colourclick:
  2276                           	callstack 18
  2277  0000'                    
  2278                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  2279  0000' 0E13               	movlw	19
  2280  0002' 6E00'              	movwf	colourclick_writetoaddr@value^0,c
  2281  0004' 0E00               	movlw	0
  2282  0006' EC00' F000'        	call	_colourclick_writetoaddr
  2283  000A'                    
  2284                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2285  000A' 0E3F               	movlw	63
  2286  000C' 6E00'              	movwf	??_interrupts_colourclick^0,c
  2287  000E' 0E55               	movlw	85
  2288  0010'                    u7027:
  2289  0010' 2EE8               	decfsz	wreg,f,c
  2290  0012' D7FE               	bra	u7027
  2291  0014' 2E00'              	decfsz	??_interrupts_colourclick^0,f,c
  2292  0016' D7FC               	bra	u7027
  2293  0018' F000               	nop	
  2294  001A'                    
  2295                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  2296  001A' 0E04               	movlw	4
  2297  001C' 6E00'              	movwf	colourclick_writetoaddr@value^0,c
  2298  001E' 0E0C               	movlw	12
  2299  0020' EC00' F000'        	call	_colourclick_writetoaddr
  2300  0024'                    
  2301                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  2302  0024' C002' F00C'        	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  2303  0028' 0E04               	movlw	4
  2304  002A' EC00' F000'        	call	_colourclick_writetoaddr
  2305  002E'                    
  2306                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  2307  002E' 5000'              	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2308  0030' 6E00'              	movwf	colourclick_writetoaddr@value^0,c
  2309  0032' 0E05               	movlw	5
  2310  0034' EC00' F000'        	call	_colourclick_writetoaddr
  2311  0038'                    
  2312                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  2313  0038' C000' F00C'        	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  2314  003C' 0E06               	movlw	6
  2315  003E' EC00' F000'        	call	_colourclick_writetoaddr
  2316  0042'                    
  2317                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  2318  0042' 5000'              	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2319  0044' 6E00'              	movwf	colourclick_writetoaddr@value^0,c
  2320  0046' 0E07               	movlw	7
  2321  0048' EC00' F000'        	call	_colourclick_writetoaddr
  2322  004C' 0012               	return		;funcret
  2323  004E'                    __end_of_interrupts_colourclick:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _colourclick_init *****************
  2327 ;; Defined at:
  2328 ;;		line 12 in file "colour_click.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;Total ram usage:        1 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 10
  2349 ;; This function calls:
  2350 ;;		_I2C_2_Master_Init
  2351 ;;		_colourclickLEDs_init
  2352 ;;		_colourclick_writetoaddr
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text7
  2359  0000'                    __ptext7:
  2360                           	callstack 0
  2361  0000'                    _colourclick_init:
  2362                           	callstack 20
  2363  0000'                    
  2364                           ;colour_click.c: 14:     I2C_2_Master_Init();
  2365  0000' EC00' F000'        	call	_I2C_2_Master_Init	;wreg free
  2366  0004'                    
  2367                           ;colour_click.c: 17:   colourclick_writetoaddr(0x00, 0x01);
  2368  0004' 0E01               	movlw	1
  2369  0006' 6E00'              	movwf	colourclick_writetoaddr@value^0,c
  2370  0008' 0E00               	movlw	0
  2371  000A' EC00' F000'        	call	_colourclick_writetoaddr
  2372  000E'                    
  2373                           ;colour_click.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2374  000E' 0E3F               	movlw	63
  2375  0010' 6E00'              	movwf	??_colourclick_init^0,c
  2376  0012' 0E55               	movlw	85
  2377  0014'                    u7037:
  2378  0014' 2EE8               	decfsz	wreg,f,c
  2379  0016' D7FE               	bra	u7037
  2380  0018' 2E00'              	decfsz	??_colourclick_init^0,f,c
  2381  001A' D7FC               	bra	u7037
  2382  001C' F000               	nop	
  2383  001E'                    
  2384                           ;colour_click.c: 21:  colourclick_writetoaddr(0x00, 0x03);
  2385  001E' 0E03               	movlw	3
  2386  0020' 6E00'              	movwf	colourclick_writetoaddr@value^0,c
  2387  0022' 0E00               	movlw	0
  2388  0024' EC00' F000'        	call	_colourclick_writetoaddr
  2389  0028'                    
  2390                           ;colour_click.c: 24:  colourclick_writetoaddr(0x01, 0xD5);
  2391  0028' 0ED5               	movlw	213
  2392  002A' 6E00'              	movwf	colourclick_writetoaddr@value^0,c
  2393  002C' 0E01               	movlw	1
  2394  002E' EC00' F000'        	call	_colourclick_writetoaddr
  2395  0032'                    
  2396                           ;colour_click.c: 26:     colourclickLEDs_init();
  2397  0032' EC00' F000'        	call	_colourclickLEDs_init	;wreg free
  2398  0036' 0012               	return		;funcret
  2399  0038'                    __end_of_colourclick_init:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _colourclick_writetoaddr *****************
  2403 ;; Defined at:
  2404 ;;		line 33 in file "colour_click.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  address         1    wreg     unsigned char 
  2407 ;;  value           1   12[COMRAM] unsigned char 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  address         1   13[COMRAM] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2419 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;Total ram usage:        2 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 9
  2426 ;; This function calls:
  2427 ;;		_I2C_2_Master_Start
  2428 ;;		_I2C_2_Master_Stop
  2429 ;;		_I2C_2_Master_Write
  2430 ;; This function is called by:
  2431 ;;		_interrupts_colourclick
  2432 ;;		_colourclick_init
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text8
  2437  0000'                    __ptext8:
  2438                           	callstack 0
  2439  0000'                    _colourclick_writetoaddr:
  2440                           	callstack 18
  2441                           
  2442                           ;incstack = 0
  2443                           ;colourclick_writetoaddr@address stored from wreg
  2444  0000' 6E00'              	movwf	colourclick_writetoaddr@address^0,c
  2445  0002'                    
  2446                           ;colour_click.c: 34:     I2C_2_Master_Start();
  2447  0002' EC00' F000'        	call	_I2C_2_Master_Start	;wreg free
  2448                           
  2449                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  2450  0006' 0E52               	movlw	82
  2451  0008' EC00' F000'        	call	_I2C_2_Master_Write
  2452                           
  2453                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  2454  000C' 5000'              	movf	colourclick_writetoaddr@address^0,w,c
  2455  000E' 0980               	iorlw	128
  2456  0010' EC00' F000'        	call	_I2C_2_Master_Write
  2457                           
  2458                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  2459  0014' 5000'              	movf	colourclick_writetoaddr@value^0,w,c
  2460  0016' EC00' F000'        	call	_I2C_2_Master_Write
  2461                           
  2462                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  2463  001A' EC00' F000'        	call	_I2C_2_Master_Stop	;wreg free
  2464  001E' 0012               	return		;funcret
  2465  0020'                    __end_of_colourclick_writetoaddr:
  2466                           	callstack 0
  2467                           
  2468 ;; *************** function _colourclickLEDs_init *****************
  2469 ;; Defined at:
  2470 ;;		line 32 in file "buttons_n_LEDs.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 8
  2491 ;; This function calls:
  2492 ;;		_colourclickLEDs_C
  2493 ;; This function is called by:
  2494 ;;		_colourclick_init
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text9
  2499  0000'                    __ptext9:
  2500                           	callstack 0
  2501  0000'                    _colourclickLEDs_init:
  2502                           	callstack 21
  2503  0000'                    
  2504                           ;buttons_n_LEDs.c: 33:     colourclickLEDs_C(0);
  2505  0000' 0E00               	movlw	0
  2506  0002' EC00' F000'        	call	_colourclickLEDs_C
  2507  0006'                    
  2508                           ;buttons_n_LEDs.c: 35:     TRISGbits.TRISG1 = 0;
  2509  0006' 9287               	bcf	135,1,c	;volatile
  2510  0008'                    
  2511                           ;buttons_n_LEDs.c: 36:     TRISAbits.TRISA4 = 0;
  2512  0008' 9881               	bcf	129,4,c	;volatile
  2513  000A'                    
  2514                           ;buttons_n_LEDs.c: 37:     TRISFbits.TRISF7 = 0;
  2515  000A' 9E86               	bcf	134,7,c	;volatile
  2516  000C' 0012               	return		;funcret
  2517  000E'                    __end_of_colourclickLEDs_init:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _I2C_2_Master_Init *****************
  2521 ;; Defined at:
  2522 ;;		line 8 in file "I2C.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 7
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_colourclick_init
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text10
  2551  0000'                    __ptext10:
  2552                           	callstack 0
  2553  0000'                    _I2C_2_Master_Init:
  2554                           	callstack 22
  2555  0000'                    
  2556                           ;I2C.c: 10:   SSP2CON1bits.SSPM= 0b1000;
  2557  0000' 010E               	movlb	14	; () banked
  2558  0002' 51D9               	movf	217,w,b	;volatile
  2559  0004' 0BF0               	andlw	-16
  2560  0006' 0908               	iorlw	8
  2561  0008' 6FD9               	movwf	217,b	;volatile
  2562  000A'                    
  2563                           ; BSR set to: 14
  2564                           ;I2C.c: 11:   SSP2CON1bits.SSPEN = 1;
  2565  000A' 8BD9               	bsf	217,5,b	;volatile
  2566                           
  2567                           ;I2C.c: 12:   SSP2ADD = (64000000/(4*100000))-1;
  2568  000C' 0E9F               	movlw	159
  2569  000E' 6FD6               	movwf	214,b	;volatile
  2570  0010'                    
  2571                           ; BSR set to: 14
  2572                           ;I2C.c: 15:   TRISDbits.TRISD5 = 1;
  2573  0010' 8A84               	bsf	132,5,c	;volatile
  2574  0012'                    
  2575                           ; BSR set to: 14
  2576                           ;I2C.c: 16:   TRISDbits.TRISD6 = 1;
  2577  0012' 8C84               	bsf	132,6,c	;volatile
  2578  0014'                    
  2579                           ; BSR set to: 14
  2580                           ;I2C.c: 17:   ANSELDbits.ANSELD5=0;
  2581  0014' 9BA7               	bcf	167,5,b	;volatile
  2582  0016'                    
  2583                           ; BSR set to: 14
  2584                           ;I2C.c: 18:   ANSELDbits.ANSELD6=0;
  2585  0016' 9DA7               	bcf	167,6,b	;volatile
  2586                           
  2587                           ;I2C.c: 19:   SSP2DATPPS=0x1D;
  2588  0018' 0E1D               	movlw	29
  2589  001A' 6F1D               	movwf	29,b	;volatile
  2590                           
  2591                           ;I2C.c: 20:   SSP2CLKPPS=0x1E;
  2592  001C' 0E1E               	movlw	30
  2593  001E' 6F1C               	movwf	28,b	;volatile
  2594                           
  2595                           ;I2C.c: 21:   RD5PPS=0x1C;
  2596  0020' 0E1C               	movlw	28
  2597  0022' 6F6F               	movwf	111,b	;volatile
  2598                           
  2599                           ;I2C.c: 22:   RD6PPS=0x1B;
  2600  0024' 0E1B               	movlw	27
  2601  0026' 6F70               	movwf	112,b	;volatile
  2602  0028'                    
  2603                           ; BSR set to: 14
  2604  0028' 0012               	return		;funcret
  2605  002A'                    __end_of_I2C_2_Master_Init:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function _colourclick_calibration *****************
  2609 ;; Defined at:
  2610 ;;		line 161 in file "colour_click.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  initial         8   25[COMRAM] struct .
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;Total ram usage:       10 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 11
  2631 ;; This function calls:
  2632 ;;		_colourclickLEDs_C
  2633 ;;		_colourclick_readRGBC
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text11
  2640  0000'                    __ptext11:
  2641                           	callstack 0
  2642  0000'                    _colourclick_calibration:
  2643                           	callstack 19
  2644  0000'                    l378:
  2645  0000' A48E               	btfss	142,2,c	;volatile
  2646  0002' EF00' F000'        	goto	u4701
  2647  0006' EF00' F000'        	goto	u4700
  2648  000A'                    u4701:
  2649  000A' EF00' F000'        	goto	l382
  2650  000E'                    u4700:
  2651  000E' B68E               	btfsc	142,3,c	;volatile
  2652  0010' EF00' F000'        	goto	u4711
  2653  0014' EF00' F000'        	goto	u4710
  2654  0018'                    u4711:
  2655  0018' EF00' F000'        	goto	l378
  2656  001C'                    u4710:
  2657  001C'                    l382:
  2658                           
  2659                           ;colour_click.c: 164:     if (!PORTFbits.RF2) {LATDbits.LATD7=1;}
  2660  001C' B48E               	btfsc	142,2,c	;volatile
  2661  001E' EF00' F000'        	goto	u4721
  2662  0022' EF00' F000'        	goto	u4720
  2663  0026'                    u4721:
  2664  0026' EF00' F000'        	goto	l383
  2665  002A'                    u4720:
  2666  002A' 8E7C               	bsf	124,7,c	;volatile
  2667  002C'                    l383:
  2668                           
  2669                           ;colour_click.c: 165:     if (!PORTFbits.RF3) {LATHbits.LATH3=1;}
  2670  002C' B68E               	btfsc	142,3,c	;volatile
  2671  002E' EF00' F000'        	goto	u4731
  2672  0032' EF00' F000'        	goto	u4730
  2673  0036'                    u4731:
  2674  0036' EF00' F000'        	goto	l384
  2675  003A'                    u4730:
  2676  003A' 8680               	bsf	128,3,c	;volatile
  2677  003C'                    l384:
  2678                           
  2679                           ;colour_click.c: 166:     LATDbits.LATD3 = 1;
  2680  003C' 867C               	bsf	124,3,c	;volatile
  2681  003E'                    
  2682                           ;colour_click.c: 167:     colourclickLEDs_C(1);
  2683  003E' 0E01               	movlw	1
  2684  0040' EC00' F000'        	call	_colourclickLEDs_C
  2685  0044'                    
  2686                           ;colour_click.c: 168:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2687  0044' 0E52               	movlw	82
  2688  0046' 6E00'              	movwf	(??_colourclick_calibration+1)^0,c
  2689  0048' 0E2B               	movlw	43
  2690  004A' 6E00'              	movwf	??_colourclick_calibration^0,c
  2691  004C' 0E00               	movlw	0
  2692  004E'                    u7047:
  2693  004E' 2EE8               	decfsz	wreg,f,c
  2694  0050' D7FE               	bra	u7047
  2695  0052' 2E00'              	decfsz	??_colourclick_calibration^0,f,c
  2696  0054' D7FC               	bra	u7047
  2697  0056' 2E00'              	decfsz	(??_colourclick_calibration+1)^0,f,c
  2698  0058' D7FA               	bra	u7047
  2699  005A' D000               	nop2	
  2700  005C'                    
  2701                           ;colour_click.c: 170:     colourclick_readRGBC(&initial);
  2702  005C' 0E00'              	movlw	low colourclick_calibration@initial
  2703  005E' 6E00'              	movwf	colourclick_readRGBC@tmpval^0,c
  2704  0060' 0E00'              	movlw	high colourclick_calibration@initial
  2705  0062' 6E00'              	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2706  0064' EC00' F000'        	call	_colourclick_readRGBC	;wreg free
  2707  0068'                    
  2708                           ;colour_click.c: 172:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2709  0068' 0E52               	movlw	82
  2710  006A' 6E00'              	movwf	(??_colourclick_calibration+1)^0,c
  2711  006C' 0E2B               	movlw	43
  2712  006E' 6E00'              	movwf	??_colourclick_calibration^0,c
  2713  0070' 0E00               	movlw	0
  2714  0072'                    u7057:
  2715  0072' 2EE8               	decfsz	wreg,f,c
  2716  0074' D7FE               	bra	u7057
  2717  0076' 2E00'              	decfsz	??_colourclick_calibration^0,f,c
  2718  0078' D7FC               	bra	u7057
  2719  007A' 2E00'              	decfsz	(??_colourclick_calibration+1)^0,f,c
  2720  007C' D7FA               	bra	u7057
  2721  007E' D000               	nop2	
  2722  0080'                    
  2723                           ;colour_click.c: 173:     LATDbits.LATD3 = 0;
  2724  0080' 967C               	bcf	124,3,c	;volatile
  2725  0082'                    
  2726                           ;colour_click.c: 174:     colourclickLEDs_C(0);
  2727  0082' 0E00               	movlw	0
  2728  0084' EC00' F000'        	call	_colourclickLEDs_C
  2729  0088'                    
  2730                           ;colour_click.c: 175:     LATDbits.LATD7 = 0;
  2731  0088' 9E7C               	bcf	124,7,c	;volatile
  2732  008A'                    
  2733                           ;colour_click.c: 176:     LATHbits.LATH3 = 0;
  2734  008A' 9680               	bcf	128,3,c	;volatile
  2735  008C'                    
  2736                           ;colour_click.c: 178:     interrupts_lowerbound = initial.C - 150;
  2737  008C' 0E6A               	movlw	106
  2738  008E' 2400'              	addwf	(colourclick_calibration@initial+6)^0,w,c
  2739  0090' 6E00'              	movwf	_interrupts_lowerbound^0,c	;volatile
  2740  0092' 0EFF               	movlw	255
  2741  0094' 2000'              	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2742  0096' 6E00'              	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  2743  0098'                    
  2744                           ;colour_click.c: 179:     interrupts_upperbound = initial.C + 100;
  2745  0098' 0E64               	movlw	100
  2746  009A' 2400'              	addwf	(colourclick_calibration@initial+6)^0,w,c
  2747  009C' 6E00'              	movwf	_interrupts_upperbound^0,c	;volatile
  2748  009E' 0E00               	movlw	0
  2749  00A0' 2000'              	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2750  00A2' 6E00'              	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  2751  00A4' 0012               	return		;funcret
  2752  00A6'                    __end_of_colourclick_calibration:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _colourcards_readRGBC *****************
  2756 ;; Defined at:
  2757 ;;		line 13 in file "colour_cards.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  abs             2   38[BANK0 ] PTR struct .
  2760 ;;		 -> main@current(8), 
  2761 ;;  mL              2   40[BANK0 ] PTR struct .
  2762 ;;		 -> main@motorL(9), 
  2763 ;;  mR              2   42[BANK0 ] PTR struct .
  2764 ;;		 -> main@motorR(9), 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  rel            12   46[BANK0 ] struct .
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2776 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;Total ram usage:       20 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 12
  2783 ;; This function calls:
  2784 ;;		___flge
  2785 ;;		_colourcards_normaliseRGBC
  2786 ;;		_colourclick_readRGBC
  2787 ;;		_colourclick_readRGBC2
  2788 ;;		_forward
  2789 ;;		_instructions
  2790 ;;		_stop
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;;		_colourcards_testingRGBC
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text12
  2798  0000'                    __ptext12:
  2799                           	callstack 0
  2800  0000'                    _colourcards_readRGBC:
  2801                           	callstack 18
  2802  0000'                    
  2803                           ;colour_cards.c: 14:     PIE0bits.INT1IE = 0;
  2804  0000' 010E               	movlb	14	; () banked
  2805  0002' 9329               	bcf	41,1,b	;volatile
  2806  0004'                    
  2807                           ; BSR set to: 14
  2808                           ;colour_cards.c: 16:     RGB_rel rel;;colour_cards.c: 17:     colourclick_readRGBC(abs);
  2809  0004' C026' F015'        	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2810  0008' C027' F016'        	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2811  000C' EC00' F000'        	call	_colourclick_readRGBC	;wreg free
  2812                           
  2813                           ;colour_cards.c: 18:     colourcards_normaliseRGBC(abs, &rel);
  2814  0010' C026' F011'        	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2815  0014' C027' F012'        	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2816  0018' 0E00'              	movlw	low colourcards_readRGBC@rel
  2817  001A' 0100               	movlb	0	; () banked
  2818  001C' 6F00'              	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2819  001E' 0E00'              	movlw	high colourcards_readRGBC@rel
  2820  0020' 6F00'              	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2821  0022' EC00' F000'        	call	_colourcards_normaliseRGBC	;wreg free
  2822  0026'                    
  2823                           ;colour_cards.c: 21:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  2824  0026' 0E71               	movlw	113
  2825  0028' 6E00'              	movwf	___flge@ff1^0,c
  2826  002A' 0E3D               	movlw	61
  2827  002C' 6E00'              	movwf	(___flge@ff1+1)^0,c
  2828  002E' 0E0A               	movlw	10
  2829  0030' 6E00'              	movwf	(___flge@ff1+2)^0,c
  2830  0032' 0E3F               	movlw	63
  2831  0034' 6E00'              	movwf	(___flge@ff1+3)^0,c
  2832  0036' C02E' F01C'        	movff	colourcards_readRGBC@rel,___flge@ff2
  2833  003A' C02F' F01D'        	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2834  003E' C030' F01E'        	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2835  0042' C031' F01F'        	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2836  0046' EC00' F000'        	call	___flge	;wreg free
  2837  004A' B0D8               	btfsc	status,0,c
  2838  004C' EF00' F000'        	goto	u6141
  2839  0050' EF00' F000'        	goto	u6140
  2840  0054'                    u6141:
  2841  0054' EF00' F000'        	goto	l5401
  2842  0058'                    u6140:
  2843  0058' C032' F018'        	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2844  005C' C033' F019'        	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2845  0060' C034' F01A'        	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2846  0064' C035' F01B'        	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2847  0068' 0E48               	movlw	72
  2848  006A' 6E00'              	movwf	___flge@ff2^0,c
  2849  006C' 0EE1               	movlw	225
  2850  006E' 6E00'              	movwf	(___flge@ff2+1)^0,c
  2851  0070' 0E7A               	movlw	122
  2852  0072' 6E00'              	movwf	(___flge@ff2+2)^0,c
  2853  0074' 0E3E               	movlw	62
  2854  0076' 6E00'              	movwf	(___flge@ff2+3)^0,c
  2855  0078' EC00' F000'        	call	___flge	;wreg free
  2856  007C' B0D8               	btfsc	status,0,c
  2857  007E' EF00' F000'        	goto	u6151
  2858  0082' EF00' F000'        	goto	u6150
  2859  0086'                    u6151:
  2860  0086' EF00' F000'        	goto	l5401
  2861  008A'                    u6150:
  2862  008A' C036' F018'        	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2863  008E' C037' F019'        	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2864  0092' C038' F01A'        	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2865  0096' C039' F01B'        	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2866  009A' 0EEC               	movlw	236
  2867  009C' 6E00'              	movwf	___flge@ff2^0,c
  2868  009E' 0E51               	movlw	81
  2869  00A0' 6E00'              	movwf	(___flge@ff2+1)^0,c
  2870  00A2' 0E38               	movlw	56
  2871  00A4' 6E00'              	movwf	(___flge@ff2+2)^0,c
  2872  00A6' 0E3E               	movlw	62
  2873  00A8' 6E00'              	movwf	(___flge@ff2+3)^0,c
  2874  00AA' EC00' F000'        	call	___flge	;wreg free
  2875  00AE' B0D8               	btfsc	status,0,c
  2876  00B0' EF00' F000'        	goto	u6161
  2877  00B4' EF00' F000'        	goto	u6160
  2878  00B8'                    u6161:
  2879  00B8' EF00' F000'        	goto	l5401
  2880  00BC'                    u6160:
  2881  00BC'                    
  2882                           ;colour_cards.c: 22:         colourclick_readRGBC2(abs, 3);
  2883  00BC' C026' F017'        	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2884  00C0' C027' F018'        	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2885  00C4' 0E03               	movlw	3
  2886  00C6' 6E00'              	movwf	colourclick_readRGBC2@mode^0,c
  2887  00C8' EC00' F000'        	call	_colourclick_readRGBC2	;wreg free
  2888                           
  2889                           ;colour_cards.c: 23:         colourcards_normaliseRGBC(abs, &rel);
  2890  00CC' C026' F011'        	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2891  00D0' C027' F012'        	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2892  00D4' 0E00'              	movlw	low colourcards_readRGBC@rel
  2893  00D6' 0100               	movlb	0	; () banked
  2894  00D8' 6F00'              	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2895  00DA' 0E00'              	movlw	high colourcards_readRGBC@rel
  2896  00DC' 6F00'              	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2897  00DE' EC00' F000'        	call	_colourcards_normaliseRGBC	;wreg free
  2898  00E2'                    
  2899                           ;colour_cards.c: 24:         if (rel.G<0.185) {
  2900  00E2' C032' F018'        	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2901  00E6' C033' F019'        	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2902  00EA' C034' F01A'        	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2903  00EE' C035' F01B'        	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2904  00F2' 0EA4               	movlw	164
  2905  00F4' 6E00'              	movwf	___flge@ff2^0,c
  2906  00F6' 0E70               	movlw	112
  2907  00F8' 6E00'              	movwf	(___flge@ff2+1)^0,c
  2908  00FA' 0E3D               	movlw	61
  2909  00FC' 6E00'              	movwf	(___flge@ff2+2)^0,c
  2910  00FE' 0E3E               	movlw	62
  2911  0100' 6E00'              	movwf	(___flge@ff2+3)^0,c
  2912  0102' EC00' F000'        	call	___flge	;wreg free
  2913  0106' B0D8               	btfsc	status,0,c
  2914  0108' EF00' F000'        	goto	u6171
  2915  010C' EF00' F000'        	goto	u6170
  2916  0110'                    u6171:
  2917  0110' EF00' F000'        	goto	l5399
  2918  0114'                    u6170:
  2919  0114'                    
  2920                           ;colour_cards.c: 26:             instructions(mL, mR, 1);
  2921  0114' C028' F021'        	movff	colourcards_readRGBC@mL,instructions@mL
  2922  0118' C029' F022'        	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  2923  011C' C02A' F023'        	movff	colourcards_readRGBC@mR,instructions@mR
  2924  0120' C02B' F024'        	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  2925  0124' 0E01               	movlw	1
  2926  0126' 0100               	movlb	0	; () banked
  2927  0128' 6F00'              	movwf	instructions@num& (0+255),b
  2928  012A' EC00' F000'        	call	_instructions	;wreg free
  2929                           
  2930                           ;colour_cards.c: 27:         } else {
  2931  012E' EF00' F000'        	goto	l5467
  2932  0132'                    l5399:
  2933                           
  2934                           ;colour_cards.c: 29:             instructions(mL, mR, 6);
  2935  0132' C028' F021'        	movff	colourcards_readRGBC@mL,instructions@mL
  2936  0136' C029' F022'        	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  2937  013A' C02A' F023'        	movff	colourcards_readRGBC@mR,instructions@mR
  2938  013E' C02B' F024'        	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  2939  0142' 0E06               	movlw	6
  2940  0144' 0100               	movlb	0	; () banked
  2941  0146' 6F00'              	movwf	instructions@num& (0+255),b
  2942  0148' EC00' F000'        	call	_instructions	;wreg free
  2943  014C' EF00' F000'        	goto	l5467
  2944  0150'                    l5401:
  2945  0150' C02E' F018'        	movff	colourcards_readRGBC@rel,___flge@ff1
  2946  0154' C02F' F019'        	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2947  0158' C030' F01A'        	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2948  015C' C031' F01B'        	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2949  0160' 0EAE               	movlw	174
  2950  0162' 6E00'              	movwf	___flge@ff2^0,c
  2951  0164' 0E47               	movlw	71
  2952  0166' 6E00'              	movwf	(___flge@ff2+1)^0,c
  2953  0168' 0EE1               	movlw	225
  2954  016A' 6E00'              	movwf	(___flge@ff2+2)^0,c
  2955  016C' 0E3E               	movlw	62
  2956  016E' 6E00'              	movwf	(___flge@ff2+3)^0,c
  2957  0170' EC00' F000'        	call	___flge	;wreg free
  2958  0174' B0D8               	btfsc	status,0,c
  2959  0176' EF00' F000'        	goto	u6181
  2960  017A' EF00' F000'        	goto	u6180
  2961  017E'                    u6181:
  2962  017E' EF00' F000'        	goto	l5421
  2963  0182'                    u6180:
  2964  0182' 0E9A               	movlw	154
  2965  0184' 6E00'              	movwf	___flge@ff1^0,c
  2966  0186' 0E99               	movlw	153
  2967  0188' 6E00'              	movwf	(___flge@ff1+1)^0,c
  2968  018A' 0E99               	movlw	153
  2969  018C' 6E00'              	movwf	(___flge@ff1+2)^0,c
  2970  018E' 0E3E               	movlw	62
  2971  0190' 6E00'              	movwf	(___flge@ff1+3)^0,c
  2972  0192' C032' F01C'        	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2973  0196' C033' F01D'        	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2974  019A' C034' F01E'        	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2975  019E' C035' F01F'        	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2976  01A2' EC00' F000'        	call	___flge	;wreg free
  2977  01A6' B0D8               	btfsc	status,0,c
  2978  01A8' EF00' F000'        	goto	u6191
  2979  01AC' EF00' F000'        	goto	u6190
  2980  01B0'                    u6191:
  2981  01B0' EF00' F000'        	goto	l5421
  2982  01B4'                    u6190:
  2983  01B4' 0E14               	movlw	20
  2984  01B6' 6E00'              	movwf	___flge@ff1^0,c
  2985  01B8' 0EAE               	movlw	174
  2986  01BA' 6E00'              	movwf	(___flge@ff1+1)^0,c
  2987  01BC' 0E47               	movlw	71
  2988  01BE' 6E00'              	movwf	(___flge@ff1+2)^0,c
  2989  01C0' 0E3E               	movlw	62
  2990  01C2' 6E00'              	movwf	(___flge@ff1+3)^0,c
  2991  01C4' C036' F01C'        	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2992  01C8' C037' F01D'        	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2993  01CC' C038' F01E'        	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2994  01D0' C039' F01F'        	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2995  01D4' EC00' F000'        	call	___flge	;wreg free
  2996  01D8' B0D8               	btfsc	status,0,c
  2997  01DA' EF00' F000'        	goto	u6201
  2998  01DE' EF00' F000'        	goto	u6200
  2999  01E2'                    u6201:
  3000  01E2' EF00' F000'        	goto	l5421
  3001  01E6'                    u6200:
  3002  01E6'                    
  3003                           ;colour_cards.c: 34:         colourclick_readRGBC2(abs, 1);
  3004  01E6' C026' F017'        	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  3005  01EA' C027' F018'        	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  3006  01EE' 0E01               	movlw	1
  3007  01F0' 6E00'              	movwf	colourclick_readRGBC2@mode^0,c
  3008  01F2' EC00' F000'        	call	_colourclick_readRGBC2	;wreg free
  3009                           
  3010                           ;colour_cards.c: 35:         colourcards_normaliseRGBC(abs, &rel);
  3011  01F6' C026' F011'        	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  3012  01FA' C027' F012'        	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  3013  01FE' 0E00'              	movlw	low colourcards_readRGBC@rel
  3014  0200' 0100               	movlb	0	; () banked
  3015  0202' 6F00'              	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  3016  0204' 0E00'              	movlw	high colourcards_readRGBC@rel
  3017  0206' 6F00'              	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  3018  0208' EC00' F000'        	call	_colourcards_normaliseRGBC	;wreg free
  3019  020C'                    
  3020                           ;colour_cards.c: 36:         if (rel.B<0.125) {
  3021  020C' C036' F018'        	movff	colourcards_readRGBC@rel+8,___flge@ff1
  3022  0210' C037' F019'        	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  3023  0214' C038' F01A'        	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  3024  0218' C039' F01B'        	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  3025  021C' 0E00               	movlw	0
  3026  021E' 6E00'              	movwf	___flge@ff2^0,c
  3027  0220' 0E00               	movlw	0
  3028  0222' 6E00'              	movwf	(___flge@ff2+1)^0,c
  3029  0224' 0E00               	movlw	0
  3030  0226' 6E00'              	movwf	(___flge@ff2+2)^0,c
  3031  0228' 0E3E               	movlw	62
  3032  022A' 6E00'              	movwf	(___flge@ff2+3)^0,c
  3033  022C' EC00' F000'        	call	___flge	;wreg free
  3034  0230' B0D8               	btfsc	status,0,c
  3035  0232' EF00' F000'        	goto	u6211
  3036  0236' EF00' F000'        	goto	u6210
  3037  023A'                    u6211:
  3038  023A' EF00' F000'        	goto	l5413
  3039  023E'                    u6210:
  3040  023E'                    
  3041                           ;colour_cards.c: 38:             instructions(mL, mR, 2);
  3042  023E' C028' F021'        	movff	colourcards_readRGBC@mL,instructions@mL
  3043  0242' C029' F022'        	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3044  0246' C02A' F023'        	movff	colourcards_readRGBC@mR,instructions@mR
  3045  024A' C02B' F024'        	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3046  024E' 0E02               	movlw	2
  3047  0250' 0100               	movlb	0	; () banked
  3048  0252' 6F00'              	movwf	instructions@num& (0+255),b
  3049  0254' EC00' F000'        	call	_instructions	;wreg free
  3050                           
  3051                           ;colour_cards.c: 39:         } else {
  3052  0258' EF00' F000'        	goto	l5467
  3053  025C'                    l5413:
  3054                           
  3055                           ;colour_cards.c: 40:             colourclick_readRGBC2(abs, 2);
  3056  025C' C026' F017'        	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  3057  0260' C027' F018'        	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  3058  0264' 0E02               	movlw	2
  3059  0266' 6E00'              	movwf	colourclick_readRGBC2@mode^0,c
  3060  0268' EC00' F000'        	call	_colourclick_readRGBC2	;wreg free
  3061                           
  3062                           ;colour_cards.c: 41:             colourcards_normaliseRGBC(abs, &rel);
  3063  026C' C026' F011'        	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  3064  0270' C027' F012'        	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  3065  0274' 0E00'              	movlw	low colourcards_readRGBC@rel
  3066  0276' 0100               	movlb	0	; () banked
  3067  0278' 6F00'              	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  3068  027A' 0E00'              	movlw	high colourcards_readRGBC@rel
  3069  027C' 6F00'              	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  3070  027E' EC00' F000'        	call	_colourcards_normaliseRGBC	;wreg free
  3071  0282'                    
  3072                           ;colour_cards.c: 42:             if (rel.R<0.115) {
  3073  0282' C02E' F018'        	movff	colourcards_readRGBC@rel,___flge@ff1
  3074  0286' C02F' F019'        	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  3075  028A' C030' F01A'        	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  3076  028E' C031' F01B'        	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  3077  0292' 0E1F               	movlw	31
  3078  0294' 6E00'              	movwf	___flge@ff2^0,c
  3079  0296' 0E85               	movlw	133
  3080  0298' 6E00'              	movwf	(___flge@ff2+1)^0,c
  3081  029A' 0EEB               	movlw	235
  3082  029C' 6E00'              	movwf	(___flge@ff2+2)^0,c
  3083  029E' 0E3D               	movlw	61
  3084  02A0' 6E00'              	movwf	(___flge@ff2+3)^0,c
  3085  02A2' EC00' F000'        	call	___flge	;wreg free
  3086  02A6' B0D8               	btfsc	status,0,c
  3087  02A8' EF00' F000'        	goto	u6221
  3088  02AC' EF00' F000'        	goto	u6220
  3089  02B0'                    u6221:
  3090  02B0' EF00' F000'        	goto	l5419
  3091  02B4'                    u6220:
  3092  02B4'                    
  3093                           ;colour_cards.c: 44:                 instructions(mL, mR, 3);
  3094  02B4' C028' F021'        	movff	colourcards_readRGBC@mL,instructions@mL
  3095  02B8' C029' F022'        	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3096  02BC' C02A' F023'        	movff	colourcards_readRGBC@mR,instructions@mR
  3097  02C0' C02B' F024'        	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3098  02C4' 0E03               	movlw	3
  3099  02C6' 0100               	movlb	0	; () banked
  3100  02C8' 6F00'              	movwf	instructions@num& (0+255),b
  3101  02CA' EC00' F000'        	call	_instructions	;wreg free
  3102                           
  3103                           ;colour_cards.c: 45:             } else {
  3104  02CE' EF00' F000'        	goto	l5467
  3105  02D2'                    l5419:
  3106                           
  3107                           ;colour_cards.c: 47:                 instructions(mL, mR, 7);
  3108  02D2' C028' F021'        	movff	colourcards_readRGBC@mL,instructions@mL
  3109  02D6' C029' F022'        	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3110  02DA' C02A' F023'        	movff	colourcards_readRGBC@mR,instructions@mR
  3111  02DE' C02B' F024'        	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3112  02E2' 0E07               	movlw	7
  3113  02E4' 0100               	movlb	0	; () banked
  3114  02E6' 6F00'              	movwf	instructions@num& (0+255),b
  3115  02E8' EC00' F000'        	call	_instructions	;wreg free
  3116  02EC' EF00' F000'        	goto	l5467
  3117  02F0'                    l5421:
  3118  02F0' 0E48               	movlw	72
  3119  02F2' 6E00'              	movwf	___flge@ff1^0,c
  3120  02F4' 0EE1               	movlw	225
  3121  02F6' 6E00'              	movwf	(___flge@ff1+1)^0,c
  3122  02F8' 0EFA               	movlw	250
  3123  02FA' 6E00'              	movwf	(___flge@ff1+2)^0,c
  3124  02FC' 0E3E               	movlw	62
  3125  02FE' 6E00'              	movwf	(___flge@ff1+3)^0,c
  3126  0300' C02E' F01C'        	movff	colourcards_readRGBC@rel,___flge@ff2
  3127  0304' C02F' F01D'        	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  3128  0308' C030' F01E'        	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  3129  030C' C031' F01F'        	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  3130  0310' EC00' F000'        	call	___flge	;wreg free
  3131  0314' B0D8               	btfsc	status,0,c
  3132  0316' EF00' F000'        	goto	u6231
  3133  031A' EF00' F000'        	goto	u6230
  3134  031E'                    u6231:
  3135  031E' EF00' F000'        	goto	l5429
  3136  0322'                    u6230:
  3137  0322' 0E85               	movlw	133
  3138  0324' 6E00'              	movwf	___flge@ff1^0,c
  3139  0326' 0EEB               	movlw	235
  3140  0328' 6E00'              	movwf	(___flge@ff1+1)^0,c
  3141  032A' 0E91               	movlw	145
  3142  032C' 6E00'              	movwf	(___flge@ff1+2)^0,c
  3143  032E' 0E3E               	movlw	62
  3144  0330' 6E00'              	movwf	(___flge@ff1+3)^0,c
  3145  0332' C032' F01C'        	movff	colourcards_readRGBC@rel+4,___flge@ff2
  3146  0336' C033' F01D'        	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  3147  033A' C034' F01E'        	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  3148  033E' C035' F01F'        	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  3149  0342' EC00' F000'        	call	___flge	;wreg free
  3150  0346' B0D8               	btfsc	status,0,c
  3151  0348' EF00' F000'        	goto	u6241
  3152  034C' EF00' F000'        	goto	u6240
  3153  0350'                    u6241:
  3154  0350' EF00' F000'        	goto	l5429
  3155  0354'                    u6240:
  3156  0354' 0EEC               	movlw	236
  3157  0356' 6E00'              	movwf	___flge@ff1^0,c
  3158  0358' 0E51               	movlw	81
  3159  035A' 6E00'              	movwf	(___flge@ff1+1)^0,c
  3160  035C' 0E38               	movlw	56
  3161  035E' 6E00'              	movwf	(___flge@ff1+2)^0,c
  3162  0360' 0E3E               	movlw	62
  3163  0362' 6E00'              	movwf	(___flge@ff1+3)^0,c
  3164  0364' C036' F01C'        	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3165  0368' C037' F01D'        	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3166  036C' C038' F01E'        	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3167  0370' C039' F01F'        	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3168  0374' EC00' F000'        	call	___flge	;wreg free
  3169  0378' B0D8               	btfsc	status,0,c
  3170  037A' EF00' F000'        	goto	u6251
  3171  037E' EF00' F000'        	goto	u6250
  3172  0382'                    u6251:
  3173  0382' EF00' F000'        	goto	l5429
  3174  0386'                    u6250:
  3175  0386'                    
  3176                           ;colour_cards.c: 53:         instructions(mL, mR, 4);
  3177  0386' C028' F021'        	movff	colourcards_readRGBC@mL,instructions@mL
  3178  038A' C029' F022'        	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3179  038E' C02A' F023'        	movff	colourcards_readRGBC@mR,instructions@mR
  3180  0392' C02B' F024'        	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3181  0396' 0E04               	movlw	4
  3182  0398' 0100               	movlb	0	; () banked
  3183  039A' 6F00'              	movwf	instructions@num& (0+255),b
  3184  039C' EC00' F000'        	call	_instructions	;wreg free
  3185                           
  3186                           ;colour_cards.c: 55:     } else if ((rel.R>0.49) && (rel.G<0.275) && (rel.B>0.195)) {
  3187  03A0' EF00' F000'        	goto	l5467
  3188  03A4'                    l5429:
  3189  03A4' 0E48               	movlw	72
  3190  03A6' 6E00'              	movwf	___flge@ff1^0,c
  3191  03A8' 0EE1               	movlw	225
  3192  03AA' 6E00'              	movwf	(___flge@ff1+1)^0,c
  3193  03AC' 0EFA               	movlw	250
  3194  03AE' 6E00'              	movwf	(___flge@ff1+2)^0,c
  3195  03B0' 0E3E               	movlw	62
  3196  03B2' 6E00'              	movwf	(___flge@ff1+3)^0,c
  3197  03B4' C02E' F01C'        	movff	colourcards_readRGBC@rel,___flge@ff2
  3198  03B8' C02F' F01D'        	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  3199  03BC' C030' F01E'        	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  3200  03C0' C031' F01F'        	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  3201  03C4' EC00' F000'        	call	___flge	;wreg free
  3202  03C8' B0D8               	btfsc	status,0,c
  3203  03CA' EF00' F000'        	goto	u6261
  3204  03CE' EF00' F000'        	goto	u6260
  3205  03D2'                    u6261:
  3206  03D2' EF00' F000'        	goto	l5437
  3207  03D6'                    u6260:
  3208  03D6' C032' F018'        	movff	colourcards_readRGBC@rel+4,___flge@ff1
  3209  03DA' C033' F019'        	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  3210  03DE' C034' F01A'        	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  3211  03E2' C035' F01B'        	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  3212  03E6' 0ECD               	movlw	205
  3213  03E8' 6E00'              	movwf	___flge@ff2^0,c
  3214  03EA' 0ECC               	movlw	204
  3215  03EC' 6E00'              	movwf	(___flge@ff2+1)^0,c
  3216  03EE' 0E8C               	movlw	140
  3217  03F0' 6E00'              	movwf	(___flge@ff2+2)^0,c
  3218  03F2' 0E3E               	movlw	62
  3219  03F4' 6E00'              	movwf	(___flge@ff2+3)^0,c
  3220  03F6' EC00' F000'        	call	___flge	;wreg free
  3221  03FA' B0D8               	btfsc	status,0,c
  3222  03FC' EF00' F000'        	goto	u6271
  3223  0400' EF00' F000'        	goto	u6270
  3224  0404'                    u6271:
  3225  0404' EF00' F000'        	goto	l5437
  3226  0408'                    u6270:
  3227  0408' 0E14               	movlw	20
  3228  040A' 6E00'              	movwf	___flge@ff1^0,c
  3229  040C' 0EAE               	movlw	174
  3230  040E' 6E00'              	movwf	(___flge@ff1+1)^0,c
  3231  0410' 0E47               	movlw	71
  3232  0412' 6E00'              	movwf	(___flge@ff1+2)^0,c
  3233  0414' 0E3E               	movlw	62
  3234  0416' 6E00'              	movwf	(___flge@ff1+3)^0,c
  3235  0418' C036' F01C'        	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3236  041C' C037' F01D'        	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3237  0420' C038' F01E'        	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3238  0424' C039' F01F'        	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3239  0428' EC00' F000'        	call	___flge	;wreg free
  3240  042C' B0D8               	btfsc	status,0,c
  3241  042E' EF00' F000'        	goto	u6281
  3242  0432' EF00' F000'        	goto	u6280
  3243  0436'                    u6281:
  3244  0436' EF00' F000'        	goto	l5437
  3245  043A'                    u6280:
  3246  043A'                    
  3247                           ;colour_cards.c: 57:         instructions(mL, mR, 5);
  3248  043A' C028' F021'        	movff	colourcards_readRGBC@mL,instructions@mL
  3249  043E' C029' F022'        	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3250  0442' C02A' F023'        	movff	colourcards_readRGBC@mR,instructions@mR
  3251  0446' C02B' F024'        	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3252  044A' 0E05               	movlw	5
  3253  044C' 0100               	movlb	0	; () banked
  3254  044E' 6F00'              	movwf	instructions@num& (0+255),b
  3255  0450' EC00' F000'        	call	_instructions	;wreg free
  3256                           
  3257                           ;colour_cards.c: 59:     } else if ((rel.R<0.47) && (rel.G>0.295) && (rel.B>0.21)) {
  3258  0454' EF00' F000'        	goto	l5467
  3259  0458'                    l5437:
  3260  0458' C02E' F018'        	movff	colourcards_readRGBC@rel,___flge@ff1
  3261  045C' C02F' F019'        	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  3262  0460' C030' F01A'        	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  3263  0464' C031' F01B'        	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  3264  0468' 0ED7               	movlw	215
  3265  046A' 6E00'              	movwf	___flge@ff2^0,c
  3266  046C' 0EA3               	movlw	163
  3267  046E' 6E00'              	movwf	(___flge@ff2+1)^0,c
  3268  0470' 0EF0               	movlw	240
  3269  0472' 6E00'              	movwf	(___flge@ff2+2)^0,c
  3270  0474' 0E3E               	movlw	62
  3271  0476' 6E00'              	movwf	(___flge@ff2+3)^0,c
  3272  0478' EC00' F000'        	call	___flge	;wreg free
  3273  047C' B0D8               	btfsc	status,0,c
  3274  047E' EF00' F000'        	goto	u6291
  3275  0482' EF00' F000'        	goto	u6290
  3276  0486'                    u6291:
  3277  0486' EF00' F000'        	goto	l5445
  3278  048A'                    u6290:
  3279  048A' 0E3D               	movlw	61
  3280  048C' 6E00'              	movwf	___flge@ff1^0,c
  3281  048E' 0E0A               	movlw	10
  3282  0490' 6E00'              	movwf	(___flge@ff1+1)^0,c
  3283  0492' 0E97               	movlw	151
  3284  0494' 6E00'              	movwf	(___flge@ff1+2)^0,c
  3285  0496' 0E3E               	movlw	62
  3286  0498' 6E00'              	movwf	(___flge@ff1+3)^0,c
  3287  049A' C032' F01C'        	movff	colourcards_readRGBC@rel+4,___flge@ff2
  3288  049E' C033' F01D'        	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  3289  04A2' C034' F01E'        	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  3290  04A6' C035' F01F'        	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  3291  04AA' EC00' F000'        	call	___flge	;wreg free
  3292  04AE' B0D8               	btfsc	status,0,c
  3293  04B0' EF00' F000'        	goto	u6301
  3294  04B4' EF00' F000'        	goto	u6300
  3295  04B8'                    u6301:
  3296  04B8' EF00' F000'        	goto	l5445
  3297  04BC'                    u6300:
  3298  04BC' 0E3D               	movlw	61
  3299  04BE' 6E00'              	movwf	___flge@ff1^0,c
  3300  04C0' 0E0A               	movlw	10
  3301  04C2' 6E00'              	movwf	(___flge@ff1+1)^0,c
  3302  04C4' 0E57               	movlw	87
  3303  04C6' 6E00'              	movwf	(___flge@ff1+2)^0,c
  3304  04C8' 0E3E               	movlw	62
  3305  04CA' 6E00'              	movwf	(___flge@ff1+3)^0,c
  3306  04CC' C036' F01C'        	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3307  04D0' C037' F01D'        	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3308  04D4' C038' F01E'        	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3309  04D8' C039' F01F'        	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3310  04DC' EC00' F000'        	call	___flge	;wreg free
  3311  04E0' B0D8               	btfsc	status,0,c
  3312  04E2' EF00' F000'        	goto	u6311
  3313  04E6' EF00' F000'        	goto	u6310
  3314  04EA'                    u6311:
  3315  04EA' EF00' F000'        	goto	l5445
  3316  04EE'                    u6310:
  3317  04EE'                    
  3318                           ;colour_cards.c: 61:         unknowncard_flag = 0;
  3319  04EE' 0E00               	movlw	0
  3320  04F0' 0100               	movlb	0	; () banked
  3321  04F2' 6F00'              	movwf	_unknowncard_flag& (0+255),b	;volatile
  3322                           
  3323                           ;colour_cards.c: 62:         returnhome_flag = 1;
  3324  04F4' 0E01               	movlw	1
  3325  04F6' 6F00'              	movwf	_returnhome_flag& (0+255),b	;volatile
  3326                           
  3327                           ;colour_cards.c: 64:     } else {
  3328  04F8' EF00' F000'        	goto	l5467
  3329  04FC'                    l5445:
  3330                           
  3331                           ;colour_cards.c: 66:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3332  04FC' 0E52               	movlw	82
  3333  04FE' 0100               	movlb	0	; () banked
  3334  0500' 6F00'              	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  3335  0502' 0E2B               	movlw	43
  3336  0504' 6F00'              	movwf	??_colourcards_readRGBC& (0+255),b
  3337  0506' 0E00               	movlw	0
  3338  0508'                    u7067:
  3339  0508' 2EE8               	decfsz	wreg,f,c
  3340  050A' D7FE               	bra	u7067
  3341  050C' 2F00'              	decfsz	??_colourcards_readRGBC& (0+255),f,b
  3342  050E' D7FC               	bra	u7067
  3343  0510' 2F00'              	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  3344  0512' D7FA               	bra	u7067
  3345  0514' F000               	nop	
  3346  0516'                    
  3347                           ;colour_cards.c: 67:         forward(mL, mR);
  3348  0516' C028' F023'        	movff	colourcards_readRGBC@mL,forward@mL
  3349  051A' C029' F024'        	movff	colourcards_readRGBC@mL+1,forward@mL+1
  3350  051E' C02A' F025'        	movff	colourcards_readRGBC@mR,forward@mR
  3351  0522' C02B' F026'        	movff	colourcards_readRGBC@mR+1,forward@mR+1
  3352  0526' EC00' F000'        	call	_forward	;wreg free
  3353  052A'                    
  3354                           ;colour_cards.c: 68:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3355  052A' 0ED0               	movlw	208
  3356  052C' 0100               	movlb	0	; () banked
  3357  052E' 6F00'              	movwf	??_colourcards_readRGBC& (0+255),b
  3358  0530' 0EC9               	movlw	201
  3359  0532'                    u7077:
  3360  0532' 2EE8               	decfsz	wreg,f,c
  3361  0534' D7FE               	bra	u7077
  3362  0536' 2F00'              	decfsz	??_colourcards_readRGBC& (0+255),f,b
  3363  0538' D7FC               	bra	u7077
  3364  053A' D000               	nop2	
  3365                           
  3366                           ;colour_cards.c: 69:         stop(mL, mR);
  3367  053C' C028' F023'        	movff	colourcards_readRGBC@mL,stop@mL
  3368  0540' C029' F024'        	movff	colourcards_readRGBC@mL+1,stop@mL+1
  3369  0544' C02A' F025'        	movff	colourcards_readRGBC@mR,stop@mR
  3370  0548' C02B' F026'        	movff	colourcards_readRGBC@mR+1,stop@mR+1
  3371  054C' EC00' F000'        	call	_stop	;wreg free
  3372  0550'                    
  3373                           ;colour_cards.c: 70:         colourclick_readRGBC(abs);
  3374  0550' C026' F015'        	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  3375  0554' C027' F016'        	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  3376  0558' EC00' F000'        	call	_colourclick_readRGBC	;wreg free
  3377  055C'                    
  3378                           ;colour_cards.c: 71:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrupt
      +                          s_upperbound)) {
  3379  055C' 0100               	movlb	0	; () banked
  3380  055E' EE20 F006          	lfsr	2,6
  3381  0562' 5100'              	movf	colourcards_readRGBC@abs& (0+255),w,b
  3382  0564' 26D9               	addwf	fsr2l,f,c
  3383  0566' 5100'              	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  3384  0568' 22DA               	addwfc	fsr2h,f,c
  3385  056A' 5000'              	movf	_interrupts_lowerbound^0,w,c	;volatile
  3386  056C' 5CDE               	subwf	postinc2,w,c
  3387  056E' 5000'              	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  3388  0570' 58DE               	subwfb	postinc2,w,c
  3389  0572' A0D8               	btfss	status,0,c
  3390  0574' EF00' F000'        	goto	u6321
  3391  0578' EF00' F000'        	goto	u6320
  3392  057C'                    u6321:
  3393  057C' EF00' F000'        	goto	l5457
  3394  0580'                    u6320:
  3395  0580'                    
  3396                           ; BSR set to: 0
  3397  0580' EE20 F006          	lfsr	2,6
  3398  0584' 5100'              	movf	colourcards_readRGBC@abs& (0+255),w,b
  3399  0586' 26D9               	addwf	fsr2l,f,c
  3400  0588' 5100'              	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  3401  058A' 22DA               	addwfc	fsr2h,f,c
  3402  058C' 50DE               	movf	postinc2,w,c
  3403  058E' 5C00'              	subwf	_interrupts_upperbound^0,w,c	;volatile
  3404  0590' 50DE               	movf	postinc2,w,c
  3405  0592' 5800'              	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  3406  0594' B0D8               	btfsc	status,0,c
  3407  0596' EF00' F000'        	goto	u6331
  3408  059A' EF00' F000'        	goto	u6330
  3409  059E'                    u6331:
  3410  059E' EF00' F000'        	goto	l5465
  3411  05A2'                    u6330:
  3412  05A2'                    l5457:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;colour_cards.c: 72:             if (unknowncard_flag<3) {
  3416  05A2' 0E03               	movlw	3
  3417  05A4' 6100'              	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  3418  05A6' EF00' F000'        	goto	u6341
  3419  05AA' EF00' F000'        	goto	u6340
  3420  05AE'                    u6341:
  3421  05AE' EF00' F000'        	goto	l257
  3422  05B2'                    u6340:
  3423  05B2'                    
  3424                           ; BSR set to: 0
  3425                           ;colour_cards.c: 73:                 unknowncard_flag++;
  3426  05B2' 2B00'              	incf	_unknowncard_flag& (0+255),f,b	;volatile
  3427  05B4'                    
  3428                           ; BSR set to: 0
  3429                           ;colour_cards.c: 74:                 PIR0bits.INT1IF = 1;
  3430  05B4' 010E               	movlb	14	; () banked
  3431  05B6' 8333               	bsf	51,1,b	;volatile
  3432                           
  3433                           ;colour_cards.c: 75:             } else {
  3434  05B8' EF00' F000'        	goto	l5467
  3435  05BC'                    l257:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;colour_cards.c: 76:                 LATHbits.LATH3 = 1;
  3439  05BC' 8680               	bsf	128,3,c	;volatile
  3440  05BE'                    
  3441                           ; BSR set to: 0
  3442                           ;colour_cards.c: 77:                 returnhome_flag = 1;
  3443  05BE' 0E01               	movlw	1
  3444  05C0' 6F00'              	movwf	_returnhome_flag& (0+255),b	;volatile
  3445  05C2' EF00' F000'        	goto	l5467
  3446  05C6'                    l5465:
  3447                           
  3448                           ; BSR set to: 0
  3449  05C6' 0E00               	movlw	0
  3450  05C8' 6F00'              	movwf	_unknowncard_flag& (0+255),b	;volatile
  3451  05CA'                    l5467:
  3452                           
  3453                           ;colour_cards.c: 83:     PIE0bits.INT1IE = 1;
  3454  05CA' 010E               	movlb	14	; () banked
  3455  05CC' 8329               	bsf	41,1,b	;volatile
  3456  05CE'                    
  3457                           ; BSR set to: 14
  3458  05CE' 0012               	return		;funcret
  3459  05D0'                    __end_of_colourcards_readRGBC:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _instructions *****************
  3463 ;; Defined at:
  3464 ;;		line 216 in file "DC_motors.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  mL              2   33[BANK0 ] PTR struct .
  3467 ;;		 -> main@motorL(9), 
  3468 ;;  mR              2   35[BANK0 ] PTR struct .
  3469 ;;		 -> main@motorR(9), 
  3470 ;;  num             1   37[BANK0 ] unsigned char 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3482 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;Total ram usage:        7 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 11
  3489 ;; This function calls:
  3490 ;;		_clearance
  3491 ;;		_reverse
  3492 ;;		_stop
  3493 ;;		_turnleft
  3494 ;;		_turnright
  3495 ;; This function is called by:
  3496 ;;		_colourcards_readRGBC
  3497 ;;		_reverseinstructions
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text13
  3502  0000'                    __ptext13:
  3503                           	callstack 0
  3504  0000'                    _instructions:
  3505                           	callstack 17
  3506  0000'                    
  3507                           ;DC_motors.c: 217:     if (returnhome_flag==0) {
  3508  0000' 0100               	movlb	0	; () banked
  3509  0002' 5100'              	movf	_returnhome_flag& (0+255),w,b	;volatile
  3510  0004' A4D8               	btfss	status,2,c
  3511  0006' EF00' F000'        	goto	u5861
  3512  000A' EF00' F000'        	goto	u5860
  3513  000E'                    u5861:
  3514  000E' EF00' F000'        	goto	l5207
  3515  0012'                    u5860:
  3516  0012'                    
  3517                           ; BSR set to: 0
  3518                           ;DC_motors.c: 218:         clearance(mL, mR);
  3519  0012' C021' F029'        	movff	instructions@mL,clearance@mL
  3520  0016' C022' F02A'        	movff	instructions@mL+1,clearance@mL+1
  3521  001A' C023' F02B'        	movff	instructions@mR,clearance@mR
  3522  001E' C024' F02C'        	movff	instructions@mR+1,clearance@mR+1
  3523  0022' EC00' F000'        	call	_clearance	;wreg free
  3524  0026'                    
  3525                           ;DC_motors.c: 219:         unknowncard_flag = 0;
  3526  0026' 0E00               	movlw	0
  3527  0028' 0100               	movlb	0	; () banked
  3528  002A' 6F00'              	movwf	_unknowncard_flag& (0+255),b	;volatile
  3529  002C'                    
  3530                           ; BSR set to: 0
  3531                           ;DC_motors.c: 220:         instr[instr_counter] = num;
  3532  002C' 5100'              	movf	instructions@num& (0+255),w,b
  3533  002E' 6E00'              	movwf	??_instructions^0,c
  3534  0030' 6A00'              	clrf	(??_instructions+1)^0,c
  3535  0032' 5100'              	movf	_instr_counter& (0+255),w,b	;volatile
  3536  0034' 0D02               	mullw	2
  3537  0036' 0E00'              	movlw	low _instr
  3538  0038' 24F3               	addwf	243,w,c
  3539  003A' 6ED9               	movwf	fsr2l,c
  3540  003C' 0E00'              	movlw	high _instr
  3541  003E' 20F4               	addwfc	prodh,w,c
  3542  0040' 6EDA               	movwf	fsr2h,c
  3543  0042' C04A' FFDE         	movff	??_instructions,postinc2
  3544  0046' C04B' FFDD         	movff	??_instructions+1,postdec2
  3545  004A'                    
  3546                           ; BSR set to: 0
  3547                           ;DC_motors.c: 221:         instr_counter++;
  3548  004A' 2B00'              	incf	_instr_counter& (0+255),f,b	;volatile
  3549  004C'                    l5207:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;DC_motors.c: 224:     if (num==1) {
  3553  004C' 0500'              	decf	instructions@num& (0+255),w,b
  3554  004E' A4D8               	btfss	status,2,c
  3555  0050' EF00' F000'        	goto	u5871
  3556  0054' EF00' F000'        	goto	u5870
  3557  0058'                    u5871:
  3558  0058' EF00' F000'        	goto	l5211
  3559  005C'                    u5870:
  3560  005C'                    
  3561                           ; BSR set to: 0
  3562                           ;DC_motors.c: 226:         turnright(mL, mR, 90);
  3563  005C' C021' F011'        	movff	instructions@mL,turnright@mL
  3564  0060' C022' F012'        	movff	instructions@mL+1,turnright@mL+1
  3565  0064' C023' F013'        	movff	instructions@mR,turnright@mR
  3566  0068' C024' F014'        	movff	instructions@mR+1,turnright@mR+1
  3567  006C' 0E00               	movlw	0
  3568  006E' 6F00'              	movwf	(turnright@deg+1)& (0+255),b
  3569  0070' 0E5A               	movlw	90
  3570  0072' 6F00'              	movwf	turnright@deg& (0+255),b
  3571  0074' EC00' F000'        	call	_turnright	;wreg free
  3572                           
  3573                           ;DC_motors.c: 227:         stop(mL, mR);
  3574  0078' C021' F023'        	movff	instructions@mL,stop@mL
  3575  007C' C022' F024'        	movff	instructions@mL+1,stop@mL+1
  3576  0080' C023' F025'        	movff	instructions@mR,stop@mR
  3577  0084' C024' F026'        	movff	instructions@mR+1,stop@mR+1
  3578  0088' EC00' F000'        	call	_stop	;wreg free
  3579                           
  3580                           ;DC_motors.c: 228:     } else if (num==2) {
  3581  008C' EF00' F000'        	goto	l704
  3582  0090'                    l5211:
  3583                           
  3584                           ; BSR set to: 0
  3585  0090' 0E02               	movlw	2
  3586  0092' 1900'              	xorwf	instructions@num& (0+255),w,b
  3587  0094' A4D8               	btfss	status,2,c
  3588  0096' EF00' F000'        	goto	u5881
  3589  009A' EF00' F000'        	goto	u5880
  3590  009E'                    u5881:
  3591  009E' EF00' F000'        	goto	l5215
  3592  00A2'                    u5880:
  3593  00A2'                    
  3594                           ; BSR set to: 0
  3595                           ;DC_motors.c: 230:         turnleft(mL, mR, 90);
  3596  00A2' C021' F011'        	movff	instructions@mL,turnleft@mL
  3597  00A6' C022' F012'        	movff	instructions@mL+1,turnleft@mL+1
  3598  00AA' C023' F013'        	movff	instructions@mR,turnleft@mR
  3599  00AE' C024' F014'        	movff	instructions@mR+1,turnleft@mR+1
  3600  00B2' 0E00               	movlw	0
  3601  00B4' 6F00'              	movwf	(turnleft@deg+1)& (0+255),b
  3602  00B6' 0E5A               	movlw	90
  3603  00B8' 6F00'              	movwf	turnleft@deg& (0+255),b
  3604  00BA' EC00' F000'        	call	_turnleft	;wreg free
  3605                           
  3606                           ;DC_motors.c: 231:         stop(mL, mR);
  3607  00BE' C021' F023'        	movff	instructions@mL,stop@mL
  3608  00C2' C022' F024'        	movff	instructions@mL+1,stop@mL+1
  3609  00C6' C023' F025'        	movff	instructions@mR,stop@mR
  3610  00CA' C024' F026'        	movff	instructions@mR+1,stop@mR+1
  3611  00CE' EC00' F000'        	call	_stop	;wreg free
  3612                           
  3613                           ;DC_motors.c: 232:     } else if (num==3) {
  3614  00D2' EF00' F000'        	goto	l704
  3615  00D6'                    l5215:
  3616                           
  3617                           ; BSR set to: 0
  3618  00D6' 0E03               	movlw	3
  3619  00D8' 1900'              	xorwf	instructions@num& (0+255),w,b
  3620  00DA' A4D8               	btfss	status,2,c
  3621  00DC' EF00' F000'        	goto	u5891
  3622  00E0' EF00' F000'        	goto	u5890
  3623  00E4'                    u5891:
  3624  00E4' EF00' F000'        	goto	l5219
  3625  00E8'                    u5890:
  3626  00E8'                    
  3627                           ; BSR set to: 0
  3628                           ;DC_motors.c: 234:         turnright(mL, mR, 180);
  3629  00E8' C021' F011'        	movff	instructions@mL,turnright@mL
  3630  00EC' C022' F012'        	movff	instructions@mL+1,turnright@mL+1
  3631  00F0' C023' F013'        	movff	instructions@mR,turnright@mR
  3632  00F4' C024' F014'        	movff	instructions@mR+1,turnright@mR+1
  3633  00F8' 0E00               	movlw	0
  3634  00FA' 6F00'              	movwf	(turnright@deg+1)& (0+255),b
  3635  00FC' 0EB4               	movlw	180
  3636  00FE' 6F00'              	movwf	turnright@deg& (0+255),b
  3637  0100' EC00' F000'        	call	_turnright	;wreg free
  3638                           
  3639                           ;DC_motors.c: 235:         stop(mL, mR);
  3640  0104' C021' F023'        	movff	instructions@mL,stop@mL
  3641  0108' C022' F024'        	movff	instructions@mL+1,stop@mL+1
  3642  010C' C023' F025'        	movff	instructions@mR,stop@mR
  3643  0110' C024' F026'        	movff	instructions@mR+1,stop@mR+1
  3644  0114' EC00' F000'        	call	_stop	;wreg free
  3645                           
  3646                           ;DC_motors.c: 236:     } else if (num==4) {
  3647  0118' EF00' F000'        	goto	l704
  3648  011C'                    l5219:
  3649                           
  3650                           ; BSR set to: 0
  3651  011C' 0E04               	movlw	4
  3652  011E' 1900'              	xorwf	instructions@num& (0+255),w,b
  3653  0120' A4D8               	btfss	status,2,c
  3654  0122' EF00' F000'        	goto	u5901
  3655  0126' EF00' F000'        	goto	u5900
  3656  012A'                    u5901:
  3657  012A' EF00' F000'        	goto	l5231
  3658  012E'                    u5900:
  3659  012E'                    
  3660                           ; BSR set to: 0
  3661                           ;DC_motors.c: 238:         reverse(mL, mR);
  3662  012E' C021' F023'        	movff	instructions@mL,reverse@mL
  3663  0132' C022' F024'        	movff	instructions@mL+1,reverse@mL+1
  3664  0136' C023' F025'        	movff	instructions@mR,reverse@mR
  3665  013A' C024' F026'        	movff	instructions@mR+1,reverse@mR+1
  3666  013E' EC00' F000'        	call	_reverse	;wreg free
  3667  0142'                    
  3668                           ;DC_motors.c: 239:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  3669  0142' 0E72               	movlw	114
  3670  0144' 6E00'              	movwf	(??_instructions+1)^0,c
  3671  0146' 0EA3               	movlw	163
  3672  0148' 6E00'              	movwf	??_instructions^0,c
  3673  014A' 0E9B               	movlw	155
  3674  014C'                    u7087:
  3675  014C' 2EE8               	decfsz	wreg,f,c
  3676  014E' D7FE               	bra	u7087
  3677  0150' 2E00'              	decfsz	??_instructions^0,f,c
  3678  0152' D7FC               	bra	u7087
  3679  0154' 2E00'              	decfsz	(??_instructions+1)^0,f,c
  3680  0156' D7FA               	bra	u7087
  3681  0158' F000               	nop	
  3682  015A'                    
  3683                           ;DC_motors.c: 240:         stop(mL, mR);
  3684  015A' C021' F023'        	movff	instructions@mL,stop@mL
  3685  015E' C022' F024'        	movff	instructions@mL+1,stop@mL+1
  3686  0162' C023' F025'        	movff	instructions@mR,stop@mR
  3687  0166' C024' F026'        	movff	instructions@mR+1,stop@mR+1
  3688  016A' EC00' F000'        	call	_stop	;wreg free
  3689                           
  3690                           ;DC_motors.c: 241:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3691  016E' 0E09               	movlw	9
  3692  0170' 6E00'              	movwf	(??_instructions+1)^0,c
  3693  0172' 0E1E               	movlw	30
  3694  0174' 6E00'              	movwf	??_instructions^0,c
  3695  0176' 0EE4               	movlw	228
  3696  0178'                    u7097:
  3697  0178' 2EE8               	decfsz	wreg,f,c
  3698  017A' D7FE               	bra	u7097
  3699  017C' 2E00'              	decfsz	??_instructions^0,f,c
  3700  017E' D7FC               	bra	u7097
  3701  0180' 2E00'              	decfsz	(??_instructions+1)^0,f,c
  3702  0182' D7FA               	bra	u7097
  3703  0184' D000               	nop2	
  3704  0186'                    
  3705                           ;DC_motors.c: 242:         turnright(mL, mR, 90);
  3706  0186' C021' F011'        	movff	instructions@mL,turnright@mL
  3707  018A' C022' F012'        	movff	instructions@mL+1,turnright@mL+1
  3708  018E' C023' F013'        	movff	instructions@mR,turnright@mR
  3709  0192' C024' F014'        	movff	instructions@mR+1,turnright@mR+1
  3710  0196' 0E00               	movlw	0
  3711  0198' 0100               	movlb	0	; () banked
  3712  019A' 6F00'              	movwf	(turnright@deg+1)& (0+255),b
  3713  019C' 0E5A               	movlw	90
  3714  019E' 6F00'              	movwf	turnright@deg& (0+255),b
  3715  01A0' EC00' F000'        	call	_turnright	;wreg free
  3716  01A4'                    l5229:
  3717                           
  3718                           ;DC_motors.c: 243:         stop(mL, mR);
  3719  01A4' C021' F023'        	movff	instructions@mL,stop@mL
  3720  01A8' C022' F024'        	movff	instructions@mL+1,stop@mL+1
  3721  01AC' C023' F025'        	movff	instructions@mR,stop@mR
  3722  01B0' C024' F026'        	movff	instructions@mR+1,stop@mR+1
  3723  01B4' EC00' F000'        	call	_stop	;wreg free
  3724                           
  3725                           ;DC_motors.c: 244:     } else if (num==5) {
  3726  01B8' EF00' F000'        	goto	l704
  3727  01BC'                    l5231:
  3728                           
  3729                           ; BSR set to: 0
  3730  01BC' 0E05               	movlw	5
  3731  01BE' 1900'              	xorwf	instructions@num& (0+255),w,b
  3732  01C0' A4D8               	btfss	status,2,c
  3733  01C2' EF00' F000'        	goto	u5911
  3734  01C6' EF00' F000'        	goto	u5910
  3735  01CA'                    u5911:
  3736  01CA' EF00' F000'        	goto	l5243
  3737  01CE'                    u5910:
  3738  01CE'                    
  3739                           ; BSR set to: 0
  3740                           ;DC_motors.c: 246:         reverse(mL, mR);
  3741  01CE' C021' F023'        	movff	instructions@mL,reverse@mL
  3742  01D2' C022' F024'        	movff	instructions@mL+1,reverse@mL+1
  3743  01D6' C023' F025'        	movff	instructions@mR,reverse@mR
  3744  01DA' C024' F026'        	movff	instructions@mR+1,reverse@mR+1
  3745  01DE' EC00' F000'        	call	_reverse	;wreg free
  3746  01E2'                    
  3747                           ;DC_motors.c: 247:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  3748  01E2' 0E72               	movlw	114
  3749  01E4' 6E00'              	movwf	(??_instructions+1)^0,c
  3750  01E6' 0EA3               	movlw	163
  3751  01E8' 6E00'              	movwf	??_instructions^0,c
  3752  01EA' 0E9B               	movlw	155
  3753  01EC'                    u7107:
  3754  01EC' 2EE8               	decfsz	wreg,f,c
  3755  01EE' D7FE               	bra	u7107
  3756  01F0' 2E00'              	decfsz	??_instructions^0,f,c
  3757  01F2' D7FC               	bra	u7107
  3758  01F4' 2E00'              	decfsz	(??_instructions+1)^0,f,c
  3759  01F6' D7FA               	bra	u7107
  3760  01F8' F000               	nop	
  3761  01FA'                    
  3762                           ;DC_motors.c: 248:         stop(mL, mR);
  3763  01FA' C021' F023'        	movff	instructions@mL,stop@mL
  3764  01FE' C022' F024'        	movff	instructions@mL+1,stop@mL+1
  3765  0202' C023' F025'        	movff	instructions@mR,stop@mR
  3766  0206' C024' F026'        	movff	instructions@mR+1,stop@mR+1
  3767  020A' EC00' F000'        	call	_stop	;wreg free
  3768                           
  3769                           ;DC_motors.c: 249:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3770  020E' 0E09               	movlw	9
  3771  0210' 6E00'              	movwf	(??_instructions+1)^0,c
  3772  0212' 0E1E               	movlw	30
  3773  0214' 6E00'              	movwf	??_instructions^0,c
  3774  0216' 0EE4               	movlw	228
  3775  0218'                    u7117:
  3776  0218' 2EE8               	decfsz	wreg,f,c
  3777  021A' D7FE               	bra	u7117
  3778  021C' 2E00'              	decfsz	??_instructions^0,f,c
  3779  021E' D7FC               	bra	u7117
  3780  0220' 2E00'              	decfsz	(??_instructions+1)^0,f,c
  3781  0222' D7FA               	bra	u7117
  3782  0224' D000               	nop2	
  3783  0226'                    
  3784                           ;DC_motors.c: 250:         turnleft(mL, mR, 90);
  3785  0226' C021' F011'        	movff	instructions@mL,turnleft@mL
  3786  022A' C022' F012'        	movff	instructions@mL+1,turnleft@mL+1
  3787  022E' C023' F013'        	movff	instructions@mR,turnleft@mR
  3788  0232' C024' F014'        	movff	instructions@mR+1,turnleft@mR+1
  3789  0236' 0E00               	movlw	0
  3790  0238' 0100               	movlb	0	; () banked
  3791  023A' 6F00'              	movwf	(turnleft@deg+1)& (0+255),b
  3792  023C' 0E5A               	movlw	90
  3793  023E' 6F00'              	movwf	turnleft@deg& (0+255),b
  3794  0240' EC00' F000'        	call	_turnleft	;wreg free
  3795  0244' EF00' F000'        	goto	l5229
  3796  0248'                    l5243:
  3797                           
  3798                           ; BSR set to: 0
  3799  0248' 0E06               	movlw	6
  3800  024A' 1900'              	xorwf	instructions@num& (0+255),w,b
  3801  024C' A4D8               	btfss	status,2,c
  3802  024E' EF00' F000'        	goto	u5921
  3803  0252' EF00' F000'        	goto	u5920
  3804  0256'                    u5921:
  3805  0256' EF00' F000'        	goto	l5247
  3806  025A'                    u5920:
  3807  025A'                    
  3808                           ; BSR set to: 0
  3809                           ;DC_motors.c: 254:         turnright(mL, mR, 135);
  3810  025A' C021' F011'        	movff	instructions@mL,turnright@mL
  3811  025E' C022' F012'        	movff	instructions@mL+1,turnright@mL+1
  3812  0262' C023' F013'        	movff	instructions@mR,turnright@mR
  3813  0266' C024' F014'        	movff	instructions@mR+1,turnright@mR+1
  3814  026A' 0E00               	movlw	0
  3815  026C' 6F00'              	movwf	(turnright@deg+1)& (0+255),b
  3816  026E' 0E87               	movlw	135
  3817  0270' 6F00'              	movwf	turnright@deg& (0+255),b
  3818  0272' EC00' F000'        	call	_turnright	;wreg free
  3819                           
  3820                           ;DC_motors.c: 255:         stop(mL, mR);
  3821  0276' C021' F023'        	movff	instructions@mL,stop@mL
  3822  027A' C022' F024'        	movff	instructions@mL+1,stop@mL+1
  3823  027E' C023' F025'        	movff	instructions@mR,stop@mR
  3824  0282' C024' F026'        	movff	instructions@mR+1,stop@mR+1
  3825  0286' EC00' F000'        	call	_stop	;wreg free
  3826                           
  3827                           ;DC_motors.c: 256:     } else if (num==7) {
  3828  028A' EF00' F000'        	goto	l704
  3829  028E'                    l5247:
  3830                           
  3831                           ; BSR set to: 0
  3832  028E' 0E07               	movlw	7
  3833  0290' 1900'              	xorwf	instructions@num& (0+255),w,b
  3834  0292' A4D8               	btfss	status,2,c
  3835  0294' EF00' F000'        	goto	u5931
  3836  0298' EF00' F000'        	goto	u5930
  3837  029C'                    u5931:
  3838  029C' EF00' F000'        	goto	l698
  3839  02A0'                    u5930:
  3840  02A0'                    
  3841                           ; BSR set to: 0
  3842                           ;DC_motors.c: 258:         turnleft(mL, mR, 135);
  3843  02A0' C021' F011'        	movff	instructions@mL,turnleft@mL
  3844  02A4' C022' F012'        	movff	instructions@mL+1,turnleft@mL+1
  3845  02A8' C023' F013'        	movff	instructions@mR,turnleft@mR
  3846  02AC' C024' F014'        	movff	instructions@mR+1,turnleft@mR+1
  3847  02B0' 0E00               	movlw	0
  3848  02B2' 6F00'              	movwf	(turnleft@deg+1)& (0+255),b
  3849  02B4' 0E87               	movlw	135
  3850  02B6' 6F00'              	movwf	turnleft@deg& (0+255),b
  3851  02B8' EC00' F000'        	call	_turnleft	;wreg free
  3852                           
  3853                           ;DC_motors.c: 259:         stop(mL, mR);
  3854  02BC' C021' F023'        	movff	instructions@mL,stop@mL
  3855  02C0' C022' F024'        	movff	instructions@mL+1,stop@mL+1
  3856  02C4' C023' F025'        	movff	instructions@mR,stop@mR
  3857  02C8' C024' F026'        	movff	instructions@mR+1,stop@mR+1
  3858  02CC' EC00' F000'        	call	_stop	;wreg free
  3859  02D0' EF00' F000'        	goto	l704
  3860  02D4'                    l698:
  3861  02D4'                    l704:
  3862  02D4' 0012               	return		;funcret
  3863  02D6'                    __end_of_instructions:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _clearance *****************
  3867 ;; Defined at:
  3868 ;;		line 123 in file "DC_motors.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  mL              2   41[COMRAM] PTR struct .
  3871 ;;		 -> main@motorL(9), 
  3872 ;;  mR              2   43[COMRAM] PTR struct .
  3873 ;;		 -> main@motorR(9), 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;Total ram usage:        6 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 10
  3892 ;; This function calls:
  3893 ;;		_reverse
  3894 ;;		_stop
  3895 ;; This function is called by:
  3896 ;;		_instructions
  3897 ;;		_DCmotors_testing
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text14
  3902  0000'                    __ptext14:
  3903                           	callstack 0
  3904  0000'                    _clearance:
  3905                           	callstack 17
  3906  0000'                    
  3907                           ;DC_motors.c: 124:     LATDbits.LATD3 = 0;
  3908  0000' 967C               	bcf	124,3,c	;volatile
  3909  0002'                    
  3910                           ;DC_motors.c: 125:     reverse(mL, mR);
  3911  0002' C029' F023'        	movff	clearance@mL,reverse@mL
  3912  0006' C02A' F024'        	movff	clearance@mL+1,reverse@mL+1
  3913  000A' C02B' F025'        	movff	clearance@mR,reverse@mR
  3914  000E' C02C' F026'        	movff	clearance@mR+1,reverse@mR+1
  3915  0012' EC00' F000'        	call	_reverse	;wreg free
  3916  0016'                    
  3917                           ;DC_motors.c: 126:     _delay((unsigned long)((350)*(64000000/4000.0)));
  3918  0016' 0E1D               	movlw	29
  3919  0018' 6E00'              	movwf	(??_clearance+1)^0,c
  3920  001A' 0E69               	movlw	105
  3921  001C' 6E00'              	movwf	??_clearance^0,c
  3922  001E' 0EA5               	movlw	165
  3923  0020'                    u7127:
  3924  0020' 2EE8               	decfsz	wreg,f,c
  3925  0022' D7FE               	bra	u7127
  3926  0024' 2E00'              	decfsz	??_clearance^0,f,c
  3927  0026' D7FC               	bra	u7127
  3928  0028' 2E00'              	decfsz	(??_clearance+1)^0,f,c
  3929  002A' D7FA               	bra	u7127
  3930  002C' F000               	nop	
  3931  002E'                    
  3932                           ;DC_motors.c: 127:     stop(mL, mR);
  3933  002E' C029' F023'        	movff	clearance@mL,stop@mL
  3934  0032' C02A' F024'        	movff	clearance@mL+1,stop@mL+1
  3935  0036' C02B' F025'        	movff	clearance@mR,stop@mR
  3936  003A' C02C' F026'        	movff	clearance@mR+1,stop@mR+1
  3937  003E' EC00' F000'        	call	_stop	;wreg free
  3938                           
  3939                           ;DC_motors.c: 128:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  3940  0042' 0E52               	movlw	82
  3941  0044' 6E00'              	movwf	(??_clearance+1)^0,c
  3942  0046' 0E2B               	movlw	43
  3943  0048' 6E00'              	movwf	??_clearance^0,c
  3944  004A' 0E00               	movlw	0
  3945  004C'                    u7137:
  3946  004C' 2EE8               	decfsz	wreg,f,c
  3947  004E' D7FE               	bra	u7137
  3948  0050' 2E00'              	decfsz	??_clearance^0,f,c
  3949  0052' D7FC               	bra	u7137
  3950  0054' 2E00'              	decfsz	(??_clearance+1)^0,f,c
  3951  0056' D7FA               	bra	u7137
  3952  0058' D000               	nop2	
  3953  005A'                    
  3954                           ;DC_motors.c: 129:     LATDbits.LATD3 = 0;
  3955  005A' 967C               	bcf	124,3,c	;volatile
  3956  005C' 0012               	return		;funcret
  3957  005E'                    __end_of_clearance:
  3958                           	callstack 0
  3959                           
  3960 ;; *************** function _reverse *****************
  3961 ;; Defined at:
  3962 ;;		line 104 in file "DC_motors.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  mL              2   35[COMRAM] PTR struct .
  3965 ;;		 -> main@motorL(9), 
  3966 ;;  mR              2   37[COMRAM] PTR struct .
  3967 ;;		 -> main@motorR(9), 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  1    wreg      void 
  3972 ;; Registers used:
  3973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;Total ram usage:        5 bytes
  3984 ;; Hardware stack levels used: 1
  3985 ;; Hardware stack levels required when called: 9
  3986 ;; This function calls:
  3987 ;;		_DCmotors_setPWM
  3988 ;; This function is called by:
  3989 ;;		_main
  3990 ;;		_clearance
  3991 ;;		_instructions
  3992 ;;		_returnhome
  3993 ;;		_DCmotors_testing
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text15
  3998  0000'                    __ptext15:
  3999                           	callstack 0
  4000  0000'                    _reverse:
  4001                           	callstack 21
  4002  0000'                    
  4003                           ;DC_motors.c: 106:     mL->direction = 0;
  4004  0000' EE20 F001          	lfsr	2,1
  4005  0004' 5000'              	movf	reverse@mL^0,w,c
  4006  0006' 26D9               	addwf	fsr2l,f,c
  4007  0008' 5000'              	movf	(reverse@mL+1)^0,w,c
  4008  000A' 22DA               	addwfc	fsr2h,f,c
  4009  000C' 0E00               	movlw	0
  4010  000E' 6EDF               	movwf	indf2,c
  4011                           
  4012                           ;DC_motors.c: 107:     mR->direction = 0;
  4013  0010' EE20 F001          	lfsr	2,1
  4014  0014' 5000'              	movf	reverse@mR^0,w,c
  4015  0016' 26D9               	addwf	fsr2l,f,c
  4016  0018' 5000'              	movf	(reverse@mR+1)^0,w,c
  4017  001A' 22DA               	addwfc	fsr2h,f,c
  4018  001C' 0E00               	movlw	0
  4019  001E' 6EDF               	movwf	indf2,c
  4020                           
  4021                           ;DC_motors.c: 109:     while((mL->power < 50) && (mR->power < 50)){
  4022  0020' EF00' F000'        	goto	l3381
  4023  0024'                    l3373:
  4024                           
  4025                           ;DC_motors.c: 110:         mL->power += 10;
  4026  0024' C023' FFD9         	movff	reverse@mL,fsr2l
  4027  0028' C024' FFDA         	movff	reverse@mL+1,fsr2h
  4028  002C' 0E0A               	movlw	10
  4029  002E' 26DF               	addwf	indf2,f,c
  4030                           
  4031                           ;DC_motors.c: 111:         mR->power += 10;
  4032  0030' C025' FFD9         	movff	reverse@mR,fsr2l
  4033  0034' C026' FFDA         	movff	reverse@mR+1,fsr2h
  4034  0038' 0E0A               	movlw	10
  4035  003A' 26DF               	addwf	indf2,f,c
  4036  003C'                    
  4037                           ;DC_motors.c: 113:         DCmotors_setPWM(mL);
  4038  003C' C023' F018'        	movff	reverse@mL,DCmotors_setPWM@m
  4039  0040' C024' F019'        	movff	reverse@mL+1,DCmotors_setPWM@m+1
  4040  0044' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  4041  0048'                    
  4042                           ;DC_motors.c: 114:         DCmotors_setPWM(mR);
  4043  0048' C025' F018'        	movff	reverse@mR,DCmotors_setPWM@m
  4044  004C' C026' F019'        	movff	reverse@mR+1,DCmotors_setPWM@m+1
  4045  0050' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  4046  0054'                    
  4047                           ;DC_motors.c: 115:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  4048  0054' 0EA0               	movlw	160
  4049  0056'                    u7147:
  4050  0056' D000               	nop2	
  4051  0058' 2EE8               	decfsz	wreg,f,c
  4052  005A' D7FD               	bra	u7147
  4053  005C'                    l3381:
  4054                           
  4055                           ;DC_motors.c: 109:     while((mL->power < 50) && (mR->power < 50)){
  4056  005C' C023' FFD9         	movff	reverse@mL,fsr2l
  4057  0060' C024' FFDA         	movff	reverse@mL+1,fsr2h
  4058  0064' 0E32               	movlw	50
  4059  0066' 60DF               	cpfslt	indf2,c
  4060  0068' EF00' F000'        	goto	u2951
  4061  006C' EF00' F000'        	goto	u2950
  4062  0070'                    u2951:
  4063  0070' EF00' F000'        	goto	l654
  4064  0074'                    u2950:
  4065  0074' C025' FFD9         	movff	reverse@mR,fsr2l
  4066  0078' C026' FFDA         	movff	reverse@mR+1,fsr2h
  4067  007C' 0E31               	movlw	49
  4068  007E' 64DF               	cpfsgt	indf2,c
  4069  0080' EF00' F000'        	goto	u2961
  4070  0084' EF00' F000'        	goto	u2960
  4071  0088'                    u2961:
  4072  0088' EF00' F000'        	goto	l3373
  4073  008C'                    u2960:
  4074  008C'                    l654:
  4075  008C' 0012               	return		;funcret
  4076  008E'                    __end_of_reverse:
  4077                           	callstack 0
  4078                           
  4079 ;; *************** function _forward *****************
  4080 ;; Defined at:
  4081 ;;		line 86 in file "DC_motors.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  mL              2   35[COMRAM] PTR struct .
  4084 ;;		 -> main@motorL(9), 
  4085 ;;  mR              2   37[COMRAM] PTR struct .
  4086 ;;		 -> main@motorR(9), 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;Total ram usage:        5 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 9
  4105 ;; This function calls:
  4106 ;;		_DCmotors_setPWM
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;;		_colourcards_readRGBC
  4110 ;;		_reverseinstructions
  4111 ;;		_DCmotors_testing
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text16
  4116  0000'                    __ptext16:
  4117                           	callstack 0
  4118  0000'                    _forward:
  4119                           	callstack 19
  4120  0000'                    
  4121                           ;DC_motors.c: 87:     mL->direction = 1;
  4122  0000' EE20 F001          	lfsr	2,1
  4123  0004' 5000'              	movf	forward@mL^0,w,c
  4124  0006' 26D9               	addwf	fsr2l,f,c
  4125  0008' 5000'              	movf	(forward@mL+1)^0,w,c
  4126  000A' 22DA               	addwfc	fsr2h,f,c
  4127  000C' 0E01               	movlw	1
  4128  000E' 6EDF               	movwf	indf2,c
  4129                           
  4130                           ;DC_motors.c: 88:     mR->direction = 1;
  4131  0010' EE20 F001          	lfsr	2,1
  4132  0014' 5000'              	movf	forward@mR^0,w,c
  4133  0016' 26D9               	addwf	fsr2l,f,c
  4134  0018' 5000'              	movf	(forward@mR+1)^0,w,c
  4135  001A' 22DA               	addwfc	fsr2h,f,c
  4136  001C' 0E01               	movlw	1
  4137  001E' 6EDF               	movwf	indf2,c
  4138                           
  4139                           ;DC_motors.c: 90:     while((mL->power < 20) && (mR->power < 20)){
  4140  0020' EF00' F000'        	goto	l4087
  4141  0024'                    l4079:
  4142                           
  4143                           ;DC_motors.c: 91:         mL->power += 10;
  4144  0024' C023' FFD9         	movff	forward@mL,fsr2l
  4145  0028' C024' FFDA         	movff	forward@mL+1,fsr2h
  4146  002C' 0E0A               	movlw	10
  4147  002E' 26DF               	addwf	indf2,f,c
  4148                           
  4149                           ;DC_motors.c: 92:         mR->power += 10;
  4150  0030' C025' FFD9         	movff	forward@mR,fsr2l
  4151  0034' C026' FFDA         	movff	forward@mR+1,fsr2h
  4152  0038' 0E0A               	movlw	10
  4153  003A' 26DF               	addwf	indf2,f,c
  4154  003C'                    
  4155                           ;DC_motors.c: 94:         DCmotors_setPWM(mL);
  4156  003C' C023' F018'        	movff	forward@mL,DCmotors_setPWM@m
  4157  0040' C024' F019'        	movff	forward@mL+1,DCmotors_setPWM@m+1
  4158  0044' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  4159  0048'                    
  4160                           ;DC_motors.c: 95:         DCmotors_setPWM(mR);
  4161  0048' C025' F018'        	movff	forward@mR,DCmotors_setPWM@m
  4162  004C' C026' F019'        	movff	forward@mR+1,DCmotors_setPWM@m+1
  4163  0050' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  4164  0054'                    
  4165                           ;DC_motors.c: 96:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  4166  0054' 0EA0               	movlw	160
  4167  0056'                    u7157:
  4168  0056' D000               	nop2	
  4169  0058' 2EE8               	decfsz	wreg,f,c
  4170  005A' D7FD               	bra	u7157
  4171  005C'                    l4087:
  4172                           
  4173                           ;DC_motors.c: 90:     while((mL->power < 20) && (mR->power < 20)){
  4174  005C' C023' FFD9         	movff	forward@mL,fsr2l
  4175  0060' C024' FFDA         	movff	forward@mL+1,fsr2h
  4176  0064' 0E14               	movlw	20
  4177  0066' 60DF               	cpfslt	indf2,c
  4178  0068' EF00' F000'        	goto	u4101
  4179  006C' EF00' F000'        	goto	u4100
  4180  0070'                    u4101:
  4181  0070' EF00' F000'        	goto	l646
  4182  0074'                    u4100:
  4183  0074' C025' FFD9         	movff	forward@mR,fsr2l
  4184  0078' C026' FFDA         	movff	forward@mR+1,fsr2h
  4185  007C' 0E13               	movlw	19
  4186  007E' 64DF               	cpfsgt	indf2,c
  4187  0080' EF00' F000'        	goto	u4111
  4188  0084' EF00' F000'        	goto	u4110
  4189  0088'                    u4111:
  4190  0088' EF00' F000'        	goto	l4079
  4191  008C'                    u4110:
  4192  008C'                    l646:
  4193  008C' 0012               	return		;funcret
  4194  008E'                    __end_of_forward:
  4195                           	callstack 0
  4196                           
  4197 ;; *************** function _colourclick_readRGBC2 *****************
  4198 ;; Defined at:
  4199 ;;		line 124 in file "colour_click.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  tmpval          2   23[COMRAM] PTR struct .
  4202 ;;		 -> colourcards_testingRGBC2@abs(8), main@current(8), 
  4203 ;;  mode            1   25[COMRAM] unsigned char 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4215 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4218 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;Total ram usage:        5 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 11
  4222 ;; This function calls:
  4223 ;;		_colourclickLEDs_C
  4224 ;;		_colourclick_readRGBC
  4225 ;; This function is called by:
  4226 ;;		_colourcards_readRGBC
  4227 ;;		_colourcards_testingRGBC2
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text17
  4232  0000'                    __ptext17:
  4233                           	callstack 0
  4234  0000'                    _colourclick_readRGBC2:
  4235                           	callstack 18
  4236  0000'                    
  4237                           ;colour_click.c: 125:     colourclickLEDs_C(0);
  4238  0000' 0E00               	movlw	0
  4239  0002' EC00' F000'        	call	_colourclickLEDs_C
  4240  0006'                    
  4241                           ;colour_click.c: 126:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4242  0006' 0E09               	movlw	9
  4243  0008' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4244  000A' 0E1E               	movlw	30
  4245  000C' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4246  000E' 0EE4               	movlw	228
  4247  0010'                    u7167:
  4248  0010' 2EE8               	decfsz	wreg,f,c
  4249  0012' D7FE               	bra	u7167
  4250  0014' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4251  0016' D7FC               	bra	u7167
  4252  0018' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4253  001A' D7FA               	bra	u7167
  4254  001C' D000               	nop2	
  4255  001E'                    
  4256                           ;colour_click.c: 128:     if (mode==1) {
  4257  001E' 0400'              	decf	colourclick_readRGBC2@mode^0,w,c
  4258  0020' A4D8               	btfss	status,2,c
  4259  0022' EF00' F000'        	goto	u4201
  4260  0026' EF00' F000'        	goto	u4200
  4261  002A'                    u4201:
  4262  002A' EF00' F000'        	goto	l4195
  4263  002E'                    u4200:
  4264  002E'                    
  4265                           ;colour_click.c: 129:         LATGbits.LATG1 = 1;
  4266  002E' 827F               	bsf	127,1,c	;volatile
  4267  0030'                    
  4268                           ;colour_click.c: 130:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4269  0030' 0E52               	movlw	82
  4270  0032' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4271  0034' 0E2B               	movlw	43
  4272  0036' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4273  0038' 0E00               	movlw	0
  4274  003A'                    u7177:
  4275  003A' 2EE8               	decfsz	wreg,f,c
  4276  003C' D7FE               	bra	u7177
  4277  003E' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4278  0040' D7FC               	bra	u7177
  4279  0042' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4280  0044' D7FA               	bra	u7177
  4281  0046' D000               	nop2	
  4282  0048'                    
  4283                           ;colour_click.c: 131:         colourclick_readRGBC(tmpval);
  4284  0048' C017' F015'        	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  4285  004C' C018' F016'        	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  4286  0050' EC00' F000'        	call	_colourclick_readRGBC	;wreg free
  4287  0054'                    
  4288                           ;colour_click.c: 132:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4289  0054' 0E52               	movlw	82
  4290  0056' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4291  0058' 0E2B               	movlw	43
  4292  005A' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4293  005C' 0E00               	movlw	0
  4294  005E'                    u7187:
  4295  005E' 2EE8               	decfsz	wreg,f,c
  4296  0060' D7FE               	bra	u7187
  4297  0062' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4298  0064' D7FC               	bra	u7187
  4299  0066' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4300  0068' D7FA               	bra	u7187
  4301  006A' D000               	nop2	
  4302  006C'                    
  4303                           ;colour_click.c: 133:         LATGbits.LATG1 = 0;
  4304  006C' 927F               	bcf	127,1,c	;volatile
  4305  006E'                    l4193:
  4306                           
  4307                           ;colour_click.c: 134:         _delay((unsigned long)((20)*(64000000/4000.0)));
  4308  006E' 0E02               	movlw	2
  4309  0070' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4310  0072' 0EA0               	movlw	160
  4311  0074' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4312  0076' 0E92               	movlw	146
  4313  0078'                    u7197:
  4314  0078' 2EE8               	decfsz	wreg,f,c
  4315  007A' D7FE               	bra	u7197
  4316  007C' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4317  007E' D7FC               	bra	u7197
  4318  0080' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4319  0082' D7FA               	bra	u7197
  4320  0084' D000               	nop2	
  4321                           
  4322                           ;colour_click.c: 136:     } else if (mode==2) {
  4323  0086' EF00' F000'        	goto	l4223
  4324  008A'                    l4195:
  4325  008A' 0E02               	movlw	2
  4326  008C' 1800'              	xorwf	colourclick_readRGBC2@mode^0,w,c
  4327  008E' A4D8               	btfss	status,2,c
  4328  0090' EF00' F000'        	goto	u4211
  4329  0094' EF00' F000'        	goto	u4210
  4330  0098'                    u4211:
  4331  0098' EF00' F000'        	goto	l4209
  4332  009C'                    u4210:
  4333  009C'                    
  4334                           ;colour_click.c: 137:         LATAbits.LATA4 = 1;
  4335  009C' 8879               	bsf	121,4,c	;volatile
  4336  009E'                    
  4337                           ;colour_click.c: 138:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4338  009E' 0E52               	movlw	82
  4339  00A0' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4340  00A2' 0E2B               	movlw	43
  4341  00A4' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4342  00A6' 0E00               	movlw	0
  4343  00A8'                    u7207:
  4344  00A8' 2EE8               	decfsz	wreg,f,c
  4345  00AA' D7FE               	bra	u7207
  4346  00AC' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4347  00AE' D7FC               	bra	u7207
  4348  00B0' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4349  00B2' D7FA               	bra	u7207
  4350  00B4' D000               	nop2	
  4351  00B6'                    
  4352                           ;colour_click.c: 139:         colourclick_readRGBC(tmpval);
  4353  00B6' C017' F015'        	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  4354  00BA' C018' F016'        	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  4355  00BE' EC00' F000'        	call	_colourclick_readRGBC	;wreg free
  4356  00C2'                    
  4357                           ;colour_click.c: 140:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4358  00C2' 0E52               	movlw	82
  4359  00C4' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4360  00C6' 0E2B               	movlw	43
  4361  00C8' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4362  00CA' 0E00               	movlw	0
  4363  00CC'                    u7217:
  4364  00CC' 2EE8               	decfsz	wreg,f,c
  4365  00CE' D7FE               	bra	u7217
  4366  00D0' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4367  00D2' D7FC               	bra	u7217
  4368  00D4' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4369  00D6' D7FA               	bra	u7217
  4370  00D8' D000               	nop2	
  4371  00DA'                    
  4372                           ;colour_click.c: 141:         LATAbits.LATA4 = 0;
  4373  00DA' 9879               	bcf	121,4,c	;volatile
  4374  00DC' EF00' F000'        	goto	l4193
  4375  00E0'                    l4209:
  4376  00E0' 0E03               	movlw	3
  4377  00E2' 1800'              	xorwf	colourclick_readRGBC2@mode^0,w,c
  4378  00E4' A4D8               	btfss	status,2,c
  4379  00E6' EF00' F000'        	goto	u4221
  4380  00EA' EF00' F000'        	goto	u4220
  4381  00EE'                    u4221:
  4382  00EE' EF00' F000'        	goto	l4223
  4383  00F2'                    u4220:
  4384  00F2'                    
  4385                           ;colour_click.c: 145:         LATFbits.LATF7 = 1;
  4386  00F2' 8E7E               	bsf	126,7,c	;volatile
  4387  00F4'                    
  4388                           ;colour_click.c: 146:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4389  00F4' 0E52               	movlw	82
  4390  00F6' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4391  00F8' 0E2B               	movlw	43
  4392  00FA' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4393  00FC' 0E00               	movlw	0
  4394  00FE'                    u7227:
  4395  00FE' 2EE8               	decfsz	wreg,f,c
  4396  0100' D7FE               	bra	u7227
  4397  0102' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4398  0104' D7FC               	bra	u7227
  4399  0106' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4400  0108' D7FA               	bra	u7227
  4401  010A' D000               	nop2	
  4402  010C'                    
  4403                           ;colour_click.c: 147:         colourclick_readRGBC(tmpval);
  4404  010C' C017' F015'        	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  4405  0110' C018' F016'        	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  4406  0114' EC00' F000'        	call	_colourclick_readRGBC	;wreg free
  4407  0118'                    
  4408                           ;colour_click.c: 148:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4409  0118' 0E52               	movlw	82
  4410  011A' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4411  011C' 0E2B               	movlw	43
  4412  011E' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4413  0120' 0E00               	movlw	0
  4414  0122'                    u7237:
  4415  0122' 2EE8               	decfsz	wreg,f,c
  4416  0124' D7FE               	bra	u7237
  4417  0126' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4418  0128' D7FC               	bra	u7237
  4419  012A' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4420  012C' D7FA               	bra	u7237
  4421  012E' D000               	nop2	
  4422  0130'                    
  4423                           ;colour_click.c: 149:         LATFbits.LATF7 = 0;
  4424  0130' 9E7E               	bcf	126,7,c	;volatile
  4425  0132' EF00' F000'        	goto	l4193
  4426  0136'                    l4223:
  4427                           
  4428                           ;colour_click.c: 153:     colourclickLEDs_C(1);
  4429  0136' 0E01               	movlw	1
  4430  0138' EC00' F000'        	call	_colourclickLEDs_C
  4431  013C'                    
  4432                           ;colour_click.c: 154:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4433  013C' 0E09               	movlw	9
  4434  013E' 6E00'              	movwf	(??_colourclick_readRGBC2+1)^0,c
  4435  0140' 0E1E               	movlw	30
  4436  0142' 6E00'              	movwf	??_colourclick_readRGBC2^0,c
  4437  0144' 0EE4               	movlw	228
  4438  0146'                    u7247:
  4439  0146' 2EE8               	decfsz	wreg,f,c
  4440  0148' D7FE               	bra	u7247
  4441  014A' 2E00'              	decfsz	??_colourclick_readRGBC2^0,f,c
  4442  014C' D7FC               	bra	u7247
  4443  014E' 2E00'              	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4444  0150' D7FA               	bra	u7247
  4445  0152' D000               	nop2	
  4446  0154' 0012               	return		;funcret
  4447  0156'                    __end_of_colourclick_readRGBC2:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _colourclick_readRGBC *****************
  4451 ;; Defined at:
  4452 ;;		line 113 in file "colour_click.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  tmpval          2   21[COMRAM] PTR struct .
  4455 ;;		 -> colourclick_calibration@initial(8), colourcards_testingRGBC2@abs(8), main@current(8), 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;Total ram usage:        2 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 10
  4474 ;; This function calls:
  4475 ;;		_colourclick_readB
  4476 ;;		_colourclick_readC
  4477 ;;		_colourclick_readG
  4478 ;;		_colourclick_readR
  4479 ;; This function is called by:
  4480 ;;		_main
  4481 ;;		_colourcards_readRGBC
  4482 ;;		_colourclick_readRGBC2
  4483 ;;		_colourclick_calibration
  4484 ;;		_colourcards_testingRGBC2
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text18
  4489  0000'                    __ptext18:
  4490                           	callstack 0
  4491  0000'                    _colourclick_readRGBC:
  4492                           	callstack 20
  4493  0000'                    
  4494                           ;colour_click.c: 114:     tmpval->R = colourclick_readR();
  4495  0000' EC00' F000'        	call	_colourclick_readR	;wreg free
  4496  0004' C015' FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  4497  0008' C016' FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  4498  000C' C00E' FFDE         	movff	?_colourclick_readR,postinc2
  4499  0010' C00F' FFDD         	movff	?_colourclick_readR+1,postdec2
  4500                           
  4501                           ;colour_click.c: 115:     tmpval->G = colourclick_readG();
  4502  0014' EC00' F000'        	call	_colourclick_readG	;wreg free
  4503  0018' EE20 F002          	lfsr	2,2
  4504  001C' 5000'              	movf	colourclick_readRGBC@tmpval^0,w,c
  4505  001E' 26D9               	addwf	fsr2l,f,c
  4506  0020' 5000'              	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  4507  0022' 22DA               	addwfc	fsr2h,f,c
  4508  0024' C00E' FFDE         	movff	?_colourclick_readG,postinc2
  4509  0028' C00F' FFDD         	movff	?_colourclick_readG+1,postdec2
  4510                           
  4511                           ;colour_click.c: 116:     tmpval->B = colourclick_readB();
  4512  002C' EC00' F000'        	call	_colourclick_readB	;wreg free
  4513  0030' EE20 F004          	lfsr	2,4
  4514  0034' 5000'              	movf	colourclick_readRGBC@tmpval^0,w,c
  4515  0036' 26D9               	addwf	fsr2l,f,c
  4516  0038' 5000'              	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  4517  003A' 22DA               	addwfc	fsr2h,f,c
  4518  003C' C00E' FFDE         	movff	?_colourclick_readB,postinc2
  4519  0040' C00F' FFDD         	movff	?_colourclick_readB+1,postdec2
  4520                           
  4521                           ;colour_click.c: 117:     tmpval->C = colourclick_readC();
  4522  0044' EC00' F000'        	call	_colourclick_readC	;wreg free
  4523  0048' EE20 F006          	lfsr	2,6
  4524  004C' 5000'              	movf	colourclick_readRGBC@tmpval^0,w,c
  4525  004E' 26D9               	addwf	fsr2l,f,c
  4526  0050' 5000'              	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  4527  0052' 22DA               	addwfc	fsr2h,f,c
  4528  0054' C00E' FFDE         	movff	?_colourclick_readC,postinc2
  4529  0058' C00F' FFDD         	movff	?_colourclick_readC+1,postdec2
  4530  005C' 0012               	return		;funcret
  4531  005E'                    __end_of_colourclick_readRGBC:
  4532                           	callstack 0
  4533                           
  4534 ;; *************** function _colourclick_readR *****************
  4535 ;; Defined at:
  4536 ;;		line 45 in file "colour_click.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  tmp             2   19[COMRAM] unsigned int 
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  2   14[COMRAM] unsigned int 
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4552 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4553 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4554 ;;Total ram usage:        7 bytes
  4555 ;; Hardware stack levels used: 1
  4556 ;; Hardware stack levels required when called: 9
  4557 ;; This function calls:
  4558 ;;		_I2C_2_Master_Read
  4559 ;;		_I2C_2_Master_RepStart
  4560 ;;		_I2C_2_Master_Start
  4561 ;;		_I2C_2_Master_Stop
  4562 ;;		_I2C_2_Master_Write
  4563 ;; This function is called by:
  4564 ;;		_colourclick_readRGBC
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text19
  4569  0000'                    __ptext19:
  4570                           	callstack 0
  4571  0000'                    _colourclick_readR:
  4572                           	callstack 20
  4573  0000'                    
  4574                           ;colour_click.c: 46:  unsigned int tmp;;colour_click.c: 47:  I2C_2_Master_Start();
  4575  0000' EC00' F000'        	call	_I2C_2_Master_Start	;wreg free
  4576                           
  4577                           ;colour_click.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  4578  0004' 0E52               	movlw	82
  4579  0006' EC00' F000'        	call	_I2C_2_Master_Write
  4580                           
  4581                           ;colour_click.c: 49:  I2C_2_Master_Write(0xA0 | 0x16);
  4582  000A' 0EB6               	movlw	182
  4583  000C' EC00' F000'        	call	_I2C_2_Master_Write
  4584                           
  4585                           ;colour_click.c: 50:  I2C_2_Master_RepStart();
  4586  0010' EC00' F000'        	call	_I2C_2_Master_RepStart	;wreg free
  4587                           
  4588                           ;colour_click.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  4589  0014' 0E53               	movlw	83
  4590  0016' EC00' F000'        	call	_I2C_2_Master_Write
  4591                           
  4592                           ;colour_click.c: 52:  tmp=I2C_2_Master_Read(1);
  4593  001A' 0E01               	movlw	1
  4594  001C' EC00' F000'        	call	_I2C_2_Master_Read
  4595  0020' 6E00'              	movwf	??_colourclick_readR^0,c
  4596  0022' 5000'              	movf	??_colourclick_readR^0,w,c
  4597  0024' 6E00'              	movwf	colourclick_readR@tmp^0,c
  4598  0026' 6A00'              	clrf	(colourclick_readR@tmp+1)^0,c
  4599                           
  4600                           ;colour_click.c: 53:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  4601  0028' 0E00               	movlw	0
  4602  002A' EC00' F000'        	call	_I2C_2_Master_Read
  4603  002E' 6E00'              	movwf	??_colourclick_readR^0,c
  4604  0030' 5000'              	movf	??_colourclick_readR^0,w,c
  4605  0032' 6E00'              	movwf	(??_colourclick_readR+2)^0,c
  4606  0034' 6A00'              	clrf	(??_colourclick_readR+1)^0,c
  4607  0036' 5000'              	movf	colourclick_readR@tmp^0,w,c
  4608  0038' 1000'              	iorwf	(??_colourclick_readR+1)^0,w,c
  4609  003A' 6E00'              	movwf	colourclick_readR@tmp^0,c
  4610  003C' 5000'              	movf	(colourclick_readR@tmp+1)^0,w,c
  4611  003E' 1000'              	iorwf	(??_colourclick_readR+2)^0,w,c
  4612  0040' 6E00'              	movwf	(colourclick_readR@tmp+1)^0,c
  4613                           
  4614                           ;colour_click.c: 54:  I2C_2_Master_Stop();
  4615  0042' EC00' F000'        	call	_I2C_2_Master_Stop	;wreg free
  4616  0046'                    
  4617                           ;colour_click.c: 55:  return tmp;
  4618  0046' C013' F00E'        	movff	colourclick_readR@tmp,?_colourclick_readR
  4619  004A' C014' F00F'        	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  4620  004E' 0012               	return		;funcret
  4621  0050'                    __end_of_colourclick_readR:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _colourclick_readG *****************
  4625 ;; Defined at:
  4626 ;;		line 62 in file "colour_click.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  tmp             2   19[COMRAM] unsigned int 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  2   14[COMRAM] unsigned int 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4642 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;Total ram usage:        7 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 9
  4647 ;; This function calls:
  4648 ;;		_I2C_2_Master_Read
  4649 ;;		_I2C_2_Master_RepStart
  4650 ;;		_I2C_2_Master_Start
  4651 ;;		_I2C_2_Master_Stop
  4652 ;;		_I2C_2_Master_Write
  4653 ;; This function is called by:
  4654 ;;		_colourclick_readRGBC
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text20
  4659  0000'                    __ptext20:
  4660                           	callstack 0
  4661  0000'                    _colourclick_readG:
  4662                           	callstack 20
  4663  0000'                    
  4664                           ;colour_click.c: 63:  unsigned int tmp;;colour_click.c: 64:  I2C_2_Master_Start();
  4665  0000' EC00' F000'        	call	_I2C_2_Master_Start	;wreg free
  4666                           
  4667                           ;colour_click.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  4668  0004' 0E52               	movlw	82
  4669  0006' EC00' F000'        	call	_I2C_2_Master_Write
  4670                           
  4671                           ;colour_click.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  4672  000A' 0EB8               	movlw	184
  4673  000C' EC00' F000'        	call	_I2C_2_Master_Write
  4674                           
  4675                           ;colour_click.c: 67:  I2C_2_Master_RepStart();
  4676  0010' EC00' F000'        	call	_I2C_2_Master_RepStart	;wreg free
  4677                           
  4678                           ;colour_click.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  4679  0014' 0E53               	movlw	83
  4680  0016' EC00' F000'        	call	_I2C_2_Master_Write
  4681                           
  4682                           ;colour_click.c: 69:  tmp=I2C_2_Master_Read(1);
  4683  001A' 0E01               	movlw	1
  4684  001C' EC00' F000'        	call	_I2C_2_Master_Read
  4685  0020' 6E00'              	movwf	??_colourclick_readG^0,c
  4686  0022' 5000'              	movf	??_colourclick_readG^0,w,c
  4687  0024' 6E00'              	movwf	colourclick_readG@tmp^0,c
  4688  0026' 6A00'              	clrf	(colourclick_readG@tmp+1)^0,c
  4689                           
  4690                           ;colour_click.c: 70:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  4691  0028' 0E00               	movlw	0
  4692  002A' EC00' F000'        	call	_I2C_2_Master_Read
  4693  002E' 6E00'              	movwf	??_colourclick_readG^0,c
  4694  0030' 5000'              	movf	??_colourclick_readG^0,w,c
  4695  0032' 6E00'              	movwf	(??_colourclick_readG+2)^0,c
  4696  0034' 6A00'              	clrf	(??_colourclick_readG+1)^0,c
  4697  0036' 5000'              	movf	colourclick_readG@tmp^0,w,c
  4698  0038' 1000'              	iorwf	(??_colourclick_readG+1)^0,w,c
  4699  003A' 6E00'              	movwf	colourclick_readG@tmp^0,c
  4700  003C' 5000'              	movf	(colourclick_readG@tmp+1)^0,w,c
  4701  003E' 1000'              	iorwf	(??_colourclick_readG+2)^0,w,c
  4702  0040' 6E00'              	movwf	(colourclick_readG@tmp+1)^0,c
  4703                           
  4704                           ;colour_click.c: 71:  I2C_2_Master_Stop();
  4705  0042' EC00' F000'        	call	_I2C_2_Master_Stop	;wreg free
  4706  0046'                    
  4707                           ;colour_click.c: 72:  return tmp;
  4708  0046' C013' F00E'        	movff	colourclick_readG@tmp,?_colourclick_readG
  4709  004A' C014' F00F'        	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  4710  004E' 0012               	return		;funcret
  4711  0050'                    __end_of_colourclick_readG:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _colourclick_readC *****************
  4715 ;; Defined at:
  4716 ;;		line 96 in file "colour_click.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  tmp             2   19[COMRAM] unsigned int 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  2   14[COMRAM] unsigned int 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4732 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4733 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4734 ;;Total ram usage:        7 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 9
  4737 ;; This function calls:
  4738 ;;		_I2C_2_Master_Read
  4739 ;;		_I2C_2_Master_RepStart
  4740 ;;		_I2C_2_Master_Start
  4741 ;;		_I2C_2_Master_Stop
  4742 ;;		_I2C_2_Master_Write
  4743 ;; This function is called by:
  4744 ;;		_colourclick_readRGBC
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text21
  4749  0000'                    __ptext21:
  4750                           	callstack 0
  4751  0000'                    _colourclick_readC:
  4752                           	callstack 20
  4753  0000'                    
  4754                           ;colour_click.c: 97:  unsigned int tmp;;colour_click.c: 98:  I2C_2_Master_Start();
  4755  0000' EC00' F000'        	call	_I2C_2_Master_Start	;wreg free
  4756                           
  4757                           ;colour_click.c: 99:  I2C_2_Master_Write(0x52 | 0x00);
  4758  0004' 0E52               	movlw	82
  4759  0006' EC00' F000'        	call	_I2C_2_Master_Write
  4760                           
  4761                           ;colour_click.c: 100:  I2C_2_Master_Write(0xA0 | 0x14);
  4762  000A' 0EB4               	movlw	180
  4763  000C' EC00' F000'        	call	_I2C_2_Master_Write
  4764                           
  4765                           ;colour_click.c: 101:  I2C_2_Master_RepStart();
  4766  0010' EC00' F000'        	call	_I2C_2_Master_RepStart	;wreg free
  4767                           
  4768                           ;colour_click.c: 102:  I2C_2_Master_Write(0x52 | 0x01);
  4769  0014' 0E53               	movlw	83
  4770  0016' EC00' F000'        	call	_I2C_2_Master_Write
  4771                           
  4772                           ;colour_click.c: 103:  tmp=I2C_2_Master_Read(1);
  4773  001A' 0E01               	movlw	1
  4774  001C' EC00' F000'        	call	_I2C_2_Master_Read
  4775  0020' 6E00'              	movwf	??_colourclick_readC^0,c
  4776  0022' 5000'              	movf	??_colourclick_readC^0,w,c
  4777  0024' 6E00'              	movwf	colourclick_readC@tmp^0,c
  4778  0026' 6A00'              	clrf	(colourclick_readC@tmp+1)^0,c
  4779                           
  4780                           ;colour_click.c: 104:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  4781  0028' 0E00               	movlw	0
  4782  002A' EC00' F000'        	call	_I2C_2_Master_Read
  4783  002E' 6E00'              	movwf	??_colourclick_readC^0,c
  4784  0030' 5000'              	movf	??_colourclick_readC^0,w,c
  4785  0032' 6E00'              	movwf	(??_colourclick_readC+2)^0,c
  4786  0034' 6A00'              	clrf	(??_colourclick_readC+1)^0,c
  4787  0036' 5000'              	movf	colourclick_readC@tmp^0,w,c
  4788  0038' 1000'              	iorwf	(??_colourclick_readC+1)^0,w,c
  4789  003A' 6E00'              	movwf	colourclick_readC@tmp^0,c
  4790  003C' 5000'              	movf	(colourclick_readC@tmp+1)^0,w,c
  4791  003E' 1000'              	iorwf	(??_colourclick_readC+2)^0,w,c
  4792  0040' 6E00'              	movwf	(colourclick_readC@tmp+1)^0,c
  4793                           
  4794                           ;colour_click.c: 105:  I2C_2_Master_Stop();
  4795  0042' EC00' F000'        	call	_I2C_2_Master_Stop	;wreg free
  4796  0046'                    
  4797                           ;colour_click.c: 106:  return tmp;
  4798  0046' C013' F00E'        	movff	colourclick_readC@tmp,?_colourclick_readC
  4799  004A' C014' F00F'        	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  4800  004E' 0012               	return		;funcret
  4801  0050'                    __end_of_colourclick_readC:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function _colourclick_readB *****************
  4805 ;; Defined at:
  4806 ;;		line 79 in file "colour_click.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  tmp             2   19[COMRAM] unsigned int 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  2   14[COMRAM] unsigned int 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4822 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4823 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4824 ;;Total ram usage:        7 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 9
  4827 ;; This function calls:
  4828 ;;		_I2C_2_Master_Read
  4829 ;;		_I2C_2_Master_RepStart
  4830 ;;		_I2C_2_Master_Start
  4831 ;;		_I2C_2_Master_Stop
  4832 ;;		_I2C_2_Master_Write
  4833 ;; This function is called by:
  4834 ;;		_colourclick_readRGBC
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text22
  4839  0000'                    __ptext22:
  4840                           	callstack 0
  4841  0000'                    _colourclick_readB:
  4842                           	callstack 20
  4843  0000'                    
  4844                           ;colour_click.c: 80:  unsigned int tmp;;colour_click.c: 81:  I2C_2_Master_Start();
  4845  0000' EC00' F000'        	call	_I2C_2_Master_Start	;wreg free
  4846                           
  4847                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  4848  0004' 0E52               	movlw	82
  4849  0006' EC00' F000'        	call	_I2C_2_Master_Write
  4850                           
  4851                           ;colour_click.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  4852  000A' 0EBA               	movlw	186
  4853  000C' EC00' F000'        	call	_I2C_2_Master_Write
  4854                           
  4855                           ;colour_click.c: 84:  I2C_2_Master_RepStart();
  4856  0010' EC00' F000'        	call	_I2C_2_Master_RepStart	;wreg free
  4857                           
  4858                           ;colour_click.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  4859  0014' 0E53               	movlw	83
  4860  0016' EC00' F000'        	call	_I2C_2_Master_Write
  4861                           
  4862                           ;colour_click.c: 86:  tmp=I2C_2_Master_Read(1);
  4863  001A' 0E01               	movlw	1
  4864  001C' EC00' F000'        	call	_I2C_2_Master_Read
  4865  0020' 6E00'              	movwf	??_colourclick_readB^0,c
  4866  0022' 5000'              	movf	??_colourclick_readB^0,w,c
  4867  0024' 6E00'              	movwf	colourclick_readB@tmp^0,c
  4868  0026' 6A00'              	clrf	(colourclick_readB@tmp+1)^0,c
  4869                           
  4870                           ;colour_click.c: 87:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  4871  0028' 0E00               	movlw	0
  4872  002A' EC00' F000'        	call	_I2C_2_Master_Read
  4873  002E' 6E00'              	movwf	??_colourclick_readB^0,c
  4874  0030' 5000'              	movf	??_colourclick_readB^0,w,c
  4875  0032' 6E00'              	movwf	(??_colourclick_readB+2)^0,c
  4876  0034' 6A00'              	clrf	(??_colourclick_readB+1)^0,c
  4877  0036' 5000'              	movf	colourclick_readB@tmp^0,w,c
  4878  0038' 1000'              	iorwf	(??_colourclick_readB+1)^0,w,c
  4879  003A' 6E00'              	movwf	colourclick_readB@tmp^0,c
  4880  003C' 5000'              	movf	(colourclick_readB@tmp+1)^0,w,c
  4881  003E' 1000'              	iorwf	(??_colourclick_readB+2)^0,w,c
  4882  0040' 6E00'              	movwf	(colourclick_readB@tmp+1)^0,c
  4883                           
  4884                           ;colour_click.c: 88:  I2C_2_Master_Stop();
  4885  0042' EC00' F000'        	call	_I2C_2_Master_Stop	;wreg free
  4886  0046'                    
  4887                           ;colour_click.c: 89:  return tmp;
  4888  0046' C013' F00E'        	movff	colourclick_readB@tmp,?_colourclick_readB
  4889  004A' C014' F00F'        	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  4890  004E' 0012               	return		;funcret
  4891  0050'                    __end_of_colourclick_readB:
  4892                           	callstack 0
  4893                           
  4894 ;; *************** function _I2C_2_Master_Write *****************
  4895 ;; Defined at:
  4896 ;;		line 64 in file "I2C.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  data_byte       1    wreg     unsigned char 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  data_byte       1   11[COMRAM] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0, cstack
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;Total ram usage:        1 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; Hardware stack levels required when called: 8
  4917 ;; This function calls:
  4918 ;;		_I2C_2_Master_Idle
  4919 ;; This function is called by:
  4920 ;;		_interrupts_clear
  4921 ;;		_colourclick_writetoaddr
  4922 ;;		_colourclick_readR
  4923 ;;		_colourclick_readG
  4924 ;;		_colourclick_readB
  4925 ;;		_colourclick_readC
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text23
  4930  0000'                    __ptext23:
  4931                           	callstack 0
  4932  0000'                    _I2C_2_Master_Write:
  4933                           	callstack 18
  4934                           
  4935                           ;incstack = 0
  4936                           ;I2C_2_Master_Write@data_byte stored from wreg
  4937  0000' 6E00'              	movwf	I2C_2_Master_Write@data_byte^0,c
  4938  0002'                    
  4939                           ;I2C.c: 65:   I2C_2_Master_Idle();
  4940  0002' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  4941  0006'                    
  4942                           ;I2C.c: 66:   SSP2BUF = data_byte;
  4943  0006' C00B' FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4944  000A' 0012               	return		;funcret
  4945  000C'                    __end_of_I2C_2_Master_Write:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _I2C_2_Master_Stop *****************
  4949 ;; Defined at:
  4950 ;;		line 55 in file "I2C.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used: 1
  4970 ;; Hardware stack levels required when called: 8
  4971 ;; This function calls:
  4972 ;;		_I2C_2_Master_Idle
  4973 ;; This function is called by:
  4974 ;;		_interrupts_clear
  4975 ;;		_colourclick_writetoaddr
  4976 ;;		_colourclick_readR
  4977 ;;		_colourclick_readG
  4978 ;;		_colourclick_readB
  4979 ;;		_colourclick_readC
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text24
  4984  0000'                    __ptext24:
  4985                           	callstack 0
  4986  0000'                    _I2C_2_Master_Stop:
  4987                           	callstack 18
  4988  0000'                    
  4989                           ;I2C.c: 56:   I2C_2_Master_Idle();
  4990  0000' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  4991  0004'                    
  4992                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  4993  0004' 010E               	movlb	14	; () banked
  4994  0006' 85DA               	bsf	218,2,b	;volatile
  4995  0008'                    
  4996                           ; BSR set to: 14
  4997  0008' 0012               	return		;funcret
  4998  000A'                    __end_of_I2C_2_Master_Stop:
  4999                           	callstack 0
  5000                           
  5001 ;; *************** function _I2C_2_Master_Start *****************
  5002 ;; Defined at:
  5003 ;;		line 37 in file "I2C.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5021 ;;Total ram usage:        0 bytes
  5022 ;; Hardware stack levels used: 1
  5023 ;; Hardware stack levels required when called: 8
  5024 ;; This function calls:
  5025 ;;		_I2C_2_Master_Idle
  5026 ;; This function is called by:
  5027 ;;		_interrupts_clear
  5028 ;;		_colourclick_writetoaddr
  5029 ;;		_colourclick_readR
  5030 ;;		_colourclick_readG
  5031 ;;		_colourclick_readB
  5032 ;;		_colourclick_readC
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text25
  5037  0000'                    __ptext25:
  5038                           	callstack 0
  5039  0000'                    _I2C_2_Master_Start:
  5040                           	callstack 18
  5041  0000'                    
  5042                           ;I2C.c: 38:   I2C_2_Master_Idle();
  5043  0000' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  5044  0004'                    
  5045                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  5046  0004' 010E               	movlb	14	; () banked
  5047  0006' 81DA               	bsf	218,0,b	;volatile
  5048  0008'                    
  5049                           ; BSR set to: 14
  5050  0008' 0012               	return		;funcret
  5051  000A'                    __end_of_I2C_2_Master_Start:
  5052                           	callstack 0
  5053                           
  5054 ;; *************** function _I2C_2_Master_RepStart *****************
  5055 ;; Defined at:
  5056 ;;		line 46 in file "I2C.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;Total ram usage:        0 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; Hardware stack levels required when called: 8
  5077 ;; This function calls:
  5078 ;;		_I2C_2_Master_Idle
  5079 ;; This function is called by:
  5080 ;;		_colourclick_readR
  5081 ;;		_colourclick_readG
  5082 ;;		_colourclick_readB
  5083 ;;		_colourclick_readC
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text26
  5088  0000'                    __ptext26:
  5089                           	callstack 0
  5090  0000'                    _I2C_2_Master_RepStart:
  5091                           	callstack 20
  5092  0000'                    
  5093                           ;I2C.c: 47:   I2C_2_Master_Idle();
  5094  0000' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  5095  0004'                    
  5096                           ;I2C.c: 48:   SSP2CON2bits.RSEN = 1;
  5097  0004' 010E               	movlb	14	; () banked
  5098  0006' 83DA               	bsf	218,1,b	;volatile
  5099  0008'                    
  5100                           ; BSR set to: 14
  5101  0008' 0012               	return		;funcret
  5102  000A'                    __end_of_I2C_2_Master_RepStart:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function _I2C_2_Master_Read *****************
  5106 ;; Defined at:
  5107 ;;		line 73 in file "I2C.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  ack             1    wreg     unsigned char 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  ack             1   12[COMRAM] unsigned char 
  5112 ;;  tmp             1   13[COMRAM] unsigned char 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      unsigned char 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2, status,0, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;Total ram usage:        3 bytes
  5127 ;; Hardware stack levels used: 1
  5128 ;; Hardware stack levels required when called: 8
  5129 ;; This function calls:
  5130 ;;		_I2C_2_Master_Idle
  5131 ;; This function is called by:
  5132 ;;		_colourclick_readR
  5133 ;;		_colourclick_readG
  5134 ;;		_colourclick_readB
  5135 ;;		_colourclick_readC
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text27
  5140  0000'                    __ptext27:
  5141                           	callstack 0
  5142  0000'                    _I2C_2_Master_Read:
  5143                           	callstack 20
  5144                           
  5145                           ; BSR set to: 14
  5146                           ;incstack = 0
  5147                           ;I2C_2_Master_Read@ack stored from wreg
  5148  0000' 6E00'              	movwf	I2C_2_Master_Read@ack^0,c
  5149  0002'                    
  5150                           ;I2C.c: 74:   unsigned char tmp;;I2C.c: 75:   I2C_2_Master_Idle();
  5151  0002' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  5152  0006'                    
  5153                           ;I2C.c: 76:   SSP2CON2bits.RCEN = 1;
  5154  0006' 010E               	movlb	14	; () banked
  5155  0008' 87DA               	bsf	218,3,b	;volatile
  5156                           
  5157                           ;I2C.c: 77:   I2C_2_Master_Idle();
  5158  000A' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  5159  000E'                    
  5160                           ;I2C.c: 78:   tmp = SSP2BUF;
  5161  000E' CED5 F00D'         	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5162                           
  5163                           ;I2C.c: 79:   I2C_2_Master_Idle();
  5164  0012' EC00' F000'        	call	_I2C_2_Master_Idle	;wreg free
  5165  0016'                    
  5166                           ;I2C.c: 80:   SSP2CON2bits.ACKDT = !ack;
  5167  0016' 5000'              	movf	I2C_2_Master_Read@ack^0,w,c
  5168  0018' B4D8               	btfsc	status,2,c
  5169  001A' EF00' F000'        	goto	u2971
  5170  001E' EF00' F000'        	goto	u2970
  5171  0022'                    u2971:
  5172  0022' 6A00'              	clrf	??_I2C_2_Master_Read^0,c
  5173  0024' 2A00'              	incf	??_I2C_2_Master_Read^0,f,c
  5174  0026' EF00' F000'        	goto	u2988
  5175  002A'                    u2970:
  5176  002A' 6A00'              	clrf	??_I2C_2_Master_Read^0,c
  5177  002C'                    u2988:
  5178  002C' 3A00'              	swapf	??_I2C_2_Master_Read^0,f,c
  5179  002E' 4600'              	rlncf	??_I2C_2_Master_Read^0,f,c
  5180  0030' 010E               	movlb	14	; () banked
  5181  0032' 51DA               	movf	218,w,b	;volatile
  5182  0034' 1800'              	xorwf	??_I2C_2_Master_Read^0,w,c
  5183  0036' 0BDF               	andlw	-33
  5184  0038' 1800'              	xorwf	??_I2C_2_Master_Read^0,w,c
  5185  003A' 6FDA               	movwf	218,b	;volatile
  5186  003C'                    
  5187                           ; BSR set to: 14
  5188                           ;I2C.c: 81:   SSP2CON2bits.ACKEN = 1;
  5189  003C' 89DA               	bsf	218,4,b	;volatile
  5190  003E'                    
  5191                           ; BSR set to: 14
  5192                           ;I2C.c: 82:   return tmp;
  5193  003E' 5000'              	movf	I2C_2_Master_Read@tmp^0,w,c
  5194  0040'                    
  5195                           ; BSR set to: 14
  5196  0040' 0012               	return		;funcret
  5197  0042'                    __end_of_I2C_2_Master_Read:
  5198                           	callstack 0
  5199                           
  5200 ;; *************** function _I2C_2_Master_Idle *****************
  5201 ;; Defined at:
  5202 ;;		line 29 in file "I2C.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;		None
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5220 ;;Total ram usage:        1 bytes
  5221 ;; Hardware stack levels used: 1
  5222 ;; Hardware stack levels required when called: 7
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_I2C_2_Master_Start
  5227 ;;		_I2C_2_Master_RepStart
  5228 ;;		_I2C_2_Master_Stop
  5229 ;;		_I2C_2_Master_Write
  5230 ;;		_I2C_2_Master_Read
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text28
  5235  0000'                    __ptext28:
  5236                           	callstack 0
  5237  0000'                    _I2C_2_Master_Idle:
  5238                           	callstack 18
  5239  0000'                    l486:
  5240  0000' 010E               	movlb	14	; () banked
  5241  0002' B5D8               	btfsc	216,2,b	;volatile
  5242  0004' EF00' F000'        	goto	u2871
  5243  0008' EF00' F000'        	goto	u2870
  5244  000C'                    u2871:
  5245  000C' EF00' F000'        	goto	l486
  5246  0010'                    u2870:
  5247  0010'                    
  5248                           ; BSR set to: 14
  5249  0010' CEDA F00A'         	movff	3802,??_I2C_2_Master_Idle	;volatile
  5250  0014' 0E1F               	movlw	31
  5251  0016' 1600'              	andwf	??_I2C_2_Master_Idle^0,f,c
  5252  0018' A4D8               	btfss	status,2,c
  5253  001A' EF00' F000'        	goto	u2881
  5254  001E' EF00' F000'        	goto	u2880
  5255  0022'                    u2881:
  5256  0022' EF00' F000'        	goto	l486
  5257  0026'                    u2880:
  5258  0026'                    
  5259                           ; BSR set to: 14
  5260  0026' 0012               	return		;funcret
  5261  0028'                    __end_of_I2C_2_Master_Idle:
  5262                           	callstack 0
  5263                           
  5264 ;; *************** function _colourclickLEDs_C *****************
  5265 ;; Defined at:
  5266 ;;		line 65 in file "buttons_n_LEDs.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  tog             1    wreg     unsigned char 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  tog             1   10[COMRAM] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5284 ;;Total ram usage:        1 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; Hardware stack levels required when called: 7
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_main
  5291 ;;		_colourclick_readRGBC2
  5292 ;;		_colourclick_calibration
  5293 ;;		_colourclickLEDs_init
  5294 ;;		_colourcards_testingRGBC
  5295 ;;		_colourcards_testingRGBC2
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text29
  5300  0000'                    __ptext29:
  5301                           	callstack 0
  5302  0000'                    _colourclickLEDs_C:
  5303                           	callstack 21
  5304                           
  5305                           ; BSR set to: 14
  5306                           ;incstack = 0
  5307                           ;colourclickLEDs_C@tog stored from wreg
  5308  0000' 6E00'              	movwf	colourclickLEDs_C@tog^0,c
  5309  0002'                    
  5310                           ;buttons_n_LEDs.c: 66:     LATGbits.LATG1 = tog;
  5311  0002' B000'              	btfsc	colourclickLEDs_C@tog^0,0,c
  5312  0004' D002               	bra	u4075
  5313  0006' 927F               	bcf	127,1,c	;volatile
  5314  0008' D001               	bra	u4076
  5315  000A'                    u4075:
  5316  000A' 827F               	bsf	127,1,c	;volatile
  5317  000C'                    u4076:
  5318                           
  5319                           ;buttons_n_LEDs.c: 67:     LATAbits.LATA4 = tog;
  5320  000C' B000'              	btfsc	colourclickLEDs_C@tog^0,0,c
  5321  000E' D002               	bra	u4085
  5322  0010' 9879               	bcf	121,4,c	;volatile
  5323  0012' D001               	bra	u4086
  5324  0014'                    u4085:
  5325  0014' 8879               	bsf	121,4,c	;volatile
  5326  0016'                    u4086:
  5327                           
  5328                           ;buttons_n_LEDs.c: 68:     LATFbits.LATF7 = tog;
  5329  0016' B000'              	btfsc	colourclickLEDs_C@tog^0,0,c
  5330  0018' D002               	bra	u4095
  5331  001A' 9E7E               	bcf	126,7,c	;volatile
  5332  001C' D001               	bra	u4096
  5333  001E'                    u4095:
  5334  001E' 8E7E               	bsf	126,7,c	;volatile
  5335  0020'                    u4096:
  5336  0020' 0012               	return		;funcret
  5337  0022'                    __end_of_colourclickLEDs_C:
  5338                           	callstack 0
  5339                           
  5340 ;; *************** function _colourcards_normaliseRGBC *****************
  5341 ;; Defined at:
  5342 ;;		line 183 in file "colour_cards.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  abs             2   17[BANK0 ] PTR struct .
  5345 ;;		 -> colourcards_testingRGBC2@abs(8), main@current(8), 
  5346 ;;  rel             2   19[BANK0 ] PTR struct .
  5347 ;;		 -> colourcards_testingRGBC2@rel(12), colourcards_readRGBC@rel(12), 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  C               2   27[BANK0 ] unsigned int 
  5350 ;;  B               2   25[BANK0 ] unsigned int 
  5351 ;;  G               2   23[BANK0 ] unsigned int 
  5352 ;;  R               2   21[BANK0 ] unsigned int 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5365 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5366 ;;Total ram usage:       12 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 8
  5369 ;; This function calls:
  5370 ;;		___fldiv
  5371 ;;		___xxtofl
  5372 ;; This function is called by:
  5373 ;;		_colourcards_readRGBC
  5374 ;;		_colourcards_testingRGBC2
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text30
  5379  0000'                    __ptext30:
  5380                           	callstack 0
  5381  0000'                    _colourcards_normaliseRGBC:
  5382                           	callstack 21
  5383  0000'                    
  5384                           ;colour_cards.c: 184:     unsigned int R = abs->R;
  5385  0000' C011' FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
  5386  0004' C012' FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
  5387  0008' CFDE F015'         	movff	postinc2,colourcards_normaliseRGBC@R
  5388  000C' CFDD F016'         	movff	postdec2,colourcards_normaliseRGBC@R+1
  5389  0010'                    
  5390                           ;colour_cards.c: 185:     unsigned int G = abs->G;
  5391  0010' 0100               	movlb	0	; () banked
  5392  0012' EE20 F002          	lfsr	2,2
  5393  0016' 5100'              	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  5394  0018' 26D9               	addwf	fsr2l,f,c
  5395  001A' 5100'              	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  5396  001C' 22DA               	addwfc	fsr2h,f,c
  5397  001E' CFDE F017'         	movff	postinc2,colourcards_normaliseRGBC@G
  5398  0022' CFDD F018'         	movff	postdec2,colourcards_normaliseRGBC@G+1
  5399  0026'                    
  5400                           ; BSR set to: 0
  5401                           ;colour_cards.c: 186:     unsigned int B = abs->B;
  5402  0026' EE20 F004          	lfsr	2,4
  5403  002A' 5100'              	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  5404  002C' 26D9               	addwf	fsr2l,f,c
  5405  002E' 5100'              	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  5406  0030' 22DA               	addwfc	fsr2h,f,c
  5407  0032' CFDE F019'         	movff	postinc2,colourcards_normaliseRGBC@B
  5408  0036' CFDD F01A'         	movff	postdec2,colourcards_normaliseRGBC@B+1
  5409  003A'                    
  5410                           ; BSR set to: 0
  5411                           ;colour_cards.c: 187:     unsigned int C = abs->C;
  5412  003A' EE20 F006          	lfsr	2,6
  5413  003E' 5100'              	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  5414  0040' 26D9               	addwf	fsr2l,f,c
  5415  0042' 5100'              	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  5416  0044' 22DA               	addwfc	fsr2h,f,c
  5417  0046' CFDE F01B'         	movff	postinc2,colourcards_normaliseRGBC@C
  5418  004A' CFDD F01C'         	movff	postdec2,colourcards_normaliseRGBC@C+1
  5419  004E'                    
  5420                           ; BSR set to: 0
  5421                           ;colour_cards.c: 189:     rel->R = (float)R/(float)C;
  5422  004E' C015' F00A'        	movff	colourcards_normaliseRGBC@R,___xxtofl@val
  5423  0052' C016' F00B'        	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
  5424  0056' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  5425  0058' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  5426  005A' 0E00               	movlw	0
  5427  005C' EC00' F000'        	call	___xxtofl
  5428  0060' C00A' F041'        	movff	?___xxtofl,___fldiv@b
  5429  0064' C00B' F042'        	movff	?___xxtofl+1,___fldiv@b+1
  5430  0068' C00C' F043'        	movff	?___xxtofl+2,___fldiv@b+2
  5431  006C' C00D' F044'        	movff	?___xxtofl+3,___fldiv@b+3
  5432  0070' C01B' F00A'        	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  5433  0074' C01C' F00B'        	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  5434  0078' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  5435  007A' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  5436  007C' 0E00               	movlw	0
  5437  007E' EC00' F000'        	call	___xxtofl
  5438  0082' C00A' F045'        	movff	?___xxtofl,___fldiv@a
  5439  0086' C00B' F046'        	movff	?___xxtofl+1,___fldiv@a+1
  5440  008A' C00C' F047'        	movff	?___xxtofl+2,___fldiv@a+2
  5441  008E' C00D' F048'        	movff	?___xxtofl+3,___fldiv@a+3
  5442  0092' EC00' F000'        	call	___fldiv	;wreg free
  5443  0096' C013' FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
  5444  009A' C014' FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
  5445  009E' C041' FFDE         	movff	?___fldiv,postinc2
  5446  00A2' C042' FFDE         	movff	?___fldiv+1,postinc2
  5447  00A6' C043' FFDE         	movff	?___fldiv+2,postinc2
  5448  00AA' C044' FFDE         	movff	?___fldiv+3,postinc2
  5449  00AE'                    
  5450                           ;colour_cards.c: 190:     rel->G = (float)G/(float)C;
  5451  00AE' C017' F00A'        	movff	colourcards_normaliseRGBC@G,___xxtofl@val
  5452  00B2' C018' F00B'        	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
  5453  00B6' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  5454  00B8' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  5455  00BA' 0E00               	movlw	0
  5456  00BC' EC00' F000'        	call	___xxtofl
  5457  00C0' C00A' F041'        	movff	?___xxtofl,___fldiv@b
  5458  00C4' C00B' F042'        	movff	?___xxtofl+1,___fldiv@b+1
  5459  00C8' C00C' F043'        	movff	?___xxtofl+2,___fldiv@b+2
  5460  00CC' C00D' F044'        	movff	?___xxtofl+3,___fldiv@b+3
  5461  00D0' C01B' F00A'        	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  5462  00D4' C01C' F00B'        	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  5463  00D8' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  5464  00DA' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  5465  00DC' 0E00               	movlw	0
  5466  00DE' EC00' F000'        	call	___xxtofl
  5467  00E2' C00A' F045'        	movff	?___xxtofl,___fldiv@a
  5468  00E6' C00B' F046'        	movff	?___xxtofl+1,___fldiv@a+1
  5469  00EA' C00C' F047'        	movff	?___xxtofl+2,___fldiv@a+2
  5470  00EE' C00D' F048'        	movff	?___xxtofl+3,___fldiv@a+3
  5471  00F2' EC00' F000'        	call	___fldiv	;wreg free
  5472  00F6' 0100               	movlb	0	; () banked
  5473  00F8' EE20 F004          	lfsr	2,4
  5474  00FC' 5100'              	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  5475  00FE' 26D9               	addwf	fsr2l,f,c
  5476  0100' 5100'              	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  5477  0102' 22DA               	addwfc	fsr2h,f,c
  5478  0104' C041' FFDE         	movff	?___fldiv,postinc2
  5479  0108' C042' FFDE         	movff	?___fldiv+1,postinc2
  5480  010C' C043' FFDE         	movff	?___fldiv+2,postinc2
  5481  0110' C044' FFDE         	movff	?___fldiv+3,postinc2
  5482  0114'                    
  5483                           ; BSR set to: 0
  5484                           ;colour_cards.c: 191:     rel->B = (float)B/(float)C;
  5485  0114' C019' F00A'        	movff	colourcards_normaliseRGBC@B,___xxtofl@val
  5486  0118' C01A' F00B'        	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
  5487  011C' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  5488  011E' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  5489  0120' 0E00               	movlw	0
  5490  0122' EC00' F000'        	call	___xxtofl
  5491  0126' C00A' F041'        	movff	?___xxtofl,___fldiv@b
  5492  012A' C00B' F042'        	movff	?___xxtofl+1,___fldiv@b+1
  5493  012E' C00C' F043'        	movff	?___xxtofl+2,___fldiv@b+2
  5494  0132' C00D' F044'        	movff	?___xxtofl+3,___fldiv@b+3
  5495  0136' C01B' F00A'        	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  5496  013A' C01C' F00B'        	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  5497  013E' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  5498  0140' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  5499  0142' 0E00               	movlw	0
  5500  0144' EC00' F000'        	call	___xxtofl
  5501  0148' C00A' F045'        	movff	?___xxtofl,___fldiv@a
  5502  014C' C00B' F046'        	movff	?___xxtofl+1,___fldiv@a+1
  5503  0150' C00C' F047'        	movff	?___xxtofl+2,___fldiv@a+2
  5504  0154' C00D' F048'        	movff	?___xxtofl+3,___fldiv@a+3
  5505  0158' EC00' F000'        	call	___fldiv	;wreg free
  5506  015C' 0100               	movlb	0	; () banked
  5507  015E' EE20 F008          	lfsr	2,8
  5508  0162' 5100'              	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  5509  0164' 26D9               	addwf	fsr2l,f,c
  5510  0166' 5100'              	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  5511  0168' 22DA               	addwfc	fsr2h,f,c
  5512  016A' C041' FFDE         	movff	?___fldiv,postinc2
  5513  016E' C042' FFDE         	movff	?___fldiv+1,postinc2
  5514  0172' C043' FFDE         	movff	?___fldiv+2,postinc2
  5515  0176' C044' FFDE         	movff	?___fldiv+3,postinc2
  5516  017A'                    
  5517                           ; BSR set to: 0
  5518  017A' 0012               	return		;funcret
  5519  017C'                    __end_of_colourcards_normaliseRGBC:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _checkbatterylevel *****************
  5523 ;; Defined at:
  5524 ;;		line 65 in file "DC_motors.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  batterylevel    1   13[COMRAM] unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0, cstack
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;Total ram usage:        2 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 8
  5545 ;; This function calls:
  5546 ;;		_ADC_getval
  5547 ;;		_colourclickLEDs_RGB
  5548 ;; This function is called by:
  5549 ;;		_main
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text31
  5554  0000'                    __ptext31:
  5555                           	callstack 0
  5556  0000'                    _checkbatterylevel:
  5557                           	callstack 22
  5558  0000'                    
  5559                           ;DC_motors.c: 66:     unsigned char batterylevel;;DC_motors.c: 67:     batterylevel = AD
      +                          C_getval();
  5560  0000' EC00' F000'        	call	_ADC_getval	;wreg free
  5561  0004' 6E00'              	movwf	checkbatterylevel@batterylevel^0,c
  5562  0006'                    
  5563                           ;DC_motors.c: 68:     if (batterylevel<50) {
  5564  0006' 0E32               	movlw	50
  5565  0008' 6000'              	cpfslt	checkbatterylevel@batterylevel^0,c
  5566  000A' EF00' F000'        	goto	u4421
  5567  000E' EF00' F000'        	goto	u4420
  5568  0012'                    u4421:
  5569  0012' EF00' F000'        	goto	l638
  5570  0016'                    u4420:
  5571  0016' EF00' F000'        	goto	l4469
  5572  001A'                    l4463:
  5573                           
  5574                           ;DC_motors.c: 70:             LATDbits.LATD7 = !LATDbits.LATD7;
  5575  001A' AE7C               	btfss	124,7,c	;volatile
  5576  001C' EF00' F000'        	goto	u4431
  5577  0020' EF00' F000'        	goto	u4430
  5578  0024'                    u4431:
  5579  0024' 6A00'              	clrf	??_checkbatterylevel^0,c
  5580  0026' 2A00'              	incf	??_checkbatterylevel^0,f,c
  5581  0028' EF00' F000'        	goto	u4448
  5582  002C'                    u4430:
  5583  002C' 6A00'              	clrf	??_checkbatterylevel^0,c
  5584  002E'                    u4448:
  5585  002E' 3200'              	rrcf	??_checkbatterylevel^0,f,c
  5586  0030' 3200'              	rrcf	??_checkbatterylevel^0,f,c
  5587  0032' 507C               	movf	124,w,c	;volatile
  5588  0034' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5589  0036' 0B7F               	andlw	-129
  5590  0038' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5591  003A' 6E7C               	movwf	124,c	;volatile
  5592                           
  5593                           ;DC_motors.c: 71:             LATHbits.LATH3 = !LATHbits.LATH3;
  5594  003C' A680               	btfss	128,3,c	;volatile
  5595  003E' EF00' F000'        	goto	u4451
  5596  0042' EF00' F000'        	goto	u4450
  5597  0046'                    u4451:
  5598  0046' 6A00'              	clrf	??_checkbatterylevel^0,c
  5599  0048' 2A00'              	incf	??_checkbatterylevel^0,f,c
  5600  004A' EF00' F000'        	goto	u4468
  5601  004E'                    u4450:
  5602  004E' 6A00'              	clrf	??_checkbatterylevel^0,c
  5603  0050'                    u4468:
  5604  0050' 4600'              	rlncf	??_checkbatterylevel^0,f,c
  5605  0052' 4600'              	rlncf	??_checkbatterylevel^0,f,c
  5606  0054' 4600'              	rlncf	??_checkbatterylevel^0,f,c
  5607  0056' 5080               	movf	128,w,c	;volatile
  5608  0058' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5609  005A' 0BF7               	andlw	-9
  5610  005C' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5611  005E' 6E80               	movwf	128,c	;volatile
  5612                           
  5613                           ;DC_motors.c: 72:             LATDbits.LATD3 = !LATDbits.LATD3;
  5614  0060' A67C               	btfss	124,3,c	;volatile
  5615  0062' EF00' F000'        	goto	u4471
  5616  0066' EF00' F000'        	goto	u4470
  5617  006A'                    u4471:
  5618  006A' 6A00'              	clrf	??_checkbatterylevel^0,c
  5619  006C' 2A00'              	incf	??_checkbatterylevel^0,f,c
  5620  006E' EF00' F000'        	goto	u4488
  5621  0072'                    u4470:
  5622  0072' 6A00'              	clrf	??_checkbatterylevel^0,c
  5623  0074'                    u4488:
  5624  0074' 4600'              	rlncf	??_checkbatterylevel^0,f,c
  5625  0076' 4600'              	rlncf	??_checkbatterylevel^0,f,c
  5626  0078' 4600'              	rlncf	??_checkbatterylevel^0,f,c
  5627  007A' 507C               	movf	124,w,c	;volatile
  5628  007C' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5629  007E' 0BF7               	andlw	-9
  5630  0080' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5631  0082' 6E7C               	movwf	124,c	;volatile
  5632                           
  5633                           ;DC_motors.c: 73:             LATDbits.LATD4 = !LATDbits.LATD4;
  5634  0084' A87C               	btfss	124,4,c	;volatile
  5635  0086' EF00' F000'        	goto	u4491
  5636  008A' EF00' F000'        	goto	u4490
  5637  008E'                    u4491:
  5638  008E' 6A00'              	clrf	??_checkbatterylevel^0,c
  5639  0090' 2A00'              	incf	??_checkbatterylevel^0,f,c
  5640  0092' EF00' F000'        	goto	u4508
  5641  0096'                    u4490:
  5642  0096' 6A00'              	clrf	??_checkbatterylevel^0,c
  5643  0098'                    u4508:
  5644  0098' 3A00'              	swapf	??_checkbatterylevel^0,f,c
  5645  009A' 507C               	movf	124,w,c	;volatile
  5646  009C' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5647  009E' 0BEF               	andlw	-17
  5648  00A0' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5649  00A2' 6E7C               	movwf	124,c	;volatile
  5650                           
  5651                           ;DC_motors.c: 74:             LATFbits.LATF0 = !LATFbits.LATF0;
  5652  00A4' A07E               	btfss	126,0,c	;volatile
  5653  00A6' EF00' F000'        	goto	u4511
  5654  00AA' EF00' F000'        	goto	u4510
  5655  00AE'                    u4511:
  5656  00AE' 6A00'              	clrf	??_checkbatterylevel^0,c
  5657  00B0' 2A00'              	incf	??_checkbatterylevel^0,f,c
  5658  00B2' EF00' F000'        	goto	u4528
  5659  00B6'                    u4510:
  5660  00B6' 6A00'              	clrf	??_checkbatterylevel^0,c
  5661  00B8'                    u4528:
  5662  00B8' 507E               	movf	126,w,c	;volatile
  5663  00BA' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5664  00BC' 0BFE               	andlw	-2
  5665  00BE' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5666  00C0' 6E7E               	movwf	126,c	;volatile
  5667                           
  5668                           ;DC_motors.c: 75:             LATHbits.LATH0 = !LATHbits.LATH0;
  5669  00C2' A080               	btfss	128,0,c	;volatile
  5670  00C4' EF00' F000'        	goto	u4531
  5671  00C8' EF00' F000'        	goto	u4530
  5672  00CC'                    u4531:
  5673  00CC' 6A00'              	clrf	??_checkbatterylevel^0,c
  5674  00CE' 2A00'              	incf	??_checkbatterylevel^0,f,c
  5675  00D0' EF00' F000'        	goto	u4548
  5676  00D4'                    u4530:
  5677  00D4' 6A00'              	clrf	??_checkbatterylevel^0,c
  5678  00D6'                    u4548:
  5679  00D6' 5080               	movf	128,w,c	;volatile
  5680  00D8' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5681  00DA' 0BFE               	andlw	-2
  5682  00DC' 1800'              	xorwf	??_checkbatterylevel^0,w,c
  5683  00DE' 6E80               	movwf	128,c	;volatile
  5684  00E0'                    
  5685                           ;DC_motors.c: 76:             colourclickLEDs_RGB();
  5686  00E0' EC00' F000'        	call	_colourclickLEDs_RGB	;wreg free
  5687  00E4'                    
  5688                           ;DC_motors.c: 77:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5689  00E4' 0E68               	movlw	104
  5690  00E6' 6E00'              	movwf	??_checkbatterylevel^0,c
  5691  00E8' 0EE4               	movlw	228
  5692  00EA'                    u7257:
  5693  00EA' 2EE8               	decfsz	wreg,f,c
  5694  00EC' D7FE               	bra	u7257
  5695  00EE' 2E00'              	decfsz	??_checkbatterylevel^0,f,c
  5696  00F0' D7FC               	bra	u7257
  5697  00F2' D000               	nop2	
  5698  00F4'                    l4469:
  5699                           
  5700                           ;DC_motors.c: 69:         while(!PORTFbits.RF2 && !PORTFbits.RF3) {
  5701  00F4' B48E               	btfsc	142,2,c	;volatile
  5702  00F6' EF00' F000'        	goto	u4551
  5703  00FA' EF00' F000'        	goto	u4550
  5704  00FE'                    u4551:
  5705  00FE' EF00' F000'        	goto	l638
  5706  0102'                    u4550:
  5707  0102' A68E               	btfss	142,3,c	;volatile
  5708  0104' EF00' F000'        	goto	u4561
  5709  0108' EF00' F000'        	goto	u4560
  5710  010C'                    u4561:
  5711  010C' EF00' F000'        	goto	l4463
  5712  0110'                    u4560:
  5713  0110'                    l638:
  5714  0110' 0012               	return		;funcret
  5715  0112'                    __end_of_checkbatterylevel:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _colourclickLEDs_RGB *****************
  5719 ;; Defined at:
  5720 ;;		line 44 in file "buttons_n_LEDs.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;Total ram usage:        2 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 7
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_checkbatterylevel
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text32
  5749  0000'                    __ptext32:
  5750                           	callstack 0
  5751  0000'                    _colourclickLEDs_RGB:
  5752                           	callstack 22
  5753  0000'                    
  5754                           ;buttons_n_LEDs.c: 45:     LATGbits.LATG1 = 1;
  5755  0000' 827F               	bsf	127,1,c	;volatile
  5756  0002'                    
  5757                           ;buttons_n_LEDs.c: 46:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5758  0002' 0E02               	movlw	2
  5759  0004' 6E00'              	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5760  0006' 0EA0               	movlw	160
  5761  0008' 6E00'              	movwf	??_colourclickLEDs_RGB^0,c
  5762  000A' 0E92               	movlw	146
  5763  000C'                    u7267:
  5764  000C' 2EE8               	decfsz	wreg,f,c
  5765  000E' D7FE               	bra	u7267
  5766  0010' 2E00'              	decfsz	??_colourclickLEDs_RGB^0,f,c
  5767  0012' D7FC               	bra	u7267
  5768  0014' 2E00'              	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5769  0016' D7FA               	bra	u7267
  5770  0018' D000               	nop2	
  5771  001A'                    
  5772                           ;buttons_n_LEDs.c: 47:     LATGbits.LATG1 = 0;
  5773  001A' 927F               	bcf	127,1,c	;volatile
  5774                           
  5775                           ;buttons_n_LEDs.c: 48:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5776  001C' 0E02               	movlw	2
  5777  001E' 6E00'              	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5778  0020' 0EA0               	movlw	160
  5779  0022' 6E00'              	movwf	??_colourclickLEDs_RGB^0,c
  5780  0024' 0E92               	movlw	146
  5781  0026'                    u7277:
  5782  0026' 2EE8               	decfsz	wreg,f,c
  5783  0028' D7FE               	bra	u7277
  5784  002A' 2E00'              	decfsz	??_colourclickLEDs_RGB^0,f,c
  5785  002C' D7FC               	bra	u7277
  5786  002E' 2E00'              	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5787  0030' D7FA               	bra	u7277
  5788  0032' D000               	nop2	
  5789  0034'                    
  5790                           ;buttons_n_LEDs.c: 50:     LATAbits.LATA4 = 1;
  5791  0034' 8879               	bsf	121,4,c	;volatile
  5792                           
  5793                           ;buttons_n_LEDs.c: 51:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5794  0036' 0E02               	movlw	2
  5795  0038' 6E00'              	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5796  003A' 0EA0               	movlw	160
  5797  003C' 6E00'              	movwf	??_colourclickLEDs_RGB^0,c
  5798  003E' 0E92               	movlw	146
  5799  0040'                    u7287:
  5800  0040' 2EE8               	decfsz	wreg,f,c
  5801  0042' D7FE               	bra	u7287
  5802  0044' 2E00'              	decfsz	??_colourclickLEDs_RGB^0,f,c
  5803  0046' D7FC               	bra	u7287
  5804  0048' 2E00'              	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5805  004A' D7FA               	bra	u7287
  5806  004C' D000               	nop2	
  5807  004E'                    
  5808                           ;buttons_n_LEDs.c: 52:     LATAbits.LATA4 = 0;
  5809  004E' 9879               	bcf	121,4,c	;volatile
  5810                           
  5811                           ;buttons_n_LEDs.c: 53:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5812  0050' 0E02               	movlw	2
  5813  0052' 6E00'              	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5814  0054' 0EA0               	movlw	160
  5815  0056' 6E00'              	movwf	??_colourclickLEDs_RGB^0,c
  5816  0058' 0E92               	movlw	146
  5817  005A'                    u7297:
  5818  005A' 2EE8               	decfsz	wreg,f,c
  5819  005C' D7FE               	bra	u7297
  5820  005E' 2E00'              	decfsz	??_colourclickLEDs_RGB^0,f,c
  5821  0060' D7FC               	bra	u7297
  5822  0062' 2E00'              	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5823  0064' D7FA               	bra	u7297
  5824  0066' D000               	nop2	
  5825  0068'                    
  5826                           ;buttons_n_LEDs.c: 55:     LATFbits.LATF7 = 1;
  5827  0068' 8E7E               	bsf	126,7,c	;volatile
  5828                           
  5829                           ;buttons_n_LEDs.c: 56:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5830  006A' 0E02               	movlw	2
  5831  006C' 6E00'              	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5832  006E' 0EA0               	movlw	160
  5833  0070' 6E00'              	movwf	??_colourclickLEDs_RGB^0,c
  5834  0072' 0E92               	movlw	146
  5835  0074'                    u7307:
  5836  0074' 2EE8               	decfsz	wreg,f,c
  5837  0076' D7FE               	bra	u7307
  5838  0078' 2E00'              	decfsz	??_colourclickLEDs_RGB^0,f,c
  5839  007A' D7FC               	bra	u7307
  5840  007C' 2E00'              	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5841  007E' D7FA               	bra	u7307
  5842  0080' D000               	nop2	
  5843  0082'                    
  5844                           ;buttons_n_LEDs.c: 57:     LATFbits.LATF7 = 0;
  5845  0082' 9E7E               	bcf	126,7,c	;volatile
  5846                           
  5847                           ;buttons_n_LEDs.c: 58:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5848  0084' 0E02               	movlw	2
  5849  0086' 6E00'              	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5850  0088' 0EA0               	movlw	160
  5851  008A' 6E00'              	movwf	??_colourclickLEDs_RGB^0,c
  5852  008C' 0E92               	movlw	146
  5853  008E'                    u7317:
  5854  008E' 2EE8               	decfsz	wreg,f,c
  5855  0090' D7FE               	bra	u7317
  5856  0092' 2E00'              	decfsz	??_colourclickLEDs_RGB^0,f,c
  5857  0094' D7FC               	bra	u7317
  5858  0096' 2E00'              	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5859  0098' D7FA               	bra	u7317
  5860  009A' D000               	nop2	
  5861  009C' 0012               	return		;funcret
  5862  009E'                    __end_of_colourclickLEDs_RGB:
  5863                           	callstack 0
  5864                           
  5865 ;; *************** function _ADC_getval *****************
  5866 ;; Defined at:
  5867 ;;		line 26 in file "ADC.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  tmpval          1   10[COMRAM] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      unsigned char 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;Total ram usage:        1 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 7
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_checkbatterylevel
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text33
  5896  0000'                    __ptext33:
  5897                           	callstack 0
  5898  0000'                    _ADC_getval:
  5899                           	callstack 22
  5900  0000'                    
  5901                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  5902  0000' 8060               	bsf	96,0,c	;volatile
  5903  0002'                    l409:
  5904  0002' B060               	btfsc	96,0,c	;volatile
  5905  0004' EF00' F000'        	goto	u4231
  5906  0008' EF00' F000'        	goto	u4230
  5907  000C'                    u4231:
  5908  000C' EF00' F000'        	goto	l409
  5909  0010'                    u4230:
  5910  0010'                    
  5911                           ;ADC.c: 31:     tmpval = ADRESH;
  5912  0010' CF64 F00A'         	movff	3940,ADC_getval@tmpval	;volatile
  5913  0014'                    
  5914                           ;ADC.c: 34:     return tmpval;
  5915  0014' 5000'              	movf	ADC_getval@tmpval^0,w,c
  5916  0016' 0012               	return		;funcret
  5917  0018'                    __end_of_ADC_getval:
  5918                           	callstack 0
  5919                           
  5920 ;; *************** function _USART4_init *****************
  5921 ;; Defined at:
  5922 ;;		line 8 in file "serial_comm.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; Hardware stack levels required when called: 7
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_main
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text34
  5951  0000'                    __ptext34:
  5952                           	callstack 0
  5953  0000'                    _USART4_init:
  5954                           	callstack 23
  5955  0000'                    
  5956                           ;serial_comm.c: 9:     RC0PPS = 0x12;
  5957  0000' 0E12               	movlw	18
  5958  0002' 010E               	movlb	14	; () banked
  5959  0004' 6F62               	movwf	98,b	;volatile
  5960                           
  5961                           ;serial_comm.c: 10:     RX4PPS = 0x11;
  5962  0006' 0E11               	movlw	17
  5963  0008' 6F15               	movwf	21,b	;volatile
  5964  000A'                    
  5965                           ; BSR set to: 14
  5966                           ;serial_comm.c: 11:     TRISCbits.TRISC1 = 1;
  5967  000A' 8283               	bsf	131,1,c	;volatile
  5968  000C'                    
  5969                           ; BSR set to: 14
  5970                           ;serial_comm.c: 13:     BAUD4CONbits.BRG16 = 0;
  5971  000C' 97E9               	bcf	233,3,b	;volatile
  5972  000E'                    
  5973                           ; BSR set to: 14
  5974                           ;serial_comm.c: 14:     TX4STAbits.BRGH = 0;
  5975  000E' 95E8               	bcf	232,2,b	;volatile
  5976                           
  5977                           ;serial_comm.c: 15:     SP4BRGL = 51;
  5978  0010' 0E33               	movlw	51
  5979  0012' 6FE5               	movwf	229,b	;volatile
  5980                           
  5981                           ;serial_comm.c: 16:     SP4BRGH = 0;
  5982  0014' 0E00               	movlw	0
  5983  0016' 6FE6               	movwf	230,b	;volatile
  5984  0018'                    
  5985                           ; BSR set to: 14
  5986                           ;serial_comm.c: 18:     RC4STAbits.CREN = 1;
  5987  0018' 89E7               	bsf	231,4,b	;volatile
  5988  001A'                    
  5989                           ; BSR set to: 14
  5990                           ;serial_comm.c: 19:     TX4STAbits.TXEN = 1;
  5991  001A' 8BE8               	bsf	232,5,b	;volatile
  5992  001C'                    
  5993                           ; BSR set to: 14
  5994                           ;serial_comm.c: 20:     RC4STAbits.SPEN = 1;
  5995  001C' 8FE7               	bsf	231,7,b	;volatile
  5996  001E'                    
  5997                           ; BSR set to: 14
  5998  001E' 0012               	return		;funcret
  5999  0020'                    __end_of_USART4_init:
  6000                           	callstack 0
  6001                           
  6002 ;; *************** function _DCmotors_init *****************
  6003 ;; Defined at:
  6004 ;;		line 10 in file "DC_motors.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  PWMperiod       1    wreg     unsigned char 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  PWMperiod       1   10[COMRAM] unsigned char 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;Total ram usage:        1 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; Hardware stack levels required when called: 8
  6025 ;; This function calls:
  6026 ;;		_buggyLEDs_init
  6027 ;;		_clicker2LEDs_init
  6028 ;;		_clicker2buttons_init
  6029 ;; This function is called by:
  6030 ;;		_main
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text35
  6035  0000'                    __ptext35:
  6036                           	callstack 0
  6037  0000'                    _DCmotors_init:
  6038                           	callstack 22
  6039                           
  6040                           ; BSR set to: 14
  6041                           ;incstack = 0
  6042                           ;DCmotors_init@PWMperiod stored from wreg
  6043  0000' 6E00'              	movwf	DCmotors_init@PWMperiod^0,c
  6044  0002'                    
  6045                           ;DC_motors.c: 12:     T2CONbits.CKPS=0b100;
  6046  0002' 50BD               	movf	189,w,c	;volatile
  6047  0004' 0B8F               	andlw	-113
  6048  0006' 0940               	iorlw	64
  6049  0008' 6EBD               	movwf	189,c	;volatile
  6050                           
  6051                           ;DC_motors.c: 13:     T2HLTbits.MODE=0b00000;
  6052  000A' 0EE0               	movlw	-32
  6053  000C' 16BE               	andwf	190,f,c	;volatile
  6054                           
  6055                           ;DC_motors.c: 14:     T2CLKCONbits.CS=0b0001;
  6056  000E' 50BF               	movf	191,w,c	;volatile
  6057  0010' 0BF0               	andlw	-16
  6058  0012' 0901               	iorlw	1
  6059  0014' 6EBF               	movwf	191,c	;volatile
  6060  0016'                    
  6061                           ;DC_motors.c: 17:     T2PR=PWMperiod;
  6062  0016' C00A' FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  6063  001A'                    
  6064                           ;DC_motors.c: 18:     T2CONbits.ON=1;
  6065  001A' 8EBD               	bsf	189,7,c	;volatile
  6066  001C'                    
  6067                           ;DC_motors.c: 21:     TRISEbits.TRISE2=0;
  6068  001C' 9485               	bcf	133,2,c	;volatile
  6069  001E'                    
  6070                           ;DC_motors.c: 22:     TRISEbits.TRISE4=0;
  6071  001E' 9885               	bcf	133,4,c	;volatile
  6072  0020'                    
  6073                           ;DC_motors.c: 23:     TRISCbits.TRISC7=0;
  6074  0020' 9E83               	bcf	131,7,c	;volatile
  6075  0022'                    
  6076                           ;DC_motors.c: 24:     TRISGbits.TRISG6=0;
  6077  0022' 9C87               	bcf	135,6,c	;volatile
  6078  0024'                    
  6079                           ;DC_motors.c: 26:     LATEbits.LATE2=0;
  6080  0024' 947D               	bcf	125,2,c	;volatile
  6081  0026'                    
  6082                           ;DC_motors.c: 27:     LATEbits.LATE4=0;
  6083  0026' 987D               	bcf	125,4,c	;volatile
  6084  0028'                    
  6085                           ;DC_motors.c: 28:     LATCbits.LATC7=0;
  6086  0028' 9E7B               	bcf	123,7,c	;volatile
  6087  002A'                    
  6088                           ;DC_motors.c: 29:     LATGbits.LATG6=0;
  6089  002A' 9C7F               	bcf	127,6,c	;volatile
  6090                           
  6091                           ;DC_motors.c: 31:     PWM6DCH=0;
  6092  002C' 0E00               	movlw	0
  6093  002E' 6EA3               	movwf	163,c	;volatile
  6094                           
  6095                           ;DC_motors.c: 32:     PWM7DCH=0;
  6096  0030' 0E00               	movlw	0
  6097  0032' 6EA0               	movwf	160,c	;volatile
  6098  0034'                    
  6099                           ;DC_motors.c: 34:     PWM6CONbits.EN = 1;
  6100  0034' 8EA4               	bsf	164,7,c	;volatile
  6101  0036'                    
  6102                           ;DC_motors.c: 35:     PWM7CONbits.EN = 1;
  6103  0036' 8EA1               	bsf	161,7,c	;volatile
  6104                           
  6105                           ;DC_motors.c: 37:     RE2PPS=0x0A;
  6106  0038' 0E0A               	movlw	10
  6107  003A' 010E               	movlb	14	; () banked
  6108  003C' 6F74               	movwf	116,b	;volatile
  6109                           
  6110                           ;DC_motors.c: 38:     RC7PPS=0x0B;
  6111  003E' 0E0B               	movlw	11
  6112  0040' 6F69               	movwf	105,b	;volatile
  6113  0042'                    
  6114                           ; BSR set to: 14
  6115                           ;DC_motors.c: 40:     clicker2buttons_init();
  6116  0042' EC00' F000'        	call	_clicker2buttons_init	;wreg free
  6117  0046'                    
  6118                           ;DC_motors.c: 41:     clicker2LEDs_init();
  6119  0046' EC00' F000'        	call	_clicker2LEDs_init	;wreg free
  6120  004A'                    
  6121                           ;DC_motors.c: 42:     buggyLEDs_init();
  6122  004A' EC00' F000'        	call	_buggyLEDs_init	;wreg free
  6123  004E' 0012               	return		;funcret
  6124  0050'                    __end_of_DCmotors_init:
  6125                           	callstack 0
  6126                           
  6127 ;; *************** function _clicker2buttons_init *****************
  6128 ;; Defined at:
  6129 ;;		line 8 in file "buttons_n_LEDs.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		None
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used: 1
  6149 ;; Hardware stack levels required when called: 7
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_DCmotors_init
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text36
  6158  0000'                    __ptext36:
  6159                           	callstack 0
  6160  0000'                    _clicker2buttons_init:
  6161                           	callstack 22
  6162  0000'                    
  6163                           ;buttons_n_LEDs.c: 9:     TRISFbits.TRISF2=1;
  6164  0000' 8486               	bsf	134,2,c	;volatile
  6165                           
  6166                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF3=1;
  6167  0002' 8686               	bsf	134,3,c	;volatile
  6168                           
  6169                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  6170  0004' 010E               	movlb	14	; () banked
  6171  0006' 95B4               	bcf	180,2,b	;volatile
  6172                           
  6173                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  6174  0008' 97B4               	bcf	180,3,b	;volatile
  6175  000A'                    
  6176                           ; BSR set to: 14
  6177  000A' 0012               	return		;funcret
  6178  000C'                    __end_of_clicker2buttons_init:
  6179                           	callstack 0
  6180                           
  6181 ;; *************** function _clicker2LEDs_init *****************
  6182 ;; Defined at:
  6183 ;;		line 20 in file "buttons_n_LEDs.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;		None
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;		None
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		None
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;Total ram usage:        0 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 7
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_DCmotors_init
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text37
  6212  0000'                    __ptext37:
  6213                           	callstack 0
  6214  0000'                    _clicker2LEDs_init:
  6215                           	callstack 22
  6216  0000'                    
  6217                           ;buttons_n_LEDs.c: 21:     LATDbits.LATD7 = 0;
  6218  0000' 9E7C               	bcf	124,7,c	;volatile
  6219                           
  6220                           ;buttons_n_LEDs.c: 22:     LATHbits.LATH3 = 0;
  6221  0002' 9680               	bcf	128,3,c	;volatile
  6222                           
  6223                           ;buttons_n_LEDs.c: 24:     TRISDbits.TRISD7 = 0;
  6224  0004' 9E84               	bcf	132,7,c	;volatile
  6225                           
  6226                           ;buttons_n_LEDs.c: 25:     TRISHbits.TRISH3 = 0;
  6227  0006' 9688               	bcf	136,3,c	;volatile
  6228  0008' 0012               	return		;funcret
  6229  000A'                    __end_of_clicker2LEDs_init:
  6230                           	callstack 0
  6231                           
  6232 ;; *************** function _buggyLEDs_init *****************
  6233 ;; Defined at:
  6234 ;;		line 75 in file "buttons_n_LEDs.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;		None
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      void 
  6241 ;; Registers used:
  6242 ;;		None
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used: 1
  6254 ;; Hardware stack levels required when called: 7
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_DCmotors_init
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text38
  6263  0000'                    __ptext38:
  6264                           	callstack 0
  6265  0000'                    _buggyLEDs_init:
  6266                           	callstack 22
  6267  0000'                    
  6268                           ;buttons_n_LEDs.c: 76:     LATHbits.LATH1 = 0;
  6269  0000' 9280               	bcf	128,1,c	;volatile
  6270                           
  6271                           ;buttons_n_LEDs.c: 77:     LATDbits.LATD3 = 0;
  6272  0002' 967C               	bcf	124,3,c	;volatile
  6273                           
  6274                           ;buttons_n_LEDs.c: 78:     LATDbits.LATD4 = 0;
  6275  0004' 987C               	bcf	124,4,c	;volatile
  6276                           
  6277                           ;buttons_n_LEDs.c: 79:     LATFbits.LATF0 = 0;
  6278  0006' 907E               	bcf	126,0,c	;volatile
  6279                           
  6280                           ;buttons_n_LEDs.c: 80:     LATHbits.LATH0 = 0;
  6281  0008' 9080               	bcf	128,0,c	;volatile
  6282                           
  6283                           ;buttons_n_LEDs.c: 82:     TRISHbits.TRISH1 = 0;
  6284  000A' 9288               	bcf	136,1,c	;volatile
  6285                           
  6286                           ;buttons_n_LEDs.c: 83:     TRISDbits.TRISD3 = 0;
  6287  000C' 9684               	bcf	132,3,c	;volatile
  6288                           
  6289                           ;buttons_n_LEDs.c: 84:     TRISDbits.TRISD4 = 0;
  6290  000E' 9884               	bcf	132,4,c	;volatile
  6291                           
  6292                           ;buttons_n_LEDs.c: 85:     TRISFbits.TRISF0 = 0;
  6293  0010' 9086               	bcf	134,0,c	;volatile
  6294                           
  6295                           ;buttons_n_LEDs.c: 86:     TRISHbits.TRISH0 = 0;
  6296  0012' 9088               	bcf	136,0,c	;volatile
  6297  0014' 0012               	return		;funcret
  6298  0016'                    __end_of_buggyLEDs_init:
  6299                           	callstack 0
  6300                           
  6301 ;; *************** function _DCmotors_calibration *****************
  6302 ;; Defined at:
  6303 ;;		line 318 in file "DC_motors.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  mL              2   33[BANK0 ] PTR struct .
  6306 ;;		 -> main@motorL(9), 
  6307 ;;  mR              2   35[BANK0 ] PTR struct .
  6308 ;;		 -> main@motorR(9), 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  okay            1   37[BANK0 ] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;Total ram usage:        7 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; Hardware stack levels required when called: 10
  6327 ;; This function calls:
  6328 ;;		_adjdelay
  6329 ;;		_stop
  6330 ;;		_turnleft
  6331 ;;		_turnright
  6332 ;; This function is called by:
  6333 ;;		_main
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text39
  6338  0000'                    __ptext39:
  6339                           	callstack 0
  6340  0000'                    _DCmotors_calibration:
  6341                           	callstack 20
  6342  0000'                    
  6343                           ;DC_motors.c: 319:     unsigned char okay = 0;
  6344  0000' 0E00               	movlw	0
  6345  0002' 0100               	movlb	0	; () banked
  6346  0004' 6F00'              	movwf	DCmotors_calibration@okay& (0+255),b
  6347  0006'                    l733:
  6348  0006' A48E               	btfss	142,2,c	;volatile
  6349  0008' EF00' F000'        	goto	u6011
  6350  000C' EF00' F000'        	goto	u6010
  6351  0010'                    u6011:
  6352  0010' EF00' F000'        	goto	l738
  6353  0014'                    u6010:
  6354  0014' B68E               	btfsc	142,3,c	;volatile
  6355  0016' EF00' F000'        	goto	u6021
  6356  001A' EF00' F000'        	goto	u6020
  6357  001E'                    u6021:
  6358  001E' EF00' F000'        	goto	l733
  6359  0022'                    u6020:
  6360  0022' EF00' F000'        	goto	l738
  6361  0026'                    l739:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;DC_motors.c: 323:         LATDbits.LATD3 = 1;
  6365  0026' 867C               	bsf	124,3,c	;volatile
  6366  0028'                    
  6367                           ; BSR set to: 0
  6368                           ;DC_motors.c: 324:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6369  0028' 0E09               	movlw	9
  6370  002A' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6371  002C' 0E1E               	movlw	30
  6372  002E' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6373  0030' 0EE4               	movlw	228
  6374  0032'                    u7327:
  6375  0032' 2EE8               	decfsz	wreg,f,c
  6376  0034' D7FE               	bra	u7327
  6377  0036' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6378  0038' D7FC               	bra	u7327
  6379  003A' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6380  003C' D7FA               	bra	u7327
  6381  003E' D000               	nop2	
  6382  0040'                    
  6383                           ;DC_motors.c: 325:         turnright(mL, mR, 360);
  6384  0040' C021' F011'        	movff	DCmotors_calibration@mL,turnright@mL
  6385  0044' C022' F012'        	movff	DCmotors_calibration@mL+1,turnright@mL+1
  6386  0048' C023' F013'        	movff	DCmotors_calibration@mR,turnright@mR
  6387  004C' C024' F014'        	movff	DCmotors_calibration@mR+1,turnright@mR+1
  6388  0050' 0E01               	movlw	1
  6389  0052' 0100               	movlb	0	; () banked
  6390  0054' 6F00'              	movwf	(turnright@deg+1)& (0+255),b
  6391  0056' 0E68               	movlw	104
  6392  0058' 6F00'              	movwf	turnright@deg& (0+255),b
  6393  005A' EC00' F000'        	call	_turnright	;wreg free
  6394  005E'                    
  6395                           ;DC_motors.c: 326:         stop(mL, mR);
  6396  005E' C021' F023'        	movff	DCmotors_calibration@mL,stop@mL
  6397  0062' C022' F024'        	movff	DCmotors_calibration@mL+1,stop@mL+1
  6398  0066' C023' F025'        	movff	DCmotors_calibration@mR,stop@mR
  6399  006A' C024' F026'        	movff	DCmotors_calibration@mR+1,stop@mR+1
  6400  006E' EC00' F000'        	call	_stop	;wreg free
  6401  0072'                    l740:
  6402  0072' A48E               	btfss	142,2,c	;volatile
  6403  0074' EF00' F000'        	goto	u6031
  6404  0078' EF00' F000'        	goto	u6030
  6405  007C'                    u6031:
  6406  007C' EF00' F000'        	goto	l744
  6407  0080'                    u6030:
  6408  0080' B68E               	btfsc	142,3,c	;volatile
  6409  0082' EF00' F000'        	goto	u6041
  6410  0086' EF00' F000'        	goto	u6040
  6411  008A'                    u6041:
  6412  008A' EF00' F000'        	goto	l740
  6413  008E'                    u6040:
  6414  008E'                    l744:
  6415                           
  6416                           ;DC_motors.c: 329:         LATDbits.LATD3 = 0;
  6417  008E' 967C               	bcf	124,3,c	;volatile
  6418  0090'                    
  6419                           ;DC_motors.c: 330:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6420  0090' 0E52               	movlw	82
  6421  0092' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6422  0094' 0E2B               	movlw	43
  6423  0096' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6424  0098' 0E00               	movlw	0
  6425  009A'                    u7337:
  6426  009A' 2EE8               	decfsz	wreg,f,c
  6427  009C' D7FE               	bra	u7337
  6428  009E' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6429  00A0' D7FC               	bra	u7337
  6430  00A2' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6431  00A4' D7FA               	bra	u7337
  6432  00A6' D000               	nop2	
  6433  00A8'                    
  6434                           ;DC_motors.c: 331:         adjdelay(1);
  6435  00A8' 0E01               	movlw	1
  6436  00AA' EC00' F000'        	call	_adjdelay
  6437  00AE'                    
  6438                           ;DC_motors.c: 332:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6439  00AE' 0E52               	movlw	82
  6440  00B0' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6441  00B2' 0E2B               	movlw	43
  6442  00B4' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6443  00B6' 0E00               	movlw	0
  6444  00B8'                    u7347:
  6445  00B8' 2EE8               	decfsz	wreg,f,c
  6446  00BA' D7FE               	bra	u7347
  6447  00BC' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6448  00BE' D7FC               	bra	u7347
  6449  00C0' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6450  00C2' D7FA               	bra	u7347
  6451  00C4' D000               	nop2	
  6452  00C6'                    
  6453                           ;DC_motors.c: 334:         LATDbits.LATD3 = 1;
  6454  00C6' 867C               	bsf	124,3,c	;volatile
  6455  00C8'                    
  6456                           ;DC_motors.c: 335:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6457  00C8' 0E09               	movlw	9
  6458  00CA' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6459  00CC' 0E1E               	movlw	30
  6460  00CE' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6461  00D0' 0EE4               	movlw	228
  6462  00D2'                    u7357:
  6463  00D2' 2EE8               	decfsz	wreg,f,c
  6464  00D4' D7FE               	bra	u7357
  6465  00D6' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6466  00D8' D7FC               	bra	u7357
  6467  00DA' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6468  00DC' D7FA               	bra	u7357
  6469  00DE' D000               	nop2	
  6470  00E0'                    
  6471                           ;DC_motors.c: 336:         turnleft(mL, mR, 360);
  6472  00E0' C021' F011'        	movff	DCmotors_calibration@mL,turnleft@mL
  6473  00E4' C022' F012'        	movff	DCmotors_calibration@mL+1,turnleft@mL+1
  6474  00E8' C023' F013'        	movff	DCmotors_calibration@mR,turnleft@mR
  6475  00EC' C024' F014'        	movff	DCmotors_calibration@mR+1,turnleft@mR+1
  6476  00F0' 0E01               	movlw	1
  6477  00F2' 0100               	movlb	0	; () banked
  6478  00F4' 6F00'              	movwf	(turnleft@deg+1)& (0+255),b
  6479  00F6' 0E68               	movlw	104
  6480  00F8' 6F00'              	movwf	turnleft@deg& (0+255),b
  6481  00FA' EC00' F000'        	call	_turnleft	;wreg free
  6482  00FE'                    
  6483                           ;DC_motors.c: 337:         stop(mL, mR);
  6484  00FE' C021' F023'        	movff	DCmotors_calibration@mL,stop@mL
  6485  0102' C022' F024'        	movff	DCmotors_calibration@mL+1,stop@mL+1
  6486  0106' C023' F025'        	movff	DCmotors_calibration@mR,stop@mR
  6487  010A' C024' F026'        	movff	DCmotors_calibration@mR+1,stop@mR+1
  6488  010E' EC00' F000'        	call	_stop	;wreg free
  6489  0112'                    l745:
  6490  0112' A48E               	btfss	142,2,c	;volatile
  6491  0114' EF00' F000'        	goto	u6051
  6492  0118' EF00' F000'        	goto	u6050
  6493  011C'                    u6051:
  6494  011C' EF00' F000'        	goto	l749
  6495  0120'                    u6050:
  6496  0120' B68E               	btfsc	142,3,c	;volatile
  6497  0122' EF00' F000'        	goto	u6061
  6498  0126' EF00' F000'        	goto	u6060
  6499  012A'                    u6061:
  6500  012A' EF00' F000'        	goto	l745
  6501  012E'                    u6060:
  6502  012E'                    l749:
  6503                           
  6504                           ;DC_motors.c: 340:         LATDbits.LATD3 = 0;
  6505  012E' 967C               	bcf	124,3,c	;volatile
  6506  0130'                    
  6507                           ;DC_motors.c: 341:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6508  0130' 0E52               	movlw	82
  6509  0132' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6510  0134' 0E2B               	movlw	43
  6511  0136' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6512  0138' 0E00               	movlw	0
  6513  013A'                    u7367:
  6514  013A' 2EE8               	decfsz	wreg,f,c
  6515  013C' D7FE               	bra	u7367
  6516  013E' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6517  0140' D7FC               	bra	u7367
  6518  0142' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6519  0144' D7FA               	bra	u7367
  6520  0146' D000               	nop2	
  6521  0148'                    
  6522                           ;DC_motors.c: 342:         adjdelay(2);
  6523  0148' 0E02               	movlw	2
  6524  014A' EC00' F000'        	call	_adjdelay
  6525  014E'                    
  6526                           ;DC_motors.c: 343:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6527  014E' 0E52               	movlw	82
  6528  0150' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6529  0152' 0E2B               	movlw	43
  6530  0154' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6531  0156' 0E00               	movlw	0
  6532  0158'                    u7377:
  6533  0158' 2EE8               	decfsz	wreg,f,c
  6534  015A' D7FE               	bra	u7377
  6535  015C' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6536  015E' D7FC               	bra	u7377
  6537  0160' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6538  0162' D7FA               	bra	u7377
  6539  0164' D000               	nop2	
  6540  0166'                    
  6541                           ;DC_motors.c: 346:         LATDbits.LATD3 = 1;
  6542  0166' 867C               	bsf	124,3,c	;volatile
  6543  0168'                    
  6544                           ;DC_motors.c: 347:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6545  0168' 0E09               	movlw	9
  6546  016A' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6547  016C' 0E1E               	movlw	30
  6548  016E' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6549  0170' 0EE4               	movlw	228
  6550  0172'                    u7387:
  6551  0172' 2EE8               	decfsz	wreg,f,c
  6552  0174' D7FE               	bra	u7387
  6553  0176' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6554  0178' D7FC               	bra	u7387
  6555  017A' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6556  017C' D7FA               	bra	u7387
  6557  017E' D000               	nop2	
  6558  0180'                    
  6559                           ;DC_motors.c: 348:         turnright(mL, mR, 90);
  6560  0180' C021' F011'        	movff	DCmotors_calibration@mL,turnright@mL
  6561  0184' C022' F012'        	movff	DCmotors_calibration@mL+1,turnright@mL+1
  6562  0188' C023' F013'        	movff	DCmotors_calibration@mR,turnright@mR
  6563  018C' C024' F014'        	movff	DCmotors_calibration@mR+1,turnright@mR+1
  6564  0190' 0E00               	movlw	0
  6565  0192' 0100               	movlb	0	; () banked
  6566  0194' 6F00'              	movwf	(turnright@deg+1)& (0+255),b
  6567  0196' 0E5A               	movlw	90
  6568  0198' 6F00'              	movwf	turnright@deg& (0+255),b
  6569  019A' EC00' F000'        	call	_turnright	;wreg free
  6570  019E'                    
  6571                           ;DC_motors.c: 349:         stop(mL, mR);
  6572  019E' C021' F023'        	movff	DCmotors_calibration@mL,stop@mL
  6573  01A2' C022' F024'        	movff	DCmotors_calibration@mL+1,stop@mL+1
  6574  01A6' C023' F025'        	movff	DCmotors_calibration@mR,stop@mR
  6575  01AA' C024' F026'        	movff	DCmotors_calibration@mR+1,stop@mR+1
  6576  01AE' EC00' F000'        	call	_stop	;wreg free
  6577  01B2'                    
  6578                           ;DC_motors.c: 350:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6579  01B2' 0E52               	movlw	82
  6580  01B4' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6581  01B6' 0E2B               	movlw	43
  6582  01B8' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6583  01BA' 0E00               	movlw	0
  6584  01BC'                    u7397:
  6585  01BC' 2EE8               	decfsz	wreg,f,c
  6586  01BE' D7FE               	bra	u7397
  6587  01C0' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6588  01C2' D7FC               	bra	u7397
  6589  01C4' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6590  01C6' D7FA               	bra	u7397
  6591  01C8' D000               	nop2	
  6592  01CA'                    
  6593                           ;DC_motors.c: 352:         turnleft(mL, mR, 90);
  6594  01CA' C021' F011'        	movff	DCmotors_calibration@mL,turnleft@mL
  6595  01CE' C022' F012'        	movff	DCmotors_calibration@mL+1,turnleft@mL+1
  6596  01D2' C023' F013'        	movff	DCmotors_calibration@mR,turnleft@mR
  6597  01D6' C024' F014'        	movff	DCmotors_calibration@mR+1,turnleft@mR+1
  6598  01DA' 0E00               	movlw	0
  6599  01DC' 0100               	movlb	0	; () banked
  6600  01DE' 6F00'              	movwf	(turnleft@deg+1)& (0+255),b
  6601  01E0' 0E5A               	movlw	90
  6602  01E2' 6F00'              	movwf	turnleft@deg& (0+255),b
  6603  01E4' EC00' F000'        	call	_turnleft	;wreg free
  6604  01E8'                    
  6605                           ;DC_motors.c: 353:         stop(mL, mR);
  6606  01E8' C021' F023'        	movff	DCmotors_calibration@mL,stop@mL
  6607  01EC' C022' F024'        	movff	DCmotors_calibration@mL+1,stop@mL+1
  6608  01F0' C023' F025'        	movff	DCmotors_calibration@mR,stop@mR
  6609  01F4' C024' F026'        	movff	DCmotors_calibration@mR+1,stop@mR+1
  6610  01F8' EC00' F000'        	call	_stop	;wreg free
  6611  01FC'                    
  6612                           ;DC_motors.c: 354:         LATDbits.LATD3 = 0;
  6613  01FC' 967C               	bcf	124,3,c	;volatile
  6614  01FE'                    
  6615                           ;DC_motors.c: 355:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6616  01FE' 0E52               	movlw	82
  6617  0200' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6618  0202' 0E2B               	movlw	43
  6619  0204' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6620  0206' 0E00               	movlw	0
  6621  0208'                    u7407:
  6622  0208' 2EE8               	decfsz	wreg,f,c
  6623  020A' D7FE               	bra	u7407
  6624  020C' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6625  020E' D7FC               	bra	u7407
  6626  0210' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6627  0212' D7FA               	bra	u7407
  6628  0214' D000               	nop2	
  6629  0216'                    
  6630                           ;DC_motors.c: 358:         LATHbits.LATH3 = 1;
  6631  0216' 8680               	bsf	128,3,c	;volatile
  6632  0218'                    
  6633                           ;DC_motors.c: 359:         LATDbits.LATD7 = 1;
  6634  0218' 8E7C               	bsf	124,7,c	;volatile
  6635  021A'                    l750:
  6636  021A' A48E               	btfss	142,2,c	;volatile
  6637  021C' EF00' F000'        	goto	u6071
  6638  0220' EF00' F000'        	goto	u6070
  6639  0224'                    u6071:
  6640  0224' EF00' F000'        	goto	l754
  6641  0228'                    u6070:
  6642  0228' B68E               	btfsc	142,3,c	;volatile
  6643  022A' EF00' F000'        	goto	u6081
  6644  022E' EF00' F000'        	goto	u6080
  6645  0232'                    u6081:
  6646  0232' EF00' F000'        	goto	l750
  6647  0236'                    u6080:
  6648  0236'                    l754:
  6649                           
  6650                           ;DC_motors.c: 361:         if(!PORTFbits.RF2 && PORTFbits.RF3){
  6651  0236' B48E               	btfsc	142,2,c	;volatile
  6652  0238' EF00' F000'        	goto	u6091
  6653  023C' EF00' F000'        	goto	u6090
  6654  0240'                    u6091:
  6655  0240' EF00' F000'        	goto	l755
  6656  0244'                    u6090:
  6657  0244' A68E               	btfss	142,3,c	;volatile
  6658  0246' EF00' F000'        	goto	u6101
  6659  024A' EF00' F000'        	goto	u6100
  6660  024E'                    u6101:
  6661  024E' EF00' F000'        	goto	l755
  6662  0252'                    u6100:
  6663  0252'                    
  6664                           ;DC_motors.c: 362:             LATDbits.LATD7 = 0;
  6665  0252' 9E7C               	bcf	124,7,c	;volatile
  6666  0254'                    
  6667                           ;DC_motors.c: 363:             okay = 1;
  6668  0254' 0E01               	movlw	1
  6669  0256' 0100               	movlb	0	; () banked
  6670  0258' 6F00'              	movwf	DCmotors_calibration@okay& (0+255),b
  6671                           
  6672                           ;DC_motors.c: 364:         } else if(!PORTFbits.RF3 && PORTFbits.RF2){
  6673  025A' EF00' F000'        	goto	l5375
  6674  025E'                    l755:
  6675  025E' B68E               	btfsc	142,3,c	;volatile
  6676  0260' EF00' F000'        	goto	u6111
  6677  0264' EF00' F000'        	goto	u6110
  6678  0268'                    u6111:
  6679  0268' EF00' F000'        	goto	l5375
  6680  026C'                    u6110:
  6681  026C' A48E               	btfss	142,2,c	;volatile
  6682  026E' EF00' F000'        	goto	u6121
  6683  0272' EF00' F000'        	goto	u6120
  6684  0276'                    u6121:
  6685  0276' EF00' F000'        	goto	l5375
  6686  027A'                    u6120:
  6687  027A'                    
  6688                           ;DC_motors.c: 365:             LATHbits.LATH3 = 0;
  6689  027A' 9680               	bcf	128,3,c	;volatile
  6690  027C'                    
  6691                           ;DC_motors.c: 366:             okay = 0;
  6692  027C' 0E00               	movlw	0
  6693  027E' 0100               	movlb	0	; () banked
  6694  0280' 6F00'              	movwf	DCmotors_calibration@okay& (0+255),b
  6695  0282'                    l5375:
  6696                           
  6697                           ;DC_motors.c: 368:         _delay((unsigned long)((200)*(64000000/4000.0)));
  6698  0282' 0E11               	movlw	17
  6699  0284' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6700  0286' 0E3C               	movlw	60
  6701  0288' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6702  028A' 0ECB               	movlw	203
  6703  028C'                    u7417:
  6704  028C' 2EE8               	decfsz	wreg,f,c
  6705  028E' D7FE               	bra	u7417
  6706  0290' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6707  0292' D7FC               	bra	u7417
  6708  0294' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6709  0296' D7FA               	bra	u7417
  6710  0298' F000               	nop	
  6711  029A'                    
  6712                           ;DC_motors.c: 369:         LATHbits.LATH3 = 0;
  6713  029A' 9680               	bcf	128,3,c	;volatile
  6714  029C'                    
  6715                           ;DC_motors.c: 370:         LATDbits.LATD7 = 0;
  6716  029C' 9E7C               	bcf	124,7,c	;volatile
  6717  029E'                    
  6718                           ;DC_motors.c: 371:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6719  029E' 0E52               	movlw	82
  6720  02A0' 6E00'              	movwf	(??_DCmotors_calibration+1)^0,c
  6721  02A2' 0E2B               	movlw	43
  6722  02A4' 6E00'              	movwf	??_DCmotors_calibration^0,c
  6723  02A6' 0E00               	movlw	0
  6724  02A8'                    u7427:
  6725  02A8' 2EE8               	decfsz	wreg,f,c
  6726  02AA' D7FE               	bra	u7427
  6727  02AC' 2E00'              	decfsz	??_DCmotors_calibration^0,f,c
  6728  02AE' D7FC               	bra	u7427
  6729  02B0' 2E00'              	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6730  02B2' D7FA               	bra	u7427
  6731  02B4' D000               	nop2	
  6732  02B6'                    l738:
  6733                           
  6734                           ;DC_motors.c: 321:     while(okay<1){
  6735  02B6' 0100               	movlb	0	; () banked
  6736  02B8' 5100'              	movf	DCmotors_calibration@okay& (0+255),w,b
  6737  02BA' B4D8               	btfsc	status,2,c
  6738  02BC' EF00' F000'        	goto	u6131
  6739  02C0' EF00' F000'        	goto	u6130
  6740  02C4'                    u6131:
  6741  02C4' EF00' F000'        	goto	l739
  6742  02C8'                    u6130:
  6743  02C8'                    
  6744                           ; BSR set to: 0
  6745  02C8' 0012               	return		;funcret
  6746  02CA'                    __end_of_DCmotors_calibration:
  6747                           	callstack 0
  6748                           
  6749 ;; *************** function _turnright *****************
  6750 ;; Defined at:
  6751 ;;		line 185 in file "DC_motors.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  mL              2   17[BANK0 ] PTR struct .
  6754 ;;		 -> main@motorL(9), 
  6755 ;;  mR              2   19[BANK0 ] PTR struct .
  6756 ;;		 -> main@motorR(9), 
  6757 ;;  deg             2   21[BANK0 ] unsigned int 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;  delay           4   23[BANK0 ] unsigned int 
  6760 ;;  i               2   31[BANK0 ] unsigned int 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      void 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6770 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6771 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6773 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6774 ;;Total ram usage:       17 bytes
  6775 ;; Hardware stack levels used: 1
  6776 ;; Hardware stack levels required when called: 9
  6777 ;; This function calls:
  6778 ;;		_DCmotors_setPWM
  6779 ;;		___fladd
  6780 ;;		___fldiv
  6781 ;;		___flge
  6782 ;;		___flmul
  6783 ;;		___xxtofl
  6784 ;; This function is called by:
  6785 ;;		_instructions
  6786 ;;		_reverseinstructions
  6787 ;;		_DCmotors_calibration
  6788 ;;		_DCmotors_testing
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text40
  6793  0000'                    __ptext40:
  6794                           	callstack 0
  6795  0000'                    _turnright:
  6796                           	callstack 19
  6797  0000'                    
  6798                           ;DC_motors.c: 187:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  6799  0000' 0E23               	movlw	35
  6800  0002' 6E00'              	movwf	___fladd@a^0,c
  6801  0004' 0EDB               	movlw	219
  6802  0006' 6E00'              	movwf	(___fladd@a+1)^0,c
  6803  0008' 0E7B               	movlw	123
  6804  000A' 6E00'              	movwf	(___fladd@a+2)^0,c
  6805  000C' 0E42               	movlw	66
  6806  000E' 6E00'              	movwf	(___fladd@a+3)^0,c
  6807  0010' 0E6F               	movlw	111
  6808  0012' 6E00'              	movwf	___flmul@a^0,c
  6809  0014' 0EF0               	movlw	240
  6810  0016' 6E00'              	movwf	(___flmul@a+1)^0,c
  6811  0018' 0E01               	movlw	1
  6812  001A' 6E00'              	movwf	(___flmul@a+2)^0,c
  6813  001C' 0E40               	movlw	64
  6814  001E' 6E00'              	movwf	(___flmul@a+3)^0,c
  6815  0020' C015' F00A'        	movff	turnright@deg,___xxtofl@val
  6816  0024' C016' F00B'        	movff	turnright@deg+1,___xxtofl@val+1
  6817  0028' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  6818  002A' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  6819  002C' 0E00               	movlw	0
  6820  002E' EC00' F000'        	call	___xxtofl
  6821  0032' C00A' F018'        	movff	?___xxtofl,___flmul@b
  6822  0036' C00B' F019'        	movff	?___xxtofl+1,___flmul@b+1
  6823  003A' C00C' F01A'        	movff	?___xxtofl+2,___flmul@b+2
  6824  003E' C00D' F01B'        	movff	?___xxtofl+3,___flmul@b+3
  6825  0042' EC00' F000'        	call	___flmul	;wreg free
  6826  0046' C018' F031'        	movff	?___flmul,___fladd@b
  6827  004A' C019' F032'        	movff	?___flmul+1,___fladd@b+1
  6828  004E' C01A' F033'        	movff	?___flmul+2,___fladd@b+2
  6829  0052' C01B' F034'        	movff	?___flmul+3,___fladd@b+3
  6830  0056' EC00' F000'        	call	___fladd	;wreg free
  6831  005A' C031' F01B'        	movff	?___fladd,_turnright$3220
  6832  005E' C032' F01C'        	movff	?___fladd+1,_turnright$3220+1
  6833  0062' C033' F01D'        	movff	?___fladd+2,_turnright$3220+2
  6834  0066' C034' F01E'        	movff	?___fladd+3,_turnright$3220+3
  6835                           
  6836                           ;DC_motors.c: 187:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  6837  006A' 0E00               	movlw	0
  6838  006C' 6E00'              	movwf	___flmul@a^0,c
  6839  006E' 0E00               	movlw	0
  6840  0070' 6E00'              	movwf	(___flmul@a+1)^0,c
  6841  0072' 0EB4               	movlw	180
  6842  0074' 6E00'              	movwf	(___flmul@a+2)^0,c
  6843  0076' 0E43               	movlw	67
  6844  0078' 6E00'              	movwf	(___flmul@a+3)^0,c
  6845  007A' C01B' F018'        	movff	_turnright$3220,___flmul@b
  6846  007E' C01C' F019'        	movff	_turnright$3220+1,___flmul@b+1
  6847  0082' C01D' F01A'        	movff	_turnright$3220+2,___flmul@b+2
  6848  0086' C01E' F01B'        	movff	_turnright$3220+3,___flmul@b+3
  6849  008A' EC00' F000'        	call	___flmul	;wreg free
  6850  008E' C018' F041'        	movff	?___flmul,___fldiv@b
  6851  0092' C019' F042'        	movff	?___flmul+1,___fldiv@b+1
  6852  0096' C01A' F043'        	movff	?___flmul+2,___fldiv@b+2
  6853  009A' C01B' F044'        	movff	?___flmul+3,___fldiv@b+3
  6854  009E' C000' F00A'        	movff	_turnright_calangle,___xxtofl@val	;volatile
  6855  00A2' C001' F00B'        	movff	_turnright_calangle+1,___xxtofl@val+1	;volatile
  6856  00A6' 0E00               	movlw	0
  6857  00A8' BE00'              	btfsc	(___xxtofl@val+1)^0,7,c
  6858  00AA' 0EFF               	movlw	-1
  6859  00AC' 6E00'              	movwf	(___xxtofl@val+2)^0,c
  6860  00AE' 6E00'              	movwf	(___xxtofl@val+3)^0,c
  6861  00B0' 0E01               	movlw	1
  6862  00B2' EC00' F000'        	call	___xxtofl
  6863  00B6' C00A' F045'        	movff	?___xxtofl,___fldiv@a
  6864  00BA' C00B' F046'        	movff	?___xxtofl+1,___fldiv@a+1
  6865  00BE' C00C' F047'        	movff	?___xxtofl+2,___fldiv@a+2
  6866  00C2' C00D' F048'        	movff	?___xxtofl+3,___fldiv@a+3
  6867  00C6' EC00' F000'        	call	___fldiv	;wreg free
  6868  00CA' C041' F017'        	movff	?___fldiv,turnright@delay
  6869  00CE' C042' F018'        	movff	?___fldiv+1,turnright@delay+1
  6870  00D2' C043' F019'        	movff	?___fldiv+2,turnright@delay+2
  6871  00D6' C044' F01A'        	movff	?___fldiv+3,turnright@delay+3
  6872  00DA'                    
  6873                           ;DC_motors.c: 190:     mL->direction = 1;
  6874  00DA' 0100               	movlb	0	; () banked
  6875  00DC' EE20 F001          	lfsr	2,1
  6876  00E0' 5100'              	movf	turnright@mL& (0+255),w,b
  6877  00E2' 26D9               	addwf	fsr2l,f,c
  6878  00E4' 5100'              	movf	(turnright@mL+1)& (0+255),w,b
  6879  00E6' 22DA               	addwfc	fsr2h,f,c
  6880  00E8' 0E01               	movlw	1
  6881  00EA' 6EDF               	movwf	indf2,c
  6882  00EC'                    
  6883                           ; BSR set to: 0
  6884                           ;DC_motors.c: 191:     mR->direction = 0;
  6885  00EC' EE20 F001          	lfsr	2,1
  6886  00F0' 5100'              	movf	turnright@mR& (0+255),w,b
  6887  00F2' 26D9               	addwf	fsr2l,f,c
  6888  00F4' 5100'              	movf	(turnright@mR+1)& (0+255),w,b
  6889  00F6' 22DA               	addwfc	fsr2h,f,c
  6890  00F8' 0E00               	movlw	0
  6891  00FA' 6EDF               	movwf	indf2,c
  6892  00FC'                    
  6893                           ; BSR set to: 0
  6894                           ;DC_motors.c: 194:     LATHbits.LATH0 = 1;
  6895  00FC' 8080               	bsf	128,0,c	;volatile
  6896                           
  6897                           ;DC_motors.c: 195:     while((mL->power < 70) || (mR->power < 70)){
  6898  00FE' EF00' F000'        	goto	l5185
  6899  0102'                    l5171:
  6900                           
  6901                           ;DC_motors.c: 197:         if (mL->power < 70) {mL->power += 10;}
  6902  0102' C011' FFD9         	movff	turnright@mL,fsr2l
  6903  0106' C012' FFDA         	movff	turnright@mL+1,fsr2h
  6904  010A' 0E46               	movlw	70
  6905  010C' 60DF               	cpfslt	indf2,c
  6906  010E' EF00' F000'        	goto	u5811
  6907  0112' EF00' F000'        	goto	u5810
  6908  0116'                    u5811:
  6909  0116' EF00' F000'        	goto	l5175
  6910  011A'                    u5810:
  6911  011A' C011' FFD9         	movff	turnright@mL,fsr2l
  6912  011E' C012' FFDA         	movff	turnright@mL+1,fsr2h
  6913  0122' 0E0A               	movlw	10
  6914  0124' 26DF               	addwf	indf2,f,c
  6915  0126'                    l5175:
  6916                           
  6917                           ;DC_motors.c: 198:         if (mR->power < 70) {mR->power += 10;}
  6918  0126' C013' FFD9         	movff	turnright@mR,fsr2l
  6919  012A' C014' FFDA         	movff	turnright@mR+1,fsr2h
  6920  012E' 0E46               	movlw	70
  6921  0130' 60DF               	cpfslt	indf2,c
  6922  0132' EF00' F000'        	goto	u5821
  6923  0136' EF00' F000'        	goto	u5820
  6924  013A'                    u5821:
  6925  013A' EF00' F000'        	goto	l5179
  6926  013E'                    u5820:
  6927  013E' C013' FFD9         	movff	turnright@mR,fsr2l
  6928  0142' C014' FFDA         	movff	turnright@mR+1,fsr2h
  6929  0146' 0E0A               	movlw	10
  6930  0148' 26DF               	addwf	indf2,f,c
  6931  014A'                    l5179:
  6932                           
  6933                           ;DC_motors.c: 201:         DCmotors_setPWM(mL);
  6934  014A' C011' F018'        	movff	turnright@mL,DCmotors_setPWM@m
  6935  014E' C012' F019'        	movff	turnright@mL+1,DCmotors_setPWM@m+1
  6936  0152' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  6937  0156'                    
  6938                           ;DC_motors.c: 202:         DCmotors_setPWM(mR);
  6939  0156' C013' F018'        	movff	turnright@mR,DCmotors_setPWM@m
  6940  015A' C014' F019'        	movff	turnright@mR+1,DCmotors_setPWM@m+1
  6941  015E' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  6942  0162'                    
  6943                           ;DC_motors.c: 203:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6944  0162' 0EA0               	movlw	160
  6945  0164'                    u7437:
  6946  0164' D000               	nop2	
  6947  0166' 2EE8               	decfsz	wreg,f,c
  6948  0168' D7FD               	bra	u7437
  6949  016A'                    l5185:
  6950                           
  6951                           ;DC_motors.c: 195:     while((mL->power < 70) || (mR->power < 70)){
  6952  016A' C011' FFD9         	movff	turnright@mL,fsr2l
  6953  016E' C012' FFDA         	movff	turnright@mL+1,fsr2h
  6954  0172' 0E45               	movlw	69
  6955  0174' 64DF               	cpfsgt	indf2,c
  6956  0176' EF00' F000'        	goto	u5831
  6957  017A' EF00' F000'        	goto	u5830
  6958  017E'                    u5831:
  6959  017E' EF00' F000'        	goto	l5171
  6960  0182'                    u5830:
  6961  0182' C013' FFD9         	movff	turnright@mR,fsr2l
  6962  0186' C014' FFDA         	movff	turnright@mR+1,fsr2h
  6963  018A' 0E45               	movlw	69
  6964  018C' 64DF               	cpfsgt	indf2,c
  6965  018E' EF00' F000'        	goto	u5841
  6966  0192' EF00' F000'        	goto	u5840
  6967  0196'                    u5841:
  6968  0196' EF00' F000'        	goto	l5171
  6969  019A'                    u5840:
  6970  019A'                    
  6971                           ;DC_motors.c: 206:     unsigned int i;;DC_motors.c: 207:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  6972  019A' 0E00               	movlw	0
  6973  019C' 0100               	movlb	0	; () banked
  6974  019E' 6F00'              	movwf	(turnright@i+1)& (0+255),b
  6975  01A0' 0E00               	movlw	0
  6976  01A2' 6F00'              	movwf	turnright@i& (0+255),b
  6977  01A4' EF00' F000'        	goto	l5195
  6978  01A8'                    l5191:
  6979  01A8' 0E15               	movlw	21
  6980  01AA' 6E00'              	movwf	??_turnright^0,c
  6981  01AC' 0EC6               	movlw	198
  6982  01AE'                    u7447:
  6983  01AE' 2EE8               	decfsz	wreg,f,c
  6984  01B0' D7FE               	bra	u7447
  6985  01B2' 2E00'              	decfsz	??_turnright^0,f,c
  6986  01B4' D7FC               	bra	u7447
  6987  01B6' D000               	nop2	
  6988  01B8' 0100               	movlb	0	; () banked
  6989  01BA' 4B00'              	infsnz	turnright@i& (0+255),f,b
  6990  01BC' 2B00'              	incf	(turnright@i+1)& (0+255),f,b
  6991  01BE'                    l5195:
  6992                           
  6993                           ; BSR set to: 0
  6994  01BE' C01F' F00A'        	movff	turnright@i,___xxtofl@val
  6995  01C2' C020' F00B'        	movff	turnright@i+1,___xxtofl@val+1
  6996  01C6' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  6997  01C8' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  6998  01CA' 0E00               	movlw	0
  6999  01CC' EC00' F000'        	call	___xxtofl
  7000  01D0' C00A' F018'        	movff	?___xxtofl,___flge@ff1
  7001  01D4' C00B' F019'        	movff	?___xxtofl+1,___flge@ff1+1
  7002  01D8' C00C' F01A'        	movff	?___xxtofl+2,___flge@ff1+2
  7003  01DC' C00D' F01B'        	movff	?___xxtofl+3,___flge@ff1+3
  7004  01E0' C017' F01C'        	movff	turnright@delay,___flge@ff2
  7005  01E4' C018' F01D'        	movff	turnright@delay+1,___flge@ff2+1
  7006  01E8' C019' F01E'        	movff	turnright@delay+2,___flge@ff2+2
  7007  01EC' C01A' F01F'        	movff	turnright@delay+3,___flge@ff2+3
  7008  01F0' EC00' F000'        	call	___flge	;wreg free
  7009  01F4' A0D8               	btfss	status,0,c
  7010  01F6' EF00' F000'        	goto	u5851
  7011  01FA' EF00' F000'        	goto	u5850
  7012  01FE'                    u5851:
  7013  01FE' EF00' F000'        	goto	l5191
  7014  0202'                    u5850:
  7015  0202'                    
  7016                           ;DC_motors.c: 209:     LATHbits.LATH0 = 0;
  7017  0202' 9080               	bcf	128,0,c	;volatile
  7018  0204' 0012               	return		;funcret
  7019  0206'                    __end_of_turnright:
  7020                           	callstack 0
  7021                           
  7022 ;; *************** function _turnleft *****************
  7023 ;; Defined at:
  7024 ;;		line 155 in file "DC_motors.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  mL              2   17[BANK0 ] PTR struct .
  7027 ;;		 -> main@motorL(9), 
  7028 ;;  mR              2   19[BANK0 ] PTR struct .
  7029 ;;		 -> main@motorR(9), 
  7030 ;;  deg             2   21[BANK0 ] unsigned int 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  delay           4   23[BANK0 ] unsigned int 
  7033 ;;  i               2   31[BANK0 ] unsigned int 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7043 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7044 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7046 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7047 ;;Total ram usage:       17 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 9
  7050 ;; This function calls:
  7051 ;;		_DCmotors_setPWM
  7052 ;;		___fladd
  7053 ;;		___fldiv
  7054 ;;		___flge
  7055 ;;		___flmul
  7056 ;;		___xxtofl
  7057 ;; This function is called by:
  7058 ;;		_instructions
  7059 ;;		_reverseinstructions
  7060 ;;		_DCmotors_calibration
  7061 ;;		_DCmotors_testing
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text41
  7066  0000'                    __ptext41:
  7067                           	callstack 0
  7068  0000'                    _turnleft:
  7069                           	callstack 19
  7070  0000'                    
  7071                           ;DC_motors.c: 157:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  7072  0000' 0E4A               	movlw	74
  7073  0002' 6E00'              	movwf	___fladd@a^0,c
  7074  0004' 0E0C               	movlw	12
  7075  0006' 6E00'              	movwf	(___fladd@a+1)^0,c
  7076  0008' 0EFC               	movlw	252
  7077  000A' 6E00'              	movwf	(___fladd@a+2)^0,c
  7078  000C' 0E41               	movlw	65
  7079  000E' 6E00'              	movwf	(___fladd@a+3)^0,c
  7080  0010' 0E7D               	movlw	125
  7081  0012' 6E00'              	movwf	___flmul@a^0,c
  7082  0014' 0E3F               	movlw	63
  7083  0016' 6E00'              	movwf	(___flmul@a+1)^0,c
  7084  0018' 0E15               	movlw	21
  7085  001A' 6E00'              	movwf	(___flmul@a+2)^0,c
  7086  001C' 0E40               	movlw	64
  7087  001E' 6E00'              	movwf	(___flmul@a+3)^0,c
  7088  0020' C015' F00A'        	movff	turnleft@deg,___xxtofl@val
  7089  0024' C016' F00B'        	movff	turnleft@deg+1,___xxtofl@val+1
  7090  0028' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  7091  002A' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  7092  002C' 0E00               	movlw	0
  7093  002E' EC00' F000'        	call	___xxtofl
  7094  0032' C00A' F018'        	movff	?___xxtofl,___flmul@b
  7095  0036' C00B' F019'        	movff	?___xxtofl+1,___flmul@b+1
  7096  003A' C00C' F01A'        	movff	?___xxtofl+2,___flmul@b+2
  7097  003E' C00D' F01B'        	movff	?___xxtofl+3,___flmul@b+3
  7098  0042' EC00' F000'        	call	___flmul	;wreg free
  7099  0046' C018' F031'        	movff	?___flmul,___fladd@b
  7100  004A' C019' F032'        	movff	?___flmul+1,___fladd@b+1
  7101  004E' C01A' F033'        	movff	?___flmul+2,___fladd@b+2
  7102  0052' C01B' F034'        	movff	?___flmul+3,___fladd@b+3
  7103  0056' EC00' F000'        	call	___fladd	;wreg free
  7104  005A' C031' F01B'        	movff	?___fladd,_turnleft$3219
  7105  005E' C032' F01C'        	movff	?___fladd+1,_turnleft$3219+1
  7106  0062' C033' F01D'        	movff	?___fladd+2,_turnleft$3219+2
  7107  0066' C034' F01E'        	movff	?___fladd+3,_turnleft$3219+3
  7108                           
  7109                           ;DC_motors.c: 157:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  7110  006A' 0E00               	movlw	0
  7111  006C' 6E00'              	movwf	___flmul@a^0,c
  7112  006E' 0E00               	movlw	0
  7113  0070' 6E00'              	movwf	(___flmul@a+1)^0,c
  7114  0072' 0EB4               	movlw	180
  7115  0074' 6E00'              	movwf	(___flmul@a+2)^0,c
  7116  0076' 0E43               	movlw	67
  7117  0078' 6E00'              	movwf	(___flmul@a+3)^0,c
  7118  007A' C01B' F018'        	movff	_turnleft$3219,___flmul@b
  7119  007E' C01C' F019'        	movff	_turnleft$3219+1,___flmul@b+1
  7120  0082' C01D' F01A'        	movff	_turnleft$3219+2,___flmul@b+2
  7121  0086' C01E' F01B'        	movff	_turnleft$3219+3,___flmul@b+3
  7122  008A' EC00' F000'        	call	___flmul	;wreg free
  7123  008E' C018' F041'        	movff	?___flmul,___fldiv@b
  7124  0092' C019' F042'        	movff	?___flmul+1,___fldiv@b+1
  7125  0096' C01A' F043'        	movff	?___flmul+2,___fldiv@b+2
  7126  009A' C01B' F044'        	movff	?___flmul+3,___fldiv@b+3
  7127  009E' C002' F00A'        	movff	_turnleft_calangle,___xxtofl@val	;volatile
  7128  00A2' C003' F00B'        	movff	_turnleft_calangle+1,___xxtofl@val+1	;volatile
  7129  00A6' 0E00               	movlw	0
  7130  00A8' BE00'              	btfsc	(___xxtofl@val+1)^0,7,c
  7131  00AA' 0EFF               	movlw	-1
  7132  00AC' 6E00'              	movwf	(___xxtofl@val+2)^0,c
  7133  00AE' 6E00'              	movwf	(___xxtofl@val+3)^0,c
  7134  00B0' 0E01               	movlw	1
  7135  00B2' EC00' F000'        	call	___xxtofl
  7136  00B6' C00A' F045'        	movff	?___xxtofl,___fldiv@a
  7137  00BA' C00B' F046'        	movff	?___xxtofl+1,___fldiv@a+1
  7138  00BE' C00C' F047'        	movff	?___xxtofl+2,___fldiv@a+2
  7139  00C2' C00D' F048'        	movff	?___xxtofl+3,___fldiv@a+3
  7140  00C6' EC00' F000'        	call	___fldiv	;wreg free
  7141  00CA' C041' F017'        	movff	?___fldiv,turnleft@delay
  7142  00CE' C042' F018'        	movff	?___fldiv+1,turnleft@delay+1
  7143  00D2' C043' F019'        	movff	?___fldiv+2,turnleft@delay+2
  7144  00D6' C044' F01A'        	movff	?___fldiv+3,turnleft@delay+3
  7145  00DA'                    
  7146                           ;DC_motors.c: 160:     mL->direction = 0;
  7147  00DA' 0100               	movlb	0	; () banked
  7148  00DC' EE20 F001          	lfsr	2,1
  7149  00E0' 5100'              	movf	turnleft@mL& (0+255),w,b
  7150  00E2' 26D9               	addwf	fsr2l,f,c
  7151  00E4' 5100'              	movf	(turnleft@mL+1)& (0+255),w,b
  7152  00E6' 22DA               	addwfc	fsr2h,f,c
  7153  00E8' 0E00               	movlw	0
  7154  00EA' 6EDF               	movwf	indf2,c
  7155  00EC'                    
  7156                           ; BSR set to: 0
  7157                           ;DC_motors.c: 161:     mR->direction = 1;
  7158  00EC' EE20 F001          	lfsr	2,1
  7159  00F0' 5100'              	movf	turnleft@mR& (0+255),w,b
  7160  00F2' 26D9               	addwf	fsr2l,f,c
  7161  00F4' 5100'              	movf	(turnleft@mR+1)& (0+255),w,b
  7162  00F6' 22DA               	addwfc	fsr2h,f,c
  7163  00F8' 0E01               	movlw	1
  7164  00FA' 6EDF               	movwf	indf2,c
  7165  00FC'                    
  7166                           ; BSR set to: 0
  7167                           ;DC_motors.c: 164:     LATFbits.LATF0 = 1;
  7168  00FC' 807E               	bsf	126,0,c	;volatile
  7169                           
  7170                           ;DC_motors.c: 165:     while((mL->power < 70) || (mR->power < 70)){
  7171  00FE' EF00' F000'        	goto	l5151
  7172  0102'                    l5137:
  7173                           
  7174                           ;DC_motors.c: 167:         if (mL->power < 70) {mL->power += 10;}
  7175  0102' C011' FFD9         	movff	turnleft@mL,fsr2l
  7176  0106' C012' FFDA         	movff	turnleft@mL+1,fsr2h
  7177  010A' 0E46               	movlw	70
  7178  010C' 60DF               	cpfslt	indf2,c
  7179  010E' EF00' F000'        	goto	u5761
  7180  0112' EF00' F000'        	goto	u5760
  7181  0116'                    u5761:
  7182  0116' EF00' F000'        	goto	l5141
  7183  011A'                    u5760:
  7184  011A' C011' FFD9         	movff	turnleft@mL,fsr2l
  7185  011E' C012' FFDA         	movff	turnleft@mL+1,fsr2h
  7186  0122' 0E0A               	movlw	10
  7187  0124' 26DF               	addwf	indf2,f,c
  7188  0126'                    l5141:
  7189                           
  7190                           ;DC_motors.c: 168:         if (mR->power < 70) {mR->power += 10;}
  7191  0126' C013' FFD9         	movff	turnleft@mR,fsr2l
  7192  012A' C014' FFDA         	movff	turnleft@mR+1,fsr2h
  7193  012E' 0E46               	movlw	70
  7194  0130' 60DF               	cpfslt	indf2,c
  7195  0132' EF00' F000'        	goto	u5771
  7196  0136' EF00' F000'        	goto	u5770
  7197  013A'                    u5771:
  7198  013A' EF00' F000'        	goto	l5145
  7199  013E'                    u5770:
  7200  013E' C013' FFD9         	movff	turnleft@mR,fsr2l
  7201  0142' C014' FFDA         	movff	turnleft@mR+1,fsr2h
  7202  0146' 0E0A               	movlw	10
  7203  0148' 26DF               	addwf	indf2,f,c
  7204  014A'                    l5145:
  7205                           
  7206                           ;DC_motors.c: 171:         DCmotors_setPWM(mL);
  7207  014A' C011' F018'        	movff	turnleft@mL,DCmotors_setPWM@m
  7208  014E' C012' F019'        	movff	turnleft@mL+1,DCmotors_setPWM@m+1
  7209  0152' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  7210  0156'                    
  7211                           ;DC_motors.c: 172:         DCmotors_setPWM(mR);
  7212  0156' C013' F018'        	movff	turnleft@mR,DCmotors_setPWM@m
  7213  015A' C014' F019'        	movff	turnleft@mR+1,DCmotors_setPWM@m+1
  7214  015E' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  7215  0162'                    
  7216                           ;DC_motors.c: 173:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7217  0162' 0EA0               	movlw	160
  7218  0164'                    u7457:
  7219  0164' D000               	nop2	
  7220  0166' 2EE8               	decfsz	wreg,f,c
  7221  0168' D7FD               	bra	u7457
  7222  016A'                    l5151:
  7223                           
  7224                           ;DC_motors.c: 165:     while((mL->power < 70) || (mR->power < 70)){
  7225  016A' C011' FFD9         	movff	turnleft@mL,fsr2l
  7226  016E' C012' FFDA         	movff	turnleft@mL+1,fsr2h
  7227  0172' 0E45               	movlw	69
  7228  0174' 64DF               	cpfsgt	indf2,c
  7229  0176' EF00' F000'        	goto	u5781
  7230  017A' EF00' F000'        	goto	u5780
  7231  017E'                    u5781:
  7232  017E' EF00' F000'        	goto	l5137
  7233  0182'                    u5780:
  7234  0182' C013' FFD9         	movff	turnleft@mR,fsr2l
  7235  0186' C014' FFDA         	movff	turnleft@mR+1,fsr2h
  7236  018A' 0E45               	movlw	69
  7237  018C' 64DF               	cpfsgt	indf2,c
  7238  018E' EF00' F000'        	goto	u5791
  7239  0192' EF00' F000'        	goto	u5790
  7240  0196'                    u5791:
  7241  0196' EF00' F000'        	goto	l5137
  7242  019A'                    u5790:
  7243  019A'                    
  7244                           ;DC_motors.c: 176:     unsigned int i;;DC_motors.c: 177:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  7245  019A' 0E00               	movlw	0
  7246  019C' 0100               	movlb	0	; () banked
  7247  019E' 6F00'              	movwf	(turnleft@i+1)& (0+255),b
  7248  01A0' 0E00               	movlw	0
  7249  01A2' 6F00'              	movwf	turnleft@i& (0+255),b
  7250  01A4' EF00' F000'        	goto	l5161
  7251  01A8'                    l5157:
  7252  01A8' 0E15               	movlw	21
  7253  01AA' 6E00'              	movwf	??_turnleft^0,c
  7254  01AC' 0EC6               	movlw	198
  7255  01AE'                    u7467:
  7256  01AE' 2EE8               	decfsz	wreg,f,c
  7257  01B0' D7FE               	bra	u7467
  7258  01B2' 2E00'              	decfsz	??_turnleft^0,f,c
  7259  01B4' D7FC               	bra	u7467
  7260  01B6' D000               	nop2	
  7261  01B8' 0100               	movlb	0	; () banked
  7262  01BA' 4B00'              	infsnz	turnleft@i& (0+255),f,b
  7263  01BC' 2B00'              	incf	(turnleft@i+1)& (0+255),f,b
  7264  01BE'                    l5161:
  7265                           
  7266                           ; BSR set to: 0
  7267  01BE' C01F' F00A'        	movff	turnleft@i,___xxtofl@val
  7268  01C2' C020' F00B'        	movff	turnleft@i+1,___xxtofl@val+1
  7269  01C6' 6A00'              	clrf	(___xxtofl@val+2)^0,c
  7270  01C8' 6A00'              	clrf	(___xxtofl@val+3)^0,c
  7271  01CA' 0E00               	movlw	0
  7272  01CC' EC00' F000'        	call	___xxtofl
  7273  01D0' C00A' F018'        	movff	?___xxtofl,___flge@ff1
  7274  01D4' C00B' F019'        	movff	?___xxtofl+1,___flge@ff1+1
  7275  01D8' C00C' F01A'        	movff	?___xxtofl+2,___flge@ff1+2
  7276  01DC' C00D' F01B'        	movff	?___xxtofl+3,___flge@ff1+3
  7277  01E0' C017' F01C'        	movff	turnleft@delay,___flge@ff2
  7278  01E4' C018' F01D'        	movff	turnleft@delay+1,___flge@ff2+1
  7279  01E8' C019' F01E'        	movff	turnleft@delay+2,___flge@ff2+2
  7280  01EC' C01A' F01F'        	movff	turnleft@delay+3,___flge@ff2+3
  7281  01F0' EC00' F000'        	call	___flge	;wreg free
  7282  01F4' A0D8               	btfss	status,0,c
  7283  01F6' EF00' F000'        	goto	u5801
  7284  01FA' EF00' F000'        	goto	u5800
  7285  01FE'                    u5801:
  7286  01FE' EF00' F000'        	goto	l5157
  7287  0202'                    u5800:
  7288  0202'                    
  7289                           ;DC_motors.c: 178:     LATFbits.LATF0 = 0;
  7290  0202' 907E               	bcf	126,0,c	;volatile
  7291  0204' 0012               	return		;funcret
  7292  0206'                    __end_of_turnleft:
  7293                           	callstack 0
  7294                           
  7295 ;; *************** function ___xxtofl *****************
  7296 ;; Defined at:
  7297 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  sign            1    wreg     unsigned char 
  7300 ;;  val             4   10[COMRAM] long 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  sign            1   18[COMRAM] unsigned char 
  7303 ;;  arg             4   20[COMRAM] unsigned long 
  7304 ;;  exp             1   19[COMRAM] unsigned char 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  4   10[COMRAM] unsigned char 
  7307 ;; Registers used:
  7308 ;;		wreg, status,2, status,0
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;Total ram usage:       14 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; Hardware stack levels required when called: 7
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_colourcards_normaliseRGBC
  7325 ;;		_turnleft
  7326 ;;		_turnright
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text42
  7331  0000'                    __ptext42:
  7332                           	callstack 0
  7333  0000'                    ___xxtofl:
  7334                           	callstack 20
  7335                           
  7336                           ;incstack = 0
  7337                           ;___xxtofl@sign stored from wreg
  7338  0000' 6E00'              	movwf	___xxtofl@sign^0,c
  7339  0002' 5000'              	movf	___xxtofl@sign^0,w,c
  7340  0004' B4D8               	btfsc	status,2,c
  7341  0006' EF00' F000'        	goto	u3851
  7342  000A' EF00' F000'        	goto	u3850
  7343  000E'                    u3851:
  7344  000E' EF00' F000'        	goto	l1500
  7345  0012'                    u3850:
  7346  0012' BE00'              	btfsc	(___xxtofl@val+3)^0,7,c
  7347  0014' EF00' F000'        	goto	u3860
  7348  0018' EF00' F000'        	goto	u3861
  7349  001C'                    u3861:
  7350  001C' EF00' F000'        	goto	l1500
  7351  0020'                    u3860:
  7352  0020' C00A' F00E'        	movff	___xxtofl@val,??___xxtofl
  7353  0024' C00B' F00F'        	movff	___xxtofl@val+1,??___xxtofl+1
  7354  0028' C00C' F010'        	movff	___xxtofl@val+2,??___xxtofl+2
  7355  002C' C00D' F011'        	movff	___xxtofl@val+3,??___xxtofl+3
  7356  0030' 1E00'              	comf	??___xxtofl^0,f,c
  7357  0032' 1E00'              	comf	(??___xxtofl+1)^0,f,c
  7358  0034' 1E00'              	comf	(??___xxtofl+2)^0,f,c
  7359  0036' 1E00'              	comf	(??___xxtofl+3)^0,f,c
  7360  0038' 2A00'              	incf	??___xxtofl^0,f,c
  7361  003A' 0E00               	movlw	0
  7362  003C' 2200'              	addwfc	(??___xxtofl+1)^0,f,c
  7363  003E' 2200'              	addwfc	(??___xxtofl+2)^0,f,c
  7364  0040' 2200'              	addwfc	(??___xxtofl+3)^0,f,c
  7365  0042' C00E' F014'        	movff	??___xxtofl,___xxtofl@arg
  7366  0046' C00F' F015'        	movff	??___xxtofl+1,___xxtofl@arg+1
  7367  004A' C010' F016'        	movff	??___xxtofl+2,___xxtofl@arg+2
  7368  004E' C011' F017'        	movff	??___xxtofl+3,___xxtofl@arg+3
  7369  0052' EF00' F000'        	goto	l3913
  7370  0056'                    l1500:
  7371  0056' C00A' F014'        	movff	___xxtofl@val,___xxtofl@arg
  7372  005A' C00B' F015'        	movff	___xxtofl@val+1,___xxtofl@arg+1
  7373  005E' C00C' F016'        	movff	___xxtofl@val+2,___xxtofl@arg+2
  7374  0062' C00D' F017'        	movff	___xxtofl@val+3,___xxtofl@arg+3
  7375  0066'                    l3913:
  7376  0066' 5000'              	movf	___xxtofl@val^0,w,c
  7377  0068' 1000'              	iorwf	(___xxtofl@val+1)^0,w,c
  7378  006A' 1000'              	iorwf	(___xxtofl@val+2)^0,w,c
  7379  006C' 1000'              	iorwf	(___xxtofl@val+3)^0,w,c
  7380  006E' A4D8               	btfss	status,2,c
  7381  0070' EF00' F000'        	goto	u3871
  7382  0074' EF00' F000'        	goto	u3870
  7383  0078'                    u3871:
  7384  0078' EF00' F000'        	goto	l3919
  7385  007C'                    u3870:
  7386  007C' 0E00               	movlw	0
  7387  007E' 6E00'              	movwf	?___xxtofl^0,c
  7388  0080' 0E00               	movlw	0
  7389  0082' 6E00'              	movwf	(?___xxtofl+1)^0,c
  7390  0084' 0E00               	movlw	0
  7391  0086' 6E00'              	movwf	(?___xxtofl+2)^0,c
  7392  0088' 0E00               	movlw	0
  7393  008A' 6E00'              	movwf	(?___xxtofl+3)^0,c
  7394  008C' EF00' F000'        	goto	l1503
  7395  0090'                    l3919:
  7396  0090' 0E96               	movlw	150
  7397  0092' 6E00'              	movwf	___xxtofl@exp^0,c
  7398  0094' EF00' F000'        	goto	l3923
  7399  0098'                    l3921:
  7400  0098' 2A00'              	incf	___xxtofl@exp^0,f,c
  7401  009A' 90D8               	bcf	status,0,c
  7402  009C' 3200'              	rrcf	(___xxtofl@arg+3)^0,f,c
  7403  009E' 3200'              	rrcf	(___xxtofl@arg+2)^0,f,c
  7404  00A0' 3200'              	rrcf	(___xxtofl@arg+1)^0,f,c
  7405  00A2' 3200'              	rrcf	___xxtofl@arg^0,f,c
  7406  00A4'                    l3923:
  7407  00A4' 0E00               	movlw	0
  7408  00A6' 1400'              	andwf	___xxtofl@arg^0,w,c
  7409  00A8' 6E00'              	movwf	??___xxtofl^0,c
  7410  00AA' 0E00               	movlw	0
  7411  00AC' 1400'              	andwf	(___xxtofl@arg+1)^0,w,c
  7412  00AE' 6E00'              	movwf	(??___xxtofl+1)^0,c
  7413  00B0' 0E00               	movlw	0
  7414  00B2' 1400'              	andwf	(___xxtofl@arg+2)^0,w,c
  7415  00B4' 6E00'              	movwf	(??___xxtofl+2)^0,c
  7416  00B6' 0EFE               	movlw	254
  7417  00B8' 1400'              	andwf	(___xxtofl@arg+3)^0,w,c
  7418  00BA' 6E00'              	movwf	(??___xxtofl+3)^0,c
  7419  00BC' 5000'              	movf	??___xxtofl^0,w,c
  7420  00BE' 1000'              	iorwf	(??___xxtofl+1)^0,w,c
  7421  00C0' 1000'              	iorwf	(??___xxtofl+2)^0,w,c
  7422  00C2' 1000'              	iorwf	(??___xxtofl+3)^0,w,c
  7423  00C4' A4D8               	btfss	status,2,c
  7424  00C6' EF00' F000'        	goto	u3881
  7425  00CA' EF00' F000'        	goto	u3880
  7426  00CE'                    u3881:
  7427  00CE' EF00' F000'        	goto	l3921
  7428  00D2'                    u3880:
  7429  00D2' EF00' F000'        	goto	l1507
  7430  00D6'                    l3925:
  7431  00D6' 2A00'              	incf	___xxtofl@exp^0,f,c
  7432  00D8' 0E01               	movlw	1
  7433  00DA' 2600'              	addwf	___xxtofl@arg^0,f,c
  7434  00DC' 0E00               	movlw	0
  7435  00DE' 2200'              	addwfc	(___xxtofl@arg+1)^0,f,c
  7436  00E0' 2200'              	addwfc	(___xxtofl@arg+2)^0,f,c
  7437  00E2' 2200'              	addwfc	(___xxtofl@arg+3)^0,f,c
  7438  00E4' 90D8               	bcf	status,0,c
  7439  00E6' 3200'              	rrcf	(___xxtofl@arg+3)^0,f,c
  7440  00E8' 3200'              	rrcf	(___xxtofl@arg+2)^0,f,c
  7441  00EA' 3200'              	rrcf	(___xxtofl@arg+1)^0,f,c
  7442  00EC' 3200'              	rrcf	___xxtofl@arg^0,f,c
  7443  00EE'                    l1507:
  7444  00EE' 0E00               	movlw	0
  7445  00F0' 1400'              	andwf	___xxtofl@arg^0,w,c
  7446  00F2' 6E00'              	movwf	??___xxtofl^0,c
  7447  00F4' 0E00               	movlw	0
  7448  00F6' 1400'              	andwf	(___xxtofl@arg+1)^0,w,c
  7449  00F8' 6E00'              	movwf	(??___xxtofl+1)^0,c
  7450  00FA' 0E00               	movlw	0
  7451  00FC' 1400'              	andwf	(___xxtofl@arg+2)^0,w,c
  7452  00FE' 6E00'              	movwf	(??___xxtofl+2)^0,c
  7453  0100' 0EFF               	movlw	255
  7454  0102' 1400'              	andwf	(___xxtofl@arg+3)^0,w,c
  7455  0104' 6E00'              	movwf	(??___xxtofl+3)^0,c
  7456  0106' 5000'              	movf	??___xxtofl^0,w,c
  7457  0108' 1000'              	iorwf	(??___xxtofl+1)^0,w,c
  7458  010A' 1000'              	iorwf	(??___xxtofl+2)^0,w,c
  7459  010C' 1000'              	iorwf	(??___xxtofl+3)^0,w,c
  7460  010E' A4D8               	btfss	status,2,c
  7461  0110' EF00' F000'        	goto	u3891
  7462  0114' EF00' F000'        	goto	u3890
  7463  0118'                    u3891:
  7464  0118' EF00' F000'        	goto	l3925
  7465  011C'                    u3890:
  7466  011C' EF00' F000'        	goto	l3933
  7467  0120'                    l3931:
  7468  0120' 0600'              	decf	___xxtofl@exp^0,f,c
  7469  0122' 90D8               	bcf	status,0,c
  7470  0124' 3600'              	rlcf	___xxtofl@arg^0,f,c
  7471  0126' 3600'              	rlcf	(___xxtofl@arg+1)^0,f,c
  7472  0128' 3600'              	rlcf	(___xxtofl@arg+2)^0,f,c
  7473  012A' 3600'              	rlcf	(___xxtofl@arg+3)^0,f,c
  7474  012C'                    l3933:
  7475  012C' BE00'              	btfsc	(___xxtofl@arg+2)^0,7,c
  7476  012E' EF00' F000'        	goto	u3901
  7477  0132' EF00' F000'        	goto	u3900
  7478  0136'                    u3901:
  7479  0136' EF00' F000'        	goto	l1514
  7480  013A'                    u3900:
  7481  013A' 0E02               	movlw	2
  7482  013C' 6000'              	cpfslt	___xxtofl@exp^0,c
  7483  013E' EF00' F000'        	goto	u3911
  7484  0142' EF00' F000'        	goto	u3910
  7485  0146'                    u3911:
  7486  0146' EF00' F000'        	goto	l3931
  7487  014A'                    u3910:
  7488  014A'                    l1514:
  7489  014A' B000'              	btfsc	___xxtofl@exp^0,0,c
  7490  014C' EF00' F000'        	goto	u3921
  7491  0150' EF00' F000'        	goto	u3920
  7492  0154'                    u3921:
  7493  0154' EF00' F000'        	goto	l3939
  7494  0158'                    u3920:
  7495  0158' 9E00'              	bcf	(___xxtofl@arg+2)^0,7,c
  7496  015A'                    l3939:
  7497  015A' 90D8               	bcf	status,0,c
  7498  015C' 3200'              	rrcf	___xxtofl@exp^0,f,c
  7499  015E' C013' F00E'        	movff	___xxtofl@exp,??___xxtofl
  7500  0162' 6A00'              	clrf	(??___xxtofl+1)^0,c
  7501  0164' 6A00'              	clrf	(??___xxtofl+2)^0,c
  7502  0166' 6A00'              	clrf	(??___xxtofl+3)^0,c
  7503  0168' C00E' F011'        	movff	??___xxtofl,??___xxtofl+3
  7504  016C' 6A00'              	clrf	(??___xxtofl+2)^0,c
  7505  016E' 6A00'              	clrf	(??___xxtofl+1)^0,c
  7506  0170' 6A00'              	clrf	??___xxtofl^0,c
  7507  0172' 5000'              	movf	??___xxtofl^0,w,c
  7508  0174' 1200'              	iorwf	___xxtofl@arg^0,f,c
  7509  0176' 5000'              	movf	(??___xxtofl+1)^0,w,c
  7510  0178' 1200'              	iorwf	(___xxtofl@arg+1)^0,f,c
  7511  017A' 5000'              	movf	(??___xxtofl+2)^0,w,c
  7512  017C' 1200'              	iorwf	(___xxtofl@arg+2)^0,f,c
  7513  017E' 5000'              	movf	(??___xxtofl+3)^0,w,c
  7514  0180' 1200'              	iorwf	(___xxtofl@arg+3)^0,f,c
  7515  0182' 5000'              	movf	___xxtofl@sign^0,w,c
  7516  0184' B4D8               	btfsc	status,2,c
  7517  0186' EF00' F000'        	goto	u3931
  7518  018A' EF00' F000'        	goto	u3930
  7519  018E'                    u3931:
  7520  018E' EF00' F000'        	goto	l3949
  7521  0192'                    u3930:
  7522  0192' BE00'              	btfsc	(___xxtofl@val+3)^0,7,c
  7523  0194' EF00' F000'        	goto	u3940
  7524  0198' EF00' F000'        	goto	u3941
  7525  019C'                    u3941:
  7526  019C' EF00' F000'        	goto	l3949
  7527  01A0'                    u3940:
  7528  01A0' 8E00'              	bsf	(___xxtofl@arg+3)^0,7,c
  7529  01A2'                    l3949:
  7530  01A2' C014' F00A'        	movff	___xxtofl@arg,?___xxtofl
  7531  01A6' C015' F00B'        	movff	___xxtofl@arg+1,?___xxtofl+1
  7532  01AA' C016' F00C'        	movff	___xxtofl@arg+2,?___xxtofl+2
  7533  01AE' C017' F00D'        	movff	___xxtofl@arg+3,?___xxtofl+3
  7534  01B2'                    l1503:
  7535  01B2' 0012               	return		;funcret
  7536  01B4'                    __end_of___xxtofl:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function ___flmul *****************
  7540 ;; Defined at:
  7541 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  b               4   24[COMRAM] unsigned char 
  7544 ;;  a               4   28[COMRAM] unsigned char 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  prod            4   43[COMRAM] struct .
  7547 ;;  grs             4   37[COMRAM] unsigned long 
  7548 ;;  temp            2   47[COMRAM] struct .
  7549 ;;  bexp            1   42[COMRAM] unsigned char 
  7550 ;;  aexp            1   41[COMRAM] unsigned char 
  7551 ;;  sign            1   36[COMRAM] unsigned char 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  4   24[COMRAM] unsigned char 
  7554 ;; Registers used:
  7555 ;;		wreg, status,2, status,0, prodl, prodh
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7561 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;Total ram usage:       25 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; Hardware stack levels required when called: 7
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_turnleft
  7572 ;;		_turnright
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text43
  7577  0000'                    __ptext43:
  7578                           	callstack 0
  7579  0000'                    ___flmul:
  7580                           	callstack 20
  7581  0000' 5000'              	movf	(___flmul@b+3)^0,w,c
  7582  0002' 0B80               	andlw	128
  7583  0004' 6E00'              	movwf	___flmul@sign^0,c
  7584  0006' 5000'              	movf	(___flmul@b+3)^0,w,c
  7585  0008' 2400'              	addwf	(___flmul@b+3)^0,w,c
  7586  000A' 6E00'              	movwf	___flmul@bexp^0,c
  7587  000C' AE00'              	btfss	(___flmul@b+2)^0,7,c
  7588  000E' EF00' F000'        	goto	u3611
  7589  0012' EF00' F000'        	goto	u3610
  7590  0016'                    u3611:
  7591  0016' EF00' F000'        	goto	l3761
  7592  001A'                    u3610:
  7593  001A' 8000'              	bsf	___flmul@bexp^0,0,c
  7594  001C'                    l3761:
  7595  001C' 5000'              	movf	___flmul@bexp^0,w,c
  7596  001E' B4D8               	btfsc	status,2,c
  7597  0020' EF00' F000'        	goto	u3621
  7598  0024' EF00' F000'        	goto	u3620
  7599  0028'                    u3621:
  7600  0028' EF00' F000'        	goto	l3769
  7601  002C'                    u3620:
  7602  002C' 2800'              	incf	___flmul@bexp^0,w,c
  7603  002E' A4D8               	btfss	status,2,c
  7604  0030' EF00' F000'        	goto	u3631
  7605  0034' EF00' F000'        	goto	u3630
  7606  0038'                    u3631:
  7607  0038' EF00' F000'        	goto	l3767
  7608  003C'                    u3630:
  7609  003C' 0E00               	movlw	0
  7610  003E' 6E00'              	movwf	___flmul@b^0,c
  7611  0040' 0E00               	movlw	0
  7612  0042' 6E00'              	movwf	(___flmul@b+1)^0,c
  7613  0044' 0E00               	movlw	0
  7614  0046' 6E00'              	movwf	(___flmul@b+2)^0,c
  7615  0048' 0E00               	movlw	0
  7616  004A' 6E00'              	movwf	(___flmul@b+3)^0,c
  7617  004C'                    l3767:
  7618  004C' 8E00'              	bsf	(___flmul@b+2)^0,7,c
  7619  004E' EF00' F000'        	goto	l3771
  7620  0052'                    l3769:
  7621  0052' 0E00               	movlw	0
  7622  0054' 6E00'              	movwf	___flmul@b^0,c
  7623  0056' 0E00               	movlw	0
  7624  0058' 6E00'              	movwf	(___flmul@b+1)^0,c
  7625  005A' 0E00               	movlw	0
  7626  005C' 6E00'              	movwf	(___flmul@b+2)^0,c
  7627  005E' 0E00               	movlw	0
  7628  0060' 6E00'              	movwf	(___flmul@b+3)^0,c
  7629  0062'                    l3771:
  7630  0062' 5000'              	movf	(___flmul@a+3)^0,w,c
  7631  0064' 0B80               	andlw	128
  7632  0066' 1A00'              	xorwf	___flmul@sign^0,f,c
  7633  0068' 5000'              	movf	(___flmul@a+3)^0,w,c
  7634  006A' 2400'              	addwf	(___flmul@a+3)^0,w,c
  7635  006C' 6E00'              	movwf	___flmul@aexp^0,c
  7636  006E' AE00'              	btfss	(___flmul@a+2)^0,7,c
  7637  0070' EF00' F000'        	goto	u3641
  7638  0074' EF00' F000'        	goto	u3640
  7639  0078'                    u3641:
  7640  0078' EF00' F000'        	goto	l3779
  7641  007C'                    u3640:
  7642  007C' 8000'              	bsf	___flmul@aexp^0,0,c
  7643  007E'                    l3779:
  7644  007E' 5000'              	movf	___flmul@aexp^0,w,c
  7645  0080' B4D8               	btfsc	status,2,c
  7646  0082' EF00' F000'        	goto	u3651
  7647  0086' EF00' F000'        	goto	u3650
  7648  008A'                    u3651:
  7649  008A' EF00' F000'        	goto	l3787
  7650  008E'                    u3650:
  7651  008E' 2800'              	incf	___flmul@aexp^0,w,c
  7652  0090' A4D8               	btfss	status,2,c
  7653  0092' EF00' F000'        	goto	u3661
  7654  0096' EF00' F000'        	goto	u3660
  7655  009A'                    u3661:
  7656  009A' EF00' F000'        	goto	l3785
  7657  009E'                    u3660:
  7658  009E' 0E00               	movlw	0
  7659  00A0' 6E00'              	movwf	___flmul@a^0,c
  7660  00A2' 0E00               	movlw	0
  7661  00A4' 6E00'              	movwf	(___flmul@a+1)^0,c
  7662  00A6' 0E00               	movlw	0
  7663  00A8' 6E00'              	movwf	(___flmul@a+2)^0,c
  7664  00AA' 0E00               	movlw	0
  7665  00AC' 6E00'              	movwf	(___flmul@a+3)^0,c
  7666  00AE'                    l3785:
  7667  00AE' 8E00'              	bsf	(___flmul@a+2)^0,7,c
  7668  00B0' EF00' F000'        	goto	l1459
  7669  00B4'                    l3787:
  7670  00B4' 0E00               	movlw	0
  7671  00B6' 6E00'              	movwf	___flmul@a^0,c
  7672  00B8' 0E00               	movlw	0
  7673  00BA' 6E00'              	movwf	(___flmul@a+1)^0,c
  7674  00BC' 0E00               	movlw	0
  7675  00BE' 6E00'              	movwf	(___flmul@a+2)^0,c
  7676  00C0' 0E00               	movlw	0
  7677  00C2' 6E00'              	movwf	(___flmul@a+3)^0,c
  7678  00C4'                    l1459:
  7679  00C4' 5000'              	movf	___flmul@aexp^0,w,c
  7680  00C6' B4D8               	btfsc	status,2,c
  7681  00C8' EF00' F000'        	goto	u3671
  7682  00CC' EF00' F000'        	goto	u3670
  7683  00D0'                    u3671:
  7684  00D0' EF00' F000'        	goto	l3791
  7685  00D4'                    u3670:
  7686  00D4' 5000'              	movf	___flmul@bexp^0,w,c
  7687  00D6' A4D8               	btfss	status,2,c
  7688  00D8' EF00' F000'        	goto	u3681
  7689  00DC' EF00' F000'        	goto	u3680
  7690  00E0'                    u3681:
  7691  00E0' EF00' F000'        	goto	l3795
  7692  00E4'                    u3680:
  7693  00E4'                    l3791:
  7694  00E4' 0E00               	movlw	0
  7695  00E6' 6E00'              	movwf	?___flmul^0,c
  7696  00E8' 0E00               	movlw	0
  7697  00EA' 6E00'              	movwf	(?___flmul+1)^0,c
  7698  00EC' 0E00               	movlw	0
  7699  00EE' 6E00'              	movwf	(?___flmul+2)^0,c
  7700  00F0' 0E00               	movlw	0
  7701  00F2' 6E00'              	movwf	(?___flmul+3)^0,c
  7702  00F4' EF00' F000'        	goto	l1463
  7703  00F8'                    l3795:
  7704  00F8' 5000'              	movf	(___flmul@a+2)^0,w,c
  7705  00FA' 0200'              	mulwf	___flmul@b^0,c
  7706  00FC' CFF3 F02F'         	movff	prodl,___flmul@temp
  7707  0100' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7708  0104' 5000'              	movf	___flmul@temp^0,w,c
  7709  0106' 6E00'              	movwf	___flmul@grs^0,c
  7710  0108' 6A00'              	clrf	(___flmul@grs+1)^0,c
  7711  010A' 6A00'              	clrf	(___flmul@grs+2)^0,c
  7712  010C' 6A00'              	clrf	(___flmul@grs+3)^0,c
  7713  010E' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7714  0110' 6E00'              	movwf	___flmul@prod^0,c
  7715  0112' 6A00'              	clrf	(___flmul@prod+1)^0,c
  7716  0114' 6A00'              	clrf	(___flmul@prod+2)^0,c
  7717  0116' 6A00'              	clrf	(___flmul@prod+3)^0,c
  7718  0118' 5000'              	movf	(___flmul@a+1)^0,w,c
  7719  011A' 0200'              	mulwf	(___flmul@b+1)^0,c
  7720  011C' CFF3 F02F'         	movff	prodl,___flmul@temp
  7721  0120' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7722  0124' 5000'              	movf	___flmul@temp^0,w,c
  7723  0126' 2600'              	addwf	___flmul@grs^0,f,c
  7724  0128' 0E00               	movlw	0
  7725  012A' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  7726  012C' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  7727  012E' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  7728  0130' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7729  0132' 2600'              	addwf	___flmul@prod^0,f,c
  7730  0134' 0E00               	movlw	0
  7731  0136' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  7732  0138' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  7733  013A' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  7734  013C' 5000'              	movf	___flmul@a^0,w,c
  7735  013E' 0200'              	mulwf	(___flmul@b+2)^0,c
  7736  0140' CFF3 F02F'         	movff	prodl,___flmul@temp
  7737  0144' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7738  0148' 5000'              	movf	___flmul@temp^0,w,c
  7739  014A' 2600'              	addwf	___flmul@grs^0,f,c
  7740  014C' 0E00               	movlw	0
  7741  014E' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  7742  0150' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  7743  0152' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  7744  0154' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7745  0156' 2600'              	addwf	___flmul@prod^0,f,c
  7746  0158' 0E00               	movlw	0
  7747  015A' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  7748  015C' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  7749  015E' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  7750  0160' C027' F028'        	movff	___flmul@grs+2,___flmul@grs+3
  7751  0164' C026' F027'        	movff	___flmul@grs+1,___flmul@grs+2
  7752  0168' C025' F026'        	movff	___flmul@grs,___flmul@grs+1
  7753  016C' 6A00'              	clrf	___flmul@grs^0,c
  7754  016E' 5000'              	movf	___flmul@a^0,w,c
  7755  0170' 0200'              	mulwf	(___flmul@b+1)^0,c
  7756  0172' CFF3 F02F'         	movff	prodl,___flmul@temp
  7757  0176' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7758  017A' 5000'              	movf	___flmul@temp^0,w,c
  7759  017C' 2600'              	addwf	___flmul@grs^0,f,c
  7760  017E' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7761  0180' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  7762  0182' 0E00               	movlw	0
  7763  0184' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  7764  0186' 0E00               	movlw	0
  7765  0188' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  7766  018A' 5000'              	movf	(___flmul@a+1)^0,w,c
  7767  018C' 0200'              	mulwf	___flmul@b^0,c
  7768  018E' CFF3 F02F'         	movff	prodl,___flmul@temp
  7769  0192' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7770  0196' 5000'              	movf	___flmul@temp^0,w,c
  7771  0198' 2600'              	addwf	___flmul@grs^0,f,c
  7772  019A' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7773  019C' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  7774  019E' 0E00               	movlw	0
  7775  01A0' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  7776  01A2' 0E00               	movlw	0
  7777  01A4' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  7778  01A6' C027' F028'        	movff	___flmul@grs+2,___flmul@grs+3
  7779  01AA' C026' F027'        	movff	___flmul@grs+1,___flmul@grs+2
  7780  01AE' C025' F026'        	movff	___flmul@grs,___flmul@grs+1
  7781  01B2' 6A00'              	clrf	___flmul@grs^0,c
  7782  01B4' 5000'              	movf	___flmul@a^0,w,c
  7783  01B6' 0200'              	mulwf	___flmul@b^0,c
  7784  01B8' CFF3 F02F'         	movff	prodl,___flmul@temp
  7785  01BC' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7786  01C0' 5000'              	movf	___flmul@temp^0,w,c
  7787  01C2' 2600'              	addwf	___flmul@grs^0,f,c
  7788  01C4' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7789  01C6' 2200'              	addwfc	(___flmul@grs+1)^0,f,c
  7790  01C8' 0E00               	movlw	0
  7791  01CA' 2200'              	addwfc	(___flmul@grs+2)^0,f,c
  7792  01CC' 0E00               	movlw	0
  7793  01CE' 2200'              	addwfc	(___flmul@grs+3)^0,f,c
  7794  01D0' 5000'              	movf	(___flmul@a+2)^0,w,c
  7795  01D2' 0200'              	mulwf	(___flmul@b+1)^0,c
  7796  01D4' CFF3 F02F'         	movff	prodl,___flmul@temp
  7797  01D8' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7798  01DC' 5000'              	movf	___flmul@temp^0,w,c
  7799  01DE' 2600'              	addwf	___flmul@prod^0,f,c
  7800  01E0' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7801  01E2' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  7802  01E4' 0E00               	movlw	0
  7803  01E6' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  7804  01E8' 0E00               	movlw	0
  7805  01EA' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  7806  01EC' 5000'              	movf	(___flmul@a+1)^0,w,c
  7807  01EE' 0200'              	mulwf	(___flmul@b+2)^0,c
  7808  01F0' CFF3 F02F'         	movff	prodl,___flmul@temp
  7809  01F4' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7810  01F8' 5000'              	movf	___flmul@temp^0,w,c
  7811  01FA' 2600'              	addwf	___flmul@prod^0,f,c
  7812  01FC' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7813  01FE' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  7814  0200' 0E00               	movlw	0
  7815  0202' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  7816  0204' 0E00               	movlw	0
  7817  0206' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  7818  0208' 5000'              	movf	(___flmul@a+2)^0,w,c
  7819  020A' 0200'              	mulwf	(___flmul@b+2)^0,c
  7820  020C' CFF3 F02F'         	movff	prodl,___flmul@temp
  7821  0210' CFF4 F030'         	movff	prodh,___flmul@temp+1
  7822  0214' 5000'              	movf	___flmul@temp^0,w,c
  7823  0216' 6E00'              	movwf	??___flmul^0,c
  7824  0218' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7825  021A' 6E00'              	movwf	(??___flmul+1)^0,c
  7826  021C' 6A00'              	clrf	(??___flmul+2)^0,c
  7827  021E' 6A00'              	clrf	(??___flmul+3)^0,c
  7828  0220' C022' F023'        	movff	??___flmul+2,??___flmul+3
  7829  0224' C021' F022'        	movff	??___flmul+1,??___flmul+2
  7830  0228' C020' F021'        	movff	??___flmul,??___flmul+1
  7831  022C' 6A00'              	clrf	??___flmul^0,c
  7832  022E' 5000'              	movf	??___flmul^0,w,c
  7833  0230' 2600'              	addwf	___flmul@prod^0,f,c
  7834  0232' 5000'              	movf	(??___flmul+1)^0,w,c
  7835  0234' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  7836  0236' 5000'              	movf	(??___flmul+2)^0,w,c
  7837  0238' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  7838  023A' 5000'              	movf	(??___flmul+3)^0,w,c
  7839  023C' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  7840  023E' C025' F020'        	movff	___flmul@grs,??___flmul
  7841  0242' C026' F021'        	movff	___flmul@grs+1,??___flmul+1
  7842  0246' C027' F022'        	movff	___flmul@grs+2,??___flmul+2
  7843  024A' C028' F023'        	movff	___flmul@grs+3,??___flmul+3
  7844  024E' 0E19               	movlw	25
  7845  0250' EF00' F000'        	goto	u3690
  7846  0254'                    u3695:
  7847  0254' 90D8               	bcf	status,0,c
  7848  0256' 3200'              	rrcf	(??___flmul+3)^0,f,c
  7849  0258' 3200'              	rrcf	(??___flmul+2)^0,f,c
  7850  025A' 3200'              	rrcf	(??___flmul+1)^0,f,c
  7851  025C' 3200'              	rrcf	??___flmul^0,f,c
  7852  025E'                    u3690:
  7853  025E' 2EE8               	decfsz	wreg,f,c
  7854  0260' EF00' F000'        	goto	u3695
  7855  0264' 5000'              	movf	??___flmul^0,w,c
  7856  0266' 2600'              	addwf	___flmul@prod^0,f,c
  7857  0268' 5000'              	movf	(??___flmul+1)^0,w,c
  7858  026A' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  7859  026C' 5000'              	movf	(??___flmul+2)^0,w,c
  7860  026E' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  7861  0270' 5000'              	movf	(??___flmul+3)^0,w,c
  7862  0272' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  7863  0274' C027' F028'        	movff	___flmul@grs+2,___flmul@grs+3
  7864  0278' C026' F027'        	movff	___flmul@grs+1,___flmul@grs+2
  7865  027C' C025' F026'        	movff	___flmul@grs,___flmul@grs+1
  7866  0280' 6A00'              	clrf	___flmul@grs^0,c
  7867  0282' 5000'              	movf	___flmul@aexp^0,w,c
  7868  0284' C02A' F020'        	movff	___flmul@bexp,??___flmul
  7869  0288' 6A00'              	clrf	(??___flmul+1)^0,c
  7870  028A' 2600'              	addwf	??___flmul^0,f,c
  7871  028C' 0E00               	movlw	0
  7872  028E' 2200'              	addwfc	(??___flmul+1)^0,f,c
  7873  0290' 0E82               	movlw	130
  7874  0292' 2400'              	addwf	??___flmul^0,w,c
  7875  0294' 6E00'              	movwf	___flmul@temp^0,c
  7876  0296' 0EFF               	movlw	255
  7877  0298' 2000'              	addwfc	(??___flmul+1)^0,w,c
  7878  029A' 6E00'              	movwf	(___flmul@temp+1)^0,c
  7879  029C' EF00' F000'        	goto	l3843
  7880  02A0'                    l3837:
  7881  02A0' 90D8               	bcf	status,0,c
  7882  02A2' 3600'              	rlcf	___flmul@prod^0,f,c
  7883  02A4' 3600'              	rlcf	(___flmul@prod+1)^0,f,c
  7884  02A6' 3600'              	rlcf	(___flmul@prod+2)^0,f,c
  7885  02A8' 3600'              	rlcf	(___flmul@prod+3)^0,f,c
  7886  02AA' AE00'              	btfss	(___flmul@grs+3)^0,7,c
  7887  02AC' EF00' F000'        	goto	u3701
  7888  02B0' EF00' F000'        	goto	u3700
  7889  02B4'                    u3701:
  7890  02B4' EF00' F000'        	goto	l1466
  7891  02B8'                    u3700:
  7892  02B8' 8000'              	bsf	___flmul@prod^0,0,c
  7893  02BA'                    l1466:
  7894  02BA' 90D8               	bcf	status,0,c
  7895  02BC' 3600'              	rlcf	___flmul@grs^0,f,c
  7896  02BE' 3600'              	rlcf	(___flmul@grs+1)^0,f,c
  7897  02C0' 3600'              	rlcf	(___flmul@grs+2)^0,f,c
  7898  02C2' 3600'              	rlcf	(___flmul@grs+3)^0,f,c
  7899  02C4' 0600'              	decf	___flmul@temp^0,f,c
  7900  02C6' A0D8               	btfss	status,0,c
  7901  02C8' 0600'              	decf	(___flmul@temp+1)^0,f,c
  7902  02CA'                    l3843:
  7903  02CA' AE00'              	btfss	(___flmul@prod+2)^0,7,c
  7904  02CC' EF00' F000'        	goto	u3711
  7905  02D0' EF00' F000'        	goto	u3710
  7906  02D4'                    u3711:
  7907  02D4' EF00' F000'        	goto	l3837
  7908  02D8'                    u3710:
  7909  02D8' 0E00               	movlw	0
  7910  02DA' 6E00'              	movwf	___flmul@aexp^0,c
  7911  02DC' AE00'              	btfss	(___flmul@grs+3)^0,7,c
  7912  02DE' EF00' F000'        	goto	u3721
  7913  02E2' EF00' F000'        	goto	u3720
  7914  02E6'                    u3721:
  7915  02E6' EF00' F000'        	goto	l1468
  7916  02EA'                    u3720:
  7917  02EA' 0EFF               	movlw	255
  7918  02EC' 1400'              	andwf	___flmul@grs^0,w,c
  7919  02EE' 6E00'              	movwf	??___flmul^0,c
  7920  02F0' 0EFF               	movlw	255
  7921  02F2' 1400'              	andwf	(___flmul@grs+1)^0,w,c
  7922  02F4' 6E00'              	movwf	(??___flmul+1)^0,c
  7923  02F6' 0EFF               	movlw	255
  7924  02F8' 1400'              	andwf	(___flmul@grs+2)^0,w,c
  7925  02FA' 6E00'              	movwf	(??___flmul+2)^0,c
  7926  02FC' 0E7F               	movlw	127
  7927  02FE' 1400'              	andwf	(___flmul@grs+3)^0,w,c
  7928  0300' 6E00'              	movwf	(??___flmul+3)^0,c
  7929  0302' 5000'              	movf	??___flmul^0,w,c
  7930  0304' 1000'              	iorwf	(??___flmul+1)^0,w,c
  7931  0306' 1000'              	iorwf	(??___flmul+2)^0,w,c
  7932  0308' 1000'              	iorwf	(??___flmul+3)^0,w,c
  7933  030A' B4D8               	btfsc	status,2,c
  7934  030C' EF00' F000'        	goto	u3731
  7935  0310' EF00' F000'        	goto	u3730
  7936  0314'                    u3731:
  7937  0314' EF00' F000'        	goto	l1469
  7938  0318'                    u3730:
  7939  0318'                    l3851:
  7940  0318' 0E01               	movlw	1
  7941  031A' 6E00'              	movwf	___flmul@aexp^0,c
  7942  031C' EF00' F000'        	goto	l1468
  7943  0320'                    l1469:
  7944  0320' A000'              	btfss	___flmul@prod^0,0,c
  7945  0322' EF00' F000'        	goto	u3741
  7946  0326' EF00' F000'        	goto	u3740
  7947  032A'                    u3741:
  7948  032A' EF00' F000'        	goto	l1468
  7949  032E'                    u3740:
  7950  032E' EF00' F000'        	goto	l3851
  7951  0332'                    l1468:
  7952  0332' 5000'              	movf	___flmul@aexp^0,w,c
  7953  0334' B4D8               	btfsc	status,2,c
  7954  0336' EF00' F000'        	goto	u3751
  7955  033A' EF00' F000'        	goto	u3750
  7956  033E'                    u3751:
  7957  033E' EF00' F000'        	goto	l3863
  7958  0342'                    u3750:
  7959  0342' 0E01               	movlw	1
  7960  0344' 2600'              	addwf	___flmul@prod^0,f,c
  7961  0346' 0E00               	movlw	0
  7962  0348' 2200'              	addwfc	(___flmul@prod+1)^0,f,c
  7963  034A' 2200'              	addwfc	(___flmul@prod+2)^0,f,c
  7964  034C' 2200'              	addwfc	(___flmul@prod+3)^0,f,c
  7965  034E' A000'              	btfss	(___flmul@prod+3)^0,0,c
  7966  0350' EF00' F000'        	goto	u3761
  7967  0354' EF00' F000'        	goto	u3760
  7968  0358'                    u3761:
  7969  0358' EF00' F000'        	goto	l3863
  7970  035C'                    u3760:
  7971  035C' C02B' F020'        	movff	___flmul@prod,??___flmul
  7972  0360' C02C' F021'        	movff	___flmul@prod+1,??___flmul+1
  7973  0364' C02D' F022'        	movff	___flmul@prod+2,??___flmul+2
  7974  0368' C02E' F023'        	movff	___flmul@prod+3,??___flmul+3
  7975  036C' 3400'              	rlcf	(??___flmul+3)^0,w,c
  7976  036E' 3200'              	rrcf	(??___flmul+3)^0,f,c
  7977  0370' 3200'              	rrcf	(??___flmul+2)^0,f,c
  7978  0372' 3200'              	rrcf	(??___flmul+1)^0,f,c
  7979  0374' 3200'              	rrcf	??___flmul^0,f,c
  7980  0376' C020' F02B'        	movff	??___flmul,___flmul@prod
  7981  037A' C021' F02C'        	movff	??___flmul+1,___flmul@prod+1
  7982  037E' C022' F02D'        	movff	??___flmul+2,___flmul@prod+2
  7983  0382' C023' F02E'        	movff	??___flmul+3,___flmul@prod+3
  7984  0386' 4A00'              	infsnz	___flmul@temp^0,f,c
  7985  0388' 2A00'              	incf	(___flmul@temp+1)^0,f,c
  7986  038A'                    l3863:
  7987  038A' BE00'              	btfsc	(___flmul@temp+1)^0,7,c
  7988  038C' EF00' F000'        	goto	u3771
  7989  0390' 5000'              	movf	(___flmul@temp+1)^0,w,c
  7990  0392' E108               	bnz	u3770
  7991  0394' 2800'              	incf	___flmul@temp^0,w,c
  7992  0396' A0D8               	btfss	status,0,c
  7993  0398' EF00' F000'        	goto	u3771
  7994  039C' EF00' F000'        	goto	u3770
  7995  03A0'                    u3771:
  7996  03A0' EF00' F000'        	goto	l3867
  7997  03A4'                    u3770:
  7998  03A4' 0E00               	movlw	0
  7999  03A6' 6E00'              	movwf	___flmul@prod^0,c
  8000  03A8' 0E00               	movlw	0
  8001  03AA' 6E00'              	movwf	(___flmul@prod+1)^0,c
  8002  03AC' 0E80               	movlw	128
  8003  03AE' 6E00'              	movwf	(___flmul@prod+2)^0,c
  8004  03B0' 0E7F               	movlw	127
  8005  03B2' 6E00'              	movwf	(___flmul@prod+3)^0,c
  8006  03B4' EF00' F000'        	goto	l3879
  8007  03B8'                    l3867:
  8008  03B8' BE00'              	btfsc	(___flmul@temp+1)^0,7,c
  8009  03BA' EF00' F000'        	goto	u3780
  8010  03BE' 5000'              	movf	(___flmul@temp+1)^0,w,c
  8011  03C0' E106               	bnz	u3781
  8012  03C2' 0400'              	decf	___flmul@temp^0,w,c
  8013  03C4' B0D8               	btfsc	status,0,c
  8014  03C6' EF00' F000'        	goto	u3781
  8015  03CA' EF00' F000'        	goto	u3780
  8016  03CE'                    u3781:
  8017  03CE' EF00' F000'        	goto	l1476
  8018  03D2'                    u3780:
  8019  03D2' 0E00               	movlw	0
  8020  03D4' 6E00'              	movwf	___flmul@prod^0,c
  8021  03D6' 0E00               	movlw	0
  8022  03D8' 6E00'              	movwf	(___flmul@prod+1)^0,c
  8023  03DA' 0E00               	movlw	0
  8024  03DC' 6E00'              	movwf	(___flmul@prod+2)^0,c
  8025  03DE' 0E00               	movlw	0
  8026  03E0' 6E00'              	movwf	(___flmul@prod+3)^0,c
  8027  03E2' 0E00               	movlw	0
  8028  03E4' 6E00'              	movwf	___flmul@sign^0,c
  8029  03E6' EF00' F000'        	goto	l3879
  8030  03EA'                    l1476:
  8031  03EA' C02F' F02A'        	movff	___flmul@temp,___flmul@bexp
  8032  03EE' 0EFF               	movlw	255
  8033  03F0' 1600'              	andwf	___flmul@prod^0,f,c
  8034  03F2' 0EFF               	movlw	255
  8035  03F4' 1600'              	andwf	(___flmul@prod+1)^0,f,c
  8036  03F6' 0E7F               	movlw	127
  8037  03F8' 1600'              	andwf	(___flmul@prod+2)^0,f,c
  8038  03FA' 0E00               	movlw	0
  8039  03FC' 1600'              	andwf	(___flmul@prod+3)^0,f,c
  8040  03FE' A000'              	btfss	___flmul@bexp^0,0,c
  8041  0400' EF00' F000'        	goto	u3791
  8042  0404' EF00' F000'        	goto	u3790
  8043  0408'                    u3791:
  8044  0408' EF00' F000'        	goto	l3877
  8045  040C'                    u3790:
  8046  040C' 8E00'              	bsf	(___flmul@prod+2)^0,7,c
  8047  040E'                    l3877:
  8048  040E' 90D8               	bcf	status,0,c
  8049  0410' 3000'              	rrcf	___flmul@bexp^0,w,c
  8050  0412' 6E00'              	movwf	(___flmul@prod+3)^0,c
  8051  0414'                    l3879:
  8052  0414' 5000'              	movf	___flmul@sign^0,w,c
  8053  0416' 1200'              	iorwf	(___flmul@prod+3)^0,f,c
  8054  0418' C02B' F018'        	movff	___flmul@prod,?___flmul
  8055  041C' C02C' F019'        	movff	___flmul@prod+1,?___flmul+1
  8056  0420' C02D' F01A'        	movff	___flmul@prod+2,?___flmul+2
  8057  0424' C02E' F01B'        	movff	___flmul@prod+3,?___flmul+3
  8058  0428'                    l1463:
  8059  0428' 0012               	return		;funcret
  8060  042A'                    __end_of___flmul:
  8061                           	callstack 0
  8062                           
  8063 ;; *************** function ___flge *****************
  8064 ;; Defined at:
  8065 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  ff1             4   24[COMRAM] unsigned char 
  8068 ;;  ff2             4   28[COMRAM] unsigned char 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;		None               void
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8080 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8082 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8083 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8084 ;;Total ram usage:       12 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 7
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_colourcards_readRGBC
  8091 ;;		_turnleft
  8092 ;;		_turnright
  8093 ;;		_colourcards_testingRGBC2
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text44
  8098  0000'                    __ptext44:
  8099                           	callstack 0
  8100  0000'                    ___flge:
  8101                           	callstack 20
  8102  0000' 0E00               	movlw	0
  8103  0002' 1400'              	andwf	___flge@ff1^0,w,c
  8104  0004' 6E00'              	movwf	??___flge^0,c
  8105  0006' 0E00               	movlw	0
  8106  0008' 1400'              	andwf	(___flge@ff1+1)^0,w,c
  8107  000A' 6E00'              	movwf	(??___flge+1)^0,c
  8108  000C' 0E80               	movlw	128
  8109  000E' 1400'              	andwf	(___flge@ff1+2)^0,w,c
  8110  0010' 6E00'              	movwf	(??___flge+2)^0,c
  8111  0012' 0E7F               	movlw	127
  8112  0014' 1400'              	andwf	(___flge@ff1+3)^0,w,c
  8113  0016' 6E00'              	movwf	(??___flge+3)^0,c
  8114  0018' 5000'              	movf	??___flge^0,w,c
  8115  001A' 1000'              	iorwf	(??___flge+1)^0,w,c
  8116  001C' 1000'              	iorwf	(??___flge+2)^0,w,c
  8117  001E' 1000'              	iorwf	(??___flge+3)^0,w,c
  8118  0020' A4D8               	btfss	status,2,c
  8119  0022' EF00' F000'        	goto	u3801
  8120  0026' EF00' F000'        	goto	u3800
  8121  002A'                    u3801:
  8122  002A' EF00' F000'        	goto	l3889
  8123  002E'                    u3800:
  8124  002E' 0E00               	movlw	0
  8125  0030' 6E00'              	movwf	___flge@ff1^0,c
  8126  0032' 0E00               	movlw	0
  8127  0034' 6E00'              	movwf	(___flge@ff1+1)^0,c
  8128  0036' 0E00               	movlw	0
  8129  0038' 6E00'              	movwf	(___flge@ff1+2)^0,c
  8130  003A' 0E00               	movlw	0
  8131  003C' 6E00'              	movwf	(___flge@ff1+3)^0,c
  8132  003E'                    l3889:
  8133  003E' 0E00               	movlw	0
  8134  0040' 1400'              	andwf	___flge@ff2^0,w,c
  8135  0042' 6E00'              	movwf	??___flge^0,c
  8136  0044' 0E00               	movlw	0
  8137  0046' 1400'              	andwf	(___flge@ff2+1)^0,w,c
  8138  0048' 6E00'              	movwf	(??___flge+1)^0,c
  8139  004A' 0E80               	movlw	128
  8140  004C' 1400'              	andwf	(___flge@ff2+2)^0,w,c
  8141  004E' 6E00'              	movwf	(??___flge+2)^0,c
  8142  0050' 0E7F               	movlw	127
  8143  0052' 1400'              	andwf	(___flge@ff2+3)^0,w,c
  8144  0054' 6E00'              	movwf	(??___flge+3)^0,c
  8145  0056' 5000'              	movf	??___flge^0,w,c
  8146  0058' 1000'              	iorwf	(??___flge+1)^0,w,c
  8147  005A' 1000'              	iorwf	(??___flge+2)^0,w,c
  8148  005C' 1000'              	iorwf	(??___flge+3)^0,w,c
  8149  005E' A4D8               	btfss	status,2,c
  8150  0060' EF00' F000'        	goto	u3811
  8151  0064' EF00' F000'        	goto	u3810
  8152  0068'                    u3811:
  8153  0068' EF00' F000'        	goto	l3893
  8154  006C'                    u3810:
  8155  006C' 0E00               	movlw	0
  8156  006E' 6E00'              	movwf	___flge@ff2^0,c
  8157  0070' 0E00               	movlw	0
  8158  0072' 6E00'              	movwf	(___flge@ff2+1)^0,c
  8159  0074' 0E00               	movlw	0
  8160  0076' 6E00'              	movwf	(___flge@ff2+2)^0,c
  8161  0078' 0E00               	movlw	0
  8162  007A' 6E00'              	movwf	(___flge@ff2+3)^0,c
  8163  007C'                    l3893:
  8164  007C' AE00'              	btfss	(___flge@ff1+3)^0,7,c
  8165  007E' EF00' F000'        	goto	u3821
  8166  0082' EF00' F000'        	goto	u3820
  8167  0086'                    u3821:
  8168  0086' EF00' F000'        	goto	l3897
  8169  008A'                    u3820:
  8170  008A' 6C00'              	negf	___flge@ff1^0,c
  8171  008C' 1E00'              	comf	(___flge@ff1+1)^0,f,c
  8172  008E' B0D8               	btfsc	status,0,c
  8173  0090' 2A00'              	incf	(___flge@ff1+1)^0,f,c
  8174  0092' 1E00'              	comf	(___flge@ff1+2)^0,f,c
  8175  0094' B0D8               	btfsc	status,0,c
  8176  0096' 2A00'              	incf	(___flge@ff1+2)^0,f,c
  8177  0098' 0E80               	movlw	128
  8178  009A' 5600'              	subfwb	(___flge@ff1+3)^0,f,c
  8179  009C'                    l3897:
  8180  009C' AE00'              	btfss	(___flge@ff2+3)^0,7,c
  8181  009E' EF00' F000'        	goto	u3831
  8182  00A2' EF00' F000'        	goto	u3830
  8183  00A6'                    u3831:
  8184  00A6' EF00' F000'        	goto	l1110
  8185  00AA'                    u3830:
  8186  00AA' 6C00'              	negf	___flge@ff2^0,c
  8187  00AC' 1E00'              	comf	(___flge@ff2+1)^0,f,c
  8188  00AE' B0D8               	btfsc	status,0,c
  8189  00B0' 2A00'              	incf	(___flge@ff2+1)^0,f,c
  8190  00B2' 1E00'              	comf	(___flge@ff2+2)^0,f,c
  8191  00B4' B0D8               	btfsc	status,0,c
  8192  00B6' 2A00'              	incf	(___flge@ff2+2)^0,f,c
  8193  00B8' 0E80               	movlw	128
  8194  00BA' 5600'              	subfwb	(___flge@ff2+3)^0,f,c
  8195  00BC'                    l1110:
  8196  00BC' 0E00               	movlw	0
  8197  00BE' 1A00'              	xorwf	___flge@ff1^0,f,c
  8198  00C0' 0E00               	movlw	0
  8199  00C2' 1A00'              	xorwf	(___flge@ff1+1)^0,f,c
  8200  00C4' 0E00               	movlw	0
  8201  00C6' 1A00'              	xorwf	(___flge@ff1+2)^0,f,c
  8202  00C8' 0E80               	movlw	128
  8203  00CA' 1A00'              	xorwf	(___flge@ff1+3)^0,f,c
  8204  00CC' 0E00               	movlw	0
  8205  00CE' 1A00'              	xorwf	___flge@ff2^0,f,c
  8206  00D0' 0E00               	movlw	0
  8207  00D2' 1A00'              	xorwf	(___flge@ff2+1)^0,f,c
  8208  00D4' 0E00               	movlw	0
  8209  00D6' 1A00'              	xorwf	(___flge@ff2+2)^0,f,c
  8210  00D8' 0E80               	movlw	128
  8211  00DA' 1A00'              	xorwf	(___flge@ff2+3)^0,f,c
  8212  00DC' 5000'              	movf	___flge@ff2^0,w,c
  8213  00DE' 5C00'              	subwf	___flge@ff1^0,w,c
  8214  00E0' 5000'              	movf	(___flge@ff2+1)^0,w,c
  8215  00E2' 5800'              	subwfb	(___flge@ff1+1)^0,w,c
  8216  00E4' 5000'              	movf	(___flge@ff2+2)^0,w,c
  8217  00E6' 5800'              	subwfb	(___flge@ff1+2)^0,w,c
  8218  00E8' 5000'              	movf	(___flge@ff2+3)^0,w,c
  8219  00EA' 5800'              	subwfb	(___flge@ff1+3)^0,w,c
  8220  00EC' B0D8               	btfsc	status,0,c
  8221  00EE' EF00' F000'        	goto	u3841
  8222  00F2' EF00' F000'        	goto	u3840
  8223  00F6'                    u3841:
  8224  00F6' EF00' F000'        	goto	l3903
  8225  00FA'                    u3840:
  8226  00FA' 90D8               	bcf	status,0,c
  8227  00FC' EF00' F000'        	goto	l1115
  8228  0100'                    l3903:
  8229  0100' 80D8               	bsf	status,0,c
  8230  0102'                    l1115:
  8231  0102' 0012               	return		;funcret
  8232  0104'                    __end_of___flge:
  8233                           	callstack 0
  8234                           
  8235 ;; *************** function ___fldiv *****************
  8236 ;; Defined at:
  8237 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8238 ;; Parameters:    Size  Location     Type
  8239 ;;  b               4   65[COMRAM] unsigned char 
  8240 ;;  a               4   69[COMRAM] unsigned char 
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  grs             4   11[BANK0 ] unsigned long 
  8243 ;;  rem             4    4[BANK0 ] unsigned long 
  8244 ;;  new_exp         2    9[BANK0 ] short 
  8245 ;;  aexp            1   16[BANK0 ] unsigned char 
  8246 ;;  bexp            1   15[BANK0 ] unsigned char 
  8247 ;;  sign            1    8[BANK0 ] unsigned char 
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  4   65[COMRAM] unsigned char 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8257 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8258 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Totals:         8      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;Total ram usage:       25 bytes
  8262 ;; Hardware stack levels used: 1
  8263 ;; Hardware stack levels required when called: 7
  8264 ;; This function calls:
  8265 ;;		Nothing
  8266 ;; This function is called by:
  8267 ;;		_colourcards_normaliseRGBC
  8268 ;;		_turnleft
  8269 ;;		_turnright
  8270 ;; This function uses a non-reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text45
  8274  0000'                    __ptext45:
  8275                           	callstack 0
  8276  0000'                    ___fldiv:
  8277                           	callstack 20
  8278  0000' 5000'              	movf	(___fldiv@b+3)^0,w,c
  8279  0002' 0B80               	andlw	128
  8280  0004' 0100               	movlb	0	; () banked
  8281  0006' 6F00'              	movwf	___fldiv@sign& (0+255),b
  8282  0008' 5000'              	movf	(___fldiv@b+3)^0,w,c
  8283  000A' 2400'              	addwf	(___fldiv@b+3)^0,w,c
  8284  000C' 6F00'              	movwf	___fldiv@bexp& (0+255),b
  8285  000E'                    
  8286                           ; BSR set to: 0
  8287  000E' AE00'              	btfss	(___fldiv@b+2)^0,7,c
  8288  0010' EF00' F000'        	goto	u5531
  8289  0014' EF00' F000'        	goto	u5530
  8290  0018'                    u5531:
  8291  0018' EF00' F000'        	goto	l4997
  8292  001C'                    u5530:
  8293  001C'                    
  8294                           ; BSR set to: 0
  8295  001C' 8100'              	bsf	___fldiv@bexp& (0+255),0,b
  8296  001E'                    l4997:
  8297                           
  8298                           ; BSR set to: 0
  8299  001E' 5100'              	movf	___fldiv@bexp& (0+255),w,b
  8300  0020' B4D8               	btfsc	status,2,c
  8301  0022' EF00' F000'        	goto	u5541
  8302  0026' EF00' F000'        	goto	u5540
  8303  002A'                    u5541:
  8304  002A' EF00' F000'        	goto	l5007
  8305  002E'                    u5540:
  8306  002E'                    
  8307                           ; BSR set to: 0
  8308  002E' 2900'              	incf	___fldiv@bexp& (0+255),w,b
  8309  0030' A4D8               	btfss	status,2,c
  8310  0032' EF00' F000'        	goto	u5551
  8311  0036' EF00' F000'        	goto	u5550
  8312  003A'                    u5551:
  8313  003A' EF00' F000'        	goto	l5003
  8314  003E'                    u5550:
  8315  003E'                    
  8316                           ; BSR set to: 0
  8317  003E' 0E00               	movlw	0
  8318  0040' 6E00'              	movwf	___fldiv@b^0,c
  8319  0042' 0E00               	movlw	0
  8320  0044' 6E00'              	movwf	(___fldiv@b+1)^0,c
  8321  0046' 0E00               	movlw	0
  8322  0048' 6E00'              	movwf	(___fldiv@b+2)^0,c
  8323  004A' 0E00               	movlw	0
  8324  004C' 6E00'              	movwf	(___fldiv@b+3)^0,c
  8325  004E'                    l5003:
  8326                           
  8327                           ; BSR set to: 0
  8328  004E' 8E00'              	bsf	(___fldiv@b+2)^0,7,c
  8329  0050'                    
  8330                           ; BSR set to: 0
  8331  0050' 0E00               	movlw	0
  8332  0052' 6E00'              	movwf	(___fldiv@b+3)^0,c
  8333  0054' EF00' F000'        	goto	l5009
  8334  0058'                    l5007:
  8335                           
  8336                           ; BSR set to: 0
  8337  0058' 0E00               	movlw	0
  8338  005A' 6E00'              	movwf	___fldiv@b^0,c
  8339  005C' 0E00               	movlw	0
  8340  005E' 6E00'              	movwf	(___fldiv@b+1)^0,c
  8341  0060' 0E00               	movlw	0
  8342  0062' 6E00'              	movwf	(___fldiv@b+2)^0,c
  8343  0064' 0E00               	movlw	0
  8344  0066' 6E00'              	movwf	(___fldiv@b+3)^0,c
  8345  0068'                    l5009:
  8346                           
  8347                           ; BSR set to: 0
  8348  0068' 5000'              	movf	(___fldiv@a+3)^0,w,c
  8349  006A' 0B80               	andlw	128
  8350  006C' 1B00'              	xorwf	___fldiv@sign& (0+255),f,b
  8351  006E'                    
  8352                           ; BSR set to: 0
  8353  006E' 5000'              	movf	(___fldiv@a+3)^0,w,c
  8354  0070' 2400'              	addwf	(___fldiv@a+3)^0,w,c
  8355  0072' 6F00'              	movwf	___fldiv@aexp& (0+255),b
  8356  0074'                    
  8357                           ; BSR set to: 0
  8358  0074' AE00'              	btfss	(___fldiv@a+2)^0,7,c
  8359  0076' EF00' F000'        	goto	u5561
  8360  007A' EF00' F000'        	goto	u5560
  8361  007E'                    u5561:
  8362  007E' EF00' F000'        	goto	l5017
  8363  0082'                    u5560:
  8364  0082'                    
  8365                           ; BSR set to: 0
  8366  0082' 8100'              	bsf	___fldiv@aexp& (0+255),0,b
  8367  0084'                    l5017:
  8368                           
  8369                           ; BSR set to: 0
  8370  0084' 5100'              	movf	___fldiv@aexp& (0+255),w,b
  8371  0086' B4D8               	btfsc	status,2,c
  8372  0088' EF00' F000'        	goto	u5571
  8373  008C' EF00' F000'        	goto	u5570
  8374  0090'                    u5571:
  8375  0090' EF00' F000'        	goto	l5027
  8376  0094'                    u5570:
  8377  0094'                    
  8378                           ; BSR set to: 0
  8379  0094' 2900'              	incf	___fldiv@aexp& (0+255),w,b
  8380  0096' A4D8               	btfss	status,2,c
  8381  0098' EF00' F000'        	goto	u5581
  8382  009C' EF00' F000'        	goto	u5580
  8383  00A0'                    u5581:
  8384  00A0' EF00' F000'        	goto	l5023
  8385  00A4'                    u5580:
  8386  00A4'                    
  8387                           ; BSR set to: 0
  8388  00A4' 0E00               	movlw	0
  8389  00A6' 6E00'              	movwf	___fldiv@a^0,c
  8390  00A8' 0E00               	movlw	0
  8391  00AA' 6E00'              	movwf	(___fldiv@a+1)^0,c
  8392  00AC' 0E00               	movlw	0
  8393  00AE' 6E00'              	movwf	(___fldiv@a+2)^0,c
  8394  00B0' 0E00               	movlw	0
  8395  00B2' 6E00'              	movwf	(___fldiv@a+3)^0,c
  8396  00B4'                    l5023:
  8397                           
  8398                           ; BSR set to: 0
  8399  00B4' 8E00'              	bsf	(___fldiv@a+2)^0,7,c
  8400  00B6'                    
  8401                           ; BSR set to: 0
  8402  00B6' 0E00               	movlw	0
  8403  00B8' 6E00'              	movwf	(___fldiv@a+3)^0,c
  8404  00BA' EF00' F000'        	goto	l5029
  8405  00BE'                    l5027:
  8406                           
  8407                           ; BSR set to: 0
  8408  00BE' 0E00               	movlw	0
  8409  00C0' 6E00'              	movwf	___fldiv@a^0,c
  8410  00C2' 0E00               	movlw	0
  8411  00C4' 6E00'              	movwf	(___fldiv@a+1)^0,c
  8412  00C6' 0E00               	movlw	0
  8413  00C8' 6E00'              	movwf	(___fldiv@a+2)^0,c
  8414  00CA' 0E00               	movlw	0
  8415  00CC' 6E00'              	movwf	(___fldiv@a+3)^0,c
  8416  00CE'                    l5029:
  8417                           
  8418                           ; BSR set to: 0
  8419  00CE' 5000'              	movf	___fldiv@a^0,w,c
  8420  00D0' 1000'              	iorwf	(___fldiv@a+1)^0,w,c
  8421  00D2' 1000'              	iorwf	(___fldiv@a+2)^0,w,c
  8422  00D4' 1000'              	iorwf	(___fldiv@a+3)^0,w,c
  8423  00D6' A4D8               	btfss	status,2,c
  8424  00D8' EF00' F000'        	goto	u5591
  8425  00DC' EF00' F000'        	goto	u5590
  8426  00E0'                    u5591:
  8427  00E0' EF00' F000'        	goto	l5041
  8428  00E4'                    u5590:
  8429  00E4'                    
  8430                           ; BSR set to: 0
  8431  00E4' 0E00               	movlw	0
  8432  00E6' 6E00'              	movwf	___fldiv@b^0,c
  8433  00E8' 0E00               	movlw	0
  8434  00EA' 6E00'              	movwf	(___fldiv@b+1)^0,c
  8435  00EC' 0E00               	movlw	0
  8436  00EE' 6E00'              	movwf	(___fldiv@b+2)^0,c
  8437  00F0' 0E00               	movlw	0
  8438  00F2' 6E00'              	movwf	(___fldiv@b+3)^0,c
  8439  00F4'                    
  8440                           ; BSR set to: 0
  8441  00F4' 0E80               	movlw	128
  8442  00F6' 1200'              	iorwf	(___fldiv@b+2)^0,f,c
  8443  00F8' 0E7F               	movlw	127
  8444  00FA' 1200'              	iorwf	(___fldiv@b+3)^0,f,c
  8445  00FC'                    l5035:
  8446                           
  8447                           ; BSR set to: 0
  8448  00FC' 5100'              	movf	___fldiv@sign& (0+255),w,b
  8449  00FE' 1200'              	iorwf	(___fldiv@b+3)^0,f,c
  8450  0100'                    
  8451                           ; BSR set to: 0
  8452  0100' C041' F041'        	movff	___fldiv@b,?___fldiv
  8453  0104' C042' F042'        	movff	___fldiv@b+1,?___fldiv+1
  8454  0108' C043' F043'        	movff	___fldiv@b+2,?___fldiv+2
  8455  010C' C044' F044'        	movff	___fldiv@b+3,?___fldiv+3
  8456  0110' EF00' F000'        	goto	l1427
  8457  0114'                    l5041:
  8458                           
  8459                           ; BSR set to: 0
  8460  0114' 5100'              	movf	___fldiv@bexp& (0+255),w,b
  8461  0116' A4D8               	btfss	status,2,c
  8462  0118' EF00' F000'        	goto	u5601
  8463  011C' EF00' F000'        	goto	u5600
  8464  0120'                    u5601:
  8465  0120' EF00' F000'        	goto	l5049
  8466  0124'                    u5600:
  8467  0124'                    
  8468                           ; BSR set to: 0
  8469  0124' 0E00               	movlw	0
  8470  0126' 6E00'              	movwf	?___fldiv^0,c
  8471  0128' 0E00               	movlw	0
  8472  012A' 6E00'              	movwf	(?___fldiv+1)^0,c
  8473  012C' 0E00               	movlw	0
  8474  012E' 6E00'              	movwf	(?___fldiv+2)^0,c
  8475  0130' 0E00               	movlw	0
  8476  0132' 6E00'              	movwf	(?___fldiv+3)^0,c
  8477  0134' EF00' F000'        	goto	l1427
  8478  0138'                    l5049:
  8479                           
  8480                           ; BSR set to: 0
  8481  0138' 5100'              	movf	___fldiv@aexp& (0+255),w,b
  8482  013A' C00F' F000'        	movff	___fldiv@bexp,??___fldiv
  8483  013E' 6B00'              	clrf	(??___fldiv+1)& (0+255),b
  8484  0140' 5F00'              	subwf	??___fldiv& (0+255),f,b
  8485  0142' 0E00               	movlw	0
  8486  0144' 5B00'              	subwfb	(??___fldiv+1)& (0+255),f,b
  8487  0146' 0E7F               	movlw	127
  8488  0148' 2500'              	addwf	??___fldiv& (0+255),w,b
  8489  014A' 6F00'              	movwf	___fldiv@new_exp& (0+255),b
  8490  014C' 0E00               	movlw	0
  8491  014E' 2100'              	addwfc	(??___fldiv+1)& (0+255),w,b
  8492  0150' 6F00'              	movwf	(___fldiv@new_exp+1)& (0+255),b
  8493  0152'                    
  8494                           ; BSR set to: 0
  8495  0152' C041' F004'        	movff	___fldiv@b,___fldiv@rem
  8496  0156' C042' F005'        	movff	___fldiv@b+1,___fldiv@rem+1
  8497  015A' C043' F006'        	movff	___fldiv@b+2,___fldiv@rem+2
  8498  015E' C044' F007'        	movff	___fldiv@b+3,___fldiv@rem+3
  8499  0162'                    
  8500                           ; BSR set to: 0
  8501  0162' 0E00               	movlw	0
  8502  0164' 6E00'              	movwf	___fldiv@b^0,c
  8503  0166' 0E00               	movlw	0
  8504  0168' 6E00'              	movwf	(___fldiv@b+1)^0,c
  8505  016A' 0E00               	movlw	0
  8506  016C' 6E00'              	movwf	(___fldiv@b+2)^0,c
  8507  016E' 0E00               	movlw	0
  8508  0170' 6E00'              	movwf	(___fldiv@b+3)^0,c
  8509  0172'                    
  8510                           ; BSR set to: 0
  8511  0172' 0E00               	movlw	0
  8512  0174' 6F00'              	movwf	___fldiv@grs& (0+255),b
  8513  0176' 0E00               	movlw	0
  8514  0178' 6F00'              	movwf	(___fldiv@grs+1)& (0+255),b
  8515  017A' 0E00               	movlw	0
  8516  017C' 6F00'              	movwf	(___fldiv@grs+2)& (0+255),b
  8517  017E' 0E00               	movlw	0
  8518  0180' 6F00'              	movwf	(___fldiv@grs+3)& (0+255),b
  8519  0182'                    
  8520                           ; BSR set to: 0
  8521  0182' 0E00               	movlw	0
  8522  0184' 6F00'              	movwf	___fldiv@aexp& (0+255),b
  8523  0186' EF00' F000'        	goto	l1429
  8524  018A'                    l5059:
  8525                           
  8526                           ; BSR set to: 0
  8527  018A' 5100'              	movf	___fldiv@aexp& (0+255),w,b
  8528  018C' B4D8               	btfsc	status,2,c
  8529  018E' EF00' F000'        	goto	u5611
  8530  0192' EF00' F000'        	goto	u5610
  8531  0196'                    u5611:
  8532  0196' EF00' F000'        	goto	l5067
  8533  019A'                    u5610:
  8534  019A'                    
  8535                           ; BSR set to: 0
  8536  019A' 90D8               	bcf	status,0,c
  8537  019C' 3700'              	rlcf	___fldiv@rem& (0+255),f,b
  8538  019E' 3700'              	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8539  01A0' 3700'              	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8540  01A2' 3700'              	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8541  01A4' 90D8               	bcf	status,0,c
  8542  01A6' 3600'              	rlcf	___fldiv@b^0,f,c
  8543  01A8' 3600'              	rlcf	(___fldiv@b+1)^0,f,c
  8544  01AA' 3600'              	rlcf	(___fldiv@b+2)^0,f,c
  8545  01AC' 3600'              	rlcf	(___fldiv@b+3)^0,f,c
  8546  01AE'                    
  8547                           ; BSR set to: 0
  8548  01AE' AF00'              	btfss	(___fldiv@grs+3)& (0+255),7,b
  8549  01B0' EF00' F000'        	goto	u5621
  8550  01B4' EF00' F000'        	goto	u5620
  8551  01B8'                    u5621:
  8552  01B8' EF00' F000'        	goto	l1432
  8553  01BC'                    u5620:
  8554  01BC'                    
  8555                           ; BSR set to: 0
  8556  01BC' 8000'              	bsf	___fldiv@b^0,0,c
  8557  01BE'                    l1432:
  8558                           
  8559                           ; BSR set to: 0
  8560  01BE' 90D8               	bcf	status,0,c
  8561  01C0' 3700'              	rlcf	___fldiv@grs& (0+255),f,b
  8562  01C2' 3700'              	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8563  01C4' 3700'              	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8564  01C6' 3700'              	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8565  01C8'                    l5067:
  8566                           
  8567                           ; BSR set to: 0
  8568  01C8' 5000'              	movf	___fldiv@a^0,w,c
  8569  01CA' 5D00'              	subwf	___fldiv@rem& (0+255),w,b
  8570  01CC' 5000'              	movf	(___fldiv@a+1)^0,w,c
  8571  01CE' 5900'              	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8572  01D0' 5000'              	movf	(___fldiv@a+2)^0,w,c
  8573  01D2' 5900'              	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8574  01D4' 5000'              	movf	(___fldiv@a+3)^0,w,c
  8575  01D6' 5900'              	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8576  01D8' A0D8               	btfss	status,0,c
  8577  01DA' EF00' F000'        	goto	u5631
  8578  01DE' EF00' F000'        	goto	u5630
  8579  01E2'                    u5631:
  8580  01E2' EF00' F000'        	goto	l5073
  8581  01E6'                    u5630:
  8582  01E6'                    
  8583                           ; BSR set to: 0
  8584  01E6' 8D00'              	bsf	(___fldiv@grs+3)& (0+255),6,b
  8585  01E8'                    
  8586                           ; BSR set to: 0
  8587  01E8' 5000'              	movf	___fldiv@a^0,w,c
  8588  01EA' 5F00'              	subwf	___fldiv@rem& (0+255),f,b
  8589  01EC' 5000'              	movf	(___fldiv@a+1)^0,w,c
  8590  01EE' 5B00'              	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8591  01F0' 5000'              	movf	(___fldiv@a+2)^0,w,c
  8592  01F2' 5B00'              	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8593  01F4' 5000'              	movf	(___fldiv@a+3)^0,w,c
  8594  01F6' 5B00'              	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8595  01F8'                    l5073:
  8596                           
  8597                           ; BSR set to: 0
  8598  01F8' 2B00'              	incf	___fldiv@aexp& (0+255),f,b
  8599  01FA'                    l1429:
  8600                           
  8601                           ; BSR set to: 0
  8602  01FA' 0E19               	movlw	25
  8603  01FC' 6500'              	cpfsgt	___fldiv@aexp& (0+255),b
  8604  01FE' EF00' F000'        	goto	u5641
  8605  0202' EF00' F000'        	goto	u5640
  8606  0206'                    u5641:
  8607  0206' EF00' F000'        	goto	l5059
  8608  020A'                    u5640:
  8609  020A'                    
  8610                           ; BSR set to: 0
  8611  020A' 5100'              	movf	___fldiv@rem& (0+255),w,b
  8612  020C' 1100'              	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8613  020E' 1100'              	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8614  0210' 1100'              	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8615  0212' B4D8               	btfsc	status,2,c
  8616  0214' EF00' F000'        	goto	u5651
  8617  0218' EF00' F000'        	goto	u5650
  8618  021C'                    u5651:
  8619  021C' EF00' F000'        	goto	l5085
  8620  0220'                    u5650:
  8621  0220'                    
  8622                           ; BSR set to: 0
  8623  0220' 8100'              	bsf	___fldiv@grs& (0+255),0,b
  8624  0222' EF00' F000'        	goto	l5085
  8625  0226'                    l5079:
  8626                           
  8627                           ; BSR set to: 0
  8628  0226' 90D8               	bcf	status,0,c
  8629  0228' 3600'              	rlcf	___fldiv@b^0,f,c
  8630  022A' 3600'              	rlcf	(___fldiv@b+1)^0,f,c
  8631  022C' 3600'              	rlcf	(___fldiv@b+2)^0,f,c
  8632  022E' 3600'              	rlcf	(___fldiv@b+3)^0,f,c
  8633  0230'                    
  8634                           ; BSR set to: 0
  8635  0230' AF00'              	btfss	(___fldiv@grs+3)& (0+255),7,b
  8636  0232' EF00' F000'        	goto	u5661
  8637  0236' EF00' F000'        	goto	u5660
  8638  023A'                    u5661:
  8639  023A' EF00' F000'        	goto	l1438
  8640  023E'                    u5660:
  8641  023E'                    
  8642                           ; BSR set to: 0
  8643  023E' 8000'              	bsf	___fldiv@b^0,0,c
  8644  0240'                    l1438:
  8645                           
  8646                           ; BSR set to: 0
  8647  0240' 90D8               	bcf	status,0,c
  8648  0242' 3700'              	rlcf	___fldiv@grs& (0+255),f,b
  8649  0244' 3700'              	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8650  0246' 3700'              	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8651  0248' 3700'              	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8652  024A' 0700'              	decf	___fldiv@new_exp& (0+255),f,b
  8653  024C' A0D8               	btfss	status,0,c
  8654  024E' 0700'              	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8655  0250'                    l5085:
  8656                           
  8657                           ; BSR set to: 0
  8658  0250' AE00'              	btfss	(___fldiv@b+2)^0,7,c
  8659  0252' EF00' F000'        	goto	u5671
  8660  0256' EF00' F000'        	goto	u5670
  8661  025A'                    u5671:
  8662  025A' EF00' F000'        	goto	l5079
  8663  025E'                    u5670:
  8664  025E'                    
  8665                           ; BSR set to: 0
  8666  025E' 0E00               	movlw	0
  8667  0260' 6F00'              	movwf	___fldiv@aexp& (0+255),b
  8668  0262'                    
  8669                           ; BSR set to: 0
  8670  0262' AF00'              	btfss	(___fldiv@grs+3)& (0+255),7,b
  8671  0264' EF00' F000'        	goto	u5681
  8672  0268' EF00' F000'        	goto	u5680
  8673  026C'                    u5681:
  8674  026C' EF00' F000'        	goto	l1440
  8675  0270'                    u5680:
  8676  0270'                    
  8677                           ; BSR set to: 0
  8678  0270' 0EFF               	movlw	255
  8679  0272' 1500'              	andwf	___fldiv@grs& (0+255),w,b
  8680  0274' 6F00'              	movwf	??___fldiv& (0+255),b
  8681  0276' 0EFF               	movlw	255
  8682  0278' 1500'              	andwf	(___fldiv@grs+1)& (0+255),w,b
  8683  027A' 6F00'              	movwf	(??___fldiv+1)& (0+255),b
  8684  027C' 0EFF               	movlw	255
  8685  027E' 1500'              	andwf	(___fldiv@grs+2)& (0+255),w,b
  8686  0280' 6F00'              	movwf	(??___fldiv+2)& (0+255),b
  8687  0282' 0E7F               	movlw	127
  8688  0284' 1500'              	andwf	(___fldiv@grs+3)& (0+255),w,b
  8689  0286' 6F00'              	movwf	(??___fldiv+3)& (0+255),b
  8690  0288' 5100'              	movf	??___fldiv& (0+255),w,b
  8691  028A' 1100'              	iorwf	(??___fldiv+1)& (0+255),w,b
  8692  028C' 1100'              	iorwf	(??___fldiv+2)& (0+255),w,b
  8693  028E' 1100'              	iorwf	(??___fldiv+3)& (0+255),w,b
  8694  0290' B4D8               	btfsc	status,2,c
  8695  0292' EF00' F000'        	goto	u5691
  8696  0296' EF00' F000'        	goto	u5690
  8697  029A'                    u5691:
  8698  029A' EF00' F000'        	goto	l1441
  8699  029E'                    u5690:
  8700  029E'                    l5093:
  8701                           
  8702                           ; BSR set to: 0
  8703  029E' 0E01               	movlw	1
  8704  02A0' 6F00'              	movwf	___fldiv@aexp& (0+255),b
  8705  02A2' EF00' F000'        	goto	l1440
  8706  02A6'                    l1441:
  8707                           
  8708                           ; BSR set to: 0
  8709  02A6' A000'              	btfss	___fldiv@b^0,0,c
  8710  02A8' EF00' F000'        	goto	u5701
  8711  02AC' EF00' F000'        	goto	u5700
  8712  02B0'                    u5701:
  8713  02B0' EF00' F000'        	goto	l1440
  8714  02B4'                    u5700:
  8715  02B4' EF00' F000'        	goto	l5093
  8716  02B8'                    l1440:
  8717                           
  8718                           ; BSR set to: 0
  8719  02B8' 5100'              	movf	___fldiv@aexp& (0+255),w,b
  8720  02BA' B4D8               	btfsc	status,2,c
  8721  02BC' EF00' F000'        	goto	u5711
  8722  02C0' EF00' F000'        	goto	u5710
  8723  02C4'                    u5711:
  8724  02C4' EF00' F000'        	goto	l5105
  8725  02C8'                    u5710:
  8726  02C8'                    
  8727                           ; BSR set to: 0
  8728  02C8' 0E01               	movlw	1
  8729  02CA' 2600'              	addwf	___fldiv@b^0,f,c
  8730  02CC' 0E00               	movlw	0
  8731  02CE' 2200'              	addwfc	(___fldiv@b+1)^0,f,c
  8732  02D0' 2200'              	addwfc	(___fldiv@b+2)^0,f,c
  8733  02D2' 2200'              	addwfc	(___fldiv@b+3)^0,f,c
  8734  02D4'                    
  8735                           ; BSR set to: 0
  8736  02D4' A000'              	btfss	(___fldiv@b+3)^0,0,c
  8737  02D6' EF00' F000'        	goto	u5721
  8738  02DA' EF00' F000'        	goto	u5720
  8739  02DE'                    u5721:
  8740  02DE' EF00' F000'        	goto	l5105
  8741  02E2'                    u5720:
  8742  02E2'                    
  8743                           ; BSR set to: 0
  8744  02E2' C041' F000'        	movff	___fldiv@b,??___fldiv
  8745  02E6' C042' F001'        	movff	___fldiv@b+1,??___fldiv+1
  8746  02EA' C043' F002'        	movff	___fldiv@b+2,??___fldiv+2
  8747  02EE' C044' F003'        	movff	___fldiv@b+3,??___fldiv+3
  8748  02F2' 3500'              	rlcf	(??___fldiv+3)& (0+255),w,b
  8749  02F4' 3300'              	rrcf	(??___fldiv+3)& (0+255),f,b
  8750  02F6' 3300'              	rrcf	(??___fldiv+2)& (0+255),f,b
  8751  02F8' 3300'              	rrcf	(??___fldiv+1)& (0+255),f,b
  8752  02FA' 3300'              	rrcf	??___fldiv& (0+255),f,b
  8753  02FC' C000' F041'        	movff	??___fldiv,___fldiv@b
  8754  0300' C001' F042'        	movff	??___fldiv+1,___fldiv@b+1
  8755  0304' C002' F043'        	movff	??___fldiv+2,___fldiv@b+2
  8756  0308' C003' F044'        	movff	??___fldiv+3,___fldiv@b+3
  8757  030C'                    
  8758                           ; BSR set to: 0
  8759  030C' 4B00'              	infsnz	___fldiv@new_exp& (0+255),f,b
  8760  030E' 2B00'              	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8761  0310'                    l5105:
  8762                           
  8763                           ; BSR set to: 0
  8764  0310' BF00'              	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8765  0312' EF00' F000'        	goto	u5731
  8766  0316' 5100'              	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8767  0318' E108               	bnz	u5730
  8768  031A' 2900'              	incf	___fldiv@new_exp& (0+255),w,b
  8769  031C' A0D8               	btfss	status,0,c
  8770  031E' EF00' F000'        	goto	u5731
  8771  0322' EF00' F000'        	goto	u5730
  8772  0326'                    u5731:
  8773  0326' EF00' F000'        	goto	l5109
  8774  032A'                    u5730:
  8775  032A'                    
  8776                           ; BSR set to: 0
  8777  032A' 0E00               	movlw	0
  8778  032C' 6F00'              	movwf	(___fldiv@new_exp+1)& (0+255),b
  8779  032E' 6900'              	setf	___fldiv@new_exp& (0+255),b
  8780  0330' 0E00               	movlw	0
  8781  0332' 6E00'              	movwf	___fldiv@b^0,c
  8782  0334' 0E00               	movlw	0
  8783  0336' 6E00'              	movwf	(___fldiv@b+1)^0,c
  8784  0338' 0E00               	movlw	0
  8785  033A' 6E00'              	movwf	(___fldiv@b+2)^0,c
  8786  033C' 0E00               	movlw	0
  8787  033E' 6E00'              	movwf	(___fldiv@b+3)^0,c
  8788  0340'                    l5109:
  8789                           
  8790                           ; BSR set to: 0
  8791  0340' BF00'              	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8792  0342' EF00' F000'        	goto	u5740
  8793  0346' 5100'              	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8794  0348' E106               	bnz	u5741
  8795  034A' 0500'              	decf	___fldiv@new_exp& (0+255),w,b
  8796  034C' B0D8               	btfsc	status,0,c
  8797  034E' EF00' F000'        	goto	u5741
  8798  0352' EF00' F000'        	goto	u5740
  8799  0356'                    u5741:
  8800  0356' EF00' F000'        	goto	l5113
  8801  035A'                    u5740:
  8802  035A'                    
  8803                           ; BSR set to: 0
  8804  035A' 0E00               	movlw	0
  8805  035C' 6F00'              	movwf	(___fldiv@new_exp+1)& (0+255),b
  8806  035E' 0E00               	movlw	0
  8807  0360' 6F00'              	movwf	___fldiv@new_exp& (0+255),b
  8808  0362' 0E00               	movlw	0
  8809  0364' 6E00'              	movwf	___fldiv@b^0,c
  8810  0366' 0E00               	movlw	0
  8811  0368' 6E00'              	movwf	(___fldiv@b+1)^0,c
  8812  036A' 0E00               	movlw	0
  8813  036C' 6E00'              	movwf	(___fldiv@b+2)^0,c
  8814  036E' 0E00               	movlw	0
  8815  0370' 6E00'              	movwf	(___fldiv@b+3)^0,c
  8816  0372' 0E00               	movlw	0
  8817  0374' 6F00'              	movwf	___fldiv@sign& (0+255),b
  8818  0376'                    l5113:
  8819                           
  8820                           ; BSR set to: 0
  8821  0376' C009' F00F'        	movff	___fldiv@new_exp,___fldiv@bexp
  8822  037A'                    
  8823                           ; BSR set to: 0
  8824  037A' A100'              	btfss	___fldiv@bexp& (0+255),0,b
  8825  037C' EF00' F000'        	goto	u5751
  8826  0380' EF00' F000'        	goto	u5750
  8827  0384'                    u5751:
  8828  0384' EF00' F000'        	goto	l5119
  8829  0388'                    u5750:
  8830  0388'                    
  8831                           ; BSR set to: 0
  8832  0388' 8E00'              	bsf	(___fldiv@b+2)^0,7,c
  8833  038A' EF00' F000'        	goto	l5121
  8834  038E'                    l5119:
  8835                           
  8836                           ; BSR set to: 0
  8837  038E' 9E00'              	bcf	(___fldiv@b+2)^0,7,c
  8838  0390'                    l5121:
  8839                           
  8840                           ; BSR set to: 0
  8841  0390' 90D8               	bcf	status,0,c
  8842  0392' 3100'              	rrcf	___fldiv@bexp& (0+255),w,b
  8843  0394' 6E00'              	movwf	(___fldiv@b+3)^0,c
  8844  0396' EF00' F000'        	goto	l5035
  8845  039A'                    l1427:
  8846                           
  8847                           ; BSR set to: 0
  8848  039A' 0012               	return		;funcret
  8849  039C'                    __end_of___fldiv:
  8850                           	callstack 0
  8851                           
  8852 ;; *************** function ___fladd *****************
  8853 ;; Defined at:
  8854 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  b               4   49[COMRAM] unsigned char 
  8857 ;;  a               4   53[COMRAM] unsigned char 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;  grs             1   64[COMRAM] unsigned char 
  8860 ;;  bexp            1   63[COMRAM] unsigned char 
  8861 ;;  aexp            1   62[COMRAM] unsigned char 
  8862 ;;  signs           1   61[COMRAM] unsigned char 
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  4   49[COMRAM] unsigned char 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8872 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8873 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8874 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;Total ram usage:       16 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 7
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_turnleft
  8883 ;;		_turnright
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text46
  8888  0000'                    __ptext46:
  8889                           	callstack 0
  8890  0000'                    ___fladd:
  8891                           	callstack 20
  8892  0000' 5000'              	movf	(___fladd@b+3)^0,w,c
  8893  0002' 0B80               	andlw	128
  8894  0004' 6E00'              	movwf	___fladd@signs^0,c
  8895  0006' 5000'              	movf	(___fladd@b+3)^0,w,c
  8896  0008' 2400'              	addwf	(___fladd@b+3)^0,w,c
  8897  000A' 6E00'              	movwf	___fladd@bexp^0,c
  8898  000C' AE00'              	btfss	(___fladd@b+2)^0,7,c
  8899  000E' EF00' F000'        	goto	u2991
  8900  0012' EF00' F000'        	goto	u2990
  8901  0016'                    u2991:
  8902  0016' EF00' F000'        	goto	l3421
  8903  001A'                    u2990:
  8904  001A' 8000'              	bsf	___fladd@bexp^0,0,c
  8905  001C'                    l3421:
  8906  001C' 5000'              	movf	___fladd@bexp^0,w,c
  8907  001E' B4D8               	btfsc	status,2,c
  8908  0020' EF00' F000'        	goto	u3001
  8909  0024' EF00' F000'        	goto	u3000
  8910  0028'                    u3001:
  8911  0028' EF00' F000'        	goto	l3431
  8912  002C'                    u3000:
  8913  002C' 2800'              	incf	___fladd@bexp^0,w,c
  8914  002E' A4D8               	btfss	status,2,c
  8915  0030' EF00' F000'        	goto	u3011
  8916  0034' EF00' F000'        	goto	u3010
  8917  0038'                    u3011:
  8918  0038' EF00' F000'        	goto	l3427
  8919  003C'                    u3010:
  8920  003C' 0E00               	movlw	0
  8921  003E' 6E00'              	movwf	___fladd@b^0,c
  8922  0040' 0E00               	movlw	0
  8923  0042' 6E00'              	movwf	(___fladd@b+1)^0,c
  8924  0044' 0E00               	movlw	0
  8925  0046' 6E00'              	movwf	(___fladd@b+2)^0,c
  8926  0048' 0E00               	movlw	0
  8927  004A' 6E00'              	movwf	(___fladd@b+3)^0,c
  8928  004C'                    l3427:
  8929  004C' 8E00'              	bsf	(___fladd@b+2)^0,7,c
  8930  004E' 0E00               	movlw	0
  8931  0050' 6E00'              	movwf	(___fladd@b+3)^0,c
  8932  0052' EF00' F000'        	goto	l3433
  8933  0056'                    l3431:
  8934  0056' 0E00               	movlw	0
  8935  0058' 6E00'              	movwf	___fladd@b^0,c
  8936  005A' 0E00               	movlw	0
  8937  005C' 6E00'              	movwf	(___fladd@b+1)^0,c
  8938  005E' 0E00               	movlw	0
  8939  0060' 6E00'              	movwf	(___fladd@b+2)^0,c
  8940  0062' 0E00               	movlw	0
  8941  0064' 6E00'              	movwf	(___fladd@b+3)^0,c
  8942  0066'                    l3433:
  8943  0066' 5000'              	movf	(___fladd@a+3)^0,w,c
  8944  0068' 0B80               	andlw	128
  8945  006A' 6E00'              	movwf	___fladd@aexp^0,c
  8946  006C' 5000'              	movf	___fladd@signs^0,w,c
  8947  006E' 1800'              	xorwf	___fladd@aexp^0,w,c
  8948  0070' B4D8               	btfsc	status,2,c
  8949  0072' EF00' F000'        	goto	u3021
  8950  0076' EF00' F000'        	goto	u3020
  8951  007A'                    u3021:
  8952  007A' EF00' F000'        	goto	l3439
  8953  007E'                    u3020:
  8954  007E' 8C00'              	bsf	___fladd@signs^0,6,c
  8955  0080'                    l3439:
  8956  0080' 5000'              	movf	(___fladd@a+3)^0,w,c
  8957  0082' 2400'              	addwf	(___fladd@a+3)^0,w,c
  8958  0084' 6E00'              	movwf	___fladd@aexp^0,c
  8959  0086' AE00'              	btfss	(___fladd@a+2)^0,7,c
  8960  0088' EF00' F000'        	goto	u3031
  8961  008C' EF00' F000'        	goto	u3030
  8962  0090'                    u3031:
  8963  0090' EF00' F000'        	goto	l3445
  8964  0094'                    u3030:
  8965  0094' 8000'              	bsf	___fladd@aexp^0,0,c
  8966  0096'                    l3445:
  8967  0096' 5000'              	movf	___fladd@aexp^0,w,c
  8968  0098' B4D8               	btfsc	status,2,c
  8969  009A' EF00' F000'        	goto	u3041
  8970  009E' EF00' F000'        	goto	u3040
  8971  00A2'                    u3041:
  8972  00A2' EF00' F000'        	goto	l3455
  8973  00A6'                    u3040:
  8974  00A6' 2800'              	incf	___fladd@aexp^0,w,c
  8975  00A8' A4D8               	btfss	status,2,c
  8976  00AA' EF00' F000'        	goto	u3051
  8977  00AE' EF00' F000'        	goto	u3050
  8978  00B2'                    u3051:
  8979  00B2' EF00' F000'        	goto	l3451
  8980  00B6'                    u3050:
  8981  00B6' 0E00               	movlw	0
  8982  00B8' 6E00'              	movwf	___fladd@a^0,c
  8983  00BA' 0E00               	movlw	0
  8984  00BC' 6E00'              	movwf	(___fladd@a+1)^0,c
  8985  00BE' 0E00               	movlw	0
  8986  00C0' 6E00'              	movwf	(___fladd@a+2)^0,c
  8987  00C2' 0E00               	movlw	0
  8988  00C4' 6E00'              	movwf	(___fladd@a+3)^0,c
  8989  00C6'                    l3451:
  8990  00C6' 8E00'              	bsf	(___fladd@a+2)^0,7,c
  8991  00C8' 0E00               	movlw	0
  8992  00CA' 6E00'              	movwf	(___fladd@a+3)^0,c
  8993  00CC' EF00' F000'        	goto	l3457
  8994  00D0'                    l3455:
  8995  00D0' 0E00               	movlw	0
  8996  00D2' 6E00'              	movwf	___fladd@a^0,c
  8997  00D4' 0E00               	movlw	0
  8998  00D6' 6E00'              	movwf	(___fladd@a+1)^0,c
  8999  00D8' 0E00               	movlw	0
  9000  00DA' 6E00'              	movwf	(___fladd@a+2)^0,c
  9001  00DC' 0E00               	movlw	0
  9002  00DE' 6E00'              	movwf	(___fladd@a+3)^0,c
  9003  00E0'                    l3457:
  9004  00E0' 5000'              	movf	___fladd@bexp^0,w,c
  9005  00E2' 5C00'              	subwf	___fladd@aexp^0,w,c
  9006  00E4' B0D8               	btfsc	status,0,c
  9007  00E6' EF00' F000'        	goto	u3061
  9008  00EA' EF00' F000'        	goto	u3060
  9009  00EE'                    u3061:
  9010  00EE' EF00' F000'        	goto	l3493
  9011  00F2'                    u3060:
  9012  00F2' AC00'              	btfss	___fladd@signs^0,6,c
  9013  00F4' EF00' F000'        	goto	u3071
  9014  00F8' EF00' F000'        	goto	u3070
  9015  00FC'                    u3071:
  9016  00FC' EF00' F000'        	goto	l3463
  9017  0100'                    u3070:
  9018  0100' 0E80               	movlw	128
  9019  0102' 1A00'              	xorwf	___fladd@signs^0,f,c
  9020  0104'                    l3463:
  9021  0104' C03F' F040'        	movff	___fladd@bexp,___fladd@grs
  9022  0108' C03E' F03F'        	movff	___fladd@aexp,___fladd@bexp
  9023  010C' C040' F03E'        	movff	___fladd@grs,___fladd@aexp
  9024  0110' C031' F040'        	movff	___fladd@b,___fladd@grs
  9025  0114' C035' F031'        	movff	___fladd@a,___fladd@b
  9026  0118' C040' F035'        	movff	___fladd@grs,___fladd@a
  9027  011C' C032' F040'        	movff	___fladd@b+1,___fladd@grs
  9028  0120' C036' F032'        	movff	___fladd@a+1,___fladd@b+1
  9029  0124' C040' F036'        	movff	___fladd@grs,___fladd@a+1
  9030  0128' C033' F040'        	movff	___fladd@b+2,___fladd@grs
  9031  012C' C037' F033'        	movff	___fladd@a+2,___fladd@b+2
  9032  0130' C040' F037'        	movff	___fladd@grs,___fladd@a+2
  9033  0134' C034' F040'        	movff	___fladd@b+3,___fladd@grs
  9034  0138' C038' F034'        	movff	___fladd@a+3,___fladd@b+3
  9035  013C' C040' F038'        	movff	___fladd@grs,___fladd@a+3
  9036  0140'                    l3493:
  9037  0140' 0E00               	movlw	0
  9038  0142' 6E00'              	movwf	___fladd@grs^0,c
  9039  0144' 5000'              	movf	___fladd@bexp^0,w,c
  9040  0146' C03E' F039'        	movff	___fladd@aexp,??___fladd
  9041  014A' 6A00'              	clrf	(??___fladd+1)^0,c
  9042  014C' 5E00'              	subwf	??___fladd^0,f,c
  9043  014E' 0E00               	movlw	0
  9044  0150' 5A00'              	subwfb	(??___fladd+1)^0,f,c
  9045  0152' BE00'              	btfsc	(??___fladd+1)^0,7,c
  9046  0154' EF00' F000'        	goto	u3081
  9047  0158' 5000'              	movf	(??___fladd+1)^0,w,c
  9048  015A' E109               	bnz	u3080
  9049  015C' 0E1A               	movlw	26
  9050  015E' 5C00'              	subwf	??___fladd^0,w,c
  9051  0160' A0D8               	btfss	status,0,c
  9052  0162' EF00' F000'        	goto	u3081
  9053  0166' EF00' F000'        	goto	u3080
  9054  016A'                    u3081:
  9055  016A' EF00' F000'        	goto	l1374
  9056  016E'                    u3080:
  9057  016E' 5000'              	movf	___fladd@b^0,w,c
  9058  0170' 1000'              	iorwf	(___fladd@b+1)^0,w,c
  9059  0172' 1000'              	iorwf	(___fladd@b+2)^0,w,c
  9060  0174' 1000'              	iorwf	(___fladd@b+3)^0,w,c
  9061  0176' A4D8               	btfss	status,2,c
  9062  0178' EF00' F000'        	goto	u3091
  9063  017C' EF00' F000'        	goto	u3090
  9064  0180'                    u3091:
  9065  0180' 0E01               	movlw	1
  9066  0182' EF00' F000'        	goto	u3100
  9067  0186'                    u3090:
  9068  0186' 0E00               	movlw	0
  9069  0188'                    u3100:
  9070  0188' 6E00'              	movwf	___fladd@grs^0,c
  9071  018A' 0E00               	movlw	0
  9072  018C' 6E00'              	movwf	___fladd@b^0,c
  9073  018E' 0E00               	movlw	0
  9074  0190' 6E00'              	movwf	(___fladd@b+1)^0,c
  9075  0192' 0E00               	movlw	0
  9076  0194' 6E00'              	movwf	(___fladd@b+2)^0,c
  9077  0196' 0E00               	movlw	0
  9078  0198' 6E00'              	movwf	(___fladd@b+3)^0,c
  9079  019A' C03E' F03F'        	movff	___fladd@aexp,___fladd@bexp
  9080  019E' EF00' F000'        	goto	l1373
  9081  01A2'                    l1375:
  9082  01A2' A000'              	btfss	___fladd@grs^0,0,c
  9083  01A4' EF00' F000'        	goto	u3111
  9084  01A8' EF00' F000'        	goto	u3110
  9085  01AC'                    u3111:
  9086  01AC' EF00' F000'        	goto	l3505
  9087  01B0'                    u3110:
  9088  01B0' 90D8               	bcf	status,0,c
  9089  01B2' 3000'              	rrcf	___fladd@grs^0,w,c
  9090  01B4' 0901               	iorlw	1
  9091  01B6' 6E00'              	movwf	___fladd@grs^0,c
  9092  01B8' EF00' F000'        	goto	l3507
  9093  01BC'                    l3505:
  9094  01BC' 90D8               	bcf	status,0,c
  9095  01BE' 3200'              	rrcf	___fladd@grs^0,f,c
  9096  01C0'                    l3507:
  9097  01C0' A000'              	btfss	___fladd@b^0,0,c
  9098  01C2' EF00' F000'        	goto	u3121
  9099  01C6' EF00' F000'        	goto	u3120
  9100  01CA'                    u3121:
  9101  01CA' EF00' F000'        	goto	l3511
  9102  01CE'                    u3120:
  9103  01CE' 8E00'              	bsf	___fladd@grs^0,7,c
  9104  01D0'                    l3511:
  9105  01D0' 3400'              	rlcf	(___fladd@b+3)^0,w,c
  9106  01D2' 3200'              	rrcf	(___fladd@b+3)^0,f,c
  9107  01D4' 3200'              	rrcf	(___fladd@b+2)^0,f,c
  9108  01D6' 3200'              	rrcf	(___fladd@b+1)^0,f,c
  9109  01D8' 3200'              	rrcf	___fladd@b^0,f,c
  9110  01DA' 2A00'              	incf	___fladd@bexp^0,f,c
  9111  01DC'                    l1374:
  9112  01DC' 5000'              	movf	___fladd@aexp^0,w,c
  9113  01DE' 5C00'              	subwf	___fladd@bexp^0,w,c
  9114  01E0' A0D8               	btfss	status,0,c
  9115  01E2' EF00' F000'        	goto	u3131
  9116  01E6' EF00' F000'        	goto	u3130
  9117  01EA'                    u3131:
  9118  01EA' EF00' F000'        	goto	l1375
  9119  01EE'                    u3130:
  9120  01EE'                    l1373:
  9121  01EE' BC00'              	btfsc	___fladd@signs^0,6,c
  9122  01F0' EF00' F000'        	goto	u3141
  9123  01F4' EF00' F000'        	goto	u3140
  9124  01F8'                    u3141:
  9125  01F8' EF00' F000'        	goto	l3539
  9126  01FC'                    u3140:
  9127  01FC' 5000'              	movf	___fladd@bexp^0,w,c
  9128  01FE' A4D8               	btfss	status,2,c
  9129  0200' EF00' F000'        	goto	u3151
  9130  0204' EF00' F000'        	goto	u3150
  9131  0208'                    u3151:
  9132  0208' EF00' F000'        	goto	l3521
  9133  020C'                    u3150:
  9134  020C' 0E00               	movlw	0
  9135  020E' 6E00'              	movwf	?___fladd^0,c
  9136  0210' 0E00               	movlw	0
  9137  0212' 6E00'              	movwf	(?___fladd+1)^0,c
  9138  0214' 0E00               	movlw	0
  9139  0216' 6E00'              	movwf	(?___fladd+2)^0,c
  9140  0218' 0E00               	movlw	0
  9141  021A' 6E00'              	movwf	(?___fladd+3)^0,c
  9142  021C' EF00' F000'        	goto	l1382
  9143  0220'                    l3521:
  9144  0220' 5000'              	movf	___fladd@a^0,w,c
  9145  0222' 2600'              	addwf	___fladd@b^0,f,c
  9146  0224' 5000'              	movf	(___fladd@a+1)^0,w,c
  9147  0226' 2200'              	addwfc	(___fladd@b+1)^0,f,c
  9148  0228' 5000'              	movf	(___fladd@a+2)^0,w,c
  9149  022A' 2200'              	addwfc	(___fladd@b+2)^0,f,c
  9150  022C' 5000'              	movf	(___fladd@a+3)^0,w,c
  9151  022E' 2200'              	addwfc	(___fladd@b+3)^0,f,c
  9152  0230' A000'              	btfss	(___fladd@b+3)^0,0,c
  9153  0232' EF00' F000'        	goto	u3161
  9154  0236' EF00' F000'        	goto	u3160
  9155  023A'                    u3161:
  9156  023A' EF00' F000'        	goto	l3575
  9157  023E'                    u3160:
  9158  023E' A000'              	btfss	___fladd@grs^0,0,c
  9159  0240' EF00' F000'        	goto	u3171
  9160  0244' EF00' F000'        	goto	u3170
  9161  0248'                    u3171:
  9162  0248' EF00' F000'        	goto	l3529
  9163  024C'                    u3170:
  9164  024C' 90D8               	bcf	status,0,c
  9165  024E' 3000'              	rrcf	___fladd@grs^0,w,c
  9166  0250' 0901               	iorlw	1
  9167  0252' 6E00'              	movwf	___fladd@grs^0,c
  9168  0254' EF00' F000'        	goto	l3531
  9169  0258'                    l3529:
  9170  0258' 90D8               	bcf	status,0,c
  9171  025A' 3200'              	rrcf	___fladd@grs^0,f,c
  9172  025C'                    l3531:
  9173  025C' A000'              	btfss	___fladd@b^0,0,c
  9174  025E' EF00' F000'        	goto	u3181
  9175  0262' EF00' F000'        	goto	u3180
  9176  0266'                    u3181:
  9177  0266' EF00' F000'        	goto	l3535
  9178  026A'                    u3180:
  9179  026A' 8E00'              	bsf	___fladd@grs^0,7,c
  9180  026C'                    l3535:
  9181  026C' 3400'              	rlcf	(___fladd@b+3)^0,w,c
  9182  026E' 3200'              	rrcf	(___fladd@b+3)^0,f,c
  9183  0270' 3200'              	rrcf	(___fladd@b+2)^0,f,c
  9184  0272' 3200'              	rrcf	(___fladd@b+1)^0,f,c
  9185  0274' 3200'              	rrcf	___fladd@b^0,f,c
  9186  0276' 2A00'              	incf	___fladd@bexp^0,f,c
  9187  0278' EF00' F000'        	goto	l3575
  9188  027C'                    l3539:
  9189  027C' 5000'              	movf	___fladd@a^0,w,c
  9190  027E' 5C00'              	subwf	___fladd@b^0,w,c
  9191  0280' 5000'              	movf	(___fladd@a+1)^0,w,c
  9192  0282' 5800'              	subwfb	(___fladd@b+1)^0,w,c
  9193  0284' 5000'              	movf	(___fladd@a+2)^0,w,c
  9194  0286' 5800'              	subwfb	(___fladd@b+2)^0,w,c
  9195  0288' 5000'              	movf	(___fladd@b+3)^0,w,c
  9196  028A' 0A80               	xorlw	128
  9197  028C' 6E00'              	movwf	??___fladd^0,c
  9198  028E' 5000'              	movf	(___fladd@a+3)^0,w,c
  9199  0290' 0A80               	xorlw	128
  9200  0292' 5800'              	subwfb	??___fladd^0,w,c
  9201  0294' B0D8               	btfsc	status,0,c
  9202  0296' EF00' F000'        	goto	u3191
  9203  029A' EF00' F000'        	goto	u3190
  9204  029E'                    u3191:
  9205  029E' EF00' F000'        	goto	l3549
  9206  02A2'                    u3190:
  9207  02A2' 5000'              	movf	___fladd@b^0,w,c
  9208  02A4' 5C00'              	subwf	___fladd@a^0,w,c
  9209  02A6' 6E00'              	movwf	??___fladd^0,c
  9210  02A8' 5000'              	movf	(___fladd@b+1)^0,w,c
  9211  02AA' 5800'              	subwfb	(___fladd@a+1)^0,w,c
  9212  02AC' 6E00'              	movwf	(??___fladd+1)^0,c
  9213  02AE' 5000'              	movf	(___fladd@b+2)^0,w,c
  9214  02B0' 5800'              	subwfb	(___fladd@a+2)^0,w,c
  9215  02B2' 6E00'              	movwf	(??___fladd+2)^0,c
  9216  02B4' 5000'              	movf	(___fladd@b+3)^0,w,c
  9217  02B6' 5800'              	subwfb	(___fladd@a+3)^0,w,c
  9218  02B8' 6E00'              	movwf	(??___fladd+3)^0,c
  9219  02BA' 0EFF               	movlw	255
  9220  02BC' 2400'              	addwf	??___fladd^0,w,c
  9221  02BE' 6E00'              	movwf	___fladd@b^0,c
  9222  02C0' 0EFF               	movlw	255
  9223  02C2' 2000'              	addwfc	(??___fladd+1)^0,w,c
  9224  02C4' 6E00'              	movwf	(___fladd@b+1)^0,c
  9225  02C6' 0EFF               	movlw	255
  9226  02C8' 2000'              	addwfc	(??___fladd+2)^0,w,c
  9227  02CA' 6E00'              	movwf	(___fladd@b+2)^0,c
  9228  02CC' 0EFF               	movlw	255
  9229  02CE' 2000'              	addwfc	(??___fladd+3)^0,w,c
  9230  02D0' 6E00'              	movwf	(___fladd@b+3)^0,c
  9231  02D2' 0E80               	movlw	128
  9232  02D4' 1A00'              	xorwf	___fladd@signs^0,f,c
  9233  02D6' 6C00'              	negf	___fladd@grs^0,c
  9234  02D8' 5000'              	movf	___fladd@grs^0,w,c
  9235  02DA' A4D8               	btfss	status,2,c
  9236  02DC' EF00' F000'        	goto	u3201
  9237  02E0' EF00' F000'        	goto	u3200
  9238  02E4'                    u3201:
  9239  02E4' EF00' F000'        	goto	l1390
  9240  02E8'                    u3200:
  9241  02E8' 0E01               	movlw	1
  9242  02EA' 2600'              	addwf	___fladd@b^0,f,c
  9243  02EC' 0E00               	movlw	0
  9244  02EE' 2200'              	addwfc	(___fladd@b+1)^0,f,c
  9245  02F0' 2200'              	addwfc	(___fladd@b+2)^0,f,c
  9246  02F2' 2200'              	addwfc	(___fladd@b+3)^0,f,c
  9247  02F4' EF00' F000'        	goto	l1390
  9248  02F8'                    l3549:
  9249  02F8' 5000'              	movf	___fladd@a^0,w,c
  9250  02FA' 5E00'              	subwf	___fladd@b^0,f,c
  9251  02FC' 5000'              	movf	(___fladd@a+1)^0,w,c
  9252  02FE' 5A00'              	subwfb	(___fladd@b+1)^0,f,c
  9253  0300' 5000'              	movf	(___fladd@a+2)^0,w,c
  9254  0302' 5A00'              	subwfb	(___fladd@b+2)^0,f,c
  9255  0304' 5000'              	movf	(___fladd@a+3)^0,w,c
  9256  0306' 5A00'              	subwfb	(___fladd@b+3)^0,f,c
  9257  0308'                    l1390:
  9258  0308' 5000'              	movf	___fladd@b^0,w,c
  9259  030A' 1000'              	iorwf	(___fladd@b+1)^0,w,c
  9260  030C' 1000'              	iorwf	(___fladd@b+2)^0,w,c
  9261  030E' 1000'              	iorwf	(___fladd@b+3)^0,w,c
  9262  0310' A4D8               	btfss	status,2,c
  9263  0312' EF00' F000'        	goto	u3211
  9264  0316' EF00' F000'        	goto	u3210
  9265  031A'                    u3211:
  9266  031A' EF00' F000'        	goto	l3573
  9267  031E'                    u3210:
  9268  031E' 5000'              	movf	___fladd@grs^0,w,c
  9269  0320' A4D8               	btfss	status,2,c
  9270  0322' EF00' F000'        	goto	u3221
  9271  0326' EF00' F000'        	goto	u3220
  9272  032A'                    u3221:
  9273  032A' EF00' F000'        	goto	l3573
  9274  032E'                    u3220:
  9275  032E' 0E00               	movlw	0
  9276  0330' 6E00'              	movwf	?___fladd^0,c
  9277  0332' 0E00               	movlw	0
  9278  0334' 6E00'              	movwf	(?___fladd+1)^0,c
  9279  0336' 0E00               	movlw	0
  9280  0338' 6E00'              	movwf	(?___fladd+2)^0,c
  9281  033A' 0E00               	movlw	0
  9282  033C' 6E00'              	movwf	(?___fladd+3)^0,c
  9283  033E' EF00' F000'        	goto	l1382
  9284  0342'                    l3557:
  9285  0342' 90D8               	bcf	status,0,c
  9286  0344' 3600'              	rlcf	___fladd@b^0,f,c
  9287  0346' 3600'              	rlcf	(___fladd@b+1)^0,f,c
  9288  0348' 3600'              	rlcf	(___fladd@b+2)^0,f,c
  9289  034A' 3600'              	rlcf	(___fladd@b+3)^0,f,c
  9290  034C' AE00'              	btfss	___fladd@grs^0,7,c
  9291  034E' EF00' F000'        	goto	u3231
  9292  0352' EF00' F000'        	goto	u3230
  9293  0356'                    u3231:
  9294  0356' EF00' F000'        	goto	l3563
  9295  035A'                    u3230:
  9296  035A' 8000'              	bsf	___fladd@b^0,0,c
  9297  035C'                    l3563:
  9298  035C' A000'              	btfss	___fladd@grs^0,0,c
  9299  035E' EF00' F000'        	goto	u3241
  9300  0362' EF00' F000'        	goto	u3240
  9301  0366'                    u3241:
  9302  0366' EF00' F000'        	goto	l3567
  9303  036A'                    u3240:
  9304  036A' 80D8               	bsf	status,0,c
  9305  036C' 3600'              	rlcf	___fladd@grs^0,f,c
  9306  036E' EF00' F000'        	goto	l3569
  9307  0372'                    l3567:
  9308  0372' 90D8               	bcf	status,0,c
  9309  0374' 3600'              	rlcf	___fladd@grs^0,f,c
  9310  0376'                    l3569:
  9311  0376' 5000'              	movf	___fladd@bexp^0,w,c
  9312  0378' B4D8               	btfsc	status,2,c
  9313  037A' EF00' F000'        	goto	u3251
  9314  037E' EF00' F000'        	goto	u3250
  9315  0382'                    u3251:
  9316  0382' EF00' F000'        	goto	l3573
  9317  0386'                    u3250:
  9318  0386' 0600'              	decf	___fladd@bexp^0,f,c
  9319  0388'                    l3573:
  9320  0388' AE00'              	btfss	(___fladd@b+2)^0,7,c
  9321  038A' EF00' F000'        	goto	u3261
  9322  038E' EF00' F000'        	goto	u3260
  9323  0392'                    u3261:
  9324  0392' EF00' F000'        	goto	l3557
  9325  0396'                    u3260:
  9326  0396'                    l3575:
  9327  0396' 0E00               	movlw	0
  9328  0398' 6E00'              	movwf	___fladd@aexp^0,c
  9329  039A' AE00'              	btfss	___fladd@grs^0,7,c
  9330  039C' EF00' F000'        	goto	u3271
  9331  03A0' EF00' F000'        	goto	u3270
  9332  03A4'                    u3271:
  9333  03A4' EF00' F000'        	goto	l1399
  9334  03A8'                    u3270:
  9335  03A8' C040' F039'        	movff	___fladd@grs,??___fladd
  9336  03AC' 0E7F               	movlw	127
  9337  03AE' 1600'              	andwf	??___fladd^0,f,c
  9338  03B0' B4D8               	btfsc	status,2,c
  9339  03B2' EF00' F000'        	goto	u3281
  9340  03B6' EF00' F000'        	goto	u3280
  9341  03BA'                    u3281:
  9342  03BA' EF00' F000'        	goto	l1400
  9343  03BE'                    u3280:
  9344  03BE'                    l3581:
  9345  03BE' 0E01               	movlw	1
  9346  03C0' 6E00'              	movwf	___fladd@aexp^0,c
  9347  03C2' EF00' F000'        	goto	l1399
  9348  03C6'                    l1400:
  9349  03C6' A000'              	btfss	___fladd@b^0,0,c
  9350  03C8' EF00' F000'        	goto	u3291
  9351  03CC' EF00' F000'        	goto	u3290
  9352  03D0'                    u3291:
  9353  03D0' EF00' F000'        	goto	l1399
  9354  03D4'                    u3290:
  9355  03D4' EF00' F000'        	goto	l3581
  9356  03D8'                    l1399:
  9357  03D8' 5000'              	movf	___fladd@aexp^0,w,c
  9358  03DA' B4D8               	btfsc	status,2,c
  9359  03DC' EF00' F000'        	goto	u3301
  9360  03E0' EF00' F000'        	goto	u3300
  9361  03E4'                    u3301:
  9362  03E4' EF00' F000'        	goto	l3593
  9363  03E8'                    u3300:
  9364  03E8' 0E01               	movlw	1
  9365  03EA' 2600'              	addwf	___fladd@b^0,f,c
  9366  03EC' 0E00               	movlw	0
  9367  03EE' 2200'              	addwfc	(___fladd@b+1)^0,f,c
  9368  03F0' 2200'              	addwfc	(___fladd@b+2)^0,f,c
  9369  03F2' 2200'              	addwfc	(___fladd@b+3)^0,f,c
  9370  03F4' A000'              	btfss	(___fladd@b+3)^0,0,c
  9371  03F6' EF00' F000'        	goto	u3311
  9372  03FA' EF00' F000'        	goto	u3310
  9373  03FE'                    u3311:
  9374  03FE' EF00' F000'        	goto	l3593
  9375  0402'                    u3310:
  9376  0402' C031' F039'        	movff	___fladd@b,??___fladd
  9377  0406' C032' F03A'        	movff	___fladd@b+1,??___fladd+1
  9378  040A' C033' F03B'        	movff	___fladd@b+2,??___fladd+2
  9379  040E' C034' F03C'        	movff	___fladd@b+3,??___fladd+3
  9380  0412' 3400'              	rlcf	(??___fladd+3)^0,w,c
  9381  0414' 3200'              	rrcf	(??___fladd+3)^0,f,c
  9382  0416' 3200'              	rrcf	(??___fladd+2)^0,f,c
  9383  0418' 3200'              	rrcf	(??___fladd+1)^0,f,c
  9384  041A' 3200'              	rrcf	??___fladd^0,f,c
  9385  041C' C039' F031'        	movff	??___fladd,___fladd@b
  9386  0420' C03A' F032'        	movff	??___fladd+1,___fladd@b+1
  9387  0424' C03B' F033'        	movff	??___fladd+2,___fladd@b+2
  9388  0428' C03C' F034'        	movff	??___fladd+3,___fladd@b+3
  9389  042C' 2800'              	incf	___fladd@bexp^0,w,c
  9390  042E' B4D8               	btfsc	status,2,c
  9391  0430' EF00' F000'        	goto	u3321
  9392  0434' EF00' F000'        	goto	u3320
  9393  0438'                    u3321:
  9394  0438' EF00' F000'        	goto	l3593
  9395  043C'                    u3320:
  9396  043C' 2A00'              	incf	___fladd@bexp^0,f,c
  9397  043E'                    l3593:
  9398  043E' 2800'              	incf	___fladd@bexp^0,w,c
  9399  0440' B4D8               	btfsc	status,2,c
  9400  0442' EF00' F000'        	goto	u3331
  9401  0446' EF00' F000'        	goto	u3330
  9402  044A'                    u3331:
  9403  044A' EF00' F000'        	goto	l3597
  9404  044E'                    u3330:
  9405  044E' 5000'              	movf	___fladd@bexp^0,w,c
  9406  0450' A4D8               	btfss	status,2,c
  9407  0452' EF00' F000'        	goto	u3341
  9408  0456' EF00' F000'        	goto	u3340
  9409  045A'                    u3341:
  9410  045A' EF00' F000'        	goto	l3601
  9411  045E'                    u3340:
  9412  045E'                    l3597:
  9413  045E' 0E00               	movlw	0
  9414  0460' 6E00'              	movwf	___fladd@b^0,c
  9415  0462' 0E00               	movlw	0
  9416  0464' 6E00'              	movwf	(___fladd@b+1)^0,c
  9417  0466' 0E00               	movlw	0
  9418  0468' 6E00'              	movwf	(___fladd@b+2)^0,c
  9419  046A' 0E00               	movlw	0
  9420  046C' 6E00'              	movwf	(___fladd@b+3)^0,c
  9421  046E' 5000'              	movf	___fladd@bexp^0,w,c
  9422  0470' A4D8               	btfss	status,2,c
  9423  0472' EF00' F000'        	goto	u3351
  9424  0476' EF00' F000'        	goto	u3350
  9425  047A'                    u3351:
  9426  047A' EF00' F000'        	goto	l3601
  9427  047E'                    u3350:
  9428  047E' 0E00               	movlw	0
  9429  0480' 6E00'              	movwf	___fladd@signs^0,c
  9430  0482'                    l3601:
  9431  0482' A000'              	btfss	___fladd@bexp^0,0,c
  9432  0484' EF00' F000'        	goto	u3361
  9433  0488' EF00' F000'        	goto	u3360
  9434  048C'                    u3361:
  9435  048C' EF00' F000'        	goto	l3605
  9436  0490'                    u3360:
  9437  0490' 8E00'              	bsf	(___fladd@b+2)^0,7,c
  9438  0492' EF00' F000'        	goto	l3607
  9439  0496'                    l3605:
  9440  0496' 9E00'              	bcf	(___fladd@b+2)^0,7,c
  9441  0498'                    l3607:
  9442  0498' 90D8               	bcf	status,0,c
  9443  049A' 3000'              	rrcf	___fladd@bexp^0,w,c
  9444  049C' 6E00'              	movwf	(___fladd@b+3)^0,c
  9445  049E' AE00'              	btfss	___fladd@signs^0,7,c
  9446  04A0' EF00' F000'        	goto	u3371
  9447  04A4' EF00' F000'        	goto	u3370
  9448  04A8'                    u3371:
  9449  04A8' EF00' F000'        	goto	l3613
  9450  04AC'                    u3370:
  9451  04AC' 8E00'              	bsf	(___fladd@b+3)^0,7,c
  9452  04AE'                    l3613:
  9453  04AE' C031' F031'        	movff	___fladd@b,?___fladd
  9454  04B2' C032' F032'        	movff	___fladd@b+1,?___fladd+1
  9455  04B6' C033' F033'        	movff	___fladd@b+2,?___fladd+2
  9456  04BA' C034' F034'        	movff	___fladd@b+3,?___fladd+3
  9457  04BE'                    l1382:
  9458  04BE' 0012               	return		;funcret
  9459  04C0'                    __end_of___fladd:
  9460                           	callstack 0
  9461                           
  9462 ;; *************** function _stop *****************
  9463 ;; Defined at:
  9464 ;;		line 136 in file "DC_motors.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  mL              2   35[COMRAM] PTR struct .
  9467 ;;		 -> main@motorL(9), 
  9468 ;;  mR              2   37[COMRAM] PTR struct .
  9469 ;;		 -> main@motorR(9), 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;		None
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  1    wreg      void 
  9474 ;; Registers used:
  9475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9484 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9485 ;;Total ram usage:        6 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; Hardware stack levels required when called: 9
  9488 ;; This function calls:
  9489 ;;		_DCmotors_setPWM
  9490 ;; This function is called by:
  9491 ;;		_main
  9492 ;;		_colourcards_readRGBC
  9493 ;;		_clearance
  9494 ;;		_instructions
  9495 ;;		_reverseinstructions
  9496 ;;		_returnhome
  9497 ;;		_DCmotors_calibration
  9498 ;;		_DCmotors_testing
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text47
  9503  0000'                    __ptext47:
  9504                           	callstack 0
  9505  0000'                    _stop:
  9506                           	callstack 21
  9507  0000'                    
  9508                           ;DC_motors.c: 137:     LATDbits.LATD4 = 1;
  9509  0000' 887C               	bsf	124,4,c	;volatile
  9510                           
  9511                           ;DC_motors.c: 139:     while((mL->power > 0) && (mR->power > 0)){
  9512  0002' EF00' F000'        	goto	l3363
  9513  0006'                    l3355:
  9514                           
  9515                           ;DC_motors.c: 140:         mL->power -= 10;
  9516  0006' C023' FFD9         	movff	stop@mL,fsr2l
  9517  000A' C024' FFDA         	movff	stop@mL+1,fsr2h
  9518  000E' 0E0A               	movlw	10
  9519  0010' 5EDF               	subwf	indf2,f,c
  9520                           
  9521                           ;DC_motors.c: 141:         mR->power -= 10;
  9522  0012' C025' FFD9         	movff	stop@mR,fsr2l
  9523  0016' C026' FFDA         	movff	stop@mR+1,fsr2h
  9524  001A' 0E0A               	movlw	10
  9525  001C' 5EDF               	subwf	indf2,f,c
  9526  001E'                    
  9527                           ;DC_motors.c: 143:         DCmotors_setPWM(mL);
  9528  001E' C023' F018'        	movff	stop@mL,DCmotors_setPWM@m
  9529  0022' C024' F019'        	movff	stop@mL+1,DCmotors_setPWM@m+1
  9530  0026' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  9531  002A'                    
  9532                           ;DC_motors.c: 144:         DCmotors_setPWM(mR);
  9533  002A' C025' F018'        	movff	stop@mR,DCmotors_setPWM@m
  9534  002E' C026' F019'        	movff	stop@mR+1,DCmotors_setPWM@m+1
  9535  0032' EC00' F000'        	call	_DCmotors_setPWM	;wreg free
  9536  0036'                    
  9537                           ;DC_motors.c: 145:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  9538  0036' 0EA0               	movlw	160
  9539  0038'                    u7477:
  9540  0038' D000               	nop2	
  9541  003A' 2EE8               	decfsz	wreg,f,c
  9542  003C' D7FD               	bra	u7477
  9543  003E'                    l3363:
  9544                           
  9545                           ;DC_motors.c: 139:     while((mL->power > 0) && (mR->power > 0)){
  9546  003E' C023' FFD9         	movff	stop@mL,fsr2l
  9547  0042' C024' FFDA         	movff	stop@mL+1,fsr2h
  9548  0046' 50DF               	movf	indf2,w,c
  9549  0048' B4D8               	btfsc	status,2,c
  9550  004A' EF00' F000'        	goto	u2931
  9551  004E' EF00' F000'        	goto	u2930
  9552  0052'                    u2931:
  9553  0052' EF00' F000'        	goto	l3367
  9554  0056'                    u2930:
  9555  0056' C025' FFD9         	movff	stop@mR,fsr2l
  9556  005A' C026' FFDA         	movff	stop@mR+1,fsr2h
  9557  005E' 50DF               	movf	indf2,w,c
  9558  0060' A4D8               	btfss	status,2,c
  9559  0062' EF00' F000'        	goto	u2941
  9560  0066' EF00' F000'        	goto	u2940
  9561  006A'                    u2941:
  9562  006A' EF00' F000'        	goto	l3355
  9563  006E'                    u2940:
  9564  006E'                    l3367:
  9565                           
  9566                           ;DC_motors.c: 147:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9567  006E' 0E29               	movlw	41
  9568  0070' 6E00'              	movwf	(??_stop+1)^0,c
  9569  0072' 0E96               	movlw	150
  9570  0074' 6E00'              	movwf	??_stop^0,c
  9571  0076' 0E7F               	movlw	127
  9572  0078'                    u7487:
  9573  0078' 2EE8               	decfsz	wreg,f,c
  9574  007A' D7FE               	bra	u7487
  9575  007C' 2E00'              	decfsz	??_stop^0,f,c
  9576  007E' D7FC               	bra	u7487
  9577  0080' 2E00'              	decfsz	(??_stop+1)^0,f,c
  9578  0082' D7FA               	bra	u7487
  9579  0084' F000               	nop	
  9580  0086'                    
  9581                           ;DC_motors.c: 148:     LATDbits.LATD4 = 0;
  9582  0086' 987C               	bcf	124,4,c	;volatile
  9583  0088' 0012               	return		;funcret
  9584  008A'                    __end_of_stop:
  9585                           	callstack 0
  9586                           
  9587 ;; *************** function _DCmotors_setPWM *****************
  9588 ;; Defined at:
  9589 ;;		line 49 in file "DC_motors.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  m               2   24[COMRAM] PTR struct .
  9592 ;;		 -> main@motorR(9), main@motorL(9), 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  PWMduty         2   33[COMRAM] int 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      void 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9606 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9607 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;Total ram usage:       11 bytes
  9609 ;; Hardware stack levels used: 1
  9610 ;; Hardware stack levels required when called: 8
  9611 ;; This function calls:
  9612 ;;		___awdiv
  9613 ;;		___wmul
  9614 ;; This function is called by:
  9615 ;;		_forward
  9616 ;;		_reverse
  9617 ;;		_stop
  9618 ;;		_turnleft
  9619 ;;		_turnright
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text48
  9624  0000'                    __ptext48:
  9625                           	callstack 0
  9626  0000'                    _DCmotors_setPWM:
  9627                           	callstack 21
  9628  0000'                    
  9629                           ;DC_motors.c: 50:  int PWMduty;;DC_motors.c: 52:  if (m->direction){PWMduty = (m->PWMper
      +                          iod)-((int)(m->power)*(m->PWMperiod))/100;}
  9630  0000' EE20 F001          	lfsr	2,1
  9631  0004' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9632  0006' 26D9               	addwf	fsr2l,f,c
  9633  0008' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9634  000A' 22DA               	addwfc	fsr2h,f,c
  9635  000C' 50DF               	movf	indf2,w,c
  9636  000E' B4D8               	btfsc	status,2,c
  9637  0010' EF00' F000'        	goto	u2891
  9638  0014' EF00' F000'        	goto	u2890
  9639  0018'                    u2891:
  9640  0018' EF00' F000'        	goto	l3343
  9641  001C'                    u2890:
  9642  001C' C018' FFD9         	movff	DCmotors_setPWM@m,fsr2l
  9643  0020' C019' FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  9644  0024' 50DF               	movf	indf2,w,c
  9645  0026' 6E00'              	movwf	??_DCmotors_setPWM^0,c
  9646  0028' 5000'              	movf	??_DCmotors_setPWM^0,w,c
  9647  002A' 6E00'              	movwf	___wmul@multiplier^0,c
  9648  002C' 6A00'              	clrf	(___wmul@multiplier+1)^0,c
  9649  002E' EE20 F007          	lfsr	2,7
  9650  0032' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9651  0034' 26D9               	addwf	fsr2l,f,c
  9652  0036' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9653  0038' 22DA               	addwfc	fsr2h,f,c
  9654  003A' CFDE F00C'         	movff	postinc2,___wmul@multiplicand
  9655  003E' CFDD F00D'         	movff	postdec2,___wmul@multiplicand+1
  9656  0042' EC00' F000'        	call	___wmul	;wreg free
  9657  0046' C00A' F010'        	movff	?___wmul,___awdiv@dividend
  9658  004A' C00B' F011'        	movff	?___wmul+1,___awdiv@dividend+1
  9659  004E' 0E00               	movlw	0
  9660  0050' 6E00'              	movwf	(___awdiv@divisor+1)^0,c
  9661  0052' 0E64               	movlw	100
  9662  0054' 6E00'              	movwf	___awdiv@divisor^0,c
  9663  0056' EC00' F000'        	call	___awdiv	;wreg free
  9664  005A' EE20 F007          	lfsr	2,7
  9665  005E' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9666  0060' 26D9               	addwf	fsr2l,f,c
  9667  0062' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9668  0064' 22DA               	addwfc	fsr2h,f,c
  9669  0066' CFDE F01B'         	movff	postinc2,??_DCmotors_setPWM+1
  9670  006A' CFDD F01C'         	movff	postdec2,??_DCmotors_setPWM+2
  9671  006E' 5000'              	movf	?___awdiv^0,w,c
  9672  0070' 5C00'              	subwf	(??_DCmotors_setPWM+1)^0,w,c
  9673  0072' 6E00'              	movwf	DCmotors_setPWM@PWMduty^0,c
  9674  0074' 5000'              	movf	(?___awdiv+1)^0,w,c
  9675  0076' 5800'              	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  9676  0078' 6E00'              	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  9677  007A' EF00' F000'        	goto	l3345
  9678  007E'                    l3343:
  9679  007E' C018' FFD9         	movff	DCmotors_setPWM@m,fsr2l
  9680  0082' C019' FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  9681  0086' 50DF               	movf	indf2,w,c
  9682  0088' 6E00'              	movwf	??_DCmotors_setPWM^0,c
  9683  008A' 5000'              	movf	??_DCmotors_setPWM^0,w,c
  9684  008C' 6E00'              	movwf	___wmul@multiplier^0,c
  9685  008E' 6A00'              	clrf	(___wmul@multiplier+1)^0,c
  9686  0090' EE20 F007          	lfsr	2,7
  9687  0094' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9688  0096' 26D9               	addwf	fsr2l,f,c
  9689  0098' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9690  009A' 22DA               	addwfc	fsr2h,f,c
  9691  009C' CFDE F00C'         	movff	postinc2,___wmul@multiplicand
  9692  00A0' CFDD F00D'         	movff	postdec2,___wmul@multiplicand+1
  9693  00A4' EC00' F000'        	call	___wmul	;wreg free
  9694  00A8' C00A' F010'        	movff	?___wmul,___awdiv@dividend
  9695  00AC' C00B' F011'        	movff	?___wmul+1,___awdiv@dividend+1
  9696  00B0' 0E00               	movlw	0
  9697  00B2' 6E00'              	movwf	(___awdiv@divisor+1)^0,c
  9698  00B4' 0E64               	movlw	100
  9699  00B6' 6E00'              	movwf	___awdiv@divisor^0,c
  9700  00B8' EC00' F000'        	call	___awdiv	;wreg free
  9701  00BC' C010' F021'        	movff	?___awdiv,DCmotors_setPWM@PWMduty
  9702  00C0' C011' F022'        	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  9703  00C4'                    l3345:
  9704                           
  9705                           ;DC_motors.c: 55:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  9706  00C4' EE20 F002          	lfsr	2,2
  9707  00C8' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9708  00CA' 26D9               	addwf	fsr2l,f,c
  9709  00CC' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9710  00CE' 22DA               	addwfc	fsr2h,f,c
  9711  00D0' CFDE F01A'         	movff	postinc2,??_DCmotors_setPWM
  9712  00D4' CFDD F01B'         	movff	postdec2,??_DCmotors_setPWM+1
  9713  00D8' C01A' FFD9         	movff	??_DCmotors_setPWM,fsr2l
  9714  00DC' C01B' FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  9715  00E0' C021' FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  9716  00E4'                    
  9717                           ;DC_motors.c: 57:  if (m->direction){*(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<
      +                          <(m->dir_pin)));}
  9718  00E4' EE20 F001          	lfsr	2,1
  9719  00E8' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9720  00EA' 26D9               	addwf	fsr2l,f,c
  9721  00EC' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9722  00EE' 22DA               	addwfc	fsr2h,f,c
  9723  00F0' 50DF               	movf	indf2,w,c
  9724  00F2' B4D8               	btfsc	status,2,c
  9725  00F4' EF00' F000'        	goto	u2901
  9726  00F8' EF00' F000'        	goto	u2900
  9727  00FC'                    u2901:
  9728  00FC' EF00' F000'        	goto	l3351
  9729  0100'                    u2900:
  9730  0100' EE20 F004          	lfsr	2,4
  9731  0104' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9732  0106' 26D9               	addwf	fsr2l,f,c
  9733  0108' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9734  010A' 22DA               	addwfc	fsr2h,f,c
  9735  010C' CFDE F01A'         	movff	postinc2,??_DCmotors_setPWM
  9736  0110' CFDD F01B'         	movff	postdec2,??_DCmotors_setPWM+1
  9737  0114' C01A' FFD9         	movff	??_DCmotors_setPWM,fsr2l
  9738  0118' C01B' FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  9739  011C' EE10 F004          	lfsr	1,4
  9740  0120' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9741  0122' 26E1               	addwf	fsr1l,f,c
  9742  0124' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9743  0126' 22E2               	addwfc	fsr1h,f,c
  9744  0128' CFE6 F01C'         	movff	postinc1,??_DCmotors_setPWM+2
  9745  012C' CFE5 F01D'         	movff	postdec1,??_DCmotors_setPWM+3
  9746  0130' C01C' FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  9747  0134' C01D' FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  9748  0138' 50E7               	movf	indf1,w,c
  9749  013A' 6E00'              	movwf	(??_DCmotors_setPWM+4)^0,c
  9750  013C' EE10 F006          	lfsr	1,6
  9751  0140' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9752  0142' 26E1               	addwf	fsr1l,f,c
  9753  0144' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9754  0146' 22E2               	addwfc	fsr1h,f,c
  9755  0148' 50E7               	movf	indf1,w,c
  9756  014A' 6E00'              	movwf	(??_DCmotors_setPWM+5)^0,c
  9757  014C' 0E01               	movlw	1
  9758  014E' 6E00'              	movwf	(??_DCmotors_setPWM+6)^0,c
  9759  0150' 2A00'              	incf	(??_DCmotors_setPWM+5)^0,f,c
  9760  0152' EF00' F000'        	goto	u2914
  9761  0156'                    u2915:
  9762  0156' 90D8               	bcf	status,0,c
  9763  0158' 3600'              	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  9764  015A'                    u2914:
  9765  015A' 2E00'              	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  9766  015C' EF00' F000'        	goto	u2915
  9767  0160' 5000'              	movf	(??_DCmotors_setPWM+6)^0,w,c
  9768  0162' 1000'              	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  9769  0164' 6EDF               	movwf	indf2,c
  9770  0166' EF00' F000'        	goto	l629
  9771  016A'                    l3351:
  9772  016A' EE20 F004          	lfsr	2,4
  9773  016E' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9774  0170' 26D9               	addwf	fsr2l,f,c
  9775  0172' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9776  0174' 22DA               	addwfc	fsr2h,f,c
  9777  0176' CFDE F01A'         	movff	postinc2,??_DCmotors_setPWM
  9778  017A' CFDD F01B'         	movff	postdec2,??_DCmotors_setPWM+1
  9779  017E' C01A' FFD9         	movff	??_DCmotors_setPWM,fsr2l
  9780  0182' C01B' FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  9781  0186' EE10 F004          	lfsr	1,4
  9782  018A' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9783  018C' 26E1               	addwf	fsr1l,f,c
  9784  018E' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9785  0190' 22E2               	addwfc	fsr1h,f,c
  9786  0192' CFE6 F01C'         	movff	postinc1,??_DCmotors_setPWM+2
  9787  0196' CFE5 F01D'         	movff	postdec1,??_DCmotors_setPWM+3
  9788  019A' C01C' FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  9789  019E' C01D' FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  9790  01A2' 50E7               	movf	indf1,w,c
  9791  01A4' 6E00'              	movwf	(??_DCmotors_setPWM+4)^0,c
  9792  01A6' EE10 F006          	lfsr	1,6
  9793  01AA' 5000'              	movf	DCmotors_setPWM@m^0,w,c
  9794  01AC' 26E1               	addwf	fsr1l,f,c
  9795  01AE' 5000'              	movf	(DCmotors_setPWM@m+1)^0,w,c
  9796  01B0' 22E2               	addwfc	fsr1h,f,c
  9797  01B2' 50E7               	movf	indf1,w,c
  9798  01B4' 6E00'              	movwf	(??_DCmotors_setPWM+5)^0,c
  9799  01B6' 0E01               	movlw	1
  9800  01B8' 6E00'              	movwf	(??_DCmotors_setPWM+6)^0,c
  9801  01BA' 2A00'              	incf	(??_DCmotors_setPWM+5)^0,f,c
  9802  01BC' EF00' F000'        	goto	u2924
  9803  01C0'                    u2925:
  9804  01C0' 90D8               	bcf	status,0,c
  9805  01C2' 3600'              	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  9806  01C4'                    u2924:
  9807  01C4' 2E00'              	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  9808  01C6' EF00' F000'        	goto	u2925
  9809  01CA' 5000'              	movf	(??_DCmotors_setPWM+6)^0,w,c
  9810  01CC' 0AFF               	xorlw	255
  9811  01CE' 1400'              	andwf	(??_DCmotors_setPWM+4)^0,w,c
  9812  01D0' 6EDF               	movwf	indf2,c
  9813  01D2'                    l629:
  9814  01D2' 0012               	return		;funcret
  9815  01D4'                    __end_of_DCmotors_setPWM:
  9816                           	callstack 0
  9817                           
  9818 ;; *************** function ___wmul *****************
  9819 ;; Defined at:
  9820 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  multiplier      2   10[COMRAM] unsigned int 
  9823 ;;  multiplicand    2   12[COMRAM] unsigned int 
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  product         2   14[COMRAM] unsigned int 
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  2   10[COMRAM] unsigned int 
  9828 ;; Registers used:
  9829 ;;		wreg, status,2, status,0, prodl, prodh
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9839 ;;Total ram usage:        6 bytes
  9840 ;; Hardware stack levels used: 1
  9841 ;; Hardware stack levels required when called: 7
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		_DCmotors_setPWM
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text49
  9850  0000'                    __ptext49:
  9851                           	callstack 0
  9852  0000'                    ___wmul:
  9853                           	callstack 21
  9854  0000' 5000'              	movf	___wmul@multiplier^0,w,c
  9855  0002' 0200'              	mulwf	___wmul@multiplicand^0,c
  9856  0004' CFF3 F00E'         	movff	prodl,___wmul@product
  9857  0008' CFF4 F00F'         	movff	prodh,___wmul@product+1
  9858  000C' 5000'              	movf	___wmul@multiplier^0,w,c
  9859  000E' 0200'              	mulwf	(___wmul@multiplicand+1)^0,c
  9860  0010' 50F3               	movf	243,w,c
  9861  0012' 2600'              	addwf	(___wmul@product+1)^0,f,c
  9862  0014' 5000'              	movf	(___wmul@multiplier+1)^0,w,c
  9863  0016' 0200'              	mulwf	___wmul@multiplicand^0,c
  9864  0018' 50F3               	movf	243,w,c
  9865  001A' 2600'              	addwf	(___wmul@product+1)^0,f,c
  9866  001C' C00E' F00A'        	movff	___wmul@product,?___wmul
  9867  0020' C00F' F00B'        	movff	___wmul@product+1,?___wmul+1
  9868  0024' 0012               	return		;funcret
  9869  0026'                    __end_of___wmul:
  9870                           	callstack 0
  9871                           
  9872 ;; *************** function ___awdiv *****************
  9873 ;; Defined at:
  9874 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;  dividend        2   16[COMRAM] int 
  9877 ;;  divisor         2   18[COMRAM] int 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;  quotient        2   22[COMRAM] int 
  9880 ;;  sign            1   21[COMRAM] unsigned char 
  9881 ;;  counter         1   20[COMRAM] unsigned char 
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  2   16[COMRAM] int 
  9884 ;; Registers used:
  9885 ;;		wreg, status,2, status,0
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9892 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9894 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9895 ;;Total ram usage:        8 bytes
  9896 ;; Hardware stack levels used: 1
  9897 ;; Hardware stack levels required when called: 7
  9898 ;; This function calls:
  9899 ;;		Nothing
  9900 ;; This function is called by:
  9901 ;;		_DCmotors_setPWM
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           	psect	text50
  9906  0000'                    __ptext50:
  9907                           	callstack 0
  9908  0000'                    ___awdiv:
  9909                           	callstack 21
  9910  0000' 0E00               	movlw	0
  9911  0002' 6E00'              	movwf	___awdiv@sign^0,c
  9912  0004' BE00'              	btfsc	(___awdiv@divisor+1)^0,7,c
  9913  0006' EF00' F000'        	goto	u2810
  9914  000A' EF00' F000'        	goto	u2811
  9915  000E'                    u2811:
  9916  000E' EF00' F000'        	goto	l3299
  9917  0012'                    u2810:
  9918  0012' 6C00'              	negf	___awdiv@divisor^0,c
  9919  0014' 1E00'              	comf	(___awdiv@divisor+1)^0,f,c
  9920  0016' B0D8               	btfsc	status,0,c
  9921  0018' 2A00'              	incf	(___awdiv@divisor+1)^0,f,c
  9922  001A' 0E01               	movlw	1
  9923  001C' 6E00'              	movwf	___awdiv@sign^0,c
  9924  001E'                    l3299:
  9925  001E' BE00'              	btfsc	(___awdiv@dividend+1)^0,7,c
  9926  0020' EF00' F000'        	goto	u2820
  9927  0024' EF00' F000'        	goto	u2821
  9928  0028'                    u2821:
  9929  0028' EF00' F000'        	goto	l3305
  9930  002C'                    u2820:
  9931  002C' 6C00'              	negf	___awdiv@dividend^0,c
  9932  002E' 1E00'              	comf	(___awdiv@dividend+1)^0,f,c
  9933  0030' B0D8               	btfsc	status,0,c
  9934  0032' 2A00'              	incf	(___awdiv@dividend+1)^0,f,c
  9935  0034' 0E01               	movlw	1
  9936  0036' 1A00'              	xorwf	___awdiv@sign^0,f,c
  9937  0038'                    l3305:
  9938  0038' 0E00               	movlw	0
  9939  003A' 6E00'              	movwf	(___awdiv@quotient+1)^0,c
  9940  003C' 0E00               	movlw	0
  9941  003E' 6E00'              	movwf	___awdiv@quotient^0,c
  9942  0040' 5000'              	movf	___awdiv@divisor^0,w,c
  9943  0042' 1000'              	iorwf	(___awdiv@divisor+1)^0,w,c
  9944  0044' B4D8               	btfsc	status,2,c
  9945  0046' EF00' F000'        	goto	u2831
  9946  004A' EF00' F000'        	goto	u2830
  9947  004E'                    u2831:
  9948  004E' EF00' F000'        	goto	l3327
  9949  0052'                    u2830:
  9950  0052' 0E01               	movlw	1
  9951  0054' 6E00'              	movwf	___awdiv@counter^0,c
  9952  0056' EF00' F000'        	goto	l3313
  9953  005A'                    l3311:
  9954  005A' 90D8               	bcf	status,0,c
  9955  005C' 3600'              	rlcf	___awdiv@divisor^0,f,c
  9956  005E' 3600'              	rlcf	(___awdiv@divisor+1)^0,f,c
  9957  0060' 2A00'              	incf	___awdiv@counter^0,f,c
  9958  0062'                    l3313:
  9959  0062' AE00'              	btfss	(___awdiv@divisor+1)^0,7,c
  9960  0064' EF00' F000'        	goto	u2841
  9961  0068' EF00' F000'        	goto	u2840
  9962  006C'                    u2841:
  9963  006C' EF00' F000'        	goto	l3311
  9964  0070'                    u2840:
  9965  0070'                    l3315:
  9966  0070' 90D8               	bcf	status,0,c
  9967  0072' 3600'              	rlcf	___awdiv@quotient^0,f,c
  9968  0074' 3600'              	rlcf	(___awdiv@quotient+1)^0,f,c
  9969  0076' 5000'              	movf	___awdiv@divisor^0,w,c
  9970  0078' 5C00'              	subwf	___awdiv@dividend^0,w,c
  9971  007A' 5000'              	movf	(___awdiv@divisor+1)^0,w,c
  9972  007C' 5800'              	subwfb	(___awdiv@dividend+1)^0,w,c
  9973  007E' A0D8               	btfss	status,0,c
  9974  0080' EF00' F000'        	goto	u2851
  9975  0084' EF00' F000'        	goto	u2850
  9976  0088'                    u2851:
  9977  0088' EF00' F000'        	goto	l3323
  9978  008C'                    u2850:
  9979  008C' 5000'              	movf	___awdiv@divisor^0,w,c
  9980  008E' 5E00'              	subwf	___awdiv@dividend^0,f,c
  9981  0090' 5000'              	movf	(___awdiv@divisor+1)^0,w,c
  9982  0092' 5A00'              	subwfb	(___awdiv@dividend+1)^0,f,c
  9983  0094' 8000'              	bsf	___awdiv@quotient^0,0,c
  9984  0096'                    l3323:
  9985  0096' 90D8               	bcf	status,0,c
  9986  0098' 3200'              	rrcf	(___awdiv@divisor+1)^0,f,c
  9987  009A' 3200'              	rrcf	___awdiv@divisor^0,f,c
  9988  009C' 2E00'              	decfsz	___awdiv@counter^0,f,c
  9989  009E' EF00' F000'        	goto	l3315
  9990  00A2'                    l3327:
  9991  00A2' 5000'              	movf	___awdiv@sign^0,w,c
  9992  00A4' B4D8               	btfsc	status,2,c
  9993  00A6' EF00' F000'        	goto	u2861
  9994  00AA' EF00' F000'        	goto	u2860
  9995  00AE'                    u2861:
  9996  00AE' EF00' F000'        	goto	l3331
  9997  00B2'                    u2860:
  9998  00B2' 6C00'              	negf	___awdiv@quotient^0,c
  9999  00B4' 1E00'              	comf	(___awdiv@quotient+1)^0,f,c
 10000  00B6' B0D8               	btfsc	status,0,c
 10001  00B8' 2A00'              	incf	(___awdiv@quotient+1)^0,f,c
 10002  00BA'                    l3331:
 10003  00BA' C016' F010'        	movff	___awdiv@quotient,?___awdiv
 10004  00BE' C017' F011'        	movff	___awdiv@quotient+1,?___awdiv+1
 10005  00C2' 0012               	return		;funcret
 10006  00C4'                    __end_of___awdiv:
 10007                           	callstack 0
 10008                           
 10009 ;; *************** function _adjdelay *****************
 10010 ;; Defined at:
 10011 ;;		line 379 in file "DC_motors.c"
 10012 ;; Parameters:    Size  Location     Type
 10013 ;;  mode            1    wreg     unsigned char 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;  mode            1   12[COMRAM] unsigned char 
 10016 ;;  i               1   13[COMRAM] unsigned char 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      void 
 10019 ;; Registers used:
 10020 ;;		wreg, status,2, status,0
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10030 ;;Total ram usage:        4 bytes
 10031 ;; Hardware stack levels used: 1
 10032 ;; Hardware stack levels required when called: 7
 10033 ;; This function calls:
 10034 ;;		Nothing
 10035 ;; This function is called by:
 10036 ;;		_DCmotors_calibration
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text51
 10041  0000'                    __ptext51:
 10042                           	callstack 0
 10043  0000'                    _adjdelay:
 10044                           	callstack 22
 10045                           
 10046                           ;incstack = 0
 10047                           ;adjdelay@mode stored from wreg
 10048  0000' 6E00'              	movwf	adjdelay@mode^0,c
 10049  0002'                    
 10050                           ;DC_motors.c: 380:     unsigned char i;;DC_motors.c: 381:     for (i=0; i<10; i++) {
 10051  0002' 0E00               	movlw	0
 10052  0004' 6E00'              	movwf	adjdelay@i^0,c
 10053  0006'                    l4319:
 10054                           
 10055                           ;DC_motors.c: 382:         if (mode==1){
 10056  0006' 0400'              	decf	adjdelay@mode^0,w,c
 10057  0008' A4D8               	btfss	status,2,c
 10058  000A' EF00' F000'        	goto	u4311
 10059  000E' EF00' F000'        	goto	u4310
 10060  0012'                    u4311:
 10061  0012' EF00' F000'        	goto	l4345
 10062  0016'                    u4310:
 10063  0016'                    
 10064                           ;DC_motors.c: 383:             if (!PORTFbits.RF2 && PORTFbits.RF3) {
 10065  0016' B48E               	btfsc	142,2,c	;volatile
 10066  0018' EF00' F000'        	goto	u4321
 10067  001C' EF00' F000'        	goto	u4320
 10068  0020'                    u4321:
 10069  0020' EF00' F000'        	goto	l765
 10070  0024'                    u4320:
 10071  0024' A68E               	btfss	142,3,c	;volatile
 10072  0026' EF00' F000'        	goto	u4331
 10073  002A' EF00' F000'        	goto	u4330
 10074  002E'                    u4331:
 10075  002E' EF00' F000'        	goto	l765
 10076  0032'                    u4330:
 10077  0032'                    
 10078                           ;DC_motors.c: 384:                 LATDbits.LATD7 = 1;
 10079  0032' 8E7C               	bsf	124,7,c	;volatile
 10080  0034'                    
 10081                           ;DC_motors.c: 385:                 turnright_calangle -= 5;
 10082  0034' 0EFB               	movlw	251
 10083  0036' 2600'              	addwf	_turnright_calangle^0,f,c	;volatile
 10084  0038' 0EFF               	movlw	255
 10085  003A' 2200'              	addwfc	(_turnright_calangle+1)^0,f,c	;volatile
 10086  003C'                    
 10087                           ;DC_motors.c: 386:                 _delay((unsigned long)((800)*(64000000/4000.0)));
 10088  003C' 0E41               	movlw	65
 10089  003E' 6E00'              	movwf	(??_adjdelay+1)^0,c
 10090  0040' 0EF0               	movlw	240
 10091  0042' 6E00'              	movwf	??_adjdelay^0,c
 10092  0044' 0E33               	movlw	51
 10093  0046'                    u7497:
 10094  0046' 2EE8               	decfsz	wreg,f,c
 10095  0048' D7FE               	bra	u7497
 10096  004A' 2E00'              	decfsz	??_adjdelay^0,f,c
 10097  004C' D7FC               	bra	u7497
 10098  004E' 2E00'              	decfsz	(??_adjdelay+1)^0,f,c
 10099  0050' D7FA               	bra	u7497
 10100  0052' F000               	nop	
 10101  0054'                    
 10102                           ;DC_motors.c: 387:                 LATDbits.LATD7 = 0;
 10103  0054' 9E7C               	bcf	124,7,c	;volatile
 10104                           
 10105                           ;DC_motors.c: 388:             } else if (!PORTFbits.RF3 && PORTFbits.RF2) {
 10106  0056' EF00' F000'        	goto	l4343
 10107  005A'                    l765:
 10108  005A' B68E               	btfsc	142,3,c	;volatile
 10109  005C' EF00' F000'        	goto	u4341
 10110  0060' EF00' F000'        	goto	u4340
 10111  0064'                    u4341:
 10112  0064' EF00' F000'        	goto	l4343
 10113  0068'                    u4340:
 10114  0068' A48E               	btfss	142,2,c	;volatile
 10115  006A' EF00' F000'        	goto	u4351
 10116  006E' EF00' F000'        	goto	u4350
 10117  0072'                    u4351:
 10118  0072' EF00' F000'        	goto	l4343
 10119  0076'                    u4350:
 10120  0076'                    
 10121                           ;DC_motors.c: 389:                 LATHbits.LATH3 = 1;
 10122  0076' 8680               	bsf	128,3,c	;volatile
 10123  0078'                    
 10124                           ;DC_motors.c: 390:                 turnright_calangle += 5;
 10125  0078' 0E05               	movlw	5
 10126  007A' 2600'              	addwf	_turnright_calangle^0,f,c	;volatile
 10127  007C' 0E00               	movlw	0
 10128  007E' 2200'              	addwfc	(_turnright_calangle+1)^0,f,c	;volatile
 10129  0080'                    
 10130                           ;DC_motors.c: 391:                 _delay((unsigned long)((800)*(64000000/4000.0)));
 10131  0080' 0E41               	movlw	65
 10132  0082' 6E00'              	movwf	(??_adjdelay+1)^0,c
 10133  0084' 0EF0               	movlw	240
 10134  0086' 6E00'              	movwf	??_adjdelay^0,c
 10135  0088' 0E33               	movlw	51
 10136  008A'                    u7507:
 10137  008A' 2EE8               	decfsz	wreg,f,c
 10138  008C' D7FE               	bra	u7507
 10139  008E' 2E00'              	decfsz	??_adjdelay^0,f,c
 10140  0090' D7FC               	bra	u7507
 10141  0092' 2E00'              	decfsz	(??_adjdelay+1)^0,f,c
 10142  0094' D7FA               	bra	u7507
 10143  0096' F000               	nop	
 10144  0098'                    
 10145                           ;DC_motors.c: 392:                 LATHbits.LATH3 = 0;
 10146  0098' 9680               	bcf	128,3,c	;volatile
 10147  009A'                    l4343:
 10148                           
 10149                           ;DC_motors.c: 394:             _delay((unsigned long)((200)*(64000000/4000.0)));
 10150  009A' 0E11               	movlw	17
 10151  009C' 6E00'              	movwf	(??_adjdelay+1)^0,c
 10152  009E' 0E3C               	movlw	60
 10153  00A0' 6E00'              	movwf	??_adjdelay^0,c
 10154  00A2' 0ECB               	movlw	203
 10155  00A4'                    u7517:
 10156  00A4' 2EE8               	decfsz	wreg,f,c
 10157  00A6' D7FE               	bra	u7517
 10158  00A8' 2E00'              	decfsz	??_adjdelay^0,f,c
 10159  00AA' D7FC               	bra	u7517
 10160  00AC' 2E00'              	decfsz	(??_adjdelay+1)^0,f,c
 10161  00AE' D7FA               	bra	u7517
 10162  00B0' F000               	nop	
 10163                           
 10164                           ;DC_motors.c: 396:         } else if (mode==2) {
 10165  00B2' EF00' F000'        	goto	l4371
 10166  00B6'                    l4345:
 10167  00B6' 0E02               	movlw	2
 10168  00B8' 1800'              	xorwf	adjdelay@mode^0,w,c
 10169  00BA' A4D8               	btfss	status,2,c
 10170  00BC' EF00' F000'        	goto	u4361
 10171  00C0' EF00' F000'        	goto	u4360
 10172  00C4'                    u4361:
 10173  00C4' EF00' F000'        	goto	l4371
 10174  00C8'                    u4360:
 10175  00C8'                    
 10176                           ;DC_motors.c: 397:             if (!PORTFbits.RF3 && PORTFbits.RF2) {
 10177  00C8' B68E               	btfsc	142,3,c	;volatile
 10178  00CA' EF00' F000'        	goto	u4371
 10179  00CE' EF00' F000'        	goto	u4370
 10180  00D2'                    u4371:
 10181  00D2' EF00' F000'        	goto	l770
 10182  00D6'                    u4370:
 10183  00D6' A48E               	btfss	142,2,c	;volatile
 10184  00D8' EF00' F000'        	goto	u4381
 10185  00DC' EF00' F000'        	goto	u4380
 10186  00E0'                    u4381:
 10187  00E0' EF00' F000'        	goto	l770
 10188  00E4'                    u4380:
 10189  00E4'                    
 10190                           ;DC_motors.c: 398:                 LATHbits.LATH3 = 1;
 10191  00E4' 8680               	bsf	128,3,c	;volatile
 10192  00E6'                    
 10193                           ;DC_motors.c: 399:                 turnleft_calangle -= 5;
 10194  00E6' 0EFB               	movlw	251
 10195  00E8' 2600'              	addwf	_turnleft_calangle^0,f,c	;volatile
 10196  00EA' 0EFF               	movlw	255
 10197  00EC' 2200'              	addwfc	(_turnleft_calangle+1)^0,f,c	;volatile
 10198  00EE'                    
 10199                           ;DC_motors.c: 400:                 _delay((unsigned long)((800)*(64000000/4000.0)));
 10200  00EE' 0E41               	movlw	65
 10201  00F0' 6E00'              	movwf	(??_adjdelay+1)^0,c
 10202  00F2' 0EF0               	movlw	240
 10203  00F4' 6E00'              	movwf	??_adjdelay^0,c
 10204  00F6' 0E33               	movlw	51
 10205  00F8'                    u7527:
 10206  00F8' 2EE8               	decfsz	wreg,f,c
 10207  00FA' D7FE               	bra	u7527
 10208  00FC' 2E00'              	decfsz	??_adjdelay^0,f,c
 10209  00FE' D7FC               	bra	u7527
 10210  0100' 2E00'              	decfsz	(??_adjdelay+1)^0,f,c
 10211  0102' D7FA               	bra	u7527
 10212  0104' F000               	nop	
 10213  0106'                    
 10214                           ;DC_motors.c: 401:                 LATHbits.LATH3 = 0;
 10215  0106' 9680               	bcf	128,3,c	;volatile
 10216                           
 10217                           ;DC_motors.c: 402:             } else if (!PORTFbits.RF2 && PORTFbits.RF3) {
 10218  0108' EF00' F000'        	goto	l4343
 10219  010C'                    l770:
 10220  010C' B48E               	btfsc	142,2,c	;volatile
 10221  010E' EF00' F000'        	goto	u4391
 10222  0112' EF00' F000'        	goto	u4390
 10223  0116'                    u4391:
 10224  0116' EF00' F000'        	goto	l4343
 10225  011A'                    u4390:
 10226  011A' A68E               	btfss	142,3,c	;volatile
 10227  011C' EF00' F000'        	goto	u4401
 10228  0120' EF00' F000'        	goto	u4400
 10229  0124'                    u4401:
 10230  0124' EF00' F000'        	goto	l4343
 10231  0128'                    u4400:
 10232  0128'                    
 10233                           ;DC_motors.c: 403:                 LATDbits.LATD7 = 1;
 10234  0128' 8E7C               	bsf	124,7,c	;volatile
 10235  012A'                    
 10236                           ;DC_motors.c: 404:                 turnleft_calangle += 5;
 10237  012A' 0E05               	movlw	5
 10238  012C' 2600'              	addwf	_turnleft_calangle^0,f,c	;volatile
 10239  012E' 0E00               	movlw	0
 10240  0130' 2200'              	addwfc	(_turnleft_calangle+1)^0,f,c	;volatile
 10241  0132'                    
 10242                           ;DC_motors.c: 405:                 _delay((unsigned long)((800)*(64000000/4000.0)));
 10243  0132' 0E41               	movlw	65
 10244  0134' 6E00'              	movwf	(??_adjdelay+1)^0,c
 10245  0136' 0EF0               	movlw	240
 10246  0138' 6E00'              	movwf	??_adjdelay^0,c
 10247  013A' 0E33               	movlw	51
 10248  013C'                    u7537:
 10249  013C' 2EE8               	decfsz	wreg,f,c
 10250  013E' D7FE               	bra	u7537
 10251  0140' 2E00'              	decfsz	??_adjdelay^0,f,c
 10252  0142' D7FC               	bra	u7537
 10253  0144' 2E00'              	decfsz	(??_adjdelay+1)^0,f,c
 10254  0146' D7FA               	bra	u7537
 10255  0148' F000               	nop	
 10256  014A'                    
 10257                           ;DC_motors.c: 406:                 LATDbits.LATD7 = 0;
 10258  014A' 9E7C               	bcf	124,7,c	;volatile
 10259  014C' EF00' F000'        	goto	l4343
 10260  0150'                    l4371:
 10261                           
 10262                           ;DC_motors.c: 410:     }
 10263  0150' 2A00'              	incf	adjdelay@i^0,f,c
 10264  0152' 0E09               	movlw	9
 10265  0154' 6400'              	cpfsgt	adjdelay@i^0,c
 10266  0156' EF00' F000'        	goto	u4411
 10267  015A' EF00' F000'        	goto	u4410
 10268  015E'                    u4411:
 10269  015E' EF00' F000'        	goto	l4319
 10270  0162'                    u4410:
 10271  0162' 0012               	return		;funcret
 10272  0164'                    __end_of_adjdelay:
 10273                           	callstack 0
 10274                           
 10275 ;; *************** function _ADC_init *****************
 10276 ;; Defined at:
 10277 ;;		line 8 in file "ADC.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;		None
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  1    wreg      void 
 10284 ;; Registers used:
 10285 ;;		wreg, status,2
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10295 ;;Total ram usage:        0 bytes
 10296 ;; Hardware stack levels used: 1
 10297 ;; Hardware stack levels required when called: 7
 10298 ;; This function calls:
 10299 ;;		Nothing
 10300 ;; This function is called by:
 10301 ;;		_main
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text52
 10306  0000'                    __ptext52:
 10307                           	callstack 0
 10308  0000'                    _ADC_init:
 10309                           	callstack 23
 10310  0000'                    
 10311                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 10312  0000' 8C86               	bsf	134,6,c	;volatile
 10313                           
 10314                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 10315  0002' 010E               	movlb	14	; () banked
 10316  0004' 8DB4               	bsf	180,6,b	;volatile
 10317                           
 10318                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 10319  0006' 010F               	movlb	15	; () banked
 10320  0008' 9958               	bcf	88,4,b	;volatile
 10321  000A'                    
 10322                           ; BSR set to: 15
 10323                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 10324  000A' 0EFC               	movlw	-4
 10325  000C' 1758               	andwf	88,f,b	;volatile
 10326                           
 10327                           ;ADC.c: 16:     ADPCH=0b101110;
 10328  000E' 0E2E               	movlw	46
 10329  0010' 6F5F               	movwf	95,b	;volatile
 10330  0012'                    
 10331                           ; BSR set to: 15
 10332                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 10333  0012' 9460               	bcf	96,2,c	;volatile
 10334  0014'                    
 10335                           ; BSR set to: 15
 10336                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 10337  0014' 8860               	bsf	96,4,c	;volatile
 10338  0016'                    
 10339                           ; BSR set to: 15
 10340                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 10341  0016' 8E60               	bsf	96,7,c	;volatile
 10342  0018'                    
 10343                           ; BSR set to: 15
 10344  0018' 0012               	return		;funcret
 10345  001A'                    __end_of_ADC_init:
 10346                           	callstack 0
 10347                           
 10348 ;; *************** function _LowISR *****************
 10349 ;; Defined at:
 10350 ;;		line 77 in file "interrupts.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;		None
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;		None
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  1    wreg      void 
 10357 ;; Registers used:
 10358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10366 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10367 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10368 ;;Total ram usage:        5 bytes
 10369 ;; Hardware stack levels used: 1
 10370 ;; Hardware stack levels required when called: 6
 10371 ;; This function calls:
 10372 ;;		Nothing
 10373 ;; This function is called by:
 10374 ;;		Interrupt level 1
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           	psect	intcodelo
 10379  0000'                    __pintcodelo:
 10380                           	callstack 0
 10381  0000'                    _LowISR:
 10382                           	callstack 17
 10383                           
 10384                           ; BSR set to: 15
 10385                           ;incstack = 0
 10386  0000' 8000'              	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 10387  0002' CFD8 F005'         	movff	status,??_LowISR
 10388  0006' CFE8 F006'         	movff	wreg,??_LowISR+1
 10389  000A' CFE0 F007'         	movff	bsr,??_LowISR+2
 10390  000E' CFD9 F008'         	movff	fsr2l,??_LowISR+3
 10391  0012' CFDA F009'         	movff	fsr2h,??_LowISR+4
 10392  0016'                    
 10393                           ;interrupts.c: 78:     if (PIR0bits.TMR0IF) {
 10394  0016' 010E               	movlb	14	; () banked
 10395  0018' AB33               	btfss	51,5,b	;volatile
 10396  001A' EF00' F000'        	goto	i1u228_21
 10397  001E' EF00' F000'        	goto	i1u228_20
 10398  0022'                    i1u228_21:
 10399  0022' EF00' F000'        	goto	i1l169
 10400  0026'                    i1u228_20:
 10401  0026'                    
 10402                           ; BSR set to: 14
 10403                           ;interrupts.c: 80:         tmp++;
 10404  0026' EE20' F000'        	lfsr	2,_tmp
 10405  002A' 2ADE               	incf	postinc2,f,c
 10406  002C' 0E00               	movlw	0
 10407  002E' 22DD               	addwfc	postdec2,f,c
 10408  0030'                    
 10409                           ; BSR set to: 14
 10410                           ;interrupts.c: 81:         TMR0H=0b00111100;
 10411  0030' 0E3C               	movlw	60
 10412  0032' 6ED4               	movwf	212,c	;volatile
 10413  0034'                    
 10414                           ; BSR set to: 14
 10415                           ;interrupts.c: 82:         TMR0L=0b10101111;
 10416  0034' 0EAF               	movlw	175
 10417  0036' 6ED3               	movwf	211,c	;volatile
 10418  0038'                    
 10419                           ; BSR set to: 14
 10420                           ;interrupts.c: 83:         PIR0bits.TMR0IF = 0;
 10421  0038' 9B33               	bcf	51,5,b	;volatile
 10422  003A'                    i1l169:
 10423                           
 10424                           ; BSR set to: 14
 10425  003A' C009' FFDA         	movff	??_LowISR+4,fsr2h
 10426  003E' C008' FFD9         	movff	??_LowISR+3,fsr2l
 10427  0042' C007' FFE0         	movff	??_LowISR+2,bsr
 10428  0046' C006' FFE8         	movff	??_LowISR+1,wreg
 10429  004A' C005' FFD8         	movff	??_LowISR,status
 10430  004E' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10431  0050' 0010               	retfie	
 10432  0052'                    __end_of_LowISR:
 10433                           	callstack 0
 10434                           
 10435 ;; *************** function _HighISR *****************
 10436 ;; Defined at:
 10437 ;;		line 64 in file "interrupts.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;		None
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;		None
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  1    wreg      void 
 10444 ;; Registers used:
 10445 ;;		wreg, status,2, status,0, cstack
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10455 ;;Total ram usage:        0 bytes
 10456 ;; Hardware stack levels used: 1
 10457 ;; Hardware stack levels required when called: 5
 10458 ;; This function calls:
 10459 ;;		i2_interrupts_clear
 10460 ;; This function is called by:
 10461 ;;		Interrupt level 2
 10462 ;; This function uses a non-reentrant model
 10463 ;;
 10464                           
 10465                           	psect	intcode
 10466  0000'                    __pintcode:
 10467                           	callstack 0
 10468  0000'                    _HighISR:
 10469                           	callstack 17
 10470                           
 10471                           ; BSR set to: 14
 10472                           ;incstack = 0
 10473  0000' 8200'              	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10474  0002' EF00' F000'        	goto	int_func
 10475                           
 10476                           	psect	intcode_body
 10477  0000'                    __pintcode_body:
 10478                           	callstack 17
 10479  0000'                    int_func:
 10480                           	callstack 17
 10481  0000'                    
 10482                           ;interrupts.c: 65:     if (PIR0bits.INT1IF) {
 10483  0000' 010E               	movlb	14	; () banked
 10484  0002' A333               	btfss	51,1,b	;volatile
 10485  0004' EF00' F000'        	goto	i2u506_41
 10486  0008' EF00' F000'        	goto	i2u506_40
 10487  000C'                    i2u506_41:
 10488  000C' EF00' F000'        	goto	i2l163
 10489  0010'                    i2u506_40:
 10490  0010'                    
 10491                           ; BSR set to: 14
 10492                           ;interrupts.c: 66:         colourcard_flag = 1;
 10493  0010' 0E01               	movlw	1
 10494  0012' 0100               	movlb	0	; () banked
 10495  0014' 6F00'              	movwf	_colourcard_flag& (0+255),b	;volatile
 10496  0016'                    
 10497                           ; BSR set to: 0
 10498                           ;interrupts.c: 68:         interrupts_clear();
 10499  0016' EC00' F000'        	call	i2_interrupts_clear	;wreg free
 10500  001A'                    
 10501                           ;interrupts.c: 69:         PIR0bits.INT1IF = 0;
 10502  001A' 010E               	movlb	14	; () banked
 10503  001C' 9333               	bcf	51,1,b	;volatile
 10504  001E'                    i2l163:
 10505                           
 10506                           ; BSR set to: 14
 10507  001E' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10508  0020' 0011               	retfie		f
 10509  0022'                    __end_of_HighISR:
 10510                           	callstack 0
 10511                           
 10512 ;; *************** function i2_interrupts_clear *****************
 10513 ;; Defined at:
 10514 ;;		line 37 in file "interrupts.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;		None
 10517 ;; Auto vars:     Size  Location     Type
 10518 ;;		None
 10519 ;; Return value:  Size  Location     Type
 10520 ;;                  1    wreg      void 
 10521 ;; Registers used:
 10522 ;;		wreg, status,2, status,0, cstack
 10523 ;; Tracked objects:
 10524 ;;		On entry : 0/0
 10525 ;;		On exit  : 0/0
 10526 ;;		Unchanged: 0/0
 10527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10532 ;;Total ram usage:        0 bytes
 10533 ;; Hardware stack levels used: 1
 10534 ;; Hardware stack levels required when called: 4
 10535 ;; This function calls:
 10536 ;;		i2_I2C_2_Master_Start
 10537 ;;		i2_I2C_2_Master_Stop
 10538 ;;		i2_I2C_2_Master_Write
 10539 ;;		i2_interrupts_colourclick
 10540 ;; This function is called by:
 10541 ;;		_HighISR
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text55
 10546  0000'                    __ptext55:
 10547                           	callstack 0
 10548  0000'                    i2_interrupts_clear:
 10549                           	callstack 17
 10550  0000'                    
 10551                           ;interrupts.c: 38:     I2C_2_Master_Start();
 10552  0000' EC00' F000'        	call	i2_I2C_2_Master_Start	;wreg free
 10553                           
 10554                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
 10555  0004' 0E52               	movlw	82
 10556  0006' EC00' F000'        	call	i2_I2C_2_Master_Write
 10557                           
 10558                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
 10559  000A' 0EE6               	movlw	230
 10560  000C' EC00' F000'        	call	i2_I2C_2_Master_Write
 10561                           
 10562                           ;interrupts.c: 41:     I2C_2_Master_Stop();
 10563  0010' EC00' F000'        	call	i2_I2C_2_Master_Stop	;wreg free
 10564                           
 10565                           ;interrupts.c: 43:     interrupts_colourclick();
 10566  0014' EC00' F000'        	call	i2_interrupts_colourclick	;wreg free
 10567  0018' 0012               	return		;funcret
 10568  001A'                    __end_ofi2_interrupts_clear:
 10569                           	callstack 0
 10570                           
 10571 ;; *************** function i2_interrupts_colourclick *****************
 10572 ;; Defined at:
 10573 ;;		line 50 in file "interrupts.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;		None
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;		None
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  1    wreg      void 
 10580 ;; Registers used:
 10581 ;;		wreg, status,2, status,0, cstack
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10591 ;;Total ram usage:        1 bytes
 10592 ;; Hardware stack levels used: 1
 10593 ;; Hardware stack levels required when called: 3
 10594 ;; This function calls:
 10595 ;;		i2_colourclick_writetoaddr
 10596 ;; This function is called by:
 10597 ;;		i2_interrupts_clear
 10598 ;; This function uses a non-reentrant model
 10599 ;;
 10600                           
 10601                           	psect	text56
 10602  0000'                    __ptext56:
 10603                           	callstack 0
 10604  0000'                    i2_interrupts_colourclick:
 10605                           	callstack 17
 10606  0000'                    
 10607                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
 10608  0000' 0E13               	movlw	19
 10609  0002' 6E00'              	movwf	i2colourclick_writetoaddr@value^0,c
 10610  0004' 0E00               	movlw	0
 10611  0006' EC00' F000'        	call	i2_colourclick_writetoaddr
 10612  000A'                    
 10613                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10614  000A' 0E3F               	movlw	63
 10615  000C' 6E00'              	movwf	??i2_interrupts_colourclick^0,c
 10616  000E' 0E55               	movlw	85
 10617  0010'                    i2u754_47:
 10618  0010' 2EE8               	decfsz	wreg,f,c
 10619  0012' D7FE               	bra	i2u754_47
 10620  0014' 2E00'              	decfsz	??i2_interrupts_colourclick^0,f,c
 10621  0016' D7FC               	bra	i2u754_47
 10622  0018' F000               	nop	
 10623  001A'                    
 10624                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
 10625  001A' 0E04               	movlw	4
 10626  001C' 6E00'              	movwf	i2colourclick_writetoaddr@value^0,c
 10627  001E' 0E0C               	movlw	12
 10628  0020' EC00' F000'        	call	i2_colourclick_writetoaddr
 10629  0024'                    
 10630                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
 10631  0024' C002' F002'        	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
 10632  0028' 0E04               	movlw	4
 10633  002A' EC00' F000'        	call	i2_colourclick_writetoaddr
 10634  002E'                    
 10635                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
 10636  002E' 5000'              	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
 10637  0030' 6E00'              	movwf	i2colourclick_writetoaddr@value^0,c
 10638  0032' 0E05               	movlw	5
 10639  0034' EC00' F000'        	call	i2_colourclick_writetoaddr
 10640  0038'                    
 10641                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
 10642  0038' C000' F002'        	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
 10643  003C' 0E06               	movlw	6
 10644  003E' EC00' F000'        	call	i2_colourclick_writetoaddr
 10645  0042'                    
 10646                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
 10647  0042' 5000'              	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
 10648  0044' 6E00'              	movwf	i2colourclick_writetoaddr@value^0,c
 10649  0046' 0E07               	movlw	7
 10650  0048' EC00' F000'        	call	i2_colourclick_writetoaddr
 10651  004C' 0012               	return		;funcret
 10652  004E'                    __end_ofi2_interrupts_colourclick:
 10653                           	callstack 0
 10654                           
 10655 ;; *************** function i2_colourclick_writetoaddr *****************
 10656 ;; Defined at:
 10657 ;;		line 33 in file "colour_click.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;  address         1    wreg     unsigned char 
 10660 ;;  value           1    2[COMRAM] unsigned char 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  address         1    3[COMRAM] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10672 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10676 ;;Total ram usage:        2 bytes
 10677 ;; Hardware stack levels used: 1
 10678 ;; Hardware stack levels required when called: 2
 10679 ;; This function calls:
 10680 ;;		i2_I2C_2_Master_Start
 10681 ;;		i2_I2C_2_Master_Stop
 10682 ;;		i2_I2C_2_Master_Write
 10683 ;; This function is called by:
 10684 ;;		i2_interrupts_colourclick
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688                           	psect	text57
 10689  0000'                    __ptext57:
 10690                           	callstack 0
 10691  0000'                    i2_colourclick_writetoaddr:
 10692                           	callstack 17
 10693                           
 10694                           ;incstack = 0
 10695                           ;i2colourclick_writetoaddr@address stored from wreg
 10696  0000' 6E00'              	movwf	i2colourclick_writetoaddr@address^0,c
 10697  0002'                    
 10698                           ;colour_click.c: 34:     I2C_2_Master_Start();
 10699  0002' EC00' F000'        	call	i2_I2C_2_Master_Start	;wreg free
 10700                           
 10701                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
 10702  0006' 0E52               	movlw	82
 10703  0008' EC00' F000'        	call	i2_I2C_2_Master_Write
 10704                           
 10705                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
 10706  000C' 5000'              	movf	i2colourclick_writetoaddr@address^0,w,c
 10707  000E' 0980               	iorlw	128
 10708  0010' EC00' F000'        	call	i2_I2C_2_Master_Write
 10709                           
 10710                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
 10711  0014' 5000'              	movf	i2colourclick_writetoaddr@value^0,w,c
 10712  0016' EC00' F000'        	call	i2_I2C_2_Master_Write
 10713                           
 10714                           ;colour_click.c: 38:     I2C_2_Master_Stop();
 10715  001A' EC00' F000'        	call	i2_I2C_2_Master_Stop	;wreg free
 10716  001E' 0012               	return		;funcret
 10717  0020'                    __end_ofi2_colourclick_writetoaddr:
 10718                           	callstack 0
 10719                           
 10720 ;; *************** function i2_I2C_2_Master_Write *****************
 10721 ;; Defined at:
 10722 ;;		line 64 in file "I2C.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;  data_byte       1    wreg     unsigned char 
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  data_byte       1    1[COMRAM] unsigned char 
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		wreg, status,2, status,0, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;Total ram usage:        1 bytes
 10741 ;; Hardware stack levels used: 1
 10742 ;; Hardware stack levels required when called: 1
 10743 ;; This function calls:
 10744 ;;		i2_I2C_2_Master_Idle
 10745 ;; This function is called by:
 10746 ;;		i2_interrupts_clear
 10747 ;;		i2_colourclick_writetoaddr
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text58
 10752  0000'                    __ptext58:
 10753                           	callstack 0
 10754  0000'                    i2_I2C_2_Master_Write:
 10755                           	callstack 17
 10756                           
 10757                           ;incstack = 0
 10758                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 10759  0000' 6E00'              	movwf	i2I2C_2_Master_Write@data_byte^0,c
 10760  0002'                    
 10761                           ;I2C.c: 65:   I2C_2_Master_Idle();
 10762  0002' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
 10763  0006'                    
 10764                           ;I2C.c: 66:   SSP2BUF = data_byte;
 10765  0006' C001' FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 10766  000A' 0012               	return		;funcret
 10767  000C'                    __end_ofi2_I2C_2_Master_Write:
 10768                           	callstack 0
 10769                           
 10770 ;; *************** function i2_I2C_2_Master_Stop *****************
 10771 ;; Defined at:
 10772 ;;		line 55 in file "I2C.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;		None
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0, cstack
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;Total ram usage:        0 bytes
 10791 ;; Hardware stack levels used: 1
 10792 ;; Hardware stack levels required when called: 1
 10793 ;; This function calls:
 10794 ;;		i2_I2C_2_Master_Idle
 10795 ;; This function is called by:
 10796 ;;		i2_interrupts_clear
 10797 ;;		i2_colourclick_writetoaddr
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text59
 10802  0000'                    __ptext59:
 10803                           	callstack 0
 10804  0000'                    i2_I2C_2_Master_Stop:
 10805                           	callstack 17
 10806  0000'                    
 10807                           ;I2C.c: 56:   I2C_2_Master_Idle();
 10808  0000' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
 10809  0004'                    
 10810                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
 10811  0004' 010E               	movlb	14	; () banked
 10812  0006' 85DA               	bsf	218,2,b	;volatile
 10813  0008'                    
 10814                           ; BSR set to: 14
 10815  0008' 0012               	return		;funcret
 10816  000A'                    __end_ofi2_I2C_2_Master_Stop:
 10817                           	callstack 0
 10818                           
 10819 ;; *************** function i2_I2C_2_Master_Start *****************
 10820 ;; Defined at:
 10821 ;;		line 37 in file "I2C.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;		None
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  1    wreg      void 
 10828 ;; Registers used:
 10829 ;;		wreg, status,2, status,0, cstack
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10839 ;;Total ram usage:        0 bytes
 10840 ;; Hardware stack levels used: 1
 10841 ;; Hardware stack levels required when called: 1
 10842 ;; This function calls:
 10843 ;;		i2_I2C_2_Master_Idle
 10844 ;; This function is called by:
 10845 ;;		i2_interrupts_clear
 10846 ;;		i2_colourclick_writetoaddr
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           	psect	text60
 10851  0000'                    __ptext60:
 10852                           	callstack 0
 10853  0000'                    i2_I2C_2_Master_Start:
 10854                           	callstack 17
 10855  0000'                    
 10856                           ;I2C.c: 38:   I2C_2_Master_Idle();
 10857  0000' EC00' F000'        	call	i2_I2C_2_Master_Idle	;wreg free
 10858  0004'                    
 10859                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
 10860  0004' 010E               	movlb	14	; () banked
 10861  0006' 81DA               	bsf	218,0,b	;volatile
 10862  0008'                    
 10863                           ; BSR set to: 14
 10864  0008' 0012               	return		;funcret
 10865  000A'                    __end_ofi2_I2C_2_Master_Start:
 10866                           	callstack 0
 10867                           
 10868 ;; *************** function i2_I2C_2_Master_Idle *****************
 10869 ;; Defined at:
 10870 ;;		line 29 in file "I2C.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;		None
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;		None
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg, status,2, status,0
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10888 ;;Total ram usage:        1 bytes
 10889 ;; Hardware stack levels used: 1
 10890 ;; This function calls:
 10891 ;;		Nothing
 10892 ;; This function is called by:
 10893 ;;		i2_I2C_2_Master_Start
 10894 ;;		i2_I2C_2_Master_Stop
 10895 ;;		i2_I2C_2_Master_Write
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           	psect	text61
 10900  0000'                    __ptext61:
 10901                           	callstack 0
 10902  0000'                    i2_I2C_2_Master_Idle:
 10903                           	callstack 17
 10904  0000'                    i2l486:
 10905  0000' 010E               	movlb	14	; () banked
 10906  0002' B5D8               	btfsc	216,2,b	;volatile
 10907  0004' EF00' F000'        	goto	i2u395_41
 10908  0008' EF00' F000'        	goto	i2u395_40
 10909  000C'                    i2u395_41:
 10910  000C' EF00' F000'        	goto	i2l486
 10911  0010'                    i2u395_40:
 10912  0010'                    
 10913                           ; BSR set to: 14
 10914  0010' CEDA F000'         	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 10915  0014' 0E1F               	movlw	31
 10916  0016' 1600'              	andwf	??i2_I2C_2_Master_Idle^0,f,c
 10917  0018' A4D8               	btfss	status,2,c
 10918  001A' EF00' F000'        	goto	i2u396_41
 10919  001E' EF00' F000'        	goto	i2u396_40
 10920  0022'                    i2u396_41:
 10921  0022' EF00' F000'        	goto	i2l486
 10922  0026'                    i2u396_40:
 10923  0026'                    
 10924                           ; BSR set to: 14
 10925  0026' 0012               	return		;funcret
 10926  0028'                    __end_ofi2_I2C_2_Master_Idle:
 10927                           	callstack 0
 10928                           
 10929                           	psect	rparam
 10930  0000                     
 10931                           	psect	temp
 10932  0000'                    btemp:
 10933                           	callstack 0
 10934  0000'                    	ds	1
 10935  0000                     int$flags	set	btemp
 10936  0000                     wtemp8	set	btemp+1
 10937  0000                     ttemp5	set	btemp+1
 10938  0000                     ttemp6	set	btemp+4
 10939  0000                     ttemp7	set	btemp+8
 10940                           
 10941                           	psect	idloc
 10942                           
 10943                           ;Config register IDLOC0 @ 0x200000
 10944                           ;	unspecified, using default values
 10945  200000                     	org	2097152
 10946  200000  0FFF               	dw	4095
 10947                           
 10948                           ;Config register IDLOC1 @ 0x200002
 10949                           ;	unspecified, using default values
 10950  200002                     	org	2097154
 10951  200002  0FFF               	dw	4095
 10952                           
 10953                           ;Config register IDLOC2 @ 0x200004
 10954                           ;	unspecified, using default values
 10955  200004                     	org	2097156
 10956  200004  0FFF               	dw	4095
 10957                           
 10958                           ;Config register IDLOC3 @ 0x200006
 10959                           ;	unspecified, using default values
 10960  200006                     	org	2097158
 10961  200006  0FFF               	dw	4095
 10962                           
 10963                           ;Config register IDLOC4 @ 0x200008
 10964                           ;	unspecified, using default values
 10965  200008                     	org	2097160
 10966  200008  0FFF               	dw	4095
 10967                           
 10968                           ;Config register IDLOC5 @ 0x20000A
 10969                           ;	unspecified, using default values
 10970  20000A                     	org	2097162
 10971  20000A  0FFF               	dw	4095
 10972                           
 10973                           ;Config register IDLOC6 @ 0x20000C
 10974                           ;	unspecified, using default values
 10975  20000C                     	org	2097164
 10976  20000C  0FFF               	dw	4095
 10977                           
 10978                           ;Config register IDLOC7 @ 0x20000E
 10979                           ;	unspecified, using default values
 10980  20000E                     	org	2097166
 10981  20000E  0FFF               	dw	4095
 10982                           
 10983                           	psect	config
 10984                           
 10985                           ;Config register CONFIG1L @ 0x300000
 10986                           ;	External Oscillator mode Selection bits
 10987                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10988                           ;	Power-up default value for COSC bits
 10989                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10990  300000                     	org	3145728
 10991  300000  AA                 	db	170
 10992                           
 10993                           ;Config register CONFIG1H @ 0x300001
 10994                           ;	unspecified, using default values
 10995                           ;	Clock Out Enable bit
 10996                           ;	CLKOUTEN = 0x1, unprogrammed default
 10997                           ;	Clock Switch Enable bit
 10998                           ;	CSWEN = 0x1, unprogrammed default
 10999                           ;	Fail-Safe Clock Monitor Enable bit
 11000                           ;	FCMEN = 0x1, unprogrammed default
 11001  300001                     	org	3145729
 11002  300001  FF                 	db	255
 11003                           
 11004                           ;Config register CONFIG2L @ 0x300002
 11005                           ;	unspecified, using default values
 11006                           ;	Master Clear Enable bit
 11007                           ;	MCLRE = 0x1, unprogrammed default
 11008                           ;	Power-up Timer Enable bit
 11009                           ;	PWRTE = 0x1, unprogrammed default
 11010                           ;	Low-power BOR enable bit
 11011                           ;	LPBOREN = 0x1, unprogrammed default
 11012                           ;	Brown-out Reset Enable bits
 11013                           ;	BOREN = 0x3, unprogrammed default
 11014  300002                     	org	3145730
 11015  300002  FF                 	db	255
 11016                           
 11017                           ;Config register CONFIG2H @ 0x300003
 11018                           ;	unspecified, using default values
 11019                           ;	Brown Out Reset Voltage selection bits
 11020                           ;	BORV = 0x3, unprogrammed default
 11021                           ;	ZCD Disable bit
 11022                           ;	ZCD = 0x1, unprogrammed default
 11023                           ;	PPSLOCK bit One-Way Set Enable bit
 11024                           ;	PPS1WAY = 0x1, unprogrammed default
 11025                           ;	Stack Full/Underflow Reset Enable bit
 11026                           ;	STVREN = 0x1, unprogrammed default
 11027                           ;	Debugger Enable bit
 11028                           ;	DEBUG = 0x1, unprogrammed default
 11029                           ;	Extended Instruction Set Enable bit
 11030                           ;	XINST = 0x1, unprogrammed default
 11031  300003                     	org	3145731
 11032  300003  FF                 	db	255
 11033                           
 11034                           ;Config register CONFIG3L @ 0x300004
 11035                           ;	WDT Period Select bits
 11036                           ;	WDTCPS = 0x1F, unprogrammed default
 11037                           ;	WDT operating mode
 11038                           ;	WDTE = OFF, WDT Disabled
 11039  300004                     	org	3145732
 11040  300004  9F                 	db	159
 11041                           
 11042                           ;Config register CONFIG3H @ 0x300005
 11043                           ;	unspecified, using default values
 11044                           ;	WDT Window Select bits
 11045                           ;	WDTCWS = 0x7, unprogrammed default
 11046                           ;	WDT input clock selector
 11047                           ;	WDTCCS = 0x7, unprogrammed default
 11048  300005                     	org	3145733
 11049  300005  FF                 	db	255
 11050                           
 11051                           ;Config register CONFIG4L @ 0x300006
 11052                           ;	unspecified, using default values
 11053                           ;	Write Protection Block 0
 11054                           ;	WRT0 = 0x1, unprogrammed default
 11055                           ;	Write Protection Block 1
 11056                           ;	WRT1 = 0x1, unprogrammed default
 11057                           ;	Write Protection Block 2
 11058                           ;	WRT2 = 0x1, unprogrammed default
 11059                           ;	Write Protection Block 3
 11060                           ;	WRT3 = 0x1, unprogrammed default
 11061                           ;	Write Protection Block 3
 11062                           ;	WRT4 = 0x1, unprogrammed default
 11063                           ;	Write Protection Block 3
 11064                           ;	WRT5 = 0x1, unprogrammed default
 11065                           ;	Write Protection Block 3
 11066                           ;	WRT6 = 0x1, unprogrammed default
 11067                           ;	Write Protection Block 3
 11068                           ;	WRT7 = 0x1, unprogrammed default
 11069  300006                     	org	3145734
 11070  300006  FF                 	db	255
 11071                           
 11072                           ;Config register CONFIG4H @ 0x300007
 11073                           ;	unspecified, using default values
 11074                           ;	Configuration Register Write Protection bit
 11075                           ;	WRTC = 0x1, unprogrammed default
 11076                           ;	Boot Block Write Protection bit
 11077                           ;	WRTB = 0x1, unprogrammed default
 11078                           ;	Data EEPROM Write Protection bit
 11079                           ;	WRTD = 0x1, unprogrammed default
 11080                           ;	Scanner Enable bit
 11081                           ;	SCANE = 0x1, unprogrammed default
 11082                           ;	Low Voltage Programming Enable bit
 11083                           ;	LVP = 0x1, unprogrammed default
 11084  300007                     	org	3145735
 11085  300007  FF                 	db	255
 11086                           
 11087                           ;Config register CONFIG5L @ 0x300008
 11088                           ;	unspecified, using default values
 11089                           ;	UserNVM Program Memory Code Protection bit
 11090                           ;	CP = 0x1, unprogrammed default
 11091                           ;	DataNVM Memory Code Protection bit
 11092                           ;	CPD = 0x1, unprogrammed default
 11093  300008                     	org	3145736
 11094  300008  FF                 	db	255
 11095                           
 11096                           ;Config register CONFIG5H @ 0x300009
 11097                           ;	unspecified, using default values
 11098  300009                     	org	3145737
 11099  300009  FF                 	db	255
 11100                           
 11101                           ;Config register CONFIG6L @ 0x30000A
 11102                           ;	unspecified, using default values
 11103                           ;	Table Read Protection Block 0
 11104                           ;	EBTR0 = 0x1, unprogrammed default
 11105                           ;	Table Read Protection Block 1
 11106                           ;	EBTR1 = 0x1, unprogrammed default
 11107                           ;	Table Read Protection Block 2
 11108                           ;	EBTR2 = 0x1, unprogrammed default
 11109                           ;	Table Read Protection Block 3
 11110                           ;	EBTR3 = 0x1, unprogrammed default
 11111                           ;	Table Read Protection Block 4
 11112                           ;	EBTR4 = 0x1, unprogrammed default
 11113                           ;	Table Read Protection Block 5
 11114                           ;	EBTR5 = 0x1, unprogrammed default
 11115                           ;	Table Read Protection Block 6
 11116                           ;	EBTR6 = 0x1, unprogrammed default
 11117                           ;	Table Read Protection Block 7
 11118                           ;	EBTR7 = 0x1, unprogrammed default
 11119  30000A                     	org	3145738
 11120  30000A  FF                 	db	255
 11121                           
 11122                           ;Config register CONFIG6H @ 0x30000B
 11123                           ;	unspecified, using default values
 11124                           ;	Boot Block Table Read Protection bit
 11125                           ;	EBTRB = 0x1, unprogrammed default
 11126  30000B                     	org	3145739
 11127  30000B  FF                 	db	255
 11128                           tosu	equ	0xFFF
 11129                           tosh	equ	0xFFE
 11130                           tosl	equ	0xFFD
 11131                           stkptr	equ	0xFFC
 11132                           pclatu	equ	0xFFB
 11133                           pclath	equ	0xFFA
 11134                           pcl	equ	0xFF9
 11135                           tblptru	equ	0xFF8
 11136                           tblptrh	equ	0xFF7
 11137                           tblptrl	equ	0xFF6
 11138                           tablat	equ	0xFF5
 11139                           prodh	equ	0xFF4
 11140                           prodl	equ	0xFF3
 11141                           indf0	equ	0xFEF
 11142                           postinc0	equ	0xFEE
 11143                           postdec0	equ	0xFED
 11144                           preinc0	equ	0xFEC
 11145                           plusw0	equ	0xFEB
 11146                           fsr0h	equ	0xFEA
 11147                           fsr0l	equ	0xFE9
 11148                           wreg	equ	0xFE8
 11149                           indf1	equ	0xFE7
 11150                           postinc1	equ	0xFE6
 11151                           postdec1	equ	0xFE5
 11152                           preinc1	equ	0xFE4
 11153                           plusw1	equ	0xFE3
 11154                           fsr1h	equ	0xFE2
 11155                           fsr1l	equ	0xFE1
 11156                           bsr	equ	0xFE0
 11157                           indf2	equ	0xFDF
 11158                           postinc2	equ	0xFDE
 11159                           postdec2	equ	0xFDD
 11160                           preinc2	equ	0xFDC
 11161                           plusw2	equ	0xFDB
 11162                           fsr2h	equ	0xFDA
 11163                           fsr2l	equ	0xFD9
 11164                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         93
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      84
    BANK0           160     87     134
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2971_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC2@buf(BANK0[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC2@buf(BANK0[100]), 

    DCmotors_calibration@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    DCmotors_calibration@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    returnhome@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    returnhome@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseinstructions@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseinstructions@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    instructions@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    instructions@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnright@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnright@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnright@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnleft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnleft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    clearance@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    clearance@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC2@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S29$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S29$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_DCmotors_calibration
    _reverseinstructions->_instructions
    _interrupts_clear->_interrupts_colourclick
    _interrupts_colourclick->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourclick_calibration->_colourclick_readRGBC
    _colourcards_readRGBC->_instructions
    _instructions->_turnleft
    _instructions->_turnright
    _clearance->_stop
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    _checkbatterylevel->_colourclickLEDs_RGB
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->___fldiv
    _turnleft->___fldiv
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fldiv->___fladd
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colourclick
    i2_interrupts_colourclick->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourcards_readRGBC
    _returnhome->_reverseinstructions
    _reverseinstructions->_instructions
    _colourcards_readRGBC->_instructions
    _instructions->_turnleft
    _instructions->_turnright
    _colourcards_normaliseRGBC->___fldiv
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->___fldiv
    _turnleft->___fldiv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  285564
                                             58 BANK0     29    29      0
                           _ADC_init
               _DCmotors_calibration
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
               _colourclick_readRGBC
                            _forward
                    _interrupts_init
                         _returnhome
                            _reverse
                               _stop
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _returnhome                                           9     5      4  126835
                                             44 BANK0      9     5      4
                            _reverse
                _reverseinstructions
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseinstructions                                  6     2      4  115864
                                             38 BANK0      6     2      4
                            _forward
                       _instructions
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
             _interrupts_colourclick
 ---------------------------------------------------------------------------------
 (3) _interrupts_colourclick                               1     1      0     750
                                             14 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     816
                                             14 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     750
                                             12 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             10    10      0    1290
                                             23 COMRAM    10    10      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6   92533
                                             38 BANK0     20    14      6
                             ___flge
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                       _instructions
                               _stop
 ---------------------------------------------------------------------------------
 (3) _instructions                                         7     2      5   65364
                                             74 COMRAM     2     2      0
                                             33 BANK0      5     0      5
                          _clearance
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (4) _clearance                                            6     2      4   10666
                                             41 COMRAM     6     2      4
                            _reverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse                                              5     1      4    3183
                                             35 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _forward                                              5     1      4    2727
                                             35 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2258
                                             23 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourclick_readRGBC                                 2     0      2    1148
                                             21 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (2) _colourclick_readR                                    7     5      2     113
                                             14 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readG                                    7     5      2     113
                                             14 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readC                                    7     5      2     113
                                             14 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readB                                    7     5      2     113
                                             14 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                             11 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                             11 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    5812
                                             17 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    2     2      0      46
                                             12 COMRAM     2     2      0
                         _ADC_getval
                _colourclickLEDs_RGB
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_RGB                                  2     2      0       0
                                             10 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                             10 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_calibration                                 7     3      4   47655
                                             74 COMRAM     2     2      0
                                             33 BANK0      5     1      4
                           _adjdelay
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (3) _turnright                                           17    11      6   20014
                                             73 COMRAM     1     1      0
                                             17 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _turnleft                                            17    11      6   19744
                                             73 COMRAM     1     1      0
                                             17 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1234
                                             10 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2200
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    5958
                                             24 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2723
                                             65 COMRAM     8     0      8
                                              0 BANK0     17    17      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2540
                                             49 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    7091
                                             35 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    1943
                                             24 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             16 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _adjdelay                                             4     4      0      90
                                             10 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowISR                                               5     5      0       0
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     244
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (10) i2_interrupts_clear                                  0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
           i2_interrupts_colourclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_colourclick                            1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (12) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_calibration
     _adjdelay
     _stop
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _turnleft
       _DCmotors_setPWM
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flge
         ___xxtofl (ARG)
       ___flmul
       ___xxtofl
     _turnright
       _DCmotors_setPWM
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___xxtofl
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
     _colourclickLEDs_RGB
   _colourcards_readRGBC
     ___flge
     _colourcards_normaliseRGBC
       ___fldiv
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _instructions
       _clearance
         _reverse
           _DCmotors_setPWM
         _stop
       _reverse
       _stop
       _turnleft
       _turnright
     _stop
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colourclick_readRGBC
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colourclick
         _colourclick_writetoaddr
   _returnhome
     _reverse
     _reverseinstructions
       _forward
       _instructions
       _stop
       _turnleft
       _turnright
     _stop
   _reverse
   _stop
   _timer0_init

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colourclick
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     57      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      54       1       89.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     102       8        0.0%
DATA                 0      0     102       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 10:57:48 2021

      colourcards_normaliseRGBC@rel 000013         colourclick_readRGBC2@tmpval 000017  
                      ___fldiv@aexp 000010                        ___fldiv@bexp 00000F  
                      ___fldiv@sign 000008                                  l92 000286  
                                l85 0000BA                                  l89 0000D6  
             __end_of_DCmotors_init 000050                        ___awdiv@sign 000015  
                                bsr 000FE0                 ___wmul@multiplicand 00000C  
                               l151 000022                                 l306 00017A  
                               l154 000018                                 l411 000010  
                               l412 000016                                 l260 0005CE  
                               l501 00000A                                 l157 00004C  
                               l406 000018                                 l504 000040  
                               l352 00001E                                 l441 00000A  
                               l409 000002                                 l361 00004E  
                               l257 0005BC                                 l450 00009C  
                               l355 00004E                                 l444 000008  
                               l364 00004E                                 l453 000020  
                               l349 000036                                 l622 00004E  
                               l358 00004E                                 l382 00001C  
                               l367 00005C                                 l375 000154  
                               l383 00002C                                 l447 00000C  
                               l456 000014                                 l704 0002D4  
                               l384 00003C                                 l720 000298  
                               l529 00001E                                 l385 0000A4  
                               l378 000000                                 l714 000298  
                               l730 0000F6                                 l483 000028  
                               l740 000072                                 l492 000008  
                               l629 0001D2                                 l733 000006  
                               l750 00021A                                 l638 000110  
                               l486 000000                                 l646 00008C  
                               l654 00008C                                 l495 000008  
                               l744 00008E                                 l665 000088  
                               l745 000112                                 l489 000026  
                               l657 00005C                                 l770 00010C  
                               l754 000236                                 l738 0002B6  
                               l498 000008                                 l842 00001E  
                               l675 000202                                 l755 00025E  
                               l739 000026                                 l676 000204  
                               l773 000162                                 l765 00005A  
                               l845 000024                                 l749 00012E  
                               l686 000202                                 l687 000204  
                               l759 0002C8                                 l698 0002D4  
                               _dur 000000                                 _tmp 000000* 
                      returnhome@mL 00002C                        returnhome@mR 00002E  
                               prod 000FF3                                 wreg 000FE8  
                      ___flmul@aexp 000029                        ___flmul@bexp 00002A  
                      ___flmul@sign 000024                        ___flmul@temp 00002F  
             ?_colourclick_readRGBC 000015                        ___flmul@prod 00002B  
               __size_of_ADC_getval 000000                                l1110 0000BC  
                              l1115 000102                                l1400 0003C6  
                              l1076 0000C2                                l1500 000056  
                              l1503 0001B2                                l1440 0002B8  
                              l1432 0001BE                                l1441 0002A6  
                              l1514 00014A                                l1427 00039A  
                              l1507 0000EE                                l3301 00002C  
                              l1373 0001EE                                l1429 0001FA  
                              l4101 000038                                l1390 000308  
                              l1382 0004BE                                l1374 0001DC  
                              l1438 000240                                l3311 00005A  
                              l3303 000034                                l1375 0001A2  
                              l1463 000428                                l4103 000042  
                              l3321 000094                                l3313 000062  
                              l3305 000038                                l5001 00003E  
                              l3401 000002                                l4201 0000B6  
                              l1466 0002BA                                l3331 0000BA  
                              l3323 000096                                l3315 000070  
                              l3307 000040                                l5011 00006E  
                              l5003 00004E                                l1459 0000C4  
                              l3411 00003E                                l3403 000006  
                              l4211 0000F2                                l4203 0000C2  
                              l1476 0003EA                                l1468 000332  
                              l3325 00009C                                l3317 000076  
                              l3309 000052                                l3341 00001C  
                              l3501 00019A                                l3421 00001C  
                              l5101 0002E2                                l5021 0000A4  
                              l5013 000074                                l5005 000050  
                              l1469 000320                                l3405 00000E  
                              l4213 0000F4                                l4205 0000DA  
                              l3319 00008C                                l3327 0000A2  
                              l3351 00016A                                l3343 00007E  
                              l1399 0003D8                                l3511 0001D0  
                              l3503 0001B0                                l3423 00002C  
                              l3431 000056                                l3415 000000  
                              l5111 00035A                                l5103 00030C  
                              l5031 0000E4                                l5023 0000B4  
                              l5015 000082                                l5007 000058  
                              l3335 000000                                l3407 000016  
                              l4215 00010C                                l4223 000136  
                              l4231 000010                                l4321 000016  
                              l4313 000002                                l3329 0000B2  
                              l3345 0000C4                                l3361 000036  
                              l3353 000000                                l3601 000482  
                              l3521 000220                                l3513 0001DA  
                              l3505 0001BC                                l3441 000086  
                              l3433 000066                                l3425 00003C  
                              l3417 00000C                                l5121 000390  
                              l5113 000376                                l5105 000310  
                              l5033 0000F4                                l5041 000114  
                              l5025 0000B6                                l5017 000084  
                              l5009 000068                                l4073 000002  
                              l3337 000010                                l3409 00003C  
                              l4225 00013C                                l4217 000118  
                              l4209 0000E0                                l4081 00003C  
                              l5201 000026                                l4233 000012  
                              l4241 000006                                l4401 000004  
                              l4161 000000                                l4331 000054  
                              l4323 000024                                l3291 000000  
                              l3347 0000E4                                l3339 000000  
                              l3355 000006                                l3363 00003E  
                              l3611 0004AC                                l3603 000490  
                              l3531 00025C                                l3523 000230  
                              l3515 0001FC                                l3507 0001C0  
                              l3451 0000C6                                l3443 000094  
                              l3435 00006C                                l3427 00004C  
                              l3419 00001A                                l5115 00037A  
                              l5107 00032A                                l5051 000152  
                              l5043 000124                                l5035 0000FC  
                              l5019 000094                                l5027 0000BE  
                              l5131 0000DA                                l4411 000002  
                              l4075 000000                                l4219 000130  
                              l4083 000048                                l3371 000000  
                              l5211 000090                                l5203 00002C  
                              l4235 000014                                l4227 000000  
                              l4243 000008                                l4403 00000E  
                              l4091 000000                                l4341 000098  
                              l4333 000068                                l4325 000032  
                              l3293 000004                                l3285 000000  
                              l3349 000100                                l3365 000056  
                              l3357 00001E                                l3613 0004AE  
                              l3605 000496                                l3541 0002A2  
                              l3533 00026A                                l3525 00023E  
                              l3517 00020C                                l3509 0001CE  
                              l3461 000100                                l3453 0000C8  
                              l3445 000096                                l3437 00007E  
                              l3429 00004E                                l5117 000388  
                              l5109 000340                                l5061 00019A  
                              l5053 000162                                l5045 000124  
                              l5037 000100                                l5029 0000CE  
                              l5141 000126                                l5133 0000EC  
                              l4253 000000                                l4421 000020  
                              l4413 000016                                l4261 00001A  
                              l4181 00001E                                l4085 000054  
                              l4077 000000                                l3373 000024  
                              l3381 00005C                                l5221 00012E  
                              l5213 0000A2                                l5205 00004A  
                              l4237 000016                                l4229 00000A  
                              l4245 00000A                                l4405 00001E  
                              l4093 00000A                                l5301 000258  
                              l4351 0000E4                                l4335 000076  
                              l4343 00009A                                l4327 000034  
                              l4319 000006                                l3295 000012  
                              l3287 00001C                                l3367 00006E  
                              l3359 00002A                                l3607 000498  
                              l3551 00031E                                l3543 0002D6  
                              l3535 00026C                                l3527 00024C  
                              l3471 000114                                l3463 000104  
                              l3447 0000A6                                l3455 0000D0  
                              l3439 000080                                l5119 00038E  
                              l5071 0001E8                                l5063 0001AE  
                              l5055 000172                                l5143 00013E  
                              l5151 00016A                                l5135 0000FC  
                              l5311 000040                                l4271 000000  
                              l4255 000000                                l4431 00002A  
                              l4423 000022                                l4415 00001A  
                              l4247 000000                                l4263 000034  
                              l3391 000006                                l4191 00006C  
                              l4183 00002E                                l4079 000024  
                              l4087 00005C                                l3383 000074  
                              l3375 00003C                                l5223 000142  
                              l5231 0001BC                                l5215 0000D6  
                              l5207 00004C                                l4239 000000  
                              l4407 000028                                l4095 00001A  
                              l5303 00027C                                l4361 000128  
                              l4353 0000E6                                l4337 000078  
                              l4329 00003C                                l4345 0000B6  
                              l3297 00001A                                l3369 000086  
                              l3609 00049E                                l3561 00035A  
                              l3553 00032E                                l3545 0002D8  
                              l3537 000276                                l3529 000258  
                              l3481 000128                                l3473 000118  
                              l3465 000108                                l3457 0000E0  
                              l3449 0000B6                                l5081 000230  
                              l5073 0001F8                                l5065 0001BC  
                              l5057 000182                                l5049 000138  
                              l3801 000124                                l5161 0001BE  
                              l5153 000182                                l5145 00014A  
                              l5137 000102                                l5129 000000  
                              l5321 0000AE                                l5313 00005E  
                              l5305 000000                                l4441 00004A  
                              l4433 000034                                l4425 000024  
                              l4417 00001C                                l4249 000014  
                              l4265 00004E                                l4257 000000  
                              l3385 000000                                l3393 000000  
                              l4193 00006E                                l4185 000030  
                              l4177 000000                                l4089 000074  
                              l3377 000048                                l5233 0001CE  
                              l5225 00015A                                l5217 0000E8  
                              l5209 00005C                                l5401 000150  
                              l4409 000032                                l4097 000024  
                              l4601 000000                                l4363 00012A  
                              l4355 0000EE                                l4347 0000C8  
                              l4371 000150                                l4339 000080  
                              l3299 00001E                                l3571 000386  
                              l3563 00035C                                l3547 0002E8  
                              l3539 00027C                                l3491 00013C  
                              l3483 00012C                                l3475 00011C  
                              l3467 00010C                                l3459 0000F2  
                              l5091 000270                                l5083 00023E  
                              l5075 00020A                                l5067 0001C8  
                              l5059 00018A                                l3811 00016E  
                              l3803 000130                                l5155 00019A  
                              l5147 000156                                l5139 00011A  
                              l5171 000102                                l5163 000000  
                              l5331 000120                                l5323 0000C6  
                              l5315 000080                                l5307 000014  
                              l4435 000036                                l4427 000026  
                              l4419 00001E                                l4451 000018  
                              l4443 000000                                l4267 000068  
                              l4259 000002                                l5251 000000  
                              l3387 000004                                l3395 000004  
                              l4187 000048                                l4195 00008A  
                              l4179 000006                                l3379 000054  
                              l5235 0001E2                                l5243 000248  
                              l5227 000186                                l5219 00011C  
                              l5411 00023E                                l5403 000182  
                              l4099 00002E                                l4603 000008  
                              l4373 000152                                l4365 000132  
                              l4357 000106                                l4349 0000D6  
                              l3581 0003BE                                l3565 00036A  
                              l3557 000342                                l3573 000388  
                              l3549 0002F8                                l3485 000130  
                              l3477 000120                                l3469 000110  
                              l3493 000140                                l5093 00029E  
                              l5077 000220                                l5085 000250  
                              l5069 0001E6                                l3901 0000FA  
                              l3821 0001C0                                l3813 00017A  
                              l3805 000148                                l5157 0001A8  
                              l5149 000162                                l5181 000156  
                              l5173 00011A                                l5165 0000DA  
                              l5341 000168                                l5333 000130  
                              l5325 0000C8                                l5317 000090  
                              l5309 000028                                l4437 000042  
                              l4429 000028                                l4453 00001A  
                              l4445 00000A                                l4269 000082  
                              l5261 0000AE                                l5253 000010  
                              l3397 000000                                l3389 000002  
                              l4197 00009C                                l4189 000054  
                              l5245 00025A                                l5237 0001FA  
                              l5229 0001A4                                l5413 00025C  
                              l5405 0001B4                                l5421 0002F0  
                              l4605 000012                                l4391 00000A  
                              l4367 00014A                                l4359 00011A  
                              l3591 00043C                                l3567 000372  
                              l3559 00034C                                l3575 000396  
                              l3495 000144                                l3487 000134  
                              l3479 000124                                l5087 00025E  
                              l5079 000226                                l3903 000100  
                              l3831 00023E                                l3823 0001D0  
                              l3815 00018A                                l3807 000154  
                              l3911 000020                                l5159 0001B8  
                              l5191 0001A8                                l5183 000162  
                              l5175 000126                                l5167 0000EC  
                              l5351 0001E8                                l5343 000180  
                              l5335 000148                                l5327 0000E0  
                              l5319 0000A8                                l4439 000046  
                              l4455 00001C                                l4447 00000C  
                              l4471 000102                                l4463 00001A  
                              l5263 000114                                l5255 000026  
                              l3399 000004                                l4199 00009E  
                              l5247 00028E                                l5239 000226  
                              l5431 0003D6                                l5423 000322  
                              l5415 000282                                l5407 0001E6  
                              l4551 000000                                l5271 000064  
                              l5503 0000B4                                l4607 00001C  
                              l5511 00004A                                l4393 000012  
                              l3585 0003E8                                l3593 00043E  
                              l3577 00039A                                l3569 000376  
                              l3497 00016E                                l3489 000138  
                              l5097 0002C8                                l5089 000262  
                              l3841 0002B8                                l3833 000274  
                              l3825 0001EC                                l3817 000196  
                              l3809 000160                                l3761 00001C  
                              l3921 000098                                l3913 000066  
                              l5193 0001B8                                l5177 00013E  
                              l5185 00016A                                l5169 0000FC  
                              l5361 000228                                l5353 0001FC  
                              l5345 00019E                                l5337 00014E  
                              l5329 0000FE                                l4449 00000E  
                              l4465 0000E0                                l4457 000000  
                              l5257 00003A                                l5249 0002A0  
                              l5441 0004BC                                l5433 000408  
                              l5425 000354                                l5417 0002B4  
                              l5409 00020C                                l4561 000044  
                              l4553 00000E                                l5281 0000FE  
                              l5273 000080                                l5265 000000  
                              l5505 0000CE                                l5521 000082  
                              l5513 000052                                l4395 000014  
                              l3595 00044E                                l3587 0003F4  
                              l3579 0003A8                                l3499 00018A  
                              l5099 0002D4                                l3851 000318  
                              l3843 0002CA                                l3835 000282  
                              l3827 0001F8                                l3819 0001A6  
                              l3771 000062                                l3763 00002C  
                              l3755 000000                                l3931 000120  
                              l3923 0000A4                                l3915 00007C  
                              l3907 000002                                l5195 0001BE  
                              l5187 000182                                l5179 00014A  
                              l5371 00027A                                l5363 000244  
                              l5355 0001FE                                l5347 0001B2  
                              l5339 000166                                l4467 0000E4  
                              l4459 000006                                l5259 00004E  
                              l5451 000550                                l5443 0004EE  
                              l5435 00043A                                l5427 000386  
                              l5419 0002D2                                l4571 000088  
                              l4563 00005C                                l4555 00002A  
                              l5291 0001B4                                l5283 000112  
                              l5275 0000A4                                l5267 000024  
                              l5507 0000E2                                l5531 00009C  
                              l5523 00008A                                l5515 00005E  
                              l4397 000016                                l4389 000000  
                              l3597 00045E                                l3589 000402  
                              l3861 000386                                l3845 0002D8  
                              l3837 0002A0                                l3829 000214  
                              l3781 00008E                                l3773 000068  
                              l3765 00003C                                l3757 00000C  
                              l3941 00015E                                l3933 00012C  
                              l3925 0000D6                                l3909 000012  
                              l5189 00019A                                l5381 00029E  
                              l5373 00027C                                l5365 000252  
                              l5357 000216                                l5349 0001CA  
                              l4469 0000F4                                l5197 000000  
                              l5461 0005B4                                l5453 00055C  
                              l5445 0004FC                                l5437 000458  
                              l5429 0003A4                                l4573 00008A  
                              l4565 000068                                l4557 00003A  
                              l4581 000006                                l5293 0001E2  
                              l5285 000162                                l5277 0000C0  
                              l5269 000040                                l5541 0000DE  
                              l5533 0000A0                                l5525 00008E  
                              l5517 00006E                                l5509 000000  
                              l3599 00047E                                l3871 0003EE  
                              l3855 000342                                l3863 00038A  
                              l3847 0002DC                                l3839 0002AA  
                              l3791 0000E4                                l3783 00009E  
                              l3775 00006E                                l3767 00004C  
                              l3759 00001A                                l3943 000182  
                              l3935 00013A                                l3927 0000D8  
                              l3919 000090                                l5375 000282  
                              l5367 000254                                l5359 000218  
                              l5199 000012                                l5463 0005BE  
                              l5455 000580                                l5447 000516  
                              l5439 00048A                                l5391 00008A  
                              l5383 000000                                l4575 00008C  
                              l4567 000080                                l4559 00003E  
                              l4399 000000                                l4591 000016  
                              l4583 00000C                                l5295 000200  
                              l5287 000186                                l5279 0000E4  
                              l5471 000006                                l5551 000126  
                              l5543 0000F8                                l5535 0000B6  
                              l5527 000092                                l5519 000076  
                              l3881 000418                                l3873 0003FE  
                              l3865 0003A4                                l3857 00034E  
                              l3849 0002EA                                l3785 0000AE  
                              l3777 00007C                                l3769 000052  
                              l3945 000192                                l3937 000158  
                              l3929 0000E4                                l5377 00029A  
                              l5369 00026C                                l3961 000046  
                              l5465 0005C6                                l5457 0005A2  
                              l5449 00052A                                l5393 0000BC  
                              l5385 000004                                l4577 000098  
                              l4569 000082                                l4593 00001A  
                              l4585 000010                                l5289 00019A  
                              l5297 000218                                l5481 00002A  
                              l5473 000010                                l5561 000168  
                              l5553 000132                                l5545 0000FC  
                              l5537 0000C8                                l5529 000098  
                              l3891 00006C                                l3875 00040C  
                              l3867 0003B8                                l3859 00035C  
                              l3795 0000F8                                l3787 0000B4  
                              l3779 00007E                                l3947 0001A0  
                              l3939 00015A                                l5379 00029C  
                              l3971 000000                                l5459 0005B2  
                              l5467 0005CA                                l5395 0000E2  
                              l5387 000026                                l4595 00001C  
                              l4587 000012                                l4579 000000  
                              l5299 00023C                                l5491 000086  
                              l5483 000044                                l5475 000024  
                              l5571 0001CA                                l5563 00017E  
                              l5555 000142                                l5547 000100  
                              l5539 0000D8                                l3893 00007C  
                              l3885 000000                                l3877 00040E  
                              l3869 0003D2                                l3797 000104  
                              l3789 0000D4                                l3949 0001A2  
                              l3973 000046                                l3965 000000  
                              l5397 000114                                l5389 000058  
                              l3957 000002                                l4597 00001E  
                              l4589 000014                                l5485 000058  
                              l5493 000088                                l5469 000000  
                              l5581 000228                                l5573 0001E8  
                              l5565 000198                                l5557 000152  
                              l5549 000116                                l3895 00008A  
                              l3887 00002E                                l3879 000414  
                              l3799 00010E                                l3967 000046  
                              l3959 000000                                l3991 00005A  
                              l3983 000000                                l5399 000132  
                              l4599 000020                                l5495 00009A  
                              l5487 000080                                l5591 00026E  
                              l5575 000202                                l5567 0001AC  
                              l5559 000166                                l5583 000230  
                              l3897 00009C                                l3889 00003E  
                              l3977 000000                                l3985 000002  
                              l5497 0000AE                                l5489 000084  
                              l5585 000240                                l5577 00020E  
                              l5569 0001AE                                l3899 0000AA  
                              l3979 000046                                l3987 000016  
                              l5587 000254                                l5579 00021C  
                              l3989 00002E                                l5589 00025E  
                              l4991 000000                                l4993 00000E  
                              l4995 00001C                                l4997 00001E  
                              l4999 00002E                                STR_1 000001  
                              STR_2 00009F                                STR_4 000080  
                              STR_6 000094                                u3000 00002C  
                              u3001 000028                                u3010 00003C  
                              u3011 000038                                u3100 000188  
                              u3020 00007E                                u3021 00007A  
                              u3110 0001B0                                u3030 000094  
                              u3111 0001AC                                u3031 000090  
                              u3200 0002E8                                u3120 0001CE  
                              u3040 0000A6                        _BAUD4CONbits 000EE9  
                              u3201 0002E4                                u3121 0001CA  
                              u3041 0000A2                                _LATE 000F7D  
                              u3210 00031E                                u3130 0001EE  
                              u3050 0000B6                                u3211 00031A  
                              u3131 0001EA                                u3051 0000B2  
                              _LATG 000F7F                                u3300 0003E8  
                              u3220 00032E                                u3140 0001FC  
                              u3060 0000F2                                u4100 000074  
                              u3301 0003E4                                u3221 00032A  
                              u3141 0001F8                                u3061 0000EE  
                              u4101 000070                                u3310 000402  
                              u3230 00035A                                u3150 00020C  
                              u3070 000100                                u4110 00008C  
                              u3311 0003FE                                u3231 000356  
                              u3151 000208                                u3071 0000FC  
                              u4111 000088                                u3320 00043C  
                              u3240 00036A                                u3160 00023E  
                              u3080 00016E                                u4200 00002E  
                              u3321 000438                                u3241 000366  
                              u3161 00023A                                u3081 00016A  
                              u4201 00002A                                u3330 00044E  
                              u3250 000386                                u3170 00024C  
                              u3090 000186                                u4210 00009C  
                              _T2PR 000FBC                                u3331 00044A  
                              u3251 000382                                u3171 000248  
                              u3091 000180                                u4211 000098  
                              u3340 00045E                                u3260 000396  
                              u3180 00026A                                u4220 0000F2  
                              u3341 00045A                                u3261 000392  
                              u3181 000266                                u4221 0000EE  
                              u4310 000016                                u3350 00047E  
                              u3270 0003A8                                u3190 0002A2  
                              u4230 000010                                u4311 000012  
                              u3351 00047A                                u3271 0003A4  
                              u3191 00029E                                u4231 00000C  
                              u4400 000128                                u4320 000024  
                              u3360 000490                                u3280 0003BE  
                              u6000 00027C                                u4401 000124  
                              u4321 000020                                u3361 00048C  
                              u3281 0003BA                                u6001 000278  
                              u4410 000162                                u4330 000032  
                              u2810 000012                                u3370 0004AC  
                              u3290 0003D4                                u3610 00001A  
                              u6010 000014                                u4411 00015E  
                              u4331 00002E                                u2811 00000E  
                              u3371 0004A8                                u3291 0003D0  
                              u3611 000016                                u6011 000010  
                              u4075 00000A                                u4340 000068  
                              u2820 00002C                                u2900 000100  
                              u3700 0002B8                                u3620 00002C  
                              u6100 000252                                u6020 000022  
                              u4420 000016                                u4076 00000C  
                              u4341 000064                                u2821 000028  
                              u2901 0000FC                                u3701 0002B4  
                              u3621 000028                                u6101 00024E  
                              u6021 00001E                                u4421 000012  
                              u4085 000014                                u4350 000076  
                              u2830 000052                                u3710 0002D8  
                              u3630 00003C                                u6110 00026C  
                              u6030 000080                                u4510 0000B6  
                              u4430 00002C                                u4086 000016  
                              u4351 000072                                u2831 00004E  
                              u3711 0002D4                                u3631 000038  
                              u6111 000268                                u6031 00007C  
                              u4511 0000AE                                u4431 000024  
                              u4095 00001E                                u4360 0000C8  
                              u2840 000070                                u3800 00002E  
                              u3720 0002EA                                u3640 00007C  
                              u6120 00027A                                u6040 00008E  
                              u4096 000020                                u6200 0001E6  
                              u4361 0000C4                                u2841 00006C  
                              u3801 00002A                                u3721 0002E6  
                              u3641 000078                                u6121 000276  
                              u6041 00008A                                u6201 0001E2  
                              u4370 0000D6                                u2850 00008C  
                              u2914 00015A                                u2930 000056  
                              u3810 00006C                                u3730 000318  
                              u3650 00008E                                u6130 0002C8  
                              u6050 000120                                u4530 0000D4  
                              u4450 00004E                                u6210 00023E  
                              u4371 0000D2                                u2851 000088  
                              u2915 000156                                u2931 000052  
                              u3811 000068                                u3731 000314  
                              u3651 00008A                                u6131 0002C4  
                              u6051 00011C                                u4531 0000CC  
                              u4451 000046                                u6211 00023A  
                              u4380 0000E4                                u2860 0000B2  
                              u2924 0001C4                                u2940 00006E  
                              u3820 00008A                                u3740 00032E  
                              u3660 00009E                                u3900 00013A  
                              u6060 00012E                                u4508 000098  
                              u6300 0004BC                                u6220 0002B4  
                              u6140 000058                                u4700 00000E  
                              u4381 0000E0                                u2861 0000AE  
                              u2925 0001C0                                u2941 00006A  
                              u3821 000086                                u3741 00032A  
                              u3661 00009A                                u3901 000136  
                              u6061 00012A                                u6301 0004B8  
                              u6221 0002B0                                u6141 000054  
                              u4701 00000A                                u4390 00011A  
                              u3830 0000AA                                u3750 000342  
                              u3670 0000D4                                u3910 00014A  
                              u6070 000228                                u4550 000102  
                              u4470 000072                                u2870 000010  
                              u2950 000074                                u6310 0004EE  
                              u6230 000322                                u6150 00008A  
                              u4710 00001C                                u4391 000116  
                              u3831 0000A6                                u3751 00033E  
                              u3671 0000D0                                u3911 000146  
                              u6071 000224                                u4551 0000FE  
                              u4471 00006A                                u2871 00000C  
                              u2951 000070                                u6311 0004EA  
                              u6231 00031E                                u6151 000086  
                              u4711 000018                                u7007 0001A6  
                              u5600 000124                                u3840 0000FA  
                              u3760 00035C                                u3680 0000E4  
                              u3920 000158                                u6080 000236  
                              u4560 000110                                u4528 0000B8  
                              u4448 00002E                                u2880 000026  
                              u2960 00008C                                u6320 000580  
                              u6240 000354                                u6160 0000BC  
                              u4720 00002A                                u6400 000116  
                              u5601 000120                                u3841 0000F6  
                              u3761 000358                                u3681 0000E0  
                              u3921 000154                                u6081 000232  
                              u4561 00010C                                u2881 000022  
                              u2961 000088                                u6321 00057C  
                              u6241 000350                                u6161 0000B8  
                              u4721 000026                                u7017 0001D4  
                              u6401 000112                                u2890 00001C  
                              u5610 00019A                                u5530 00001C  
                              u3770 0003A4                                u3690 00025E  
                              u3930 000192                                u3850 000012  
                              u6090 000244                                u4490 000096  
                              u2970 00002A                                u6330 0005A2  
                              u6250 000386                                u6170 000114  
                              u4730 00003A                                u6410 000126  
                              u2891 000018                                u5611 000196  
                              u5531 000018                                u3771 0003A0  
                              u3931 00018E                                u3851 00000E  
                              u6091 000240                                u4491 00008E  
                              u2971 000022                                u7107 0001EC  
                              u6331 00059E                                u6251 000382  
                              u6171 000110                                u4731 000036  
                              u7027 000010                                u6411 000122  
                              u5700 0002B4                                u5620 0001BC  
                              u5540 00002E                                u3780 0003D2  
                              u3940 0001A0                                u3860 000020  
                              u4548 0000D6                                u4468 000050  
                              u6340 0005B2                                u6260 0003D6  
                              u6180 000182                                u6420 000142  
                              u5701 0002B0                                u5621 0001B8  
                              u5541 00002A                                u3781 0003CE  
                              u3941 00019C                                u3861 00001C  
                              u7117 000218                                u6341 0005AE  
                              u6261 0003D2                                u6181 00017E  
                              u7037 000014                                u6421 00013E  
                              u2990 00001A                                u5710 0002C8  
                              u5630 0001E6                                u5550 00003E  
                              u3790 00040C                                u3870 00007C  
                              u6270 000408                                u6190 0001B4  
                              u6350 000058                                u6430 000152  
                              u2991 000016                                u5711 0002C4  
                              u5631 0001E2                                u5551 00003A  
                              u3791 000408                                u3695 000254  
                              u3871 000078                                u7207 0000A8  
                              u7127 000020                                u6271 000404  
                              u6191 0001B0                                u7047 00004E  
                              u6351 000054                                u6431 00014E  
                              u5720 0002E2                                u5640 00020A  
                              u5560 000082                                u3880 0000D2  
                              u5800 000202                                u4488 000074  
                              u6280 00043A                                u6360 00009A  
                              u6440 000240                                u5721 0002DE  
                              u5641 000206                                u5561 00007E  
                              u3881 0000CE                                u5801 0001FE  
                              u7217 0000CC                                u7137 00004C  
                              u6281 000436                                u7057 000072  
                              u6361 000096                                u6441 00023C  
                              u5730 00032A                                u5650 000220  
                              u5570 000094                                u3890 00011C  
                              u5810 00011A                                u6290 00048A  
                              u6370 0000E2                                u6450 00026E  
                              u5731 000326                                u5651 00021C  
                              u5571 000090                                u3891 000118  
                              u5811 000116                                u7307 000074  
                              u7227 0000FE                                u7147 000056  
                              u7067 000508                                u6291 000486  
                              u6371 0000DE                                u6451 00026A  
                              u5740 00035A                                u5660 00023E  
                              u5580 0000A4                                u5820 00013E  
                              u2988 00002C                                u5900 00012E  
                              u6380 0000C8                                u5741 000356  
                              u5661 00023A                                u5581 0000A0  
                              u5821 00013A                                u7317 00008E  
                              u7237 000122                                u7157 000056  
                              u5901 00012A                                u7077 000532  
                              u6381 0000C4                                u5750 000388  
                              u5670 00025E                                u5590 0000E4  
                              u5830 000182                                u5910 0001CE  
                              u6390 0000D6                                u5751 000384  
                              u5671 00025A                                u5591 0000E0  
                              u5831 00017E                                u7407 000208  
                              u7327 000032                                u7247 000146  
                              u7167 000010                                u5911 0001CA  
                              u7087 00014C                                u6391 0000D2  
                              u5680 000270                                u5760 00011A  
                              u5840 00019A                                u5920 00025A  
                              u5681 00026C                                u5761 000116  
                              u5841 000196                                u7417 00028C  
                              u7337 00009A                                u7257 0000EA  
                              u7177 00003A                                u5921 000256  
                              u7097 000178                                u5690 00029E  
                              u5770 00013E                                u5850 000202  
                              u5930 0002A0                                u7507 00008A  
                              u5691 00029A                                u5771 00013A  
                              u5851 0001FE                                u7427 0002A8  
                              u7347 0000B8                                u7267 00000C  
                              u7187 00005E                                u5931 00029C  
                              u5780 000182                                u5860 000012  
                              u5940 000024                                u7517 0000A4  
                              u5781 00017E                                u7437 000164  
                              u7357 0000D2                                u7277 000026  
                              u7197 000078                                u5861 00000E  
                              u5941 000020                                u5790 00019A  
                              u5870 00005C                                u5950 000064  
                              u7527 0000F8                                u5791 000196  
                              u7447 0001AE                                u7367 00013A  
                              u7287 000040                                u5871 000058  
                              u5951 000060                                u5880 0000A2  
                              u5960 0000A4                                u7537 00013C  
                              u7457 000164                                u7377 000158  
                              u7297 00005A                                u5881 00009E  
                              u5961 0000A0                                u5890 0000E8  
                              u5970 0000E4                                u7467 0001AE  
                              u7387 000172                                u5891 0000E4  
                              u5971 0000E0                                u5980 000186  
                              u7477 000038                                u7397 0001BC  
                              u5981 000182                                u5990 00023C  
                              u7487 000078                                u5991 000238  
                              u6927 0000EA                                u7497 000046  
                              u6937 00018A                                u6947 0001BC  
                              u6957 0001F4                                u6967 000036  
                              u6977 0000C0                                u6987 0000F0  
                              u6997 00011E                         main@current 00003D  
           __end_of_interrupts_init 000024             __end_of_DCmotors_setPWM 0001D4  
                              _main 000000                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 000000  
                              _stop 000000                                prodh 000FF4  
                              prodl 000FF3                                start 000000* 
                  __end_of_ADC_init 00001A                     ___fldiv@new_exp 000009  
                   __end_of_HighISR 000022                        ___param_bank 000000  
            ?_colourclick_readRGBC2 000017              ??_clicker2buttons_init 00000A  
                   __end_of___fladd 0004C0                               ?_main 000000  
                             _ADPCH 000F5F                     __end_of___fldiv 00039C  
                   __end_of___awdiv 0000C4                               STR_10 00006D  
                             STR_12 000087                               STR_14 00009A  
                             STR_16 00008E                               STR_18 000078  
                             STR_19 000041                     __end_of___flmul 00042A  
                             ?_stop 000023                     ___awdiv@divisor 000012  
                             i1l169 00003A                               i2l154 000018  
                             i2l163 00001E                               i2l501 00000A  
                             i2l157 00004C                               i2l352 00001E  
        ?i2_colourclick_writetoaddr 000002             _colourclick_writetoaddr 000000  
                             i2l492 000008                               i2l486 000000  
                             i2l489 000026                               i2l498 000008  
                   ___awdiv@counter 000014                               _TMR0H 000FD4  
                             _TMR0L 000FD3            __end_of_interrupts_clear 00001A  
        __end_of_I2C_2_Master_Start 00000A          __end_of_I2C_2_Master_Write 00000C  
     __size_of_DCmotors_calibration 000000            ?_colourclick_calibration 000000  
                   __end_of_forward 00008E                               _instr 000000  
              colourclickLEDs_C@tog 00000A                               _timer 000028  
                 _clicker2LEDs_init 000000     __size_of_interrupts_colourclick 000000  
                   __end_of_reverse 00008E              DCmotors_init@PWMperiod 00000A  
                ?_clicker2LEDs_init 000000                               ttemp5 000001  
                             ttemp6 000004                               ttemp7 000008  
                             status 000FD8                       turnleft@delay 000017  
                             wtemp8 000001               _I2C_2_Master_RepStart 000000  
                   __initialization 000000                 ??_clicker2LEDs_init 00000A  
                      __end_of_main 00028E                        __end_of_stop 00008A  
__size_of_colourcards_normaliseRGBC 000000       __size_of_colourcards_readRGBC 000000  
                            ??_main 00003A                              ??_stop 000027  
                     __activetblptr 000001        __size_ofi2_I2C_2_Master_Idle 000000  
 __end_ofi2_colourclick_writetoaddr 000020              ??_colourclick_readRGBC 000017  
      __size_ofi2_I2C_2_Master_Stop 000000           __end_of_clicker2LEDs_init 00000A  
      __size_of_reverseinstructions 000000                     _colourcard_flag 00002C  
                            _ADRESH 000F64           __size_of_colourclick_init 000000  
                  ___awdiv@dividend 000010                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            i1l3081 000038                              i1l3073 000016  
                            i1l3075 000026                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              i1l3077 000030  
                            i1l3079 000034                              _RD6PPS 000E70  
                            i2l4061 000000                              i2l4063 000004  
                            i2l4071 000006                              i2l4065 000000  
                            i2l4067 000004                              i2l4069 000002  
                            i2l4159 000002                              i2l4381 000024  
                            i2l4383 00002E                              i2l4375 000000  
                            i2l4385 000038                              i2l4377 00000A  
                            i2l4387 000042                              i2l4379 00001A  
                            i2l4821 000000                              i2l4735 000000  
                            i2l4823 000010                              i2l3953 000000  
                            i2l4825 000016                              i2l3955 000010  
                            i2l4827 00001A                    __end_of_adjdelay 000164  
                  ?_interrupts_init 000000                    ?_DCmotors_setPWM 000018  
                         ??_HighISR 000005                              _RX4PPS 000E15  
    i2colourclick_writetoaddr@value 000002                              _TX4REG 000EE4  
                  __end_of___xxtofl 0001B4                              _LowISR 000000  
                      ??_ADC_getval 00000A                              ___flge 000000  
            colourcards_readRGBC@mL 000028              colourcards_readRGBC@mR 00002A  
                         ??___fladd 000039                              ___wmul 000000  
                         ??___fldiv 000000                           ??___awdiv 000014  
                         ??___flmul 000020   __size_ofi2_interrupts_colourclick 000000  
                      ?_timer0_init 000000           ?i2_interrupts_colourclick 000000  
            _interrupts_colourclick 000000                    ??_buggyLEDs_init 00000A  
                i2_interrupts_clear 000000           ??_colourclick_writetoaddr 00000D  
                            clear_0 000006                              clear_1 000012  
                  ___awdiv@quotient 000016                              isa$std 000001  
 __end_of_colourcards_normaliseRGBC 00017C                           ??_forward 000027  
               ?i2_interrupts_clear 000000                        __mediumconst 000000* 
                            tblptrh 000FF7                              tblptru 000FF8  
                         ?_ADC_init 000000                           ??_reverse 000027  
                            stop@mL 000023                              stop@mR 000025  
                __end_of_ADC_getval 000018                        ?_USART4_init 000000  
                        ___flge@ff1 000018                          ___flge@ff2 00001C  
                      ___xxtofl@arg 000014                        ___xxtofl@exp 000013  
                      ___xxtofl@val 00000A                    __end_of_turnleft 000206  
                        __accesstop 000000*            __end_of__initialization 000020  
            ?_I2C_2_Master_RepStart 000000                       ___rparam_used 000001  
              ??i2_interrupts_clear 000005                      __pcstackCOMRAM 000000  
                __size_of_clearance 000000         __end_of_colourclickLEDs_RGB 00009E  
     checkbatterylevel@batterylevel 00000D                          ??_ADC_init 00000A  
        __size_of_clicker2LEDs_init 000000       __size_of_colourclickLEDs_init 000000  
   __end_of_colourclick_writetoaddr 000020                          __pbssBANK0 000000  
                        __pbssBANK1 000000                          __pnvCOMRAM 000000  
          DCmotors_calibration@okay 000025                   _checkbatterylevel 000000  
                     ?_instructions 000021             ??_colourclick_readRGBC2 00001A  
     __size_ofi2_I2C_2_Master_Start 000000       __size_ofi2_I2C_2_Master_Write 000000  
                ?_checkbatterylevel 000000                             ?_LowISR 000000  
                      _T2CLKCONbits 000FBF                             ?___flge 000018  
                           ?___wmul 00000A                 ??_checkbatterylevel 00000C  
                         ?_adjdelay 000000                             _INT1PPS 000DF1  
       ??i2_colourclick_writetoaddr 000003                           ?___xxtofl 00000A  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                 ?_interrupts_clear 000000                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5               reverseinstructions@mL 000026  
             reverseinstructions@mR 000028                  ??_interrupts_clear 00000F  
                  _colourclick_init 000000           __end_of_checkbatterylevel 000112  
            __size_of_DCmotors_init 000000                             _HighISR 000000  
                    ??_instructions 00004A                   __end_of_clearance 00005E  
                    turnright@delay 000017                           _ADREFbits 000F58  
                _I2C_2_Master_Start 000000                 i2_I2C_2_Master_Idle 000000  
                _I2C_2_Master_Write 000000                             __Hparam 000000  
               i2_I2C_2_Master_Stop 000000        __end_of_DCmotors_calibration 0002CA  
                __size_of_turnright 000000    __size_of_colourclick_calibration 000000  
                           __Lparam 000000                     __size_of_LowISR 000000  
               _reverseinstructions 000000                       _turnleft$3219 00001B  
                   __size_of___flge 000000                             ___fladd 000000  
                           ___fldiv 000000                             ___awdiv 000000  
           colourcards_readRGBC@abs 000026                             ___flmul 000000  
           colourcards_readRGBC@rel 00002E                     __size_of___wmul 000000  
               ?_I2C_2_Master_Start 000000                 ?_I2C_2_Master_Write 000000  
                      __psmallconst 000000                             __pcinit 000000  
                           __ramtop 000000*               __size_of_timer0_init 000000  
                           __ptext0 000000                             __ptext1 000000  
                           __ptext2 000000                             __ptext3 000000  
                           __ptext4 000000                             __ptext5 000000  
                           __ptext6 000000                             __ptext7 000000  
                           __ptext8 000000                             __ptext9 000000  
     __size_of_clicker2buttons_init 000000                           ?_turnleft 000011  
                        ??_adjdelay 00000A                ?i2_I2C_2_Master_Idle 000000  
                         _T2CONbits 000FBD                             _forward 000000  
                        ??___xxtofl 00000E                ?i2_I2C_2_Master_Stop 000000  
                         _T2HLTbits 000FBE                             _reverse 000000  
              ?_reverseinstructions 000026                ??_I2C_2_Master_Start 00000B  
              ??_I2C_2_Master_Write 00000B                      __pintcode_body 000000  
              end_of_initialization 000020        __end_of_colourcards_readRGBC 0005D0  
                  ADC_getval@tmpval 00000A    __end_ofi2_interrupts_colourclick 00004E  
              __size_of_USART4_init 000000                             int_func 000000  
         i2_colourclick_writetoaddr 000000                        adjdelay@mode 00000C  
           ?_interrupts_colourclick 000000                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
    colourclick_calibration@initial 000019        colourclick_writetoaddr@value 00000C  
                     _DCmotors_init 000000                           _PORTFbits 000F8E  
                        _returnhome 000000                          ??_turnleft 000049  
             ??i2_I2C_2_Master_Idle 000000               ??i2_I2C_2_Master_Stop 000001  
                       ___fladd@grs 000040                       ___xxtofl@sign 000012  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                   __end_of_turnright 000206  
             ??_reverseinstructions 00002A                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                       ___fldiv@grs 00000B                         ___fldiv@rem 000004  
     __size_of_colourclick_readRGBC 000000                   __size_of_ADC_init 000000  
           ??_I2C_2_Master_RepStart 00000B                colourclick_readB@tmp 000013  
              colourclick_readC@tmp 000013          __size_of_checkbatterylevel 000000  
              colourclick_readG@tmp 000013                         returnhome@i 000032  
                       returnhome@j 000033                         returnhome@k 000034  
              colourclick_readR@tmp 000013                         ___flmul@grs 000025  
    __end_of_interrupts_colourclick 00004E                          main@motorL 000045  
                        main@motorR 00004E                       _instr_counter 00002E  
                    __end_of_LowISR 000052            __size_of_interrupts_init 000000  
          __size_of_DCmotors_setPWM 000000                      __end_of___flge 000104  
        colourclick_readRGBC@tmpval 000015                      ?_DCmotors_init 000000  
                    __end_of___wmul 000026                __end_of_instructions 0002D6  
        ?_colourcards_normaliseRGBC 000011                 start_initialization 000000  
              _DCmotors_calibration 000000                    _unknowncard_flag 00002B  
                   _returnhome_flag 00002A             _colourclick_calibration 000000  
       __size_ofi2_interrupts_clear 000000                            ??_LowISR 000005  
          i2_interrupts_colourclick 000000                        turnright@deg 000015  
    __size_of_colourclick_readRGBC2 000000       __end_of_colourclick_readRGBC2 000156  
          ?_colourclick_writetoaddr 00000C          colourcards_normaliseRGBC@B 000019  
        colourcards_normaliseRGBC@C 00001B          colourcards_normaliseRGBC@G 000017  
        colourcards_normaliseRGBC@R 000015                            ??___flge 000020  
      __end_of_colourclickLEDs_init 00000E                            ??___wmul 00000E  
          __end_of_colourclick_init 000038       i2I2C_2_Master_Write@data_byte 000001  
              _colourcards_readRGBC 000000                         ?_returnhome 00002C  
      __end_ofi2_I2C_2_Master_Start 00000A        __end_ofi2_I2C_2_Master_Write 00000C  
                         ___fladd@a 000035                           ___fladd@b 000031  
                         ___fldiv@a 000045                           ___fldiv@b 000041  
                         ___flmul@a 00001C                           ___flmul@b 000018  
                       __pbssCOMRAM 000000                       __pcstackBANK0 000000  
                 __size_of_adjdelay 000000               ?_DCmotors_calibration 000021  
           __size_of_buggyLEDs_init 000000                   __size_of___xxtofl 000000  
                          ?_HighISR 000000        __size_of_colourclickLEDs_RGB 000000  
         __size_of_interrupts_clear 000000                           _clearance 000000  
                         __pintcode 000000                     ??_DCmotors_init 00000A  
                          ?___fladd 000031                            ?___fldiv 000041  
                          ?___awdiv 000010                            ?___flmul 000018  
__size_ofi2_colourclick_writetoaddr 000000               ?_colourcards_readRGBC 000026  
                       __pintcodelo 000000                           adjdelay@i 00000D  
              I2C_2_Master_Read@ack 00000C                   ??_interrupts_init 00000F  
                 ??_DCmotors_setPWM 00001A                I2C_2_Master_Read@tmp 00000D  
             _interrupts_lowerbound 000002                         __smallconst 000000* 
                          ?_forward 000023                   _I2C_2_Master_Idle 000000  
                 _I2C_2_Master_Init 000000                   _I2C_2_Master_Read 000000  
                 _I2C_2_Master_Stop 000000                   __size_of_turnleft 000000  
                          _ADC_init 000000                            ?_reverse 000023  
                ?_I2C_2_Master_Idle 000000                  ?_I2C_2_Master_Init 000000  
                ?_I2C_2_Master_Read 000000                  ?_I2C_2_Master_Stop 000000  
         ??_colourclick_calibration 000017                     instructions@num 000025  
      __end_of_clicker2buttons_init 00000C                 ??_I2C_2_Master_Idle 00000A  
               ??_I2C_2_Master_Init 00000A                 ??_I2C_2_Master_Read 00000B  
                    ___wmul@product 00000E                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 00000B                            _LATCbits 000F7B  
                 _colourclickLEDs_C 000000                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _IPR0bits 000E1F                 __size_of_returnhome 000000  
                          _PIE0bits 000E29                            i1u228_20 000026  
                ?_colourclickLEDs_C 000000                            i1u228_21 000022  
                          _PIR0bits 000E33                            i2u506_40 000010  
                          i2u506_41 00000C                            _PIR4bits 000E37  
                        ?_clearance 000029                            i2u395_40 000010  
                          i2u395_41 00000C                            i2u396_40 000026  
                          i2u396_41 000022                            i2u754_47 000010  
                     ??_timer0_init 00000A                            _SSP2CON2 000EDA  
             __size_of_instructions 000000              DCmotors_setPWM@PWMduty 000021  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 00000A  
                 _colourclick_readB 000000                   _colourclick_readC 000000  
                 _colourclick_readG 000000                   _colourclick_readR 000000  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 000028  
         __end_of_I2C_2_Master_Init 00002A           __end_of_I2C_2_Master_Read 000042  
                 ___wmul@multiplier 00000A                  ?_colourclick_readB 00000E  
                ?_colourclick_readC 00000E                  ?_colourclick_readG 00000E  
                ?_colourclick_readR 00000E           __end_of_I2C_2_Master_Stop 00000A  
             _interrupts_upperbound 000000         I2C_2_Master_Write@data_byte 00000B  
            ??_DCmotors_calibration 00004A                           main@start 00003C  
               ??_colourclick_readB 000010                 ??_colourclick_readC 000010  
               ??_colourclick_readG 000010                 ??_colourclick_readR 000010  
                     ??_USART4_init 00000A         __size_of_I2C_2_Master_Start 000000  
              _colourclickLEDs_init 000000         __size_of_I2C_2_Master_Write 000000  
                         _turnright 000000           __end_of_colourclickLEDs_C 000022  
                       turnleft@deg 000015      __size_of_I2C_2_Master_RepStart 000000  
     __end_of_I2C_2_Master_RepStart 00000A                    __size_of_HighISR 000000  
                      _instructions 000000                i2_I2C_2_Master_Start 000000  
              i2_I2C_2_Master_Write 000000                            __Hrparam 000000* 
                       turnright@mL 000011                         turnright@mR 000013  
                        _ADC_getval 000000        __end_of_colourclick_readRGBC 00005E  
                          __Lrparam 000000*                       __Lsmallconst 000000* 
         __end_of_colourclick_readB 000050           __end_of_colourclick_readC 000050  
         __end_of_colourclick_readG 000050           __end_of_colourclick_readR 000050  
                         forward@mL 000023                           forward@mR 000025  
                       _dur_counter 00002D              ??_colourcards_readRGBC 00002C  
       __end_ofi2_I2C_2_Master_Idle 000028                    __size_of___fladd 000000  
       __end_ofi2_I2C_2_Master_Stop 00000A                    __size_of___fldiv 000000  
                  __size_of___awdiv 000000                    __size_of___flmul 000000  
   __end_of_colourclick_calibration 0000A6         __end_of_reverseinstructions 00029A  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                          _adjdelay 000000                          _ANSELFbits 000EB4  
               __end_of_timer0_init 000020         ??_colourcards_normaliseRGBC 000049  
                          ___xxtofl 000000                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6              DCmotors_calibration@mL 000021  
            DCmotors_calibration@mR 000023                      _buggyLEDs_init 000000  
                  __size_of_forward 000000                            __ptext10 000000  
                          __ptext11 000000                            __ptext20 000000  
                          __ptext12 000000                            __ptext21 000000  
                          __ptext13 000000                            __ptext30 000000  
                          __ptext22 000000                            __ptext14 000000  
                          __ptext31 000000                            __ptext23 000000  
                          __ptext15 000000                            __ptext40 000000  
                          __ptext32 000000                            __ptext24 000000  
                          __ptext16 000000                            __ptext41 000000  
                          __ptext33 000000                            __ptext25 000000  
                          __ptext17 000000                            __ptext50 000000  
                          __ptext42 000000                            __ptext34 000000  
                          __ptext26 000000                            __ptext18 000000  
                          __ptext51 000000                            __ptext43 000000  
                          __ptext35 000000                            __ptext27 000000  
                          __ptext19 000000                            __ptext60 000000  
                          __ptext52 000000                            __ptext44 000000  
                          __ptext36 000000                            __ptext28 000000  
                          __ptext61 000000                            __ptext45 000000  
                          __ptext37 000000                            __ptext29 000000  
                          __ptext46 000000                            __ptext38 000000  
                          __ptext55 000000                            __ptext47 000000  
                          __ptext39 000000                            __ptext56 000000  
                          __ptext48 000000                            __ptext57 000000  
                          __ptext49 000000                            __ptext58 000000  
                          __ptext59 000000                    __size_of_reverse 000000  
             ?_colourclickLEDs_init 000000                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA          ??i2_interrupts_colourclick 000004  
                        ?_turnright 000011                       __size_of_main 000000  
                     __size_of_stop 000000               ?i2_I2C_2_Master_Start 000000  
             ?i2_I2C_2_Master_Write 000000                      instructions@mL 000021  
                    instructions@mR 000023                 __end_of_USART4_init 000020  
                  _interrupts_clear 000000                           reverse@mL 000023  
                         reverse@mR 000025                         ??_clearance 00002D  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 000000                   ?_colourclick_init 000000  
               _colourclickLEDs_RGB 000000                  ??_colourclick_init 00000E  
                      ??_returnhome 000030          __size_of_I2C_2_Master_Idle 000000  
        __size_of_I2C_2_Master_Init 000000          __size_of_I2C_2_Master_Read 000000  
                  DCmotors_setPWM@m 000018                _clicker2buttons_init 000000  
        __size_of_I2C_2_Master_Stop 000000                            _turnleft 000000  
                        turnleft@mL 000011                          turnleft@mR 000013  
            __end_of_buggyLEDs_init 000016                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 000000                         clearance@mL 000029  
                       clearance@mR 00002B                          turnright@i 00001F  
    colourclick_writetoaddr@address 00000D    i2colourclick_writetoaddr@address 000003  
                    _turnright$3220 00001B                         _PWM6CONbits 000FA4  
                       _PWM7CONbits 000FA1                            intlevel1 000000* 
                          intlevel2 000000*         __size_of_colourclickLEDs_C 000000  
              ?_colourclickLEDs_RGB 000000          __end_ofi2_interrupts_clear 00001A  
                _turnright_calangle 000000           _colourcards_normaliseRGBC 000000  
                 _turnleft_calangle 000002                  __end_of_returnhome 0000F8  
                   _interrupts_init 000000                     _DCmotors_setPWM 000000  
                       ?_ADC_getval 000000          __size_of_colourclick_readB 000000  
        __size_of_colourclick_readC 000000          __size_of_colourclick_readG 000000  
        __size_of_colourclick_readR 000000               _colourclick_readRGBC2 000000  
                       _timer0_init 000000                           turnleft@i 00001F  
             ?_clicker2buttons_init 000000           colourclick_readRGBC2@mode 000019  
                   ?_buggyLEDs_init 000000                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C              ??_colourclickLEDs_init 00000B  
              _colourclick_readRGBC 000000                       ___fladd@signs 00003D  
                       _USART4_init 000000            ??_interrupts_colourclick 00000E  
                        _TX4STAbits 000EE8                         ??_turnright 000049  
             ??_colourclickLEDs_RGB 00000A              ??i2_I2C_2_Master_Start 000001  
                      ___fladd@aexp 00003E              ??i2_I2C_2_Master_Write 000001  
                      ___fladd@bexp 00003F        colourcards_normaliseRGBC@abs 000011  
