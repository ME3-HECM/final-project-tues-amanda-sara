

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 01:59:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 05/05/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F67K40 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     _INT1PPS	set	3569
   114  0000                     _RC7PPS	set	3689
   115  0000                     _RE2PPS	set	3700
   116  0000                     _TX4REG	set	3812
   117  0000                     _RC4REG	set	3811
   118  0000                     _PIR4bits	set	3639
   119  0000                     _RC4STAbits	set	3815
   120  0000                     _SP4BRGH	set	3814
   121  0000                     _SP4BRGL	set	3813
   122  0000                     _TX4STAbits	set	3816
   123  0000                     _BAUD4CONbits	set	3817
   124  0000                     _RX4PPS	set	3605
   125  0000                     _RC0PPS	set	3682
   126  0000                     _SSP2BUF	set	3797
   127  0000                     _SSP2CON2bits	set	3802
   128  0000                     _SSP2CON2	set	3802
   129  0000                     _SSP2STAT	set	3800
   130  0000                     _RD6PPS	set	3696
   131  0000                     _RD5PPS	set	3695
   132  0000                     _SSP2CLKPPS	set	3612
   133  0000                     _SSP2DATPPS	set	3613
   134  0000                     _ANSELDbits	set	3751
   135  0000                     _SSP2ADD	set	3798
   136  0000                     _SSP2CON1bits	set	3801
   137  0000                     _ANSELFbits	set	3764
   138  0000                     _PIR0bits	set	3635
   139  0000                     _IPR0bits	set	3615
   140  0000                     _PIE0bits	set	3625
   141  0000                     _ANSELBbits	set	3738
   142  0000                     _ADPCH	set	3935
   143  0000                     _ADREFbits	set	3928
   144  0000                     _T0CON0bits	set	4053
   145  0000                     _T0CON1bits	set	4054
   146  0000                     _PWM7CONbits	set	4001
   147  0000                     _PWM6CONbits	set	4004
   148  0000                     _LATCbits	set	3963
   149  0000                     _LATEbits	set	3965
   150  0000                     _TRISEbits	set	3973
   151  0000                     _T2PR	set	4028
   152  0000                     _T2CLKCONbits	set	4031
   153  0000                     _T2HLTbits	set	4030
   154  0000                     _T2CONbits	set	4029
   155  0000                     _TRISCbits	set	3971
   156  0000                     _TRISAbits	set	3969
   157  0000                     _TRISGbits	set	3975
   158  0000                     _TRISHbits	set	3976
   159  0000                     _TRISDbits	set	3972
   160  0000                     _ADRESH	set	3940
   161  0000                     _ADCON0bits	set	3936
   162  0000                     _TRISFbits	set	3974
   163  0000                     _LATAbits	set	3961
   164  0000                     _LATGbits	set	3967
   165  0000                     _TMR0L	set	4051
   166  0000                     _TMR0H	set	4052
   167  0000                     _INTCONbits	set	4082
   168  0000                     _TRISBbits	set	3970
   169  0000                     _LATHbits	set	3968
   170  0000                     _LATFbits	set	3966
   171  0000                     _LATDbits	set	3964
   172  0000                     _PORTFbits	set	3982
   173  0000                     _LATG	set	3967
   174  0000                     _PWM7DCH	set	4000
   175  0000                     _LATE	set	3965
   176  0000                     _PWM6DCH	set	4003
   177                           
   178                           	psect	smallconst
   179  000E00                     __psmallconst:
   180                           	callstack 0
   181  000E00  00                 	db	0
   182  000E01                     STR_1:
   183                           
   184                           ; BSR set to: 14
   185  000E01  52                 	db	82	;'R'
   186  000E02  47                 	db	71	;'G'
   187  000E03  42                 	db	66	;'B'
   188  000E04  43                 	db	67	;'C'
   189  000E05  3A                 	db	58	;':'
   190  000E06  20                 	db	32
   191  000E07  25                 	db	37
   192  000E08  69                 	db	105	;'i'
   193  000E09  20                 	db	32
   194  000E0A  25                 	db	37
   195  000E0B  69                 	db	105	;'i'
   196  000E0C  20                 	db	32
   197  000E0D  25                 	db	37
   198  000E0E  69                 	db	105	;'i'
   199  000E0F  20                 	db	32
   200  000E10  25                 	db	37
   201  000E11  69                 	db	105	;'i'
   202  000E12  20                 	db	32
   203  000E13  20                 	db	32
   204  000E14  20                 	db	32
   205  000E15  20                 	db	32
   206  000E16  20                 	db	32
   207  000E17  52                 	db	82	;'R'
   208  000E18  47                 	db	71	;'G'
   209  000E19  42                 	db	66	;'B'
   210  000E1A  43                 	db	67	;'C'
   211  000E1B  5F                 	db	95	;'_'
   212  000E1C  72                 	db	114	;'r'
   213  000E1D  65                 	db	101	;'e'
   214  000E1E  6C                 	db	108	;'l'
   215  000E1F  3A                 	db	58	;':'
   216  000E20  20                 	db	32
   217  000E21  25                 	db	37
   218  000E22  2E                 	db	46
   219  000E23  33                 	db	51	;'3'
   220  000E24  66                 	db	102	;'f'
   221  000E25  20                 	db	32
   222  000E26  25                 	db	37
   223  000E27  2E                 	db	46
   224  000E28  33                 	db	51	;'3'
   225  000E29  66                 	db	102	;'f'
   226  000E2A  20                 	db	32
   227  000E2B  25                 	db	37
   228  000E2C  2E                 	db	46
   229  000E2D  33                 	db	51	;'3'
   230  000E2E  66                 	db	102	;'f'
   231  000E2F  20                 	db	32
   232  000E30  20                 	db	32
   233  000E31  20                 	db	32
   234  000E32  20                 	db	32
   235  000E33  20                 	db	32
   236  000E34  43                 	db	67	;'C'
   237  000E35  6F                 	db	111	;'o'
   238  000E36  6C                 	db	108	;'l'
   239  000E37  6F                 	db	111	;'o'
   240  000E38  75                 	db	117	;'u'
   241  000E39  72                 	db	114	;'r'
   242  000E3A  3A                 	db	58	;':'
   243  000E3B  20                 	db	32
   244  000E3C  25                 	db	37
   245  000E3D  73                 	db	115	;'s'
   246  000E3E  0A                 	db	10
   247  000E3F  0D                 	db	13
   248  000E40  00                 	db	0
   249  000E41                     
   250                           ; BSR set to: 14
   251  000E41  52                 	db	82	;'R'
   252  000E42  47                 	db	71	;'G'
   253  000E43  42                 	db	66	;'B'
   254  000E44  43                 	db	67	;'C'
   255  000E45  3A                 	db	58	;':'
   256  000E46  20                 	db	32
   257  000E47  25                 	db	37
   258  000E48  69                 	db	105	;'i'
   259  000E49  20                 	db	32
   260  000E4A  25                 	db	37
   261  000E4B  69                 	db	105	;'i'
   262  000E4C  20                 	db	32
   263  000E4D  25                 	db	37
   264  000E4E  69                 	db	105	;'i'
   265  000E4F  20                 	db	32
   266  000E50  25                 	db	37
   267  000E51  69                 	db	105	;'i'
   268  000E52  20                 	db	32
   269  000E53  20                 	db	32
   270  000E54  20                 	db	32
   271  000E55  20                 	db	32
   272  000E56  20                 	db	32
   273  000E57  54                 	db	84	;'T'
   274  000E58  68                 	db	104	;'h'
   275  000E59  72                 	db	114	;'r'
   276  000E5A  65                 	db	101	;'e'
   277  000E5B  73                 	db	115	;'s'
   278  000E5C  68                 	db	104	;'h'
   279  000E5D  6F                 	db	111	;'o'
   280  000E5E  6C                 	db	108	;'l'
   281  000E5F  64                 	db	100	;'d'
   282  000E60  3A                 	db	58	;':'
   283  000E61  20                 	db	32
   284  000E62  25                 	db	37
   285  000E63  69                 	db	105	;'i'
   286  000E64  20                 	db	32
   287  000E65  25                 	db	37
   288  000E66  69                 	db	105	;'i'
   289  000E67  20                 	db	32
   290  000E68  25                 	db	37
   291  000E69  69                 	db	105	;'i'
   292  000E6A  0A                 	db	10
   293  000E6B  0D                 	db	13
   294  000E6C  00                 	db	0
   295  000E6D                     STR_10:
   296                           
   297                           ; BSR set to: 14
   298  000E6D  6C                 	db	108	;'l'
   299  000E6E  69                 	db	105	;'i'
   300  000E6F  67                 	db	103	;'g'
   301  000E70  68                 	db	104	;'h'
   302  000E71  74                 	db	116	;'t'
   303  000E72  20                 	db	32
   304  000E73  62                 	db	98	;'b'
   305  000E74  6C                 	db	108	;'l'
   306  000E75  75                 	db	117	;'u'
   307  000E76  65                 	db	101	;'e'
   308  000E77  00                 	db	0
   309  000E78                     
   310                           ; BSR set to: 14
   311  000E78  75                 	db	117	;'u'
   312  000E79  6E                 	db	110	;'n'
   313  000E7A  6B                 	db	107	;'k'
   314  000E7B  6E                 	db	110	;'n'
   315  000E7C  6F                 	db	111	;'o'
   316  000E7D  77                 	db	119	;'w'
   317  000E7E  6E                 	db	110	;'n'
   318  000E7F  00                 	db	0
   319  000E80                     
   320                           ; BSR set to: 14
   321  000E80  6F                 	db	111	;'o'
   322  000E81  72                 	db	114	;'r'
   323  000E82  61                 	db	97	;'a'
   324  000E83  6E                 	db	110	;'n'
   325  000E84  67                 	db	103	;'g'
   326  000E85  65                 	db	101	;'e'
   327  000E86  00                 	db	0
   328  000E87                     
   329                           ; BSR set to: 14
   330  000E87  79                 	db	121	;'y'
   331  000E88  65                 	db	101	;'e'
   332  000E89  6C                 	db	108	;'l'
   333  000E8A  6C                 	db	108	;'l'
   334  000E8B  6F                 	db	111	;'o'
   335  000E8C  77                 	db	119	;'w'
   336  000E8D  00                 	db	0
   337  000E8E                     
   338                           ; BSR set to: 14
   339  000E8E  77                 	db	119	;'w'
   340  000E8F  68                 	db	104	;'h'
   341  000E90  69                 	db	105	;'i'
   342  000E91  74                 	db	116	;'t'
   343  000E92  65                 	db	101	;'e'
   344  000E93  00                 	db	0
   345  000E94                     
   346                           ; BSR set to: 14
   347  000E94  67                 	db	103	;'g'
   348  000E95  72                 	db	114	;'r'
   349  000E96  65                 	db	101	;'e'
   350  000E97  65                 	db	101	;'e'
   351  000E98  6E                 	db	110	;'n'
   352  000E99  00                 	db	0
   353  000E9A                     
   354                           ; BSR set to: 14
   355  000E9A  70                 	db	112	;'p'
   356  000E9B  69                 	db	105	;'i'
   357  000E9C  6E                 	db	110	;'n'
   358  000E9D  6B                 	db	107	;'k'
   359  000E9E  00                 	db	0
   360  000E9F                     
   361                           ; BSR set to: 14
   362  000E9F  72                 	db	114	;'r'
   363  000EA0  65                 	db	101	;'e'
   364  000EA1  64                 	db	100	;'d'
   365  000EA2  00                 	db	0
   366  000EA3  00                 	db	0	; dummy byte at the end
   367  0000                     
   368                           ; #config settings
   369                           
   370                           	psect	cinit
   371  003C86                     __pcinit:
   372                           	callstack 0
   373  003C86                     start_initialization:
   374                           	callstack 0
   375  003C86                     __initialization:
   376                           	callstack 0
   377                           
   378                           ; Clear objects allocated to BANK0 (4 bytes)
   379  003C86  0100               	movlb	0
   380  003C88  6BAA               	clrf	(__pbssBANK0+3)& (0+255),b
   381  003C8A  6BA9               	clrf	(__pbssBANK0+2)& (0+255),b
   382  003C8C  6BA8               	clrf	(__pbssBANK0+1)& (0+255),b
   383  003C8E  6BA7               	clrf	__pbssBANK0& (0+255),b
   384                           
   385                           ; Clear objects allocated to COMRAM (6 bytes)
   386  003C90  6A55               	clrf	(__pbssCOMRAM+5)& (0+255),c
   387  003C92  6A54               	clrf	(__pbssCOMRAM+4)& (0+255),c
   388  003C94  6A53               	clrf	(__pbssCOMRAM+3)& (0+255),c
   389  003C96  6A52               	clrf	(__pbssCOMRAM+2)& (0+255),c
   390  003C98  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   391  003C9A  6A50               	clrf	__pbssCOMRAM& (0+255),c
   392  003C9C                     end_of_initialization:
   393                           	callstack 0
   394  003C9C                     __end_of__initialization:
   395                           	callstack 0
   396  003C9C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   397  003C9E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   398  003CA0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   399  003CA2  6EF8               	movwf	tblptru,c
   400  003CA4  0E0E               	movlw	high __Lsmallconst
   401  003CA6  6EF7               	movwf	tblptrh,c
   402  003CA8  0100               	movlb	0
   403  003CAA  EFDA  F012         	goto	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMRAM
   406  000050                     __pbssCOMRAM:
   407                           	callstack 0
   408  000050                     _interrupts_upperbound:
   409                           	callstack 0
   410  000050                     	ds	2
   411  000052                     _interrupts_lowerbound:
   412                           	callstack 0
   413  000052                     	ds	2
   414  000054                     _turnright_delay:
   415                           	callstack 0
   416  000054                     	ds	1
   417  000055                     _turnleft_delay:
   418                           	callstack 0
   419  000055                     	ds	1
   420                           
   421                           	psect	bssBANK0
   422  0000A7                     __pbssBANK0:
   423                           	callstack 0
   424  0000A7                     _overtime_flag:
   425                           	callstack 0
   426  0000A7                     	ds	1
   427  0000A8                     _returnhome_flag:
   428                           	callstack 0
   429  0000A8                     	ds	1
   430  0000A9                     _unknowncard_flag:
   431                           	callstack 0
   432  0000A9                     	ds	1
   433  0000AA                     _colourcard_flag:
   434                           	callstack 0
   435  0000AA                     	ds	1
   436                           
   437                           	psect	cstackBANK0
   438  000060                     __pcstackBANK0:
   439                           	callstack 0
   440  000060                     left@mL:
   441                           	callstack 0
   442  000060                     right@mL:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x0
   446  000060                     	ds	2
   447  000062                     left@mR:
   448                           	callstack 0
   449  000062                     right@mR:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453  000062                     	ds	2
   454  000064                     left@deg:
   455                           	callstack 0
   456  000064                     right@deg:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x4
   460  000064                     	ds	2
   461  000066                     left@delay:
   462                           	callstack 0
   463  000066                     right@delay:
   464                           	callstack 0
   465                           
   466                           ; 4 bytes @ 0x6
   467  000066                     	ds	4
   468  00006A                     _left$3193:
   469                           	callstack 0
   470  00006A                     _right$3194:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0xA
   474  00006A                     	ds	4
   475  00006E                     left@i:
   476                           	callstack 0
   477  00006E                     right@i:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xE
   481  00006E                     	ds	2
   482  000070                     turnleft@mL:
   483                           	callstack 0
   484  000070                     turnright@mL:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x10
   488  000070                     	ds	2
   489  000072                     turnleft@mR:
   490                           	callstack 0
   491  000072                     turnright@mR:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x12
   495  000072                     	ds	2
   496  000074                     turnleft@deg:
   497                           	callstack 0
   498  000074                     turnright@deg:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x14
   502  000074                     	ds	2
   503  000076                     colourcards_readRGBC@abs:
   504                           	callstack 0
   505  000076                     DCmotors_calibration@mL:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x16
   509  000076                     	ds	2
   510  000078                     colourcards_readRGBC@mL:
   511                           	callstack 0
   512  000078                     DCmotors_calibration@mR:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x18
   516  000078                     	ds	2
   517  00007A                     ??_DCmotors_calibration:
   518  00007A                     colourcards_readRGBC@mR:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x1A
   522  00007A                     	ds	2
   523  00007C                     ??_colourcards_readRGBC:
   524                           
   525                           ; 1 bytes @ 0x1C
   526  00007C                     	ds	2
   527  00007E                     colourcards_readRGBC@rel:
   528                           	callstack 0
   529                           
   530                           ; 12 bytes @ 0x1E
   531  00007E                     	ds	12
   532  00008A                     ??_main:
   533                           
   534                           ; 1 bytes @ 0x2A
   535  00008A                     	ds	2
   536  00008C                     main@start:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x2C
   540  00008C                     	ds	1
   541  00008D                     main@current:
   542                           	callstack 0
   543                           
   544                           ; 8 bytes @ 0x2D
   545  00008D                     	ds	8
   546  000095                     main@motorL:
   547                           	callstack 0
   548                           
   549                           ; 9 bytes @ 0x35
   550  000095                     	ds	9
   551  00009E                     main@motorR:
   552                           	callstack 0
   553                           
   554                           ; 9 bytes @ 0x3E
   555  00009E                     	ds	9
   556                           
   557                           	psect	cstackCOMRAM
   558  000001                     __pcstackCOMRAM:
   559                           	callstack 0
   560  000001                     ??i2_I2C_2_Master_Idle:
   561  000001                     
   562                           ; 1 bytes @ 0x0
   563  000001                     	ds	1
   564  000002                     i2I2C_2_Master_Write@data_byte:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x1
   568  000002                     	ds	1
   569  000003                     i2colourclick_writetoaddr@value:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x2
   573  000003                     	ds	1
   574  000004                     i2colourclick_writetoaddr@address:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x3
   578  000004                     	ds	1
   579  000005                     ??i2_interrupts_colourclick:
   580                           
   581                           ; 1 bytes @ 0x4
   582  000005                     	ds	1
   583  000006                     ??_HighISR:
   584  000006                     
   585                           ; 1 bytes @ 0x5
   586  000006                     	ds	1
   587  000007                     ??_LowISR:
   588                           
   589                           ; 1 bytes @ 0x6
   590  000007                     	ds	3
   591  00000A                     ??_adjdelay:
   592  00000A                     ??_I2C_2_Master_Idle:
   593  00000A                     ?___wmul:
   594                           	callstack 0
   595  00000A                     ADC_getval@tmpval:
   596                           	callstack 0
   597  00000A                     colourclickLEDs_C@tog:
   598                           	callstack 0
   599  00000A                     DCmotors_init@PWMperiod:
   600                           	callstack 0
   601  00000A                     ___wmul@multiplier:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x9
   605  00000A                     	ds	1
   606  00000B                     ??_I2C_2_Master_Read:
   607  00000B                     I2C_2_Master_Write@data_byte:
   608                           	callstack 0
   609  00000B                     checkbatterylevel@batterylevel:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0xA
   613  00000B                     	ds	1
   614  00000C                     colourclick_writetoaddr@value:
   615                           	callstack 0
   616  00000C                     I2C_2_Master_Read@ack:
   617                           	callstack 0
   618  00000C                     adjdelay@mode:
   619                           	callstack 0
   620  00000C                     ___wmul@multiplicand:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0xB
   624  00000C                     	ds	1
   625  00000D                     colourclick_writetoaddr@address:
   626                           	callstack 0
   627  00000D                     I2C_2_Master_Read@tmp:
   628                           	callstack 0
   629  00000D                     adjdelay@i:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0xC
   633  00000D                     	ds	1
   634  00000E                     ??_colourclick_init:
   635  00000E                     ??_interrupts_colourclick:
   636  00000E                     ?_colourclick_readR:
   637                           	callstack 0
   638  00000E                     ?_colourclick_readG:
   639                           	callstack 0
   640  00000E                     ?_colourclick_readB:
   641                           	callstack 0
   642  00000E                     ?_colourclick_readC:
   643                           	callstack 0
   644  00000E                     ___wmul@product:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0xD
   648  00000E                     	ds	1
   649  00000F                     
   650                           ; 1 bytes @ 0xE
   651  00000F                     	ds	1
   652  000010                     ??_colourclick_readR:
   653  000010                     ??_colourclick_readG:
   654  000010                     ??_colourclick_readB:
   655  000010                     ??_colourclick_readC:
   656  000010                     ?___awdiv:
   657                           	callstack 0
   658  000010                     ?___lwdiv:
   659                           	callstack 0
   660  000010                     ___awdiv@dividend:
   661                           	callstack 0
   662  000010                     ___lwdiv@dividend:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xF
   666  000010                     	ds	2
   667  000012                     ___awdiv@divisor:
   668                           	callstack 0
   669  000012                     ___lwdiv@divisor:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x11
   673  000012                     	ds	1
   674  000013                     colourclick_readR@tmp:
   675                           	callstack 0
   676  000013                     colourclick_readG@tmp:
   677                           	callstack 0
   678  000013                     colourclick_readB@tmp:
   679                           	callstack 0
   680  000013                     colourclick_readC@tmp:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x12
   684  000013                     	ds	1
   685  000014                     ___awdiv@counter:
   686                           	callstack 0
   687  000014                     ___lwdiv@quotient:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x13
   691  000014                     	ds	1
   692  000015                     ___awdiv@sign:
   693                           	callstack 0
   694  000015                     colourclick_readRGBC@tmpval:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x14
   698  000015                     	ds	1
   699  000016                     ___lwdiv@counter:
   700                           	callstack 0
   701  000016                     ___awdiv@quotient:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x15
   705  000016                     	ds	1
   706  000017                     ??_colourclick_calibration:
   707  000017                     ?___xxtofl:
   708                           	callstack 0
   709  000017                     colourclick_readRGBC2@tmpval:
   710                           	callstack 0
   711  000017                     ___xxtofl@val:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x16
   715  000017                     	ds	1
   716  000018                     DCmotors_setPWM@m:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x17
   720  000018                     	ds	1
   721  000019                     colourclick_readRGBC2@mode:
   722                           	callstack 0
   723  000019                     colourclick_calibration@initial:
   724                           	callstack 0
   725                           
   726                           ; 8 bytes @ 0x18
   727  000019                     	ds	1
   728  00001A                     ??_colourclick_readRGBC2:
   729  00001A                     ??_DCmotors_setPWM:
   730                           
   731                           ; 1 bytes @ 0x19
   732  00001A                     	ds	1
   733  00001B                     ??___xxtofl:
   734                           
   735                           ; 1 bytes @ 0x1A
   736  00001B                     	ds	4
   737  00001F                     ___xxtofl@sign:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x1E
   741  00001F                     	ds	1
   742  000020                     ___xxtofl@exp:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x1F
   746  000020                     	ds	1
   747  000021                     DCmotors_setPWM@PWMduty:
   748                           	callstack 0
   749  000021                     ___xxtofl@arg:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x20
   753  000021                     	ds	2
   754  000023                     forward@mL:
   755                           	callstack 0
   756  000023                     reverse@mL:
   757                           	callstack 0
   758  000023                     stop@mL:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x22
   762  000023                     	ds	2
   763  000025                     ?___fldiv:
   764                           	callstack 0
   765  000025                     ?___flmul:
   766                           	callstack 0
   767  000025                     forward@mR:
   768                           	callstack 0
   769  000025                     reverse@mR:
   770                           	callstack 0
   771  000025                     stop@mR:
   772                           	callstack 0
   773  000025                     ___flge@ff1:
   774                           	callstack 0
   775  000025                     ___fldiv@b:
   776                           	callstack 0
   777  000025                     ___flmul@b:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x24
   781  000025                     	ds	2
   782  000027                     ??_stop:
   783  000027                     
   784                           ; 1 bytes @ 0x26
   785  000027                     	ds	2
   786  000029                     clearance@mL:
   787                           	callstack 0
   788  000029                     ___flge@ff2:
   789                           	callstack 0
   790  000029                     ___fldiv@a:
   791                           	callstack 0
   792  000029                     ___flmul@a:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x28
   796  000029                     	ds	2
   797  00002B                     clearance@mR:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x2A
   801  00002B                     	ds	2
   802  00002D                     ??_clearance:
   803  00002D                     ??___fldiv:
   804  00002D                     ??___flmul:
   805  00002D                     ??___flge:
   806                           
   807                           ; 1 bytes @ 0x2C
   808  00002D                     	ds	4
   809  000031                     ___flmul@sign:
   810                           	callstack 0
   811  000031                     ___fldiv@rem:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x30
   815  000031                     	ds	1
   816  000032                     ___flmul@grs:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x31
   820  000032                     	ds	3
   821  000035                     ___fldiv@sign:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x34
   825  000035                     	ds	1
   826  000036                     ___flmul@aexp:
   827                           	callstack 0
   828  000036                     ___fldiv@new_exp:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x35
   832  000036                     	ds	1
   833  000037                     ___flmul@bexp:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x36
   837  000037                     	ds	1
   838  000038                     ___fldiv@grs:
   839                           	callstack 0
   840  000038                     ___flmul@prod:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x37
   844  000038                     	ds	4
   845  00003C                     ___fldiv@bexp:
   846                           	callstack 0
   847  00003C                     ___flmul@temp:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x3B
   851  00003C                     	ds	1
   852  00003D                     ___fldiv@aexp:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x3C
   856  00003D                     	ds	1
   857  00003E                     ?___fladd:
   858                           	callstack 0
   859  00003E                     colourcards_normaliseRGBC@abs:
   860                           	callstack 0
   861  00003E                     ___fladd@b:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x3D
   865  00003E                     	ds	2
   866  000040                     colourcards_normaliseRGBC@rel:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x3F
   870  000040                     	ds	2
   871  000042                     colourcards_normaliseRGBC@R:
   872                           	callstack 0
   873  000042                     ___fladd@a:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x41
   877  000042                     	ds	2
   878  000044                     colourcards_normaliseRGBC@G:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x43
   882  000044                     	ds	2
   883  000046                     ??___fladd:
   884  000046                     colourcards_normaliseRGBC@B:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x45
   888  000046                     	ds	2
   889  000048                     colourcards_normaliseRGBC@C:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x47
   893  000048                     	ds	2
   894  00004A                     ___fladd@signs:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x49
   898  00004A                     	ds	1
   899  00004B                     ___fladd@aexp:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x4A
   903  00004B                     	ds	1
   904  00004C                     ___fladd@bexp:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x4B
   908  00004C                     	ds	1
   909  00004D                     ___fladd@grs:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x4C
   913  00004D                     	ds	1
   914  00004E                     ??_left:
   915  00004E                     ??_right:
   916                           
   917                           ; 1 bytes @ 0x4D
   918  00004E                     	ds	1
   919  00004F                     DCmotors_calibration@okay:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x4E
   923  00004F                     	ds	1
   924                           
   925 ;;
   926 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   927 ;;
   928 ;; *************** function _main *****************
   929 ;; Defined at:
   930 ;;		line 7 in file "main.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  motorR          9   62[BANK0 ] struct .
   935 ;;  motorL          9   53[BANK0 ] struct .
   936 ;;  current         8   45[BANK0 ] struct .
   937 ;;  PWMperiod       1    0        unsigned char 
   938 ;;  start           1   44[BANK0 ] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;Total ram usage:       29 bytes
   953 ;; Hardware stack levels required when called: 13
   954 ;; This function calls:
   955 ;;		_ADC_init
   956 ;;		_DCmotors_calibration
   957 ;;		_DCmotors_init
   958 ;;		_USART4_init
   959 ;;		_checkbatterylevel
   960 ;;		_colourcards_readRGBC
   961 ;;		_colourclickLEDs_C
   962 ;;		_colourclick_calibration
   963 ;;		_colourclick_init
   964 ;;		_colourclick_readRGBC
   965 ;;		_forward
   966 ;;		_interrupts_init
   967 ;;		_reverse
   968 ;;		_stop
   969 ;;		_timer0_init
   970 ;; This function is called by:
   971 ;;		Startup code after reset
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text0
   976  0025B4                     __ptext0:
   977                           	callstack 0
   978  0025B4                     _main:
   979                           	callstack 18
   980  0025B4                     
   981                           ;main.c: 11:     RGBC_val current;;main.c: 12:     unsigned char start = 0;
   982  0025B4  0E00               	movlw	0
   983  0025B6  0100               	movlb	0	; () banked
   984  0025B8  6F8C               	movwf	main@start& (0+255),b
   985                           
   986                           ;main.c: 14:     turnleft_delay = 0;
   987  0025BA  0E00               	movlw	0
   988  0025BC  6E55               	movwf	_turnleft_delay^0,c	;volatile
   989                           
   990                           ;main.c: 15:     turnright_delay = 0;
   991  0025BE  0E00               	movlw	0
   992  0025C0  6E54               	movwf	_turnright_delay^0,c	;volatile
   993                           
   994                           ;main.c: 16:     interrupts_lowerbound = 0;
   995  0025C2  0E00               	movlw	0
   996  0025C4  6E53               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
   997  0025C6  0E00               	movlw	0
   998  0025C8  6E52               	movwf	_interrupts_lowerbound^0,c	;volatile
   999                           
  1000                           ;main.c: 17:     interrupts_upperbound = 0;
  1001  0025CA  0E00               	movlw	0
  1002  0025CC  6E51               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1003  0025CE  0E00               	movlw	0
  1004  0025D0  6E50               	movwf	_interrupts_upperbound^0,c	;volatile
  1005                           
  1006                           ;main.c: 18:     colourcard_flag = 0;
  1007  0025D2  0E00               	movlw	0
  1008  0025D4  6FAA               	movwf	_colourcard_flag& (0+255),b	;volatile
  1009                           
  1010                           ;main.c: 19:     unknowncard_flag = 0;
  1011  0025D6  0E00               	movlw	0
  1012  0025D8  6FA9               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1013                           
  1014                           ;main.c: 20:     returnhome_flag = 0;
  1015  0025DA  0E00               	movlw	0
  1016  0025DC  6FA8               	movwf	_returnhome_flag& (0+255),b	;volatile
  1017                           
  1018                           ;main.c: 21:     overtime_flag = 0;
  1019  0025DE  0E00               	movlw	0
  1020  0025E0  6FA7               	movwf	_overtime_flag& (0+255),b	;volatile
  1021                           
  1022                           ;main.c: 23:     DC_motor motorL;;main.c: 24:     motorL.power=0;
  1023  0025E2  0E00               	movlw	0
  1024  0025E4  6F95               	movwf	main@motorL& (0+255),b
  1025                           
  1026                           ;main.c: 25:     motorL.direction=1;
  1027  0025E6  0E01               	movlw	1
  1028  0025E8  6F96               	movwf	(main@motorL+1)& (0+255),b
  1029  0025EA                     
  1030                           ; BSR set to: 0
  1031                           ;main.c: 26:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1032  0025EA  0EA3               	movlw	163
  1033  0025EC  6F97               	movwf	(main@motorL+2)& (0+255),b
  1034  0025EE  0E0F               	movlw	15
  1035  0025F0  6F98               	movwf	(main@motorL+3)& (0+255),b
  1036  0025F2                     
  1037                           ; BSR set to: 0
  1038                           ;main.c: 27:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1039  0025F2  0E7D               	movlw	125
  1040  0025F4  6F99               	movwf	(main@motorL+4)& (0+255),b
  1041  0025F6  0E0F               	movlw	15
  1042  0025F8  6F9A               	movwf	(main@motorL+5)& (0+255),b
  1043                           
  1044                           ;main.c: 28:     motorL.dir_pin=4;
  1045  0025FA  0E04               	movlw	4
  1046  0025FC  6F9B               	movwf	(main@motorL+6)& (0+255),b
  1047  0025FE                     
  1048                           ; BSR set to: 0
  1049                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
  1050  0025FE  0E00               	movlw	0
  1051  002600  6F9D               	movwf	(main@motorL+8)& (0+255),b
  1052  002602  0E63               	movlw	99
  1053  002604  6F9C               	movwf	(main@motorL+7)& (0+255),b
  1054                           
  1055                           ;main.c: 31:     DC_motor motorR;;main.c: 32:     motorR.power=0;
  1056  002606  0E00               	movlw	0
  1057  002608  6F9E               	movwf	main@motorR& (0+255),b
  1058                           
  1059                           ;main.c: 33:     motorR.direction=1;
  1060  00260A  0E01               	movlw	1
  1061  00260C  6F9F               	movwf	(main@motorR+1)& (0+255),b
  1062  00260E                     
  1063                           ; BSR set to: 0
  1064                           ;main.c: 34:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1065  00260E  0EA0               	movlw	160
  1066  002610  6FA0               	movwf	(main@motorR+2)& (0+255),b
  1067  002612  0E0F               	movlw	15
  1068  002614  6FA1               	movwf	(main@motorR+3)& (0+255),b
  1069  002616                     
  1070                           ; BSR set to: 0
  1071                           ;main.c: 35:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1072  002616  0E7F               	movlw	127
  1073  002618  6FA2               	movwf	(main@motorR+4)& (0+255),b
  1074  00261A  0E0F               	movlw	15
  1075  00261C  6FA3               	movwf	(main@motorR+5)& (0+255),b
  1076                           
  1077                           ;main.c: 36:     motorR.dir_pin=6;
  1078  00261E  0E06               	movlw	6
  1079  002620  6FA4               	movwf	(main@motorR+6)& (0+255),b
  1080  002622                     
  1081                           ; BSR set to: 0
  1082                           ;main.c: 37:     motorR.PWMperiod=PWMperiod;
  1083  002622  0E00               	movlw	0
  1084  002624  6FA6               	movwf	(main@motorR+8)& (0+255),b
  1085  002626  0E63               	movlw	99
  1086  002628  6FA5               	movwf	(main@motorR+7)& (0+255),b
  1087  00262A                     
  1088                           ; BSR set to: 0
  1089                           ;main.c: 39:     ADC_init();
  1090  00262A  EC12  F01F         	call	_ADC_init	;wreg free
  1091  00262E                     
  1092                           ;main.c: 40:     colourclick_init();
  1093  00262E  EC12  F01E         	call	_colourclick_init	;wreg free
  1094  002632                     
  1095                           ;main.c: 41:     DCmotors_init(PWMperiod);
  1096  002632  0E63               	movlw	99
  1097  002634  EC09  F01D         	call	_DCmotors_init
  1098  002638                     
  1099                           ;main.c: 42:     timer0_init();
  1100  002638  ECB5  F01E         	call	_timer0_init	;wreg free
  1101  00263C                     
  1102                           ;main.c: 43:     USART4_init();
  1103  00263C  ECE5  F01E         	call	_USART4_init	;wreg free
  1104  002640                     
  1105                           ;main.c: 44:     checkbatterylevel();
  1106  002640  ECD5  F01E         	call	_checkbatterylevel	;wreg free
  1107  002644                     
  1108                           ;main.c: 49:     DCmotors_calibration(&motorL, &motorR);
  1109  002644  0E95               	movlw	low main@motorL
  1110  002646  0100               	movlb	0	; () banked
  1111  002648  6F76               	movwf	DCmotors_calibration@mL& (0+255),b
  1112  00264A  0E00               	movlw	high main@motorL
  1113  00264C  6F77               	movwf	(DCmotors_calibration@mL+1)& (0+255),b
  1114  00264E  0E9E               	movlw	low main@motorR
  1115  002650  6F78               	movwf	DCmotors_calibration@mR& (0+255),b
  1116  002652  0E00               	movlw	high main@motorR
  1117  002654  6F79               	movwf	(DCmotors_calibration@mR+1)& (0+255),b
  1118  002656  EC95  F011         	call	_DCmotors_calibration	;wreg free
  1119  00265A                     
  1120                           ;main.c: 55:     colourclick_calibration();
  1121  00265A  EC95  F01B         	call	_colourclick_calibration	;wreg free
  1122  00265E                     l69:
  1123  00265E  A48E               	btfss	142,2,c	;volatile
  1124  002660  EF34  F013         	goto	u5421
  1125  002664  EF36  F013         	goto	u5420
  1126  002668                     u5421:
  1127  002668  EF3D  F013         	goto	l73
  1128  00266C                     u5420:
  1129  00266C  B68E               	btfsc	142,3,c	;volatile
  1130  00266E  EF3B  F013         	goto	u5431
  1131  002672  EF3D  F013         	goto	u5430
  1132  002676                     u5431:
  1133  002676  EF2F  F013         	goto	l69
  1134  00267A                     u5430:
  1135  00267A                     l73:
  1136                           
  1137                           ;main.c: 62:     LATDbits.LATD3 = 1;
  1138  00267A  867C               	bsf	124,3,c	;volatile
  1139  00267C                     
  1140                           ;main.c: 63:     colourclickLEDs_C(1);
  1141  00267C  0E01               	movlw	1
  1142  00267E  ECA4  F01E         	call	_colourclickLEDs_C
  1143  002682                     
  1144                           ;main.c: 64:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1145  002682  0E52               	movlw	82
  1146  002684  0100               	movlb	0	; () banked
  1147  002686  6F8B               	movwf	(??_main+1)& (0+255),b
  1148  002688  0E2B               	movlw	43
  1149  00268A  6F8A               	movwf	??_main& (0+255),b
  1150  00268C  0E00               	movlw	0
  1151  00268E                     u5707:
  1152  00268E  2EE8               	decfsz	wreg,f,c
  1153  002690  D7FE               	bra	u5707
  1154  002692  2F8A               	decfsz	??_main& (0+255),f,b
  1155  002694  D7FC               	bra	u5707
  1156  002696  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1157  002698  D7FA               	bra	u5707
  1158  00269A  F000               	nop	
  1159  00269C                     
  1160                           ;main.c: 65:     interrupts_init();
  1161  00269C  EC92  F01E         	call	_interrupts_init	;wreg free
  1162  0026A0                     l4991:
  1163                           
  1164                           ;main.c: 71:         if (start==0 && colourcard_flag==1) {
  1165  0026A0  0100               	movlb	0	; () banked
  1166  0026A2  518C               	movf	main@start& (0+255),w,b
  1167  0026A4  A4D8               	btfss	status,2,c
  1168  0026A6  EF57  F013         	goto	u5441
  1169  0026AA  EF59  F013         	goto	u5440
  1170  0026AE                     u5441:
  1171  0026AE  EF67  F013         	goto	l4997
  1172  0026B2                     u5440:
  1173  0026B2                     
  1174                           ; BSR set to: 0
  1175  0026B2  05AA               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1176  0026B4  A4D8               	btfss	status,2,c
  1177  0026B6  EF5F  F013         	goto	u5451
  1178  0026BA  EF61  F013         	goto	u5450
  1179  0026BE                     u5451:
  1180  0026BE  EF67  F013         	goto	l4997
  1181  0026C2                     u5450:
  1182  0026C2                     
  1183                           ; BSR set to: 0
  1184                           ;main.c: 72:             colourcard_flag = 0;
  1185  0026C2  0E00               	movlw	0
  1186  0026C4  6FAA               	movwf	_colourcard_flag& (0+255),b	;volatile
  1187                           
  1188                           ;main.c: 73:             start = 1;
  1189  0026C6  0E01               	movlw	1
  1190  0026C8  6F8C               	movwf	main@start& (0+255),b
  1191                           
  1192                           ;main.c: 74:         } else if (start==1 && colourcard_flag==1) {
  1193  0026CA  EF50  F013         	goto	l4991
  1194  0026CE                     l4997:
  1195                           
  1196                           ; BSR set to: 0
  1197  0026CE  058C               	decf	main@start& (0+255),w,b
  1198  0026D0  A4D8               	btfss	status,2,c
  1199  0026D2  EF6D  F013         	goto	u5461
  1200  0026D6  EF6F  F013         	goto	u5460
  1201  0026DA                     u5461:
  1202  0026DA  EFE6  F013         	goto	l5027
  1203  0026DE                     u5460:
  1204  0026DE                     
  1205                           ; BSR set to: 0
  1206  0026DE  05AA               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1207  0026E0  A4D8               	btfss	status,2,c
  1208  0026E2  EF75  F013         	goto	u5471
  1209  0026E6  EF77  F013         	goto	u5470
  1210  0026EA                     u5471:
  1211  0026EA  EFE6  F013         	goto	l5027
  1212  0026EE                     u5470:
  1213  0026EE                     
  1214                           ; BSR set to: 0
  1215                           ;main.c: 75:             stop(&motorL, &motorR);
  1216  0026EE  0E95               	movlw	low main@motorL
  1217  0026F0  6E23               	movwf	stop@mL^0,c
  1218  0026F2  0E00               	movlw	high main@motorL
  1219  0026F4  6E24               	movwf	(stop@mL+1)^0,c
  1220  0026F6  0E9E               	movlw	low main@motorR
  1221  0026F8  6E25               	movwf	stop@mR^0,c
  1222  0026FA  0E00               	movlw	high main@motorR
  1223  0026FC  6E26               	movwf	(stop@mR+1)^0,c
  1224  0026FE  EC50  F01B         	call	_stop	;wreg free
  1225  002702                     
  1226                           ;main.c: 76:             LATFbits.LATF0 = 1;
  1227  002702  807E               	bsf	126,0,c	;volatile
  1228  002704                     
  1229                           ;main.c: 77:             LATHbits.LATH0 = 1;
  1230  002704  8080               	bsf	128,0,c	;volatile
  1231                           
  1232                           ;main.c: 78:             reverse(&motorL, &motorR);
  1233  002706  0E95               	movlw	low main@motorL
  1234  002708  6E23               	movwf	reverse@mL^0,c
  1235  00270A  0E00               	movlw	high main@motorL
  1236  00270C  6E24               	movwf	(reverse@mL+1)^0,c
  1237  00270E  0E9E               	movlw	low main@motorR
  1238  002710  6E25               	movwf	reverse@mR^0,c
  1239  002712  0E00               	movlw	high main@motorR
  1240  002714  6E26               	movwf	(reverse@mR+1)^0,c
  1241  002716  EC09  F01B         	call	_reverse	;wreg free
  1242  00271A                     
  1243                           ;main.c: 79:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1244  00271A  0E09               	movlw	9
  1245  00271C  0100               	movlb	0	; () banked
  1246  00271E  6F8B               	movwf	(??_main+1)& (0+255),b
  1247  002720  0E1E               	movlw	30
  1248  002722  6F8A               	movwf	??_main& (0+255),b
  1249  002724  0EE4               	movlw	228
  1250  002726                     u5717:
  1251  002726  2EE8               	decfsz	wreg,f,c
  1252  002728  D7FE               	bra	u5717
  1253  00272A  2F8A               	decfsz	??_main& (0+255),f,b
  1254  00272C  D7FC               	bra	u5717
  1255  00272E  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1256  002730  D7FA               	bra	u5717
  1257  002732  F000               	nop	
  1258  002734                     
  1259                           ;main.c: 80:             stop(&motorL, &motorR);
  1260  002734  0E95               	movlw	low main@motorL
  1261  002736  6E23               	movwf	stop@mL^0,c
  1262  002738  0E00               	movlw	high main@motorL
  1263  00273A  6E24               	movwf	(stop@mL+1)^0,c
  1264  00273C  0E9E               	movlw	low main@motorR
  1265  00273E  6E25               	movwf	stop@mR^0,c
  1266  002740  0E00               	movlw	high main@motorR
  1267  002742  6E26               	movwf	(stop@mR+1)^0,c
  1268  002744  EC50  F01B         	call	_stop	;wreg free
  1269  002748                     
  1270                           ;main.c: 81:             LATFbits.LATF0 = 0;
  1271  002748  907E               	bcf	126,0,c	;volatile
  1272  00274A                     
  1273                           ;main.c: 82:             LATHbits.LATH0 = 0;
  1274  00274A  9080               	bcf	128,0,c	;volatile
  1275                           
  1276                           ;main.c: 83:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1277  00274C  0E52               	movlw	82
  1278  00274E  0100               	movlb	0	; () banked
  1279  002750  6F8B               	movwf	(??_main+1)& (0+255),b
  1280  002752  0E2B               	movlw	43
  1281  002754  6F8A               	movwf	??_main& (0+255),b
  1282  002756  0E00               	movlw	0
  1283  002758                     u5727:
  1284  002758  2EE8               	decfsz	wreg,f,c
  1285  00275A  D7FE               	bra	u5727
  1286  00275C  2F8A               	decfsz	??_main& (0+255),f,b
  1287  00275E  D7FC               	bra	u5727
  1288  002760  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1289  002762  D7FA               	bra	u5727
  1290  002764  F000               	nop	
  1291  002766                     
  1292                           ;main.c: 85:             colourcards_readRGBC(&current, &motorL, &motorR);
  1293  002766  0E8D               	movlw	low main@current
  1294  002768  0100               	movlb	0	; () banked
  1295  00276A  6F76               	movwf	colourcards_readRGBC@abs& (0+255),b
  1296  00276C  0E00               	movlw	high main@current
  1297  00276E  6F77               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1298  002770  0E95               	movlw	low main@motorL
  1299  002772  6F78               	movwf	colourcards_readRGBC@mL& (0+255),b
  1300  002774  0E00               	movlw	high main@motorL
  1301  002776  6F79               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1302  002778  0E9E               	movlw	low main@motorR
  1303  00277A  6F7A               	movwf	colourcards_readRGBC@mR& (0+255),b
  1304  00277C  0E00               	movlw	high main@motorR
  1305  00277E  6F7B               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1306  002780  EC52  F007         	call	_colourcards_readRGBC	;wreg free
  1307  002784                     
  1308                           ;main.c: 86:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1309  002784  0E52               	movlw	82
  1310  002786  0100               	movlb	0	; () banked
  1311  002788  6F8B               	movwf	(??_main+1)& (0+255),b
  1312  00278A  0E2B               	movlw	43
  1313  00278C  6F8A               	movwf	??_main& (0+255),b
  1314  00278E  0E00               	movlw	0
  1315  002790                     u5737:
  1316  002790  2EE8               	decfsz	wreg,f,c
  1317  002792  D7FE               	bra	u5737
  1318  002794  2F8A               	decfsz	??_main& (0+255),f,b
  1319  002796  D7FC               	bra	u5737
  1320  002798  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1321  00279A  D7FA               	bra	u5737
  1322  00279C  F000               	nop	
  1323  00279E                     
  1324                           ;main.c: 88:             colourclick_readRGBC(&current);
  1325  00279E  0E8D               	movlw	low main@current
  1326  0027A0  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  1327  0027A2  0E00               	movlw	high main@current
  1328  0027A4  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1329  0027A6  EC0B  F01C         	call	_colourclick_readRGBC	;wreg free
  1330  0027AA                     
  1331                           ;main.c: 89:             interrupts_upperbound = current.C + 100;
  1332  0027AA  0E64               	movlw	100
  1333  0027AC  0100               	movlb	0	; () banked
  1334  0027AE  2593               	addwf	(main@current+6)& (0+255),w,b
  1335  0027B0  6E50               	movwf	_interrupts_upperbound^0,c	;volatile
  1336  0027B2  0E00               	movlw	0
  1337  0027B4  2194               	addwfc	(main@current+7)& (0+255),w,b
  1338  0027B6  6E51               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1339  0027B8                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 90:             interrupts_lowerbound = current.C - 150;
  1342  0027B8  0E6A               	movlw	106
  1343  0027BA  2593               	addwf	(main@current+6)& (0+255),w,b
  1344  0027BC  6E52               	movwf	_interrupts_lowerbound^0,c	;volatile
  1345  0027BE  0EFF               	movlw	255
  1346  0027C0  2194               	addwfc	(main@current+7)& (0+255),w,b
  1347  0027C2  6E53               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1348  0027C4                     
  1349                           ; BSR set to: 0
  1350                           ;main.c: 92:             colourcard_flag = 0;
  1351  0027C4  0E00               	movlw	0
  1352  0027C6  6FAA               	movwf	_colourcard_flag& (0+255),b	;volatile
  1353                           
  1354                           ;main.c: 93:         } else {forward(&motorL, &motorR);}
  1355  0027C8  EF50  F013         	goto	l4991
  1356  0027CC                     l5027:
  1357                           
  1358                           ; BSR set to: 0
  1359  0027CC  0E95               	movlw	low main@motorL
  1360  0027CE  6E23               	movwf	forward@mL^0,c
  1361  0027D0  0E00               	movlw	high main@motorL
  1362  0027D2  6E24               	movwf	(forward@mL+1)^0,c
  1363  0027D4  0E9E               	movlw	low main@motorR
  1364  0027D6  6E25               	movwf	forward@mR^0,c
  1365  0027D8  0E00               	movlw	high main@motorR
  1366  0027DA  6E26               	movwf	(forward@mR+1)^0,c
  1367  0027DC  ECC2  F01A         	call	_forward	;wreg free
  1368  0027E0  EF50  F013         	goto	l4991
  1369  0027E4  EF2E  F000         	goto	start
  1370  0027E8                     __end_of_main:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _timer0_init *****************
  1374 ;; Defined at:
  1375 ;;		line 8 in file "timers.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; Hardware stack levels required when called: 7
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text1
  1404  003D6A                     __ptext1:
  1405                           	callstack 0
  1406  003D6A                     _timer0_init:
  1407                           	callstack 23
  1408  003D6A                     
  1409                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1410  003D6A  50D6               	movf	214,w,c	;volatile
  1411  003D6C  0B1F               	andlw	-225
  1412  003D6E  0940               	iorlw	64
  1413  003D70  6ED6               	movwf	214,c	;volatile
  1414  003D72                     
  1415                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1416  003D72  88D6               	bsf	214,4,c	;volatile
  1417                           
  1418                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  1419  003D74  50D6               	movf	214,w,c	;volatile
  1420  003D76  0BF0               	andlw	-16
  1421  003D78  0908               	iorlw	8
  1422  003D7A  6ED6               	movwf	214,c	;volatile
  1423  003D7C                     
  1424                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  1425  003D7C  88D5               	bsf	213,4,c	;volatile
  1426                           
  1427                           ;timers.c: 14:     TMR0H=0b1011;
  1428  003D7E  0E0B               	movlw	11
  1429  003D80  6ED4               	movwf	212,c	;volatile
  1430                           
  1431                           ;timers.c: 15:     TMR0L=0b11011011;
  1432  003D82  0EDB               	movlw	219
  1433  003D84  6ED3               	movwf	211,c	;volatile
  1434  003D86                     
  1435                           ;timers.c: 16:     T0CON0bits.T0EN=1;
  1436  003D86  8ED5               	bsf	213,7,c	;volatile
  1437  003D88  0012               	return		;funcret
  1438  003D8A                     __end_of_timer0_init:
  1439                           	callstack 0
  1440                           
  1441 ;; *************** function _interrupts_init *****************
  1442 ;; Defined at:
  1443 ;;		line 12 in file "interrupts.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 12
  1464 ;; This function calls:
  1465 ;;		_interrupts_clear
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text2
  1472  003D24                     __ptext2:
  1473                           	callstack 0
  1474  003D24                     _interrupts_init:
  1475                           	callstack 18
  1476  003D24                     
  1477                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  1478  003D24  8282               	bsf	130,1,c	;volatile
  1479                           
  1480                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  1481  003D26  010E               	movlb	14	; () banked
  1482  003D28  939A               	bcf	154,1,b	;volatile
  1483  003D2A                     
  1484                           ; BSR set to: 14
  1485                           ;interrupts.c: 15:     INT1PPS=0x09;
  1486  003D2A  0E09               	movlw	9
  1487  003D2C  010D               	movlb	13	; () banked
  1488  003D2E  6FF1               	movwf	241,b	;volatile
  1489  003D30                     
  1490                           ; BSR set to: 13
  1491                           ;interrupts.c: 17:     PIE0bits.INT1IE = 1;
  1492  003D30  010E               	movlb	14	; () banked
  1493  003D32  8329               	bsf	41,1,b	;volatile
  1494  003D34                     
  1495                           ; BSR set to: 14
  1496                           ;interrupts.c: 18:     PIE0bits.TMR0IE = 1;
  1497  003D34  8B29               	bsf	41,5,b	;volatile
  1498  003D36                     
  1499                           ; BSR set to: 14
  1500                           ;interrupts.c: 20:     IPR0bits.INT1IP = 1;
  1501  003D36  831F               	bsf	31,1,b	;volatile
  1502  003D38                     
  1503                           ; BSR set to: 14
  1504                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 0;
  1505  003D38  9B1F               	bcf	31,5,b	;volatile
  1506  003D3A                     
  1507                           ; BSR set to: 14
  1508                           ;interrupts.c: 23:     interrupts_clear();
  1509  003D3A  EC05  F01F         	call	_interrupts_clear	;wreg free
  1510  003D3E                     
  1511                           ;interrupts.c: 25:     INTCONbits.INT1EDG = 0;
  1512  003D3E  92F2               	bcf	242,1,c	;volatile
  1513  003D40                     
  1514                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  1515  003D40  8AF2               	bsf	242,5,c	;volatile
  1516  003D42                     
  1517                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  1518  003D42  8CF2               	bsf	242,6,c	;volatile
  1519  003D44                     
  1520                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  1521  003D44  8EF2               	bsf	242,7,c	;volatile
  1522  003D46  0012               	return		;funcret
  1523  003D48                     __end_of_interrupts_init:
  1524                           	callstack 0
  1525                           
  1526 ;; *************** function _interrupts_clear *****************
  1527 ;; Defined at:
  1528 ;;		line 37 in file "interrupts.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 11
  1549 ;; This function calls:
  1550 ;;		_I2C_2_Master_Start
  1551 ;;		_I2C_2_Master_Stop
  1552 ;;		_I2C_2_Master_Write
  1553 ;;		_interrupts_colourclick
  1554 ;; This function is called by:
  1555 ;;		_interrupts_init
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text3
  1560  003E0A                     __ptext3:
  1561                           	callstack 0
  1562  003E0A                     _interrupts_clear:
  1563                           	callstack 18
  1564  003E0A                     
  1565                           ;interrupts.c: 38:     I2C_2_Master_Start();
  1566  003E0A  EC61  F01F         	call	_I2C_2_Master_Start	;wreg free
  1567                           
  1568                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  1569  003E0E  0E52               	movlw	82
  1570  003E10  EC4A  F01F         	call	_I2C_2_Master_Write
  1571                           
  1572                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  1573  003E14  0EE6               	movlw	230
  1574  003E16  EC4A  F01F         	call	_I2C_2_Master_Write
  1575                           
  1576                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  1577  003E1A  EC5C  F01F         	call	_I2C_2_Master_Stop	;wreg free
  1578                           
  1579                           ;interrupts.c: 43:     interrupts_colourclick();
  1580  003E1E  EC81  F01D         	call	_interrupts_colourclick	;wreg free
  1581  003E22  0012               	return		;funcret
  1582  003E24                     __end_of_interrupts_clear:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _interrupts_colourclick *****************
  1586 ;; Defined at:
  1587 ;;		line 50 in file "interrupts.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;Total ram usage:        1 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 10
  1608 ;; This function calls:
  1609 ;;		_colourclick_writetoaddr
  1610 ;; This function is called by:
  1611 ;;		_interrupts_clear
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text4
  1616  003B02                     __ptext4:
  1617                           	callstack 0
  1618  003B02                     _interrupts_colourclick:
  1619                           	callstack 18
  1620  003B02                     
  1621                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  1622  003B02  0E13               	movlw	19
  1623  003B04  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1624  003B06  0E00               	movlw	0
  1625  003B08  ECC5  F01E         	call	_colourclick_writetoaddr
  1626  003B0C                     
  1627                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1628  003B0C  0E3F               	movlw	63
  1629  003B0E  6E0E               	movwf	??_interrupts_colourclick^0,c
  1630  003B10  0E55               	movlw	85
  1631  003B12                     u5747:
  1632  003B12  2EE8               	decfsz	wreg,f,c
  1633  003B14  D7FE               	bra	u5747
  1634  003B16  2E0E               	decfsz	??_interrupts_colourclick^0,f,c
  1635  003B18  D7FC               	bra	u5747
  1636  003B1A  F000               	nop	
  1637  003B1C                     
  1638                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  1639  003B1C  0E04               	movlw	4
  1640  003B1E  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1641  003B20  0E0C               	movlw	12
  1642  003B22  ECC5  F01E         	call	_colourclick_writetoaddr
  1643  003B26                     
  1644                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  1645  003B26  C052  F00C         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  1646  003B2A  0E04               	movlw	4
  1647  003B2C  ECC5  F01E         	call	_colourclick_writetoaddr
  1648  003B30                     
  1649                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  1650  003B30  5053               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  1651  003B32  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1652  003B34  0E05               	movlw	5
  1653  003B36  ECC5  F01E         	call	_colourclick_writetoaddr
  1654  003B3A                     
  1655                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  1656  003B3A  C050  F00C         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  1657  003B3E  0E06               	movlw	6
  1658  003B40  ECC5  F01E         	call	_colourclick_writetoaddr
  1659  003B44                     
  1660                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  1661  003B44  5051               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  1662  003B46  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1663  003B48  0E07               	movlw	7
  1664  003B4A  ECC5  F01E         	call	_colourclick_writetoaddr
  1665  003B4E  0012               	return		;funcret
  1666  003B50                     __end_of_interrupts_colourclick:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _colourclick_init *****************
  1670 ;; Defined at:
  1671 ;;		line 12 in file "colour_click.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;Total ram usage:        1 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 10
  1692 ;; This function calls:
  1693 ;;		_I2C_2_Master_Init
  1694 ;;		_colourclickLEDs_init
  1695 ;;		_colourclick_writetoaddr
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text5
  1702  003C24                     __ptext5:
  1703                           	callstack 0
  1704  003C24                     _colourclick_init:
  1705                           	callstack 20
  1706  003C24                     
  1707                           ;colour_click.c: 14:     I2C_2_Master_Init();
  1708  003C24  EC2E  F01E         	call	_I2C_2_Master_Init	;wreg free
  1709  003C28                     
  1710                           ;colour_click.c: 17:   colourclick_writetoaddr(0x00, 0x01);
  1711  003C28  0E01               	movlw	1
  1712  003C2A  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1713  003C2C  0E00               	movlw	0
  1714  003C2E  ECC5  F01E         	call	_colourclick_writetoaddr
  1715  003C32                     
  1716                           ;colour_click.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1717  003C32  0E3F               	movlw	63
  1718  003C34  6E0E               	movwf	??_colourclick_init^0,c
  1719  003C36  0E55               	movlw	85
  1720  003C38                     u5757:
  1721  003C38  2EE8               	decfsz	wreg,f,c
  1722  003C3A  D7FE               	bra	u5757
  1723  003C3C  2E0E               	decfsz	??_colourclick_init^0,f,c
  1724  003C3E  D7FC               	bra	u5757
  1725  003C40  F000               	nop	
  1726  003C42                     
  1727                           ;colour_click.c: 21:  colourclick_writetoaddr(0x00, 0x03);
  1728  003C42  0E03               	movlw	3
  1729  003C44  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1730  003C46  0E00               	movlw	0
  1731  003C48  ECC5  F01E         	call	_colourclick_writetoaddr
  1732  003C4C                     
  1733                           ;colour_click.c: 24:  colourclick_writetoaddr(0x01, 0xD5);
  1734  003C4C  0ED5               	movlw	213
  1735  003C4E  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1736  003C50  0E01               	movlw	1
  1737  003C52  ECC5  F01E         	call	_colourclick_writetoaddr
  1738  003C56                     
  1739                           ;colour_click.c: 26:     colourclickLEDs_init();
  1740  003C56  EC43  F01F         	call	_colourclickLEDs_init	;wreg free
  1741  003C5A  0012               	return		;funcret
  1742  003C5C                     __end_of_colourclick_init:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _colourclick_writetoaddr *****************
  1746 ;; Defined at:
  1747 ;;		line 33 in file "colour_click.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  address         1    wreg     unsigned char 
  1750 ;;  value           1   11[COMRAM] unsigned char 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  address         1   12[COMRAM] unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1762 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;Total ram usage:        2 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 9
  1769 ;; This function calls:
  1770 ;;		_I2C_2_Master_Start
  1771 ;;		_I2C_2_Master_Stop
  1772 ;;		_I2C_2_Master_Write
  1773 ;; This function is called by:
  1774 ;;		_interrupts_colourclick
  1775 ;;		_colourclick_init
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text6
  1780  003D8A                     __ptext6:
  1781                           	callstack 0
  1782  003D8A                     _colourclick_writetoaddr:
  1783                           	callstack 18
  1784                           
  1785                           ;incstack = 0
  1786                           ;colourclick_writetoaddr@address stored from wreg
  1787  003D8A  6E0D               	movwf	colourclick_writetoaddr@address^0,c
  1788  003D8C                     
  1789                           ;colour_click.c: 34:     I2C_2_Master_Start();
  1790  003D8C  EC61  F01F         	call	_I2C_2_Master_Start	;wreg free
  1791                           
  1792                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  1793  003D90  0E52               	movlw	82
  1794  003D92  EC4A  F01F         	call	_I2C_2_Master_Write
  1795                           
  1796                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  1797  003D96  500D               	movf	colourclick_writetoaddr@address^0,w,c
  1798  003D98  0980               	iorlw	128
  1799  003D9A  EC4A  F01F         	call	_I2C_2_Master_Write
  1800                           
  1801                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  1802  003D9E  500C               	movf	colourclick_writetoaddr@value^0,w,c
  1803  003DA0  EC4A  F01F         	call	_I2C_2_Master_Write
  1804                           
  1805                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  1806  003DA4  EC5C  F01F         	call	_I2C_2_Master_Stop	;wreg free
  1807  003DA8  0012               	return		;funcret
  1808  003DAA                     __end_of_colourclick_writetoaddr:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _colourclickLEDs_init *****************
  1812 ;; Defined at:
  1813 ;;		line 32 in file "buttons_n_LEDs.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 8
  1834 ;; This function calls:
  1835 ;;		_colourclickLEDs_C
  1836 ;; This function is called by:
  1837 ;;		_colourclick_init
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text7
  1842  003E86                     __ptext7:
  1843                           	callstack 0
  1844  003E86                     _colourclickLEDs_init:
  1845                           	callstack 21
  1846  003E86                     
  1847                           ;buttons_n_LEDs.c: 34:     TRISGbits.TRISG1 = 0;
  1848  003E86  9287               	bcf	135,1,c	;volatile
  1849                           
  1850                           ;buttons_n_LEDs.c: 35:     TRISAbits.TRISA4 = 0;
  1851  003E88  9881               	bcf	129,4,c	;volatile
  1852                           
  1853                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF7 = 0;
  1854  003E8A  9E86               	bcf	134,7,c	;volatile
  1855  003E8C                     
  1856                           ;buttons_n_LEDs.c: 39:     colourclickLEDs_C(0);
  1857  003E8C  0E00               	movlw	0
  1858  003E8E  ECA4  F01E         	call	_colourclickLEDs_C
  1859  003E92  0012               	return		;funcret
  1860  003E94                     __end_of_colourclickLEDs_init:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _I2C_2_Master_Init *****************
  1864 ;; Defined at:
  1865 ;;		line 8 in file "I2C.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 7
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_colourclick_init
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text8
  1894  003C5C                     __ptext8:
  1895                           	callstack 0
  1896  003C5C                     _I2C_2_Master_Init:
  1897                           	callstack 22
  1898  003C5C                     
  1899                           ;I2C.c: 10:   SSP2CON1bits.SSPM= 0b1000;
  1900  003C5C  010E               	movlb	14	; () banked
  1901  003C5E  51D9               	movf	217,w,b	;volatile
  1902  003C60  0BF0               	andlw	-16
  1903  003C62  0908               	iorlw	8
  1904  003C64  6FD9               	movwf	217,b	;volatile
  1905  003C66                     
  1906                           ; BSR set to: 14
  1907                           ;I2C.c: 11:   SSP2CON1bits.SSPEN = 1;
  1908  003C66  8BD9               	bsf	217,5,b	;volatile
  1909                           
  1910                           ;I2C.c: 12:   SSP2ADD = (64000000/(4*100000))-1;
  1911  003C68  0E9F               	movlw	159
  1912  003C6A  6FD6               	movwf	214,b	;volatile
  1913  003C6C                     
  1914                           ; BSR set to: 14
  1915                           ;I2C.c: 15:   TRISDbits.TRISD5 = 1;
  1916  003C6C  8A84               	bsf	132,5,c	;volatile
  1917  003C6E                     
  1918                           ; BSR set to: 14
  1919                           ;I2C.c: 16:   TRISDbits.TRISD6 = 1;
  1920  003C6E  8C84               	bsf	132,6,c	;volatile
  1921  003C70                     
  1922                           ; BSR set to: 14
  1923                           ;I2C.c: 17:   ANSELDbits.ANSELD5=0;
  1924  003C70  9BA7               	bcf	167,5,b	;volatile
  1925  003C72                     
  1926                           ; BSR set to: 14
  1927                           ;I2C.c: 18:   ANSELDbits.ANSELD6=0;
  1928  003C72  9DA7               	bcf	167,6,b	;volatile
  1929                           
  1930                           ;I2C.c: 19:   SSP2DATPPS=0x1D;
  1931  003C74  0E1D               	movlw	29
  1932  003C76  6F1D               	movwf	29,b	;volatile
  1933                           
  1934                           ;I2C.c: 20:   SSP2CLKPPS=0x1E;
  1935  003C78  0E1E               	movlw	30
  1936  003C7A  6F1C               	movwf	28,b	;volatile
  1937                           
  1938                           ;I2C.c: 21:   RD5PPS=0x1C;
  1939  003C7C  0E1C               	movlw	28
  1940  003C7E  6F6F               	movwf	111,b	;volatile
  1941                           
  1942                           ;I2C.c: 22:   RD6PPS=0x1B;
  1943  003C80  0E1B               	movlw	27
  1944  003C82  6F70               	movwf	112,b	;volatile
  1945  003C84                     
  1946                           ; BSR set to: 14
  1947  003C84  0012               	return		;funcret
  1948  003C86                     __end_of_I2C_2_Master_Init:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _colourclick_calibration *****************
  1952 ;; Defined at:
  1953 ;;		line 159 in file "colour_click.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  initial         8   24[COMRAM] struct .
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;Total ram usage:       10 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 11
  1974 ;; This function calls:
  1975 ;;		_colourclickLEDs_C
  1976 ;;		_colourclick_readRGBC
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text9
  1983  00372A                     __ptext9:
  1984                           	callstack 0
  1985  00372A                     _colourclick_calibration:
  1986                           	callstack 19
  1987  00372A                     l334:
  1988  00372A  B48E               	btfsc	142,2,c	;volatile
  1989  00372C  EF9A  F01B         	goto	u4161
  1990  003730  EF9C  F01B         	goto	u4160
  1991  003734                     u4161:
  1992  003734  EF95  F01B         	goto	l334
  1993  003738                     u4160:
  1994  003738                     
  1995                           ;colour_click.c: 162:     LATDbits.LATD3 = 1;
  1996  003738  867C               	bsf	124,3,c	;volatile
  1997  00373A                     
  1998                           ;colour_click.c: 163:     colourclickLEDs_C(1);
  1999  00373A  0E01               	movlw	1
  2000  00373C  ECA4  F01E         	call	_colourclickLEDs_C
  2001  003740                     
  2002                           ;colour_click.c: 164:     LATDbits.LATD7 = 1;
  2003  003740  8E7C               	bsf	124,7,c	;volatile
  2004  003742                     
  2005                           ;colour_click.c: 165:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2006  003742  0E52               	movlw	82
  2007  003744  6E18               	movwf	(??_colourclick_calibration+1)^0,c
  2008  003746  0E2B               	movlw	43
  2009  003748  6E17               	movwf	??_colourclick_calibration^0,c
  2010  00374A  0E00               	movlw	0
  2011  00374C                     u5767:
  2012  00374C  2EE8               	decfsz	wreg,f,c
  2013  00374E  D7FE               	bra	u5767
  2014  003750  2E17               	decfsz	??_colourclick_calibration^0,f,c
  2015  003752  D7FC               	bra	u5767
  2016  003754  2E18               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2017  003756  D7FA               	bra	u5767
  2018  003758  D000               	nop2	
  2019  00375A                     
  2020                           ;colour_click.c: 166:     colourclick_readRGBC(&initial);
  2021  00375A  0E19               	movlw	low colourclick_calibration@initial
  2022  00375C  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  2023  00375E  0E00               	movlw	high colourclick_calibration@initial
  2024  003760  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2025  003762  EC0B  F01C         	call	_colourclick_readRGBC	;wreg free
  2026  003766                     
  2027                           ;colour_click.c: 167:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2028  003766  0E52               	movlw	82
  2029  003768  6E18               	movwf	(??_colourclick_calibration+1)^0,c
  2030  00376A  0E2B               	movlw	43
  2031  00376C  6E17               	movwf	??_colourclick_calibration^0,c
  2032  00376E  0E00               	movlw	0
  2033  003770                     u5777:
  2034  003770  2EE8               	decfsz	wreg,f,c
  2035  003772  D7FE               	bra	u5777
  2036  003774  2E17               	decfsz	??_colourclick_calibration^0,f,c
  2037  003776  D7FC               	bra	u5777
  2038  003778  2E18               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2039  00377A  D7FA               	bra	u5777
  2040  00377C  D000               	nop2	
  2041  00377E                     
  2042                           ;colour_click.c: 168:     LATDbits.LATD7 = 0;
  2043  00377E  9E7C               	bcf	124,7,c	;volatile
  2044  003780                     
  2045                           ;colour_click.c: 170:     interrupts_lowerbound = initial.C - 150;
  2046  003780  0E6A               	movlw	106
  2047  003782  241F               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2048  003784  6E52               	movwf	_interrupts_lowerbound^0,c	;volatile
  2049  003786  0EFF               	movlw	255
  2050  003788  2020               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2051  00378A  6E53               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  2052  00378C                     
  2053                           ;colour_click.c: 171:     interrupts_upperbound = initial.C + 100;
  2054  00378C  0E64               	movlw	100
  2055  00378E  241F               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2056  003790  6E50               	movwf	_interrupts_upperbound^0,c	;volatile
  2057  003792  0E00               	movlw	0
  2058  003794  2020               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2059  003796  6E51               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  2060  003798                     
  2061                           ;colour_click.c: 173:     LATDbits.LATD3 = 0;
  2062  003798  967C               	bcf	124,3,c	;volatile
  2063  00379A                     
  2064                           ;colour_click.c: 174:     colourclickLEDs_C(0);
  2065  00379A  0E00               	movlw	0
  2066  00379C  ECA4  F01E         	call	_colourclickLEDs_C
  2067  0037A0  0012               	return		;funcret
  2068  0037A2                     __end_of_colourclick_calibration:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _colourcards_readRGBC *****************
  2072 ;; Defined at:
  2073 ;;		line 13 in file "colour_cards.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  abs             2   22[BANK0 ] PTR struct .
  2076 ;;		 -> main@current(8), 
  2077 ;;  mL              2   24[BANK0 ] PTR struct .
  2078 ;;		 -> main@motorL(9), 
  2079 ;;  mR              2   26[BANK0 ] PTR struct .
  2080 ;;		 -> main@motorR(9), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  rel            12   30[BANK0 ] struct .
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2092 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2094 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2095 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2096 ;;Total ram usage:       20 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 12
  2099 ;; This function calls:
  2100 ;;		___flge
  2101 ;;		_clearance
  2102 ;;		_colourcards_normaliseRGBC
  2103 ;;		_colourclick_readRGBC
  2104 ;;		_colourclick_readRGBC2
  2105 ;;		_forward
  2106 ;;		_reverse
  2107 ;;		_stop
  2108 ;;		_turnleft
  2109 ;;		_turnright
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text10
  2116  000EA4                     __ptext10:
  2117                           	callstack 0
  2118  000EA4                     _colourcards_readRGBC:
  2119                           	callstack 18
  2120  000EA4                     
  2121                           ;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  2122  000EA4  010E               	movlb	14	; () banked
  2123  000EA6  9329               	bcf	41,1,b	;volatile
  2124  000EA8                     
  2125                           ; BSR set to: 14
  2126                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  2127  000EA8  C076  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2128  000EAC  C077  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2129  000EB0  EC0B  F01C         	call	_colourclick_readRGBC	;wreg free
  2130                           
  2131                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  2132  000EB4  C076  F03E         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2133  000EB8  C077  F03F         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2134  000EBC  0E7E               	movlw	low colourcards_readRGBC@rel
  2135  000EBE  6E40               	movwf	colourcards_normaliseRGBC@rel^0,c
  2136  000EC0  0E00               	movlw	high colourcards_readRGBC@rel
  2137  000EC2  6E41               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  2138  000EC4  EC78  F018         	call	_colourcards_normaliseRGBC	;wreg free
  2139  000EC8                     
  2140                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  2141  000EC8  0E71               	movlw	113
  2142  000ECA  6E25               	movwf	___flge@ff1^0,c
  2143  000ECC  0E3D               	movlw	61
  2144  000ECE  6E26               	movwf	(___flge@ff1+1)^0,c
  2145  000ED0  0E0A               	movlw	10
  2146  000ED2  6E27               	movwf	(___flge@ff1+2)^0,c
  2147  000ED4  0E3F               	movlw	63
  2148  000ED6  6E28               	movwf	(___flge@ff1+3)^0,c
  2149  000ED8  C07E  F029         	movff	colourcards_readRGBC@rel,___flge@ff2
  2150  000EDC  C07F  F02A         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2151  000EE0  C080  F02B         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2152  000EE4  C081  F02C         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2153  000EE8  ECDE  F019         	call	___flge	;wreg free
  2154  000EEC  B0D8               	btfsc	status,0,c
  2155  000EEE  EF7B  F007         	goto	u5191
  2156  000EF2  EF7D  F007         	goto	u5190
  2157  000EF6                     u5191:
  2158  000EF6  EF27  F008         	goto	l4851
  2159  000EFA                     u5190:
  2160  000EFA  C082  F025         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2161  000EFE  C083  F026         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2162  000F02  C084  F027         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2163  000F06  C085  F028         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2164  000F0A  0E48               	movlw	72
  2165  000F0C  6E29               	movwf	___flge@ff2^0,c
  2166  000F0E  0EE1               	movlw	225
  2167  000F10  6E2A               	movwf	(___flge@ff2+1)^0,c
  2168  000F12  0E7A               	movlw	122
  2169  000F14  6E2B               	movwf	(___flge@ff2+2)^0,c
  2170  000F16  0E3E               	movlw	62
  2171  000F18  6E2C               	movwf	(___flge@ff2+3)^0,c
  2172  000F1A  ECDE  F019         	call	___flge	;wreg free
  2173  000F1E  B0D8               	btfsc	status,0,c
  2174  000F20  EF94  F007         	goto	u5201
  2175  000F24  EF96  F007         	goto	u5200
  2176  000F28                     u5201:
  2177  000F28  EF27  F008         	goto	l4851
  2178  000F2C                     u5200:
  2179  000F2C  C086  F025         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2180  000F30  C087  F026         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2181  000F34  C088  F027         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2182  000F38  C089  F028         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2183  000F3C  0EEC               	movlw	236
  2184  000F3E  6E29               	movwf	___flge@ff2^0,c
  2185  000F40  0E51               	movlw	81
  2186  000F42  6E2A               	movwf	(___flge@ff2+1)^0,c
  2187  000F44  0E38               	movlw	56
  2188  000F46  6E2B               	movwf	(___flge@ff2+2)^0,c
  2189  000F48  0E3E               	movlw	62
  2190  000F4A  6E2C               	movwf	(___flge@ff2+3)^0,c
  2191  000F4C  ECDE  F019         	call	___flge	;wreg free
  2192  000F50  B0D8               	btfsc	status,0,c
  2193  000F52  EFAD  F007         	goto	u5211
  2194  000F56  EFAF  F007         	goto	u5210
  2195  000F5A                     u5211:
  2196  000F5A  EF27  F008         	goto	l4851
  2197  000F5E                     u5210:
  2198  000F5E                     
  2199                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  2200  000F5E  C076  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2201  000F62  C077  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2202  000F66  0E03               	movlw	3
  2203  000F68  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2204  000F6A  EC33  F019         	call	_colourclick_readRGBC2	;wreg free
  2205                           
  2206                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  2207  000F6E  C076  F03E         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2208  000F72  C077  F03F         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2209  000F76  0E7E               	movlw	low colourcards_readRGBC@rel
  2210  000F78  6E40               	movwf	colourcards_normaliseRGBC@rel^0,c
  2211  000F7A  0E00               	movlw	high colourcards_readRGBC@rel
  2212  000F7C  6E41               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  2213  000F7E  EC78  F018         	call	_colourcards_normaliseRGBC	;wreg free
  2214  000F82                     
  2215                           ;colour_cards.c: 27:         if (rel.G<0.185) {
  2216  000F82  C082  F025         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2217  000F86  C083  F026         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2218  000F8A  C084  F027         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2219  000F8E  C085  F028         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2220  000F92  0EA4               	movlw	164
  2221  000F94  6E29               	movwf	___flge@ff2^0,c
  2222  000F96  0E70               	movlw	112
  2223  000F98  6E2A               	movwf	(___flge@ff2+1)^0,c
  2224  000F9A  0E3D               	movlw	61
  2225  000F9C  6E2B               	movwf	(___flge@ff2+2)^0,c
  2226  000F9E  0E3E               	movlw	62
  2227  000FA0  6E2C               	movwf	(___flge@ff2+3)^0,c
  2228  000FA2  ECDE  F019         	call	___flge	;wreg free
  2229  000FA6  B0D8               	btfsc	status,0,c
  2230  000FA8  EFD8  F007         	goto	u5221
  2231  000FAC  EFDA  F007         	goto	u5220
  2232  000FB0                     u5221:
  2233  000FB0  EF02  F008         	goto	l4847
  2234  000FB4                     u5220:
  2235  000FB4                     
  2236                           ;colour_cards.c: 29:             clearance(mL, mR);
  2237  000FB4  C078  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2238  000FB8  C079  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2239  000FBC  C07A  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2240  000FC0  C07B  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2241  000FC4  EC3A  F01C         	call	_clearance	;wreg free
  2242                           
  2243                           ;colour_cards.c: 30:             turnright(mL, mR, 90);
  2244  000FC8  C078  F070         	movff	colourcards_readRGBC@mL,turnright@mL
  2245  000FCC  C079  F071         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2246  000FD0  C07A  F072         	movff	colourcards_readRGBC@mR,turnright@mR
  2247  000FD4  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2248  000FD8  0E00               	movlw	0
  2249  000FDA  0100               	movlb	0	; () banked
  2250  000FDC  6F75               	movwf	(turnright@deg+1)& (0+255),b
  2251  000FDE  0E5A               	movlw	90
  2252  000FE0  6F74               	movwf	turnright@deg& (0+255),b
  2253  000FE2  EC31  F01D         	call	_turnright	;wreg free
  2254                           
  2255                           ;colour_cards.c: 31:             stop(mL, mR);
  2256  000FE6  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2257  000FEA  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2258  000FEE  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2259  000FF2  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2260  000FF6  EC50  F01B         	call	_stop	;wreg free
  2261  000FFA                     l4845:
  2262                           
  2263                           ;colour_cards.c: 32:             unknowncard_flag = 0;
  2264  000FFA  0E00               	movlw	0
  2265  000FFC  0100               	movlb	0	; () banked
  2266  000FFE  6FA9               	movwf	_unknowncard_flag& (0+255),b	;volatile
  2267                           
  2268                           ;colour_cards.c: 33:         } else {
  2269  001000  EF50  F00B         	goto	l4951
  2270  001004                     l4847:
  2271                           
  2272                           ;colour_cards.c: 35:             clearance(mL, mR);
  2273  001004  C078  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2274  001008  C079  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2275  00100C  C07A  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2276  001010  C07B  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2277  001014  EC3A  F01C         	call	_clearance	;wreg free
  2278                           
  2279                           ;colour_cards.c: 36:             turnright(mL, mR, 135);
  2280  001018  C078  F070         	movff	colourcards_readRGBC@mL,turnright@mL
  2281  00101C  C079  F071         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2282  001020  C07A  F072         	movff	colourcards_readRGBC@mR,turnright@mR
  2283  001024  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2284  001028  0E00               	movlw	0
  2285  00102A  0100               	movlb	0	; () banked
  2286  00102C  6F75               	movwf	(turnright@deg+1)& (0+255),b
  2287  00102E  0E87               	movlw	135
  2288  001030  6F74               	movwf	turnright@deg& (0+255),b
  2289  001032  EC31  F01D         	call	_turnright	;wreg free
  2290                           
  2291                           ;colour_cards.c: 37:             stop(mL, mR);
  2292  001036  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2293  00103A  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2294  00103E  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2295  001042  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2296  001046  EC50  F01B         	call	_stop	;wreg free
  2297  00104A  EFFD  F007         	goto	l4845
  2298  00104E                     l4851:
  2299  00104E  C07E  F025         	movff	colourcards_readRGBC@rel,___flge@ff1
  2300  001052  C07F  F026         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2301  001056  C080  F027         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2302  00105A  C081  F028         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2303  00105E  0EAE               	movlw	174
  2304  001060  6E29               	movwf	___flge@ff2^0,c
  2305  001062  0E47               	movlw	71
  2306  001064  6E2A               	movwf	(___flge@ff2+1)^0,c
  2307  001066  0EE1               	movlw	225
  2308  001068  6E2B               	movwf	(___flge@ff2+2)^0,c
  2309  00106A  0E3E               	movlw	62
  2310  00106C  6E2C               	movwf	(___flge@ff2+3)^0,c
  2311  00106E  ECDE  F019         	call	___flge	;wreg free
  2312  001072  B0D8               	btfsc	status,0,c
  2313  001074  EF3E  F008         	goto	u5231
  2314  001078  EF40  F008         	goto	u5230
  2315  00107C                     u5231:
  2316  00107C  EF37  F009         	goto	l4877
  2317  001080                     u5230:
  2318  001080  0E9A               	movlw	154
  2319  001082  6E25               	movwf	___flge@ff1^0,c
  2320  001084  0E99               	movlw	153
  2321  001086  6E26               	movwf	(___flge@ff1+1)^0,c
  2322  001088  0E99               	movlw	153
  2323  00108A  6E27               	movwf	(___flge@ff1+2)^0,c
  2324  00108C  0E3E               	movlw	62
  2325  00108E  6E28               	movwf	(___flge@ff1+3)^0,c
  2326  001090  C082  F029         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2327  001094  C083  F02A         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2328  001098  C084  F02B         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2329  00109C  C085  F02C         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2330  0010A0  ECDE  F019         	call	___flge	;wreg free
  2331  0010A4  B0D8               	btfsc	status,0,c
  2332  0010A6  EF57  F008         	goto	u5241
  2333  0010AA  EF59  F008         	goto	u5240
  2334  0010AE                     u5241:
  2335  0010AE  EF37  F009         	goto	l4877
  2336  0010B2                     u5240:
  2337  0010B2  0E14               	movlw	20
  2338  0010B4  6E25               	movwf	___flge@ff1^0,c
  2339  0010B6  0EAE               	movlw	174
  2340  0010B8  6E26               	movwf	(___flge@ff1+1)^0,c
  2341  0010BA  0E47               	movlw	71
  2342  0010BC  6E27               	movwf	(___flge@ff1+2)^0,c
  2343  0010BE  0E3E               	movlw	62
  2344  0010C0  6E28               	movwf	(___flge@ff1+3)^0,c
  2345  0010C2  C086  F029         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2346  0010C6  C087  F02A         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2347  0010CA  C088  F02B         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2348  0010CE  C089  F02C         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2349  0010D2  ECDE  F019         	call	___flge	;wreg free
  2350  0010D6  B0D8               	btfsc	status,0,c
  2351  0010D8  EF70  F008         	goto	u5251
  2352  0010DC  EF72  F008         	goto	u5250
  2353  0010E0                     u5251:
  2354  0010E0  EF37  F009         	goto	l4877
  2355  0010E4                     u5250:
  2356  0010E4                     
  2357                           ;colour_cards.c: 43:         colourclick_readRGBC2(abs, 1);
  2358  0010E4  C076  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2359  0010E8  C077  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2360  0010EC  0E01               	movlw	1
  2361  0010EE  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2362  0010F0  EC33  F019         	call	_colourclick_readRGBC2	;wreg free
  2363                           
  2364                           ;colour_cards.c: 44:         colourcards_normaliseRGBC(abs, &rel);
  2365  0010F4  C076  F03E         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2366  0010F8  C077  F03F         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2367  0010FC  0E7E               	movlw	low colourcards_readRGBC@rel
  2368  0010FE  6E40               	movwf	colourcards_normaliseRGBC@rel^0,c
  2369  001100  0E00               	movlw	high colourcards_readRGBC@rel
  2370  001102  6E41               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  2371  001104  EC78  F018         	call	_colourcards_normaliseRGBC	;wreg free
  2372  001108                     
  2373                           ;colour_cards.c: 45:         if (rel.B<0.125) {
  2374  001108  C086  F025         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2375  00110C  C087  F026         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2376  001110  C088  F027         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2377  001114  C089  F028         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2378  001118  0E00               	movlw	0
  2379  00111A  6E29               	movwf	___flge@ff2^0,c
  2380  00111C  0E00               	movlw	0
  2381  00111E  6E2A               	movwf	(___flge@ff2+1)^0,c
  2382  001120  0E00               	movlw	0
  2383  001122  6E2B               	movwf	(___flge@ff2+2)^0,c
  2384  001124  0E3E               	movlw	62
  2385  001126  6E2C               	movwf	(___flge@ff2+3)^0,c
  2386  001128  ECDE  F019         	call	___flge	;wreg free
  2387  00112C  B0D8               	btfsc	status,0,c
  2388  00112E  EF9B  F008         	goto	u5261
  2389  001132  EF9D  F008         	goto	u5260
  2390  001136                     u5261:
  2391  001136  EFC2  F008         	goto	l4865
  2392  00113A                     u5260:
  2393  00113A                     
  2394                           ;colour_cards.c: 47:             clearance(mL, mR);
  2395  00113A  C078  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2396  00113E  C079  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2397  001142  C07A  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2398  001146  C07B  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2399  00114A  EC3A  F01C         	call	_clearance	;wreg free
  2400                           
  2401                           ;colour_cards.c: 48:             turnleft(mL, mR, 90);
  2402  00114E  C078  F070         	movff	colourcards_readRGBC@mL,turnleft@mL
  2403  001152  C079  F071         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2404  001156  C07A  F072         	movff	colourcards_readRGBC@mR,turnleft@mR
  2405  00115A  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2406  00115E  0E00               	movlw	0
  2407  001160  0100               	movlb	0	; () banked
  2408  001162  6F75               	movwf	(turnleft@deg+1)& (0+255),b
  2409  001164  0E5A               	movlw	90
  2410  001166  6F74               	movwf	turnleft@deg& (0+255),b
  2411  001168  EC59  F01D         	call	_turnleft	;wreg free
  2412                           
  2413                           ;colour_cards.c: 49:             stop(mL, mR);
  2414  00116C  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2415  001170  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2416  001174  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2417  001178  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2418  00117C  EC50  F01B         	call	_stop	;wreg free
  2419  001180  EFFD  F007         	goto	l4845
  2420  001184                     l4865:
  2421                           
  2422                           ;colour_cards.c: 52:             colourclick_readRGBC2(abs, 2);
  2423  001184  C076  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2424  001188  C077  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2425  00118C  0E02               	movlw	2
  2426  00118E  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2427  001190  EC33  F019         	call	_colourclick_readRGBC2	;wreg free
  2428                           
  2429                           ;colour_cards.c: 53:             colourcards_normaliseRGBC(abs, &rel);
  2430  001194  C076  F03E         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2431  001198  C077  F03F         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2432  00119C  0E7E               	movlw	low colourcards_readRGBC@rel
  2433  00119E  6E40               	movwf	colourcards_normaliseRGBC@rel^0,c
  2434  0011A0  0E00               	movlw	high colourcards_readRGBC@rel
  2435  0011A2  6E41               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  2436  0011A4  EC78  F018         	call	_colourcards_normaliseRGBC	;wreg free
  2437  0011A8                     
  2438                           ;colour_cards.c: 54:             if (rel.R<0.115) {
  2439  0011A8  C07E  F025         	movff	colourcards_readRGBC@rel,___flge@ff1
  2440  0011AC  C07F  F026         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2441  0011B0  C080  F027         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2442  0011B4  C081  F028         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2443  0011B8  0E1F               	movlw	31
  2444  0011BA  6E29               	movwf	___flge@ff2^0,c
  2445  0011BC  0E85               	movlw	133
  2446  0011BE  6E2A               	movwf	(___flge@ff2+1)^0,c
  2447  0011C0  0EEB               	movlw	235
  2448  0011C2  6E2B               	movwf	(___flge@ff2+2)^0,c
  2449  0011C4  0E3D               	movlw	61
  2450  0011C6  6E2C               	movwf	(___flge@ff2+3)^0,c
  2451  0011C8  ECDE  F019         	call	___flge	;wreg free
  2452  0011CC  B0D8               	btfsc	status,0,c
  2453  0011CE  EFEB  F008         	goto	u5271
  2454  0011D2  EFED  F008         	goto	u5270
  2455  0011D6                     u5271:
  2456  0011D6  EF12  F009         	goto	l4873
  2457  0011DA                     u5270:
  2458  0011DA                     
  2459                           ;colour_cards.c: 56:                 clearance(mL, mR);
  2460  0011DA  C078  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2461  0011DE  C079  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2462  0011E2  C07A  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2463  0011E6  C07B  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2464  0011EA  EC3A  F01C         	call	_clearance	;wreg free
  2465                           
  2466                           ;colour_cards.c: 57:                 turnright(mL, mR, 180);
  2467  0011EE  C078  F070         	movff	colourcards_readRGBC@mL,turnright@mL
  2468  0011F2  C079  F071         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2469  0011F6  C07A  F072         	movff	colourcards_readRGBC@mR,turnright@mR
  2470  0011FA  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2471  0011FE  0E00               	movlw	0
  2472  001200  0100               	movlb	0	; () banked
  2473  001202  6F75               	movwf	(turnright@deg+1)& (0+255),b
  2474  001204  0EB4               	movlw	180
  2475  001206  6F74               	movwf	turnright@deg& (0+255),b
  2476  001208  EC31  F01D         	call	_turnright	;wreg free
  2477                           
  2478                           ;colour_cards.c: 58:                 stop(mL, mR);
  2479  00120C  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2480  001210  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2481  001214  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2482  001218  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2483  00121C  EC50  F01B         	call	_stop	;wreg free
  2484  001220  EFFD  F007         	goto	l4845
  2485  001224                     l4873:
  2486                           
  2487                           ;colour_cards.c: 62:                 clearance(mL, mR);
  2488  001224  C078  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2489  001228  C079  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2490  00122C  C07A  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2491  001230  C07B  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2492  001234  EC3A  F01C         	call	_clearance	;wreg free
  2493                           
  2494                           ;colour_cards.c: 63:                 turnleft(mL, mR, 135);
  2495  001238  C078  F070         	movff	colourcards_readRGBC@mL,turnleft@mL
  2496  00123C  C079  F071         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2497  001240  C07A  F072         	movff	colourcards_readRGBC@mR,turnleft@mR
  2498  001244  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2499  001248  0E00               	movlw	0
  2500  00124A  0100               	movlb	0	; () banked
  2501  00124C  6F75               	movwf	(turnleft@deg+1)& (0+255),b
  2502  00124E  0E87               	movlw	135
  2503  001250  6F74               	movwf	turnleft@deg& (0+255),b
  2504  001252  EC59  F01D         	call	_turnleft	;wreg free
  2505                           
  2506                           ;colour_cards.c: 64:                 stop(mL, mR);
  2507  001256  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2508  00125A  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2509  00125E  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2510  001262  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2511  001266  EC50  F01B         	call	_stop	;wreg free
  2512  00126A  EFFD  F007         	goto	l4845
  2513  00126E                     l4877:
  2514  00126E  0E48               	movlw	72
  2515  001270  6E25               	movwf	___flge@ff1^0,c
  2516  001272  0EE1               	movlw	225
  2517  001274  6E26               	movwf	(___flge@ff1+1)^0,c
  2518  001276  0EFA               	movlw	250
  2519  001278  6E27               	movwf	(___flge@ff1+2)^0,c
  2520  00127A  0E3E               	movlw	62
  2521  00127C  6E28               	movwf	(___flge@ff1+3)^0,c
  2522  00127E  C07E  F029         	movff	colourcards_readRGBC@rel,___flge@ff2
  2523  001282  C07F  F02A         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2524  001286  C080  F02B         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2525  00128A  C081  F02C         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2526  00128E  ECDE  F019         	call	___flge	;wreg free
  2527  001292  B0D8               	btfsc	status,0,c
  2528  001294  EF4E  F009         	goto	u5281
  2529  001298  EF50  F009         	goto	u5280
  2530  00129C                     u5281:
  2531  00129C  EFCA  F009         	goto	l4895
  2532  0012A0                     u5280:
  2533  0012A0  0E85               	movlw	133
  2534  0012A2  6E25               	movwf	___flge@ff1^0,c
  2535  0012A4  0EEB               	movlw	235
  2536  0012A6  6E26               	movwf	(___flge@ff1+1)^0,c
  2537  0012A8  0E91               	movlw	145
  2538  0012AA  6E27               	movwf	(___flge@ff1+2)^0,c
  2539  0012AC  0E3E               	movlw	62
  2540  0012AE  6E28               	movwf	(___flge@ff1+3)^0,c
  2541  0012B0  C082  F029         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2542  0012B4  C083  F02A         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2543  0012B8  C084  F02B         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2544  0012BC  C085  F02C         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2545  0012C0  ECDE  F019         	call	___flge	;wreg free
  2546  0012C4  B0D8               	btfsc	status,0,c
  2547  0012C6  EF67  F009         	goto	u5291
  2548  0012CA  EF69  F009         	goto	u5290
  2549  0012CE                     u5291:
  2550  0012CE  EFCA  F009         	goto	l4895
  2551  0012D2                     u5290:
  2552  0012D2  0EEC               	movlw	236
  2553  0012D4  6E25               	movwf	___flge@ff1^0,c
  2554  0012D6  0E51               	movlw	81
  2555  0012D8  6E26               	movwf	(___flge@ff1+1)^0,c
  2556  0012DA  0E38               	movlw	56
  2557  0012DC  6E27               	movwf	(___flge@ff1+2)^0,c
  2558  0012DE  0E3E               	movlw	62
  2559  0012E0  6E28               	movwf	(___flge@ff1+3)^0,c
  2560  0012E2  C086  F029         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2561  0012E6  C087  F02A         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2562  0012EA  C088  F02B         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2563  0012EE  C089  F02C         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2564  0012F2  ECDE  F019         	call	___flge	;wreg free
  2565  0012F6  B0D8               	btfsc	status,0,c
  2566  0012F8  EF80  F009         	goto	u5301
  2567  0012FC  EF82  F009         	goto	u5300
  2568  001300                     u5301:
  2569  001300  EFCA  F009         	goto	l4895
  2570  001304                     u5300:
  2571  001304                     
  2572                           ;colour_cards.c: 71:         reverse(mL, mR);
  2573  001304  C078  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  2574  001308  C079  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  2575  00130C  C07A  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  2576  001310  C07B  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2577  001314  EC09  F01B         	call	_reverse	;wreg free
  2578  001318                     
  2579                           ;colour_cards.c: 72:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  2580  001318  0E72               	movlw	114
  2581  00131A  0100               	movlb	0	; () banked
  2582  00131C  6F7D               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2583  00131E  0EA3               	movlw	163
  2584  001320  6F7C               	movwf	??_colourcards_readRGBC& (0+255),b
  2585  001322  0E9B               	movlw	155
  2586  001324                     u5787:
  2587  001324  2EE8               	decfsz	wreg,f,c
  2588  001326  D7FE               	bra	u5787
  2589  001328  2F7C               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2590  00132A  D7FC               	bra	u5787
  2591  00132C  2F7D               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2592  00132E  D7FA               	bra	u5787
  2593  001330                     
  2594                           ;colour_cards.c: 73:         stop(mL, mR);
  2595  001330  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2596  001334  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2597  001338  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2598  00133C  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2599  001340  EC50  F01B         	call	_stop	;wreg free
  2600                           
  2601                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2602  001344  0E09               	movlw	9
  2603  001346  0100               	movlb	0	; () banked
  2604  001348  6F7D               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2605  00134A  0E1E               	movlw	30
  2606  00134C  6F7C               	movwf	??_colourcards_readRGBC& (0+255),b
  2607  00134E  0EE4               	movlw	228
  2608  001350                     u5797:
  2609  001350  2EE8               	decfsz	wreg,f,c
  2610  001352  D7FE               	bra	u5797
  2611  001354  2F7C               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2612  001356  D7FC               	bra	u5797
  2613  001358  2F7D               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2614  00135A  D7FA               	bra	u5797
  2615  00135C  F000               	nop	
  2616  00135E                     
  2617                           ;colour_cards.c: 75:         turnright(mL, mR, 90);
  2618  00135E  C078  F070         	movff	colourcards_readRGBC@mL,turnright@mL
  2619  001362  C079  F071         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2620  001366  C07A  F072         	movff	colourcards_readRGBC@mR,turnright@mR
  2621  00136A  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2622  00136E  0E00               	movlw	0
  2623  001370  0100               	movlb	0	; () banked
  2624  001372  6F75               	movwf	(turnright@deg+1)& (0+255),b
  2625  001374  0E5A               	movlw	90
  2626  001376  6F74               	movwf	turnright@deg& (0+255),b
  2627  001378  EC31  F01D         	call	_turnright	;wreg free
  2628  00137C                     l4891:
  2629                           
  2630                           ;colour_cards.c: 76:         stop(mL, mR);
  2631  00137C  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2632  001380  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2633  001384  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2634  001388  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2635  00138C  EC50  F01B         	call	_stop	;wreg free
  2636  001390  EFFD  F007         	goto	l4845
  2637  001394                     l4895:
  2638  001394  0E48               	movlw	72
  2639  001396  6E25               	movwf	___flge@ff1^0,c
  2640  001398  0EE1               	movlw	225
  2641  00139A  6E26               	movwf	(___flge@ff1+1)^0,c
  2642  00139C  0EFA               	movlw	250
  2643  00139E  6E27               	movwf	(___flge@ff1+2)^0,c
  2644  0013A0  0E3E               	movlw	62
  2645  0013A2  6E28               	movwf	(___flge@ff1+3)^0,c
  2646  0013A4  C07E  F029         	movff	colourcards_readRGBC@rel,___flge@ff2
  2647  0013A8  C07F  F02A         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2648  0013AC  C080  F02B         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2649  0013B0  C081  F02C         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2650  0013B4  ECDE  F019         	call	___flge	;wreg free
  2651  0013B8  B0D8               	btfsc	status,0,c
  2652  0013BA  EFE1  F009         	goto	u5311
  2653  0013BE  EFE3  F009         	goto	u5310
  2654  0013C2                     u5311:
  2655  0013C2  EF53  F00A         	goto	l4913
  2656  0013C6                     u5310:
  2657  0013C6  C082  F025         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2658  0013CA  C083  F026         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2659  0013CE  C084  F027         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2660  0013D2  C085  F028         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2661  0013D6  0ECD               	movlw	205
  2662  0013D8  6E29               	movwf	___flge@ff2^0,c
  2663  0013DA  0ECC               	movlw	204
  2664  0013DC  6E2A               	movwf	(___flge@ff2+1)^0,c
  2665  0013DE  0E8C               	movlw	140
  2666  0013E0  6E2B               	movwf	(___flge@ff2+2)^0,c
  2667  0013E2  0E3E               	movlw	62
  2668  0013E4  6E2C               	movwf	(___flge@ff2+3)^0,c
  2669  0013E6  ECDE  F019         	call	___flge	;wreg free
  2670  0013EA  B0D8               	btfsc	status,0,c
  2671  0013EC  EFFA  F009         	goto	u5321
  2672  0013F0  EFFC  F009         	goto	u5320
  2673  0013F4                     u5321:
  2674  0013F4  EF53  F00A         	goto	l4913
  2675  0013F8                     u5320:
  2676  0013F8  0E14               	movlw	20
  2677  0013FA  6E25               	movwf	___flge@ff1^0,c
  2678  0013FC  0EAE               	movlw	174
  2679  0013FE  6E26               	movwf	(___flge@ff1+1)^0,c
  2680  001400  0E47               	movlw	71
  2681  001402  6E27               	movwf	(___flge@ff1+2)^0,c
  2682  001404  0E3E               	movlw	62
  2683  001406  6E28               	movwf	(___flge@ff1+3)^0,c
  2684  001408  C086  F029         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2685  00140C  C087  F02A         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2686  001410  C088  F02B         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2687  001414  C089  F02C         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2688  001418  ECDE  F019         	call	___flge	;wreg free
  2689  00141C  B0D8               	btfsc	status,0,c
  2690  00141E  EF13  F00A         	goto	u5331
  2691  001422  EF15  F00A         	goto	u5330
  2692  001426                     u5331:
  2693  001426  EF53  F00A         	goto	l4913
  2694  00142A                     u5330:
  2695  00142A                     
  2696                           ;colour_cards.c: 81:         reverse(mL, mR);
  2697  00142A  C078  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  2698  00142E  C079  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  2699  001432  C07A  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  2700  001436  C07B  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2701  00143A  EC09  F01B         	call	_reverse	;wreg free
  2702  00143E                     
  2703                           ;colour_cards.c: 82:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  2704  00143E  0E72               	movlw	114
  2705  001440  0100               	movlb	0	; () banked
  2706  001442  6F7D               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2707  001444  0EA3               	movlw	163
  2708  001446  6F7C               	movwf	??_colourcards_readRGBC& (0+255),b
  2709  001448  0E9B               	movlw	155
  2710  00144A                     u5807:
  2711  00144A  2EE8               	decfsz	wreg,f,c
  2712  00144C  D7FE               	bra	u5807
  2713  00144E  2F7C               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2714  001450  D7FC               	bra	u5807
  2715  001452  2F7D               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2716  001454  D7FA               	bra	u5807
  2717  001456                     
  2718                           ;colour_cards.c: 83:         stop(mL, mR);
  2719  001456  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2720  00145A  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2721  00145E  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2722  001462  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2723  001466  EC50  F01B         	call	_stop	;wreg free
  2724                           
  2725                           ;colour_cards.c: 84:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2726  00146A  0E09               	movlw	9
  2727  00146C  0100               	movlb	0	; () banked
  2728  00146E  6F7D               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2729  001470  0E1E               	movlw	30
  2730  001472  6F7C               	movwf	??_colourcards_readRGBC& (0+255),b
  2731  001474  0EE4               	movlw	228
  2732  001476                     u5817:
  2733  001476  2EE8               	decfsz	wreg,f,c
  2734  001478  D7FE               	bra	u5817
  2735  00147A  2F7C               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2736  00147C  D7FC               	bra	u5817
  2737  00147E  2F7D               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2738  001480  D7FA               	bra	u5817
  2739  001482  F000               	nop	
  2740  001484                     
  2741                           ;colour_cards.c: 85:         turnleft(mL, mR, 90);
  2742  001484  C078  F070         	movff	colourcards_readRGBC@mL,turnleft@mL
  2743  001488  C079  F071         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2744  00148C  C07A  F072         	movff	colourcards_readRGBC@mR,turnleft@mR
  2745  001490  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2746  001494  0E00               	movlw	0
  2747  001496  0100               	movlb	0	; () banked
  2748  001498  6F75               	movwf	(turnleft@deg+1)& (0+255),b
  2749  00149A  0E5A               	movlw	90
  2750  00149C  6F74               	movwf	turnleft@deg& (0+255),b
  2751  00149E  EC59  F01D         	call	_turnleft	;wreg free
  2752  0014A2  EFBE  F009         	goto	l4891
  2753  0014A6                     l4913:
  2754  0014A6  C07E  F025         	movff	colourcards_readRGBC@rel,___flge@ff1
  2755  0014AA  C07F  F026         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2756  0014AE  C080  F027         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2757  0014B2  C081  F028         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2758  0014B6  0ED7               	movlw	215
  2759  0014B8  6E29               	movwf	___flge@ff2^0,c
  2760  0014BA  0EA3               	movlw	163
  2761  0014BC  6E2A               	movwf	(___flge@ff2+1)^0,c
  2762  0014BE  0EF0               	movlw	240
  2763  0014C0  6E2B               	movwf	(___flge@ff2+2)^0,c
  2764  0014C2  0E3E               	movlw	62
  2765  0014C4  6E2C               	movwf	(___flge@ff2+3)^0,c
  2766  0014C6  ECDE  F019         	call	___flge	;wreg free
  2767  0014CA  B0D8               	btfsc	status,0,c
  2768  0014CC  EF6A  F00A         	goto	u5341
  2769  0014D0  EF6C  F00A         	goto	u5340
  2770  0014D4                     u5341:
  2771  0014D4  EFC8  F00A         	goto	l4925
  2772  0014D8                     u5340:
  2773  0014D8  0E3D               	movlw	61
  2774  0014DA  6E25               	movwf	___flge@ff1^0,c
  2775  0014DC  0E0A               	movlw	10
  2776  0014DE  6E26               	movwf	(___flge@ff1+1)^0,c
  2777  0014E0  0E97               	movlw	151
  2778  0014E2  6E27               	movwf	(___flge@ff1+2)^0,c
  2779  0014E4  0E3E               	movlw	62
  2780  0014E6  6E28               	movwf	(___flge@ff1+3)^0,c
  2781  0014E8  C082  F029         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2782  0014EC  C083  F02A         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2783  0014F0  C084  F02B         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2784  0014F4  C085  F02C         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2785  0014F8  ECDE  F019         	call	___flge	;wreg free
  2786  0014FC  B0D8               	btfsc	status,0,c
  2787  0014FE  EF83  F00A         	goto	u5351
  2788  001502  EF85  F00A         	goto	u5350
  2789  001506                     u5351:
  2790  001506  EFC8  F00A         	goto	l4925
  2791  00150A                     u5350:
  2792  00150A  0E3D               	movlw	61
  2793  00150C  6E25               	movwf	___flge@ff1^0,c
  2794  00150E  0E0A               	movlw	10
  2795  001510  6E26               	movwf	(___flge@ff1+1)^0,c
  2796  001512  0E57               	movlw	87
  2797  001514  6E27               	movwf	(___flge@ff1+2)^0,c
  2798  001516  0E3E               	movlw	62
  2799  001518  6E28               	movwf	(___flge@ff1+3)^0,c
  2800  00151A  C086  F029         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2801  00151E  C087  F02A         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2802  001522  C088  F02B         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2803  001526  C089  F02C         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2804  00152A  ECDE  F019         	call	___flge	;wreg free
  2805  00152E  B0D8               	btfsc	status,0,c
  2806  001530  EF9C  F00A         	goto	u5361
  2807  001534  EF9E  F00A         	goto	u5360
  2808  001538                     u5361:
  2809  001538  EFC8  F00A         	goto	l4925
  2810  00153C                     u5360:
  2811  00153C                     
  2812                           ;colour_cards.c: 91:         clearance(mL, mR);
  2813  00153C  C078  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2814  001540  C079  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2815  001544  C07A  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2816  001548  C07B  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2817  00154C  EC3A  F01C         	call	_clearance	;wreg free
  2818                           
  2819                           ;colour_cards.c: 92:         turnright(mL, mR, 180);
  2820  001550  C078  F070         	movff	colourcards_readRGBC@mL,turnright@mL
  2821  001554  C079  F071         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2822  001558  C07A  F072         	movff	colourcards_readRGBC@mR,turnright@mR
  2823  00155C  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2824  001560  0E00               	movlw	0
  2825  001562  0100               	movlb	0	; () banked
  2826  001564  6F75               	movwf	(turnright@deg+1)& (0+255),b
  2827  001566  0EB4               	movlw	180
  2828  001568  6F74               	movwf	turnright@deg& (0+255),b
  2829  00156A  EC31  F01D         	call	_turnright	;wreg free
  2830                           
  2831                           ;colour_cards.c: 93:         stop(mL, mR);
  2832  00156E  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2833  001572  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2834  001576  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2835  00157A  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2836  00157E  EC50  F01B         	call	_stop	;wreg free
  2837  001582                     
  2838                           ;colour_cards.c: 94:         unknowncard_flag = 0;
  2839  001582  0E00               	movlw	0
  2840  001584  0100               	movlb	0	; () banked
  2841  001586  6FA9               	movwf	_unknowncard_flag& (0+255),b	;volatile
  2842  001588                     
  2843                           ; BSR set to: 0
  2844                           ;colour_cards.c: 95:         returnhome_flag = 1;
  2845  001588  0E01               	movlw	1
  2846  00158A  6FA8               	movwf	_returnhome_flag& (0+255),b	;volatile
  2847                           
  2848                           ;colour_cards.c: 97:     } else {
  2849  00158C  EF50  F00B         	goto	l4951
  2850  001590                     l4925:
  2851                           
  2852                           ;colour_cards.c: 99:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2853  001590  0E52               	movlw	82
  2854  001592  0100               	movlb	0	; () banked
  2855  001594  6F7D               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2856  001596  0E2B               	movlw	43
  2857  001598  6F7C               	movwf	??_colourcards_readRGBC& (0+255),b
  2858  00159A  0E00               	movlw	0
  2859  00159C                     u5827:
  2860  00159C  2EE8               	decfsz	wreg,f,c
  2861  00159E  D7FE               	bra	u5827
  2862  0015A0  2F7C               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2863  0015A2  D7FC               	bra	u5827
  2864  0015A4  2F7D               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2865  0015A6  D7FA               	bra	u5827
  2866  0015A8  F000               	nop	
  2867  0015AA                     
  2868                           ;colour_cards.c: 100:         forward(mL, mR);
  2869  0015AA  C078  F023         	movff	colourcards_readRGBC@mL,forward@mL
  2870  0015AE  C079  F024         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  2871  0015B2  C07A  F025         	movff	colourcards_readRGBC@mR,forward@mR
  2872  0015B6  C07B  F026         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  2873  0015BA  ECC2  F01A         	call	_forward	;wreg free
  2874  0015BE                     
  2875                           ;colour_cards.c: 101:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2876  0015BE  0ED0               	movlw	208
  2877  0015C0  0100               	movlb	0	; () banked
  2878  0015C2  6F7C               	movwf	??_colourcards_readRGBC& (0+255),b
  2879  0015C4  0EC9               	movlw	201
  2880  0015C6                     u5837:
  2881  0015C6  2EE8               	decfsz	wreg,f,c
  2882  0015C8  D7FE               	bra	u5837
  2883  0015CA  2F7C               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2884  0015CC  D7FC               	bra	u5837
  2885  0015CE  D000               	nop2	
  2886                           
  2887                           ;colour_cards.c: 102:         stop(mL, mR);
  2888  0015D0  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2889  0015D4  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2890  0015D8  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2891  0015DC  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2892  0015E0  EC50  F01B         	call	_stop	;wreg free
  2893  0015E4                     
  2894                           ;colour_cards.c: 103:         colourclick_readRGBC(abs);
  2895  0015E4  C076  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2896  0015E8  C077  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2897  0015EC  EC0B  F01C         	call	_colourclick_readRGBC	;wreg free
  2898  0015F0                     
  2899                           ;colour_cards.c: 104:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrup
      +                          ts_upperbound)) {
  2900  0015F0  0100               	movlb	0	; () banked
  2901  0015F2  EE20 F006          	lfsr	2,6
  2902  0015F6  5176               	movf	colourcards_readRGBC@abs& (0+255),w,b
  2903  0015F8  26D9               	addwf	fsr2l,f,c
  2904  0015FA  5177               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  2905  0015FC  22DA               	addwfc	fsr2h,f,c
  2906  0015FE  5052               	movf	_interrupts_lowerbound^0,w,c	;volatile
  2907  001600  5CDE               	subwf	postinc2,w,c
  2908  001602  5053               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2909  001604  58DE               	subwfb	postinc2,w,c
  2910  001606  A0D8               	btfss	status,0,c
  2911  001608  EF08  F00B         	goto	u5371
  2912  00160C  EF0A  F00B         	goto	u5370
  2913  001610                     u5371:
  2914  001610  EF1B  F00B         	goto	l4937
  2915  001614                     u5370:
  2916  001614                     
  2917                           ; BSR set to: 0
  2918  001614  EE20 F006          	lfsr	2,6
  2919  001618  5176               	movf	colourcards_readRGBC@abs& (0+255),w,b
  2920  00161A  26D9               	addwf	fsr2l,f,c
  2921  00161C  5177               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  2922  00161E  22DA               	addwfc	fsr2h,f,c
  2923  001620  50DE               	movf	postinc2,w,c
  2924  001622  5C50               	subwf	_interrupts_upperbound^0,w,c	;volatile
  2925  001624  50DE               	movf	postinc2,w,c
  2926  001626  5851               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  2927  001628  B0D8               	btfsc	status,0,c
  2928  00162A  EF19  F00B         	goto	u5381
  2929  00162E  EF1B  F00B         	goto	u5380
  2930  001632                     u5381:
  2931  001632  EFFD  F007         	goto	l4845
  2932  001636                     u5380:
  2933  001636                     l4937:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;colour_cards.c: 105:             if (unknowncard_flag<3) {
  2937  001636  0E03               	movlw	3
  2938  001638  61A9               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  2939  00163A  EF21  F00B         	goto	u5391
  2940  00163E  EF23  F00B         	goto	u5390
  2941  001642                     u5391:
  2942  001642  EF29  F00B         	goto	l226
  2943  001646                     u5390:
  2944  001646                     
  2945                           ; BSR set to: 0
  2946                           ;colour_cards.c: 106:                 PIR0bits.INT1IF = 1;
  2947  001646  010E               	movlb	14	; () banked
  2948  001648  8333               	bsf	51,1,b	;volatile
  2949  00164A                     
  2950                           ; BSR set to: 14
  2951                           ;colour_cards.c: 107:                 unknowncard_flag++;
  2952  00164A  0100               	movlb	0	; () banked
  2953  00164C  2BA9               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  2954                           
  2955                           ;colour_cards.c: 108:             } else {
  2956  00164E  EF50  F00B         	goto	l4951
  2957  001652                     l226:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;colour_cards.c: 109:                 LATHbits.LATH3 = 1;
  2961  001652  8680               	bsf	128,3,c	;volatile
  2962  001654                     
  2963                           ; BSR set to: 0
  2964                           ;colour_cards.c: 110:                 turnright(mL, mR, 180);
  2965  001654  C078  F070         	movff	colourcards_readRGBC@mL,turnright@mL
  2966  001658  C079  F071         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2967  00165C  C07A  F072         	movff	colourcards_readRGBC@mR,turnright@mR
  2968  001660  C07B  F073         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2969  001664  0E00               	movlw	0
  2970  001666  6F75               	movwf	(turnright@deg+1)& (0+255),b
  2971  001668  0EB4               	movlw	180
  2972  00166A  6F74               	movwf	turnright@deg& (0+255),b
  2973  00166C  EC31  F01D         	call	_turnright	;wreg free
  2974                           
  2975                           ;colour_cards.c: 111:                 stop(mL, mR);
  2976  001670  C078  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2977  001674  C079  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2978  001678  C07A  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2979  00167C  C07B  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2980  001680  EC50  F01B         	call	_stop	;wreg free
  2981  001684                     
  2982                           ;colour_cards.c: 112:                 returnhome_flag = !returnhome_flag;
  2983  001684  0100               	movlb	0	; () banked
  2984  001686  51A8               	movf	_returnhome_flag& (0+255),w,b	;volatile
  2985  001688  B4D8               	btfsc	status,2,c
  2986  00168A  EF49  F00B         	goto	u5401
  2987  00168E  EF4C  F00B         	goto	u5400
  2988  001692                     u5401:
  2989  001692  0E01               	movlw	1
  2990  001694  EF4D  F00B         	goto	u5410
  2991  001698                     u5400:
  2992  001698  0E00               	movlw	0
  2993  00169A                     u5410:
  2994  00169A  6FA8               	movwf	_returnhome_flag& (0+255),b	;volatile
  2995  00169C  EFFD  F007         	goto	l4845
  2996  0016A0                     l4951:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;colour_cards.c: 120:     PIE0bits.INT1IE = 1;
  3000  0016A0  010E               	movlb	14	; () banked
  3001  0016A2  8329               	bsf	41,1,b	;volatile
  3002  0016A4                     
  3003                           ; BSR set to: 14
  3004  0016A4  0012               	return		;funcret
  3005  0016A6                     __end_of_colourcards_readRGBC:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _forward *****************
  3009 ;; Defined at:
  3010 ;;		line 83 in file "DC_motors.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  mL              2   34[COMRAM] PTR struct .
  3013 ;;		 -> main@motorL(9), 
  3014 ;;  mR              2   36[COMRAM] PTR struct .
  3015 ;;		 -> main@motorR(9), 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;Total ram usage:        5 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 9
  3034 ;; This function calls:
  3035 ;;		_DCmotors_setPWM
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;;		_colourcards_readRGBC
  3039 ;;		_DCmotors_testing
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text11
  3044  003584                     __ptext11:
  3045                           	callstack 0
  3046  003584                     _forward:
  3047                           	callstack 21
  3048  003584                     
  3049                           ;DC_motors.c: 84:     mL->direction = 1;
  3050  003584  EE20 F001          	lfsr	2,1
  3051  003588  5023               	movf	forward@mL^0,w,c
  3052  00358A  26D9               	addwf	fsr2l,f,c
  3053  00358C  5024               	movf	(forward@mL+1)^0,w,c
  3054  00358E  22DA               	addwfc	fsr2h,f,c
  3055  003590  0E01               	movlw	1
  3056  003592  6EDF               	movwf	indf2,c
  3057                           
  3058                           ;DC_motors.c: 85:     mR->direction = 1;
  3059  003594  EE20 F001          	lfsr	2,1
  3060  003598  5025               	movf	forward@mR^0,w,c
  3061  00359A  26D9               	addwf	fsr2l,f,c
  3062  00359C  5026               	movf	(forward@mR+1)^0,w,c
  3063  00359E  22DA               	addwfc	fsr2h,f,c
  3064  0035A0  0E01               	movlw	1
  3065  0035A2  6EDF               	movwf	indf2,c
  3066                           
  3067                           ;DC_motors.c: 88:     while((mL->power < 20) && (mR->power < 20)){
  3068  0035A4  EFF0  F01A         	goto	l3899
  3069  0035A8                     l3891:
  3070                           
  3071                           ;DC_motors.c: 89:         mL->power += 10;
  3072  0035A8  C023  FFD9         	movff	forward@mL,fsr2l
  3073  0035AC  C024  FFDA         	movff	forward@mL+1,fsr2h
  3074  0035B0  0E0A               	movlw	10
  3075  0035B2  26DF               	addwf	indf2,f,c
  3076                           
  3077                           ;DC_motors.c: 90:         mR->power += 10;
  3078  0035B4  C025  FFD9         	movff	forward@mR,fsr2l
  3079  0035B8  C026  FFDA         	movff	forward@mR+1,fsr2h
  3080  0035BC  0E0A               	movlw	10
  3081  0035BE  26DF               	addwf	indf2,f,c
  3082  0035C0                     
  3083                           ;DC_motors.c: 92:         DCmotors_setPWM(mL);
  3084  0035C0  C023  F018         	movff	forward@mL,DCmotors_setPWM@m
  3085  0035C4  C024  F019         	movff	forward@mL+1,DCmotors_setPWM@m+1
  3086  0035C8  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  3087  0035CC                     
  3088                           ;DC_motors.c: 93:         DCmotors_setPWM(mR);
  3089  0035CC  C025  F018         	movff	forward@mR,DCmotors_setPWM@m
  3090  0035D0  C026  F019         	movff	forward@mR+1,DCmotors_setPWM@m+1
  3091  0035D4  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  3092  0035D8                     
  3093                           ;DC_motors.c: 94:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  3094  0035D8  0EA0               	movlw	160
  3095  0035DA                     u5847:
  3096  0035DA  D000               	nop2	
  3097  0035DC  2EE8               	decfsz	wreg,f,c
  3098  0035DE  D7FD               	bra	u5847
  3099  0035E0                     l3899:
  3100                           
  3101                           ;DC_motors.c: 88:     while((mL->power < 20) && (mR->power < 20)){
  3102  0035E0  C023  FFD9         	movff	forward@mL,fsr2l
  3103  0035E4  C024  FFDA         	movff	forward@mL+1,fsr2h
  3104  0035E8  0E14               	movlw	20
  3105  0035EA  60DF               	cpfslt	indf2,c
  3106  0035EC  EFFA  F01A         	goto	u3831
  3107  0035F0  EFFC  F01A         	goto	u3830
  3108  0035F4                     u3831:
  3109  0035F4  EF08  F01B         	goto	l577
  3110  0035F8                     u3830:
  3111  0035F8  C025  FFD9         	movff	forward@mR,fsr2l
  3112  0035FC  C026  FFDA         	movff	forward@mR+1,fsr2h
  3113  003600  0E13               	movlw	19
  3114  003602  64DF               	cpfsgt	indf2,c
  3115  003604  EF06  F01B         	goto	u3841
  3116  003608  EF08  F01B         	goto	u3840
  3117  00360C                     u3841:
  3118  00360C  EFD4  F01A         	goto	l3891
  3119  003610                     u3840:
  3120  003610                     l577:
  3121  003610  0012               	return		;funcret
  3122  003612                     __end_of_forward:
  3123                           	callstack 0
  3124                           
  3125 ;; *************** function _colourclick_readRGBC2 *****************
  3126 ;; Defined at:
  3127 ;;		line 124 in file "colour_click.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  tmpval          2   22[COMRAM] PTR struct .
  3130 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
  3131 ;;  mode            1   24[COMRAM] unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3143 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3146 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3147 ;;Total ram usage:        5 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 11
  3150 ;; This function calls:
  3151 ;;		_colourclickLEDs_C
  3152 ;;		_colourclick_readRGBC
  3153 ;; This function is called by:
  3154 ;;		_colourcards_readRGBC
  3155 ;;		_colourcards_testingRGBC
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text12
  3160  003266                     __ptext12:
  3161                           	callstack 0
  3162  003266                     _colourclick_readRGBC2:
  3163                           	callstack 18
  3164  003266                     
  3165                           ;colour_click.c: 125:     colourclickLEDs_C(0);
  3166  003266  0E00               	movlw	0
  3167  003268  ECA4  F01E         	call	_colourclickLEDs_C
  3168  00326C                     
  3169                           ;colour_click.c: 126:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3170  00326C  0E09               	movlw	9
  3171  00326E  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3172  003270  0E1E               	movlw	30
  3173  003272  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3174  003274  0EE4               	movlw	228
  3175  003276                     u5857:
  3176  003276  2EE8               	decfsz	wreg,f,c
  3177  003278  D7FE               	bra	u5857
  3178  00327A  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3179  00327C  D7FC               	bra	u5857
  3180  00327E  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3181  003280  D7FA               	bra	u5857
  3182  003282  D000               	nop2	
  3183  003284                     
  3184                           ;colour_click.c: 128:     if (mode==1) {
  3185  003284  0419               	decf	colourclick_readRGBC2@mode^0,w,c
  3186  003286  A4D8               	btfss	status,2,c
  3187  003288  EF48  F019         	goto	u3851
  3188  00328C  EF4A  F019         	goto	u3850
  3189  003290                     u3851:
  3190  003290  EF78  F019         	goto	l3937
  3191  003294                     u3850:
  3192  003294                     
  3193                           ;colour_click.c: 129:         LATGbits.LATG1 = 1;
  3194  003294  827F               	bsf	127,1,c	;volatile
  3195  003296                     
  3196                           ;colour_click.c: 130:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3197  003296  0E52               	movlw	82
  3198  003298  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3199  00329A  0E2B               	movlw	43
  3200  00329C  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3201  00329E  0E00               	movlw	0
  3202  0032A0                     u5867:
  3203  0032A0  2EE8               	decfsz	wreg,f,c
  3204  0032A2  D7FE               	bra	u5867
  3205  0032A4  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3206  0032A6  D7FC               	bra	u5867
  3207  0032A8  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3208  0032AA  D7FA               	bra	u5867
  3209  0032AC  D000               	nop2	
  3210  0032AE                     
  3211                           ;colour_click.c: 131:         colourclick_readRGBC(tmpval);
  3212  0032AE  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3213  0032B2  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3214  0032B6  EC0B  F01C         	call	_colourclick_readRGBC	;wreg free
  3215  0032BA                     
  3216                           ;colour_click.c: 132:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3217  0032BA  0E52               	movlw	82
  3218  0032BC  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3219  0032BE  0E2B               	movlw	43
  3220  0032C0  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3221  0032C2  0E00               	movlw	0
  3222  0032C4                     u5877:
  3223  0032C4  2EE8               	decfsz	wreg,f,c
  3224  0032C6  D7FE               	bra	u5877
  3225  0032C8  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3226  0032CA  D7FC               	bra	u5877
  3227  0032CC  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3228  0032CE  D7FA               	bra	u5877
  3229  0032D0  D000               	nop2	
  3230  0032D2                     
  3231                           ;colour_click.c: 133:         LATGbits.LATG1 = 0;
  3232  0032D2  927F               	bcf	127,1,c	;volatile
  3233  0032D4                     l3935:
  3234                           
  3235                           ;colour_click.c: 134:         _delay((unsigned long)((20)*(64000000/4000.0)));
  3236  0032D4  0E02               	movlw	2
  3237  0032D6  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3238  0032D8  0EA0               	movlw	160
  3239  0032DA  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3240  0032DC  0E92               	movlw	146
  3241  0032DE                     u5887:
  3242  0032DE  2EE8               	decfsz	wreg,f,c
  3243  0032E0  D7FE               	bra	u5887
  3244  0032E2  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3245  0032E4  D7FC               	bra	u5887
  3246  0032E6  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3247  0032E8  D7FA               	bra	u5887
  3248  0032EA  D000               	nop2	
  3249                           
  3250                           ;colour_click.c: 135:     } else if (mode==2) {
  3251  0032EC  EFCE  F019         	goto	l3965
  3252  0032F0                     l3937:
  3253  0032F0  0E02               	movlw	2
  3254  0032F2  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
  3255  0032F4  A4D8               	btfss	status,2,c
  3256  0032F6  EF7F  F019         	goto	u3861
  3257  0032FA  EF81  F019         	goto	u3860
  3258  0032FE                     u3861:
  3259  0032FE  EFA3  F019         	goto	l3951
  3260  003302                     u3860:
  3261  003302                     
  3262                           ;colour_click.c: 136:         LATAbits.LATA4 = 1;
  3263  003302  8879               	bsf	121,4,c	;volatile
  3264  003304                     
  3265                           ;colour_click.c: 137:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3266  003304  0E52               	movlw	82
  3267  003306  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3268  003308  0E2B               	movlw	43
  3269  00330A  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3270  00330C  0E00               	movlw	0
  3271  00330E                     u5897:
  3272  00330E  2EE8               	decfsz	wreg,f,c
  3273  003310  D7FE               	bra	u5897
  3274  003312  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3275  003314  D7FC               	bra	u5897
  3276  003316  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3277  003318  D7FA               	bra	u5897
  3278  00331A  D000               	nop2	
  3279  00331C                     
  3280                           ;colour_click.c: 138:         colourclick_readRGBC(tmpval);
  3281  00331C  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3282  003320  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3283  003324  EC0B  F01C         	call	_colourclick_readRGBC	;wreg free
  3284  003328                     
  3285                           ;colour_click.c: 139:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3286  003328  0E52               	movlw	82
  3287  00332A  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3288  00332C  0E2B               	movlw	43
  3289  00332E  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3290  003330  0E00               	movlw	0
  3291  003332                     u5907:
  3292  003332  2EE8               	decfsz	wreg,f,c
  3293  003334  D7FE               	bra	u5907
  3294  003336  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3295  003338  D7FC               	bra	u5907
  3296  00333A  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3297  00333C  D7FA               	bra	u5907
  3298  00333E  D000               	nop2	
  3299  003340                     
  3300                           ;colour_click.c: 140:         LATAbits.LATA4 = 0;
  3301  003340  9879               	bcf	121,4,c	;volatile
  3302  003342  EF6A  F019         	goto	l3935
  3303  003346                     l3951:
  3304  003346  0E03               	movlw	3
  3305  003348  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
  3306  00334A  A4D8               	btfss	status,2,c
  3307  00334C  EFAA  F019         	goto	u3871
  3308  003350  EFAC  F019         	goto	u3870
  3309  003354                     u3871:
  3310  003354  EFCE  F019         	goto	l3965
  3311  003358                     u3870:
  3312  003358                     
  3313                           ;colour_click.c: 143:         LATFbits.LATF7 = 1;
  3314  003358  8E7E               	bsf	126,7,c	;volatile
  3315  00335A                     
  3316                           ;colour_click.c: 144:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3317  00335A  0E52               	movlw	82
  3318  00335C  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3319  00335E  0E2B               	movlw	43
  3320  003360  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3321  003362  0E00               	movlw	0
  3322  003364                     u5917:
  3323  003364  2EE8               	decfsz	wreg,f,c
  3324  003366  D7FE               	bra	u5917
  3325  003368  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3326  00336A  D7FC               	bra	u5917
  3327  00336C  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3328  00336E  D7FA               	bra	u5917
  3329  003370  D000               	nop2	
  3330  003372                     
  3331                           ;colour_click.c: 145:         colourclick_readRGBC(tmpval);
  3332  003372  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3333  003376  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3334  00337A  EC0B  F01C         	call	_colourclick_readRGBC	;wreg free
  3335  00337E                     
  3336                           ;colour_click.c: 146:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3337  00337E  0E52               	movlw	82
  3338  003380  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3339  003382  0E2B               	movlw	43
  3340  003384  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3341  003386  0E00               	movlw	0
  3342  003388                     u5927:
  3343  003388  2EE8               	decfsz	wreg,f,c
  3344  00338A  D7FE               	bra	u5927
  3345  00338C  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3346  00338E  D7FC               	bra	u5927
  3347  003390  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3348  003392  D7FA               	bra	u5927
  3349  003394  D000               	nop2	
  3350  003396                     
  3351                           ;colour_click.c: 147:         LATFbits.LATF7 = 0;
  3352  003396  9E7E               	bcf	126,7,c	;volatile
  3353  003398  EF6A  F019         	goto	l3935
  3354  00339C                     l3965:
  3355                           
  3356                           ;colour_click.c: 151:     colourclickLEDs_C(1);
  3357  00339C  0E01               	movlw	1
  3358  00339E  ECA4  F01E         	call	_colourclickLEDs_C
  3359  0033A2                     
  3360                           ;colour_click.c: 152:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3361  0033A2  0E09               	movlw	9
  3362  0033A4  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3363  0033A6  0E1E               	movlw	30
  3364  0033A8  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3365  0033AA  0EE4               	movlw	228
  3366  0033AC                     u5937:
  3367  0033AC  2EE8               	decfsz	wreg,f,c
  3368  0033AE  D7FE               	bra	u5937
  3369  0033B0  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3370  0033B2  D7FC               	bra	u5937
  3371  0033B4  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3372  0033B6  D7FA               	bra	u5937
  3373  0033B8  D000               	nop2	
  3374  0033BA  0012               	return		;funcret
  3375  0033BC                     __end_of_colourclick_readRGBC2:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _colourclick_readRGBC *****************
  3379 ;; Defined at:
  3380 ;;		line 113 in file "colour_click.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  tmpval          2   20[COMRAM] PTR struct .
  3383 ;;		 -> colourclick_calibration@initial(8), colourcards_testingRGBC@abs(8), main@current(8), 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3399 ;;Total ram usage:        2 bytes
  3400 ;; Hardware stack levels used: 1
  3401 ;; Hardware stack levels required when called: 10
  3402 ;; This function calls:
  3403 ;;		_colourclick_readB
  3404 ;;		_colourclick_readC
  3405 ;;		_colourclick_readG
  3406 ;;		_colourclick_readR
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;;		_colourcards_readRGBC
  3410 ;;		_colourclick_readRGBC2
  3411 ;;		_colourclick_calibration
  3412 ;;		_colourcards_testingRGBC
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text13
  3417  003816                     __ptext13:
  3418                           	callstack 0
  3419  003816                     _colourclick_readRGBC:
  3420                           	callstack 20
  3421  003816                     
  3422                           ;colour_click.c: 114:     tmpval->R = colourclick_readR();
  3423  003816  EC69  F01C         	call	_colourclick_readR	;wreg free
  3424  00381A  C015  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  3425  00381E  C016  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  3426  003822  C00E  FFDE         	movff	?_colourclick_readR,postinc2
  3427  003826  C00F  FFDD         	movff	?_colourclick_readR+1,postdec2
  3428                           
  3429                           ;colour_click.c: 115:     tmpval->G = colourclick_readG();
  3430  00382A  EC91  F01C         	call	_colourclick_readG	;wreg free
  3431  00382E  EE20 F002          	lfsr	2,2
  3432  003832  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  3433  003834  26D9               	addwf	fsr2l,f,c
  3434  003836  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3435  003838  22DA               	addwfc	fsr2h,f,c
  3436  00383A  C00E  FFDE         	movff	?_colourclick_readG,postinc2
  3437  00383E  C00F  FFDD         	movff	?_colourclick_readG+1,postdec2
  3438                           
  3439                           ;colour_click.c: 116:     tmpval->B = colourclick_readB();
  3440  003842  ECE1  F01C         	call	_colourclick_readB	;wreg free
  3441  003846  EE20 F004          	lfsr	2,4
  3442  00384A  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  3443  00384C  26D9               	addwf	fsr2l,f,c
  3444  00384E  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3445  003850  22DA               	addwfc	fsr2h,f,c
  3446  003852  C00E  FFDE         	movff	?_colourclick_readB,postinc2
  3447  003856  C00F  FFDD         	movff	?_colourclick_readB+1,postdec2
  3448                           
  3449                           ;colour_click.c: 117:     tmpval->C = colourclick_readC();
  3450  00385A  ECB9  F01C         	call	_colourclick_readC	;wreg free
  3451  00385E  EE20 F006          	lfsr	2,6
  3452  003862  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  3453  003864  26D9               	addwf	fsr2l,f,c
  3454  003866  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3455  003868  22DA               	addwfc	fsr2h,f,c
  3456  00386A  C00E  FFDE         	movff	?_colourclick_readC,postinc2
  3457  00386E  C00F  FFDD         	movff	?_colourclick_readC+1,postdec2
  3458  003872  0012               	return		;funcret
  3459  003874                     __end_of_colourclick_readRGBC:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _colourclick_readR *****************
  3463 ;; Defined at:
  3464 ;;		line 45 in file "colour_click.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  tmp             2   18[COMRAM] unsigned int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  2   13[COMRAM] unsigned int 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;Total ram usage:        7 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 9
  3485 ;; This function calls:
  3486 ;;		_I2C_2_Master_Read
  3487 ;;		_I2C_2_Master_RepStart
  3488 ;;		_I2C_2_Master_Start
  3489 ;;		_I2C_2_Master_Stop
  3490 ;;		_I2C_2_Master_Write
  3491 ;; This function is called by:
  3492 ;;		_colourclick_readRGBC
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text14
  3497  0038D2                     __ptext14:
  3498                           	callstack 0
  3499  0038D2                     _colourclick_readR:
  3500                           	callstack 20
  3501  0038D2                     
  3502                           ;colour_click.c: 46:  unsigned int tmp;;colour_click.c: 47:  I2C_2_Master_Start();
  3503  0038D2  EC61  F01F         	call	_I2C_2_Master_Start	;wreg free
  3504                           
  3505                           ;colour_click.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  3506  0038D6  0E52               	movlw	82
  3507  0038D8  EC4A  F01F         	call	_I2C_2_Master_Write
  3508                           
  3509                           ;colour_click.c: 49:  I2C_2_Master_Write(0xA0 | 0x16);
  3510  0038DC  0EB6               	movlw	182
  3511  0038DE  EC4A  F01F         	call	_I2C_2_Master_Write
  3512                           
  3513                           ;colour_click.c: 50:  I2C_2_Master_RepStart();
  3514  0038E2  EC66  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  3515                           
  3516                           ;colour_click.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  3517  0038E6  0E53               	movlw	83
  3518  0038E8  EC4A  F01F         	call	_I2C_2_Master_Write
  3519                           
  3520                           ;colour_click.c: 52:  tmp=I2C_2_Master_Read(1);
  3521  0038EC  0E01               	movlw	1
  3522  0038EE  ECF1  F01D         	call	_I2C_2_Master_Read
  3523  0038F2  6E10               	movwf	??_colourclick_readR^0,c
  3524  0038F4  5010               	movf	??_colourclick_readR^0,w,c
  3525  0038F6  6E13               	movwf	colourclick_readR@tmp^0,c
  3526  0038F8  6A14               	clrf	(colourclick_readR@tmp+1)^0,c
  3527                           
  3528                           ;colour_click.c: 53:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  3529  0038FA  0E00               	movlw	0
  3530  0038FC  ECF1  F01D         	call	_I2C_2_Master_Read
  3531  003900  6E10               	movwf	??_colourclick_readR^0,c
  3532  003902  5010               	movf	??_colourclick_readR^0,w,c
  3533  003904  6E12               	movwf	(??_colourclick_readR+2)^0,c
  3534  003906  6A11               	clrf	(??_colourclick_readR+1)^0,c
  3535  003908  5013               	movf	colourclick_readR@tmp^0,w,c
  3536  00390A  1011               	iorwf	(??_colourclick_readR+1)^0,w,c
  3537  00390C  6E13               	movwf	colourclick_readR@tmp^0,c
  3538  00390E  5014               	movf	(colourclick_readR@tmp+1)^0,w,c
  3539  003910  1012               	iorwf	(??_colourclick_readR+2)^0,w,c
  3540  003912  6E14               	movwf	(colourclick_readR@tmp+1)^0,c
  3541                           
  3542                           ;colour_click.c: 54:  I2C_2_Master_Stop();
  3543  003914  EC5C  F01F         	call	_I2C_2_Master_Stop	;wreg free
  3544  003918                     
  3545                           ;colour_click.c: 55:  return tmp;
  3546  003918  C013  F00E         	movff	colourclick_readR@tmp,?_colourclick_readR
  3547  00391C  C014  F00F         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  3548  003920  0012               	return		;funcret
  3549  003922                     __end_of_colourclick_readR:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _colourclick_readG *****************
  3553 ;; Defined at:
  3554 ;;		line 62 in file "colour_click.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  tmp             2   18[COMRAM] unsigned int 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  2   13[COMRAM] unsigned int 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;Total ram usage:        7 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 9
  3575 ;; This function calls:
  3576 ;;		_I2C_2_Master_Read
  3577 ;;		_I2C_2_Master_RepStart
  3578 ;;		_I2C_2_Master_Start
  3579 ;;		_I2C_2_Master_Stop
  3580 ;;		_I2C_2_Master_Write
  3581 ;; This function is called by:
  3582 ;;		_colourclick_readRGBC
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text15
  3587  003922                     __ptext15:
  3588                           	callstack 0
  3589  003922                     _colourclick_readG:
  3590                           	callstack 20
  3591  003922                     
  3592                           ;colour_click.c: 63:  unsigned int tmp;;colour_click.c: 64:  I2C_2_Master_Start();
  3593  003922  EC61  F01F         	call	_I2C_2_Master_Start	;wreg free
  3594                           
  3595                           ;colour_click.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  3596  003926  0E52               	movlw	82
  3597  003928  EC4A  F01F         	call	_I2C_2_Master_Write
  3598                           
  3599                           ;colour_click.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  3600  00392C  0EB8               	movlw	184
  3601  00392E  EC4A  F01F         	call	_I2C_2_Master_Write
  3602                           
  3603                           ;colour_click.c: 67:  I2C_2_Master_RepStart();
  3604  003932  EC66  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  3605                           
  3606                           ;colour_click.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  3607  003936  0E53               	movlw	83
  3608  003938  EC4A  F01F         	call	_I2C_2_Master_Write
  3609                           
  3610                           ;colour_click.c: 69:  tmp=I2C_2_Master_Read(1);
  3611  00393C  0E01               	movlw	1
  3612  00393E  ECF1  F01D         	call	_I2C_2_Master_Read
  3613  003942  6E10               	movwf	??_colourclick_readG^0,c
  3614  003944  5010               	movf	??_colourclick_readG^0,w,c
  3615  003946  6E13               	movwf	colourclick_readG@tmp^0,c
  3616  003948  6A14               	clrf	(colourclick_readG@tmp+1)^0,c
  3617                           
  3618                           ;colour_click.c: 70:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  3619  00394A  0E00               	movlw	0
  3620  00394C  ECF1  F01D         	call	_I2C_2_Master_Read
  3621  003950  6E10               	movwf	??_colourclick_readG^0,c
  3622  003952  5010               	movf	??_colourclick_readG^0,w,c
  3623  003954  6E12               	movwf	(??_colourclick_readG+2)^0,c
  3624  003956  6A11               	clrf	(??_colourclick_readG+1)^0,c
  3625  003958  5013               	movf	colourclick_readG@tmp^0,w,c
  3626  00395A  1011               	iorwf	(??_colourclick_readG+1)^0,w,c
  3627  00395C  6E13               	movwf	colourclick_readG@tmp^0,c
  3628  00395E  5014               	movf	(colourclick_readG@tmp+1)^0,w,c
  3629  003960  1012               	iorwf	(??_colourclick_readG+2)^0,w,c
  3630  003962  6E14               	movwf	(colourclick_readG@tmp+1)^0,c
  3631                           
  3632                           ;colour_click.c: 71:  I2C_2_Master_Stop();
  3633  003964  EC5C  F01F         	call	_I2C_2_Master_Stop	;wreg free
  3634  003968                     
  3635                           ;colour_click.c: 72:  return tmp;
  3636  003968  C013  F00E         	movff	colourclick_readG@tmp,?_colourclick_readG
  3637  00396C  C014  F00F         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  3638  003970  0012               	return		;funcret
  3639  003972                     __end_of_colourclick_readG:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function _colourclick_readC *****************
  3643 ;; Defined at:
  3644 ;;		line 96 in file "colour_click.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  tmp             2   18[COMRAM] unsigned int 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  2   13[COMRAM] unsigned int 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;Total ram usage:        7 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; Hardware stack levels required when called: 9
  3665 ;; This function calls:
  3666 ;;		_I2C_2_Master_Read
  3667 ;;		_I2C_2_Master_RepStart
  3668 ;;		_I2C_2_Master_Start
  3669 ;;		_I2C_2_Master_Stop
  3670 ;;		_I2C_2_Master_Write
  3671 ;; This function is called by:
  3672 ;;		_colourclick_readRGBC
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text16
  3677  003972                     __ptext16:
  3678                           	callstack 0
  3679  003972                     _colourclick_readC:
  3680                           	callstack 20
  3681  003972                     
  3682                           ;colour_click.c: 97:  unsigned int tmp;;colour_click.c: 98:  I2C_2_Master_Start();
  3683  003972  EC61  F01F         	call	_I2C_2_Master_Start	;wreg free
  3684                           
  3685                           ;colour_click.c: 99:  I2C_2_Master_Write(0x52 | 0x00);
  3686  003976  0E52               	movlw	82
  3687  003978  EC4A  F01F         	call	_I2C_2_Master_Write
  3688                           
  3689                           ;colour_click.c: 100:  I2C_2_Master_Write(0xA0 | 0x14);
  3690  00397C  0EB4               	movlw	180
  3691  00397E  EC4A  F01F         	call	_I2C_2_Master_Write
  3692                           
  3693                           ;colour_click.c: 101:  I2C_2_Master_RepStart();
  3694  003982  EC66  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  3695                           
  3696                           ;colour_click.c: 102:  I2C_2_Master_Write(0x52 | 0x01);
  3697  003986  0E53               	movlw	83
  3698  003988  EC4A  F01F         	call	_I2C_2_Master_Write
  3699                           
  3700                           ;colour_click.c: 103:  tmp=I2C_2_Master_Read(1);
  3701  00398C  0E01               	movlw	1
  3702  00398E  ECF1  F01D         	call	_I2C_2_Master_Read
  3703  003992  6E10               	movwf	??_colourclick_readC^0,c
  3704  003994  5010               	movf	??_colourclick_readC^0,w,c
  3705  003996  6E13               	movwf	colourclick_readC@tmp^0,c
  3706  003998  6A14               	clrf	(colourclick_readC@tmp+1)^0,c
  3707                           
  3708                           ;colour_click.c: 104:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  3709  00399A  0E00               	movlw	0
  3710  00399C  ECF1  F01D         	call	_I2C_2_Master_Read
  3711  0039A0  6E10               	movwf	??_colourclick_readC^0,c
  3712  0039A2  5010               	movf	??_colourclick_readC^0,w,c
  3713  0039A4  6E12               	movwf	(??_colourclick_readC+2)^0,c
  3714  0039A6  6A11               	clrf	(??_colourclick_readC+1)^0,c
  3715  0039A8  5013               	movf	colourclick_readC@tmp^0,w,c
  3716  0039AA  1011               	iorwf	(??_colourclick_readC+1)^0,w,c
  3717  0039AC  6E13               	movwf	colourclick_readC@tmp^0,c
  3718  0039AE  5014               	movf	(colourclick_readC@tmp+1)^0,w,c
  3719  0039B0  1012               	iorwf	(??_colourclick_readC+2)^0,w,c
  3720  0039B2  6E14               	movwf	(colourclick_readC@tmp+1)^0,c
  3721                           
  3722                           ;colour_click.c: 105:  I2C_2_Master_Stop();
  3723  0039B4  EC5C  F01F         	call	_I2C_2_Master_Stop	;wreg free
  3724  0039B8                     
  3725                           ;colour_click.c: 106:  return tmp;
  3726  0039B8  C013  F00E         	movff	colourclick_readC@tmp,?_colourclick_readC
  3727  0039BC  C014  F00F         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  3728  0039C0  0012               	return		;funcret
  3729  0039C2                     __end_of_colourclick_readC:
  3730                           	callstack 0
  3731                           
  3732 ;; *************** function _colourclick_readB *****************
  3733 ;; Defined at:
  3734 ;;		line 79 in file "colour_click.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  tmp             2   18[COMRAM] unsigned int 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  2   13[COMRAM] unsigned int 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3752 ;;Total ram usage:        7 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; Hardware stack levels required when called: 9
  3755 ;; This function calls:
  3756 ;;		_I2C_2_Master_Read
  3757 ;;		_I2C_2_Master_RepStart
  3758 ;;		_I2C_2_Master_Start
  3759 ;;		_I2C_2_Master_Stop
  3760 ;;		_I2C_2_Master_Write
  3761 ;; This function is called by:
  3762 ;;		_colourclick_readRGBC
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text17
  3767  0039C2                     __ptext17:
  3768                           	callstack 0
  3769  0039C2                     _colourclick_readB:
  3770                           	callstack 20
  3771  0039C2                     
  3772                           ;colour_click.c: 80:  unsigned int tmp;;colour_click.c: 81:  I2C_2_Master_Start();
  3773  0039C2  EC61  F01F         	call	_I2C_2_Master_Start	;wreg free
  3774                           
  3775                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  3776  0039C6  0E52               	movlw	82
  3777  0039C8  EC4A  F01F         	call	_I2C_2_Master_Write
  3778                           
  3779                           ;colour_click.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  3780  0039CC  0EBA               	movlw	186
  3781  0039CE  EC4A  F01F         	call	_I2C_2_Master_Write
  3782                           
  3783                           ;colour_click.c: 84:  I2C_2_Master_RepStart();
  3784  0039D2  EC66  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  3785                           
  3786                           ;colour_click.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  3787  0039D6  0E53               	movlw	83
  3788  0039D8  EC4A  F01F         	call	_I2C_2_Master_Write
  3789                           
  3790                           ;colour_click.c: 86:  tmp=I2C_2_Master_Read(1);
  3791  0039DC  0E01               	movlw	1
  3792  0039DE  ECF1  F01D         	call	_I2C_2_Master_Read
  3793  0039E2  6E10               	movwf	??_colourclick_readB^0,c
  3794  0039E4  5010               	movf	??_colourclick_readB^0,w,c
  3795  0039E6  6E13               	movwf	colourclick_readB@tmp^0,c
  3796  0039E8  6A14               	clrf	(colourclick_readB@tmp+1)^0,c
  3797                           
  3798                           ;colour_click.c: 87:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  3799  0039EA  0E00               	movlw	0
  3800  0039EC  ECF1  F01D         	call	_I2C_2_Master_Read
  3801  0039F0  6E10               	movwf	??_colourclick_readB^0,c
  3802  0039F2  5010               	movf	??_colourclick_readB^0,w,c
  3803  0039F4  6E12               	movwf	(??_colourclick_readB+2)^0,c
  3804  0039F6  6A11               	clrf	(??_colourclick_readB+1)^0,c
  3805  0039F8  5013               	movf	colourclick_readB@tmp^0,w,c
  3806  0039FA  1011               	iorwf	(??_colourclick_readB+1)^0,w,c
  3807  0039FC  6E13               	movwf	colourclick_readB@tmp^0,c
  3808  0039FE  5014               	movf	(colourclick_readB@tmp+1)^0,w,c
  3809  003A00  1012               	iorwf	(??_colourclick_readB+2)^0,w,c
  3810  003A02  6E14               	movwf	(colourclick_readB@tmp+1)^0,c
  3811                           
  3812                           ;colour_click.c: 88:  I2C_2_Master_Stop();
  3813  003A04  EC5C  F01F         	call	_I2C_2_Master_Stop	;wreg free
  3814  003A08                     
  3815                           ;colour_click.c: 89:  return tmp;
  3816  003A08  C013  F00E         	movff	colourclick_readB@tmp,?_colourclick_readB
  3817  003A0C  C014  F00F         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  3818  003A10  0012               	return		;funcret
  3819  003A12                     __end_of_colourclick_readB:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _I2C_2_Master_Write *****************
  3823 ;; Defined at:
  3824 ;;		line 64 in file "I2C.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  data_byte       1    wreg     unsigned char 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  data_byte       1   10[COMRAM] unsigned char 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;Total ram usage:        1 bytes
  3843 ;; Hardware stack levels used: 1
  3844 ;; Hardware stack levels required when called: 8
  3845 ;; This function calls:
  3846 ;;		_I2C_2_Master_Idle
  3847 ;; This function is called by:
  3848 ;;		_interrupts_clear
  3849 ;;		_colourclick_writetoaddr
  3850 ;;		_colourclick_readR
  3851 ;;		_colourclick_readG
  3852 ;;		_colourclick_readB
  3853 ;;		_colourclick_readC
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text18
  3858  003E94                     __ptext18:
  3859                           	callstack 0
  3860  003E94                     _I2C_2_Master_Write:
  3861                           	callstack 18
  3862                           
  3863                           ;incstack = 0
  3864                           ;I2C_2_Master_Write@data_byte stored from wreg
  3865  003E94  6E0B               	movwf	I2C_2_Master_Write@data_byte^0,c
  3866  003E96                     
  3867                           ;I2C.c: 65:   I2C_2_Master_Idle();
  3868  003E96  EC57  F01E         	call	_I2C_2_Master_Idle	;wreg free
  3869  003E9A                     
  3870                           ;I2C.c: 66:   SSP2BUF = data_byte;
  3871  003E9A  C00B  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3872  003E9E  0012               	return		;funcret
  3873  003EA0                     __end_of_I2C_2_Master_Write:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _I2C_2_Master_Stop *****************
  3877 ;; Defined at:
  3878 ;;		line 55 in file "I2C.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; Hardware stack levels required when called: 8
  3899 ;; This function calls:
  3900 ;;		_I2C_2_Master_Idle
  3901 ;; This function is called by:
  3902 ;;		_interrupts_clear
  3903 ;;		_colourclick_writetoaddr
  3904 ;;		_colourclick_readR
  3905 ;;		_colourclick_readG
  3906 ;;		_colourclick_readB
  3907 ;;		_colourclick_readC
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text19
  3912  003EB8                     __ptext19:
  3913                           	callstack 0
  3914  003EB8                     _I2C_2_Master_Stop:
  3915                           	callstack 18
  3916  003EB8                     
  3917                           ;I2C.c: 56:   I2C_2_Master_Idle();
  3918  003EB8  EC57  F01E         	call	_I2C_2_Master_Idle	;wreg free
  3919  003EBC                     
  3920                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  3921  003EBC  010E               	movlb	14	; () banked
  3922  003EBE  85DA               	bsf	218,2,b	;volatile
  3923  003EC0                     
  3924                           ; BSR set to: 14
  3925  003EC0  0012               	return		;funcret
  3926  003EC2                     __end_of_I2C_2_Master_Stop:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function _I2C_2_Master_Start *****************
  3930 ;; Defined at:
  3931 ;;		line 37 in file "I2C.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;Total ram usage:        0 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; Hardware stack levels required when called: 8
  3952 ;; This function calls:
  3953 ;;		_I2C_2_Master_Idle
  3954 ;; This function is called by:
  3955 ;;		_interrupts_clear
  3956 ;;		_colourclick_writetoaddr
  3957 ;;		_colourclick_readR
  3958 ;;		_colourclick_readG
  3959 ;;		_colourclick_readB
  3960 ;;		_colourclick_readC
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text20
  3965  003EC2                     __ptext20:
  3966                           	callstack 0
  3967  003EC2                     _I2C_2_Master_Start:
  3968                           	callstack 18
  3969  003EC2                     
  3970                           ;I2C.c: 38:   I2C_2_Master_Idle();
  3971  003EC2  EC57  F01E         	call	_I2C_2_Master_Idle	;wreg free
  3972  003EC6                     
  3973                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  3974  003EC6  010E               	movlb	14	; () banked
  3975  003EC8  81DA               	bsf	218,0,b	;volatile
  3976  003ECA                     
  3977                           ; BSR set to: 14
  3978  003ECA  0012               	return		;funcret
  3979  003ECC                     __end_of_I2C_2_Master_Start:
  3980                           	callstack 0
  3981                           
  3982 ;; *************** function _I2C_2_Master_RepStart *****************
  3983 ;; Defined at:
  3984 ;;		line 46 in file "I2C.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 8
  4005 ;; This function calls:
  4006 ;;		_I2C_2_Master_Idle
  4007 ;; This function is called by:
  4008 ;;		_colourclick_readR
  4009 ;;		_colourclick_readG
  4010 ;;		_colourclick_readB
  4011 ;;		_colourclick_readC
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text21
  4016  003ECC                     __ptext21:
  4017                           	callstack 0
  4018  003ECC                     _I2C_2_Master_RepStart:
  4019                           	callstack 20
  4020  003ECC                     
  4021                           ;I2C.c: 47:   I2C_2_Master_Idle();
  4022  003ECC  EC57  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4023  003ED0                     
  4024                           ;I2C.c: 48:   SSP2CON2bits.RSEN = 1;
  4025  003ED0  010E               	movlb	14	; () banked
  4026  003ED2  83DA               	bsf	218,1,b	;volatile
  4027  003ED4                     
  4028                           ; BSR set to: 14
  4029  003ED4  0012               	return		;funcret
  4030  003ED6                     __end_of_I2C_2_Master_RepStart:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function _I2C_2_Master_Read *****************
  4034 ;; Defined at:
  4035 ;;		line 73 in file "I2C.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  ack             1    wreg     unsigned char 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  ack             1   11[COMRAM] unsigned char 
  4040 ;;  tmp             1   12[COMRAM] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      unsigned char 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;Total ram usage:        3 bytes
  4055 ;; Hardware stack levels used: 1
  4056 ;; Hardware stack levels required when called: 8
  4057 ;; This function calls:
  4058 ;;		_I2C_2_Master_Idle
  4059 ;; This function is called by:
  4060 ;;		_colourclick_readR
  4061 ;;		_colourclick_readG
  4062 ;;		_colourclick_readB
  4063 ;;		_colourclick_readC
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text22
  4068  003BE2                     __ptext22:
  4069                           	callstack 0
  4070  003BE2                     _I2C_2_Master_Read:
  4071                           	callstack 20
  4072                           
  4073                           ; BSR set to: 14
  4074                           ;incstack = 0
  4075                           ;I2C_2_Master_Read@ack stored from wreg
  4076  003BE2  6E0C               	movwf	I2C_2_Master_Read@ack^0,c
  4077  003BE4                     
  4078                           ;I2C.c: 74:   unsigned char tmp;;I2C.c: 75:   I2C_2_Master_Idle();
  4079  003BE4  EC57  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4080  003BE8                     
  4081                           ;I2C.c: 76:   SSP2CON2bits.RCEN = 1;
  4082  003BE8  010E               	movlb	14	; () banked
  4083  003BEA  87DA               	bsf	218,3,b	;volatile
  4084                           
  4085                           ;I2C.c: 77:   I2C_2_Master_Idle();
  4086  003BEC  EC57  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4087  003BF0                     
  4088                           ;I2C.c: 78:   tmp = SSP2BUF;
  4089  003BF0  CED5 F00D          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4090                           
  4091                           ;I2C.c: 79:   I2C_2_Master_Idle();
  4092  003BF4  EC57  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4093  003BF8                     
  4094                           ;I2C.c: 80:   SSP2CON2bits.ACKDT = !ack;
  4095  003BF8  500C               	movf	I2C_2_Master_Read@ack^0,w,c
  4096  003BFA  B4D8               	btfsc	status,2,c
  4097  003BFC  EF02  F01E         	goto	u2531
  4098  003C00  EF06  F01E         	goto	u2530
  4099  003C04                     u2531:
  4100  003C04  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  4101  003C06  2A0B               	incf	??_I2C_2_Master_Read^0,f,c
  4102  003C08  EF07  F01E         	goto	u2548
  4103  003C0C                     u2530:
  4104  003C0C  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  4105  003C0E                     u2548:
  4106  003C0E  3A0B               	swapf	??_I2C_2_Master_Read^0,f,c
  4107  003C10  460B               	rlncf	??_I2C_2_Master_Read^0,f,c
  4108  003C12  010E               	movlb	14	; () banked
  4109  003C14  51DA               	movf	218,w,b	;volatile
  4110  003C16  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  4111  003C18  0BDF               	andlw	-33
  4112  003C1A  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  4113  003C1C  6FDA               	movwf	218,b	;volatile
  4114  003C1E                     
  4115                           ; BSR set to: 14
  4116                           ;I2C.c: 81:   SSP2CON2bits.ACKEN = 1;
  4117  003C1E  89DA               	bsf	218,4,b	;volatile
  4118  003C20                     
  4119                           ; BSR set to: 14
  4120                           ;I2C.c: 82:   return tmp;
  4121  003C20  500D               	movf	I2C_2_Master_Read@tmp^0,w,c
  4122  003C22                     
  4123                           ; BSR set to: 14
  4124  003C22  0012               	return		;funcret
  4125  003C24                     __end_of_I2C_2_Master_Read:
  4126                           	callstack 0
  4127                           
  4128 ;; *************** function _I2C_2_Master_Idle *****************
  4129 ;; Defined at:
  4130 ;;		line 29 in file "I2C.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;Total ram usage:        1 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 7
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_I2C_2_Master_Start
  4155 ;;		_I2C_2_Master_RepStart
  4156 ;;		_I2C_2_Master_Stop
  4157 ;;		_I2C_2_Master_Write
  4158 ;;		_I2C_2_Master_Read
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text23
  4163  003CAE                     __ptext23:
  4164                           	callstack 0
  4165  003CAE                     _I2C_2_Master_Idle:
  4166                           	callstack 18
  4167  003CAE                     l433:
  4168  003CAE  010E               	movlb	14	; () banked
  4169  003CB0  B5D8               	btfsc	216,2,b	;volatile
  4170  003CB2  EF5D  F01E         	goto	u2511
  4171  003CB6  EF5F  F01E         	goto	u2510
  4172  003CBA                     u2511:
  4173  003CBA  EF57  F01E         	goto	l433
  4174  003CBE                     u2510:
  4175  003CBE                     
  4176                           ; BSR set to: 14
  4177  003CBE  CEDA F00A          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4178  003CC2  0E1F               	movlw	31
  4179  003CC4  160A               	andwf	??_I2C_2_Master_Idle^0,f,c
  4180  003CC6  A4D8               	btfss	status,2,c
  4181  003CC8  EF68  F01E         	goto	u2521
  4182  003CCC  EF6A  F01E         	goto	u2520
  4183  003CD0                     u2521:
  4184  003CD0  EF57  F01E         	goto	l433
  4185  003CD4                     u2520:
  4186  003CD4                     
  4187                           ; BSR set to: 14
  4188  003CD4  0012               	return		;funcret
  4189  003CD6                     __end_of_I2C_2_Master_Idle:
  4190                           	callstack 0
  4191                           
  4192 ;; *************** function _colourclickLEDs_C *****************
  4193 ;; Defined at:
  4194 ;;		line 46 in file "buttons_n_LEDs.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;  tog             1    wreg     unsigned char 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  tog             1    9[COMRAM] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		wreg
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;Total ram usage:        1 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 7
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_main
  4219 ;;		_colourclick_readRGBC2
  4220 ;;		_colourclick_calibration
  4221 ;;		_colourclickLEDs_init
  4222 ;;		_colourcards_testingRGBC
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text24
  4227  003D48                     __ptext24:
  4228                           	callstack 0
  4229  003D48                     _colourclickLEDs_C:
  4230                           	callstack 21
  4231                           
  4232                           ; BSR set to: 14
  4233                           ;incstack = 0
  4234                           ;colourclickLEDs_C@tog stored from wreg
  4235  003D48  6E0A               	movwf	colourclickLEDs_C@tog^0,c
  4236  003D4A                     
  4237                           ;buttons_n_LEDs.c: 47:     LATGbits.LATG1 = tog;
  4238  003D4A  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  4239  003D4C  D002               	bra	u3435
  4240  003D4E  927F               	bcf	127,1,c	;volatile
  4241  003D50  D001               	bra	u3436
  4242  003D52                     u3435:
  4243  003D52  827F               	bsf	127,1,c	;volatile
  4244  003D54                     u3436:
  4245                           
  4246                           ;buttons_n_LEDs.c: 48:     LATAbits.LATA4 = tog;
  4247  003D54  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  4248  003D56  D002               	bra	u3445
  4249  003D58  9879               	bcf	121,4,c	;volatile
  4250  003D5A  D001               	bra	u3446
  4251  003D5C                     u3445:
  4252  003D5C  8879               	bsf	121,4,c	;volatile
  4253  003D5E                     u3446:
  4254                           
  4255                           ;buttons_n_LEDs.c: 49:     LATFbits.LATF7 = tog;
  4256  003D5E  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  4257  003D60  D002               	bra	u3455
  4258  003D62  9E7E               	bcf	126,7,c	;volatile
  4259  003D64  D001               	bra	u3456
  4260  003D66                     u3455:
  4261  003D66  8E7E               	bsf	126,7,c	;volatile
  4262  003D68                     u3456:
  4263  003D68  0012               	return		;funcret
  4264  003D6A                     __end_of_colourclickLEDs_C:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _colourcards_normaliseRGBC *****************
  4268 ;; Defined at:
  4269 ;;		line 207 in file "colour_cards.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  abs             2   61[COMRAM] PTR struct .
  4272 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
  4273 ;;  rel             2   63[COMRAM] PTR struct .
  4274 ;;		 -> colourcards_testingRGBC@rel(12), colourcards_readRGBC@rel(12), 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  C               2   71[COMRAM] unsigned int 
  4277 ;;  B               2   69[COMRAM] unsigned int 
  4278 ;;  G               2   67[COMRAM] unsigned int 
  4279 ;;  R               2   65[COMRAM] unsigned int 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;Total ram usage:       12 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 8
  4296 ;; This function calls:
  4297 ;;		___fldiv
  4298 ;;		___xxtofl
  4299 ;; This function is called by:
  4300 ;;		_colourcards_readRGBC
  4301 ;;		_colourcards_testingRGBC
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text25
  4306  0030F0                     __ptext25:
  4307                           	callstack 0
  4308  0030F0                     _colourcards_normaliseRGBC:
  4309                           	callstack 21
  4310  0030F0                     
  4311                           ;colour_cards.c: 208:     unsigned int R = abs->R;
  4312  0030F0  C03E  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
  4313  0030F4  C03F  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
  4314  0030F8  CFDE F042          	movff	postinc2,colourcards_normaliseRGBC@R
  4315  0030FC  CFDD F043          	movff	postdec2,colourcards_normaliseRGBC@R+1
  4316  003100                     
  4317                           ;colour_cards.c: 209:     unsigned int G = abs->G;
  4318  003100  EE20 F002          	lfsr	2,2
  4319  003104  503E               	movf	colourcards_normaliseRGBC@abs^0,w,c
  4320  003106  26D9               	addwf	fsr2l,f,c
  4321  003108  503F               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
  4322  00310A  22DA               	addwfc	fsr2h,f,c
  4323  00310C  CFDE F044          	movff	postinc2,colourcards_normaliseRGBC@G
  4324  003110  CFDD F045          	movff	postdec2,colourcards_normaliseRGBC@G+1
  4325  003114                     
  4326                           ;colour_cards.c: 210:     unsigned int B = abs->B;
  4327  003114  EE20 F004          	lfsr	2,4
  4328  003118  503E               	movf	colourcards_normaliseRGBC@abs^0,w,c
  4329  00311A  26D9               	addwf	fsr2l,f,c
  4330  00311C  503F               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
  4331  00311E  22DA               	addwfc	fsr2h,f,c
  4332  003120  CFDE F046          	movff	postinc2,colourcards_normaliseRGBC@B
  4333  003124  CFDD F047          	movff	postdec2,colourcards_normaliseRGBC@B+1
  4334  003128                     
  4335                           ;colour_cards.c: 211:     unsigned int C = abs->C;
  4336  003128  EE20 F006          	lfsr	2,6
  4337  00312C  503E               	movf	colourcards_normaliseRGBC@abs^0,w,c
  4338  00312E  26D9               	addwf	fsr2l,f,c
  4339  003130  503F               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
  4340  003132  22DA               	addwfc	fsr2h,f,c
  4341  003134  CFDE F048          	movff	postinc2,colourcards_normaliseRGBC@C
  4342  003138  CFDD F049          	movff	postdec2,colourcards_normaliseRGBC@C+1
  4343  00313C                     
  4344                           ;colour_cards.c: 213:     rel->R = (float)R/(float)C;
  4345  00313C  C042  F017         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
  4346  003140  C043  F018         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
  4347  003144  6A19               	clrf	(___xxtofl@val+2)^0,c
  4348  003146  6A1A               	clrf	(___xxtofl@val+3)^0,c
  4349  003148  0E00               	movlw	0
  4350  00314A  ECE0  F016         	call	___xxtofl
  4351  00314E  C017  F025         	movff	?___xxtofl,___fldiv@b
  4352  003152  C018  F026         	movff	?___xxtofl+1,___fldiv@b+1
  4353  003156  C019  F027         	movff	?___xxtofl+2,___fldiv@b+2
  4354  00315A  C01A  F028         	movff	?___xxtofl+3,___fldiv@b+3
  4355  00315E  C048  F017         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4356  003162  C049  F018         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4357  003166  6A19               	clrf	(___xxtofl@val+2)^0,c
  4358  003168  6A1A               	clrf	(___xxtofl@val+3)^0,c
  4359  00316A  0E00               	movlw	0
  4360  00316C  ECE0  F016         	call	___xxtofl
  4361  003170  C017  F029         	movff	?___xxtofl,___fldiv@a
  4362  003174  C018  F02A         	movff	?___xxtofl+1,___fldiv@a+1
  4363  003178  C019  F02B         	movff	?___xxtofl+2,___fldiv@a+2
  4364  00317C  C01A  F02C         	movff	?___xxtofl+3,___fldiv@a+3
  4365  003180  ECC8  F00F         	call	___fldiv	;wreg free
  4366  003184  C040  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
  4367  003188  C041  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
  4368  00318C  C025  FFDE         	movff	?___fldiv,postinc2
  4369  003190  C026  FFDE         	movff	?___fldiv+1,postinc2
  4370  003194  C027  FFDE         	movff	?___fldiv+2,postinc2
  4371  003198  C028  FFDE         	movff	?___fldiv+3,postinc2
  4372  00319C                     
  4373                           ;colour_cards.c: 214:     rel->G = (float)G/(float)C;
  4374  00319C  C044  F017         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
  4375  0031A0  C045  F018         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
  4376  0031A4  6A19               	clrf	(___xxtofl@val+2)^0,c
  4377  0031A6  6A1A               	clrf	(___xxtofl@val+3)^0,c
  4378  0031A8  0E00               	movlw	0
  4379  0031AA  ECE0  F016         	call	___xxtofl
  4380  0031AE  C017  F025         	movff	?___xxtofl,___fldiv@b
  4381  0031B2  C018  F026         	movff	?___xxtofl+1,___fldiv@b+1
  4382  0031B6  C019  F027         	movff	?___xxtofl+2,___fldiv@b+2
  4383  0031BA  C01A  F028         	movff	?___xxtofl+3,___fldiv@b+3
  4384  0031BE  C048  F017         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4385  0031C2  C049  F018         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4386  0031C6  6A19               	clrf	(___xxtofl@val+2)^0,c
  4387  0031C8  6A1A               	clrf	(___xxtofl@val+3)^0,c
  4388  0031CA  0E00               	movlw	0
  4389  0031CC  ECE0  F016         	call	___xxtofl
  4390  0031D0  C017  F029         	movff	?___xxtofl,___fldiv@a
  4391  0031D4  C018  F02A         	movff	?___xxtofl+1,___fldiv@a+1
  4392  0031D8  C019  F02B         	movff	?___xxtofl+2,___fldiv@a+2
  4393  0031DC  C01A  F02C         	movff	?___xxtofl+3,___fldiv@a+3
  4394  0031E0  ECC8  F00F         	call	___fldiv	;wreg free
  4395  0031E4  EE20 F004          	lfsr	2,4
  4396  0031E8  5040               	movf	colourcards_normaliseRGBC@rel^0,w,c
  4397  0031EA  26D9               	addwf	fsr2l,f,c
  4398  0031EC  5041               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
  4399  0031EE  22DA               	addwfc	fsr2h,f,c
  4400  0031F0  C025  FFDE         	movff	?___fldiv,postinc2
  4401  0031F4  C026  FFDE         	movff	?___fldiv+1,postinc2
  4402  0031F8  C027  FFDE         	movff	?___fldiv+2,postinc2
  4403  0031FC  C028  FFDE         	movff	?___fldiv+3,postinc2
  4404  003200                     
  4405                           ;colour_cards.c: 215:     rel->B = (float)B/(float)C;
  4406  003200  C046  F017         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
  4407  003204  C047  F018         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
  4408  003208  6A19               	clrf	(___xxtofl@val+2)^0,c
  4409  00320A  6A1A               	clrf	(___xxtofl@val+3)^0,c
  4410  00320C  0E00               	movlw	0
  4411  00320E  ECE0  F016         	call	___xxtofl
  4412  003212  C017  F025         	movff	?___xxtofl,___fldiv@b
  4413  003216  C018  F026         	movff	?___xxtofl+1,___fldiv@b+1
  4414  00321A  C019  F027         	movff	?___xxtofl+2,___fldiv@b+2
  4415  00321E  C01A  F028         	movff	?___xxtofl+3,___fldiv@b+3
  4416  003222  C048  F017         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4417  003226  C049  F018         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4418  00322A  6A19               	clrf	(___xxtofl@val+2)^0,c
  4419  00322C  6A1A               	clrf	(___xxtofl@val+3)^0,c
  4420  00322E  0E00               	movlw	0
  4421  003230  ECE0  F016         	call	___xxtofl
  4422  003234  C017  F029         	movff	?___xxtofl,___fldiv@a
  4423  003238  C018  F02A         	movff	?___xxtofl+1,___fldiv@a+1
  4424  00323C  C019  F02B         	movff	?___xxtofl+2,___fldiv@a+2
  4425  003240  C01A  F02C         	movff	?___xxtofl+3,___fldiv@a+3
  4426  003244  ECC8  F00F         	call	___fldiv	;wreg free
  4427  003248  EE20 F008          	lfsr	2,8
  4428  00324C  5040               	movf	colourcards_normaliseRGBC@rel^0,w,c
  4429  00324E  26D9               	addwf	fsr2l,f,c
  4430  003250  5041               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
  4431  003252  22DA               	addwfc	fsr2h,f,c
  4432  003254  C025  FFDE         	movff	?___fldiv,postinc2
  4433  003258  C026  FFDE         	movff	?___fldiv+1,postinc2
  4434  00325C  C027  FFDE         	movff	?___fldiv+2,postinc2
  4435  003260  C028  FFDE         	movff	?___fldiv+3,postinc2
  4436  003264  0012               	return		;funcret
  4437  003266                     __end_of_colourcards_normaliseRGBC:
  4438                           	callstack 0
  4439                           
  4440 ;; *************** function ___fldiv *****************
  4441 ;; Defined at:
  4442 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  b               4   36[COMRAM] void 
  4445 ;;  a               4   40[COMRAM] void 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  grs             4   55[COMRAM] unsigned long 
  4448 ;;  rem             4   48[COMRAM] unsigned long 
  4449 ;;  new_exp         2   53[COMRAM] short 
  4450 ;;  aexp            1   60[COMRAM] unsigned char 
  4451 ;;  bexp            1   59[COMRAM] unsigned char 
  4452 ;;  sign            1   52[COMRAM] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  4   36[COMRAM] unsigned char 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4462 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4463 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4464 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4465 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4466 ;;Total ram usage:       25 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; Hardware stack levels required when called: 7
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_colourcards_normaliseRGBC
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text26
  4477  001F90                     __ptext26:
  4478                           	callstack 0
  4479  001F90                     ___fldiv:
  4480                           	callstack 21
  4481  001F90  5028               	movf	(___fldiv@b+3)^0,w,c
  4482  001F92  0B80               	andlw	128
  4483  001F94  6E35               	movwf	___fldiv@sign^0,c
  4484  001F96  5028               	movf	(___fldiv@b+3)^0,w,c
  4485  001F98  2428               	addwf	(___fldiv@b+3)^0,w,c
  4486  001F9A  6E3C               	movwf	___fldiv@bexp^0,c
  4487  001F9C  AE27               	btfss	(___fldiv@b+2)^0,7,c
  4488  001F9E  EFD3  F00F         	goto	u3601
  4489  001FA2  EFD5  F00F         	goto	u3600
  4490  001FA6                     u3601:
  4491  001FA6  EFD6  F00F         	goto	l3755
  4492  001FAA                     u3600:
  4493  001FAA  803C               	bsf	___fldiv@bexp^0,0,c
  4494  001FAC                     l3755:
  4495  001FAC  503C               	movf	___fldiv@bexp^0,w,c
  4496  001FAE  B4D8               	btfsc	status,2,c
  4497  001FB0  EFDC  F00F         	goto	u3611
  4498  001FB4  EFDE  F00F         	goto	u3610
  4499  001FB8                     u3611:
  4500  001FB8  EFF3  F00F         	goto	l3765
  4501  001FBC                     u3610:
  4502  001FBC  283C               	incf	___fldiv@bexp^0,w,c
  4503  001FBE  A4D8               	btfss	status,2,c
  4504  001FC0  EFE4  F00F         	goto	u3621
  4505  001FC4  EFE6  F00F         	goto	u3620
  4506  001FC8                     u3621:
  4507  001FC8  EFEE  F00F         	goto	l3761
  4508  001FCC                     u3620:
  4509  001FCC  0E00               	movlw	0
  4510  001FCE  6E25               	movwf	___fldiv@b^0,c
  4511  001FD0  0E00               	movlw	0
  4512  001FD2  6E26               	movwf	(___fldiv@b+1)^0,c
  4513  001FD4  0E00               	movlw	0
  4514  001FD6  6E27               	movwf	(___fldiv@b+2)^0,c
  4515  001FD8  0E00               	movlw	0
  4516  001FDA  6E28               	movwf	(___fldiv@b+3)^0,c
  4517  001FDC                     l3761:
  4518  001FDC  8E27               	bsf	(___fldiv@b+2)^0,7,c
  4519  001FDE  0E00               	movlw	0
  4520  001FE0  6E28               	movwf	(___fldiv@b+3)^0,c
  4521  001FE2  EFFB  F00F         	goto	l3767
  4522  001FE6                     l3765:
  4523  001FE6  0E00               	movlw	0
  4524  001FE8  6E25               	movwf	___fldiv@b^0,c
  4525  001FEA  0E00               	movlw	0
  4526  001FEC  6E26               	movwf	(___fldiv@b+1)^0,c
  4527  001FEE  0E00               	movlw	0
  4528  001FF0  6E27               	movwf	(___fldiv@b+2)^0,c
  4529  001FF2  0E00               	movlw	0
  4530  001FF4  6E28               	movwf	(___fldiv@b+3)^0,c
  4531  001FF6                     l3767:
  4532  001FF6  502C               	movf	(___fldiv@a+3)^0,w,c
  4533  001FF8  0B80               	andlw	128
  4534  001FFA  1A35               	xorwf	___fldiv@sign^0,f,c
  4535  001FFC  502C               	movf	(___fldiv@a+3)^0,w,c
  4536  001FFE  242C               	addwf	(___fldiv@a+3)^0,w,c
  4537  002000  6E3D               	movwf	___fldiv@aexp^0,c
  4538  002002  AE2B               	btfss	(___fldiv@a+2)^0,7,c
  4539  002004  EF06  F010         	goto	u3631
  4540  002008  EF08  F010         	goto	u3630
  4541  00200C                     u3631:
  4542  00200C  EF09  F010         	goto	l3775
  4543  002010                     u3630:
  4544  002010  803D               	bsf	___fldiv@aexp^0,0,c
  4545  002012                     l3775:
  4546  002012  503D               	movf	___fldiv@aexp^0,w,c
  4547  002014  B4D8               	btfsc	status,2,c
  4548  002016  EF0F  F010         	goto	u3641
  4549  00201A  EF11  F010         	goto	u3640
  4550  00201E                     u3641:
  4551  00201E  EF26  F010         	goto	l3785
  4552  002022                     u3640:
  4553  002022  283D               	incf	___fldiv@aexp^0,w,c
  4554  002024  A4D8               	btfss	status,2,c
  4555  002026  EF17  F010         	goto	u3651
  4556  00202A  EF19  F010         	goto	u3650
  4557  00202E                     u3651:
  4558  00202E  EF21  F010         	goto	l3781
  4559  002032                     u3650:
  4560  002032  0E00               	movlw	0
  4561  002034  6E29               	movwf	___fldiv@a^0,c
  4562  002036  0E00               	movlw	0
  4563  002038  6E2A               	movwf	(___fldiv@a+1)^0,c
  4564  00203A  0E00               	movlw	0
  4565  00203C  6E2B               	movwf	(___fldiv@a+2)^0,c
  4566  00203E  0E00               	movlw	0
  4567  002040  6E2C               	movwf	(___fldiv@a+3)^0,c
  4568  002042                     l3781:
  4569  002042  8E2B               	bsf	(___fldiv@a+2)^0,7,c
  4570  002044  0E00               	movlw	0
  4571  002046  6E2C               	movwf	(___fldiv@a+3)^0,c
  4572  002048  EF2E  F010         	goto	l3787
  4573  00204C                     l3785:
  4574  00204C  0E00               	movlw	0
  4575  00204E  6E29               	movwf	___fldiv@a^0,c
  4576  002050  0E00               	movlw	0
  4577  002052  6E2A               	movwf	(___fldiv@a+1)^0,c
  4578  002054  0E00               	movlw	0
  4579  002056  6E2B               	movwf	(___fldiv@a+2)^0,c
  4580  002058  0E00               	movlw	0
  4581  00205A  6E2C               	movwf	(___fldiv@a+3)^0,c
  4582  00205C                     l3787:
  4583  00205C  5029               	movf	___fldiv@a^0,w,c
  4584  00205E  102A               	iorwf	(___fldiv@a+1)^0,w,c
  4585  002060  102B               	iorwf	(___fldiv@a+2)^0,w,c
  4586  002062  102C               	iorwf	(___fldiv@a+3)^0,w,c
  4587  002064  A4D8               	btfss	status,2,c
  4588  002066  EF37  F010         	goto	u3661
  4589  00206A  EF39  F010         	goto	u3660
  4590  00206E                     u3661:
  4591  00206E  EF51  F010         	goto	l3799
  4592  002072                     u3660:
  4593  002072  0E00               	movlw	0
  4594  002074  6E25               	movwf	___fldiv@b^0,c
  4595  002076  0E00               	movlw	0
  4596  002078  6E26               	movwf	(___fldiv@b+1)^0,c
  4597  00207A  0E00               	movlw	0
  4598  00207C  6E27               	movwf	(___fldiv@b+2)^0,c
  4599  00207E  0E00               	movlw	0
  4600  002080  6E28               	movwf	(___fldiv@b+3)^0,c
  4601  002082  0E80               	movlw	128
  4602  002084  1227               	iorwf	(___fldiv@b+2)^0,f,c
  4603  002086  0E7F               	movlw	127
  4604  002088  1228               	iorwf	(___fldiv@b+3)^0,f,c
  4605  00208A                     l3793:
  4606  00208A  5035               	movf	___fldiv@sign^0,w,c
  4607  00208C  1228               	iorwf	(___fldiv@b+3)^0,f,c
  4608  00208E  C025  F025         	movff	___fldiv@b,?___fldiv
  4609  002092  C026  F026         	movff	___fldiv@b+1,?___fldiv+1
  4610  002096  C027  F027         	movff	___fldiv@b+2,?___fldiv+2
  4611  00209A  C028  F028         	movff	___fldiv@b+3,?___fldiv+3
  4612  00209E  EF94  F011         	goto	l1325
  4613  0020A2                     l3799:
  4614  0020A2  503C               	movf	___fldiv@bexp^0,w,c
  4615  0020A4  A4D8               	btfss	status,2,c
  4616  0020A6  EF57  F010         	goto	u3671
  4617  0020AA  EF59  F010         	goto	u3670
  4618  0020AE                     u3671:
  4619  0020AE  EF63  F010         	goto	l3807
  4620  0020B2                     u3670:
  4621  0020B2  0E00               	movlw	0
  4622  0020B4  6E25               	movwf	?___fldiv^0,c
  4623  0020B6  0E00               	movlw	0
  4624  0020B8  6E26               	movwf	(?___fldiv+1)^0,c
  4625  0020BA  0E00               	movlw	0
  4626  0020BC  6E27               	movwf	(?___fldiv+2)^0,c
  4627  0020BE  0E00               	movlw	0
  4628  0020C0  6E28               	movwf	(?___fldiv+3)^0,c
  4629  0020C2  EF94  F011         	goto	l1325
  4630  0020C6                     l3807:
  4631  0020C6  503D               	movf	___fldiv@aexp^0,w,c
  4632  0020C8  C03C  F02D         	movff	___fldiv@bexp,??___fldiv
  4633  0020CC  6A2E               	clrf	(??___fldiv+1)^0,c
  4634  0020CE  5E2D               	subwf	??___fldiv^0,f,c
  4635  0020D0  0E00               	movlw	0
  4636  0020D2  5A2E               	subwfb	(??___fldiv+1)^0,f,c
  4637  0020D4  0E7F               	movlw	127
  4638  0020D6  242D               	addwf	??___fldiv^0,w,c
  4639  0020D8  6E36               	movwf	___fldiv@new_exp^0,c
  4640  0020DA  0E00               	movlw	0
  4641  0020DC  202E               	addwfc	(??___fldiv+1)^0,w,c
  4642  0020DE  6E37               	movwf	(___fldiv@new_exp+1)^0,c
  4643  0020E0  C025  F031         	movff	___fldiv@b,___fldiv@rem
  4644  0020E4  C026  F032         	movff	___fldiv@b+1,___fldiv@rem+1
  4645  0020E8  C027  F033         	movff	___fldiv@b+2,___fldiv@rem+2
  4646  0020EC  C028  F034         	movff	___fldiv@b+3,___fldiv@rem+3
  4647  0020F0  0E00               	movlw	0
  4648  0020F2  6E25               	movwf	___fldiv@b^0,c
  4649  0020F4  0E00               	movlw	0
  4650  0020F6  6E26               	movwf	(___fldiv@b+1)^0,c
  4651  0020F8  0E00               	movlw	0
  4652  0020FA  6E27               	movwf	(___fldiv@b+2)^0,c
  4653  0020FC  0E00               	movlw	0
  4654  0020FE  6E28               	movwf	(___fldiv@b+3)^0,c
  4655  002100  0E00               	movlw	0
  4656  002102  6E38               	movwf	___fldiv@grs^0,c
  4657  002104  0E00               	movlw	0
  4658  002106  6E39               	movwf	(___fldiv@grs+1)^0,c
  4659  002108  0E00               	movlw	0
  4660  00210A  6E3A               	movwf	(___fldiv@grs+2)^0,c
  4661  00210C  0E00               	movlw	0
  4662  00210E  6E3B               	movwf	(___fldiv@grs+3)^0,c
  4663  002110  0E00               	movlw	0
  4664  002112  6E3D               	movwf	___fldiv@aexp^0,c
  4665  002114  EFC4  F010         	goto	l1327
  4666  002118                     l3817:
  4667  002118  503D               	movf	___fldiv@aexp^0,w,c
  4668  00211A  B4D8               	btfsc	status,2,c
  4669  00211C  EF92  F010         	goto	u3681
  4670  002120  EF94  F010         	goto	u3680
  4671  002124                     u3681:
  4672  002124  EFAB  F010         	goto	l3825
  4673  002128                     u3680:
  4674  002128  90D8               	bcf	status,0,c
  4675  00212A  3631               	rlcf	___fldiv@rem^0,f,c
  4676  00212C  3632               	rlcf	(___fldiv@rem+1)^0,f,c
  4677  00212E  3633               	rlcf	(___fldiv@rem+2)^0,f,c
  4678  002130  3634               	rlcf	(___fldiv@rem+3)^0,f,c
  4679  002132  90D8               	bcf	status,0,c
  4680  002134  3625               	rlcf	___fldiv@b^0,f,c
  4681  002136  3626               	rlcf	(___fldiv@b+1)^0,f,c
  4682  002138  3627               	rlcf	(___fldiv@b+2)^0,f,c
  4683  00213A  3628               	rlcf	(___fldiv@b+3)^0,f,c
  4684  00213C  AE3B               	btfss	(___fldiv@grs+3)^0,7,c
  4685  00213E  EFA3  F010         	goto	u3691
  4686  002142  EFA5  F010         	goto	u3690
  4687  002146                     u3691:
  4688  002146  EFA6  F010         	goto	l1330
  4689  00214A                     u3690:
  4690  00214A  8025               	bsf	___fldiv@b^0,0,c
  4691  00214C                     l1330:
  4692  00214C  90D8               	bcf	status,0,c
  4693  00214E  3638               	rlcf	___fldiv@grs^0,f,c
  4694  002150  3639               	rlcf	(___fldiv@grs+1)^0,f,c
  4695  002152  363A               	rlcf	(___fldiv@grs+2)^0,f,c
  4696  002154  363B               	rlcf	(___fldiv@grs+3)^0,f,c
  4697  002156                     l3825:
  4698  002156  5029               	movf	___fldiv@a^0,w,c
  4699  002158  5C31               	subwf	___fldiv@rem^0,w,c
  4700  00215A  502A               	movf	(___fldiv@a+1)^0,w,c
  4701  00215C  5832               	subwfb	(___fldiv@rem+1)^0,w,c
  4702  00215E  502B               	movf	(___fldiv@a+2)^0,w,c
  4703  002160  5833               	subwfb	(___fldiv@rem+2)^0,w,c
  4704  002162  502C               	movf	(___fldiv@a+3)^0,w,c
  4705  002164  5834               	subwfb	(___fldiv@rem+3)^0,w,c
  4706  002166  A0D8               	btfss	status,0,c
  4707  002168  EFB8  F010         	goto	u3701
  4708  00216C  EFBA  F010         	goto	u3700
  4709  002170                     u3701:
  4710  002170  EFC3  F010         	goto	l3831
  4711  002174                     u3700:
  4712  002174  8C3B               	bsf	(___fldiv@grs+3)^0,6,c
  4713  002176  5029               	movf	___fldiv@a^0,w,c
  4714  002178  5E31               	subwf	___fldiv@rem^0,f,c
  4715  00217A  502A               	movf	(___fldiv@a+1)^0,w,c
  4716  00217C  5A32               	subwfb	(___fldiv@rem+1)^0,f,c
  4717  00217E  502B               	movf	(___fldiv@a+2)^0,w,c
  4718  002180  5A33               	subwfb	(___fldiv@rem+2)^0,f,c
  4719  002182  502C               	movf	(___fldiv@a+3)^0,w,c
  4720  002184  5A34               	subwfb	(___fldiv@rem+3)^0,f,c
  4721  002186                     l3831:
  4722  002186  2A3D               	incf	___fldiv@aexp^0,f,c
  4723  002188                     l1327:
  4724  002188  0E19               	movlw	25
  4725  00218A  643D               	cpfsgt	___fldiv@aexp^0,c
  4726  00218C  EFCA  F010         	goto	u3711
  4727  002190  EFCC  F010         	goto	u3710
  4728  002194                     u3711:
  4729  002194  EF8C  F010         	goto	l3817
  4730  002198                     u3710:
  4731  002198  5031               	movf	___fldiv@rem^0,w,c
  4732  00219A  1032               	iorwf	(___fldiv@rem+1)^0,w,c
  4733  00219C  1033               	iorwf	(___fldiv@rem+2)^0,w,c
  4734  00219E  1034               	iorwf	(___fldiv@rem+3)^0,w,c
  4735  0021A0  B4D8               	btfsc	status,2,c
  4736  0021A2  EFD5  F010         	goto	u3721
  4737  0021A6  EFD7  F010         	goto	u3720
  4738  0021AA                     u3721:
  4739  0021AA  EFEF  F010         	goto	l3843
  4740  0021AE                     u3720:
  4741  0021AE  8038               	bsf	___fldiv@grs^0,0,c
  4742  0021B0  EFEF  F010         	goto	l3843
  4743  0021B4                     l3837:
  4744  0021B4  90D8               	bcf	status,0,c
  4745  0021B6  3625               	rlcf	___fldiv@b^0,f,c
  4746  0021B8  3626               	rlcf	(___fldiv@b+1)^0,f,c
  4747  0021BA  3627               	rlcf	(___fldiv@b+2)^0,f,c
  4748  0021BC  3628               	rlcf	(___fldiv@b+3)^0,f,c
  4749  0021BE  AE3B               	btfss	(___fldiv@grs+3)^0,7,c
  4750  0021C0  EFE4  F010         	goto	u3731
  4751  0021C4  EFE6  F010         	goto	u3730
  4752  0021C8                     u3731:
  4753  0021C8  EFE7  F010         	goto	l1336
  4754  0021CC                     u3730:
  4755  0021CC  8025               	bsf	___fldiv@b^0,0,c
  4756  0021CE                     l1336:
  4757  0021CE  90D8               	bcf	status,0,c
  4758  0021D0  3638               	rlcf	___fldiv@grs^0,f,c
  4759  0021D2  3639               	rlcf	(___fldiv@grs+1)^0,f,c
  4760  0021D4  363A               	rlcf	(___fldiv@grs+2)^0,f,c
  4761  0021D6  363B               	rlcf	(___fldiv@grs+3)^0,f,c
  4762  0021D8  0636               	decf	___fldiv@new_exp^0,f,c
  4763  0021DA  A0D8               	btfss	status,0,c
  4764  0021DC  0637               	decf	(___fldiv@new_exp+1)^0,f,c
  4765  0021DE                     l3843:
  4766  0021DE  AE27               	btfss	(___fldiv@b+2)^0,7,c
  4767  0021E0  EFF4  F010         	goto	u3741
  4768  0021E4  EFF6  F010         	goto	u3740
  4769  0021E8                     u3741:
  4770  0021E8  EFDA  F010         	goto	l3837
  4771  0021EC                     u3740:
  4772  0021EC  0E00               	movlw	0
  4773  0021EE  6E3D               	movwf	___fldiv@aexp^0,c
  4774  0021F0  AE3B               	btfss	(___fldiv@grs+3)^0,7,c
  4775  0021F2  EFFD  F010         	goto	u3751
  4776  0021F6  EFFF  F010         	goto	u3750
  4777  0021FA                     u3751:
  4778  0021FA  EF23  F011         	goto	l1338
  4779  0021FE                     u3750:
  4780  0021FE  0EFF               	movlw	255
  4781  002200  1438               	andwf	___fldiv@grs^0,w,c
  4782  002202  6E2D               	movwf	??___fldiv^0,c
  4783  002204  0EFF               	movlw	255
  4784  002206  1439               	andwf	(___fldiv@grs+1)^0,w,c
  4785  002208  6E2E               	movwf	(??___fldiv+1)^0,c
  4786  00220A  0EFF               	movlw	255
  4787  00220C  143A               	andwf	(___fldiv@grs+2)^0,w,c
  4788  00220E  6E2F               	movwf	(??___fldiv+2)^0,c
  4789  002210  0E7F               	movlw	127
  4790  002212  143B               	andwf	(___fldiv@grs+3)^0,w,c
  4791  002214  6E30               	movwf	(??___fldiv+3)^0,c
  4792  002216  502D               	movf	??___fldiv^0,w,c
  4793  002218  102E               	iorwf	(??___fldiv+1)^0,w,c
  4794  00221A  102F               	iorwf	(??___fldiv+2)^0,w,c
  4795  00221C  1030               	iorwf	(??___fldiv+3)^0,w,c
  4796  00221E  B4D8               	btfsc	status,2,c
  4797  002220  EF14  F011         	goto	u3761
  4798  002224  EF16  F011         	goto	u3760
  4799  002228                     u3761:
  4800  002228  EF1A  F011         	goto	l1339
  4801  00222C                     u3760:
  4802  00222C                     l3851:
  4803  00222C  0E01               	movlw	1
  4804  00222E  6E3D               	movwf	___fldiv@aexp^0,c
  4805  002230  EF23  F011         	goto	l1338
  4806  002234                     l1339:
  4807  002234  A025               	btfss	___fldiv@b^0,0,c
  4808  002236  EF1F  F011         	goto	u3771
  4809  00223A  EF21  F011         	goto	u3770
  4810  00223E                     u3771:
  4811  00223E  EF23  F011         	goto	l1338
  4812  002242                     u3770:
  4813  002242  EF16  F011         	goto	l3851
  4814  002246                     l1338:
  4815  002246  503D               	movf	___fldiv@aexp^0,w,c
  4816  002248  B4D8               	btfsc	status,2,c
  4817  00224A  EF29  F011         	goto	u3781
  4818  00224E  EF2B  F011         	goto	u3780
  4819  002252                     u3781:
  4820  002252  EF4F  F011         	goto	l3863
  4821  002256                     u3780:
  4822  002256  0E01               	movlw	1
  4823  002258  2625               	addwf	___fldiv@b^0,f,c
  4824  00225A  0E00               	movlw	0
  4825  00225C  2226               	addwfc	(___fldiv@b+1)^0,f,c
  4826  00225E  2227               	addwfc	(___fldiv@b+2)^0,f,c
  4827  002260  2228               	addwfc	(___fldiv@b+3)^0,f,c
  4828  002262  A028               	btfss	(___fldiv@b+3)^0,0,c
  4829  002264  EF36  F011         	goto	u3791
  4830  002268  EF38  F011         	goto	u3790
  4831  00226C                     u3791:
  4832  00226C  EF4F  F011         	goto	l3863
  4833  002270                     u3790:
  4834  002270  C025  F02D         	movff	___fldiv@b,??___fldiv
  4835  002274  C026  F02E         	movff	___fldiv@b+1,??___fldiv+1
  4836  002278  C027  F02F         	movff	___fldiv@b+2,??___fldiv+2
  4837  00227C  C028  F030         	movff	___fldiv@b+3,??___fldiv+3
  4838  002280  3430               	rlcf	(??___fldiv+3)^0,w,c
  4839  002282  3230               	rrcf	(??___fldiv+3)^0,f,c
  4840  002284  322F               	rrcf	(??___fldiv+2)^0,f,c
  4841  002286  322E               	rrcf	(??___fldiv+1)^0,f,c
  4842  002288  322D               	rrcf	??___fldiv^0,f,c
  4843  00228A  C02D  F025         	movff	??___fldiv,___fldiv@b
  4844  00228E  C02E  F026         	movff	??___fldiv+1,___fldiv@b+1
  4845  002292  C02F  F027         	movff	??___fldiv+2,___fldiv@b+2
  4846  002296  C030  F028         	movff	??___fldiv+3,___fldiv@b+3
  4847  00229A  4A36               	infsnz	___fldiv@new_exp^0,f,c
  4848  00229C  2A37               	incf	(___fldiv@new_exp+1)^0,f,c
  4849  00229E                     l3863:
  4850  00229E  BE37               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4851  0022A0  EF5A  F011         	goto	u3801
  4852  0022A4  5037               	movf	(___fldiv@new_exp+1)^0,w,c
  4853  0022A6  E108               	bnz	u3800
  4854  0022A8  2836               	incf	___fldiv@new_exp^0,w,c
  4855  0022AA  A0D8               	btfss	status,0,c
  4856  0022AC  EF5A  F011         	goto	u3801
  4857  0022B0  EF5C  F011         	goto	u3800
  4858  0022B4                     u3801:
  4859  0022B4  EF67  F011         	goto	l3867
  4860  0022B8                     u3800:
  4861  0022B8  0E00               	movlw	0
  4862  0022BA  6E37               	movwf	(___fldiv@new_exp+1)^0,c
  4863  0022BC  6836               	setf	___fldiv@new_exp^0,c
  4864  0022BE  0E00               	movlw	0
  4865  0022C0  6E25               	movwf	___fldiv@b^0,c
  4866  0022C2  0E00               	movlw	0
  4867  0022C4  6E26               	movwf	(___fldiv@b+1)^0,c
  4868  0022C6  0E00               	movlw	0
  4869  0022C8  6E27               	movwf	(___fldiv@b+2)^0,c
  4870  0022CA  0E00               	movlw	0
  4871  0022CC  6E28               	movwf	(___fldiv@b+3)^0,c
  4872  0022CE                     l3867:
  4873  0022CE  BE37               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4874  0022D0  EF74  F011         	goto	u3810
  4875  0022D4  5037               	movf	(___fldiv@new_exp+1)^0,w,c
  4876  0022D6  E106               	bnz	u3811
  4877  0022D8  0436               	decf	___fldiv@new_exp^0,w,c
  4878  0022DA  B0D8               	btfsc	status,0,c
  4879  0022DC  EF72  F011         	goto	u3811
  4880  0022E0  EF74  F011         	goto	u3810
  4881  0022E4                     u3811:
  4882  0022E4  EF82  F011         	goto	l3871
  4883  0022E8                     u3810:
  4884  0022E8  0E00               	movlw	0
  4885  0022EA  6E37               	movwf	(___fldiv@new_exp+1)^0,c
  4886  0022EC  0E00               	movlw	0
  4887  0022EE  6E36               	movwf	___fldiv@new_exp^0,c
  4888  0022F0  0E00               	movlw	0
  4889  0022F2  6E25               	movwf	___fldiv@b^0,c
  4890  0022F4  0E00               	movlw	0
  4891  0022F6  6E26               	movwf	(___fldiv@b+1)^0,c
  4892  0022F8  0E00               	movlw	0
  4893  0022FA  6E27               	movwf	(___fldiv@b+2)^0,c
  4894  0022FC  0E00               	movlw	0
  4895  0022FE  6E28               	movwf	(___fldiv@b+3)^0,c
  4896  002300  0E00               	movlw	0
  4897  002302  6E35               	movwf	___fldiv@sign^0,c
  4898  002304                     l3871:
  4899  002304  C036  F03C         	movff	___fldiv@new_exp,___fldiv@bexp
  4900  002308  A03C               	btfss	___fldiv@bexp^0,0,c
  4901  00230A  EF89  F011         	goto	u3821
  4902  00230E  EF8B  F011         	goto	u3820
  4903  002312                     u3821:
  4904  002312  EF8E  F011         	goto	l3877
  4905  002316                     u3820:
  4906  002316  8E27               	bsf	(___fldiv@b+2)^0,7,c
  4907  002318  EF8F  F011         	goto	l3879
  4908  00231C                     l3877:
  4909  00231C  9E27               	bcf	(___fldiv@b+2)^0,7,c
  4910  00231E                     l3879:
  4911  00231E  90D8               	bcf	status,0,c
  4912  002320  303C               	rrcf	___fldiv@bexp^0,w,c
  4913  002322  6E28               	movwf	(___fldiv@b+3)^0,c
  4914  002324  EF45  F010         	goto	l3793
  4915  002328                     l1325:
  4916  002328  0012               	return		;funcret
  4917  00232A                     __end_of___fldiv:
  4918                           	callstack 0
  4919                           
  4920 ;; *************** function _clearance *****************
  4921 ;; Defined at:
  4922 ;;		line 122 in file "DC_motors.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  mL              2   40[COMRAM] PTR struct .
  4925 ;;		 -> main@motorL(9), 
  4926 ;;  mR              2   42[COMRAM] PTR struct .
  4927 ;;		 -> main@motorR(9), 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4942 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4943 ;;Total ram usage:        6 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 10
  4946 ;; This function calls:
  4947 ;;		_reverse
  4948 ;;		_stop
  4949 ;; This function is called by:
  4950 ;;		_colourcards_readRGBC
  4951 ;;		_DCmotors_testing
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text27
  4956  003874                     __ptext27:
  4957                           	callstack 0
  4958  003874                     _clearance:
  4959                           	callstack 19
  4960  003874                     
  4961                           ;DC_motors.c: 123:     LATDbits.LATD3 = 0;
  4962  003874  967C               	bcf	124,3,c	;volatile
  4963  003876                     
  4964                           ;DC_motors.c: 124:     reverse(mL, mR);
  4965  003876  C029  F023         	movff	clearance@mL,reverse@mL
  4966  00387A  C02A  F024         	movff	clearance@mL+1,reverse@mL+1
  4967  00387E  C02B  F025         	movff	clearance@mR,reverse@mR
  4968  003882  C02C  F026         	movff	clearance@mR+1,reverse@mR+1
  4969  003886  EC09  F01B         	call	_reverse	;wreg free
  4970  00388A                     
  4971                           ;DC_motors.c: 125:     _delay((unsigned long)((350)*(64000000/4000.0)));
  4972  00388A  0E1D               	movlw	29
  4973  00388C  6E2E               	movwf	(??_clearance+1)^0,c
  4974  00388E  0E69               	movlw	105
  4975  003890  6E2D               	movwf	??_clearance^0,c
  4976  003892  0EA5               	movlw	165
  4977  003894                     u5947:
  4978  003894  2EE8               	decfsz	wreg,f,c
  4979  003896  D7FE               	bra	u5947
  4980  003898  2E2D               	decfsz	??_clearance^0,f,c
  4981  00389A  D7FC               	bra	u5947
  4982  00389C  2E2E               	decfsz	(??_clearance+1)^0,f,c
  4983  00389E  D7FA               	bra	u5947
  4984  0038A0  F000               	nop	
  4985  0038A2                     
  4986                           ;DC_motors.c: 126:     stop(mL, mR);
  4987  0038A2  C029  F023         	movff	clearance@mL,stop@mL
  4988  0038A6  C02A  F024         	movff	clearance@mL+1,stop@mL+1
  4989  0038AA  C02B  F025         	movff	clearance@mR,stop@mR
  4990  0038AE  C02C  F026         	movff	clearance@mR+1,stop@mR+1
  4991  0038B2  EC50  F01B         	call	_stop	;wreg free
  4992                           
  4993                           ;DC_motors.c: 127:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  4994  0038B6  0E52               	movlw	82
  4995  0038B8  6E2E               	movwf	(??_clearance+1)^0,c
  4996  0038BA  0E2B               	movlw	43
  4997  0038BC  6E2D               	movwf	??_clearance^0,c
  4998  0038BE  0E00               	movlw	0
  4999  0038C0                     u5957:
  5000  0038C0  2EE8               	decfsz	wreg,f,c
  5001  0038C2  D7FE               	bra	u5957
  5002  0038C4  2E2D               	decfsz	??_clearance^0,f,c
  5003  0038C6  D7FC               	bra	u5957
  5004  0038C8  2E2E               	decfsz	(??_clearance+1)^0,f,c
  5005  0038CA  D7FA               	bra	u5957
  5006  0038CC  D000               	nop2	
  5007  0038CE                     
  5008                           ;DC_motors.c: 128:     LATDbits.LATD3 = 0;
  5009  0038CE  967C               	bcf	124,3,c	;volatile
  5010  0038D0  0012               	return		;funcret
  5011  0038D2                     __end_of_clearance:
  5012                           	callstack 0
  5013                           
  5014 ;; *************** function _reverse *****************
  5015 ;; Defined at:
  5016 ;;		line 102 in file "DC_motors.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  mL              2   34[COMRAM] PTR struct .
  5019 ;;		 -> main@motorL(9), 
  5020 ;;  mR              2   36[COMRAM] PTR struct .
  5021 ;;		 -> main@motorR(9), 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;		None
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5036 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;Total ram usage:        5 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; Hardware stack levels required when called: 9
  5040 ;; This function calls:
  5041 ;;		_DCmotors_setPWM
  5042 ;; This function is called by:
  5043 ;;		_main
  5044 ;;		_colourcards_readRGBC
  5045 ;;		_clearance
  5046 ;;		_DCmotors_testing
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text28
  5051  003612                     __ptext28:
  5052                           	callstack 0
  5053  003612                     _reverse:
  5054                           	callstack 21
  5055  003612                     
  5056                           ;DC_motors.c: 104:     mL->direction = 0;
  5057  003612  EE20 F001          	lfsr	2,1
  5058  003616  5023               	movf	reverse@mL^0,w,c
  5059  003618  26D9               	addwf	fsr2l,f,c
  5060  00361A  5024               	movf	(reverse@mL+1)^0,w,c
  5061  00361C  22DA               	addwfc	fsr2h,f,c
  5062  00361E  0E00               	movlw	0
  5063  003620  6EDF               	movwf	indf2,c
  5064                           
  5065                           ;DC_motors.c: 105:     mR->direction = 0;
  5066  003622  EE20 F001          	lfsr	2,1
  5067  003626  5025               	movf	reverse@mR^0,w,c
  5068  003628  26D9               	addwf	fsr2l,f,c
  5069  00362A  5026               	movf	(reverse@mR+1)^0,w,c
  5070  00362C  22DA               	addwfc	fsr2h,f,c
  5071  00362E  0E00               	movlw	0
  5072  003630  6EDF               	movwf	indf2,c
  5073                           
  5074                           ;DC_motors.c: 108:     while((mL->power < 50) && (mR->power < 50)){
  5075  003632  EF37  F01B         	goto	l3661
  5076  003636                     l3653:
  5077                           
  5078                           ;DC_motors.c: 109:         mL->power += 10;
  5079  003636  C023  FFD9         	movff	reverse@mL,fsr2l
  5080  00363A  C024  FFDA         	movff	reverse@mL+1,fsr2h
  5081  00363E  0E0A               	movlw	10
  5082  003640  26DF               	addwf	indf2,f,c
  5083                           
  5084                           ;DC_motors.c: 110:         mR->power += 10;
  5085  003642  C025  FFD9         	movff	reverse@mR,fsr2l
  5086  003646  C026  FFDA         	movff	reverse@mR+1,fsr2h
  5087  00364A  0E0A               	movlw	10
  5088  00364C  26DF               	addwf	indf2,f,c
  5089  00364E                     
  5090                           ;DC_motors.c: 112:         DCmotors_setPWM(mL);
  5091  00364E  C023  F018         	movff	reverse@mL,DCmotors_setPWM@m
  5092  003652  C024  F019         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  5093  003656  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  5094  00365A                     
  5095                           ;DC_motors.c: 113:         DCmotors_setPWM(mR);
  5096  00365A  C025  F018         	movff	reverse@mR,DCmotors_setPWM@m
  5097  00365E  C026  F019         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  5098  003662  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  5099  003666                     
  5100                           ;DC_motors.c: 114:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  5101  003666  0EA0               	movlw	160
  5102  003668                     u5967:
  5103  003668  D000               	nop2	
  5104  00366A  2EE8               	decfsz	wreg,f,c
  5105  00366C  D7FD               	bra	u5967
  5106  00366E                     l3661:
  5107                           
  5108                           ;DC_motors.c: 108:     while((mL->power < 50) && (mR->power < 50)){
  5109  00366E  C023  FFD9         	movff	reverse@mL,fsr2l
  5110  003672  C024  FFDA         	movff	reverse@mL+1,fsr2h
  5111  003676  0E32               	movlw	50
  5112  003678  60DF               	cpfslt	indf2,c
  5113  00367A  EF41  F01B         	goto	u3481
  5114  00367E  EF43  F01B         	goto	u3480
  5115  003682                     u3481:
  5116  003682  EF4F  F01B         	goto	l585
  5117  003686                     u3480:
  5118  003686  C025  FFD9         	movff	reverse@mR,fsr2l
  5119  00368A  C026  FFDA         	movff	reverse@mR+1,fsr2h
  5120  00368E  0E31               	movlw	49
  5121  003690  64DF               	cpfsgt	indf2,c
  5122  003692  EF4D  F01B         	goto	u3491
  5123  003696  EF4F  F01B         	goto	u3490
  5124  00369A                     u3491:
  5125  00369A  EF1B  F01B         	goto	l3653
  5126  00369E                     u3490:
  5127  00369E                     l585:
  5128  00369E  0012               	return		;funcret
  5129  0036A0                     __end_of_reverse:
  5130                           	callstack 0
  5131                           
  5132 ;; *************** function _checkbatterylevel *****************
  5133 ;; Defined at:
  5134 ;;		line 72 in file "DC_motors.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  batterylevel    1   10[COMRAM] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5152 ;;Total ram usage:        1 bytes
  5153 ;; Hardware stack levels used: 1
  5154 ;; Hardware stack levels required when called: 8
  5155 ;; This function calls:
  5156 ;;		_ADC_getval
  5157 ;; This function is called by:
  5158 ;;		_main
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text29
  5163  003DAA                     __ptext29:
  5164                           	callstack 0
  5165  003DAA                     _checkbatterylevel:
  5166                           	callstack 22
  5167  003DAA                     
  5168                           ;DC_motors.c: 73:     unsigned char batterylevel;;DC_motors.c: 74:     batterylevel = AD
      +                          C_getval();
  5169  003DAA  EC2C  F01F         	call	_ADC_getval	;wreg free
  5170  003DAE  6E0B               	movwf	checkbatterylevel@batterylevel^0,c
  5171  003DB0                     
  5172                           ;DC_motors.c: 75:     if (batterylevel<100) {LATDbits.LATD7 = 1;}
  5173  003DB0  0E64               	movlw	100
  5174  003DB2  600B               	cpfslt	checkbatterylevel@batterylevel^0,c
  5175  003DB4  EFDE  F01E         	goto	u4021
  5176  003DB8  EFE0  F01E         	goto	u4020
  5177  003DBC                     u4021:
  5178  003DBC  EFE3  F01E         	goto	l567
  5179  003DC0                     u4020:
  5180  003DC0  8E7C               	bsf	124,7,c	;volatile
  5181  003DC2  EFE4  F01E         	goto	l569
  5182  003DC6                     l567:
  5183  003DC6  9E7C               	bcf	124,7,c	;volatile
  5184  003DC8                     l569:
  5185  003DC8  0012               	return		;funcret
  5186  003DCA                     __end_of_checkbatterylevel:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function _ADC_getval *****************
  5190 ;; Defined at:
  5191 ;;		line 26 in file "ADC.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  tmpval          1    9[COMRAM] unsigned char 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      unsigned char 
  5198 ;; Registers used:
  5199 ;;		wreg, status,2
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;Total ram usage:        1 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 7
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_checkbatterylevel
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text30
  5220  003E58                     __ptext30:
  5221                           	callstack 0
  5222  003E58                     _ADC_getval:
  5223                           	callstack 22
  5224  003E58                     
  5225                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  5226  003E58  8060               	bsf	96,0,c	;volatile
  5227  003E5A                     l361:
  5228  003E5A  B060               	btfsc	96,0,c	;volatile
  5229  003E5C  EF32  F01F         	goto	u3901
  5230  003E60  EF34  F01F         	goto	u3900
  5231  003E64                     u3901:
  5232  003E64  EF2D  F01F         	goto	l361
  5233  003E68                     u3900:
  5234  003E68                     
  5235                           ;ADC.c: 31:     tmpval = ADRESH;
  5236  003E68  CF64 F00A          	movff	3940,ADC_getval@tmpval	;volatile
  5237  003E6C                     
  5238                           ;ADC.c: 34:     return tmpval;
  5239  003E6C  500A               	movf	ADC_getval@tmpval^0,w,c
  5240  003E6E  0012               	return		;funcret
  5241  003E70                     __end_of_ADC_getval:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function _USART4_init *****************
  5245 ;; Defined at:
  5246 ;;		line 8 in file "serial_comm.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;Total ram usage:        0 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 7
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_main
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text31
  5275  003DCA                     __ptext31:
  5276                           	callstack 0
  5277  003DCA                     _USART4_init:
  5278                           	callstack 23
  5279  003DCA                     
  5280                           ;serial_comm.c: 9:     RC0PPS = 0x12;
  5281  003DCA  0E12               	movlw	18
  5282  003DCC  010E               	movlb	14	; () banked
  5283  003DCE  6F62               	movwf	98,b	;volatile
  5284                           
  5285                           ;serial_comm.c: 10:     RX4PPS = 0x11;
  5286  003DD0  0E11               	movlw	17
  5287  003DD2  6F15               	movwf	21,b	;volatile
  5288  003DD4                     
  5289                           ; BSR set to: 14
  5290                           ;serial_comm.c: 11:     TRISCbits.TRISC1 = 1;
  5291  003DD4  8283               	bsf	131,1,c	;volatile
  5292  003DD6                     
  5293                           ; BSR set to: 14
  5294                           ;serial_comm.c: 13:     BAUD4CONbits.BRG16 = 0;
  5295  003DD6  97E9               	bcf	233,3,b	;volatile
  5296  003DD8                     
  5297                           ; BSR set to: 14
  5298                           ;serial_comm.c: 14:     TX4STAbits.BRGH = 0;
  5299  003DD8  95E8               	bcf	232,2,b	;volatile
  5300                           
  5301                           ;serial_comm.c: 15:     SP4BRGL = 51;
  5302  003DDA  0E33               	movlw	51
  5303  003DDC  6FE5               	movwf	229,b	;volatile
  5304                           
  5305                           ;serial_comm.c: 16:     SP4BRGH = 0;
  5306  003DDE  0E00               	movlw	0
  5307  003DE0  6FE6               	movwf	230,b	;volatile
  5308  003DE2                     
  5309                           ; BSR set to: 14
  5310                           ;serial_comm.c: 18:     RC4STAbits.CREN = 1;
  5311  003DE2  89E7               	bsf	231,4,b	;volatile
  5312  003DE4                     
  5313                           ; BSR set to: 14
  5314                           ;serial_comm.c: 19:     TX4STAbits.TXEN = 1;
  5315  003DE4  8BE8               	bsf	232,5,b	;volatile
  5316  003DE6                     
  5317                           ; BSR set to: 14
  5318                           ;serial_comm.c: 20:     RC4STAbits.SPEN = 1;
  5319  003DE6  8FE7               	bsf	231,7,b	;volatile
  5320  003DE8                     
  5321                           ; BSR set to: 14
  5322  003DE8  0012               	return		;funcret
  5323  003DEA                     __end_of_USART4_init:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function _DCmotors_init *****************
  5327 ;; Defined at:
  5328 ;;		line 10 in file "DC_motors.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  PWMperiod       1    wreg     unsigned char 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  PWMperiod       1    9[COMRAM] unsigned char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;Total ram usage:        1 bytes
  5347 ;; Hardware stack levels used: 1
  5348 ;; Hardware stack levels required when called: 8
  5349 ;; This function calls:
  5350 ;;		_buggyLEDs_init
  5351 ;;		_clicker2LEDs_init
  5352 ;;		_clicker2buttons_init
  5353 ;; This function is called by:
  5354 ;;		_main
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text32
  5359  003A12                     __ptext32:
  5360                           	callstack 0
  5361  003A12                     _DCmotors_init:
  5362                           	callstack 22
  5363                           
  5364                           ; BSR set to: 14
  5365                           ;incstack = 0
  5366                           ;DCmotors_init@PWMperiod stored from wreg
  5367  003A12  6E0A               	movwf	DCmotors_init@PWMperiod^0,c
  5368  003A14                     
  5369                           ;DC_motors.c: 12:     T2CONbits.CKPS=0b100;
  5370  003A14  50BD               	movf	189,w,c	;volatile
  5371  003A16  0B8F               	andlw	-113
  5372  003A18  0940               	iorlw	64
  5373  003A1A  6EBD               	movwf	189,c	;volatile
  5374                           
  5375                           ;DC_motors.c: 13:     T2HLTbits.MODE=0b00000;
  5376  003A1C  0EE0               	movlw	-32
  5377  003A1E  16BE               	andwf	190,f,c	;volatile
  5378                           
  5379                           ;DC_motors.c: 14:     T2CLKCONbits.CS=0b0001;
  5380  003A20  50BF               	movf	191,w,c	;volatile
  5381  003A22  0BF0               	andlw	-16
  5382  003A24  0901               	iorlw	1
  5383  003A26  6EBF               	movwf	191,c	;volatile
  5384  003A28                     
  5385                           ;DC_motors.c: 17:     T2PR=PWMperiod;
  5386  003A28  C00A  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  5387  003A2C                     
  5388                           ;DC_motors.c: 18:     T2CONbits.ON=1;
  5389  003A2C  8EBD               	bsf	189,7,c	;volatile
  5390  003A2E                     
  5391                           ;DC_motors.c: 21:     TRISEbits.TRISE2=0;
  5392  003A2E  9485               	bcf	133,2,c	;volatile
  5393  003A30                     
  5394                           ;DC_motors.c: 22:     TRISEbits.TRISE4=0;
  5395  003A30  9885               	bcf	133,4,c	;volatile
  5396  003A32                     
  5397                           ;DC_motors.c: 23:     TRISCbits.TRISC7=0;
  5398  003A32  9E83               	bcf	131,7,c	;volatile
  5399  003A34                     
  5400                           ;DC_motors.c: 24:     TRISGbits.TRISG6=0;
  5401  003A34  9C87               	bcf	135,6,c	;volatile
  5402  003A36                     
  5403                           ;DC_motors.c: 26:     LATEbits.LATE2=0;
  5404  003A36  947D               	bcf	125,2,c	;volatile
  5405  003A38                     
  5406                           ;DC_motors.c: 27:     LATEbits.LATE4=0;
  5407  003A38  987D               	bcf	125,4,c	;volatile
  5408  003A3A                     
  5409                           ;DC_motors.c: 28:     LATCbits.LATC7=0;
  5410  003A3A  9E7B               	bcf	123,7,c	;volatile
  5411  003A3C                     
  5412                           ;DC_motors.c: 29:     LATGbits.LATG6=0;
  5413  003A3C  9C7F               	bcf	127,6,c	;volatile
  5414                           
  5415                           ;DC_motors.c: 31:     PWM6DCH=0;
  5416  003A3E  0E00               	movlw	0
  5417  003A40  6EA3               	movwf	163,c	;volatile
  5418                           
  5419                           ;DC_motors.c: 32:     PWM7DCH=0;
  5420  003A42  0E00               	movlw	0
  5421  003A44  6EA0               	movwf	160,c	;volatile
  5422  003A46                     
  5423                           ;DC_motors.c: 34:     PWM6CONbits.EN = 1;
  5424  003A46  8EA4               	bsf	164,7,c	;volatile
  5425  003A48                     
  5426                           ;DC_motors.c: 35:     PWM7CONbits.EN = 1;
  5427  003A48  8EA1               	bsf	161,7,c	;volatile
  5428                           
  5429                           ;DC_motors.c: 37:     RE2PPS=0x0A;
  5430  003A4A  0E0A               	movlw	10
  5431  003A4C  010E               	movlb	14	; () banked
  5432  003A4E  6F74               	movwf	116,b	;volatile
  5433                           
  5434                           ;DC_motors.c: 38:     RC7PPS=0x0B;
  5435  003A50  0E0B               	movlw	11
  5436  003A52  6F69               	movwf	105,b	;volatile
  5437  003A54                     
  5438                           ; BSR set to: 14
  5439                           ;DC_motors.c: 41:     clicker2buttons_init();
  5440  003A54  EC50  F01F         	call	_clicker2buttons_init	;wreg free
  5441  003A58                     
  5442                           ;DC_motors.c: 42:     clicker2LEDs_init();
  5443  003A58  EC6B  F01F         	call	_clicker2LEDs_init	;wreg free
  5444  003A5C                     
  5445                           ;DC_motors.c: 43:     buggyLEDs_init();
  5446  003A5C  EC38  F01F         	call	_buggyLEDs_init	;wreg free
  5447  003A60  0012               	return		;funcret
  5448  003A62                     __end_of_DCmotors_init:
  5449                           	callstack 0
  5450                           
  5451 ;; *************** function _clicker2buttons_init *****************
  5452 ;; Defined at:
  5453 ;;		line 8 in file "buttons_n_LEDs.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		None
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used: 1
  5473 ;; Hardware stack levels required when called: 7
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_DCmotors_init
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text33
  5482  003EA0                     __ptext33:
  5483                           	callstack 0
  5484  003EA0                     _clicker2buttons_init:
  5485                           	callstack 22
  5486  003EA0                     
  5487                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
  5488  003EA0  8486               	bsf	134,2,c	;volatile
  5489                           
  5490                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
  5491  003EA2  8686               	bsf	134,3,c	;volatile
  5492                           
  5493                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  5494  003EA4  010E               	movlb	14	; () banked
  5495  003EA6  95B4               	bcf	180,2,b	;volatile
  5496                           
  5497                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  5498  003EA8  97B4               	bcf	180,3,b	;volatile
  5499  003EAA                     
  5500                           ; BSR set to: 14
  5501  003EAA  0012               	return		;funcret
  5502  003EAC                     __end_of_clicker2buttons_init:
  5503                           	callstack 0
  5504                           
  5505 ;; *************** function _clicker2LEDs_init *****************
  5506 ;; Defined at:
  5507 ;;		line 20 in file "buttons_n_LEDs.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		None
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 7
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_DCmotors_init
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text34
  5536  003ED6                     __ptext34:
  5537                           	callstack 0
  5538  003ED6                     _clicker2LEDs_init:
  5539                           	callstack 22
  5540  003ED6                     
  5541                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
  5542  003ED6  9E84               	bcf	132,7,c	;volatile
  5543                           
  5544                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
  5545  003ED8  9688               	bcf	136,3,c	;volatile
  5546                           
  5547                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
  5548  003EDA  9E7C               	bcf	124,7,c	;volatile
  5549                           
  5550                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
  5551  003EDC  9680               	bcf	128,3,c	;volatile
  5552  003EDE  0012               	return		;funcret
  5553  003EE0                     __end_of_clicker2LEDs_init:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _buggyLEDs_init *****************
  5557 ;; Defined at:
  5558 ;;		line 56 in file "buttons_n_LEDs.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		None
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5576 ;;Total ram usage:        0 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; Hardware stack levels required when called: 7
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_DCmotors_init
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text35
  5587  003E70                     __ptext35:
  5588                           	callstack 0
  5589  003E70                     _buggyLEDs_init:
  5590                           	callstack 22
  5591  003E70                     
  5592                           ;buttons_n_LEDs.c: 57:     TRISHbits.TRISH1 = 0;
  5593  003E70  9288               	bcf	136,1,c	;volatile
  5594                           
  5595                           ;buttons_n_LEDs.c: 58:     TRISDbits.TRISD3 = 0;
  5596  003E72  9684               	bcf	132,3,c	;volatile
  5597                           
  5598                           ;buttons_n_LEDs.c: 59:     TRISDbits.TRISD4 = 0;
  5599  003E74  9884               	bcf	132,4,c	;volatile
  5600                           
  5601                           ;buttons_n_LEDs.c: 60:     TRISFbits.TRISF0 = 0;
  5602  003E76  9086               	bcf	134,0,c	;volatile
  5603                           
  5604                           ;buttons_n_LEDs.c: 61:     TRISHbits.TRISH0 = 0;
  5605  003E78  9088               	bcf	136,0,c	;volatile
  5606                           
  5607                           ;buttons_n_LEDs.c: 63:     LATHbits.LATH1 = 0;
  5608  003E7A  9280               	bcf	128,1,c	;volatile
  5609                           
  5610                           ;buttons_n_LEDs.c: 64:     LATDbits.LATD3 = 0;
  5611  003E7C  967C               	bcf	124,3,c	;volatile
  5612                           
  5613                           ;buttons_n_LEDs.c: 65:     LATDbits.LATD4 = 0;
  5614  003E7E  987C               	bcf	124,4,c	;volatile
  5615                           
  5616                           ;buttons_n_LEDs.c: 66:     LATFbits.LATF0 = 0;
  5617  003E80  907E               	bcf	126,0,c	;volatile
  5618                           
  5619                           ;buttons_n_LEDs.c: 67:     LATHbits.LATH0 = 0;
  5620  003E82  9080               	bcf	128,0,c	;volatile
  5621  003E84  0012               	return		;funcret
  5622  003E86                     __end_of_buggyLEDs_init:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _DCmotors_calibration *****************
  5626 ;; Defined at:
  5627 ;;		line 234 in file "DC_motors.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  mL              2   22[BANK0 ] PTR struct .
  5630 ;;		 -> main@motorL(9), 
  5631 ;;  mR              2   24[BANK0 ] PTR struct .
  5632 ;;		 -> main@motorR(9), 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  okay            1   78[COMRAM] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5647 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;Total ram usage:        7 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; Hardware stack levels required when called: 11
  5651 ;; This function calls:
  5652 ;;		_adjdelay
  5653 ;;		_stop
  5654 ;;		_turnleft
  5655 ;;		_turnright
  5656 ;; This function is called by:
  5657 ;;		_main
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text36
  5662  00232A                     __ptext36:
  5663                           	callstack 0
  5664  00232A                     _DCmotors_calibration:
  5665                           	callstack 19
  5666  00232A                     
  5667                           ;DC_motors.c: 235:     unsigned char okay = 0;
  5668  00232A  0E00               	movlw	0
  5669  00232C  6E4F               	movwf	DCmotors_calibration@okay^0,c
  5670                           
  5671                           ;DC_motors.c: 236:     while(okay<1){
  5672  00232E  EFD1  F012         	goto	l4827
  5673  002332                     l633:
  5674  002332  A48E               	btfss	142,2,c	;volatile
  5675  002334  EF9E  F011         	goto	u5061
  5676  002338  EFA0  F011         	goto	u5060
  5677  00233C                     u5061:
  5678  00233C  EFA7  F011         	goto	l637
  5679  002340                     u5060:
  5680  002340  B68E               	btfsc	142,3,c	;volatile
  5681  002342  EFA5  F011         	goto	u5071
  5682  002346  EFA7  F011         	goto	u5070
  5683  00234A                     u5071:
  5684  00234A  EF99  F011         	goto	l633
  5685  00234E                     u5070:
  5686  00234E                     l637:
  5687                           
  5688                           ;DC_motors.c: 238:         LATDbits.LATD3 = 1;
  5689  00234E  867C               	bsf	124,3,c	;volatile
  5690  002350                     
  5691                           ;DC_motors.c: 239:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5692  002350  0E09               	movlw	9
  5693  002352  0100               	movlb	0	; () banked
  5694  002354  6F7B               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5695  002356  0E1E               	movlw	30
  5696  002358  6F7A               	movwf	??_DCmotors_calibration& (0+255),b
  5697  00235A  0EE4               	movlw	228
  5698  00235C                     u5977:
  5699  00235C  2EE8               	decfsz	wreg,f,c
  5700  00235E  D7FE               	bra	u5977
  5701  002360  2F7A               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5702  002362  D7FC               	bra	u5977
  5703  002364  2F7B               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5704  002366  D7FA               	bra	u5977
  5705  002368  F000               	nop	
  5706  00236A                     
  5707                           ;DC_motors.c: 240:         turnleft(mL, mR, 360);
  5708  00236A  C076  F070         	movff	DCmotors_calibration@mL,turnleft@mL
  5709  00236E  C077  F071         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
  5710  002372  C078  F072         	movff	DCmotors_calibration@mR,turnleft@mR
  5711  002376  C079  F073         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
  5712  00237A  0E01               	movlw	1
  5713  00237C  0100               	movlb	0	; () banked
  5714  00237E  6F75               	movwf	(turnleft@deg+1)& (0+255),b
  5715  002380  0E68               	movlw	104
  5716  002382  6F74               	movwf	turnleft@deg& (0+255),b
  5717  002384  EC59  F01D         	call	_turnleft	;wreg free
  5718  002388                     
  5719                           ;DC_motors.c: 241:         stop(mL, mR);
  5720  002388  C076  F023         	movff	DCmotors_calibration@mL,stop@mL
  5721  00238C  C077  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
  5722  002390  C078  F025         	movff	DCmotors_calibration@mR,stop@mR
  5723  002394  C079  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
  5724  002398  EC50  F01B         	call	_stop	;wreg free
  5725  00239C                     l638:
  5726  00239C  A48E               	btfss	142,2,c	;volatile
  5727  00239E  EFD3  F011         	goto	u5081
  5728  0023A2  EFD5  F011         	goto	u5080
  5729  0023A6                     u5081:
  5730  0023A6  EFDC  F011         	goto	l4763
  5731  0023AA                     u5080:
  5732  0023AA  B68E               	btfsc	142,3,c	;volatile
  5733  0023AC  EFDA  F011         	goto	u5091
  5734  0023B0  EFDC  F011         	goto	u5090
  5735  0023B4                     u5091:
  5736  0023B4  EFCE  F011         	goto	l638
  5737  0023B8                     u5090:
  5738  0023B8                     l4763:
  5739                           
  5740                           ;DC_motors.c: 244:         adjdelay(1);
  5741  0023B8  0E01               	movlw	1
  5742  0023BA  ECBA  F017         	call	_adjdelay
  5743  0023BE                     
  5744                           ;DC_motors.c: 245:         LATDbits.LATD3 = 0;
  5745  0023BE  967C               	bcf	124,3,c	;volatile
  5746  0023C0                     
  5747                           ;DC_motors.c: 246:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5748  0023C0  0E52               	movlw	82
  5749  0023C2  0100               	movlb	0	; () banked
  5750  0023C4  6F7B               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5751  0023C6  0E2B               	movlw	43
  5752  0023C8  6F7A               	movwf	??_DCmotors_calibration& (0+255),b
  5753  0023CA  0E00               	movlw	0
  5754  0023CC                     u5987:
  5755  0023CC  2EE8               	decfsz	wreg,f,c
  5756  0023CE  D7FE               	bra	u5987
  5757  0023D0  2F7A               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5758  0023D2  D7FC               	bra	u5987
  5759  0023D4  2F7B               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5760  0023D6  D7FA               	bra	u5987
  5761  0023D8  F000               	nop	
  5762  0023DA                     
  5763                           ;DC_motors.c: 248:         LATDbits.LATD3 = 1;
  5764  0023DA  867C               	bsf	124,3,c	;volatile
  5765  0023DC                     
  5766                           ;DC_motors.c: 249:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5767  0023DC  0E09               	movlw	9
  5768  0023DE  0100               	movlb	0	; () banked
  5769  0023E0  6F7B               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5770  0023E2  0E1E               	movlw	30
  5771  0023E4  6F7A               	movwf	??_DCmotors_calibration& (0+255),b
  5772  0023E6  0EE4               	movlw	228
  5773  0023E8                     u5997:
  5774  0023E8  2EE8               	decfsz	wreg,f,c
  5775  0023EA  D7FE               	bra	u5997
  5776  0023EC  2F7A               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5777  0023EE  D7FC               	bra	u5997
  5778  0023F0  2F7B               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5779  0023F2  D7FA               	bra	u5997
  5780  0023F4  F000               	nop	
  5781  0023F6                     
  5782                           ;DC_motors.c: 250:         turnright(mL, mR, 360);
  5783  0023F6  C076  F070         	movff	DCmotors_calibration@mL,turnright@mL
  5784  0023FA  C077  F071         	movff	DCmotors_calibration@mL+1,turnright@mL+1
  5785  0023FE  C078  F072         	movff	DCmotors_calibration@mR,turnright@mR
  5786  002402  C079  F073         	movff	DCmotors_calibration@mR+1,turnright@mR+1
  5787  002406  0E01               	movlw	1
  5788  002408  0100               	movlb	0	; () banked
  5789  00240A  6F75               	movwf	(turnright@deg+1)& (0+255),b
  5790  00240C  0E68               	movlw	104
  5791  00240E  6F74               	movwf	turnright@deg& (0+255),b
  5792  002410  EC31  F01D         	call	_turnright	;wreg free
  5793  002414                     
  5794                           ;DC_motors.c: 251:         stop(mL, mR);
  5795  002414  C076  F023         	movff	DCmotors_calibration@mL,stop@mL
  5796  002418  C077  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
  5797  00241C  C078  F025         	movff	DCmotors_calibration@mR,stop@mR
  5798  002420  C079  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
  5799  002424  EC50  F01B         	call	_stop	;wreg free
  5800  002428                     l643:
  5801  002428  A48E               	btfss	142,2,c	;volatile
  5802  00242A  EF19  F012         	goto	u5101
  5803  00242E  EF1B  F012         	goto	u5100
  5804  002432                     u5101:
  5805  002432  EF22  F012         	goto	l4779
  5806  002436                     u5100:
  5807  002436  B68E               	btfsc	142,3,c	;volatile
  5808  002438  EF20  F012         	goto	u5111
  5809  00243C  EF22  F012         	goto	u5110
  5810  002440                     u5111:
  5811  002440  EF14  F012         	goto	l643
  5812  002444                     u5110:
  5813  002444                     l4779:
  5814                           
  5815                           ;DC_motors.c: 254:         adjdelay(2);
  5816  002444  0E02               	movlw	2
  5817  002446  ECBA  F017         	call	_adjdelay
  5818  00244A                     
  5819                           ;DC_motors.c: 255:         LATDbits.LATD3 = 0;
  5820  00244A  967C               	bcf	124,3,c	;volatile
  5821  00244C                     
  5822                           ;DC_motors.c: 256:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5823  00244C  0E52               	movlw	82
  5824  00244E  0100               	movlb	0	; () banked
  5825  002450  6F7B               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5826  002452  0E2B               	movlw	43
  5827  002454  6F7A               	movwf	??_DCmotors_calibration& (0+255),b
  5828  002456  0E00               	movlw	0
  5829  002458                     u6007:
  5830  002458  2EE8               	decfsz	wreg,f,c
  5831  00245A  D7FE               	bra	u6007
  5832  00245C  2F7A               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5833  00245E  D7FC               	bra	u6007
  5834  002460  2F7B               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5835  002462  D7FA               	bra	u6007
  5836  002464  F000               	nop	
  5837  002466                     
  5838                           ;DC_motors.c: 258:         LATDbits.LATD3 = 1;
  5839  002466  867C               	bsf	124,3,c	;volatile
  5840  002468                     
  5841                           ;DC_motors.c: 259:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5842  002468  0E09               	movlw	9
  5843  00246A  0100               	movlb	0	; () banked
  5844  00246C  6F7B               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5845  00246E  0E1E               	movlw	30
  5846  002470  6F7A               	movwf	??_DCmotors_calibration& (0+255),b
  5847  002472  0EE4               	movlw	228
  5848  002474                     u6017:
  5849  002474  2EE8               	decfsz	wreg,f,c
  5850  002476  D7FE               	bra	u6017
  5851  002478  2F7A               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5852  00247A  D7FC               	bra	u6017
  5853  00247C  2F7B               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5854  00247E  D7FA               	bra	u6017
  5855  002480  F000               	nop	
  5856  002482                     
  5857                           ;DC_motors.c: 260:         turnleft(mL, mR, 90);
  5858  002482  C076  F070         	movff	DCmotors_calibration@mL,turnleft@mL
  5859  002486  C077  F071         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
  5860  00248A  C078  F072         	movff	DCmotors_calibration@mR,turnleft@mR
  5861  00248E  C079  F073         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
  5862  002492  0E00               	movlw	0
  5863  002494  0100               	movlb	0	; () banked
  5864  002496  6F75               	movwf	(turnleft@deg+1)& (0+255),b
  5865  002498  0E5A               	movlw	90
  5866  00249A  6F74               	movwf	turnleft@deg& (0+255),b
  5867  00249C  EC59  F01D         	call	_turnleft	;wreg free
  5868  0024A0                     
  5869                           ;DC_motors.c: 261:         stop(mL, mR);
  5870  0024A0  C076  F023         	movff	DCmotors_calibration@mL,stop@mL
  5871  0024A4  C077  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
  5872  0024A8  C078  F025         	movff	DCmotors_calibration@mR,stop@mR
  5873  0024AC  C079  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
  5874  0024B0  EC50  F01B         	call	_stop	;wreg free
  5875  0024B4                     
  5876                           ;DC_motors.c: 262:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5877  0024B4  0E52               	movlw	82
  5878  0024B6  0100               	movlb	0	; () banked
  5879  0024B8  6F7B               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5880  0024BA  0E2B               	movlw	43
  5881  0024BC  6F7A               	movwf	??_DCmotors_calibration& (0+255),b
  5882  0024BE  0E00               	movlw	0
  5883  0024C0                     u6027:
  5884  0024C0  2EE8               	decfsz	wreg,f,c
  5885  0024C2  D7FE               	bra	u6027
  5886  0024C4  2F7A               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5887  0024C6  D7FC               	bra	u6027
  5888  0024C8  2F7B               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5889  0024CA  D7FA               	bra	u6027
  5890  0024CC  F000               	nop	
  5891  0024CE                     
  5892                           ;DC_motors.c: 264:         turnright(mL, mR, 90);
  5893  0024CE  C076  F070         	movff	DCmotors_calibration@mL,turnright@mL
  5894  0024D2  C077  F071         	movff	DCmotors_calibration@mL+1,turnright@mL+1
  5895  0024D6  C078  F072         	movff	DCmotors_calibration@mR,turnright@mR
  5896  0024DA  C079  F073         	movff	DCmotors_calibration@mR+1,turnright@mR+1
  5897  0024DE  0E00               	movlw	0
  5898  0024E0  0100               	movlb	0	; () banked
  5899  0024E2  6F75               	movwf	(turnright@deg+1)& (0+255),b
  5900  0024E4  0E5A               	movlw	90
  5901  0024E6  6F74               	movwf	turnright@deg& (0+255),b
  5902  0024E8  EC31  F01D         	call	_turnright	;wreg free
  5903  0024EC                     
  5904                           ;DC_motors.c: 265:         stop(mL, mR);
  5905  0024EC  C076  F023         	movff	DCmotors_calibration@mL,stop@mL
  5906  0024F0  C077  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
  5907  0024F4  C078  F025         	movff	DCmotors_calibration@mR,stop@mR
  5908  0024F8  C079  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
  5909  0024FC  EC50  F01B         	call	_stop	;wreg free
  5910  002500                     
  5911                           ;DC_motors.c: 266:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5912  002500  0E52               	movlw	82
  5913  002502  0100               	movlb	0	; () banked
  5914  002504  6F7B               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5915  002506  0E2B               	movlw	43
  5916  002508  6F7A               	movwf	??_DCmotors_calibration& (0+255),b
  5917  00250A  0E00               	movlw	0
  5918  00250C                     u6037:
  5919  00250C  2EE8               	decfsz	wreg,f,c
  5920  00250E  D7FE               	bra	u6037
  5921  002510  2F7A               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5922  002512  D7FC               	bra	u6037
  5923  002514  2F7B               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5924  002516  D7FA               	bra	u6037
  5925  002518  F000               	nop	
  5926  00251A                     
  5927                           ;DC_motors.c: 267:         LATDbits.LATD3 = 0;
  5928  00251A  967C               	bcf	124,3,c	;volatile
  5929  00251C                     
  5930                           ;DC_motors.c: 269:         LATHbits.LATH3 = 1;
  5931  00251C  8680               	bsf	128,3,c	;volatile
  5932  00251E                     
  5933                           ;DC_motors.c: 270:         LATDbits.LATD7 = 1;
  5934  00251E  8E7C               	bsf	124,7,c	;volatile
  5935  002520                     l648:
  5936  002520  A68E               	btfss	142,3,c	;volatile
  5937  002522  EF95  F012         	goto	u5121
  5938  002526  EF97  F012         	goto	u5120
  5939  00252A                     u5121:
  5940  00252A  EF9E  F012         	goto	l652
  5941  00252E                     u5120:
  5942  00252E  B48E               	btfsc	142,2,c	;volatile
  5943  002530  EF9C  F012         	goto	u5131
  5944  002534  EF9E  F012         	goto	u5130
  5945  002538                     u5131:
  5946  002538  EF90  F012         	goto	l648
  5947  00253C                     u5130:
  5948  00253C                     l652:
  5949                           
  5950                           ;DC_motors.c: 272:         if(!PORTFbits.RF2 && PORTFbits.RF3){
  5951  00253C  B48E               	btfsc	142,2,c	;volatile
  5952  00253E  EFA3  F012         	goto	u5141
  5953  002542  EFA5  F012         	goto	u5140
  5954  002546                     u5141:
  5955  002546  EFB1  F012         	goto	l653
  5956  00254A                     u5140:
  5957  00254A  A68E               	btfss	142,3,c	;volatile
  5958  00254C  EFAA  F012         	goto	u5151
  5959  002550  EFAC  F012         	goto	u5150
  5960  002554                     u5151:
  5961  002554  EFB1  F012         	goto	l653
  5962  002558                     u5150:
  5963  002558                     
  5964                           ;DC_motors.c: 273:             LATHbits.LATH3 = 0;
  5965  002558  9680               	bcf	128,3,c	;volatile
  5966  00255A                     
  5967                           ;DC_motors.c: 274:             okay = 1;
  5968  00255A  0E01               	movlw	1
  5969  00255C  6E4F               	movwf	DCmotors_calibration@okay^0,c
  5970                           
  5971                           ;DC_motors.c: 275:         } else if(!PORTFbits.RF3 && PORTFbits.RF2){
  5972  00255E  EFC2  F012         	goto	l4821
  5973  002562                     l653:
  5974  002562  B68E               	btfsc	142,3,c	;volatile
  5975  002564  EFB6  F012         	goto	u5161
  5976  002568  EFB8  F012         	goto	u5160
  5977  00256C                     u5161:
  5978  00256C  EFC2  F012         	goto	l4821
  5979  002570                     u5160:
  5980  002570  A48E               	btfss	142,2,c	;volatile
  5981  002572  EFBD  F012         	goto	u5171
  5982  002576  EFBF  F012         	goto	u5170
  5983  00257A                     u5171:
  5984  00257A  EFC2  F012         	goto	l4821
  5985  00257E                     u5170:
  5986  00257E                     
  5987                           ;DC_motors.c: 276:             LATDbits.LATD7 = 0;
  5988  00257E  9E7C               	bcf	124,7,c	;volatile
  5989  002580                     
  5990                           ;DC_motors.c: 277:             okay = 0;
  5991  002580  0E00               	movlw	0
  5992  002582  6E4F               	movwf	DCmotors_calibration@okay^0,c
  5993  002584                     l4821:
  5994                           
  5995                           ;DC_motors.c: 279:         LATHbits.LATH3 = 0;
  5996  002584  9680               	bcf	128,3,c	;volatile
  5997  002586                     
  5998                           ;DC_motors.c: 280:         LATDbits.LATD7 = 0;
  5999  002586  9E7C               	bcf	124,7,c	;volatile
  6000  002588                     
  6001                           ;DC_motors.c: 281:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6002  002588  0E52               	movlw	82
  6003  00258A  0100               	movlb	0	; () banked
  6004  00258C  6F7B               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  6005  00258E  0E2B               	movlw	43
  6006  002590  6F7A               	movwf	??_DCmotors_calibration& (0+255),b
  6007  002592  0E00               	movlw	0
  6008  002594                     u6047:
  6009  002594  2EE8               	decfsz	wreg,f,c
  6010  002596  D7FE               	bra	u6047
  6011  002598  2F7A               	decfsz	??_DCmotors_calibration& (0+255),f,b
  6012  00259A  D7FC               	bra	u6047
  6013  00259C  2F7B               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  6014  00259E  D7FA               	bra	u6047
  6015  0025A0  F000               	nop	
  6016  0025A2                     l4827:
  6017                           
  6018                           ;DC_motors.c: 236:     while(okay<1){
  6019  0025A2  504F               	movf	DCmotors_calibration@okay^0,w,c
  6020  0025A4  B4D8               	btfsc	status,2,c
  6021  0025A6  EFD7  F012         	goto	u5181
  6022  0025AA  EFD9  F012         	goto	u5180
  6023  0025AE                     u5181:
  6024  0025AE  EF99  F011         	goto	l633
  6025  0025B2                     u5180:
  6026  0025B2  0012               	return		;funcret
  6027  0025B4                     __end_of_DCmotors_calibration:
  6028                           	callstack 0
  6029                           
  6030 ;; *************** function _turnright *****************
  6031 ;; Defined at:
  6032 ;;		line 225 in file "DC_motors.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  mL              2   16[BANK0 ] PTR struct .
  6035 ;;		 -> main@motorL(9), 
  6036 ;;  mR              2   18[BANK0 ] PTR struct .
  6037 ;;		 -> main@motorR(9), 
  6038 ;;  deg             2   20[BANK0 ] unsigned int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6050 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;Total ram usage:        6 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; Hardware stack levels required when called: 10
  6057 ;; This function calls:
  6058 ;;		_left
  6059 ;;		_right
  6060 ;; This function is called by:
  6061 ;;		_colourcards_readRGBC
  6062 ;;		_DCmotors_calibration
  6063 ;;		_DCmotors_testing
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text37
  6068  003A62                     __ptext37:
  6069                           	callstack 0
  6070  003A62                     _turnright:
  6071                           	callstack 19
  6072  003A62                     
  6073                           ;DC_motors.c: 226:     if (returnhome_flag==0) {right(mL, mR, deg);}
  6074  003A62  0100               	movlb	0	; () banked
  6075  003A64  51A8               	movf	_returnhome_flag& (0+255),w,b	;volatile
  6076  003A66  A4D8               	btfss	status,2,c
  6077  003A68  EF38  F01D         	goto	u5041
  6078  003A6C  EF3A  F01D         	goto	u5040
  6079  003A70                     u5041:
  6080  003A70  EF4A  F01D         	goto	l4743
  6081  003A74                     u5040:
  6082  003A74                     
  6083                           ; BSR set to: 0
  6084  003A74  C070  F060         	movff	turnright@mL,right@mL
  6085  003A78  C071  F061         	movff	turnright@mL+1,right@mL+1
  6086  003A7C  C072  F062         	movff	turnright@mR,right@mR
  6087  003A80  C073  F063         	movff	turnright@mR+1,right@mR+1
  6088  003A84  C074  F064         	movff	turnright@deg,right@deg
  6089  003A88  C075  F065         	movff	turnright@deg+1,right@deg+1
  6090  003A8C  ECF4  F013         	call	_right	;wreg free
  6091  003A90  EF58  F01D         	goto	l628
  6092  003A94                     l4743:
  6093                           
  6094                           ; BSR set to: 0
  6095  003A94  C070  F060         	movff	turnright@mL,left@mL
  6096  003A98  C071  F061         	movff	turnright@mL+1,left@mL+1
  6097  003A9C  C072  F062         	movff	turnright@mR,left@mR
  6098  003AA0  C073  F063         	movff	turnright@mR+1,left@mR+1
  6099  003AA4  C074  F064         	movff	turnright@deg,left@deg
  6100  003AA8  C075  F065         	movff	turnright@deg+1,left@deg+1
  6101  003AAC  ECF5  F014         	call	_left	;wreg free
  6102  003AB0                     l628:
  6103  003AB0  0012               	return		;funcret
  6104  003AB2                     __end_of_turnright:
  6105                           	callstack 0
  6106                           
  6107 ;; *************** function _turnleft *****************
  6108 ;; Defined at:
  6109 ;;		line 216 in file "DC_motors.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  mL              2   16[BANK0 ] PTR struct .
  6112 ;;		 -> main@motorL(9), 
  6113 ;;  mR              2   18[BANK0 ] PTR struct .
  6114 ;;		 -> main@motorR(9), 
  6115 ;;  deg             2   20[BANK0 ] unsigned int 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6127 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6130 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;Total ram usage:        6 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; Hardware stack levels required when called: 10
  6134 ;; This function calls:
  6135 ;;		_left
  6136 ;;		_right
  6137 ;; This function is called by:
  6138 ;;		_colourcards_readRGBC
  6139 ;;		_DCmotors_calibration
  6140 ;;		_DCmotors_testing
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text38
  6145  003AB2                     __ptext38:
  6146                           	callstack 0
  6147  003AB2                     _turnleft:
  6148                           	callstack 19
  6149  003AB2                     
  6150                           ;DC_motors.c: 217:     if (returnhome_flag==0) {left(mL, mR, deg);}
  6151  003AB2  0100               	movlb	0	; () banked
  6152  003AB4  51A8               	movf	_returnhome_flag& (0+255),w,b	;volatile
  6153  003AB6  A4D8               	btfss	status,2,c
  6154  003AB8  EF60  F01D         	goto	u5051
  6155  003ABC  EF62  F01D         	goto	u5050
  6156  003AC0                     u5051:
  6157  003AC0  EF72  F01D         	goto	l4749
  6158  003AC4                     u5050:
  6159  003AC4                     
  6160                           ; BSR set to: 0
  6161  003AC4  C070  F060         	movff	turnleft@mL,left@mL
  6162  003AC8  C071  F061         	movff	turnleft@mL+1,left@mL+1
  6163  003ACC  C072  F062         	movff	turnleft@mR,left@mR
  6164  003AD0  C073  F063         	movff	turnleft@mR+1,left@mR+1
  6165  003AD4  C074  F064         	movff	turnleft@deg,left@deg
  6166  003AD8  C075  F065         	movff	turnleft@deg+1,left@deg+1
  6167  003ADC  ECF5  F014         	call	_left	;wreg free
  6168  003AE0  EF80  F01D         	goto	l623
  6169  003AE4                     l4749:
  6170                           
  6171                           ; BSR set to: 0
  6172  003AE4  C070  F060         	movff	turnleft@mL,right@mL
  6173  003AE8  C071  F061         	movff	turnleft@mL+1,right@mL+1
  6174  003AEC  C072  F062         	movff	turnleft@mR,right@mR
  6175  003AF0  C073  F063         	movff	turnleft@mR+1,right@mR+1
  6176  003AF4  C074  F064         	movff	turnleft@deg,right@deg
  6177  003AF8  C075  F065         	movff	turnleft@deg+1,right@deg+1
  6178  003AFC  ECF4  F013         	call	_right	;wreg free
  6179  003B00                     l623:
  6180  003B00  0012               	return		;funcret
  6181  003B02                     __end_of_turnleft:
  6182                           	callstack 0
  6183                           
  6184 ;; *************** function _right *****************
  6185 ;; Defined at:
  6186 ;;		line 185 in file "DC_motors.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  mL              2    0[BANK0 ] PTR struct .
  6189 ;;		 -> main@motorL(9), 
  6190 ;;  mR              2    2[BANK0 ] PTR struct .
  6191 ;;		 -> main@motorR(9), 
  6192 ;;  deg             2    4[BANK0 ] unsigned int 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  delay           4    6[BANK0 ] unsigned int 
  6195 ;;  i               2   14[BANK0 ] unsigned int 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6205 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6209 ;;Total ram usage:       17 bytes
  6210 ;; Hardware stack levels used: 1
  6211 ;; Hardware stack levels required when called: 9
  6212 ;; This function calls:
  6213 ;;		_DCmotors_setPWM
  6214 ;;		___fladd
  6215 ;;		___flge
  6216 ;;		___flmul
  6217 ;;		___lwdiv
  6218 ;;		___wmul
  6219 ;;		___xxtofl
  6220 ;; This function is called by:
  6221 ;;		_turnleft
  6222 ;;		_turnright
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text39
  6227  0027E8                     __ptext39:
  6228                           	callstack 0
  6229  0027E8                     _right:
  6230                           	callstack 19
  6231  0027E8                     
  6232                           ;DC_motors.c: 187:     double delay = (2.0303*deg) + 62.964 + ((turnright_delay*deg)/90)
      +                          ;
  6233  0027E8  0E23               	movlw	35
  6234  0027EA  6E42               	movwf	___fladd@a^0,c
  6235  0027EC  0EDB               	movlw	219
  6236  0027EE  6E43               	movwf	(___fladd@a+1)^0,c
  6237  0027F0  0E7B               	movlw	123
  6238  0027F2  6E44               	movwf	(___fladd@a+2)^0,c
  6239  0027F4  0E42               	movlw	66
  6240  0027F6  6E45               	movwf	(___fladd@a+3)^0,c
  6241  0027F8  0E6F               	movlw	111
  6242  0027FA  6E29               	movwf	___flmul@a^0,c
  6243  0027FC  0EF0               	movlw	240
  6244  0027FE  6E2A               	movwf	(___flmul@a+1)^0,c
  6245  002800  0E01               	movlw	1
  6246  002802  6E2B               	movwf	(___flmul@a+2)^0,c
  6247  002804  0E40               	movlw	64
  6248  002806  6E2C               	movwf	(___flmul@a+3)^0,c
  6249  002808  C064  F017         	movff	right@deg,___xxtofl@val
  6250  00280C  C065  F018         	movff	right@deg+1,___xxtofl@val+1
  6251  002810  6A19               	clrf	(___xxtofl@val+2)^0,c
  6252  002812  6A1A               	clrf	(___xxtofl@val+3)^0,c
  6253  002814  0E00               	movlw	0
  6254  002816  ECE0  F016         	call	___xxtofl
  6255  00281A  C017  F025         	movff	?___xxtofl,___flmul@b
  6256  00281E  C018  F026         	movff	?___xxtofl+1,___flmul@b+1
  6257  002822  C019  F027         	movff	?___xxtofl+2,___flmul@b+2
  6258  002826  C01A  F028         	movff	?___xxtofl+3,___flmul@b+3
  6259  00282A  ECB3  F00D         	call	___flmul	;wreg free
  6260  00282E  C025  F03E         	movff	?___flmul,___fladd@b
  6261  002832  C026  F03F         	movff	?___flmul+1,___fladd@b+1
  6262  002836  C027  F040         	movff	?___flmul+2,___fladd@b+2
  6263  00283A  C028  F041         	movff	?___flmul+3,___fladd@b+3
  6264  00283E  EC53  F00B         	call	___fladd	;wreg free
  6265  002842  C03E  F06A         	movff	?___fladd,_right$3194
  6266  002846  C03F  F06B         	movff	?___fladd+1,_right$3194+1
  6267  00284A  C040  F06C         	movff	?___fladd+2,_right$3194+2
  6268  00284E  C041  F06D         	movff	?___fladd+3,_right$3194+3
  6269                           
  6270                           ;DC_motors.c: 187:     double delay = (2.0303*deg) + 62.964 + ((turnright_delay*deg)/90)
      +                          ;
  6271  002852  C06A  F03E         	movff	_right$3194,___fladd@b
  6272  002856  C06B  F03F         	movff	_right$3194+1,___fladd@b+1
  6273  00285A  C06C  F040         	movff	_right$3194+2,___fladd@b+2
  6274  00285E  C06D  F041         	movff	_right$3194+3,___fladd@b+3
  6275  002862  0E00               	movlw	0
  6276  002864  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  6277  002866  0E5A               	movlw	90
  6278  002868  6E12               	movwf	___lwdiv@divisor^0,c
  6279  00286A  C064  F00C         	movff	right@deg,___wmul@multiplicand
  6280  00286E  C065  F00D         	movff	right@deg+1,___wmul@multiplicand+1
  6281  002872  C054  F00A         	movff	_turnright_delay,___wmul@multiplier	;volatile
  6282  002876  6A0B               	clrf	(___wmul@multiplier+1)^0,c
  6283  002878  EC7F  F01E         	call	___wmul	;wreg free
  6284  00287C  C00A  F010         	movff	?___wmul,___lwdiv@dividend
  6285  002880  C00B  F011         	movff	?___wmul+1,___lwdiv@dividend+1
  6286  002884  ECD1  F01B         	call	___lwdiv	;wreg free
  6287  002888  C010  F017         	movff	?___lwdiv,___xxtofl@val
  6288  00288C  C011  F018         	movff	?___lwdiv+1,___xxtofl@val+1
  6289  002890  6A19               	clrf	(___xxtofl@val+2)^0,c
  6290  002892  6A1A               	clrf	(___xxtofl@val+3)^0,c
  6291  002894  0E00               	movlw	0
  6292  002896  ECE0  F016         	call	___xxtofl
  6293  00289A  C017  F042         	movff	?___xxtofl,___fladd@a
  6294  00289E  C018  F043         	movff	?___xxtofl+1,___fladd@a+1
  6295  0028A2  C019  F044         	movff	?___xxtofl+2,___fladd@a+2
  6296  0028A6  C01A  F045         	movff	?___xxtofl+3,___fladd@a+3
  6297  0028AA  EC53  F00B         	call	___fladd	;wreg free
  6298  0028AE  C03E  F066         	movff	?___fladd,right@delay
  6299  0028B2  C03F  F067         	movff	?___fladd+1,right@delay+1
  6300  0028B6  C040  F068         	movff	?___fladd+2,right@delay+2
  6301  0028BA  C041  F069         	movff	?___fladd+3,right@delay+3
  6302  0028BE                     
  6303                           ;DC_motors.c: 190:     mL->direction = 1;
  6304  0028BE  0100               	movlb	0	; () banked
  6305  0028C0  EE20 F001          	lfsr	2,1
  6306  0028C4  5160               	movf	right@mL& (0+255),w,b
  6307  0028C6  26D9               	addwf	fsr2l,f,c
  6308  0028C8  5161               	movf	(right@mL+1)& (0+255),w,b
  6309  0028CA  22DA               	addwfc	fsr2h,f,c
  6310  0028CC  0E01               	movlw	1
  6311  0028CE  6EDF               	movwf	indf2,c
  6312  0028D0                     
  6313                           ; BSR set to: 0
  6314                           ;DC_motors.c: 191:     mR->direction = 0;
  6315  0028D0  EE20 F001          	lfsr	2,1
  6316  0028D4  5162               	movf	right@mR& (0+255),w,b
  6317  0028D6  26D9               	addwf	fsr2l,f,c
  6318  0028D8  5163               	movf	(right@mR+1)& (0+255),w,b
  6319  0028DA  22DA               	addwfc	fsr2h,f,c
  6320  0028DC  0E00               	movlw	0
  6321  0028DE  6EDF               	movwf	indf2,c
  6322  0028E0                     
  6323                           ; BSR set to: 0
  6324                           ;DC_motors.c: 194:     LATHbits.LATH0 = 1;
  6325  0028E0  8080               	bsf	128,0,c	;volatile
  6326                           
  6327                           ;DC_motors.c: 195:     while((mL->power < 70) || (mR->power < 70)){
  6328  0028E2  EFA7  F014         	goto	l4727
  6329  0028E6                     l4713:
  6330                           
  6331                           ;DC_motors.c: 197:         if (mL->power < 70) {mL->power += 10;}
  6332  0028E6  C060  FFD9         	movff	right@mL,fsr2l
  6333  0028EA  C061  FFDA         	movff	right@mL+1,fsr2h
  6334  0028EE  0E46               	movlw	70
  6335  0028F0  60DF               	cpfslt	indf2,c
  6336  0028F2  EF7D  F014         	goto	u4991
  6337  0028F6  EF7F  F014         	goto	u4990
  6338  0028FA                     u4991:
  6339  0028FA  EF85  F014         	goto	l4717
  6340  0028FE                     u4990:
  6341  0028FE  C060  FFD9         	movff	right@mL,fsr2l
  6342  002902  C061  FFDA         	movff	right@mL+1,fsr2h
  6343  002906  0E0A               	movlw	10
  6344  002908  26DF               	addwf	indf2,f,c
  6345  00290A                     l4717:
  6346                           
  6347                           ;DC_motors.c: 198:         if (mR->power < 70) {mR->power += 10;}
  6348  00290A  C062  FFD9         	movff	right@mR,fsr2l
  6349  00290E  C063  FFDA         	movff	right@mR+1,fsr2h
  6350  002912  0E46               	movlw	70
  6351  002914  60DF               	cpfslt	indf2,c
  6352  002916  EF8F  F014         	goto	u5001
  6353  00291A  EF91  F014         	goto	u5000
  6354  00291E                     u5001:
  6355  00291E  EF97  F014         	goto	l4721
  6356  002922                     u5000:
  6357  002922  C062  FFD9         	movff	right@mR,fsr2l
  6358  002926  C063  FFDA         	movff	right@mR+1,fsr2h
  6359  00292A  0E0A               	movlw	10
  6360  00292C  26DF               	addwf	indf2,f,c
  6361  00292E                     l4721:
  6362                           
  6363                           ;DC_motors.c: 201:         DCmotors_setPWM(mL);
  6364  00292E  C060  F018         	movff	right@mL,DCmotors_setPWM@m
  6365  002932  C061  F019         	movff	right@mL+1,DCmotors_setPWM@m+1
  6366  002936  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  6367  00293A                     
  6368                           ;DC_motors.c: 202:         DCmotors_setPWM(mR);
  6369  00293A  C062  F018         	movff	right@mR,DCmotors_setPWM@m
  6370  00293E  C063  F019         	movff	right@mR+1,DCmotors_setPWM@m+1
  6371  002942  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  6372  002946                     
  6373                           ;DC_motors.c: 203:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6374  002946  0EA0               	movlw	160
  6375  002948                     u6057:
  6376  002948  D000               	nop2	
  6377  00294A  2EE8               	decfsz	wreg,f,c
  6378  00294C  D7FD               	bra	u6057
  6379  00294E                     l4727:
  6380                           
  6381                           ;DC_motors.c: 195:     while((mL->power < 70) || (mR->power < 70)){
  6382  00294E  C060  FFD9         	movff	right@mL,fsr2l
  6383  002952  C061  FFDA         	movff	right@mL+1,fsr2h
  6384  002956  0E45               	movlw	69
  6385  002958  64DF               	cpfsgt	indf2,c
  6386  00295A  EFB1  F014         	goto	u5011
  6387  00295E  EFB3  F014         	goto	u5010
  6388  002962                     u5011:
  6389  002962  EF73  F014         	goto	l4713
  6390  002966                     u5010:
  6391  002966  C062  FFD9         	movff	right@mR,fsr2l
  6392  00296A  C063  FFDA         	movff	right@mR+1,fsr2h
  6393  00296E  0E45               	movlw	69
  6394  002970  64DF               	cpfsgt	indf2,c
  6395  002972  EFBD  F014         	goto	u5021
  6396  002976  EFBF  F014         	goto	u5020
  6397  00297A                     u5021:
  6398  00297A  EF73  F014         	goto	l4713
  6399  00297E                     u5020:
  6400  00297E                     
  6401                           ;DC_motors.c: 206:     unsigned int i;;DC_motors.c: 207:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  6402  00297E  0E00               	movlw	0
  6403  002980  0100               	movlb	0	; () banked
  6404  002982  6F6F               	movwf	(right@i+1)& (0+255),b
  6405  002984  0E00               	movlw	0
  6406  002986  6F6E               	movwf	right@i& (0+255),b
  6407  002988  EFD1  F014         	goto	l4737
  6408  00298C                     l4733:
  6409  00298C  0E15               	movlw	21
  6410  00298E  6E4E               	movwf	??_right^0,c
  6411  002990  0EC6               	movlw	198
  6412  002992                     u6067:
  6413  002992  2EE8               	decfsz	wreg,f,c
  6414  002994  D7FE               	bra	u6067
  6415  002996  2E4E               	decfsz	??_right^0,f,c
  6416  002998  D7FC               	bra	u6067
  6417  00299A  D000               	nop2	
  6418  00299C  0100               	movlb	0	; () banked
  6419  00299E  4B6E               	infsnz	right@i& (0+255),f,b
  6420  0029A0  2B6F               	incf	(right@i+1)& (0+255),f,b
  6421  0029A2                     l4737:
  6422                           
  6423                           ; BSR set to: 0
  6424  0029A2  C06E  F017         	movff	right@i,___xxtofl@val
  6425  0029A6  C06F  F018         	movff	right@i+1,___xxtofl@val+1
  6426  0029AA  6A19               	clrf	(___xxtofl@val+2)^0,c
  6427  0029AC  6A1A               	clrf	(___xxtofl@val+3)^0,c
  6428  0029AE  0E00               	movlw	0
  6429  0029B0  ECE0  F016         	call	___xxtofl
  6430  0029B4  C017  F025         	movff	?___xxtofl,___flge@ff1
  6431  0029B8  C018  F026         	movff	?___xxtofl+1,___flge@ff1+1
  6432  0029BC  C019  F027         	movff	?___xxtofl+2,___flge@ff1+2
  6433  0029C0  C01A  F028         	movff	?___xxtofl+3,___flge@ff1+3
  6434  0029C4  C066  F029         	movff	right@delay,___flge@ff2
  6435  0029C8  C067  F02A         	movff	right@delay+1,___flge@ff2+1
  6436  0029CC  C068  F02B         	movff	right@delay+2,___flge@ff2+2
  6437  0029D0  C069  F02C         	movff	right@delay+3,___flge@ff2+3
  6438  0029D4  ECDE  F019         	call	___flge	;wreg free
  6439  0029D8  A0D8               	btfss	status,0,c
  6440  0029DA  EFF1  F014         	goto	u5031
  6441  0029DE  EFF3  F014         	goto	u5030
  6442  0029E2                     u5031:
  6443  0029E2  EFC6  F014         	goto	l4733
  6444  0029E6                     u5030:
  6445  0029E6                     
  6446                           ;DC_motors.c: 209:     LATHbits.LATH0 = 0;
  6447  0029E6  9080               	bcf	128,0,c	;volatile
  6448  0029E8  0012               	return		;funcret
  6449  0029EA                     __end_of_right:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function _left *****************
  6453 ;; Defined at:
  6454 ;;		line 155 in file "DC_motors.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  mL              2    0[BANK0 ] PTR struct .
  6457 ;;		 -> main@motorL(9), 
  6458 ;;  mR              2    2[BANK0 ] PTR struct .
  6459 ;;		 -> main@motorR(9), 
  6460 ;;  deg             2    4[BANK0 ] unsigned int 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  delay           4    6[BANK0 ] unsigned int 
  6463 ;;  i               2   14[BANK0 ] unsigned int 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6473 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6474 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6477 ;;Total ram usage:       17 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; Hardware stack levels required when called: 9
  6480 ;; This function calls:
  6481 ;;		_DCmotors_setPWM
  6482 ;;		___fladd
  6483 ;;		___flge
  6484 ;;		___flmul
  6485 ;;		___lwdiv
  6486 ;;		___wmul
  6487 ;;		___xxtofl
  6488 ;; This function is called by:
  6489 ;;		_turnleft
  6490 ;;		_turnright
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text40
  6495  0029EA                     __ptext40:
  6496                           	callstack 0
  6497  0029EA                     _left:
  6498                           	callstack 19
  6499  0029EA                     
  6500                           ;DC_motors.c: 157:     double delay = (deg*2.332) + 31.506 + ((turnleft_delay*deg)/90);
  6501  0029EA  0E4A               	movlw	74
  6502  0029EC  6E42               	movwf	___fladd@a^0,c
  6503  0029EE  0E0C               	movlw	12
  6504  0029F0  6E43               	movwf	(___fladd@a+1)^0,c
  6505  0029F2  0EFC               	movlw	252
  6506  0029F4  6E44               	movwf	(___fladd@a+2)^0,c
  6507  0029F6  0E41               	movlw	65
  6508  0029F8  6E45               	movwf	(___fladd@a+3)^0,c
  6509  0029FA  0E7D               	movlw	125
  6510  0029FC  6E29               	movwf	___flmul@a^0,c
  6511  0029FE  0E3F               	movlw	63
  6512  002A00  6E2A               	movwf	(___flmul@a+1)^0,c
  6513  002A02  0E15               	movlw	21
  6514  002A04  6E2B               	movwf	(___flmul@a+2)^0,c
  6515  002A06  0E40               	movlw	64
  6516  002A08  6E2C               	movwf	(___flmul@a+3)^0,c
  6517  002A0A  C064  F017         	movff	left@deg,___xxtofl@val
  6518  002A0E  C065  F018         	movff	left@deg+1,___xxtofl@val+1
  6519  002A12  6A19               	clrf	(___xxtofl@val+2)^0,c
  6520  002A14  6A1A               	clrf	(___xxtofl@val+3)^0,c
  6521  002A16  0E00               	movlw	0
  6522  002A18  ECE0  F016         	call	___xxtofl
  6523  002A1C  C017  F025         	movff	?___xxtofl,___flmul@b
  6524  002A20  C018  F026         	movff	?___xxtofl+1,___flmul@b+1
  6525  002A24  C019  F027         	movff	?___xxtofl+2,___flmul@b+2
  6526  002A28  C01A  F028         	movff	?___xxtofl+3,___flmul@b+3
  6527  002A2C  ECB3  F00D         	call	___flmul	;wreg free
  6528  002A30  C025  F03E         	movff	?___flmul,___fladd@b
  6529  002A34  C026  F03F         	movff	?___flmul+1,___fladd@b+1
  6530  002A38  C027  F040         	movff	?___flmul+2,___fladd@b+2
  6531  002A3C  C028  F041         	movff	?___flmul+3,___fladd@b+3
  6532  002A40  EC53  F00B         	call	___fladd	;wreg free
  6533  002A44  C03E  F06A         	movff	?___fladd,_left$3193
  6534  002A48  C03F  F06B         	movff	?___fladd+1,_left$3193+1
  6535  002A4C  C040  F06C         	movff	?___fladd+2,_left$3193+2
  6536  002A50  C041  F06D         	movff	?___fladd+3,_left$3193+3
  6537                           
  6538                           ;DC_motors.c: 157:     double delay = (deg*2.332) + 31.506 + ((turnleft_delay*deg)/90);
  6539  002A54  C06A  F03E         	movff	_left$3193,___fladd@b
  6540  002A58  C06B  F03F         	movff	_left$3193+1,___fladd@b+1
  6541  002A5C  C06C  F040         	movff	_left$3193+2,___fladd@b+2
  6542  002A60  C06D  F041         	movff	_left$3193+3,___fladd@b+3
  6543  002A64  0E00               	movlw	0
  6544  002A66  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  6545  002A68  0E5A               	movlw	90
  6546  002A6A  6E12               	movwf	___lwdiv@divisor^0,c
  6547  002A6C  C064  F00C         	movff	left@deg,___wmul@multiplicand
  6548  002A70  C065  F00D         	movff	left@deg+1,___wmul@multiplicand+1
  6549  002A74  C055  F00A         	movff	_turnleft_delay,___wmul@multiplier	;volatile
  6550  002A78  6A0B               	clrf	(___wmul@multiplier+1)^0,c
  6551  002A7A  EC7F  F01E         	call	___wmul	;wreg free
  6552  002A7E  C00A  F010         	movff	?___wmul,___lwdiv@dividend
  6553  002A82  C00B  F011         	movff	?___wmul+1,___lwdiv@dividend+1
  6554  002A86  ECD1  F01B         	call	___lwdiv	;wreg free
  6555  002A8A  C010  F017         	movff	?___lwdiv,___xxtofl@val
  6556  002A8E  C011  F018         	movff	?___lwdiv+1,___xxtofl@val+1
  6557  002A92  6A19               	clrf	(___xxtofl@val+2)^0,c
  6558  002A94  6A1A               	clrf	(___xxtofl@val+3)^0,c
  6559  002A96  0E00               	movlw	0
  6560  002A98  ECE0  F016         	call	___xxtofl
  6561  002A9C  C017  F042         	movff	?___xxtofl,___fladd@a
  6562  002AA0  C018  F043         	movff	?___xxtofl+1,___fladd@a+1
  6563  002AA4  C019  F044         	movff	?___xxtofl+2,___fladd@a+2
  6564  002AA8  C01A  F045         	movff	?___xxtofl+3,___fladd@a+3
  6565  002AAC  EC53  F00B         	call	___fladd	;wreg free
  6566  002AB0  C03E  F066         	movff	?___fladd,left@delay
  6567  002AB4  C03F  F067         	movff	?___fladd+1,left@delay+1
  6568  002AB8  C040  F068         	movff	?___fladd+2,left@delay+2
  6569  002ABC  C041  F069         	movff	?___fladd+3,left@delay+3
  6570  002AC0                     
  6571                           ;DC_motors.c: 160:     mL->direction = 0;
  6572  002AC0  0100               	movlb	0	; () banked
  6573  002AC2  EE20 F001          	lfsr	2,1
  6574  002AC6  5160               	movf	left@mL& (0+255),w,b
  6575  002AC8  26D9               	addwf	fsr2l,f,c
  6576  002ACA  5161               	movf	(left@mL+1)& (0+255),w,b
  6577  002ACC  22DA               	addwfc	fsr2h,f,c
  6578  002ACE  0E00               	movlw	0
  6579  002AD0  6EDF               	movwf	indf2,c
  6580  002AD2                     
  6581                           ; BSR set to: 0
  6582                           ;DC_motors.c: 161:     mR->direction = 1;
  6583  002AD2  EE20 F001          	lfsr	2,1
  6584  002AD6  5162               	movf	left@mR& (0+255),w,b
  6585  002AD8  26D9               	addwf	fsr2l,f,c
  6586  002ADA  5163               	movf	(left@mR+1)& (0+255),w,b
  6587  002ADC  22DA               	addwfc	fsr2h,f,c
  6588  002ADE  0E01               	movlw	1
  6589  002AE0  6EDF               	movwf	indf2,c
  6590  002AE2                     
  6591                           ; BSR set to: 0
  6592                           ;DC_motors.c: 164:     LATFbits.LATF0 = 1;
  6593  002AE2  807E               	bsf	126,0,c	;volatile
  6594                           
  6595                           ;DC_motors.c: 165:     while((mL->power < 70) || (mR->power < 70)){
  6596  002AE4  EFA8  F015         	goto	l4693
  6597  002AE8                     l4679:
  6598                           
  6599                           ;DC_motors.c: 167:         if (mL->power < 70) {mL->power += 10;}
  6600  002AE8  C060  FFD9         	movff	left@mL,fsr2l
  6601  002AEC  C061  FFDA         	movff	left@mL+1,fsr2h
  6602  002AF0  0E46               	movlw	70
  6603  002AF2  60DF               	cpfslt	indf2,c
  6604  002AF4  EF7E  F015         	goto	u4941
  6605  002AF8  EF80  F015         	goto	u4940
  6606  002AFC                     u4941:
  6607  002AFC  EF86  F015         	goto	l4683
  6608  002B00                     u4940:
  6609  002B00  C060  FFD9         	movff	left@mL,fsr2l
  6610  002B04  C061  FFDA         	movff	left@mL+1,fsr2h
  6611  002B08  0E0A               	movlw	10
  6612  002B0A  26DF               	addwf	indf2,f,c
  6613  002B0C                     l4683:
  6614                           
  6615                           ;DC_motors.c: 168:         if (mR->power < 70) {mR->power += 10;}
  6616  002B0C  C062  FFD9         	movff	left@mR,fsr2l
  6617  002B10  C063  FFDA         	movff	left@mR+1,fsr2h
  6618  002B14  0E46               	movlw	70
  6619  002B16  60DF               	cpfslt	indf2,c
  6620  002B18  EF90  F015         	goto	u4951
  6621  002B1C  EF92  F015         	goto	u4950
  6622  002B20                     u4951:
  6623  002B20  EF98  F015         	goto	l4687
  6624  002B24                     u4950:
  6625  002B24  C062  FFD9         	movff	left@mR,fsr2l
  6626  002B28  C063  FFDA         	movff	left@mR+1,fsr2h
  6627  002B2C  0E0A               	movlw	10
  6628  002B2E  26DF               	addwf	indf2,f,c
  6629  002B30                     l4687:
  6630                           
  6631                           ;DC_motors.c: 171:         DCmotors_setPWM(mL);
  6632  002B30  C060  F018         	movff	left@mL,DCmotors_setPWM@m
  6633  002B34  C061  F019         	movff	left@mL+1,DCmotors_setPWM@m+1
  6634  002B38  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  6635  002B3C                     
  6636                           ;DC_motors.c: 172:         DCmotors_setPWM(mR);
  6637  002B3C  C062  F018         	movff	left@mR,DCmotors_setPWM@m
  6638  002B40  C063  F019         	movff	left@mR+1,DCmotors_setPWM@m+1
  6639  002B44  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  6640  002B48                     
  6641                           ;DC_motors.c: 173:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6642  002B48  0EA0               	movlw	160
  6643  002B4A                     u6077:
  6644  002B4A  D000               	nop2	
  6645  002B4C  2EE8               	decfsz	wreg,f,c
  6646  002B4E  D7FD               	bra	u6077
  6647  002B50                     l4693:
  6648                           
  6649                           ;DC_motors.c: 165:     while((mL->power < 70) || (mR->power < 70)){
  6650  002B50  C060  FFD9         	movff	left@mL,fsr2l
  6651  002B54  C061  FFDA         	movff	left@mL+1,fsr2h
  6652  002B58  0E45               	movlw	69
  6653  002B5A  64DF               	cpfsgt	indf2,c
  6654  002B5C  EFB2  F015         	goto	u4961
  6655  002B60  EFB4  F015         	goto	u4960
  6656  002B64                     u4961:
  6657  002B64  EF74  F015         	goto	l4679
  6658  002B68                     u4960:
  6659  002B68  C062  FFD9         	movff	left@mR,fsr2l
  6660  002B6C  C063  FFDA         	movff	left@mR+1,fsr2h
  6661  002B70  0E45               	movlw	69
  6662  002B72  64DF               	cpfsgt	indf2,c
  6663  002B74  EFBE  F015         	goto	u4971
  6664  002B78  EFC0  F015         	goto	u4970
  6665  002B7C                     u4971:
  6666  002B7C  EF74  F015         	goto	l4679
  6667  002B80                     u4970:
  6668  002B80                     
  6669                           ;DC_motors.c: 176:     unsigned int i;;DC_motors.c: 177:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  6670  002B80  0E00               	movlw	0
  6671  002B82  0100               	movlb	0	; () banked
  6672  002B84  6F6F               	movwf	(left@i+1)& (0+255),b
  6673  002B86  0E00               	movlw	0
  6674  002B88  6F6E               	movwf	left@i& (0+255),b
  6675  002B8A  EFD2  F015         	goto	l4703
  6676  002B8E                     l4699:
  6677  002B8E  0E15               	movlw	21
  6678  002B90  6E4E               	movwf	??_left^0,c
  6679  002B92  0EC6               	movlw	198
  6680  002B94                     u6087:
  6681  002B94  2EE8               	decfsz	wreg,f,c
  6682  002B96  D7FE               	bra	u6087
  6683  002B98  2E4E               	decfsz	??_left^0,f,c
  6684  002B9A  D7FC               	bra	u6087
  6685  002B9C  D000               	nop2	
  6686  002B9E  0100               	movlb	0	; () banked
  6687  002BA0  4B6E               	infsnz	left@i& (0+255),f,b
  6688  002BA2  2B6F               	incf	(left@i+1)& (0+255),f,b
  6689  002BA4                     l4703:
  6690                           
  6691                           ; BSR set to: 0
  6692  002BA4  C06E  F017         	movff	left@i,___xxtofl@val
  6693  002BA8  C06F  F018         	movff	left@i+1,___xxtofl@val+1
  6694  002BAC  6A19               	clrf	(___xxtofl@val+2)^0,c
  6695  002BAE  6A1A               	clrf	(___xxtofl@val+3)^0,c
  6696  002BB0  0E00               	movlw	0
  6697  002BB2  ECE0  F016         	call	___xxtofl
  6698  002BB6  C017  F025         	movff	?___xxtofl,___flge@ff1
  6699  002BBA  C018  F026         	movff	?___xxtofl+1,___flge@ff1+1
  6700  002BBE  C019  F027         	movff	?___xxtofl+2,___flge@ff1+2
  6701  002BC2  C01A  F028         	movff	?___xxtofl+3,___flge@ff1+3
  6702  002BC6  C066  F029         	movff	left@delay,___flge@ff2
  6703  002BCA  C067  F02A         	movff	left@delay+1,___flge@ff2+1
  6704  002BCE  C068  F02B         	movff	left@delay+2,___flge@ff2+2
  6705  002BD2  C069  F02C         	movff	left@delay+3,___flge@ff2+3
  6706  002BD6  ECDE  F019         	call	___flge	;wreg free
  6707  002BDA  A0D8               	btfss	status,0,c
  6708  002BDC  EFF2  F015         	goto	u4981
  6709  002BE0  EFF4  F015         	goto	u4980
  6710  002BE4                     u4981:
  6711  002BE4  EFC7  F015         	goto	l4699
  6712  002BE8                     u4980:
  6713  002BE8                     
  6714                           ;DC_motors.c: 178:     LATFbits.LATF0 = 0;
  6715  002BE8  907E               	bcf	126,0,c	;volatile
  6716  002BEA  0012               	return		;funcret
  6717  002BEC                     __end_of_left:
  6718                           	callstack 0
  6719                           
  6720 ;; *************** function ___xxtofl *****************
  6721 ;; Defined at:
  6722 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  sign            1    wreg     unsigned char 
  6725 ;;  val             4   22[COMRAM] long 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  sign            1   30[COMRAM] unsigned char 
  6728 ;;  arg             4   32[COMRAM] unsigned long 
  6729 ;;  exp             1   31[COMRAM] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  4   22[COMRAM] unsigned char 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;Total ram usage:       14 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; Hardware stack levels required when called: 7
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_colourcards_normaliseRGBC
  6750 ;;		_left
  6751 ;;		_right
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text41
  6756  002DC0                     __ptext41:
  6757                           	callstack 0
  6758  002DC0                     ___xxtofl:
  6759                           	callstack 20
  6760                           
  6761                           ;incstack = 0
  6762                           ;___xxtofl@sign stored from wreg
  6763  002DC0  6E1F               	movwf	___xxtofl@sign^0,c
  6764  002DC2  501F               	movf	___xxtofl@sign^0,w,c
  6765  002DC4  B4D8               	btfsc	status,2,c
  6766  002DC6  EFE7  F016         	goto	u3331
  6767  002DCA  EFE9  F016         	goto	u3330
  6768  002DCE                     u3331:
  6769  002DCE  EF0B  F017         	goto	l1398
  6770  002DD2                     u3330:
  6771  002DD2  BE1A               	btfsc	(___xxtofl@val+3)^0,7,c
  6772  002DD4  EFF0  F016         	goto	u3340
  6773  002DD8  EFEE  F016         	goto	u3341
  6774  002DDC                     u3341:
  6775  002DDC  EF0B  F017         	goto	l1398
  6776  002DE0                     u3340:
  6777  002DE0  C017  F01B         	movff	___xxtofl@val,??___xxtofl
  6778  002DE4  C018  F01C         	movff	___xxtofl@val+1,??___xxtofl+1
  6779  002DE8  C019  F01D         	movff	___xxtofl@val+2,??___xxtofl+2
  6780  002DEC  C01A  F01E         	movff	___xxtofl@val+3,??___xxtofl+3
  6781  002DF0  1E1B               	comf	??___xxtofl^0,f,c
  6782  002DF2  1E1C               	comf	(??___xxtofl+1)^0,f,c
  6783  002DF4  1E1D               	comf	(??___xxtofl+2)^0,f,c
  6784  002DF6  1E1E               	comf	(??___xxtofl+3)^0,f,c
  6785  002DF8  2A1B               	incf	??___xxtofl^0,f,c
  6786  002DFA  0E00               	movlw	0
  6787  002DFC  221C               	addwfc	(??___xxtofl+1)^0,f,c
  6788  002DFE  221D               	addwfc	(??___xxtofl+2)^0,f,c
  6789  002E00  221E               	addwfc	(??___xxtofl+3)^0,f,c
  6790  002E02  C01B  F021         	movff	??___xxtofl,___xxtofl@arg
  6791  002E06  C01C  F022         	movff	??___xxtofl+1,___xxtofl@arg+1
  6792  002E0A  C01D  F023         	movff	??___xxtofl+2,___xxtofl@arg+2
  6793  002E0E  C01E  F024         	movff	??___xxtofl+3,___xxtofl@arg+3
  6794  002E12  EF13  F017         	goto	l3579
  6795  002E16                     l1398:
  6796  002E16  C017  F021         	movff	___xxtofl@val,___xxtofl@arg
  6797  002E1A  C018  F022         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6798  002E1E  C019  F023         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6799  002E22  C01A  F024         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6800  002E26                     l3579:
  6801  002E26  5017               	movf	___xxtofl@val^0,w,c
  6802  002E28  1018               	iorwf	(___xxtofl@val+1)^0,w,c
  6803  002E2A  1019               	iorwf	(___xxtofl@val+2)^0,w,c
  6804  002E2C  101A               	iorwf	(___xxtofl@val+3)^0,w,c
  6805  002E2E  A4D8               	btfss	status,2,c
  6806  002E30  EF1C  F017         	goto	u3351
  6807  002E34  EF1E  F017         	goto	u3350
  6808  002E38                     u3351:
  6809  002E38  EF28  F017         	goto	l3585
  6810  002E3C                     u3350:
  6811  002E3C  0E00               	movlw	0
  6812  002E3E  6E17               	movwf	?___xxtofl^0,c
  6813  002E40  0E00               	movlw	0
  6814  002E42  6E18               	movwf	(?___xxtofl+1)^0,c
  6815  002E44  0E00               	movlw	0
  6816  002E46  6E19               	movwf	(?___xxtofl+2)^0,c
  6817  002E48  0E00               	movlw	0
  6818  002E4A  6E1A               	movwf	(?___xxtofl+3)^0,c
  6819  002E4C  EFB9  F017         	goto	l1401
  6820  002E50                     l3585:
  6821  002E50  0E96               	movlw	150
  6822  002E52  6E20               	movwf	___xxtofl@exp^0,c
  6823  002E54  EF32  F017         	goto	l3589
  6824  002E58                     l3587:
  6825  002E58  2A20               	incf	___xxtofl@exp^0,f,c
  6826  002E5A  90D8               	bcf	status,0,c
  6827  002E5C  3224               	rrcf	(___xxtofl@arg+3)^0,f,c
  6828  002E5E  3223               	rrcf	(___xxtofl@arg+2)^0,f,c
  6829  002E60  3222               	rrcf	(___xxtofl@arg+1)^0,f,c
  6830  002E62  3221               	rrcf	___xxtofl@arg^0,f,c
  6831  002E64                     l3589:
  6832  002E64  0E00               	movlw	0
  6833  002E66  1421               	andwf	___xxtofl@arg^0,w,c
  6834  002E68  6E1B               	movwf	??___xxtofl^0,c
  6835  002E6A  0E00               	movlw	0
  6836  002E6C  1422               	andwf	(___xxtofl@arg+1)^0,w,c
  6837  002E6E  6E1C               	movwf	(??___xxtofl+1)^0,c
  6838  002E70  0E00               	movlw	0
  6839  002E72  1423               	andwf	(___xxtofl@arg+2)^0,w,c
  6840  002E74  6E1D               	movwf	(??___xxtofl+2)^0,c
  6841  002E76  0EFE               	movlw	254
  6842  002E78  1424               	andwf	(___xxtofl@arg+3)^0,w,c
  6843  002E7A  6E1E               	movwf	(??___xxtofl+3)^0,c
  6844  002E7C  501B               	movf	??___xxtofl^0,w,c
  6845  002E7E  101C               	iorwf	(??___xxtofl+1)^0,w,c
  6846  002E80  101D               	iorwf	(??___xxtofl+2)^0,w,c
  6847  002E82  101E               	iorwf	(??___xxtofl+3)^0,w,c
  6848  002E84  A4D8               	btfss	status,2,c
  6849  002E86  EF47  F017         	goto	u3361
  6850  002E8A  EF49  F017         	goto	u3360
  6851  002E8E                     u3361:
  6852  002E8E  EF2C  F017         	goto	l3587
  6853  002E92                     u3360:
  6854  002E92  EF57  F017         	goto	l1405
  6855  002E96                     l3591:
  6856  002E96  2A20               	incf	___xxtofl@exp^0,f,c
  6857  002E98  0E01               	movlw	1
  6858  002E9A  2621               	addwf	___xxtofl@arg^0,f,c
  6859  002E9C  0E00               	movlw	0
  6860  002E9E  2222               	addwfc	(___xxtofl@arg+1)^0,f,c
  6861  002EA0  2223               	addwfc	(___xxtofl@arg+2)^0,f,c
  6862  002EA2  2224               	addwfc	(___xxtofl@arg+3)^0,f,c
  6863  002EA4  90D8               	bcf	status,0,c
  6864  002EA6  3224               	rrcf	(___xxtofl@arg+3)^0,f,c
  6865  002EA8  3223               	rrcf	(___xxtofl@arg+2)^0,f,c
  6866  002EAA  3222               	rrcf	(___xxtofl@arg+1)^0,f,c
  6867  002EAC  3221               	rrcf	___xxtofl@arg^0,f,c
  6868  002EAE                     l1405:
  6869  002EAE  0E00               	movlw	0
  6870  002EB0  1421               	andwf	___xxtofl@arg^0,w,c
  6871  002EB2  6E1B               	movwf	??___xxtofl^0,c
  6872  002EB4  0E00               	movlw	0
  6873  002EB6  1422               	andwf	(___xxtofl@arg+1)^0,w,c
  6874  002EB8  6E1C               	movwf	(??___xxtofl+1)^0,c
  6875  002EBA  0E00               	movlw	0
  6876  002EBC  1423               	andwf	(___xxtofl@arg+2)^0,w,c
  6877  002EBE  6E1D               	movwf	(??___xxtofl+2)^0,c
  6878  002EC0  0EFF               	movlw	255
  6879  002EC2  1424               	andwf	(___xxtofl@arg+3)^0,w,c
  6880  002EC4  6E1E               	movwf	(??___xxtofl+3)^0,c
  6881  002EC6  501B               	movf	??___xxtofl^0,w,c
  6882  002EC8  101C               	iorwf	(??___xxtofl+1)^0,w,c
  6883  002ECA  101D               	iorwf	(??___xxtofl+2)^0,w,c
  6884  002ECC  101E               	iorwf	(??___xxtofl+3)^0,w,c
  6885  002ECE  A4D8               	btfss	status,2,c
  6886  002ED0  EF6C  F017         	goto	u3371
  6887  002ED4  EF6E  F017         	goto	u3370
  6888  002ED8                     u3371:
  6889  002ED8  EF4B  F017         	goto	l3591
  6890  002EDC                     u3370:
  6891  002EDC  EF76  F017         	goto	l3599
  6892  002EE0                     l3597:
  6893  002EE0  0620               	decf	___xxtofl@exp^0,f,c
  6894  002EE2  90D8               	bcf	status,0,c
  6895  002EE4  3621               	rlcf	___xxtofl@arg^0,f,c
  6896  002EE6  3622               	rlcf	(___xxtofl@arg+1)^0,f,c
  6897  002EE8  3623               	rlcf	(___xxtofl@arg+2)^0,f,c
  6898  002EEA  3624               	rlcf	(___xxtofl@arg+3)^0,f,c
  6899  002EEC                     l3599:
  6900  002EEC  BE23               	btfsc	(___xxtofl@arg+2)^0,7,c
  6901  002EEE  EF7B  F017         	goto	u3381
  6902  002EF2  EF7D  F017         	goto	u3380
  6903  002EF6                     u3381:
  6904  002EF6  EF85  F017         	goto	l1412
  6905  002EFA                     u3380:
  6906  002EFA  0E02               	movlw	2
  6907  002EFC  6020               	cpfslt	___xxtofl@exp^0,c
  6908  002EFE  EF83  F017         	goto	u3391
  6909  002F02  EF85  F017         	goto	u3390
  6910  002F06                     u3391:
  6911  002F06  EF70  F017         	goto	l3597
  6912  002F0A                     u3390:
  6913  002F0A                     l1412:
  6914  002F0A  B020               	btfsc	___xxtofl@exp^0,0,c
  6915  002F0C  EF8A  F017         	goto	u3401
  6916  002F10  EF8C  F017         	goto	u3400
  6917  002F14                     u3401:
  6918  002F14  EF8D  F017         	goto	l3605
  6919  002F18                     u3400:
  6920  002F18  9E23               	bcf	(___xxtofl@arg+2)^0,7,c
  6921  002F1A                     l3605:
  6922  002F1A  90D8               	bcf	status,0,c
  6923  002F1C  3220               	rrcf	___xxtofl@exp^0,f,c
  6924  002F1E  C020  F01B         	movff	___xxtofl@exp,??___xxtofl
  6925  002F22  6A1C               	clrf	(??___xxtofl+1)^0,c
  6926  002F24  6A1D               	clrf	(??___xxtofl+2)^0,c
  6927  002F26  6A1E               	clrf	(??___xxtofl+3)^0,c
  6928  002F28  C01B  F01E         	movff	??___xxtofl,??___xxtofl+3
  6929  002F2C  6A1D               	clrf	(??___xxtofl+2)^0,c
  6930  002F2E  6A1C               	clrf	(??___xxtofl+1)^0,c
  6931  002F30  6A1B               	clrf	??___xxtofl^0,c
  6932  002F32  501B               	movf	??___xxtofl^0,w,c
  6933  002F34  1221               	iorwf	___xxtofl@arg^0,f,c
  6934  002F36  501C               	movf	(??___xxtofl+1)^0,w,c
  6935  002F38  1222               	iorwf	(___xxtofl@arg+1)^0,f,c
  6936  002F3A  501D               	movf	(??___xxtofl+2)^0,w,c
  6937  002F3C  1223               	iorwf	(___xxtofl@arg+2)^0,f,c
  6938  002F3E  501E               	movf	(??___xxtofl+3)^0,w,c
  6939  002F40  1224               	iorwf	(___xxtofl@arg+3)^0,f,c
  6940  002F42  501F               	movf	___xxtofl@sign^0,w,c
  6941  002F44  B4D8               	btfsc	status,2,c
  6942  002F46  EFA7  F017         	goto	u3411
  6943  002F4A  EFA9  F017         	goto	u3410
  6944  002F4E                     u3411:
  6945  002F4E  EFB1  F017         	goto	l3615
  6946  002F52                     u3410:
  6947  002F52  BE1A               	btfsc	(___xxtofl@val+3)^0,7,c
  6948  002F54  EFB0  F017         	goto	u3420
  6949  002F58  EFAE  F017         	goto	u3421
  6950  002F5C                     u3421:
  6951  002F5C  EFB1  F017         	goto	l3615
  6952  002F60                     u3420:
  6953  002F60  8E24               	bsf	(___xxtofl@arg+3)^0,7,c
  6954  002F62                     l3615:
  6955  002F62  C021  F017         	movff	___xxtofl@arg,?___xxtofl
  6956  002F66  C022  F018         	movff	___xxtofl@arg+1,?___xxtofl+1
  6957  002F6A  C023  F019         	movff	___xxtofl@arg+2,?___xxtofl+2
  6958  002F6E  C024  F01A         	movff	___xxtofl@arg+3,?___xxtofl+3
  6959  002F72                     l1401:
  6960  002F72  0012               	return		;funcret
  6961  002F74                     __end_of___xxtofl:
  6962                           	callstack 0
  6963                           
  6964 ;; *************** function ___lwdiv *****************
  6965 ;; Defined at:
  6966 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;  dividend        2   15[COMRAM] unsigned int 
  6969 ;;  divisor         2   17[COMRAM] unsigned int 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  quotient        2   19[COMRAM] unsigned int 
  6972 ;;  counter         1   21[COMRAM] unsigned char 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  2   15[COMRAM] unsigned int 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6983 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6986 ;;Total ram usage:        7 bytes
  6987 ;; Hardware stack levels used: 1
  6988 ;; Hardware stack levels required when called: 7
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_left
  6993 ;;		_right
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text42
  6998  0037A2                     __ptext42:
  6999                           	callstack 0
  7000  0037A2                     ___lwdiv:
  7001                           	callstack 20
  7002  0037A2  0E00               	movlw	0
  7003  0037A4  6E15               	movwf	(___lwdiv@quotient+1)^0,c
  7004  0037A6  0E00               	movlw	0
  7005  0037A8  6E14               	movwf	___lwdiv@quotient^0,c
  7006  0037AA  5012               	movf	___lwdiv@divisor^0,w,c
  7007  0037AC  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7008  0037AE  B4D8               	btfsc	status,2,c
  7009  0037B0  EFDC  F01B         	goto	u3301
  7010  0037B4  EFDE  F01B         	goto	u3300
  7011  0037B8                     u3301:
  7012  0037B8  EF06  F01C         	goto	l1234
  7013  0037BC                     u3300:
  7014  0037BC  0E01               	movlw	1
  7015  0037BE  6E16               	movwf	___lwdiv@counter^0,c
  7016  0037C0  EFE6  F01B         	goto	l3559
  7017  0037C4                     l3557:
  7018  0037C4  90D8               	bcf	status,0,c
  7019  0037C6  3612               	rlcf	___lwdiv@divisor^0,f,c
  7020  0037C8  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7021  0037CA  2A16               	incf	___lwdiv@counter^0,f,c
  7022  0037CC                     l3559:
  7023  0037CC  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
  7024  0037CE  EFEB  F01B         	goto	u3311
  7025  0037D2  EFED  F01B         	goto	u3310
  7026  0037D6                     u3311:
  7027  0037D6  EFE2  F01B         	goto	l3557
  7028  0037DA                     u3310:
  7029  0037DA                     l3561:
  7030  0037DA  90D8               	bcf	status,0,c
  7031  0037DC  3614               	rlcf	___lwdiv@quotient^0,f,c
  7032  0037DE  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7033  0037E0  5012               	movf	___lwdiv@divisor^0,w,c
  7034  0037E2  5C10               	subwf	___lwdiv@dividend^0,w,c
  7035  0037E4  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  7036  0037E6  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7037  0037E8  A0D8               	btfss	status,0,c
  7038  0037EA  EFF9  F01B         	goto	u3321
  7039  0037EE  EFFB  F01B         	goto	u3320
  7040  0037F2                     u3321:
  7041  0037F2  EF00  F01C         	goto	l3569
  7042  0037F6                     u3320:
  7043  0037F6  5012               	movf	___lwdiv@divisor^0,w,c
  7044  0037F8  5E10               	subwf	___lwdiv@dividend^0,f,c
  7045  0037FA  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  7046  0037FC  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7047  0037FE  8014               	bsf	___lwdiv@quotient^0,0,c
  7048  003800                     l3569:
  7049  003800  90D8               	bcf	status,0,c
  7050  003802  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7051  003804  3212               	rrcf	___lwdiv@divisor^0,f,c
  7052  003806  2E16               	decfsz	___lwdiv@counter^0,f,c
  7053  003808  EFED  F01B         	goto	l3561
  7054  00380C                     l1234:
  7055  00380C  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
  7056  003810  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7057  003814  0012               	return		;funcret
  7058  003816                     __end_of___lwdiv:
  7059                           	callstack 0
  7060                           
  7061 ;; *************** function ___flmul *****************
  7062 ;; Defined at:
  7063 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;  b               4   36[COMRAM] unsigned int 
  7066 ;;  a               4   40[COMRAM] unsigned int 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;  prod            4   55[COMRAM] struct .
  7069 ;;  grs             4   49[COMRAM] unsigned long 
  7070 ;;  temp            2   59[COMRAM] struct .
  7071 ;;  bexp            1   54[COMRAM] unsigned char 
  7072 ;;  aexp            1   53[COMRAM] unsigned char 
  7073 ;;  sign            1   48[COMRAM] unsigned char 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  4   36[COMRAM] unsigned char 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0, prodl, prodh
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7083 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7084 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7087 ;;Total ram usage:       25 bytes
  7088 ;; Hardware stack levels used: 1
  7089 ;; Hardware stack levels required when called: 7
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_left
  7094 ;;		_right
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text43
  7099  001B66                     __ptext43:
  7100                           	callstack 0
  7101  001B66                     ___flmul:
  7102                           	callstack 20
  7103  001B66  5028               	movf	(___flmul@b+3)^0,w,c
  7104  001B68  0B80               	andlw	128
  7105  001B6A  6E31               	movwf	___flmul@sign^0,c
  7106  001B6C  5028               	movf	(___flmul@b+3)^0,w,c
  7107  001B6E  2428               	addwf	(___flmul@b+3)^0,w,c
  7108  001B70  6E37               	movwf	___flmul@bexp^0,c
  7109  001B72  AE27               	btfss	(___flmul@b+2)^0,7,c
  7110  001B74  EFBE  F00D         	goto	u3061
  7111  001B78  EFC0  F00D         	goto	u3060
  7112  001B7C                     u3061:
  7113  001B7C  EFC1  F00D         	goto	l3405
  7114  001B80                     u3060:
  7115  001B80  8037               	bsf	___flmul@bexp^0,0,c
  7116  001B82                     l3405:
  7117  001B82  5037               	movf	___flmul@bexp^0,w,c
  7118  001B84  B4D8               	btfsc	status,2,c
  7119  001B86  EFC7  F00D         	goto	u3071
  7120  001B8A  EFC9  F00D         	goto	u3070
  7121  001B8E                     u3071:
  7122  001B8E  EFDC  F00D         	goto	l3413
  7123  001B92                     u3070:
  7124  001B92  2837               	incf	___flmul@bexp^0,w,c
  7125  001B94  A4D8               	btfss	status,2,c
  7126  001B96  EFCF  F00D         	goto	u3081
  7127  001B9A  EFD1  F00D         	goto	u3080
  7128  001B9E                     u3081:
  7129  001B9E  EFD9  F00D         	goto	l3411
  7130  001BA2                     u3080:
  7131  001BA2  0E00               	movlw	0
  7132  001BA4  6E25               	movwf	___flmul@b^0,c
  7133  001BA6  0E00               	movlw	0
  7134  001BA8  6E26               	movwf	(___flmul@b+1)^0,c
  7135  001BAA  0E00               	movlw	0
  7136  001BAC  6E27               	movwf	(___flmul@b+2)^0,c
  7137  001BAE  0E00               	movlw	0
  7138  001BB0  6E28               	movwf	(___flmul@b+3)^0,c
  7139  001BB2                     l3411:
  7140  001BB2  8E27               	bsf	(___flmul@b+2)^0,7,c
  7141  001BB4  EFE4  F00D         	goto	l3415
  7142  001BB8                     l3413:
  7143  001BB8  0E00               	movlw	0
  7144  001BBA  6E25               	movwf	___flmul@b^0,c
  7145  001BBC  0E00               	movlw	0
  7146  001BBE  6E26               	movwf	(___flmul@b+1)^0,c
  7147  001BC0  0E00               	movlw	0
  7148  001BC2  6E27               	movwf	(___flmul@b+2)^0,c
  7149  001BC4  0E00               	movlw	0
  7150  001BC6  6E28               	movwf	(___flmul@b+3)^0,c
  7151  001BC8                     l3415:
  7152  001BC8  502C               	movf	(___flmul@a+3)^0,w,c
  7153  001BCA  0B80               	andlw	128
  7154  001BCC  1A31               	xorwf	___flmul@sign^0,f,c
  7155  001BCE  502C               	movf	(___flmul@a+3)^0,w,c
  7156  001BD0  242C               	addwf	(___flmul@a+3)^0,w,c
  7157  001BD2  6E36               	movwf	___flmul@aexp^0,c
  7158  001BD4  AE2B               	btfss	(___flmul@a+2)^0,7,c
  7159  001BD6  EFEF  F00D         	goto	u3091
  7160  001BDA  EFF1  F00D         	goto	u3090
  7161  001BDE                     u3091:
  7162  001BDE  EFF2  F00D         	goto	l3423
  7163  001BE2                     u3090:
  7164  001BE2  8036               	bsf	___flmul@aexp^0,0,c
  7165  001BE4                     l3423:
  7166  001BE4  5036               	movf	___flmul@aexp^0,w,c
  7167  001BE6  B4D8               	btfsc	status,2,c
  7168  001BE8  EFF8  F00D         	goto	u3101
  7169  001BEC  EFFA  F00D         	goto	u3100
  7170  001BF0                     u3101:
  7171  001BF0  EF0D  F00E         	goto	l3431
  7172  001BF4                     u3100:
  7173  001BF4  2836               	incf	___flmul@aexp^0,w,c
  7174  001BF6  A4D8               	btfss	status,2,c
  7175  001BF8  EF00  F00E         	goto	u3111
  7176  001BFC  EF02  F00E         	goto	u3110
  7177  001C00                     u3111:
  7178  001C00  EF0A  F00E         	goto	l3429
  7179  001C04                     u3110:
  7180  001C04  0E00               	movlw	0
  7181  001C06  6E29               	movwf	___flmul@a^0,c
  7182  001C08  0E00               	movlw	0
  7183  001C0A  6E2A               	movwf	(___flmul@a+1)^0,c
  7184  001C0C  0E00               	movlw	0
  7185  001C0E  6E2B               	movwf	(___flmul@a+2)^0,c
  7186  001C10  0E00               	movlw	0
  7187  001C12  6E2C               	movwf	(___flmul@a+3)^0,c
  7188  001C14                     l3429:
  7189  001C14  8E2B               	bsf	(___flmul@a+2)^0,7,c
  7190  001C16  EF15  F00E         	goto	l1357
  7191  001C1A                     l3431:
  7192  001C1A  0E00               	movlw	0
  7193  001C1C  6E29               	movwf	___flmul@a^0,c
  7194  001C1E  0E00               	movlw	0
  7195  001C20  6E2A               	movwf	(___flmul@a+1)^0,c
  7196  001C22  0E00               	movlw	0
  7197  001C24  6E2B               	movwf	(___flmul@a+2)^0,c
  7198  001C26  0E00               	movlw	0
  7199  001C28  6E2C               	movwf	(___flmul@a+3)^0,c
  7200  001C2A                     l1357:
  7201  001C2A  5036               	movf	___flmul@aexp^0,w,c
  7202  001C2C  B4D8               	btfsc	status,2,c
  7203  001C2E  EF1B  F00E         	goto	u3121
  7204  001C32  EF1D  F00E         	goto	u3120
  7205  001C36                     u3121:
  7206  001C36  EF25  F00E         	goto	l3435
  7207  001C3A                     u3120:
  7208  001C3A  5037               	movf	___flmul@bexp^0,w,c
  7209  001C3C  A4D8               	btfss	status,2,c
  7210  001C3E  EF23  F00E         	goto	u3131
  7211  001C42  EF25  F00E         	goto	u3130
  7212  001C46                     u3131:
  7213  001C46  EF2F  F00E         	goto	l3439
  7214  001C4A                     u3130:
  7215  001C4A                     l3435:
  7216  001C4A  0E00               	movlw	0
  7217  001C4C  6E25               	movwf	?___flmul^0,c
  7218  001C4E  0E00               	movlw	0
  7219  001C50  6E26               	movwf	(?___flmul+1)^0,c
  7220  001C52  0E00               	movlw	0
  7221  001C54  6E27               	movwf	(?___flmul+2)^0,c
  7222  001C56  0E00               	movlw	0
  7223  001C58  6E28               	movwf	(?___flmul+3)^0,c
  7224  001C5A  EFC7  F00F         	goto	l1361
  7225  001C5E                     l3439:
  7226  001C5E  502B               	movf	(___flmul@a+2)^0,w,c
  7227  001C60  0225               	mulwf	___flmul@b^0,c
  7228  001C62  CFF3 F03C          	movff	prodl,___flmul@temp
  7229  001C66  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7230  001C6A  503C               	movf	___flmul@temp^0,w,c
  7231  001C6C  6E32               	movwf	___flmul@grs^0,c
  7232  001C6E  6A33               	clrf	(___flmul@grs+1)^0,c
  7233  001C70  6A34               	clrf	(___flmul@grs+2)^0,c
  7234  001C72  6A35               	clrf	(___flmul@grs+3)^0,c
  7235  001C74  503D               	movf	(___flmul@temp+1)^0,w,c
  7236  001C76  6E38               	movwf	___flmul@prod^0,c
  7237  001C78  6A39               	clrf	(___flmul@prod+1)^0,c
  7238  001C7A  6A3A               	clrf	(___flmul@prod+2)^0,c
  7239  001C7C  6A3B               	clrf	(___flmul@prod+3)^0,c
  7240  001C7E  502A               	movf	(___flmul@a+1)^0,w,c
  7241  001C80  0226               	mulwf	(___flmul@b+1)^0,c
  7242  001C82  CFF3 F03C          	movff	prodl,___flmul@temp
  7243  001C86  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7244  001C8A  503C               	movf	___flmul@temp^0,w,c
  7245  001C8C  2632               	addwf	___flmul@grs^0,f,c
  7246  001C8E  0E00               	movlw	0
  7247  001C90  2233               	addwfc	(___flmul@grs+1)^0,f,c
  7248  001C92  2234               	addwfc	(___flmul@grs+2)^0,f,c
  7249  001C94  2235               	addwfc	(___flmul@grs+3)^0,f,c
  7250  001C96  503D               	movf	(___flmul@temp+1)^0,w,c
  7251  001C98  2638               	addwf	___flmul@prod^0,f,c
  7252  001C9A  0E00               	movlw	0
  7253  001C9C  2239               	addwfc	(___flmul@prod+1)^0,f,c
  7254  001C9E  223A               	addwfc	(___flmul@prod+2)^0,f,c
  7255  001CA0  223B               	addwfc	(___flmul@prod+3)^0,f,c
  7256  001CA2  5029               	movf	___flmul@a^0,w,c
  7257  001CA4  0227               	mulwf	(___flmul@b+2)^0,c
  7258  001CA6  CFF3 F03C          	movff	prodl,___flmul@temp
  7259  001CAA  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7260  001CAE  503C               	movf	___flmul@temp^0,w,c
  7261  001CB0  2632               	addwf	___flmul@grs^0,f,c
  7262  001CB2  0E00               	movlw	0
  7263  001CB4  2233               	addwfc	(___flmul@grs+1)^0,f,c
  7264  001CB6  2234               	addwfc	(___flmul@grs+2)^0,f,c
  7265  001CB8  2235               	addwfc	(___flmul@grs+3)^0,f,c
  7266  001CBA  503D               	movf	(___flmul@temp+1)^0,w,c
  7267  001CBC  2638               	addwf	___flmul@prod^0,f,c
  7268  001CBE  0E00               	movlw	0
  7269  001CC0  2239               	addwfc	(___flmul@prod+1)^0,f,c
  7270  001CC2  223A               	addwfc	(___flmul@prod+2)^0,f,c
  7271  001CC4  223B               	addwfc	(___flmul@prod+3)^0,f,c
  7272  001CC6  C034  F035         	movff	___flmul@grs+2,___flmul@grs+3
  7273  001CCA  C033  F034         	movff	___flmul@grs+1,___flmul@grs+2
  7274  001CCE  C032  F033         	movff	___flmul@grs,___flmul@grs+1
  7275  001CD2  6A32               	clrf	___flmul@grs^0,c
  7276  001CD4  5029               	movf	___flmul@a^0,w,c
  7277  001CD6  0226               	mulwf	(___flmul@b+1)^0,c
  7278  001CD8  CFF3 F03C          	movff	prodl,___flmul@temp
  7279  001CDC  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7280  001CE0  503C               	movf	___flmul@temp^0,w,c
  7281  001CE2  2632               	addwf	___flmul@grs^0,f,c
  7282  001CE4  503D               	movf	(___flmul@temp+1)^0,w,c
  7283  001CE6  2233               	addwfc	(___flmul@grs+1)^0,f,c
  7284  001CE8  0E00               	movlw	0
  7285  001CEA  2234               	addwfc	(___flmul@grs+2)^0,f,c
  7286  001CEC  0E00               	movlw	0
  7287  001CEE  2235               	addwfc	(___flmul@grs+3)^0,f,c
  7288  001CF0  502A               	movf	(___flmul@a+1)^0,w,c
  7289  001CF2  0225               	mulwf	___flmul@b^0,c
  7290  001CF4  CFF3 F03C          	movff	prodl,___flmul@temp
  7291  001CF8  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7292  001CFC  503C               	movf	___flmul@temp^0,w,c
  7293  001CFE  2632               	addwf	___flmul@grs^0,f,c
  7294  001D00  503D               	movf	(___flmul@temp+1)^0,w,c
  7295  001D02  2233               	addwfc	(___flmul@grs+1)^0,f,c
  7296  001D04  0E00               	movlw	0
  7297  001D06  2234               	addwfc	(___flmul@grs+2)^0,f,c
  7298  001D08  0E00               	movlw	0
  7299  001D0A  2235               	addwfc	(___flmul@grs+3)^0,f,c
  7300  001D0C  C034  F035         	movff	___flmul@grs+2,___flmul@grs+3
  7301  001D10  C033  F034         	movff	___flmul@grs+1,___flmul@grs+2
  7302  001D14  C032  F033         	movff	___flmul@grs,___flmul@grs+1
  7303  001D18  6A32               	clrf	___flmul@grs^0,c
  7304  001D1A  5029               	movf	___flmul@a^0,w,c
  7305  001D1C  0225               	mulwf	___flmul@b^0,c
  7306  001D1E  CFF3 F03C          	movff	prodl,___flmul@temp
  7307  001D22  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7308  001D26  503C               	movf	___flmul@temp^0,w,c
  7309  001D28  2632               	addwf	___flmul@grs^0,f,c
  7310  001D2A  503D               	movf	(___flmul@temp+1)^0,w,c
  7311  001D2C  2233               	addwfc	(___flmul@grs+1)^0,f,c
  7312  001D2E  0E00               	movlw	0
  7313  001D30  2234               	addwfc	(___flmul@grs+2)^0,f,c
  7314  001D32  0E00               	movlw	0
  7315  001D34  2235               	addwfc	(___flmul@grs+3)^0,f,c
  7316  001D36  502B               	movf	(___flmul@a+2)^0,w,c
  7317  001D38  0226               	mulwf	(___flmul@b+1)^0,c
  7318  001D3A  CFF3 F03C          	movff	prodl,___flmul@temp
  7319  001D3E  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7320  001D42  503C               	movf	___flmul@temp^0,w,c
  7321  001D44  2638               	addwf	___flmul@prod^0,f,c
  7322  001D46  503D               	movf	(___flmul@temp+1)^0,w,c
  7323  001D48  2239               	addwfc	(___flmul@prod+1)^0,f,c
  7324  001D4A  0E00               	movlw	0
  7325  001D4C  223A               	addwfc	(___flmul@prod+2)^0,f,c
  7326  001D4E  0E00               	movlw	0
  7327  001D50  223B               	addwfc	(___flmul@prod+3)^0,f,c
  7328  001D52  502A               	movf	(___flmul@a+1)^0,w,c
  7329  001D54  0227               	mulwf	(___flmul@b+2)^0,c
  7330  001D56  CFF3 F03C          	movff	prodl,___flmul@temp
  7331  001D5A  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7332  001D5E  503C               	movf	___flmul@temp^0,w,c
  7333  001D60  2638               	addwf	___flmul@prod^0,f,c
  7334  001D62  503D               	movf	(___flmul@temp+1)^0,w,c
  7335  001D64  2239               	addwfc	(___flmul@prod+1)^0,f,c
  7336  001D66  0E00               	movlw	0
  7337  001D68  223A               	addwfc	(___flmul@prod+2)^0,f,c
  7338  001D6A  0E00               	movlw	0
  7339  001D6C  223B               	addwfc	(___flmul@prod+3)^0,f,c
  7340  001D6E  502B               	movf	(___flmul@a+2)^0,w,c
  7341  001D70  0227               	mulwf	(___flmul@b+2)^0,c
  7342  001D72  CFF3 F03C          	movff	prodl,___flmul@temp
  7343  001D76  CFF4 F03D          	movff	prodh,___flmul@temp+1
  7344  001D7A  503C               	movf	___flmul@temp^0,w,c
  7345  001D7C  6E2D               	movwf	??___flmul^0,c
  7346  001D7E  503D               	movf	(___flmul@temp+1)^0,w,c
  7347  001D80  6E2E               	movwf	(??___flmul+1)^0,c
  7348  001D82  6A2F               	clrf	(??___flmul+2)^0,c
  7349  001D84  6A30               	clrf	(??___flmul+3)^0,c
  7350  001D86  C02F  F030         	movff	??___flmul+2,??___flmul+3
  7351  001D8A  C02E  F02F         	movff	??___flmul+1,??___flmul+2
  7352  001D8E  C02D  F02E         	movff	??___flmul,??___flmul+1
  7353  001D92  6A2D               	clrf	??___flmul^0,c
  7354  001D94  502D               	movf	??___flmul^0,w,c
  7355  001D96  2638               	addwf	___flmul@prod^0,f,c
  7356  001D98  502E               	movf	(??___flmul+1)^0,w,c
  7357  001D9A  2239               	addwfc	(___flmul@prod+1)^0,f,c
  7358  001D9C  502F               	movf	(??___flmul+2)^0,w,c
  7359  001D9E  223A               	addwfc	(___flmul@prod+2)^0,f,c
  7360  001DA0  5030               	movf	(??___flmul+3)^0,w,c
  7361  001DA2  223B               	addwfc	(___flmul@prod+3)^0,f,c
  7362  001DA4  C032  F02D         	movff	___flmul@grs,??___flmul
  7363  001DA8  C033  F02E         	movff	___flmul@grs+1,??___flmul+1
  7364  001DAC  C034  F02F         	movff	___flmul@grs+2,??___flmul+2
  7365  001DB0  C035  F030         	movff	___flmul@grs+3,??___flmul+3
  7366  001DB4  0E19               	movlw	25
  7367  001DB6  EFE2  F00E         	goto	u3140
  7368  001DBA                     u3145:
  7369  001DBA  90D8               	bcf	status,0,c
  7370  001DBC  3230               	rrcf	(??___flmul+3)^0,f,c
  7371  001DBE  322F               	rrcf	(??___flmul+2)^0,f,c
  7372  001DC0  322E               	rrcf	(??___flmul+1)^0,f,c
  7373  001DC2  322D               	rrcf	??___flmul^0,f,c
  7374  001DC4                     u3140:
  7375  001DC4  2EE8               	decfsz	wreg,f,c
  7376  001DC6  EFDD  F00E         	goto	u3145
  7377  001DCA  502D               	movf	??___flmul^0,w,c
  7378  001DCC  2638               	addwf	___flmul@prod^0,f,c
  7379  001DCE  502E               	movf	(??___flmul+1)^0,w,c
  7380  001DD0  2239               	addwfc	(___flmul@prod+1)^0,f,c
  7381  001DD2  502F               	movf	(??___flmul+2)^0,w,c
  7382  001DD4  223A               	addwfc	(___flmul@prod+2)^0,f,c
  7383  001DD6  5030               	movf	(??___flmul+3)^0,w,c
  7384  001DD8  223B               	addwfc	(___flmul@prod+3)^0,f,c
  7385  001DDA  C034  F035         	movff	___flmul@grs+2,___flmul@grs+3
  7386  001DDE  C033  F034         	movff	___flmul@grs+1,___flmul@grs+2
  7387  001DE2  C032  F033         	movff	___flmul@grs,___flmul@grs+1
  7388  001DE6  6A32               	clrf	___flmul@grs^0,c
  7389  001DE8  5036               	movf	___flmul@aexp^0,w,c
  7390  001DEA  C037  F02D         	movff	___flmul@bexp,??___flmul
  7391  001DEE  6A2E               	clrf	(??___flmul+1)^0,c
  7392  001DF0  262D               	addwf	??___flmul^0,f,c
  7393  001DF2  0E00               	movlw	0
  7394  001DF4  222E               	addwfc	(??___flmul+1)^0,f,c
  7395  001DF6  0E82               	movlw	130
  7396  001DF8  242D               	addwf	??___flmul^0,w,c
  7397  001DFA  6E3C               	movwf	___flmul@temp^0,c
  7398  001DFC  0EFF               	movlw	255
  7399  001DFE  202E               	addwfc	(??___flmul+1)^0,w,c
  7400  001E00  6E3D               	movwf	(___flmul@temp+1)^0,c
  7401  001E02  EF18  F00F         	goto	l3487
  7402  001E06                     l3481:
  7403  001E06  90D8               	bcf	status,0,c
  7404  001E08  3638               	rlcf	___flmul@prod^0,f,c
  7405  001E0A  3639               	rlcf	(___flmul@prod+1)^0,f,c
  7406  001E0C  363A               	rlcf	(___flmul@prod+2)^0,f,c
  7407  001E0E  363B               	rlcf	(___flmul@prod+3)^0,f,c
  7408  001E10  AE35               	btfss	(___flmul@grs+3)^0,7,c
  7409  001E12  EF0D  F00F         	goto	u3151
  7410  001E16  EF0F  F00F         	goto	u3150
  7411  001E1A                     u3151:
  7412  001E1A  EF10  F00F         	goto	l1364
  7413  001E1E                     u3150:
  7414  001E1E  8038               	bsf	___flmul@prod^0,0,c
  7415  001E20                     l1364:
  7416  001E20  90D8               	bcf	status,0,c
  7417  001E22  3632               	rlcf	___flmul@grs^0,f,c
  7418  001E24  3633               	rlcf	(___flmul@grs+1)^0,f,c
  7419  001E26  3634               	rlcf	(___flmul@grs+2)^0,f,c
  7420  001E28  3635               	rlcf	(___flmul@grs+3)^0,f,c
  7421  001E2A  063C               	decf	___flmul@temp^0,f,c
  7422  001E2C  A0D8               	btfss	status,0,c
  7423  001E2E  063D               	decf	(___flmul@temp+1)^0,f,c
  7424  001E30                     l3487:
  7425  001E30  AE3A               	btfss	(___flmul@prod+2)^0,7,c
  7426  001E32  EF1D  F00F         	goto	u3161
  7427  001E36  EF1F  F00F         	goto	u3160
  7428  001E3A                     u3161:
  7429  001E3A  EF03  F00F         	goto	l3481
  7430  001E3E                     u3160:
  7431  001E3E  0E00               	movlw	0
  7432  001E40  6E36               	movwf	___flmul@aexp^0,c
  7433  001E42  AE35               	btfss	(___flmul@grs+3)^0,7,c
  7434  001E44  EF26  F00F         	goto	u3171
  7435  001E48  EF28  F00F         	goto	u3170
  7436  001E4C                     u3171:
  7437  001E4C  EF4C  F00F         	goto	l1366
  7438  001E50                     u3170:
  7439  001E50  0EFF               	movlw	255
  7440  001E52  1432               	andwf	___flmul@grs^0,w,c
  7441  001E54  6E2D               	movwf	??___flmul^0,c
  7442  001E56  0EFF               	movlw	255
  7443  001E58  1433               	andwf	(___flmul@grs+1)^0,w,c
  7444  001E5A  6E2E               	movwf	(??___flmul+1)^0,c
  7445  001E5C  0EFF               	movlw	255
  7446  001E5E  1434               	andwf	(___flmul@grs+2)^0,w,c
  7447  001E60  6E2F               	movwf	(??___flmul+2)^0,c
  7448  001E62  0E7F               	movlw	127
  7449  001E64  1435               	andwf	(___flmul@grs+3)^0,w,c
  7450  001E66  6E30               	movwf	(??___flmul+3)^0,c
  7451  001E68  502D               	movf	??___flmul^0,w,c
  7452  001E6A  102E               	iorwf	(??___flmul+1)^0,w,c
  7453  001E6C  102F               	iorwf	(??___flmul+2)^0,w,c
  7454  001E6E  1030               	iorwf	(??___flmul+3)^0,w,c
  7455  001E70  B4D8               	btfsc	status,2,c
  7456  001E72  EF3D  F00F         	goto	u3181
  7457  001E76  EF3F  F00F         	goto	u3180
  7458  001E7A                     u3181:
  7459  001E7A  EF43  F00F         	goto	l1367
  7460  001E7E                     u3180:
  7461  001E7E                     l3495:
  7462  001E7E  0E01               	movlw	1
  7463  001E80  6E36               	movwf	___flmul@aexp^0,c
  7464  001E82  EF4C  F00F         	goto	l1366
  7465  001E86                     l1367:
  7466  001E86  A038               	btfss	___flmul@prod^0,0,c
  7467  001E88  EF48  F00F         	goto	u3191
  7468  001E8C  EF4A  F00F         	goto	u3190
  7469  001E90                     u3191:
  7470  001E90  EF4C  F00F         	goto	l1366
  7471  001E94                     u3190:
  7472  001E94  EF3F  F00F         	goto	l3495
  7473  001E98                     l1366:
  7474  001E98  5036               	movf	___flmul@aexp^0,w,c
  7475  001E9A  B4D8               	btfsc	status,2,c
  7476  001E9C  EF52  F00F         	goto	u3201
  7477  001EA0  EF54  F00F         	goto	u3200
  7478  001EA4                     u3201:
  7479  001EA4  EF78  F00F         	goto	l3507
  7480  001EA8                     u3200:
  7481  001EA8  0E01               	movlw	1
  7482  001EAA  2638               	addwf	___flmul@prod^0,f,c
  7483  001EAC  0E00               	movlw	0
  7484  001EAE  2239               	addwfc	(___flmul@prod+1)^0,f,c
  7485  001EB0  223A               	addwfc	(___flmul@prod+2)^0,f,c
  7486  001EB2  223B               	addwfc	(___flmul@prod+3)^0,f,c
  7487  001EB4  A03B               	btfss	(___flmul@prod+3)^0,0,c
  7488  001EB6  EF5F  F00F         	goto	u3211
  7489  001EBA  EF61  F00F         	goto	u3210
  7490  001EBE                     u3211:
  7491  001EBE  EF78  F00F         	goto	l3507
  7492  001EC2                     u3210:
  7493  001EC2  C038  F02D         	movff	___flmul@prod,??___flmul
  7494  001EC6  C039  F02E         	movff	___flmul@prod+1,??___flmul+1
  7495  001ECA  C03A  F02F         	movff	___flmul@prod+2,??___flmul+2
  7496  001ECE  C03B  F030         	movff	___flmul@prod+3,??___flmul+3
  7497  001ED2  3430               	rlcf	(??___flmul+3)^0,w,c
  7498  001ED4  3230               	rrcf	(??___flmul+3)^0,f,c
  7499  001ED6  322F               	rrcf	(??___flmul+2)^0,f,c
  7500  001ED8  322E               	rrcf	(??___flmul+1)^0,f,c
  7501  001EDA  322D               	rrcf	??___flmul^0,f,c
  7502  001EDC  C02D  F038         	movff	??___flmul,___flmul@prod
  7503  001EE0  C02E  F039         	movff	??___flmul+1,___flmul@prod+1
  7504  001EE4  C02F  F03A         	movff	??___flmul+2,___flmul@prod+2
  7505  001EE8  C030  F03B         	movff	??___flmul+3,___flmul@prod+3
  7506  001EEC  4A3C               	infsnz	___flmul@temp^0,f,c
  7507  001EEE  2A3D               	incf	(___flmul@temp+1)^0,f,c
  7508  001EF0                     l3507:
  7509  001EF0  BE3D               	btfsc	(___flmul@temp+1)^0,7,c
  7510  001EF2  EF83  F00F         	goto	u3221
  7511  001EF6  503D               	movf	(___flmul@temp+1)^0,w,c
  7512  001EF8  E108               	bnz	u3220
  7513  001EFA  283C               	incf	___flmul@temp^0,w,c
  7514  001EFC  A0D8               	btfss	status,0,c
  7515  001EFE  EF83  F00F         	goto	u3221
  7516  001F02  EF85  F00F         	goto	u3220
  7517  001F06                     u3221:
  7518  001F06  EF8F  F00F         	goto	l3511
  7519  001F0A                     u3220:
  7520  001F0A  0E00               	movlw	0
  7521  001F0C  6E38               	movwf	___flmul@prod^0,c
  7522  001F0E  0E00               	movlw	0
  7523  001F10  6E39               	movwf	(___flmul@prod+1)^0,c
  7524  001F12  0E80               	movlw	128
  7525  001F14  6E3A               	movwf	(___flmul@prod+2)^0,c
  7526  001F16  0E7F               	movlw	127
  7527  001F18  6E3B               	movwf	(___flmul@prod+3)^0,c
  7528  001F1A  EFBD  F00F         	goto	l3523
  7529  001F1E                     l3511:
  7530  001F1E  BE3D               	btfsc	(___flmul@temp+1)^0,7,c
  7531  001F20  EF9C  F00F         	goto	u3230
  7532  001F24  503D               	movf	(___flmul@temp+1)^0,w,c
  7533  001F26  E106               	bnz	u3231
  7534  001F28  043C               	decf	___flmul@temp^0,w,c
  7535  001F2A  B0D8               	btfsc	status,0,c
  7536  001F2C  EF9A  F00F         	goto	u3231
  7537  001F30  EF9C  F00F         	goto	u3230
  7538  001F34                     u3231:
  7539  001F34  EFA8  F00F         	goto	l1374
  7540  001F38                     u3230:
  7541  001F38  0E00               	movlw	0
  7542  001F3A  6E38               	movwf	___flmul@prod^0,c
  7543  001F3C  0E00               	movlw	0
  7544  001F3E  6E39               	movwf	(___flmul@prod+1)^0,c
  7545  001F40  0E00               	movlw	0
  7546  001F42  6E3A               	movwf	(___flmul@prod+2)^0,c
  7547  001F44  0E00               	movlw	0
  7548  001F46  6E3B               	movwf	(___flmul@prod+3)^0,c
  7549  001F48  0E00               	movlw	0
  7550  001F4A  6E31               	movwf	___flmul@sign^0,c
  7551  001F4C  EFBD  F00F         	goto	l3523
  7552  001F50                     l1374:
  7553  001F50  C03C  F037         	movff	___flmul@temp,___flmul@bexp
  7554  001F54  0EFF               	movlw	255
  7555  001F56  1638               	andwf	___flmul@prod^0,f,c
  7556  001F58  0EFF               	movlw	255
  7557  001F5A  1639               	andwf	(___flmul@prod+1)^0,f,c
  7558  001F5C  0E7F               	movlw	127
  7559  001F5E  163A               	andwf	(___flmul@prod+2)^0,f,c
  7560  001F60  0E00               	movlw	0
  7561  001F62  163B               	andwf	(___flmul@prod+3)^0,f,c
  7562  001F64  A037               	btfss	___flmul@bexp^0,0,c
  7563  001F66  EFB7  F00F         	goto	u3241
  7564  001F6A  EFB9  F00F         	goto	u3240
  7565  001F6E                     u3241:
  7566  001F6E  EFBA  F00F         	goto	l3521
  7567  001F72                     u3240:
  7568  001F72  8E3A               	bsf	(___flmul@prod+2)^0,7,c
  7569  001F74                     l3521:
  7570  001F74  90D8               	bcf	status,0,c
  7571  001F76  3037               	rrcf	___flmul@bexp^0,w,c
  7572  001F78  6E3B               	movwf	(___flmul@prod+3)^0,c
  7573  001F7A                     l3523:
  7574  001F7A  5031               	movf	___flmul@sign^0,w,c
  7575  001F7C  123B               	iorwf	(___flmul@prod+3)^0,f,c
  7576  001F7E  C038  F025         	movff	___flmul@prod,?___flmul
  7577  001F82  C039  F026         	movff	___flmul@prod+1,?___flmul+1
  7578  001F86  C03A  F027         	movff	___flmul@prod+2,?___flmul+2
  7579  001F8A  C03B  F028         	movff	___flmul@prod+3,?___flmul+3
  7580  001F8E                     l1361:
  7581  001F8E  0012               	return		;funcret
  7582  001F90                     __end_of___flmul:
  7583                           	callstack 0
  7584                           
  7585 ;; *************** function ___flge *****************
  7586 ;; Defined at:
  7587 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  ff1             4   36[COMRAM] unsigned char 
  7590 ;;  ff2             4   40[COMRAM] unsigned char 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;		None
  7593 ;; Return value:  Size  Location     Type
  7594 ;;		None               void
  7595 ;; Registers used:
  7596 ;;		wreg, status,2, status,0
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7602 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7606 ;;Total ram usage:       12 bytes
  7607 ;; Hardware stack levels used: 1
  7608 ;; Hardware stack levels required when called: 7
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_colourcards_readRGBC
  7613 ;;		_left
  7614 ;;		_right
  7615 ;;		_colourcards_testingRGBC
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text44
  7620  0033BC                     __ptext44:
  7621                           	callstack 0
  7622  0033BC                     ___flge:
  7623                           	callstack 20
  7624  0033BC  0E00               	movlw	0
  7625  0033BE  1425               	andwf	___flge@ff1^0,w,c
  7626  0033C0  6E2D               	movwf	??___flge^0,c
  7627  0033C2  0E00               	movlw	0
  7628  0033C4  1426               	andwf	(___flge@ff1+1)^0,w,c
  7629  0033C6  6E2E               	movwf	(??___flge+1)^0,c
  7630  0033C8  0E80               	movlw	128
  7631  0033CA  1427               	andwf	(___flge@ff1+2)^0,w,c
  7632  0033CC  6E2F               	movwf	(??___flge+2)^0,c
  7633  0033CE  0E7F               	movlw	127
  7634  0033D0  1428               	andwf	(___flge@ff1+3)^0,w,c
  7635  0033D2  6E30               	movwf	(??___flge+3)^0,c
  7636  0033D4  502D               	movf	??___flge^0,w,c
  7637  0033D6  102E               	iorwf	(??___flge+1)^0,w,c
  7638  0033D8  102F               	iorwf	(??___flge+2)^0,w,c
  7639  0033DA  1030               	iorwf	(??___flge+3)^0,w,c
  7640  0033DC  A4D8               	btfss	status,2,c
  7641  0033DE  EFF3  F019         	goto	u3251
  7642  0033E2  EFF5  F019         	goto	u3250
  7643  0033E6                     u3251:
  7644  0033E6  EFFD  F019         	goto	l3533
  7645  0033EA                     u3250:
  7646  0033EA  0E00               	movlw	0
  7647  0033EC  6E25               	movwf	___flge@ff1^0,c
  7648  0033EE  0E00               	movlw	0
  7649  0033F0  6E26               	movwf	(___flge@ff1+1)^0,c
  7650  0033F2  0E00               	movlw	0
  7651  0033F4  6E27               	movwf	(___flge@ff1+2)^0,c
  7652  0033F6  0E00               	movlw	0
  7653  0033F8  6E28               	movwf	(___flge@ff1+3)^0,c
  7654  0033FA                     l3533:
  7655  0033FA  0E00               	movlw	0
  7656  0033FC  1429               	andwf	___flge@ff2^0,w,c
  7657  0033FE  6E2D               	movwf	??___flge^0,c
  7658  003400  0E00               	movlw	0
  7659  003402  142A               	andwf	(___flge@ff2+1)^0,w,c
  7660  003404  6E2E               	movwf	(??___flge+1)^0,c
  7661  003406  0E80               	movlw	128
  7662  003408  142B               	andwf	(___flge@ff2+2)^0,w,c
  7663  00340A  6E2F               	movwf	(??___flge+2)^0,c
  7664  00340C  0E7F               	movlw	127
  7665  00340E  142C               	andwf	(___flge@ff2+3)^0,w,c
  7666  003410  6E30               	movwf	(??___flge+3)^0,c
  7667  003412  502D               	movf	??___flge^0,w,c
  7668  003414  102E               	iorwf	(??___flge+1)^0,w,c
  7669  003416  102F               	iorwf	(??___flge+2)^0,w,c
  7670  003418  1030               	iorwf	(??___flge+3)^0,w,c
  7671  00341A  A4D8               	btfss	status,2,c
  7672  00341C  EF12  F01A         	goto	u3261
  7673  003420  EF14  F01A         	goto	u3260
  7674  003424                     u3261:
  7675  003424  EF1C  F01A         	goto	l3537
  7676  003428                     u3260:
  7677  003428  0E00               	movlw	0
  7678  00342A  6E29               	movwf	___flge@ff2^0,c
  7679  00342C  0E00               	movlw	0
  7680  00342E  6E2A               	movwf	(___flge@ff2+1)^0,c
  7681  003430  0E00               	movlw	0
  7682  003432  6E2B               	movwf	(___flge@ff2+2)^0,c
  7683  003434  0E00               	movlw	0
  7684  003436  6E2C               	movwf	(___flge@ff2+3)^0,c
  7685  003438                     l3537:
  7686  003438  AE28               	btfss	(___flge@ff1+3)^0,7,c
  7687  00343A  EF21  F01A         	goto	u3271
  7688  00343E  EF23  F01A         	goto	u3270
  7689  003442                     u3271:
  7690  003442  EF2C  F01A         	goto	l3541
  7691  003446                     u3270:
  7692  003446  6C25               	negf	___flge@ff1^0,c
  7693  003448  1E26               	comf	(___flge@ff1+1)^0,f,c
  7694  00344A  B0D8               	btfsc	status,0,c
  7695  00344C  2A26               	incf	(___flge@ff1+1)^0,f,c
  7696  00344E  1E27               	comf	(___flge@ff1+2)^0,f,c
  7697  003450  B0D8               	btfsc	status,0,c
  7698  003452  2A27               	incf	(___flge@ff1+2)^0,f,c
  7699  003454  0E80               	movlw	128
  7700  003456  5628               	subfwb	(___flge@ff1+3)^0,f,c
  7701  003458                     l3541:
  7702  003458  AE2C               	btfss	(___flge@ff2+3)^0,7,c
  7703  00345A  EF31  F01A         	goto	u3281
  7704  00345E  EF33  F01A         	goto	u3280
  7705  003462                     u3281:
  7706  003462  EF3C  F01A         	goto	l1008
  7707  003466                     u3280:
  7708  003466  6C29               	negf	___flge@ff2^0,c
  7709  003468  1E2A               	comf	(___flge@ff2+1)^0,f,c
  7710  00346A  B0D8               	btfsc	status,0,c
  7711  00346C  2A2A               	incf	(___flge@ff2+1)^0,f,c
  7712  00346E  1E2B               	comf	(___flge@ff2+2)^0,f,c
  7713  003470  B0D8               	btfsc	status,0,c
  7714  003472  2A2B               	incf	(___flge@ff2+2)^0,f,c
  7715  003474  0E80               	movlw	128
  7716  003476  562C               	subfwb	(___flge@ff2+3)^0,f,c
  7717  003478                     l1008:
  7718  003478  0E00               	movlw	0
  7719  00347A  1A25               	xorwf	___flge@ff1^0,f,c
  7720  00347C  0E00               	movlw	0
  7721  00347E  1A26               	xorwf	(___flge@ff1+1)^0,f,c
  7722  003480  0E00               	movlw	0
  7723  003482  1A27               	xorwf	(___flge@ff1+2)^0,f,c
  7724  003484  0E80               	movlw	128
  7725  003486  1A28               	xorwf	(___flge@ff1+3)^0,f,c
  7726  003488  0E00               	movlw	0
  7727  00348A  1A29               	xorwf	___flge@ff2^0,f,c
  7728  00348C  0E00               	movlw	0
  7729  00348E  1A2A               	xorwf	(___flge@ff2+1)^0,f,c
  7730  003490  0E00               	movlw	0
  7731  003492  1A2B               	xorwf	(___flge@ff2+2)^0,f,c
  7732  003494  0E80               	movlw	128
  7733  003496  1A2C               	xorwf	(___flge@ff2+3)^0,f,c
  7734  003498  5029               	movf	___flge@ff2^0,w,c
  7735  00349A  5C25               	subwf	___flge@ff1^0,w,c
  7736  00349C  502A               	movf	(___flge@ff2+1)^0,w,c
  7737  00349E  5826               	subwfb	(___flge@ff1+1)^0,w,c
  7738  0034A0  502B               	movf	(___flge@ff2+2)^0,w,c
  7739  0034A2  5827               	subwfb	(___flge@ff1+2)^0,w,c
  7740  0034A4  502C               	movf	(___flge@ff2+3)^0,w,c
  7741  0034A6  5828               	subwfb	(___flge@ff1+3)^0,w,c
  7742  0034A8  B0D8               	btfsc	status,0,c
  7743  0034AA  EF59  F01A         	goto	u3291
  7744  0034AE  EF5B  F01A         	goto	u3290
  7745  0034B2                     u3291:
  7746  0034B2  EF5E  F01A         	goto	l3547
  7747  0034B6                     u3290:
  7748  0034B6  90D8               	bcf	status,0,c
  7749  0034B8  EF5F  F01A         	goto	l1013
  7750  0034BC                     l3547:
  7751  0034BC  80D8               	bsf	status,0,c
  7752  0034BE                     l1013:
  7753  0034BE  0012               	return		;funcret
  7754  0034C0                     __end_of___flge:
  7755                           	callstack 0
  7756                           
  7757 ;; *************** function ___fladd *****************
  7758 ;; Defined at:
  7759 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  b               4   61[COMRAM] unsigned char 
  7762 ;;  a               4   65[COMRAM] unsigned char 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  grs             1   76[COMRAM] unsigned char 
  7765 ;;  bexp            1   75[COMRAM] unsigned char 
  7766 ;;  aexp            1   74[COMRAM] unsigned char 
  7767 ;;  signs           1   73[COMRAM] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  4   61[COMRAM] unsigned char 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7777 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7778 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7779 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7780 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7781 ;;Total ram usage:       16 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 7
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_left
  7788 ;;		_right
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text45
  7793  0016A6                     __ptext45:
  7794                           	callstack 0
  7795  0016A6                     ___fladd:
  7796                           	callstack 20
  7797  0016A6  5041               	movf	(___fladd@b+3)^0,w,c
  7798  0016A8  0B80               	andlw	128
  7799  0016AA  6E4A               	movwf	___fladd@signs^0,c
  7800  0016AC  5041               	movf	(___fladd@b+3)^0,w,c
  7801  0016AE  2441               	addwf	(___fladd@b+3)^0,w,c
  7802  0016B0  6E4C               	movwf	___fladd@bexp^0,c
  7803  0016B2  AE40               	btfss	(___fladd@b+2)^0,7,c
  7804  0016B4  EF5E  F00B         	goto	u2671
  7805  0016B8  EF60  F00B         	goto	u2670
  7806  0016BC                     u2671:
  7807  0016BC  EF61  F00B         	goto	l3203
  7808  0016C0                     u2670:
  7809  0016C0  804C               	bsf	___fladd@bexp^0,0,c
  7810  0016C2                     l3203:
  7811  0016C2  504C               	movf	___fladd@bexp^0,w,c
  7812  0016C4  B4D8               	btfsc	status,2,c
  7813  0016C6  EF67  F00B         	goto	u2681
  7814  0016CA  EF69  F00B         	goto	u2680
  7815  0016CE                     u2681:
  7816  0016CE  EF7E  F00B         	goto	l3213
  7817  0016D2                     u2680:
  7818  0016D2  284C               	incf	___fladd@bexp^0,w,c
  7819  0016D4  A4D8               	btfss	status,2,c
  7820  0016D6  EF6F  F00B         	goto	u2691
  7821  0016DA  EF71  F00B         	goto	u2690
  7822  0016DE                     u2691:
  7823  0016DE  EF79  F00B         	goto	l3209
  7824  0016E2                     u2690:
  7825  0016E2  0E00               	movlw	0
  7826  0016E4  6E3E               	movwf	___fladd@b^0,c
  7827  0016E6  0E00               	movlw	0
  7828  0016E8  6E3F               	movwf	(___fladd@b+1)^0,c
  7829  0016EA  0E00               	movlw	0
  7830  0016EC  6E40               	movwf	(___fladd@b+2)^0,c
  7831  0016EE  0E00               	movlw	0
  7832  0016F0  6E41               	movwf	(___fladd@b+3)^0,c
  7833  0016F2                     l3209:
  7834  0016F2  8E40               	bsf	(___fladd@b+2)^0,7,c
  7835  0016F4  0E00               	movlw	0
  7836  0016F6  6E41               	movwf	(___fladd@b+3)^0,c
  7837  0016F8  EF86  F00B         	goto	l3215
  7838  0016FC                     l3213:
  7839  0016FC  0E00               	movlw	0
  7840  0016FE  6E3E               	movwf	___fladd@b^0,c
  7841  001700  0E00               	movlw	0
  7842  001702  6E3F               	movwf	(___fladd@b+1)^0,c
  7843  001704  0E00               	movlw	0
  7844  001706  6E40               	movwf	(___fladd@b+2)^0,c
  7845  001708  0E00               	movlw	0
  7846  00170A  6E41               	movwf	(___fladd@b+3)^0,c
  7847  00170C                     l3215:
  7848  00170C  5045               	movf	(___fladd@a+3)^0,w,c
  7849  00170E  0B80               	andlw	128
  7850  001710  6E4B               	movwf	___fladd@aexp^0,c
  7851  001712  504A               	movf	___fladd@signs^0,w,c
  7852  001714  184B               	xorwf	___fladd@aexp^0,w,c
  7853  001716  B4D8               	btfsc	status,2,c
  7854  001718  EF90  F00B         	goto	u2701
  7855  00171C  EF92  F00B         	goto	u2700
  7856  001720                     u2701:
  7857  001720  EF93  F00B         	goto	l3221
  7858  001724                     u2700:
  7859  001724  8C4A               	bsf	___fladd@signs^0,6,c
  7860  001726                     l3221:
  7861  001726  5045               	movf	(___fladd@a+3)^0,w,c
  7862  001728  2445               	addwf	(___fladd@a+3)^0,w,c
  7863  00172A  6E4B               	movwf	___fladd@aexp^0,c
  7864  00172C  AE44               	btfss	(___fladd@a+2)^0,7,c
  7865  00172E  EF9B  F00B         	goto	u2711
  7866  001732  EF9D  F00B         	goto	u2710
  7867  001736                     u2711:
  7868  001736  EF9E  F00B         	goto	l3227
  7869  00173A                     u2710:
  7870  00173A  804B               	bsf	___fladd@aexp^0,0,c
  7871  00173C                     l3227:
  7872  00173C  504B               	movf	___fladd@aexp^0,w,c
  7873  00173E  B4D8               	btfsc	status,2,c
  7874  001740  EFA4  F00B         	goto	u2721
  7875  001744  EFA6  F00B         	goto	u2720
  7876  001748                     u2721:
  7877  001748  EFBB  F00B         	goto	l3237
  7878  00174C                     u2720:
  7879  00174C  284B               	incf	___fladd@aexp^0,w,c
  7880  00174E  A4D8               	btfss	status,2,c
  7881  001750  EFAC  F00B         	goto	u2731
  7882  001754  EFAE  F00B         	goto	u2730
  7883  001758                     u2731:
  7884  001758  EFB6  F00B         	goto	l3233
  7885  00175C                     u2730:
  7886  00175C  0E00               	movlw	0
  7887  00175E  6E42               	movwf	___fladd@a^0,c
  7888  001760  0E00               	movlw	0
  7889  001762  6E43               	movwf	(___fladd@a+1)^0,c
  7890  001764  0E00               	movlw	0
  7891  001766  6E44               	movwf	(___fladd@a+2)^0,c
  7892  001768  0E00               	movlw	0
  7893  00176A  6E45               	movwf	(___fladd@a+3)^0,c
  7894  00176C                     l3233:
  7895  00176C  8E44               	bsf	(___fladd@a+2)^0,7,c
  7896  00176E  0E00               	movlw	0
  7897  001770  6E45               	movwf	(___fladd@a+3)^0,c
  7898  001772  EFC3  F00B         	goto	l3239
  7899  001776                     l3237:
  7900  001776  0E00               	movlw	0
  7901  001778  6E42               	movwf	___fladd@a^0,c
  7902  00177A  0E00               	movlw	0
  7903  00177C  6E43               	movwf	(___fladd@a+1)^0,c
  7904  00177E  0E00               	movlw	0
  7905  001780  6E44               	movwf	(___fladd@a+2)^0,c
  7906  001782  0E00               	movlw	0
  7907  001784  6E45               	movwf	(___fladd@a+3)^0,c
  7908  001786                     l3239:
  7909  001786  504C               	movf	___fladd@bexp^0,w,c
  7910  001788  5C4B               	subwf	___fladd@aexp^0,w,c
  7911  00178A  B0D8               	btfsc	status,0,c
  7912  00178C  EFCA  F00B         	goto	u2741
  7913  001790  EFCC  F00B         	goto	u2740
  7914  001794                     u2741:
  7915  001794  EFF3  F00B         	goto	l3275
  7916  001798                     u2740:
  7917  001798  AC4A               	btfss	___fladd@signs^0,6,c
  7918  00179A  EFD1  F00B         	goto	u2751
  7919  00179E  EFD3  F00B         	goto	u2750
  7920  0017A2                     u2751:
  7921  0017A2  EFD5  F00B         	goto	l3245
  7922  0017A6                     u2750:
  7923  0017A6  0E80               	movlw	128
  7924  0017A8  1A4A               	xorwf	___fladd@signs^0,f,c
  7925  0017AA                     l3245:
  7926  0017AA  C04C  F04D         	movff	___fladd@bexp,___fladd@grs
  7927  0017AE  C04B  F04C         	movff	___fladd@aexp,___fladd@bexp
  7928  0017B2  C04D  F04B         	movff	___fladd@grs,___fladd@aexp
  7929  0017B6  C03E  F04D         	movff	___fladd@b,___fladd@grs
  7930  0017BA  C042  F03E         	movff	___fladd@a,___fladd@b
  7931  0017BE  C04D  F042         	movff	___fladd@grs,___fladd@a
  7932  0017C2  C03F  F04D         	movff	___fladd@b+1,___fladd@grs
  7933  0017C6  C043  F03F         	movff	___fladd@a+1,___fladd@b+1
  7934  0017CA  C04D  F043         	movff	___fladd@grs,___fladd@a+1
  7935  0017CE  C040  F04D         	movff	___fladd@b+2,___fladd@grs
  7936  0017D2  C044  F040         	movff	___fladd@a+2,___fladd@b+2
  7937  0017D6  C04D  F044         	movff	___fladd@grs,___fladd@a+2
  7938  0017DA  C041  F04D         	movff	___fladd@b+3,___fladd@grs
  7939  0017DE  C045  F041         	movff	___fladd@a+3,___fladd@b+3
  7940  0017E2  C04D  F045         	movff	___fladd@grs,___fladd@a+3
  7941  0017E6                     l3275:
  7942  0017E6  0E00               	movlw	0
  7943  0017E8  6E4D               	movwf	___fladd@grs^0,c
  7944  0017EA  504C               	movf	___fladd@bexp^0,w,c
  7945  0017EC  C04B  F046         	movff	___fladd@aexp,??___fladd
  7946  0017F0  6A47               	clrf	(??___fladd+1)^0,c
  7947  0017F2  5E46               	subwf	??___fladd^0,f,c
  7948  0017F4  0E00               	movlw	0
  7949  0017F6  5A47               	subwfb	(??___fladd+1)^0,f,c
  7950  0017F8  BE47               	btfsc	(??___fladd+1)^0,7,c
  7951  0017FA  EF08  F00C         	goto	u2761
  7952  0017FE  5047               	movf	(??___fladd+1)^0,w,c
  7953  001800  E109               	bnz	u2760
  7954  001802  0E1A               	movlw	26
  7955  001804  5C46               	subwf	??___fladd^0,w,c
  7956  001806  A0D8               	btfss	status,0,c
  7957  001808  EF08  F00C         	goto	u2761
  7958  00180C  EF0A  F00C         	goto	u2760
  7959  001810                     u2761:
  7960  001810  EF41  F00C         	goto	l1272
  7961  001814                     u2760:
  7962  001814  503E               	movf	___fladd@b^0,w,c
  7963  001816  103F               	iorwf	(___fladd@b+1)^0,w,c
  7964  001818  1040               	iorwf	(___fladd@b+2)^0,w,c
  7965  00181A  1041               	iorwf	(___fladd@b+3)^0,w,c
  7966  00181C  A4D8               	btfss	status,2,c
  7967  00181E  EF13  F00C         	goto	u2771
  7968  001822  EF16  F00C         	goto	u2770
  7969  001826                     u2771:
  7970  001826  0E01               	movlw	1
  7971  001828  EF17  F00C         	goto	u2780
  7972  00182C                     u2770:
  7973  00182C  0E00               	movlw	0
  7974  00182E                     u2780:
  7975  00182E  6E4D               	movwf	___fladd@grs^0,c
  7976  001830  0E00               	movlw	0
  7977  001832  6E3E               	movwf	___fladd@b^0,c
  7978  001834  0E00               	movlw	0
  7979  001836  6E3F               	movwf	(___fladd@b+1)^0,c
  7980  001838  0E00               	movlw	0
  7981  00183A  6E40               	movwf	(___fladd@b+2)^0,c
  7982  00183C  0E00               	movlw	0
  7983  00183E  6E41               	movwf	(___fladd@b+3)^0,c
  7984  001840  C04B  F04C         	movff	___fladd@aexp,___fladd@bexp
  7985  001844  EF4A  F00C         	goto	l1271
  7986  001848                     l1273:
  7987  001848  A04D               	btfss	___fladd@grs^0,0,c
  7988  00184A  EF29  F00C         	goto	u2791
  7989  00184E  EF2B  F00C         	goto	u2790
  7990  001852                     u2791:
  7991  001852  EF31  F00C         	goto	l3287
  7992  001856                     u2790:
  7993  001856  90D8               	bcf	status,0,c
  7994  001858  304D               	rrcf	___fladd@grs^0,w,c
  7995  00185A  0901               	iorlw	1
  7996  00185C  6E4D               	movwf	___fladd@grs^0,c
  7997  00185E  EF33  F00C         	goto	l3289
  7998  001862                     l3287:
  7999  001862  90D8               	bcf	status,0,c
  8000  001864  324D               	rrcf	___fladd@grs^0,f,c
  8001  001866                     l3289:
  8002  001866  A03E               	btfss	___fladd@b^0,0,c
  8003  001868  EF38  F00C         	goto	u2801
  8004  00186C  EF3A  F00C         	goto	u2800
  8005  001870                     u2801:
  8006  001870  EF3B  F00C         	goto	l3293
  8007  001874                     u2800:
  8008  001874  8E4D               	bsf	___fladd@grs^0,7,c
  8009  001876                     l3293:
  8010  001876  3441               	rlcf	(___fladd@b+3)^0,w,c
  8011  001878  3241               	rrcf	(___fladd@b+3)^0,f,c
  8012  00187A  3240               	rrcf	(___fladd@b+2)^0,f,c
  8013  00187C  323F               	rrcf	(___fladd@b+1)^0,f,c
  8014  00187E  323E               	rrcf	___fladd@b^0,f,c
  8015  001880  2A4C               	incf	___fladd@bexp^0,f,c
  8016  001882                     l1272:
  8017  001882  504B               	movf	___fladd@aexp^0,w,c
  8018  001884  5C4C               	subwf	___fladd@bexp^0,w,c
  8019  001886  A0D8               	btfss	status,0,c
  8020  001888  EF48  F00C         	goto	u2811
  8021  00188C  EF4A  F00C         	goto	u2810
  8022  001890                     u2811:
  8023  001890  EF24  F00C         	goto	l1273
  8024  001894                     u2810:
  8025  001894                     l1271:
  8026  001894  BC4A               	btfsc	___fladd@signs^0,6,c
  8027  001896  EF4F  F00C         	goto	u2821
  8028  00189A  EF51  F00C         	goto	u2820
  8029  00189E                     u2821:
  8030  00189E  EF91  F00C         	goto	l3321
  8031  0018A2                     u2820:
  8032  0018A2  504C               	movf	___fladd@bexp^0,w,c
  8033  0018A4  A4D8               	btfss	status,2,c
  8034  0018A6  EF57  F00C         	goto	u2831
  8035  0018AA  EF59  F00C         	goto	u2830
  8036  0018AE                     u2831:
  8037  0018AE  EF63  F00C         	goto	l3303
  8038  0018B2                     u2830:
  8039  0018B2  0E00               	movlw	0
  8040  0018B4  6E3E               	movwf	?___fladd^0,c
  8041  0018B6  0E00               	movlw	0
  8042  0018B8  6E3F               	movwf	(?___fladd+1)^0,c
  8043  0018BA  0E00               	movlw	0
  8044  0018BC  6E40               	movwf	(?___fladd+2)^0,c
  8045  0018BE  0E00               	movlw	0
  8046  0018C0  6E41               	movwf	(?___fladd+3)^0,c
  8047  0018C2  EFB2  F00D         	goto	l1280
  8048  0018C6                     l3303:
  8049  0018C6  5042               	movf	___fladd@a^0,w,c
  8050  0018C8  263E               	addwf	___fladd@b^0,f,c
  8051  0018CA  5043               	movf	(___fladd@a+1)^0,w,c
  8052  0018CC  223F               	addwfc	(___fladd@b+1)^0,f,c
  8053  0018CE  5044               	movf	(___fladd@a+2)^0,w,c
  8054  0018D0  2240               	addwfc	(___fladd@b+2)^0,f,c
  8055  0018D2  5045               	movf	(___fladd@a+3)^0,w,c
  8056  0018D4  2241               	addwfc	(___fladd@b+3)^0,f,c
  8057  0018D6  A041               	btfss	(___fladd@b+3)^0,0,c
  8058  0018D8  EF70  F00C         	goto	u2841
  8059  0018DC  EF72  F00C         	goto	u2840
  8060  0018E0                     u2841:
  8061  0018E0  EF1E  F00D         	goto	l3357
  8062  0018E4                     u2840:
  8063  0018E4  A04D               	btfss	___fladd@grs^0,0,c
  8064  0018E6  EF77  F00C         	goto	u2851
  8065  0018EA  EF79  F00C         	goto	u2850
  8066  0018EE                     u2851:
  8067  0018EE  EF7F  F00C         	goto	l3311
  8068  0018F2                     u2850:
  8069  0018F2  90D8               	bcf	status,0,c
  8070  0018F4  304D               	rrcf	___fladd@grs^0,w,c
  8071  0018F6  0901               	iorlw	1
  8072  0018F8  6E4D               	movwf	___fladd@grs^0,c
  8073  0018FA  EF81  F00C         	goto	l3313
  8074  0018FE                     l3311:
  8075  0018FE  90D8               	bcf	status,0,c
  8076  001900  324D               	rrcf	___fladd@grs^0,f,c
  8077  001902                     l3313:
  8078  001902  A03E               	btfss	___fladd@b^0,0,c
  8079  001904  EF86  F00C         	goto	u2861
  8080  001908  EF88  F00C         	goto	u2860
  8081  00190C                     u2861:
  8082  00190C  EF89  F00C         	goto	l3317
  8083  001910                     u2860:
  8084  001910  8E4D               	bsf	___fladd@grs^0,7,c
  8085  001912                     l3317:
  8086  001912  3441               	rlcf	(___fladd@b+3)^0,w,c
  8087  001914  3241               	rrcf	(___fladd@b+3)^0,f,c
  8088  001916  3240               	rrcf	(___fladd@b+2)^0,f,c
  8089  001918  323F               	rrcf	(___fladd@b+1)^0,f,c
  8090  00191A  323E               	rrcf	___fladd@b^0,f,c
  8091  00191C  2A4C               	incf	___fladd@bexp^0,f,c
  8092  00191E  EF1E  F00D         	goto	l3357
  8093  001922                     l3321:
  8094  001922  5042               	movf	___fladd@a^0,w,c
  8095  001924  5C3E               	subwf	___fladd@b^0,w,c
  8096  001926  5043               	movf	(___fladd@a+1)^0,w,c
  8097  001928  583F               	subwfb	(___fladd@b+1)^0,w,c
  8098  00192A  5044               	movf	(___fladd@a+2)^0,w,c
  8099  00192C  5840               	subwfb	(___fladd@b+2)^0,w,c
  8100  00192E  5041               	movf	(___fladd@b+3)^0,w,c
  8101  001930  0A80               	xorlw	128
  8102  001932  6E46               	movwf	??___fladd^0,c
  8103  001934  5045               	movf	(___fladd@a+3)^0,w,c
  8104  001936  0A80               	xorlw	128
  8105  001938  5846               	subwfb	??___fladd^0,w,c
  8106  00193A  B0D8               	btfsc	status,0,c
  8107  00193C  EFA2  F00C         	goto	u2871
  8108  001940  EFA4  F00C         	goto	u2870
  8109  001944                     u2871:
  8110  001944  EFCF  F00C         	goto	l3331
  8111  001948                     u2870:
  8112  001948  503E               	movf	___fladd@b^0,w,c
  8113  00194A  5C42               	subwf	___fladd@a^0,w,c
  8114  00194C  6E46               	movwf	??___fladd^0,c
  8115  00194E  503F               	movf	(___fladd@b+1)^0,w,c
  8116  001950  5843               	subwfb	(___fladd@a+1)^0,w,c
  8117  001952  6E47               	movwf	(??___fladd+1)^0,c
  8118  001954  5040               	movf	(___fladd@b+2)^0,w,c
  8119  001956  5844               	subwfb	(___fladd@a+2)^0,w,c
  8120  001958  6E48               	movwf	(??___fladd+2)^0,c
  8121  00195A  5041               	movf	(___fladd@b+3)^0,w,c
  8122  00195C  5845               	subwfb	(___fladd@a+3)^0,w,c
  8123  00195E  6E49               	movwf	(??___fladd+3)^0,c
  8124  001960  0EFF               	movlw	255
  8125  001962  2446               	addwf	??___fladd^0,w,c
  8126  001964  6E3E               	movwf	___fladd@b^0,c
  8127  001966  0EFF               	movlw	255
  8128  001968  2047               	addwfc	(??___fladd+1)^0,w,c
  8129  00196A  6E3F               	movwf	(___fladd@b+1)^0,c
  8130  00196C  0EFF               	movlw	255
  8131  00196E  2048               	addwfc	(??___fladd+2)^0,w,c
  8132  001970  6E40               	movwf	(___fladd@b+2)^0,c
  8133  001972  0EFF               	movlw	255
  8134  001974  2049               	addwfc	(??___fladd+3)^0,w,c
  8135  001976  6E41               	movwf	(___fladd@b+3)^0,c
  8136  001978  0E80               	movlw	128
  8137  00197A  1A4A               	xorwf	___fladd@signs^0,f,c
  8138  00197C  6C4D               	negf	___fladd@grs^0,c
  8139  00197E  504D               	movf	___fladd@grs^0,w,c
  8140  001980  A4D8               	btfss	status,2,c
  8141  001982  EFC5  F00C         	goto	u2881
  8142  001986  EFC7  F00C         	goto	u2880
  8143  00198A                     u2881:
  8144  00198A  EFD7  F00C         	goto	l1288
  8145  00198E                     u2880:
  8146  00198E  0E01               	movlw	1
  8147  001990  263E               	addwf	___fladd@b^0,f,c
  8148  001992  0E00               	movlw	0
  8149  001994  223F               	addwfc	(___fladd@b+1)^0,f,c
  8150  001996  2240               	addwfc	(___fladd@b+2)^0,f,c
  8151  001998  2241               	addwfc	(___fladd@b+3)^0,f,c
  8152  00199A  EFD7  F00C         	goto	l1288
  8153  00199E                     l3331:
  8154  00199E  5042               	movf	___fladd@a^0,w,c
  8155  0019A0  5E3E               	subwf	___fladd@b^0,f,c
  8156  0019A2  5043               	movf	(___fladd@a+1)^0,w,c
  8157  0019A4  5A3F               	subwfb	(___fladd@b+1)^0,f,c
  8158  0019A6  5044               	movf	(___fladd@a+2)^0,w,c
  8159  0019A8  5A40               	subwfb	(___fladd@b+2)^0,f,c
  8160  0019AA  5045               	movf	(___fladd@a+3)^0,w,c
  8161  0019AC  5A41               	subwfb	(___fladd@b+3)^0,f,c
  8162  0019AE                     l1288:
  8163  0019AE  503E               	movf	___fladd@b^0,w,c
  8164  0019B0  103F               	iorwf	(___fladd@b+1)^0,w,c
  8165  0019B2  1040               	iorwf	(___fladd@b+2)^0,w,c
  8166  0019B4  1041               	iorwf	(___fladd@b+3)^0,w,c
  8167  0019B6  A4D8               	btfss	status,2,c
  8168  0019B8  EFE0  F00C         	goto	u2891
  8169  0019BC  EFE2  F00C         	goto	u2890
  8170  0019C0                     u2891:
  8171  0019C0  EF17  F00D         	goto	l3355
  8172  0019C4                     u2890:
  8173  0019C4  504D               	movf	___fladd@grs^0,w,c
  8174  0019C6  A4D8               	btfss	status,2,c
  8175  0019C8  EFE8  F00C         	goto	u2901
  8176  0019CC  EFEA  F00C         	goto	u2900
  8177  0019D0                     u2901:
  8178  0019D0  EF17  F00D         	goto	l3355
  8179  0019D4                     u2900:
  8180  0019D4  0E00               	movlw	0
  8181  0019D6  6E3E               	movwf	?___fladd^0,c
  8182  0019D8  0E00               	movlw	0
  8183  0019DA  6E3F               	movwf	(?___fladd+1)^0,c
  8184  0019DC  0E00               	movlw	0
  8185  0019DE  6E40               	movwf	(?___fladd+2)^0,c
  8186  0019E0  0E00               	movlw	0
  8187  0019E2  6E41               	movwf	(?___fladd+3)^0,c
  8188  0019E4  EFB2  F00D         	goto	l1280
  8189  0019E8                     l3339:
  8190  0019E8  90D8               	bcf	status,0,c
  8191  0019EA  363E               	rlcf	___fladd@b^0,f,c
  8192  0019EC  363F               	rlcf	(___fladd@b+1)^0,f,c
  8193  0019EE  3640               	rlcf	(___fladd@b+2)^0,f,c
  8194  0019F0  3641               	rlcf	(___fladd@b+3)^0,f,c
  8195  0019F2  AE4D               	btfss	___fladd@grs^0,7,c
  8196  0019F4  EFFE  F00C         	goto	u2911
  8197  0019F8  EF00  F00D         	goto	u2910
  8198  0019FC                     u2911:
  8199  0019FC  EF01  F00D         	goto	l3345
  8200  001A00                     u2910:
  8201  001A00  803E               	bsf	___fladd@b^0,0,c
  8202  001A02                     l3345:
  8203  001A02  A04D               	btfss	___fladd@grs^0,0,c
  8204  001A04  EF06  F00D         	goto	u2921
  8205  001A08  EF08  F00D         	goto	u2920
  8206  001A0C                     u2921:
  8207  001A0C  EF0C  F00D         	goto	l3349
  8208  001A10                     u2920:
  8209  001A10  80D8               	bsf	status,0,c
  8210  001A12  364D               	rlcf	___fladd@grs^0,f,c
  8211  001A14  EF0E  F00D         	goto	l3351
  8212  001A18                     l3349:
  8213  001A18  90D8               	bcf	status,0,c
  8214  001A1A  364D               	rlcf	___fladd@grs^0,f,c
  8215  001A1C                     l3351:
  8216  001A1C  504C               	movf	___fladd@bexp^0,w,c
  8217  001A1E  B4D8               	btfsc	status,2,c
  8218  001A20  EF14  F00D         	goto	u2931
  8219  001A24  EF16  F00D         	goto	u2930
  8220  001A28                     u2931:
  8221  001A28  EF17  F00D         	goto	l3355
  8222  001A2C                     u2930:
  8223  001A2C  064C               	decf	___fladd@bexp^0,f,c
  8224  001A2E                     l3355:
  8225  001A2E  AE40               	btfss	(___fladd@b+2)^0,7,c
  8226  001A30  EF1C  F00D         	goto	u2941
  8227  001A34  EF1E  F00D         	goto	u2940
  8228  001A38                     u2941:
  8229  001A38  EFF4  F00C         	goto	l3339
  8230  001A3C                     u2940:
  8231  001A3C                     l3357:
  8232  001A3C  0E00               	movlw	0
  8233  001A3E  6E4B               	movwf	___fladd@aexp^0,c
  8234  001A40  AE4D               	btfss	___fladd@grs^0,7,c
  8235  001A42  EF25  F00D         	goto	u2951
  8236  001A46  EF27  F00D         	goto	u2950
  8237  001A4A                     u2951:
  8238  001A4A  EF3F  F00D         	goto	l1297
  8239  001A4E                     u2950:
  8240  001A4E  C04D  F046         	movff	___fladd@grs,??___fladd
  8241  001A52  0E7F               	movlw	127
  8242  001A54  1646               	andwf	??___fladd^0,f,c
  8243  001A56  B4D8               	btfsc	status,2,c
  8244  001A58  EF30  F00D         	goto	u2961
  8245  001A5C  EF32  F00D         	goto	u2960
  8246  001A60                     u2961:
  8247  001A60  EF36  F00D         	goto	l1298
  8248  001A64                     u2960:
  8249  001A64                     l3363:
  8250  001A64  0E01               	movlw	1
  8251  001A66  6E4B               	movwf	___fladd@aexp^0,c
  8252  001A68  EF3F  F00D         	goto	l1297
  8253  001A6C                     l1298:
  8254  001A6C  A03E               	btfss	___fladd@b^0,0,c
  8255  001A6E  EF3B  F00D         	goto	u2971
  8256  001A72  EF3D  F00D         	goto	u2970
  8257  001A76                     u2971:
  8258  001A76  EF3F  F00D         	goto	l1297
  8259  001A7A                     u2970:
  8260  001A7A  EF32  F00D         	goto	l3363
  8261  001A7E                     l1297:
  8262  001A7E  504B               	movf	___fladd@aexp^0,w,c
  8263  001A80  B4D8               	btfsc	status,2,c
  8264  001A82  EF45  F00D         	goto	u2981
  8265  001A86  EF47  F00D         	goto	u2980
  8266  001A8A                     u2981:
  8267  001A8A  EF72  F00D         	goto	l3375
  8268  001A8E                     u2980:
  8269  001A8E  0E01               	movlw	1
  8270  001A90  263E               	addwf	___fladd@b^0,f,c
  8271  001A92  0E00               	movlw	0
  8272  001A94  223F               	addwfc	(___fladd@b+1)^0,f,c
  8273  001A96  2240               	addwfc	(___fladd@b+2)^0,f,c
  8274  001A98  2241               	addwfc	(___fladd@b+3)^0,f,c
  8275  001A9A  A041               	btfss	(___fladd@b+3)^0,0,c
  8276  001A9C  EF52  F00D         	goto	u2991
  8277  001AA0  EF54  F00D         	goto	u2990
  8278  001AA4                     u2991:
  8279  001AA4  EF72  F00D         	goto	l3375
  8280  001AA8                     u2990:
  8281  001AA8  C03E  F046         	movff	___fladd@b,??___fladd
  8282  001AAC  C03F  F047         	movff	___fladd@b+1,??___fladd+1
  8283  001AB0  C040  F048         	movff	___fladd@b+2,??___fladd+2
  8284  001AB4  C041  F049         	movff	___fladd@b+3,??___fladd+3
  8285  001AB8  3449               	rlcf	(??___fladd+3)^0,w,c
  8286  001ABA  3249               	rrcf	(??___fladd+3)^0,f,c
  8287  001ABC  3248               	rrcf	(??___fladd+2)^0,f,c
  8288  001ABE  3247               	rrcf	(??___fladd+1)^0,f,c
  8289  001AC0  3246               	rrcf	??___fladd^0,f,c
  8290  001AC2  C046  F03E         	movff	??___fladd,___fladd@b
  8291  001AC6  C047  F03F         	movff	??___fladd+1,___fladd@b+1
  8292  001ACA  C048  F040         	movff	??___fladd+2,___fladd@b+2
  8293  001ACE  C049  F041         	movff	??___fladd+3,___fladd@b+3
  8294  001AD2  284C               	incf	___fladd@bexp^0,w,c
  8295  001AD4  B4D8               	btfsc	status,2,c
  8296  001AD6  EF6F  F00D         	goto	u3001
  8297  001ADA  EF71  F00D         	goto	u3000
  8298  001ADE                     u3001:
  8299  001ADE  EF72  F00D         	goto	l3375
  8300  001AE2                     u3000:
  8301  001AE2  2A4C               	incf	___fladd@bexp^0,f,c
  8302  001AE4                     l3375:
  8303  001AE4  284C               	incf	___fladd@bexp^0,w,c
  8304  001AE6  B4D8               	btfsc	status,2,c
  8305  001AE8  EF78  F00D         	goto	u3011
  8306  001AEC  EF7A  F00D         	goto	u3010
  8307  001AF0                     u3011:
  8308  001AF0  EF82  F00D         	goto	l3379
  8309  001AF4                     u3010:
  8310  001AF4  504C               	movf	___fladd@bexp^0,w,c
  8311  001AF6  A4D8               	btfss	status,2,c
  8312  001AF8  EF80  F00D         	goto	u3021
  8313  001AFC  EF82  F00D         	goto	u3020
  8314  001B00                     u3021:
  8315  001B00  EF94  F00D         	goto	l3383
  8316  001B04                     u3020:
  8317  001B04                     l3379:
  8318  001B04  0E00               	movlw	0
  8319  001B06  6E3E               	movwf	___fladd@b^0,c
  8320  001B08  0E00               	movlw	0
  8321  001B0A  6E3F               	movwf	(___fladd@b+1)^0,c
  8322  001B0C  0E00               	movlw	0
  8323  001B0E  6E40               	movwf	(___fladd@b+2)^0,c
  8324  001B10  0E00               	movlw	0
  8325  001B12  6E41               	movwf	(___fladd@b+3)^0,c
  8326  001B14  504C               	movf	___fladd@bexp^0,w,c
  8327  001B16  A4D8               	btfss	status,2,c
  8328  001B18  EF90  F00D         	goto	u3031
  8329  001B1C  EF92  F00D         	goto	u3030
  8330  001B20                     u3031:
  8331  001B20  EF94  F00D         	goto	l3383
  8332  001B24                     u3030:
  8333  001B24  0E00               	movlw	0
  8334  001B26  6E4A               	movwf	___fladd@signs^0,c
  8335  001B28                     l3383:
  8336  001B28  A04C               	btfss	___fladd@bexp^0,0,c
  8337  001B2A  EF99  F00D         	goto	u3041
  8338  001B2E  EF9B  F00D         	goto	u3040
  8339  001B32                     u3041:
  8340  001B32  EF9E  F00D         	goto	l3387
  8341  001B36                     u3040:
  8342  001B36  8E40               	bsf	(___fladd@b+2)^0,7,c
  8343  001B38  EF9F  F00D         	goto	l3389
  8344  001B3C                     l3387:
  8345  001B3C  9E40               	bcf	(___fladd@b+2)^0,7,c
  8346  001B3E                     l3389:
  8347  001B3E  90D8               	bcf	status,0,c
  8348  001B40  304C               	rrcf	___fladd@bexp^0,w,c
  8349  001B42  6E41               	movwf	(___fladd@b+3)^0,c
  8350  001B44  AE4A               	btfss	___fladd@signs^0,7,c
  8351  001B46  EFA7  F00D         	goto	u3051
  8352  001B4A  EFA9  F00D         	goto	u3050
  8353  001B4E                     u3051:
  8354  001B4E  EFAA  F00D         	goto	l3395
  8355  001B52                     u3050:
  8356  001B52  8E41               	bsf	(___fladd@b+3)^0,7,c
  8357  001B54                     l3395:
  8358  001B54  C03E  F03E         	movff	___fladd@b,?___fladd
  8359  001B58  C03F  F03F         	movff	___fladd@b+1,?___fladd+1
  8360  001B5C  C040  F040         	movff	___fladd@b+2,?___fladd+2
  8361  001B60  C041  F041         	movff	___fladd@b+3,?___fladd+3
  8362  001B64                     l1280:
  8363  001B64  0012               	return		;funcret
  8364  001B66                     __end_of___fladd:
  8365                           	callstack 0
  8366                           
  8367 ;; *************** function _stop *****************
  8368 ;; Defined at:
  8369 ;;		line 135 in file "DC_motors.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  mL              2   34[COMRAM] PTR struct .
  8372 ;;		 -> main@motorL(9), 
  8373 ;;  mR              2   36[COMRAM] PTR struct .
  8374 ;;		 -> main@motorR(9), 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;		None
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  1    wreg      void 
  8379 ;; Registers used:
  8380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8381 ;; Tracked objects:
  8382 ;;		On entry : 0/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8390 ;;Total ram usage:        6 bytes
  8391 ;; Hardware stack levels used: 1
  8392 ;; Hardware stack levels required when called: 9
  8393 ;; This function calls:
  8394 ;;		_DCmotors_setPWM
  8395 ;; This function is called by:
  8396 ;;		_main
  8397 ;;		_colourcards_readRGBC
  8398 ;;		_clearance
  8399 ;;		_DCmotors_calibration
  8400 ;;		_DCmotors_testing
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text46
  8405  0036A0                     __ptext46:
  8406                           	callstack 0
  8407  0036A0                     _stop:
  8408                           	callstack 21
  8409  0036A0                     
  8410                           ;DC_motors.c: 136:     LATDbits.LATD4 = 1;
  8411  0036A0  887C               	bsf	124,4,c	;volatile
  8412                           
  8413                           ;DC_motors.c: 138:     while((mL->power > 0) && (mR->power > 0)){
  8414  0036A2  EF6F  F01B         	goto	l3643
  8415  0036A6                     l3635:
  8416                           
  8417                           ;DC_motors.c: 139:         mL->power -= 10;
  8418  0036A6  C023  FFD9         	movff	stop@mL,fsr2l
  8419  0036AA  C024  FFDA         	movff	stop@mL+1,fsr2h
  8420  0036AE  0E0A               	movlw	10
  8421  0036B0  5EDF               	subwf	indf2,f,c
  8422                           
  8423                           ;DC_motors.c: 140:         mR->power -= 10;
  8424  0036B2  C025  FFD9         	movff	stop@mR,fsr2l
  8425  0036B6  C026  FFDA         	movff	stop@mR+1,fsr2h
  8426  0036BA  0E0A               	movlw	10
  8427  0036BC  5EDF               	subwf	indf2,f,c
  8428  0036BE                     
  8429                           ;DC_motors.c: 143:         DCmotors_setPWM(mL);
  8430  0036BE  C023  F018         	movff	stop@mL,DCmotors_setPWM@m
  8431  0036C2  C024  F019         	movff	stop@mL+1,DCmotors_setPWM@m+1
  8432  0036C6  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  8433  0036CA                     
  8434                           ;DC_motors.c: 144:         DCmotors_setPWM(mR);
  8435  0036CA  C025  F018         	movff	stop@mR,DCmotors_setPWM@m
  8436  0036CE  C026  F019         	movff	stop@mR+1,DCmotors_setPWM@m+1
  8437  0036D2  ECF6  F015         	call	_DCmotors_setPWM	;wreg free
  8438  0036D6                     
  8439                           ;DC_motors.c: 145:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8440  0036D6  0EA0               	movlw	160
  8441  0036D8                     u6097:
  8442  0036D8  D000               	nop2	
  8443  0036DA  2EE8               	decfsz	wreg,f,c
  8444  0036DC  D7FD               	bra	u6097
  8445  0036DE                     l3643:
  8446                           
  8447                           ;DC_motors.c: 138:     while((mL->power > 0) && (mR->power > 0)){
  8448  0036DE  C023  FFD9         	movff	stop@mL,fsr2l
  8449  0036E2  C024  FFDA         	movff	stop@mL+1,fsr2h
  8450  0036E6  50DF               	movf	indf2,w,c
  8451  0036E8  B4D8               	btfsc	status,2,c
  8452  0036EA  EF79  F01B         	goto	u3461
  8453  0036EE  EF7B  F01B         	goto	u3460
  8454  0036F2                     u3461:
  8455  0036F2  EF87  F01B         	goto	l3647
  8456  0036F6                     u3460:
  8457  0036F6  C025  FFD9         	movff	stop@mR,fsr2l
  8458  0036FA  C026  FFDA         	movff	stop@mR+1,fsr2h
  8459  0036FE  50DF               	movf	indf2,w,c
  8460  003700  A4D8               	btfss	status,2,c
  8461  003702  EF85  F01B         	goto	u3471
  8462  003706  EF87  F01B         	goto	u3470
  8463  00370A                     u3471:
  8464  00370A  EF53  F01B         	goto	l3635
  8465  00370E                     u3470:
  8466  00370E                     l3647:
  8467                           
  8468                           ;DC_motors.c: 147:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8469  00370E  0E29               	movlw	41
  8470  003710  6E28               	movwf	(??_stop+1)^0,c
  8471  003712  0E96               	movlw	150
  8472  003714  6E27               	movwf	??_stop^0,c
  8473  003716  0E7F               	movlw	127
  8474  003718                     u6107:
  8475  003718  2EE8               	decfsz	wreg,f,c
  8476  00371A  D7FE               	bra	u6107
  8477  00371C  2E27               	decfsz	??_stop^0,f,c
  8478  00371E  D7FC               	bra	u6107
  8479  003720  2E28               	decfsz	(??_stop+1)^0,f,c
  8480  003722  D7FA               	bra	u6107
  8481  003724  F000               	nop	
  8482  003726                     
  8483                           ;DC_motors.c: 148:     LATDbits.LATD4 = 0;
  8484  003726  987C               	bcf	124,4,c	;volatile
  8485  003728  0012               	return		;funcret
  8486  00372A                     __end_of_stop:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function _DCmotors_setPWM *****************
  8490 ;; Defined at:
  8491 ;;		line 50 in file "DC_motors.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  m               2   23[COMRAM] PTR struct .
  8494 ;;		 -> main@motorR(9), main@motorL(9), 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  PWMduty         2   32[COMRAM] int 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;Total ram usage:       11 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 8
  8513 ;; This function calls:
  8514 ;;		___awdiv
  8515 ;;		___wmul
  8516 ;; This function is called by:
  8517 ;;		_forward
  8518 ;;		_reverse
  8519 ;;		_stop
  8520 ;;		_left
  8521 ;;		_right
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text47
  8526  002BEC                     __ptext47:
  8527                           	callstack 0
  8528  002BEC                     _DCmotors_setPWM:
  8529                           	callstack 21
  8530  002BEC                     
  8531                           ;DC_motors.c: 51:  int PWMduty;;DC_motors.c: 53:  if (m->direction){
  8532  002BEC  EE20 F001          	lfsr	2,1
  8533  002BF0  5018               	movf	DCmotors_setPWM@m^0,w,c
  8534  002BF2  26D9               	addwf	fsr2l,f,c
  8535  002BF4  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8536  002BF6  22DA               	addwfc	fsr2h,f,c
  8537  002BF8  50DF               	movf	indf2,w,c
  8538  002BFA  B4D8               	btfsc	status,2,c
  8539  002BFC  EF02  F016         	goto	u2631
  8540  002C00  EF04  F016         	goto	u2630
  8541  002C04                     u2631:
  8542  002C04  EF35  F016         	goto	l3187
  8543  002C08                     u2630:
  8544  002C08                     
  8545                           ;DC_motors.c: 54:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
  8546  002C08  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  8547  002C0C  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  8548  002C10  50DF               	movf	indf2,w,c
  8549  002C12  6E1A               	movwf	??_DCmotors_setPWM^0,c
  8550  002C14  501A               	movf	??_DCmotors_setPWM^0,w,c
  8551  002C16  6E0A               	movwf	___wmul@multiplier^0,c
  8552  002C18  6A0B               	clrf	(___wmul@multiplier+1)^0,c
  8553  002C1A  EE20 F007          	lfsr	2,7
  8554  002C1E  5018               	movf	DCmotors_setPWM@m^0,w,c
  8555  002C20  26D9               	addwf	fsr2l,f,c
  8556  002C22  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8557  002C24  22DA               	addwfc	fsr2h,f,c
  8558  002C26  CFDE F00C          	movff	postinc2,___wmul@multiplicand
  8559  002C2A  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
  8560  002C2E  EC7F  F01E         	call	___wmul	;wreg free
  8561  002C32  C00A  F010         	movff	?___wmul,___awdiv@dividend
  8562  002C36  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
  8563  002C3A  0E00               	movlw	0
  8564  002C3C  6E13               	movwf	(___awdiv@divisor+1)^0,c
  8565  002C3E  0E64               	movlw	100
  8566  002C40  6E12               	movwf	___awdiv@divisor^0,c
  8567  002C42  EC60  F01A         	call	___awdiv	;wreg free
  8568  002C46  EE20 F007          	lfsr	2,7
  8569  002C4A  5018               	movf	DCmotors_setPWM@m^0,w,c
  8570  002C4C  26D9               	addwf	fsr2l,f,c
  8571  002C4E  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8572  002C50  22DA               	addwfc	fsr2h,f,c
  8573  002C52  CFDE F01B          	movff	postinc2,??_DCmotors_setPWM+1
  8574  002C56  CFDD F01C          	movff	postdec2,??_DCmotors_setPWM+2
  8575  002C5A  5010               	movf	?___awdiv^0,w,c
  8576  002C5C  5C1B               	subwf	(??_DCmotors_setPWM+1)^0,w,c
  8577  002C5E  6E21               	movwf	DCmotors_setPWM@PWMduty^0,c
  8578  002C60  5011               	movf	(?___awdiv+1)^0,w,c
  8579  002C62  581C               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  8580  002C64  6E22               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  8581                           
  8582                           ;DC_motors.c: 55:  } else {
  8583  002C66  EF58  F016         	goto	l3189
  8584  002C6A                     l3187:
  8585                           
  8586                           ;DC_motors.c: 56:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8587  002C6A  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  8588  002C6E  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  8589  002C72  50DF               	movf	indf2,w,c
  8590  002C74  6E1A               	movwf	??_DCmotors_setPWM^0,c
  8591  002C76  501A               	movf	??_DCmotors_setPWM^0,w,c
  8592  002C78  6E0A               	movwf	___wmul@multiplier^0,c
  8593  002C7A  6A0B               	clrf	(___wmul@multiplier+1)^0,c
  8594  002C7C  EE20 F007          	lfsr	2,7
  8595  002C80  5018               	movf	DCmotors_setPWM@m^0,w,c
  8596  002C82  26D9               	addwf	fsr2l,f,c
  8597  002C84  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8598  002C86  22DA               	addwfc	fsr2h,f,c
  8599  002C88  CFDE F00C          	movff	postinc2,___wmul@multiplicand
  8600  002C8C  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
  8601  002C90  EC7F  F01E         	call	___wmul	;wreg free
  8602  002C94  C00A  F010         	movff	?___wmul,___awdiv@dividend
  8603  002C98  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
  8604  002C9C  0E00               	movlw	0
  8605  002C9E  6E13               	movwf	(___awdiv@divisor+1)^0,c
  8606  002CA0  0E64               	movlw	100
  8607  002CA2  6E12               	movwf	___awdiv@divisor^0,c
  8608  002CA4  EC60  F01A         	call	___awdiv	;wreg free
  8609  002CA8  C010  F021         	movff	?___awdiv,DCmotors_setPWM@PWMduty
  8610  002CAC  C011  F022         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  8611  002CB0                     l3189:
  8612                           
  8613                           ;DC_motors.c: 59:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  8614  002CB0  EE20 F002          	lfsr	2,2
  8615  002CB4  5018               	movf	DCmotors_setPWM@m^0,w,c
  8616  002CB6  26D9               	addwf	fsr2l,f,c
  8617  002CB8  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8618  002CBA  22DA               	addwfc	fsr2h,f,c
  8619  002CBC  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  8620  002CC0  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  8621  002CC4  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  8622  002CC8  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  8623  002CCC  C021  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  8624  002CD0                     
  8625                           ;DC_motors.c: 61:  if (m->direction){
  8626  002CD0  EE20 F001          	lfsr	2,1
  8627  002CD4  5018               	movf	DCmotors_setPWM@m^0,w,c
  8628  002CD6  26D9               	addwf	fsr2l,f,c
  8629  002CD8  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8630  002CDA  22DA               	addwfc	fsr2h,f,c
  8631  002CDC  50DF               	movf	indf2,w,c
  8632  002CDE  B4D8               	btfsc	status,2,c
  8633  002CE0  EF74  F016         	goto	u2641
  8634  002CE4  EF76  F016         	goto	u2640
  8635  002CE8                     u2641:
  8636  002CE8  EFAB  F016         	goto	l3195
  8637  002CEC                     u2640:
  8638  002CEC                     
  8639                           ;DC_motors.c: 62:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  8640  002CEC  EE20 F004          	lfsr	2,4
  8641  002CF0  5018               	movf	DCmotors_setPWM@m^0,w,c
  8642  002CF2  26D9               	addwf	fsr2l,f,c
  8643  002CF4  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8644  002CF6  22DA               	addwfc	fsr2h,f,c
  8645  002CF8  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  8646  002CFC  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  8647  002D00  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  8648  002D04  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  8649  002D08  EE10 F004          	lfsr	1,4
  8650  002D0C  5018               	movf	DCmotors_setPWM@m^0,w,c
  8651  002D0E  26E1               	addwf	fsr1l,f,c
  8652  002D10  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8653  002D12  22E2               	addwfc	fsr1h,f,c
  8654  002D14  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
  8655  002D18  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
  8656  002D1C  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  8657  002D20  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  8658  002D24  50E7               	movf	indf1,w,c
  8659  002D26  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
  8660  002D28  EE10 F006          	lfsr	1,6
  8661  002D2C  5018               	movf	DCmotors_setPWM@m^0,w,c
  8662  002D2E  26E1               	addwf	fsr1l,f,c
  8663  002D30  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8664  002D32  22E2               	addwfc	fsr1h,f,c
  8665  002D34  50E7               	movf	indf1,w,c
  8666  002D36  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
  8667  002D38  0E01               	movlw	1
  8668  002D3A  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
  8669  002D3C  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
  8670  002D3E  EFA3  F016         	goto	u2654
  8671  002D42                     u2655:
  8672  002D42  90D8               	bcf	status,0,c
  8673  002D44  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  8674  002D46                     u2654:
  8675  002D46  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  8676  002D48  EFA1  F016         	goto	u2655
  8677  002D4C  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
  8678  002D4E  101E               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  8679  002D50  6EDF               	movwf	indf2,c
  8680                           
  8681                           ;DC_motors.c: 63:  } else {
  8682  002D52  EFDF  F016         	goto	l564
  8683  002D56                     l3195:
  8684                           
  8685                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
  8686  002D56  EE20 F004          	lfsr	2,4
  8687  002D5A  5018               	movf	DCmotors_setPWM@m^0,w,c
  8688  002D5C  26D9               	addwf	fsr2l,f,c
  8689  002D5E  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8690  002D60  22DA               	addwfc	fsr2h,f,c
  8691  002D62  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  8692  002D66  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  8693  002D6A  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  8694  002D6E  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  8695  002D72  EE10 F004          	lfsr	1,4
  8696  002D76  5018               	movf	DCmotors_setPWM@m^0,w,c
  8697  002D78  26E1               	addwf	fsr1l,f,c
  8698  002D7A  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8699  002D7C  22E2               	addwfc	fsr1h,f,c
  8700  002D7E  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
  8701  002D82  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
  8702  002D86  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  8703  002D8A  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  8704  002D8E  50E7               	movf	indf1,w,c
  8705  002D90  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
  8706  002D92  EE10 F006          	lfsr	1,6
  8707  002D96  5018               	movf	DCmotors_setPWM@m^0,w,c
  8708  002D98  26E1               	addwf	fsr1l,f,c
  8709  002D9A  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8710  002D9C  22E2               	addwfc	fsr1h,f,c
  8711  002D9E  50E7               	movf	indf1,w,c
  8712  002DA0  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
  8713  002DA2  0E01               	movlw	1
  8714  002DA4  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
  8715  002DA6  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
  8716  002DA8  EFD8  F016         	goto	u2664
  8717  002DAC                     u2665:
  8718  002DAC  90D8               	bcf	status,0,c
  8719  002DAE  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  8720  002DB0                     u2664:
  8721  002DB0  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  8722  002DB2  EFD6  F016         	goto	u2665
  8723  002DB6  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
  8724  002DB8  0AFF               	xorlw	255
  8725  002DBA  141E               	andwf	(??_DCmotors_setPWM+4)^0,w,c
  8726  002DBC  6EDF               	movwf	indf2,c
  8727  002DBE                     l564:
  8728  002DBE  0012               	return		;funcret
  8729  002DC0                     __end_of_DCmotors_setPWM:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function ___wmul *****************
  8733 ;; Defined at:
  8734 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  multiplier      2    9[COMRAM] unsigned int 
  8737 ;;  multiplicand    2   11[COMRAM] unsigned int 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  product         2   13[COMRAM] unsigned int 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  2    9[COMRAM] unsigned int 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0, prodl, prodh
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8749 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;Total ram usage:        6 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 7
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_DCmotors_setPWM
  8760 ;;		_left
  8761 ;;		_right
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text48
  8766  003CFE                     __ptext48:
  8767                           	callstack 0
  8768  003CFE                     ___wmul:
  8769                           	callstack 21
  8770  003CFE  500A               	movf	___wmul@multiplier^0,w,c
  8771  003D00  020C               	mulwf	___wmul@multiplicand^0,c
  8772  003D02  CFF3 F00E          	movff	prodl,___wmul@product
  8773  003D06  CFF4 F00F          	movff	prodh,___wmul@product+1
  8774  003D0A  500A               	movf	___wmul@multiplier^0,w,c
  8775  003D0C  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  8776  003D0E  50F3               	movf	243,w,c
  8777  003D10  260F               	addwf	(___wmul@product+1)^0,f,c
  8778  003D12  500B               	movf	(___wmul@multiplier+1)^0,w,c
  8779  003D14  020C               	mulwf	___wmul@multiplicand^0,c
  8780  003D16  50F3               	movf	243,w,c
  8781  003D18  260F               	addwf	(___wmul@product+1)^0,f,c
  8782  003D1A  C00E  F00A         	movff	___wmul@product,?___wmul
  8783  003D1E  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  8784  003D22  0012               	return		;funcret
  8785  003D24                     __end_of___wmul:
  8786                           	callstack 0
  8787                           
  8788 ;; *************** function ___awdiv *****************
  8789 ;; Defined at:
  8790 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  dividend        2   15[COMRAM] int 
  8793 ;;  divisor         2   17[COMRAM] int 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  quotient        2   21[COMRAM] int 
  8796 ;;  sign            1   20[COMRAM] unsigned char 
  8797 ;;  counter         1   19[COMRAM] unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  2   15[COMRAM] int 
  8800 ;; Registers used:
  8801 ;;		wreg, status,2, status,0
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8811 ;;Total ram usage:        8 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; Hardware stack levels required when called: 7
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_DCmotors_setPWM
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           	psect	text49
  8822  0034C0                     __ptext49:
  8823                           	callstack 0
  8824  0034C0                     ___awdiv:
  8825                           	callstack 21
  8826  0034C0  0E00               	movlw	0
  8827  0034C2  6E15               	movwf	___awdiv@sign^0,c
  8828  0034C4  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
  8829  0034C6  EF69  F01A         	goto	u2550
  8830  0034CA  EF67  F01A         	goto	u2551
  8831  0034CE                     u2551:
  8832  0034CE  EF6F  F01A         	goto	l3117
  8833  0034D2                     u2550:
  8834  0034D2  6C12               	negf	___awdiv@divisor^0,c
  8835  0034D4  1E13               	comf	(___awdiv@divisor+1)^0,f,c
  8836  0034D6  B0D8               	btfsc	status,0,c
  8837  0034D8  2A13               	incf	(___awdiv@divisor+1)^0,f,c
  8838  0034DA  0E01               	movlw	1
  8839  0034DC  6E15               	movwf	___awdiv@sign^0,c
  8840  0034DE                     l3117:
  8841  0034DE  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
  8842  0034E0  EF76  F01A         	goto	u2560
  8843  0034E4  EF74  F01A         	goto	u2561
  8844  0034E8                     u2561:
  8845  0034E8  EF7C  F01A         	goto	l3123
  8846  0034EC                     u2560:
  8847  0034EC  6C10               	negf	___awdiv@dividend^0,c
  8848  0034EE  1E11               	comf	(___awdiv@dividend+1)^0,f,c
  8849  0034F0  B0D8               	btfsc	status,0,c
  8850  0034F2  2A11               	incf	(___awdiv@dividend+1)^0,f,c
  8851  0034F4  0E01               	movlw	1
  8852  0034F6  1A15               	xorwf	___awdiv@sign^0,f,c
  8853  0034F8                     l3123:
  8854  0034F8  0E00               	movlw	0
  8855  0034FA  6E17               	movwf	(___awdiv@quotient+1)^0,c
  8856  0034FC  0E00               	movlw	0
  8857  0034FE  6E16               	movwf	___awdiv@quotient^0,c
  8858  003500  5012               	movf	___awdiv@divisor^0,w,c
  8859  003502  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
  8860  003504  B4D8               	btfsc	status,2,c
  8861  003506  EF87  F01A         	goto	u2571
  8862  00350A  EF89  F01A         	goto	u2570
  8863  00350E                     u2571:
  8864  00350E  EFB1  F01A         	goto	l3145
  8865  003512                     u2570:
  8866  003512  0E01               	movlw	1
  8867  003514  6E14               	movwf	___awdiv@counter^0,c
  8868  003516  EF91  F01A         	goto	l3131
  8869  00351A                     l3129:
  8870  00351A  90D8               	bcf	status,0,c
  8871  00351C  3612               	rlcf	___awdiv@divisor^0,f,c
  8872  00351E  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
  8873  003520  2A14               	incf	___awdiv@counter^0,f,c
  8874  003522                     l3131:
  8875  003522  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
  8876  003524  EF96  F01A         	goto	u2581
  8877  003528  EF98  F01A         	goto	u2580
  8878  00352C                     u2581:
  8879  00352C  EF8D  F01A         	goto	l3129
  8880  003530                     u2580:
  8881  003530                     l3133:
  8882  003530  90D8               	bcf	status,0,c
  8883  003532  3616               	rlcf	___awdiv@quotient^0,f,c
  8884  003534  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
  8885  003536  5012               	movf	___awdiv@divisor^0,w,c
  8886  003538  5C10               	subwf	___awdiv@dividend^0,w,c
  8887  00353A  5013               	movf	(___awdiv@divisor+1)^0,w,c
  8888  00353C  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
  8889  00353E  A0D8               	btfss	status,0,c
  8890  003540  EFA4  F01A         	goto	u2591
  8891  003544  EFA6  F01A         	goto	u2590
  8892  003548                     u2591:
  8893  003548  EFAB  F01A         	goto	l3141
  8894  00354C                     u2590:
  8895  00354C  5012               	movf	___awdiv@divisor^0,w,c
  8896  00354E  5E10               	subwf	___awdiv@dividend^0,f,c
  8897  003550  5013               	movf	(___awdiv@divisor+1)^0,w,c
  8898  003552  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
  8899  003554  8016               	bsf	___awdiv@quotient^0,0,c
  8900  003556                     l3141:
  8901  003556  90D8               	bcf	status,0,c
  8902  003558  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
  8903  00355A  3212               	rrcf	___awdiv@divisor^0,f,c
  8904  00355C  2E14               	decfsz	___awdiv@counter^0,f,c
  8905  00355E  EF98  F01A         	goto	l3133
  8906  003562                     l3145:
  8907  003562  5015               	movf	___awdiv@sign^0,w,c
  8908  003564  B4D8               	btfsc	status,2,c
  8909  003566  EFB7  F01A         	goto	u2601
  8910  00356A  EFB9  F01A         	goto	u2600
  8911  00356E                     u2601:
  8912  00356E  EFBD  F01A         	goto	l3149
  8913  003572                     u2600:
  8914  003572  6C16               	negf	___awdiv@quotient^0,c
  8915  003574  1E17               	comf	(___awdiv@quotient+1)^0,f,c
  8916  003576  B0D8               	btfsc	status,0,c
  8917  003578  2A17               	incf	(___awdiv@quotient+1)^0,f,c
  8918  00357A                     l3149:
  8919  00357A  C016  F010         	movff	___awdiv@quotient,?___awdiv
  8920  00357E  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
  8921  003582  0012               	return		;funcret
  8922  003584                     __end_of___awdiv:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function _adjdelay *****************
  8926 ;; Defined at:
  8927 ;;		line 289 in file "DC_motors.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  mode            1    wreg     unsigned char 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  mode            1   11[COMRAM] unsigned char 
  8932 ;;  i               1   12[COMRAM] unsigned char 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      void 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2, status,0
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;Total ram usage:        4 bytes
  8947 ;; Hardware stack levels used: 1
  8948 ;; Hardware stack levels required when called: 7
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_DCmotors_calibration
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text50
  8957  002F74                     __ptext50:
  8958                           	callstack 0
  8959  002F74                     _adjdelay:
  8960                           	callstack 22
  8961                           
  8962                           ;incstack = 0
  8963                           ;adjdelay@mode stored from wreg
  8964  002F74  6E0C               	movwf	adjdelay@mode^0,c
  8965  002F76                     
  8966                           ;DC_motors.c: 290:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8967  002F76  0E52               	movlw	82
  8968  002F78  6E0B               	movwf	(??_adjdelay+1)^0,c
  8969  002F7A  0E2B               	movlw	43
  8970  002F7C  6E0A               	movwf	??_adjdelay^0,c
  8971  002F7E  0E00               	movlw	0
  8972  002F80                     u6117:
  8973  002F80  2EE8               	decfsz	wreg,f,c
  8974  002F82  D7FE               	bra	u6117
  8975  002F84  2E0A               	decfsz	??_adjdelay^0,f,c
  8976  002F86  D7FC               	bra	u6117
  8977  002F88  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  8978  002F8A  D7FA               	bra	u6117
  8979  002F8C  D000               	nop2	
  8980  002F8E                     
  8981                           ;DC_motors.c: 291:     unsigned char i;;DC_motors.c: 292:     for (i=0; i<10; i++) {
  8982  002F8E  0E00               	movlw	0
  8983  002F90  6E0D               	movwf	adjdelay@i^0,c
  8984  002F92                     l4027:
  8985                           
  8986                           ;DC_motors.c: 293:         if(mode==2){
  8987  002F92  0E02               	movlw	2
  8988  002F94  180C               	xorwf	adjdelay@mode^0,w,c
  8989  002F96  A4D8               	btfss	status,2,c
  8990  002F98  EFD0  F017         	goto	u3911
  8991  002F9C  EFD2  F017         	goto	u3910
  8992  002FA0                     u3911:
  8993  002FA0  EF1E  F018         	goto	l4055
  8994  002FA4                     u3910:
  8995  002FA4                     
  8996                           ;DC_motors.c: 294:             LATDbits.LATD4 = 1;
  8997  002FA4  887C               	bsf	124,4,c	;volatile
  8998                           
  8999                           ;DC_motors.c: 295:             if(!PORTFbits.RF2 && PORTFbits.RF3){
  9000  002FA6  B48E               	btfsc	142,2,c	;volatile
  9001  002FA8  EFD8  F017         	goto	u3921
  9002  002FAC  EFDA  F017         	goto	u3920
  9003  002FB0                     u3921:
  9004  002FB0  EFF2  F017         	goto	l663
  9005  002FB4                     u3920:
  9006  002FB4  A68E               	btfss	142,3,c	;volatile
  9007  002FB6  EFDF  F017         	goto	u3931
  9008  002FBA  EFE1  F017         	goto	u3930
  9009  002FBE                     u3931:
  9010  002FBE  EFF2  F017         	goto	l663
  9011  002FC2                     u3930:
  9012  002FC2                     
  9013                           ;DC_motors.c: 296:                 LATDbits.LATD7 = 1;
  9014  002FC2  8E7C               	bsf	124,7,c	;volatile
  9015  002FC4                     
  9016                           ;DC_motors.c: 297:                 turnright_delay+=1;
  9017  002FC4  2A54               	incf	_turnright_delay^0,f,c	;volatile
  9018  002FC6                     
  9019                           ;DC_motors.c: 298:                 _delay((unsigned long)((800)*(64000000/4000.0)));
  9020  002FC6  0E41               	movlw	65
  9021  002FC8  6E0B               	movwf	(??_adjdelay+1)^0,c
  9022  002FCA  0EF0               	movlw	240
  9023  002FCC  6E0A               	movwf	??_adjdelay^0,c
  9024  002FCE  0E33               	movlw	51
  9025  002FD0                     u6127:
  9026  002FD0  2EE8               	decfsz	wreg,f,c
  9027  002FD2  D7FE               	bra	u6127
  9028  002FD4  2E0A               	decfsz	??_adjdelay^0,f,c
  9029  002FD6  D7FC               	bra	u6127
  9030  002FD8  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9031  002FDA  D7FA               	bra	u6127
  9032  002FDC  F000               	nop	
  9033  002FDE                     
  9034                           ;DC_motors.c: 299:                 LATDbits.LATD7 = 0;
  9035  002FDE  9E7C               	bcf	124,7,c	;volatile
  9036                           
  9037                           ;DC_motors.c: 300:             }
  9038  002FE0  EF0F  F018         	goto	l4051
  9039  002FE4                     l663:
  9040  002FE4  B68E               	btfsc	142,3,c	;volatile
  9041  002FE6  EFF7  F017         	goto	u3941
  9042  002FEA  EFF9  F017         	goto	u3940
  9043  002FEE                     u3941:
  9044  002FEE  EF0F  F018         	goto	l4051
  9045  002FF2                     u3940:
  9046  002FF2  A48E               	btfss	142,2,c	;volatile
  9047  002FF4  EFFE  F017         	goto	u3951
  9048  002FF8  EF00  F018         	goto	u3950
  9049  002FFC                     u3951:
  9050  002FFC  EF0F  F018         	goto	l4051
  9051  003000                     u3950:
  9052  003000                     
  9053                           ;DC_motors.c: 302:                 LATHbits.LATH3 = 1;
  9054  003000  8680               	bsf	128,3,c	;volatile
  9055  003002                     
  9056                           ;DC_motors.c: 303:                 turnright_delay-=1;
  9057  003002  0654               	decf	_turnright_delay^0,f,c	;volatile
  9058  003004                     
  9059                           ;DC_motors.c: 304:                 _delay((unsigned long)((800)*(64000000/4000.0)));
  9060  003004  0E41               	movlw	65
  9061  003006  6E0B               	movwf	(??_adjdelay+1)^0,c
  9062  003008  0EF0               	movlw	240
  9063  00300A  6E0A               	movwf	??_adjdelay^0,c
  9064  00300C  0E33               	movlw	51
  9065  00300E                     u6137:
  9066  00300E  2EE8               	decfsz	wreg,f,c
  9067  003010  D7FE               	bra	u6137
  9068  003012  2E0A               	decfsz	??_adjdelay^0,f,c
  9069  003014  D7FC               	bra	u6137
  9070  003016  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9071  003018  D7FA               	bra	u6137
  9072  00301A  F000               	nop	
  9073  00301C                     
  9074                           ;DC_motors.c: 305:                 LATHbits.LATH3 = 0;
  9075  00301C  9680               	bcf	128,3,c	;volatile
  9076  00301E                     l4051:
  9077                           
  9078                           ;DC_motors.c: 308:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9079  00301E  0E29               	movlw	41
  9080  003020  6E0B               	movwf	(??_adjdelay+1)^0,c
  9081  003022  0E96               	movlw	150
  9082  003024  6E0A               	movwf	??_adjdelay^0,c
  9083  003026  0E7F               	movlw	127
  9084  003028                     u6147:
  9085  003028  2EE8               	decfsz	wreg,f,c
  9086  00302A  D7FE               	bra	u6147
  9087  00302C  2E0A               	decfsz	??_adjdelay^0,f,c
  9088  00302E  D7FC               	bra	u6147
  9089  003030  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9090  003032  D7FA               	bra	u6147
  9091  003034  F000               	nop	
  9092  003036                     
  9093                           ;DC_motors.c: 309:             LATDbits.LATD4 = 0;
  9094  003036  987C               	bcf	124,4,c	;volatile
  9095                           
  9096                           ;DC_motors.c: 311:         } else if(mode==1){
  9097  003038  EF6E  F018         	goto	l666
  9098  00303C                     l4055:
  9099  00303C  040C               	decf	adjdelay@mode^0,w,c
  9100  00303E  A4D8               	btfss	status,2,c
  9101  003040  EF24  F018         	goto	u3961
  9102  003044  EF26  F018         	goto	u3960
  9103  003048                     u3961:
  9104  003048  EF6E  F018         	goto	l666
  9105  00304C                     u3960:
  9106  00304C                     
  9107                           ;DC_motors.c: 312:             if(!PORTFbits.RF2 && PORTFbits.RF3){
  9108  00304C  B48E               	btfsc	142,2,c	;volatile
  9109  00304E  EF2B  F018         	goto	u3971
  9110  003052  EF2D  F018         	goto	u3970
  9111  003056                     u3971:
  9112  003056  EF45  F018         	goto	l668
  9113  00305A                     u3970:
  9114  00305A  A68E               	btfss	142,3,c	;volatile
  9115  00305C  EF32  F018         	goto	u3981
  9116  003060  EF34  F018         	goto	u3980
  9117  003064                     u3981:
  9118  003064  EF45  F018         	goto	l668
  9119  003068                     u3980:
  9120  003068                     
  9121                           ;DC_motors.c: 313:                 LATDbits.LATD7 = 1;
  9122  003068  8E7C               	bsf	124,7,c	;volatile
  9123  00306A                     
  9124                           ;DC_motors.c: 314:                 turnleft_delay-=1;
  9125  00306A  0655               	decf	_turnleft_delay^0,f,c	;volatile
  9126  00306C                     
  9127                           ;DC_motors.c: 315:                 _delay((unsigned long)((800)*(64000000/4000.0)));
  9128  00306C  0E41               	movlw	65
  9129  00306E  6E0B               	movwf	(??_adjdelay+1)^0,c
  9130  003070  0EF0               	movlw	240
  9131  003072  6E0A               	movwf	??_adjdelay^0,c
  9132  003074  0E33               	movlw	51
  9133  003076                     u6157:
  9134  003076  2EE8               	decfsz	wreg,f,c
  9135  003078  D7FE               	bra	u6157
  9136  00307A  2E0A               	decfsz	??_adjdelay^0,f,c
  9137  00307C  D7FC               	bra	u6157
  9138  00307E  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9139  003080  D7FA               	bra	u6157
  9140  003082  F000               	nop	
  9141  003084                     
  9142                           ;DC_motors.c: 316:                 LATDbits.LATD7 = 0;
  9143  003084  9E7C               	bcf	124,7,c	;volatile
  9144                           
  9145                           ;DC_motors.c: 317:             }
  9146  003086  EF62  F018         	goto	l4079
  9147  00308A                     l668:
  9148  00308A  B68E               	btfsc	142,3,c	;volatile
  9149  00308C  EF4A  F018         	goto	u3991
  9150  003090  EF4C  F018         	goto	u3990
  9151  003094                     u3991:
  9152  003094  EF62  F018         	goto	l4079
  9153  003098                     u3990:
  9154  003098  A48E               	btfss	142,2,c	;volatile
  9155  00309A  EF51  F018         	goto	u4001
  9156  00309E  EF53  F018         	goto	u4000
  9157  0030A2                     u4001:
  9158  0030A2  EF62  F018         	goto	l4079
  9159  0030A6                     u4000:
  9160  0030A6                     
  9161                           ;DC_motors.c: 319:                 LATHbits.LATH3 = 1;
  9162  0030A6  8680               	bsf	128,3,c	;volatile
  9163  0030A8                     
  9164                           ;DC_motors.c: 320:                 turnleft_delay+=1;
  9165  0030A8  2A55               	incf	_turnleft_delay^0,f,c	;volatile
  9166  0030AA                     
  9167                           ;DC_motors.c: 321:                 _delay((unsigned long)((800)*(64000000/4000.0)));
  9168  0030AA  0E41               	movlw	65
  9169  0030AC  6E0B               	movwf	(??_adjdelay+1)^0,c
  9170  0030AE  0EF0               	movlw	240
  9171  0030B0  6E0A               	movwf	??_adjdelay^0,c
  9172  0030B2  0E33               	movlw	51
  9173  0030B4                     u6167:
  9174  0030B4  2EE8               	decfsz	wreg,f,c
  9175  0030B6  D7FE               	bra	u6167
  9176  0030B8  2E0A               	decfsz	??_adjdelay^0,f,c
  9177  0030BA  D7FC               	bra	u6167
  9178  0030BC  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9179  0030BE  D7FA               	bra	u6167
  9180  0030C0  F000               	nop	
  9181  0030C2                     
  9182                           ;DC_motors.c: 322:                 LATHbits.LATH3 = 0;
  9183  0030C2  9680               	bcf	128,3,c	;volatile
  9184  0030C4                     l4079:
  9185                           
  9186                           ;DC_motors.c: 325:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9187  0030C4  0E29               	movlw	41
  9188  0030C6  6E0B               	movwf	(??_adjdelay+1)^0,c
  9189  0030C8  0E96               	movlw	150
  9190  0030CA  6E0A               	movwf	??_adjdelay^0,c
  9191  0030CC  0E7F               	movlw	127
  9192  0030CE                     u6177:
  9193  0030CE  2EE8               	decfsz	wreg,f,c
  9194  0030D0  D7FE               	bra	u6177
  9195  0030D2  2E0A               	decfsz	??_adjdelay^0,f,c
  9196  0030D4  D7FC               	bra	u6177
  9197  0030D6  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9198  0030D8  D7FA               	bra	u6177
  9199  0030DA  F000               	nop	
  9200  0030DC                     l666:
  9201                           
  9202                           ;DC_motors.c: 328:     }
  9203  0030DC  2A0D               	incf	adjdelay@i^0,f,c
  9204  0030DE  0E09               	movlw	9
  9205  0030E0  640D               	cpfsgt	adjdelay@i^0,c
  9206  0030E2  EF75  F018         	goto	u4011
  9207  0030E6  EF77  F018         	goto	u4010
  9208  0030EA                     u4011:
  9209  0030EA  EFC9  F017         	goto	l4027
  9210  0030EE                     u4010:
  9211  0030EE  0012               	return		;funcret
  9212  0030F0                     __end_of_adjdelay:
  9213                           	callstack 0
  9214                           
  9215 ;; *************** function _ADC_init *****************
  9216 ;; Defined at:
  9217 ;;		line 8 in file "ADC.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;		None
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;		None
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, status,2
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9235 ;;Total ram usage:        0 bytes
  9236 ;; Hardware stack levels used: 1
  9237 ;; Hardware stack levels required when called: 7
  9238 ;; This function calls:
  9239 ;;		Nothing
  9240 ;; This function is called by:
  9241 ;;		_main
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text51
  9246  003E24                     __ptext51:
  9247                           	callstack 0
  9248  003E24                     _ADC_init:
  9249                           	callstack 23
  9250  003E24                     
  9251                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  9252  003E24  8C86               	bsf	134,6,c	;volatile
  9253                           
  9254                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  9255  003E26  010E               	movlb	14	; () banked
  9256  003E28  8DB4               	bsf	180,6,b	;volatile
  9257                           
  9258                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  9259  003E2A  010F               	movlb	15	; () banked
  9260  003E2C  9958               	bcf	88,4,b	;volatile
  9261  003E2E                     
  9262                           ; BSR set to: 15
  9263                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  9264  003E2E  0EFC               	movlw	-4
  9265  003E30  1758               	andwf	88,f,b	;volatile
  9266                           
  9267                           ;ADC.c: 16:     ADPCH=0b101110;
  9268  003E32  0E2E               	movlw	46
  9269  003E34  6F5F               	movwf	95,b	;volatile
  9270  003E36                     
  9271                           ; BSR set to: 15
  9272                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  9273  003E36  9460               	bcf	96,2,c	;volatile
  9274  003E38                     
  9275                           ; BSR set to: 15
  9276                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  9277  003E38  8860               	bsf	96,4,c	;volatile
  9278  003E3A                     
  9279                           ; BSR set to: 15
  9280                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  9281  003E3A  8E60               	bsf	96,7,c	;volatile
  9282  003E3C                     
  9283                           ; BSR set to: 15
  9284  003E3C  0012               	return		;funcret
  9285  003E3E                     __end_of_ADC_init:
  9286                           	callstack 0
  9287                           
  9288 ;; *************** function _LowISR *****************
  9289 ;; Defined at:
  9290 ;;		line 77 in file "interrupts.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;		None
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;		None
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  1    wreg      void 
  9297 ;; Registers used:
  9298 ;;		wreg, status,2
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9306 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9307 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9308 ;;Total ram usage:        3 bytes
  9309 ;; Hardware stack levels used: 1
  9310 ;; Hardware stack levels required when called: 6
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		Interrupt level 1
  9315 ;; This function uses a non-reentrant model
  9316 ;;
  9317                           
  9318                           	psect	intcodelo
  9319  000018                     __pintcodelo:
  9320                           	callstack 0
  9321  000018                     _LowISR:
  9322                           	callstack 18
  9323                           
  9324                           ; BSR set to: 15
  9325                           ;incstack = 0
  9326  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9327  00001A  CFD8 F007          	movff	status,??_LowISR
  9328  00001E  CFE8 F008          	movff	wreg,??_LowISR+1
  9329  000022  CFE0 F009          	movff	bsr,??_LowISR+2
  9330  000026                     
  9331                           ;interrupts.c: 78:     if (PIR0bits.TMR0IF) {
  9332  000026  010E               	movlb	14	; () banked
  9333  000028  AB33               	btfss	51,5,b	;volatile
  9334  00002A  EF19  F000         	goto	i1u449_21
  9335  00002E  EF1B  F000         	goto	i1u449_20
  9336  000032                     i1u449_21:
  9337  000032  EF26  F000         	goto	i1l146
  9338  000036                     i1u449_20:
  9339  000036                     
  9340                           ; BSR set to: 14
  9341                           ;interrupts.c: 79:         returnhome_flag = 1;
  9342  000036  0E01               	movlw	1
  9343  000038  0100               	movlb	0	; () banked
  9344  00003A  6FA8               	movwf	_returnhome_flag& (0+255),b	;volatile
  9345                           
  9346                           ;interrupts.c: 80:         overtime_flag = 1;
  9347  00003C  0E01               	movlw	1
  9348  00003E  6FA7               	movwf	_overtime_flag& (0+255),b	;volatile
  9349                           
  9350                           ;interrupts.c: 81:         TMR0H=0b1011;
  9351  000040  0E0B               	movlw	11
  9352  000042  6ED4               	movwf	212,c	;volatile
  9353                           
  9354                           ;interrupts.c: 82:         TMR0L=0b11011011;
  9355  000044  0EDB               	movlw	219
  9356  000046  6ED3               	movwf	211,c	;volatile
  9357  000048                     
  9358                           ; BSR set to: 0
  9359                           ;interrupts.c: 83:         PIR0bits.TMR0IF = 0;
  9360  000048  010E               	movlb	14	; () banked
  9361  00004A  9B33               	bcf	51,5,b	;volatile
  9362  00004C                     i1l146:
  9363                           
  9364                           ; BSR set to: 14
  9365  00004C  C009  FFE0         	movff	??_LowISR+2,bsr
  9366  000050  C008  FFE8         	movff	??_LowISR+1,wreg
  9367  000054  C007  FFD8         	movff	??_LowISR,status
  9368  000058  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9369  00005A  0010               	retfie	
  9370  00005C                     __end_of_LowISR:
  9371                           	callstack 0
  9372                           
  9373 ;; *************** function _HighISR *****************
  9374 ;; Defined at:
  9375 ;;		line 64 in file "interrupts.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;		None
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, status,2, status,0, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;Total ram usage:        1 bytes
  9394 ;; Hardware stack levels used: 1
  9395 ;; Hardware stack levels required when called: 5
  9396 ;; This function calls:
  9397 ;;		i2_interrupts_clear
  9398 ;; This function is called by:
  9399 ;;		Interrupt level 2
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	intcode
  9404  000008                     __pintcode:
  9405                           	callstack 0
  9406  000008                     _HighISR:
  9407                           	callstack 18
  9408                           
  9409                           ; BSR set to: 14
  9410                           ;incstack = 0
  9411  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9412  00000A  EFCF  F01D         	goto	int_func
  9413                           
  9414                           	psect	intcode_body
  9415  003B9E                     __pintcode_body:
  9416                           	callstack 18
  9417  003B9E                     int_func:
  9418                           	callstack 18
  9419  003B9E                     
  9420                           ;interrupts.c: 65:     if (PIR0bits.INT1IF) {
  9421  003B9E  010E               	movlb	14	; () banked
  9422  003BA0  A333               	btfss	51,1,b	;volatile
  9423  003BA2  EFD5  F01D         	goto	i2u446_41
  9424  003BA6  EFD7  F01D         	goto	i2u446_40
  9425  003BAA                     i2u446_41:
  9426  003BAA  EFEF  F01D         	goto	i2l140
  9427  003BAE                     i2u446_40:
  9428  003BAE                     
  9429                           ; BSR set to: 14
  9430                           ;interrupts.c: 66:         colourcard_flag = 1;
  9431  003BAE  0E01               	movlw	1
  9432  003BB0  0100               	movlb	0	; () banked
  9433  003BB2  6FAA               	movwf	_colourcard_flag& (0+255),b	;volatile
  9434  003BB4                     
  9435                           ; BSR set to: 0
  9436                           ;interrupts.c: 67:         LATDbits.LATD7 = !LATDbits.LATD7;
  9437  003BB4  AE7C               	btfss	124,7,c	;volatile
  9438  003BB6  EFDF  F01D         	goto	i2u447_41
  9439  003BBA  EFE3  F01D         	goto	i2u447_40
  9440  003BBE                     i2u447_41:
  9441  003BBE  6A06               	clrf	??_HighISR^0,c
  9442  003BC0  2A06               	incf	??_HighISR^0,f,c
  9443  003BC2  EFE4  F01D         	goto	i2u448_48
  9444  003BC6                     i2u447_40:
  9445  003BC6  6A06               	clrf	??_HighISR^0,c
  9446  003BC8                     i2u448_48:
  9447  003BC8  3206               	rrcf	??_HighISR^0,f,c
  9448  003BCA  3206               	rrcf	??_HighISR^0,f,c
  9449  003BCC  507C               	movf	124,w,c	;volatile
  9450  003BCE  1806               	xorwf	??_HighISR^0,w,c
  9451  003BD0  0B7F               	andlw	-129
  9452  003BD2  1806               	xorwf	??_HighISR^0,w,c
  9453  003BD4  6E7C               	movwf	124,c	;volatile
  9454  003BD6                     
  9455                           ;interrupts.c: 68:         interrupts_clear();
  9456  003BD6  EC1F  F01F         	call	i2_interrupts_clear	;wreg free
  9457  003BDA                     
  9458                           ;interrupts.c: 69:         PIR0bits.INT1IF = 0;
  9459  003BDA  010E               	movlb	14	; () banked
  9460  003BDC  9333               	bcf	51,1,b	;volatile
  9461  003BDE                     i2l140:
  9462                           
  9463                           ; BSR set to: 14
  9464  003BDE  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9465  003BE0  0011               	retfie		f
  9466  003BE2                     __end_of_HighISR:
  9467                           	callstack 0
  9468                           
  9469 ;; *************** function i2_interrupts_clear *****************
  9470 ;; Defined at:
  9471 ;;		line 37 in file "interrupts.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, status,2, status,0, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used: 1
  9491 ;; Hardware stack levels required when called: 4
  9492 ;; This function calls:
  9493 ;;		i2_I2C_2_Master_Start
  9494 ;;		i2_I2C_2_Master_Stop
  9495 ;;		i2_I2C_2_Master_Write
  9496 ;;		i2_interrupts_colourclick
  9497 ;; This function is called by:
  9498 ;;		_HighISR
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text54
  9503  003E3E                     __ptext54:
  9504                           	callstack 0
  9505  003E3E                     i2_interrupts_clear:
  9506                           	callstack 18
  9507  003E3E                     
  9508                           ;interrupts.c: 38:     I2C_2_Master_Start();
  9509  003E3E  EC75  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9510                           
  9511                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  9512  003E42  0E52               	movlw	82
  9513  003E44  EC56  F01F         	call	i2_I2C_2_Master_Write
  9514                           
  9515                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  9516  003E48  0EE6               	movlw	230
  9517  003E4A  EC56  F01F         	call	i2_I2C_2_Master_Write
  9518                           
  9519                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  9520  003E4E  EC70  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9521                           
  9522                           ;interrupts.c: 43:     interrupts_colourclick();
  9523  003E52  ECA8  F01D         	call	i2_interrupts_colourclick	;wreg free
  9524  003E56  0012               	return		;funcret
  9525  003E58                     __end_ofi2_interrupts_clear:
  9526                           	callstack 0
  9527                           
  9528 ;; *************** function i2_interrupts_colourclick *****************
  9529 ;; Defined at:
  9530 ;;		line 50 in file "interrupts.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;		None
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg, status,2, status,0, cstack
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9548 ;;Total ram usage:        1 bytes
  9549 ;; Hardware stack levels used: 1
  9550 ;; Hardware stack levels required when called: 3
  9551 ;; This function calls:
  9552 ;;		i2_colourclick_writetoaddr
  9553 ;; This function is called by:
  9554 ;;		i2_interrupts_clear
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text55
  9559  003B50                     __ptext55:
  9560                           	callstack 0
  9561  003B50                     i2_interrupts_colourclick:
  9562                           	callstack 18
  9563  003B50                     
  9564                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  9565  003B50  0E13               	movlw	19
  9566  003B52  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9567  003B54  0E00               	movlw	0
  9568  003B56  ECF5  F01E         	call	i2_colourclick_writetoaddr
  9569  003B5A                     
  9570                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9571  003B5A  0E3F               	movlw	63
  9572  003B5C  6E05               	movwf	??i2_interrupts_colourclick^0,c
  9573  003B5E  0E55               	movlw	85
  9574  003B60                     i2u618_47:
  9575  003B60  2EE8               	decfsz	wreg,f,c
  9576  003B62  D7FE               	bra	i2u618_47
  9577  003B64  2E05               	decfsz	??i2_interrupts_colourclick^0,f,c
  9578  003B66  D7FC               	bra	i2u618_47
  9579  003B68  F000               	nop	
  9580  003B6A                     
  9581                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  9582  003B6A  0E04               	movlw	4
  9583  003B6C  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9584  003B6E  0E0C               	movlw	12
  9585  003B70  ECF5  F01E         	call	i2_colourclick_writetoaddr
  9586  003B74                     
  9587                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  9588  003B74  C052  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
  9589  003B78  0E04               	movlw	4
  9590  003B7A  ECF5  F01E         	call	i2_colourclick_writetoaddr
  9591  003B7E                     
  9592                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  9593  003B7E  5053               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  9594  003B80  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9595  003B82  0E05               	movlw	5
  9596  003B84  ECF5  F01E         	call	i2_colourclick_writetoaddr
  9597  003B88                     
  9598                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  9599  003B88  C050  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
  9600  003B8C  0E06               	movlw	6
  9601  003B8E  ECF5  F01E         	call	i2_colourclick_writetoaddr
  9602  003B92                     
  9603                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  9604  003B92  5051               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  9605  003B94  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9606  003B96  0E07               	movlw	7
  9607  003B98  ECF5  F01E         	call	i2_colourclick_writetoaddr
  9608  003B9C  0012               	return		;funcret
  9609  003B9E                     __end_ofi2_interrupts_colourclick:
  9610                           	callstack 0
  9611                           
  9612 ;; *************** function i2_colourclick_writetoaddr *****************
  9613 ;; Defined at:
  9614 ;;		line 33 in file "colour_click.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  address         1    wreg     unsigned char 
  9617 ;;  value           1    2[COMRAM] unsigned char 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  address         1    3[COMRAM] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, status,2, status,0, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;Total ram usage:        2 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 2
  9636 ;; This function calls:
  9637 ;;		i2_I2C_2_Master_Start
  9638 ;;		i2_I2C_2_Master_Stop
  9639 ;;		i2_I2C_2_Master_Write
  9640 ;; This function is called by:
  9641 ;;		i2_interrupts_colourclick
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text56
  9646  003DEA                     __ptext56:
  9647                           	callstack 0
  9648  003DEA                     i2_colourclick_writetoaddr:
  9649                           	callstack 18
  9650                           
  9651                           ;incstack = 0
  9652                           ;i2colourclick_writetoaddr@address stored from wreg
  9653  003DEA  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
  9654  003DEC                     
  9655                           ;colour_click.c: 34:     I2C_2_Master_Start();
  9656  003DEC  EC75  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9657                           
  9658                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  9659  003DF0  0E52               	movlw	82
  9660  003DF2  EC56  F01F         	call	i2_I2C_2_Master_Write
  9661                           
  9662                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  9663  003DF6  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
  9664  003DF8  0980               	iorlw	128
  9665  003DFA  EC56  F01F         	call	i2_I2C_2_Master_Write
  9666                           
  9667                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  9668  003DFE  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
  9669  003E00  EC56  F01F         	call	i2_I2C_2_Master_Write
  9670                           
  9671                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  9672  003E04  EC70  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9673  003E08  0012               	return		;funcret
  9674  003E0A                     __end_ofi2_colourclick_writetoaddr:
  9675                           	callstack 0
  9676                           
  9677 ;; *************** function i2_I2C_2_Master_Write *****************
  9678 ;; Defined at:
  9679 ;;		line 64 in file "I2C.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  data_byte       1    wreg     unsigned char 
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;  data_byte       1    1[COMRAM] unsigned char 
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2, status,0, cstack
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9697 ;;Total ram usage:        1 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 1
  9700 ;; This function calls:
  9701 ;;		i2_I2C_2_Master_Idle
  9702 ;; This function is called by:
  9703 ;;		i2_interrupts_clear
  9704 ;;		i2_colourclick_writetoaddr
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text57
  9709  003EAC                     __ptext57:
  9710                           	callstack 0
  9711  003EAC                     i2_I2C_2_Master_Write:
  9712                           	callstack 18
  9713                           
  9714                           ;incstack = 0
  9715                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9716  003EAC  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9717  003EAE                     
  9718                           ;I2C.c: 65:   I2C_2_Master_Idle();
  9719  003EAE  EC6B  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9720  003EB2                     
  9721                           ;I2C.c: 66:   SSP2BUF = data_byte;
  9722  003EB2  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9723  003EB6  0012               	return		;funcret
  9724  003EB8                     __end_ofi2_I2C_2_Master_Write:
  9725                           	callstack 0
  9726                           
  9727 ;; *************** function i2_I2C_2_Master_Stop *****************
  9728 ;; Defined at:
  9729 ;;		line 55 in file "I2C.c"
  9730 ;; Parameters:    Size  Location     Type
  9731 ;;		None
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;		None
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, status,2, status,0, cstack
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9747 ;;Total ram usage:        0 bytes
  9748 ;; Hardware stack levels used: 1
  9749 ;; Hardware stack levels required when called: 1
  9750 ;; This function calls:
  9751 ;;		i2_I2C_2_Master_Idle
  9752 ;; This function is called by:
  9753 ;;		i2_interrupts_clear
  9754 ;;		i2_colourclick_writetoaddr
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text58
  9759  003EE0                     __ptext58:
  9760                           	callstack 0
  9761  003EE0                     i2_I2C_2_Master_Stop:
  9762                           	callstack 18
  9763  003EE0                     
  9764                           ;I2C.c: 56:   I2C_2_Master_Idle();
  9765  003EE0  EC6B  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9766  003EE4                     
  9767                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  9768  003EE4  010E               	movlb	14	; () banked
  9769  003EE6  85DA               	bsf	218,2,b	;volatile
  9770  003EE8                     
  9771                           ; BSR set to: 14
  9772  003EE8  0012               	return		;funcret
  9773  003EEA                     __end_ofi2_I2C_2_Master_Stop:
  9774                           	callstack 0
  9775                           
  9776 ;; *************** function i2_I2C_2_Master_Start *****************
  9777 ;; Defined at:
  9778 ;;		line 37 in file "I2C.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      void 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0, cstack
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9796 ;;Total ram usage:        0 bytes
  9797 ;; Hardware stack levels used: 1
  9798 ;; Hardware stack levels required when called: 1
  9799 ;; This function calls:
  9800 ;;		i2_I2C_2_Master_Idle
  9801 ;; This function is called by:
  9802 ;;		i2_interrupts_clear
  9803 ;;		i2_colourclick_writetoaddr
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           	psect	text59
  9808  003EEA                     __ptext59:
  9809                           	callstack 0
  9810  003EEA                     i2_I2C_2_Master_Start:
  9811                           	callstack 18
  9812  003EEA                     
  9813                           ;I2C.c: 38:   I2C_2_Master_Idle();
  9814  003EEA  EC6B  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9815  003EEE                     
  9816                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  9817  003EEE  010E               	movlb	14	; () banked
  9818  003EF0  81DA               	bsf	218,0,b	;volatile
  9819  003EF2                     
  9820                           ; BSR set to: 14
  9821  003EF2  0012               	return		;funcret
  9822  003EF4                     __end_ofi2_I2C_2_Master_Start:
  9823                           	callstack 0
  9824                           
  9825 ;; *************** function i2_I2C_2_Master_Idle *****************
  9826 ;; Defined at:
  9827 ;;		line 29 in file "I2C.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;		None
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		wreg, status,2, status,0
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9845 ;;Total ram usage:        1 bytes
  9846 ;; Hardware stack levels used: 1
  9847 ;; This function calls:
  9848 ;;		Nothing
  9849 ;; This function is called by:
  9850 ;;		i2_I2C_2_Master_Start
  9851 ;;		i2_I2C_2_Master_Stop
  9852 ;;		i2_I2C_2_Master_Write
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text60
  9857  003CD6                     __ptext60:
  9858                           	callstack 0
  9859  003CD6                     i2_I2C_2_Master_Idle:
  9860                           	callstack 18
  9861  003CD6                     i2l433:
  9862  003CD6  010E               	movlb	14	; () banked
  9863  003CD8  B5D8               	btfsc	216,2,b	;volatile
  9864  003CDA  EF71  F01E         	goto	i2u261_41
  9865  003CDE  EF73  F01E         	goto	i2u261_40
  9866  003CE2                     i2u261_41:
  9867  003CE2  EF6B  F01E         	goto	i2l433
  9868  003CE6                     i2u261_40:
  9869  003CE6                     
  9870                           ; BSR set to: 14
  9871  003CE6  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9872  003CEA  0E1F               	movlw	31
  9873  003CEC  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9874  003CEE  A4D8               	btfss	status,2,c
  9875  003CF0  EF7C  F01E         	goto	i2u262_41
  9876  003CF4  EF7E  F01E         	goto	i2u262_40
  9877  003CF8                     i2u262_41:
  9878  003CF8  EF6B  F01E         	goto	i2l433
  9879  003CFC                     i2u262_40:
  9880  003CFC                     
  9881                           ; BSR set to: 14
  9882  003CFC  0012               	return		;funcret
  9883  003CFE                     __end_ofi2_I2C_2_Master_Idle:
  9884                           	callstack 0
  9885                           
  9886                           	psect	rparam
  9887  0000                     
  9888                           	psect	temp
  9889  000056                     btemp:
  9890                           	callstack 0
  9891  000056                     	ds	1
  9892  0000                     int$flags	set	btemp
  9893  0000                     wtemp8	set	btemp+1
  9894  0000                     ttemp5	set	btemp+1
  9895  0000                     ttemp6	set	btemp+4
  9896  0000                     ttemp7	set	btemp+8
  9897                           
  9898                           	psect	idloc
  9899                           
  9900                           ;Config register IDLOC0 @ 0x200000
  9901                           ;	unspecified, using default values
  9902  200000                     	org	2097152
  9903  200000  0FFF               	dw	4095
  9904                           
  9905                           ;Config register IDLOC1 @ 0x200002
  9906                           ;	unspecified, using default values
  9907  200002                     	org	2097154
  9908  200002  0FFF               	dw	4095
  9909                           
  9910                           ;Config register IDLOC2 @ 0x200004
  9911                           ;	unspecified, using default values
  9912  200004                     	org	2097156
  9913  200004  0FFF               	dw	4095
  9914                           
  9915                           ;Config register IDLOC3 @ 0x200006
  9916                           ;	unspecified, using default values
  9917  200006                     	org	2097158
  9918  200006  0FFF               	dw	4095
  9919                           
  9920                           ;Config register IDLOC4 @ 0x200008
  9921                           ;	unspecified, using default values
  9922  200008                     	org	2097160
  9923  200008  0FFF               	dw	4095
  9924                           
  9925                           ;Config register IDLOC5 @ 0x20000A
  9926                           ;	unspecified, using default values
  9927  20000A                     	org	2097162
  9928  20000A  0FFF               	dw	4095
  9929                           
  9930                           ;Config register IDLOC6 @ 0x20000C
  9931                           ;	unspecified, using default values
  9932  20000C                     	org	2097164
  9933  20000C  0FFF               	dw	4095
  9934                           
  9935                           ;Config register IDLOC7 @ 0x20000E
  9936                           ;	unspecified, using default values
  9937  20000E                     	org	2097166
  9938  20000E  0FFF               	dw	4095
  9939                           
  9940                           	psect	config
  9941                           
  9942                           ;Config register CONFIG1L @ 0x300000
  9943                           ;	External Oscillator mode Selection bits
  9944                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9945                           ;	Power-up default value for COSC bits
  9946                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9947  300000                     	org	3145728
  9948  300000  AA                 	db	170
  9949                           
  9950                           ;Config register CONFIG1H @ 0x300001
  9951                           ;	unspecified, using default values
  9952                           ;	Clock Out Enable bit
  9953                           ;	CLKOUTEN = 0x1, unprogrammed default
  9954                           ;	Clock Switch Enable bit
  9955                           ;	CSWEN = 0x1, unprogrammed default
  9956                           ;	Fail-Safe Clock Monitor Enable bit
  9957                           ;	FCMEN = 0x1, unprogrammed default
  9958  300001                     	org	3145729
  9959  300001  FF                 	db	255
  9960                           
  9961                           ;Config register CONFIG2L @ 0x300002
  9962                           ;	unspecified, using default values
  9963                           ;	Master Clear Enable bit
  9964                           ;	MCLRE = 0x1, unprogrammed default
  9965                           ;	Power-up Timer Enable bit
  9966                           ;	PWRTE = 0x1, unprogrammed default
  9967                           ;	Low-power BOR enable bit
  9968                           ;	LPBOREN = 0x1, unprogrammed default
  9969                           ;	Brown-out Reset Enable bits
  9970                           ;	BOREN = 0x3, unprogrammed default
  9971  300002                     	org	3145730
  9972  300002  FF                 	db	255
  9973                           
  9974                           ;Config register CONFIG2H @ 0x300003
  9975                           ;	unspecified, using default values
  9976                           ;	Brown Out Reset Voltage selection bits
  9977                           ;	BORV = 0x3, unprogrammed default
  9978                           ;	ZCD Disable bit
  9979                           ;	ZCD = 0x1, unprogrammed default
  9980                           ;	PPSLOCK bit One-Way Set Enable bit
  9981                           ;	PPS1WAY = 0x1, unprogrammed default
  9982                           ;	Stack Full/Underflow Reset Enable bit
  9983                           ;	STVREN = 0x1, unprogrammed default
  9984                           ;	Debugger Enable bit
  9985                           ;	DEBUG = 0x1, unprogrammed default
  9986                           ;	Extended Instruction Set Enable bit
  9987                           ;	XINST = 0x1, unprogrammed default
  9988  300003                     	org	3145731
  9989  300003  FF                 	db	255
  9990                           
  9991                           ;Config register CONFIG3L @ 0x300004
  9992                           ;	WDT Period Select bits
  9993                           ;	WDTCPS = 0x1F, unprogrammed default
  9994                           ;	WDT operating mode
  9995                           ;	WDTE = OFF, WDT Disabled
  9996  300004                     	org	3145732
  9997  300004  9F                 	db	159
  9998                           
  9999                           ;Config register CONFIG3H @ 0x300005
 10000                           ;	unspecified, using default values
 10001                           ;	WDT Window Select bits
 10002                           ;	WDTCWS = 0x7, unprogrammed default
 10003                           ;	WDT input clock selector
 10004                           ;	WDTCCS = 0x7, unprogrammed default
 10005  300005                     	org	3145733
 10006  300005  FF                 	db	255
 10007                           
 10008                           ;Config register CONFIG4L @ 0x300006
 10009                           ;	unspecified, using default values
 10010                           ;	Write Protection Block 0
 10011                           ;	WRT0 = 0x1, unprogrammed default
 10012                           ;	Write Protection Block 1
 10013                           ;	WRT1 = 0x1, unprogrammed default
 10014                           ;	Write Protection Block 2
 10015                           ;	WRT2 = 0x1, unprogrammed default
 10016                           ;	Write Protection Block 3
 10017                           ;	WRT3 = 0x1, unprogrammed default
 10018                           ;	Write Protection Block 3
 10019                           ;	WRT4 = 0x1, unprogrammed default
 10020                           ;	Write Protection Block 3
 10021                           ;	WRT5 = 0x1, unprogrammed default
 10022                           ;	Write Protection Block 3
 10023                           ;	WRT6 = 0x1, unprogrammed default
 10024                           ;	Write Protection Block 3
 10025                           ;	WRT7 = 0x1, unprogrammed default
 10026  300006                     	org	3145734
 10027  300006  FF                 	db	255
 10028                           
 10029                           ;Config register CONFIG4H @ 0x300007
 10030                           ;	unspecified, using default values
 10031                           ;	Configuration Register Write Protection bit
 10032                           ;	WRTC = 0x1, unprogrammed default
 10033                           ;	Boot Block Write Protection bit
 10034                           ;	WRTB = 0x1, unprogrammed default
 10035                           ;	Data EEPROM Write Protection bit
 10036                           ;	WRTD = 0x1, unprogrammed default
 10037                           ;	Scanner Enable bit
 10038                           ;	SCANE = 0x1, unprogrammed default
 10039                           ;	Low Voltage Programming Enable bit
 10040                           ;	LVP = 0x1, unprogrammed default
 10041  300007                     	org	3145735
 10042  300007  FF                 	db	255
 10043                           
 10044                           ;Config register CONFIG5L @ 0x300008
 10045                           ;	unspecified, using default values
 10046                           ;	UserNVM Program Memory Code Protection bit
 10047                           ;	CP = 0x1, unprogrammed default
 10048                           ;	DataNVM Memory Code Protection bit
 10049                           ;	CPD = 0x1, unprogrammed default
 10050  300008                     	org	3145736
 10051  300008  FF                 	db	255
 10052                           
 10053                           ;Config register CONFIG5H @ 0x300009
 10054                           ;	unspecified, using default values
 10055  300009                     	org	3145737
 10056  300009  FF                 	db	255
 10057                           
 10058                           ;Config register CONFIG6L @ 0x30000A
 10059                           ;	unspecified, using default values
 10060                           ;	Table Read Protection Block 0
 10061                           ;	EBTR0 = 0x1, unprogrammed default
 10062                           ;	Table Read Protection Block 1
 10063                           ;	EBTR1 = 0x1, unprogrammed default
 10064                           ;	Table Read Protection Block 2
 10065                           ;	EBTR2 = 0x1, unprogrammed default
 10066                           ;	Table Read Protection Block 3
 10067                           ;	EBTR3 = 0x1, unprogrammed default
 10068                           ;	Table Read Protection Block 4
 10069                           ;	EBTR4 = 0x1, unprogrammed default
 10070                           ;	Table Read Protection Block 5
 10071                           ;	EBTR5 = 0x1, unprogrammed default
 10072                           ;	Table Read Protection Block 6
 10073                           ;	EBTR6 = 0x1, unprogrammed default
 10074                           ;	Table Read Protection Block 7
 10075                           ;	EBTR7 = 0x1, unprogrammed default
 10076  30000A                     	org	3145738
 10077  30000A  FF                 	db	255
 10078                           
 10079                           ;Config register CONFIG6H @ 0x30000B
 10080                           ;	unspecified, using default values
 10081                           ;	Boot Block Table Read Protection bit
 10082                           ;	EBTRB = 0x1, unprogrammed default
 10083  30000B                     	org	3145739
 10084  30000B  FF                 	db	255
 10085                           tosu	equ	0xFFF
 10086                           tosh	equ	0xFFE
 10087                           tosl	equ	0xFFD
 10088                           stkptr	equ	0xFFC
 10089                           pclatu	equ	0xFFB
 10090                           pclath	equ	0xFFA
 10091                           pcl	equ	0xFF9
 10092                           tblptru	equ	0xFF8
 10093                           tblptrh	equ	0xFF7
 10094                           tblptrl	equ	0xFF6
 10095                           tablat	equ	0xFF5
 10096                           prodh	equ	0xFF4
 10097                           prodl	equ	0xFF3
 10098                           indf0	equ	0xFEF
 10099                           postinc0	equ	0xFEE
 10100                           postdec0	equ	0xFED
 10101                           preinc0	equ	0xFEC
 10102                           plusw0	equ	0xFEB
 10103                           fsr0h	equ	0xFEA
 10104                           fsr0l	equ	0xFE9
 10105                           wreg	equ	0xFE8
 10106                           indf1	equ	0xFE7
 10107                           postinc1	equ	0xFE6
 10108                           postdec1	equ	0xFE5
 10109                           preinc1	equ	0xFE4
 10110                           plusw1	equ	0xFE3
 10111                           fsr1h	equ	0xFE2
 10112                           fsr1l	equ	0xFE1
 10113                           bsr	equ	0xFE0
 10114                           indf2	equ	0xFDF
 10115                           postinc2	equ	0xFDE
 10116                           postdec2	equ	0xFDD
 10117                           preinc2	equ	0xFDC
 10118                           plusw2	equ	0xFDB
 10119                           fsr2h	equ	0xFDA
 10120                           fsr2l	equ	0xFD9
 10121                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      85
    BANK0           160     71      75
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2954_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC@buf(BANK0[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC@buf(BANK0[100]), 

    DCmotors_calibration@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    DCmotors_calibration@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    clearance@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    clearance@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S29$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S29$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_DCmotors_calibration
    _interrupts_clear->_interrupts_colourclick
    _interrupts_colourclick->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourclick_calibration->_colourclick_readRGBC
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___xxtofl
    _clearance->_stop
    _reverse->_DCmotors_setPWM
    _checkbatterylevel->_ADC_getval
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->___fladd
    _left->___fladd
    ___xxtofl->___lwdiv
    ___lwdiv->___wmul
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colourclick
    i2_interrupts_colourclick->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourcards_readRGBC
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  209557
                                             42 BANK0     29    29      0
                           _ADC_init
               _DCmotors_calibration
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
               _colourclick_readRGBC
                            _forward
                    _interrupts_init
                            _reverse
                               _stop
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
             _interrupts_colourclick
 ---------------------------------------------------------------------------------
 (3) _interrupts_colourclick                               1     1      0     750
                                             13 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     816
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     750
                                             11 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             10    10      0    1290
                                             22 COMRAM    10    10      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6  112311
                                             22 BANK0     20    14      6
                             ___flge
                          _clearance
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (1) _forward                                              5     1      4    2879
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2258
                                             22 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourclick_readRGBC                                 2     0      2    1148
                                             20 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (2) _colourclick_readR                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readG                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readC                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readB                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                             10 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    4443
                                             61 COMRAM    12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1703
                                             36 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _clearance                                            6     2      4   11122
                                             40 COMRAM     6     2      4
                            _reverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse                                              5     1      4    3183
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                             10 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              9 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_calibration                                 7     3      4   78919
                                             78 COMRAM     1     1      0
                                             22 BANK0      6     2      4
                           _adjdelay
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6   36068
                                             16 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6   35258
                                             16 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                               17    11      6   16321
                                             77 COMRAM     1     1      0
                                              0 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                             ___flge
                            ___flmul
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _left                                                17    11      6   16321
                                             77 COMRAM     1     1      0
                                              0 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                             ___flge
                            ___flmul
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1234
                                             22 COMRAM    14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                             15 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             36 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    5958
                                             36 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2844
                                             61 COMRAM    16     8      8
                            ___flmul (ARG)
                            ___lwdiv (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    6787
                                             34 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    2247
                                             23 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     659
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             15 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _adjdelay                                             4     4      0      90
                                              9 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               3     3      0       0
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              1     1      0     244
                                              5 COMRAM     1     1      0
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear                                   0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
           i2_interrupts_colourclick
 ---------------------------------------------------------------------------------
 (10) i2_interrupts_colourclick                            1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_calibration
     _adjdelay
     _stop
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___lwdiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
         ___flge
           ___xxtofl (ARG)
         ___flmul
         ___lwdiv
         ___wmul
         ___xxtofl
       _right
         _DCmotors_setPWM
         ___fladd
         ___flge
         ___flmul
         ___lwdiv
         ___wmul
         ___xxtofl
     _turnright
       _left
       _right
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___flge
     _clearance
       _reverse
         _DCmotors_setPWM
       _stop
     _colourcards_normaliseRGBC
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _reverse
     _stop
     _turnleft
     _turnright
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colourclick_readRGBC
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colourclick
         _colourclick_writetoaddr
   _reverse
   _stop
   _timer0_init

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colourclick
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      4B       5       46.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A0       8        0.0%
DATA                 0      0      A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 01:59:37 2021

      colourcards_normaliseRGBC@rel 0040         colourclick_readRGBC2@tmpval 0017  
                      ___fldiv@aexp 003D                        ___fldiv@bexp 003C  
                      ___fldiv@sign 0035                                  l73 267A  
                                l69 265E               __end_of_DCmotors_init 3A62  
                      ___awdiv@sign 0015                                  bsr 000FE0  
               ___wmul@multiplicand 000C                                 l131 3E22  
                               l134 3B4E                                 l311 3920  
                               l400 3D68                                 l320 39C0  
                               l128 3D46                                 l305 3C5A  
                               l314 3970                                 l226 1652  
                               l403 3E84                                 l323 3872  
                               l331 33BA                                 l308 3DA8  
                               l317 3A10                                 l229 16A4  
                               l334 372A                                 l430 3C84  
                               l264 3264                                 l336 3738  
                               l361 3E5A                                 l433 3CAE  
                               l337 37A0                                 l442 3ED4  
                               l363 3E68                                 l451 3C22  
                               l364 3E6E                                 l436 3CD4  
                               l445 3EC0                                 l358 3E3C  
                               l606 2BE8                                 l607 2BEA  
                               l623 3B00                                 l391 3EAA  
                               l439 3ECA                                 l448 3E9E  
                               l617 29E6                                 l633 2332  
                               l618 29E8                                 l394 3EDE  
                               l643 2428                                 l564 2DBE  
                               l628 3AB0                                 l652 253C  
                               l476 3DE8                                 l740 3D88  
                               l653 2562                                 l637 234E  
                               l557 3A60                                 l397 3E92  
                               l638 239C                                 l671 30EE  
                               l663 2FE4                                 l743 3D22  
                               l567 3DC6                                 l648 2520  
                               l657 25B2                                 l569 3DC8  
                               l585 369E                                 l577 3610  
                               l666 30DC                                 l668 308A  
                               l596 3728                                 l588 38D0  
                               l974 3582                                 wreg 000FE8  
                      ___flmul@aexp 0036                        ___flmul@bexp 0037  
                      ___flmul@sign 0031                        ___flmul@temp 003C  
             ?_colourclick_readRGBC 0015                        ___flmul@prod 0038  
               __size_of_ADC_getval 0018                                l1013 34BE  
                              l1008 3478                                l1241 3814  
                              l1401 2F72                                l1234 380C  
                              l1330 214C                                l1412 2F0A  
                              l1405 2EAE                                l1325 2328  
                              l3111 34C4                                l3103 3CFE  
                              l1271 1894                                l1327 2188  
                              l1280 1B64                                l1272 1882  
                              l1336 21CE                                l3121 34F4  
                              l3113 34D2                                l3105 3D1A  
                              l1273 1848                                l3201 16C0  
                              l1361 1F8E                                l4001 3C72  
                              l1338 2246                                l3131 3522  
                              l3123 34F8                                l3115 34DA  
                              l3211 16F4                                l3203 16C2  
                              l1339 2234                                l4003 3E86  
                              l1364 1E20                                l4101 3E36  
                              l4021 2F8E                                l3141 3556  
                              l3133 3530                                l3125 3500  
                              l3117 34DE                                l3109 34C0  
                              l3221 1726                                l3205 16D2  
                              l3213 16FC                                l1357 1C2A  
                              l4013 3EA0                                l4005 3E8C  
                              l1374 1F50                                l1366 1E98  
                              l4103 3E38                                l4031 2FB4  
                              l3143 355C                                l3135 3536  
                              l3127 3512                                l3119 34EC  
                              l3311 18FE                                l3303 18C6  
                              l3231 175C                                l3223 172C  
                              l3215 170C                                l3207 16E2  
                              l1367 1E86                                l4015 3ED6  
                              l4007 3E58                                l3071 3CBE  
                              l4111 3C32                                l1288 19AE  
                              l4105 3E3A                                l4041 2FF2  
                              l4033 2FC2                                l3137 354C  
                              l3129 351A                                l3145 3562  
                              l1297 1A7E                                l3313 1902  
                              l3305 18D6                                l3321 1922  
                              l3241 1798                                l3233 176C  
                              l3225 173A                                l3217 1712  
                              l3209 16F2                                l3401 1B72  
                              l4017 3E70                                l4121 3A28  
                              l4009 3E6C                                l3073 3EC2  
                              l3081 3EB8                                l3161 3918  
                              l4113 3C42                                l5001 26EE  
                              l1298 1A6C                                l4043 3000  
                              l4051 301E                                l4035 2FC4  
                              l4027 2F92                                l4019 2F76  
                              l3147 3572                                l3139 3554  
                              l3323 1948                                l3331 199E  
                              l3315 1910                                l3307 18E4  
                              l3251 17B6                                l3243 17A6  
                              l3235 176E                                l3227 173C  
                              l3219 1724                                l3411 1BB2  
                              l3403 1B80                                l4131 3A34  
                              l4123 3A2C                                l3091 3BE8  
                              l3075 3EC6                                l3083 3EBC  
                              l3171 39C2                                l4115 3C4C  
                              l4107 3C24                                l5011 2748  
                              l5003 2702                                l4061 3068  
                              l4053 3036                                l4045 3002  
                              l4037 2FC6                                l4029 2FA4  
                              l3149 357A                                l3341 19F2  
                              l3333 19C4                                l3325 197C  
                              l3317 1912                                l3309 18F2  
                              l3261 17CA                                l3253 17BA  
                              l3245 17AA                                l3229 174C  
                              l3237 1776                                l3501 1EB4  
                              l3421 1BE2                                l3413 1BB8  
                              l3405 1B82                                l4141 3A46  
                              l4133 3A36                                l4125 3A2E  
                              l3069 3CAE                                l3093 3BF0  
                              l3085 3ECC                                l3077 3E96  
                              l3173 3A08                                l3165 3922  
                              l3157 3D8C                                l4117 3C56  
                              l4109 3C28                                l5021 27AA  
                              l5013 274A                                l5005 2704  
                              l1398 2E16                                l4071 30A6  
                              l4063 306A                                l4047 3004  
                              l4039 2FDE                                l4055 303C  
                              l3191 2CD0                                l3183 2BEC  
                              l3351 1A1C                                l3343 1A00  
                              l3335 19D4                                l3327 197E  
                              l3319 191C                                l3271 17DE  
                              l3263 17CE                                l3255 17BE  
                              l3247 17AE                                l3239 1786  
                              l3511 1F1E                                l3503 1EC2  
                              l3431 1C1A                                l3423 1BE4  
                              l3415 1BC8                                l3407 1B92  
                              l4143 3A48                                l4135 3A38  
                              l4127 3A30                                l4119 3A14  
                              l3095 3BF8                                l3087 3ED0  
                              l3079 3E9A                                l3167 3968  
                              l3159 38D2                                l4151 3D6A  
                              l5023 27B8                                l5015 2766  
                              l5007 271A                                l4081 30DE  
                              l4073 30A8                                l4065 306C  
                              l4057 304C                                l4049 301C  
                              l3193 2CEC                                l3185 2C08  
                              l3361 1A4E                                l3353 1A2C  
                              l3345 1A02                                l3329 198E  
                              l3281 1830                                l3273 17E2  
                              l3265 17D2                                l3257 17C2  
                              l3249 17B2                                l3521 1F74  
                              l3513 1F38                                l3505 1EEC  
                              l3441 1C6A                                l3433 1C3A  
                              l3425 1BF4                                l3417 1BCE  
                              l3409 1BA2                                l3601 2EFA  
                              l4145 3A54                                l4137 3A3A  
                              l4129 3A32                                l4161 3DD4  
                              l3097 3C1E                                l3089 3BE4  
                              l3177 3972                                l4153 3D72  
                              l5025 27C4                                l5017 2784  
                              l5009 2734                                l4075 30AA  
                              l4067 3084                                l4059 305A  
                              l3195 2D56                                l3187 2C6A  
                              l3371 1AA8                                l3363 1A64  
                              l3347 1A10                                l3339 19E8  
                              l3355 1A2E                                l3291 1874  
                              l3283 1840                                l3267 17D6  
                              l3259 17C6                                l3275 17E6  
                              l3531 33EA                                l3515 1F54  
                              l3523 1F7A                                l3507 1EF0  
                              l3451 1CBA                                l3443 1C74  
                              l3435 1C4A                                l3427 1C04  
                              l3419 1BD4                                l3611 2F52  
                              l3603 2F18                                l4147 3A58  
                              l4139 3A3C                                l4171 3DE6  
                              l4163 3DD6                                l3099 3C20  
                              l3179 39B8                                l4155 3D7C  
                              l5019 279E                                l5027 27CC  
                              l4077 30C2                                l4069 3098  
                              l3189 2CB0                                l3381 1B24  
                              l3373 1AE2                                l3349 1A18  
                              l3357 1A3C                                l3293 1876  
                              l3285 1856                                l3277 17EA  
                              l3269 17DA                                l3197 16A6  
                              l3541 3458                                l3533 33FA  
                              l3525 1F7E                                l3517 1F64  
                              l3509 1F0A                                l3461 1CFC  
                              l3453 1CC6                                l3445 1C8A  
                              l3429 1C14                                l3613 2F60  
                              l3605 2F1A                                l4149 3A5C  
                              l4165 3DD8                                l4173 3DAA  
                              l4261 3740                                l4157 3D86  
                              l4079 30C4                                l3391 1B44  
                              l3383 1B28                                l3367 1A8E  
                              l3375 1AE4                                l3359 1A40  
                              l3295 1880                                l3287 1862  
                              l3279 1814                                l3199 16B2  
                              l3543 3466                                l3535 3428  
                              l3519 1F72                                l3471 1D5E  
                              l3463 1D0C                                l3455 1CD4  
                              l3447 1C96                                l3439 1C5E  
                              l3551 37A2                                l3615 2F62  
                              l3607 2F1E                                l4167 3DE2  
                              l4159 3DCA                                l4175 3DB0  
                              l3631 3D4A                                l4271 3780  
                              l4263 3742                                l4097 3E24  
                              l3641 36D6                                l3633 36A0  
                              l3393 1B52                                l3385 1B36  
                              l3377 1AF4                                l3369 1A9A  
                              l3297 18A2                                l3289 1866  
                              l3545 34B6                                l3537 3438  
                              l3529 33BC                                l3481 1E06  
                              l3473 1D7A                                l3465 1D26  
                              l3457 1CE0                                l3449 1CAE  
                              l3561 37DA                                l3553 37AA  
                              l3609 2F42                                l4169 3DE4  
                              l4177 3DC0                                l3801 20B2  
                              l4273 378C                                l4265 375A  
                              l4257 372A                                l4281 3D2A  
                              l4099 3E2E                                l3635 36A6  
                              l3643 36DE                                l3395 1B54  
                              l3387 1B3C                                l3379 1B04  
                              l3299 18B2                                l3547 34BC  
                              l3539 3446                                l3491 1E42  
                              l3483 1E10                                l3475 1DA4  
                              l3467 1D36                                l3459 1CF0  
                              l3571 3806                                l3563 37E0  
                              l3555 37BC                                l3651 3612  
                              l3811 20F0                                l3803 20B2  
                              l4275 3798                                l4267 3766  
                              l4259 373A                                l4291 3D3A  
                              l4283 3D30                                l3645 36F6  
                              l3637 36BE                                l3389 1B3E  
                              l3493 1E50                                l3485 1E1E  
                              l3477 1DDA                                l3469 1D52  
                              l3565 37F6                                l3557 37C4  
                              l3581 2E3C                                l3573 2DC2  
                              l4701 2B9E                                l3653 3636  
                              l3661 366E                                l3821 213C  
                              l3813 2100                                l3901 35F8  
                              l4277 379A                                l4269 377E  
                              l4293 3D3E                                l4285 3D34  
                              l3647 370E                                l3639 36CA  
                              l3495 1E7E                                l3487 1E30  
                              l3479 1DE8                                l3399 1B66  
                              l3567 37FE                                l3559 37CC  
                              l3591 2E96                                l3575 2DD2  
                              l4703 2BA4                                l4711 28E0  
                              l3663 3686                                l3655 364E  
                              l3831 2186                                l3823 214A  
                              l3815 2110                                l3807 20C6  
                              l3751 1F9C                                l3911 3128  
                              l3671 3B1C                                l3903 3E0A  
                              l4295 3D40                                l4287 3D36  
                              l4279 3D24                                l3649 3726  
                              l3489 1E3E                                l3569 3800  
                              l3593 2E98                                l3585 2E50  
                              l3577 2DE0                                l4721 292E  
                              l4713 28E6                                l4705 27E8  
                              l4801 251A                                l3657 365A  
                              l3841 21CC                                l3833 2198  
                              l3825 2156                                l3817 2118  
                              l3809 20E0                                l3761 1FDC  
                              l3753 1FAA                                l3913 313C  
                              l3905 30F0                                l3665 3816  
                              l3921 326C                                l3673 3B26  
                              l4297 3D42                                l4289 3D38  
                              l3499 1EA8                                l3595 2EA4  
                              l3587 2E58                                l3579 2E26  
                              l4731 297E                                l4723 293A  
                              l4715 28FE                                l4707 28BE  
                              l4811 2558                                l4803 251C  
                              l3659 3666                                l3851 222C  
                              l3835 21AE                                l3843 21DE  
                              l3827 2174                                l3819 2128  
                              l3771 2002                                l3763 1FDE  
                              l3755 1FAC                                l3915 319C  
                              l3907 3100                                l3931 32BA  
                              l3923 3284                                l3675 3B30  
                              l3667 3B02                                l4299 3D44  
                              l3597 2EE0                                l3589 2E64  
                              l4733 298C                                l4725 2946  
                              l4717 290A                                l4709 28D0  
                              l4741 3A74                                l4821 2584  
                              l4813 255A                                l4805 251E  
                              l3861 229A                                l3845 21EC  
                              l3837 21B4                                l3829 2176  
                              l3781 2042                                l3773 2010  
                              l3757 1FBC                                l3765 1FE6  
                              l3749 1F90                                l3917 3200  
                              l3909 3114                                l3941 3304  
                              l3933 32D2                                l3925 3294  
                              l4901 142A                                l3677 3B3A  
                              l3669 3B0C                                l3599 2EEC  
                              l4671 29EA                                l4735 299C  
                              l4719 2922                                l4727 294E  
                              l4743 3A94                                l4823 2586  
                              l4815 2570                                l4807 252E  
                              l4751 232A                                l3871 2304  
                              l3855 2256                                l3863 229E  
                              l3847 21F0                                l3839 21BE  
                              l3791 2082                                l3783 2044  
                              l3775 2012                                l3767 1FF6  
                              l3759 1FCC                                l3943 331C  
                              l3951 3346                                l3935 32D4  
                              l3927 3296                                l3919 3266  
                              l4903 143E                                l4831 0EA8  
                              l3679 3B44                                l4681 2B00  
                              l4673 2AC0                                l4737 29A2  
                              l4729 2966                                l4745 3AB2  
                              l4825 2588                                l4817 257E  
                              l4809 254A                                l4761 23AA  
                              l4753 2340                                l3873 2308  
                              l3865 22B8                                l3857 2262  
                              l3849 21FE                                l3793 208A  
                              l3777 2022                                l3785 204C  
                              l3769 1FFC                                l3961 3396  
                              l3953 3358                                l3945 3328  
                              l3929 32AE                                l3937 32F0  
                              l4921 1582                                l4905 1456  
                              l4913 14A6                                l4841 0F82  
                              l4833 0EC8                                l4691 2B48  
                              l4683 2B0C                                l4675 2AD2  
                              l4747 3AC4                                l4739 3A62  
                              l4819 2580                                l4771 23DC  
                              l4763 23B8                                l4755 2350  
                              l4827 25A2                                l3971 3876  
                              l3875 2316                                l3867 22CE  
                              l3859 2270                                l3795 208E  
                              l3787 205C                                l3779 2032  
                              l3955 335A                                l3947 3340  
                              l3939 3302                                l3891 35A8  
                              l4931 15E4                                l4923 1588  
                              l4915 14D8                                l4907 1484  
                              l4843 0FB4                                l4835 0EFA  
                              l4851 104E                                l4685 2B24  
                              l4693 2B50                                l4677 2AE2  
                              l4749 3AE4                                l4781 244A  
                              l4773 23F6                                l4765 23BE  
                              l4757 236A                                l3973 388A  
                              l3877 231C                                l3869 22E8  
                              l3789 2072                                l3957 3372  
                              l3965 339C                                l3893 35C0  
                              l4941 164A                                l4933 15F0  
                              l4917 150A                                l4925 1590  
                              l4861 113A                                l4853 1080  
                              l4845 0FFA                                l4837 0F2C  
                              l4829 0EA4                                l4695 2B68  
                              l4687 2B30                                l4679 2AE8  
                              l4791 24A0                                l4783 244C  
                              l4775 2414                                l4767 23C0  
                              l4759 2388                                l3975 38A2  
                              l3879 231E                                l3799 20A2  
                              l3967 33A2                                l3959 337E  
                              l3895 35CC                                l4943 1654  
                              l4935 1614                                l4927 15AA  
                              l4919 153C                                l4855 10B2  
                              l4951 16A0                                l4847 1004  
                              l4839 0F5E                                l3991 3C5C  
                              l4697 2B80                                l4689 2B3C  
                              l4793 24B4                                l4785 2466  
                              l4777 2436                                l4769 23DA  
                              l3977 38CE                                l3969 3874  
                              l3897 35D8                                l3889 3584  
                              l4945 1684                                l4937 1636  
                              l4929 15BE                                l4881 12D2  
                              l4873 1224                                l4865 1184  
                              l4857 10E4                                l3993 3C66  
                              l4961 260E                                l4953 25B4  
                              l4699 2B8E                                l4795 24CE  
                              l4787 2468                                l4779 2444  
                              l3899 35E0                                l4939 1646  
                              l4891 137C                                l4883 1304  
                              l4867 11A8                                l4859 1108  
                              l3995 3C6C                                l4971 2632  
                              l4963 2616                                l4955 25EA  
                              l4797 24EC                                l4789 2482  
                              l4885 1318                                l4869 11DA  
                              l4877 126E                                l3997 3C6E  
                              l4981 265A                                l4973 2638  
                              l4965 2622                                l4957 25F2  
                              l4799 2500                                l4887 1330  
                              l4879 12A0                                l4895 1394  
                              l3999 3C70                                l4991 26A0  
                              l4983 266C                                l4975 263C  
                              l4967 262A                                l4959 25FE  
                              l4897 13C6                                l4889 135E  
                              l4993 26B2                                l4985 267C  
                              l4977 2640                                l4969 262E  
                              l4899 13F8                                l4995 26C2  
                              l4987 2682                                l4979 2644  
                              l4997 26CE                                l4989 269C  
                              l4999 26DE                                STR_1 0E01  
                              STR_2 0E9F                                STR_4 0E80  
                              STR_6 0E94                                u3000 1AE2  
                              u3001 1ADE                                u3010 1AF4  
                              u3011 1AF0                                u3020 1B04  
                              u3100 1BF4                                u3021 1B00  
                              u3101 1BF0                                u3030 1B24  
                              u3110 1C04                                u3031 1B20  
                              u3111 1C00                                u4000 30A6  
                              u3040 1B36                                u3200 1EA8  
                              u3120 1C3A                        _BAUD4CONbits 000EE9  
                              u4001 30A2                                u3041 1B32  
                              u3201 1EA4                                u3121 1C36  
                              _LATE 000F7D                                u4010 30EE  
                              u3050 1B52                                u3210 1EC2  
                              u3130 1C4A                                u4011 30EA  
                              u3051 1B4E                                u3211 1EBE  
                              u3131 1C46                                _LATG 000F7F  
                              u3220 1F0A                                u3140 1DC4  
                              u3060 1B80                                u3300 37BC  
                              u4020 3DC0                                u3221 1F06  
                              u3061 1B7C                                u3301 37B8  
                              u4021 3DBC                                u3230 1F38  
                              u3150 1E1E                                u3070 1B92  
                              u3310 37DA                                u2510 3CBE  
                              u3231 1F34                                u3151 1E1A  
                              u3071 1B8E                                u3311 37D6  
                              u2511 3CBA                                u2600 3572  
                              u3240 1F72                                u3160 1E3E  
                              u3080 1BA2                                u3320 37F6  
                              u3400 2F18                                u5000 2922  
                              u2520 3CD4                                u2601 356E  
                              u3241 1F6E                                u3161 1E3A  
                              u3145 1DBA                                u3081 1B9E  
                              u3321 37F2                                u3401 2F14  
                              u5001 291E                                u2521 3CD0  
                              u3250 33EA                                u3170 1E50  
                              u3090 1BE2                                u3410 2F52  
                              u3330 2DD2                                u5010 2966  
                              u2530 3C0C                                _T2PR 000FBC  
                              u3251 33E6                                u3171 1E4C  
                              u3091 1BDE                                u3411 2F4E  
                              u3331 2DCE                                u5011 2962  
                              u2531 3C04                                u2700 1724  
                              u3260 3428                                u3180 1E7E  
                              u3420 2F60                                u3340 2DE0  
                              u5020 297E                                u5100 2436  
                              u2701 1720                                u3261 3424  
                              u3181 1E7A                                u3421 2F5C  
                              u3341 2DDC                                u5021 297A  
                              u5101 2432                                u2550 34D2  
                              u2630 2C08                                u2710 173A  
                              u3270 3446                                u3190 1E94  
                              u3350 2E3C                                u5030 29E6  
                              u5110 2444                                u2551 34CE  
                              u2631 2C04                                u2711 1736  
                              u3271 3442                                u3191 1E90  
                              u3351 2E38                                u5031 29E2  
                              u5111 2440                                u2560 34EC  
                              u2640 2CEC                                u2800 1874  
                              u2720 174C                                u3280 3466  
                              u3360 2E92                                u5040 3A74  
                              u5120 252E                                u3600 1FAA  
                              u5200 0F2C                                u4160 3738  
                              u2561 34E8                                u2641 2CE8  
                              u2801 1870                                u2721 1748  
                              u3281 3462                                u3361 2E8E  
                              u5041 3A70                                u5121 252A  
                              u3601 1FA6                                u5201 0F28  
                              u4161 3734                                u2570 3512  
                              u2810 1894                                u2730 175C  
                              u3290 34B6                                u3370 2EDC  
                              u5050 3AC4                                u5130 253C  
                              u3610 1FBC                                u5210 0F5E  
                              u2571 350E                                u2811 1890  
                              u2731 1758                                u3291 34B2  
                              u3371 2ED8                                u5051 3AC0  
                              u5131 2538                                u3611 1FB8  
                              u3435 3D52                                u5211 0F5A  
                              u2580 3530                                u3460 36F6  
                              u2900 19D4                                u2820 18A2  
                              u2740 1798                                u3380 2EFA  
                              u5140 254A                                u5060 2340  
                              u3700 2174                                u3620 1FCC  
                              u3436 3D54                                u2548 3C0E  
                              u5300 1304                                u5220 0FB4  
                              u2581 352C                                u3461 36F2  
                              u2901 19D0                                u2821 189E  
                              u2741 1794                                u3381 2EF6  
                              u5141 2546                                u5061 233C  
                              u3701 2170                                u3621 1FC8  
                              u3445 3D5C                                u5301 1300  
                              u5221 0FB0                                u2590 354C  
                              u2654 2D46                                u3470 370E  
                              u2910 1A00                                u2830 18B2  
                              u2750 17A6                                u2670 16C0  
                              u3390 2F0A                                u5150 2558  
                              u5070 234E                                u3710 2198  
                              u3630 2010                                u3446 3D5E  
                              u5310 13C6                                u5230 1080  
                              u2591 3548                                u2655 2D42  
                              u3471 370A                                u2911 19FC  
                              u2831 18AE                                u2751 17A2  
                              u2671 16BC                                u3391 2F06  
                              u5151 2554                                u6007 2458  
                              u5071 234A                                u3711 2194  
                              u3631 200C                                u3455 3D66  
                              u5311 13C2                                u5231 107C  
                              u2664 2DB0                                u2920 1A10  
                              u2840 18E4                                u2760 1814  
                              u2680 16D2                                u5160 2570  
                              u5080 23AA                                u3480 3686  
                              u3800 22B8                                u3720 21AE  
                              u3640 2022                                u3456 3D68  
                              u5400 1698                                u5320 13F8  
                              u5240 10B2                                u2665 2DAC  
                              u2921 1A0C                                u2841 18E0  
                              u2761 1810                                u2681 16CE  
                              u5161 256C                                u6017 2474  
                              u5081 23A6                                u3481 3682  
                              u3801 22B4                                u3721 21AA  
                              u3641 201E                                u5401 1692  
                              u5321 13F4                                u5241 10AE  
                              u2930 1A2C                                u2850 18F2  
                              u2770 182C                                u2690 16E2  
                              u5170 257E                                u5090 23B8  
                              u3490 369E                                u3810 22E8  
                              u3730 21CC                                u3650 2032  
                              u5410 169A                                u5330 142A  
                              u5250 10E4                                u6107 3718  
                              u2931 1A28                                u2851 18EE  
                              u2771 1826                                u2691 16DE  
                              u5171 257A                                u6027 24C0  
                              u5091 23B4                                u3491 369A  
                              u3811 22E4                                u3731 21C8  
                              u3651 202E                                u5331 1426  
                              u5251 10E0                                u2940 1A3C  
                              u2860 1910                                u2780 182E  
                              u5180 25B2                                u3900 3E68  
                              u3820 2316                                u3740 21EC  
                              u3660 2072                                u5340 14D8  
                              u5260 113A                                u5420 266C  
                              u6117 2F80                                u2941 1A38  
                              u2861 190C                                u5181 25AE  
                              u6037 250C                                u3901 3E64  
                              u3821 2312                                u3741 21E8  
                              u3661 206E                                u5341 14D4  
                              u5261 1136                                u5421 2668  
                              u3910 2FA4                                u2950 1A4E  
                              u2870 1948                                u2790 1856  
                              u3750 21FE                                u3670 20B2  
                              u3830 35F8                                u5350 150A  
                              u5270 11DA                                u5190 0EFA  
                              u5430 267A                                u6127 2FD0  
                              u3911 2FA0                                u2951 1A4A  
                              u2871 1944                                u2791 1852  
                              u6047 2594                                u3751 21FA  
                              u3671 20AE                                u3831 35F4  
                              u5351 1506                                u5271 11D6  
                              u5191 0EF6                                u5431 2676  
                              u3920 2FB4                                u2960 1A64  
                              u2880 198E                                u3760 222C  
                              u3680 2128                                u3840 3610  
                              u5360 153C                                u5280 12A0  
                              u5440 26B2                                u6137 300E  
                              u3921 2FB0                                u2961 1A60  
                              u2881 198A                                u6057 2948  
                              u3761 2228                                u3681 2124  
                              u3841 360C                                u5361 1538  
                              u5281 129C                                u5441 26AE  
                              u3930 2FC2                                u2970 1A7A  
                              u2890 19C4                                u3770 2242  
                              u3690 214A                                u3850 3294  
                              u5370 1614                                u5290 12D2  
                              u5450 26C2                                u6147 3028  
                              u3931 2FBE                                u2971 1A76  
                              u2891 19C0                                u6067 2992  
                              u3771 223E                                u3691 2146  
                              u3851 3290                                u5371 1610  
                              u5291 12CE                                u5451 26BE  
                              u3940 2FF2                                u2980 1A8E  
                              u3780 2256                                u3860 3302  
                              u5380 1636                                u5460 26DE  
                              u6157 3076                                u3941 2FEE  
                              u2981 1A8A                                u6077 2B4A  
                              u3781 2252                                u3861 32FE  
                              u5381 1632                                u5461 26DA  
                              u3950 3000                                u2990 1AA8  
                              u3790 2270                                u3870 3358  
                              u5390 1646                                u5470 26EE  
                              u6167 30B4                                u3951 2FFC  
                              u2991 1AA4                                u6087 2B94  
                              u3791 226C                                u3871 3354  
                              u5391 1642                                u5471 26EA  
                              u3960 304C                                u6177 30CE  
                              u3961 3048                                u6097 36D8  
                              u3970 305A                                u3971 3056  
                              u5707 268E                                u3980 3068  
                              u4940 2B00                                u3981 3064  
                              u4941 2AFC                                u5717 2726  
                              u3990 3098                                u4950 2B24  
                              u3991 3094                                u4951 2B20  
                              u5807 144A                                u5727 2758  
                              u4960 2B68                                u4961 2B64  
                              u5817 1476                                u5737 2790  
                              u4970 2B80                                u4971 2B7C  
                              u5907 3332                                u5827 159C  
                              u5747 3B12                                u4980 2BE8  
                              u4981 2BE4                                u5917 3364  
                              u5837 15C6                                u5757 3C38  
                              u4990 28FE                                u4991 28FA  
                              u5927 3388                                u5847 35DA  
                              u5767 374C                                u5937 33AC  
                              u5857 3276                                u5777 3770  
                              u5947 3894                                u5867 32A0  
                              u5787 1324                                u5957 38C0  
                              u5877 32C4                                u5797 1350  
                              u5967 3668                                u5887 32DE  
                              u5977 235C                                u5897 330E  
                              u5987 23CC                                u5997 23E8  
                       main@current 008D             __end_of_interrupts_init 3D48  
           __end_of_DCmotors_setPWM 2DC0                                _main 25B4  
                              _left 29EA                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0056  
                              _stop 36A0                                prodh 000FF4  
                              prodl 000FF3                                start 005C  
                  __end_of_ADC_init 3E3E                     ___fldiv@new_exp 0036  
                   __end_of_HighISR 3BE2                        ___param_bank 000000  
            ?_colourclick_readRGBC2 0017              ??_clicker2buttons_init 000A  
                   __end_of___fladd 1B66                               ?_main 0001  
                             ?_left 0060                               _ADPCH 000F5F  
                   __end_of___fldiv 232A                     __end_of___awdiv 3584  
                             STR_10 0E6D                               STR_12 0E87  
                             STR_14 0E9A                               STR_16 0E8E  
                             STR_18 0E78                               STR_19 0E41  
                   __end_of___flmul 1F90                               ?_stop 0023  
                   ___awdiv@divisor 0012                     __end_of___lwdiv 3816  
                             i1l146 004C                               i2l131 3E56  
                             i2l140 3BDE                               i2l134 3B9C  
                             i2l308 3E08                               i2l433 3CD6  
                             i2l436 3CFC                               i2l445 3EE8  
                             i2l439 3EF2                               i2l448 3EB6  
        ?i2_colourclick_writetoaddr 0003             _colourclick_writetoaddr 3D8A  
                   ___awdiv@counter 0014                               _TMR0H 000FD4  
                             _TMR0L 000FD3            __end_of_interrupts_clear 3E24  
        __end_of_I2C_2_Master_Start 3ECC          __end_of_I2C_2_Master_Write 3EA0  
     __size_of_DCmotors_calibration 028A            ?_colourclick_calibration 0001  
                   __end_of_forward 3612                colourclickLEDs_C@tog 000A  
                             _right 27E8                   _clicker2LEDs_init 3ED6  
                             left@i 006E     __size_of_interrupts_colourclick 004E  
                   __end_of_reverse 36A0              DCmotors_init@PWMperiod 000A  
                ?_clicker2LEDs_init 0001                               ttemp5 0057  
                             ttemp6 005A                               ttemp7 005E  
                             status 000FD8                               wtemp8 0057  
             _I2C_2_Master_RepStart 3ECC                     __initialization 3C86  
               ??_clicker2LEDs_init 000A                        __end_of_main 27E8  
                      __end_of_left 2BEC                        __end_of_stop 372A  
__size_of_colourcards_normaliseRGBC 0176       __size_of_colourcards_readRGBC 0802  
                            ??_main 008A                              ??_left 004E  
                            ??_stop 0027                       __activetblptr 000001  
      __size_ofi2_I2C_2_Master_Idle 0028   __end_ofi2_colourclick_writetoaddr 3E0A  
            ??_colourclick_readRGBC 0017        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 3EE0                     _colourcard_flag 00AA  
                            _ADRESH 000F64           __size_of_colourclick_init 0038  
                            ?_right 0060                    ___awdiv@dividend 0010  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            i1l4513 0026                              i1l4515 0036  
                            i1l4517 0048                              i2l3153 3CD6  
                            i2l3155 3CE6                              i2l4091 3B7E  
                            i2l4083 3B50                              i2l3621 3EEE  
                            i2l4093 3B88                              i2l4085 3B5A  
                            i2l3623 3EE0                              i2l4095 3B92  
                            i2l4087 3B6A                              i2l4511 3BDA  
                            i2l4503 3B9E                              i2l3625 3EE4  
                            i2l4089 3B74                              i2l4425 3E3E  
                            i2l4505 3BAE                              i2l3619 3EEA  
                            i2l3627 3EAE                              i2l4507 3BB4  
                            i2l3629 3EB2                              i2l4509 3BD6  
                            i2l3887 3DEC                    __end_of_adjdelay 30F0  
                  ?_interrupts_init 0001                    ?_DCmotors_setPWM 0018  
                         ??_HighISR 0006                              _RX4PPS 000E15  
    i2colourclick_writetoaddr@value 0003                              _TX4REG 000EE4  
                  __end_of___xxtofl 2F74                              _LowISR 0018  
                      ??_ADC_getval 000A                              ___flge 33BC  
            colourcards_readRGBC@mL 0078              colourcards_readRGBC@mR 007A  
                         ??___fladd 0046                              ___wmul 3CFE  
                         ??___fldiv 002D                           ??___awdiv 0014  
                         ??___flmul 002D   __size_ofi2_interrupts_colourclick 004E  
                      ?_timer0_init 0001           ?i2_interrupts_colourclick 0001  
            _interrupts_colourclick 3B02                           ??___lwdiv 0014  
                  ??_buggyLEDs_init 000A                  i2_interrupts_clear 3E3E  
         ??_colourclick_writetoaddr 000D                    ___awdiv@quotient 0016  
                            isa$std 000001   __end_of_colourcards_normaliseRGBC 3266  
                            left@mL 0060                              left@mR 0062  
                         ??_forward 0027                 ?i2_interrupts_clear 0001  
                            right@i 006E                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptru 000FF8  
                         ?_ADC_init 0001                           ??_reverse 0027  
                            stop@mL 0023                              stop@mR 0025  
                __end_of_ADC_getval 3E70                        ?_USART4_init 0001  
                        ___flge@ff1 0025                          ___flge@ff2 0029  
                      ___xxtofl@arg 0021                        ___xxtofl@exp 0020  
                      ___xxtofl@val 0017                    __end_of_turnleft 3B02  
                        __accesstop 0060             __end_of__initialization 3C9C  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
              ??i2_interrupts_clear 0006                      __pcstackCOMRAM 0001  
                     __end_of_right 29EA                  __size_of_clearance 005E  
     checkbatterylevel@batterylevel 000B                          ??_ADC_init 000A  
        __size_of_clicker2LEDs_init 000A                             ??_right 004E  
     __size_of_colourclickLEDs_init 000E     __end_of_colourclick_writetoaddr 3DAA  
                        __pbssBANK0 00A7            DCmotors_calibration@okay 004F  
                 _checkbatterylevel 3DAA             ??_colourclick_readRGBC2 001A  
     __size_ofi2_I2C_2_Master_Start 000A       __size_ofi2_I2C_2_Master_Write 000C  
                ?_checkbatterylevel 0001                             ?_LowISR 0001  
                      _T2CLKCONbits 000FBF                             ?___flge 0025  
                           ?___wmul 000A                 ??_checkbatterylevel 000B  
                         ?_adjdelay 0001                             _INT1PPS 000DF1  
       ??i2_colourclick_writetoaddr 0004                           ?___xxtofl 0017  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                 ?_interrupts_clear 0001                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5                  ??_interrupts_clear 000F  
                  _colourclick_init 3C24           __end_of_checkbatterylevel 3DCA  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
                 __end_of_clearance 38D2                           _ADREFbits 000F58  
                _I2C_2_Master_Start 3EC2                 i2_I2C_2_Master_Idle 3CD6  
                _I2C_2_Master_Write 3E94                             __Hparam 0000  
               i2_I2C_2_Master_Stop 3EE0        __end_of_DCmotors_calibration 25B4  
                __size_of_turnright 0050    __size_of_colourclick_calibration 0078  
                           __Lparam 0000                     __size_of_LowISR 0044  
                   __size_of___flge 0104                             ___fladd 16A6  
                           ___fldiv 1F90                             ___awdiv 34C0  
           colourcards_readRGBC@abs 0076                             ___flmul 1B66  
           colourcards_readRGBC@rel 007E                     __size_of___wmul 0026  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 37A2  
               ?_I2C_2_Master_Write 0001                        __psmallconst 0E00  
                           __pcinit 3C86                             __ramtop 0E00  
              __size_of_timer0_init 0020                             __ptext0 25B4  
                           __ptext1 3D6A                             __ptext2 3D24  
                           __ptext3 3E0A                             __ptext4 3B02  
                           __ptext5 3C24                             __ptext6 3D8A  
                           __ptext7 3E86                             __ptext8 3C5C  
                           __ptext9 372A       __size_of_clicker2buttons_init 000C  
                         ?_turnleft 0070                          ??_adjdelay 000A  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                           _forward 3584                          ??___xxtofl 001B  
              ?i2_I2C_2_Master_Stop 0001                          _right$3194 006A  
                         _T2HLTbits 000FBE                             _reverse 3612  
              ??_I2C_2_Master_Start 000B                             left@deg 0064  
              ??_I2C_2_Master_Write 000B                      __pintcode_body 3B9E  
              end_of_initialization 3C9C        __end_of_colourcards_readRGBC 16A6  
                  ADC_getval@tmpval 000A    __end_ofi2_interrupts_colourclick 3B9E  
              __size_of_USART4_init 0020                             int_func 3B9E  
         i2_colourclick_writetoaddr 3DEA                             right@mL 0060  
                           right@mR 0062                        adjdelay@mode 000C  
           ?_interrupts_colourclick 0001                             postdec1 000FE5  
                           postdec2 000FDD                             postinc1 000FE6  
                           postinc2 000FDE      colourclick_calibration@initial 0019  
      colourclick_writetoaddr@value 000C                       _DCmotors_init 3A12  
                         _PORTFbits 000F8E                          ??_turnleft 004F  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
                       ___fladd@grs 004D                       ___xxtofl@sign 001F  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                   __end_of_turnright 3AB2  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0038  
                       ___fldiv@rem 0031       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 000B  
              colourclick_readB@tmp 0013                colourclick_readC@tmp 0013  
        __size_of_checkbatterylevel 0020                colourclick_readG@tmp 0013  
              colourclick_readR@tmp 0013                         ___flmul@grs 0032  
    __end_of_interrupts_colourclick 3B50                          main@motorL 0095  
                        main@motorR 009E                      __end_of_LowISR 005C  
          __size_of_interrupts_init 0024            __size_of_DCmotors_setPWM 01D4  
                    __end_of___flge 34C0          colourclick_readRGBC@tmpval 0015  
                    ?_DCmotors_init 0001                      __end_of___wmul 3D24  
        ?_colourcards_normaliseRGBC 003E                 start_initialization 3C86  
              _DCmotors_calibration 232A                    _unknowncard_flag 00A9  
                   _returnhome_flag 00A8             _colourclick_calibration 372A  
       __size_ofi2_interrupts_clear 001A                            ??_LowISR 0007  
          i2_interrupts_colourclick 3B50                        turnright@deg 0074  
    __size_of_colourclick_readRGBC2 0156       __end_of_colourclick_readRGBC2 33BC  
          ?_colourclick_writetoaddr 000C          colourcards_normaliseRGBC@B 0046  
        colourcards_normaliseRGBC@C 0048          colourcards_normaliseRGBC@G 0044  
        colourcards_normaliseRGBC@R 0042                            ??___flge 002D  
      __end_of_colourclickLEDs_init 3E94                            ??___wmul 000E  
          __end_of_colourclick_init 3C5C       i2I2C_2_Master_Write@data_byte 0002  
              _colourcards_readRGBC 0EA4        __end_ofi2_I2C_2_Master_Start 3EF4  
      __end_ofi2_I2C_2_Master_Write 3EB8                           ___fladd@a 0042  
                         ___fladd@b 003E                           ___fldiv@a 0029  
                         ___fldiv@b 0025                           ___flmul@a 0029  
                         ___flmul@b 0025                         __pbssCOMRAM 0050  
                     __pcstackBANK0 0060                   __size_of_adjdelay 017C  
             ?_DCmotors_calibration 0076             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4                            ?_HighISR 0001  
         __size_of_interrupts_clear 001A                    ___lwdiv@dividend 0010  
                         _clearance 3874                           _left$3193 006A  
                         __pintcode 0008                     ??_DCmotors_init 000A  
                          ?___fladd 003E                            ?___fldiv 0025  
                          ?___awdiv 0010                            ?___flmul 0025  
                          ?___lwdiv 0010  __size_ofi2_colourclick_writetoaddr 0020  
             ?_colourcards_readRGBC 0076                         __pintcodelo 0018  
                         adjdelay@i 000D                          right@delay 0066  
              I2C_2_Master_Read@ack 000C                   ??_interrupts_init 000F  
                 ??_DCmotors_setPWM 001A                I2C_2_Master_Read@tmp 000D  
             _interrupts_lowerbound 0052                         __smallconst 0E00  
                          ?_forward 0023                   _I2C_2_Master_Idle 3CAE  
                 _I2C_2_Master_Init 3C5C                   _I2C_2_Master_Read 3BE2  
                 _I2C_2_Master_Stop 3EB8                   __size_of_turnleft 0050  
                          _ADC_init 3E24                            ?_reverse 0023  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
                  ___lwdiv@quotient 0014                      __size_of_right 0202  
         ??_colourclick_calibration 0017        __end_of_clicker2buttons_init 3EAC  
               ??_I2C_2_Master_Idle 000A                 ??_I2C_2_Master_Init 000A  
               ??_I2C_2_Master_Read 000B                      ___wmul@product 000E  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 000B  
                          _LATCbits 000F7B                   _colourclickLEDs_C 3D48  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                  ?_colourclickLEDs_C 0001  
                          i1u449_20 0036                            i1u449_21 0032  
                          i2u261_40 3CE6                            i2u261_41 3CE2  
                          i2u262_40 3CFC                            i2u262_41 3CF8  
                          _PIR0bits 000E33                            i2u446_40 3BAE  
                          i2u446_41 3BAA                            i2u447_40 3BC6  
                          i2u447_41 3BBE                            _PIR4bits 000E37  
                        ?_clearance 0029                            i2u448_48 3BC8  
                          i2u618_47 3B60                       ??_timer0_init 000A  
                          _SSP2CON2 000EDA              DCmotors_setPWM@PWMduty 0021  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 000A  
                 _colourclick_readB 39C2                   _colourclick_readC 3972  
                 _colourclick_readG 3922                   _colourclick_readR 38D2  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 3CD6  
         __end_of_I2C_2_Master_Init 3C86           __end_of_I2C_2_Master_Read 3C24  
                 ___wmul@multiplier 000A                  ?_colourclick_readB 000E  
                ?_colourclick_readC 000E                  ?_colourclick_readG 000E  
                ?_colourclick_readR 000E           __end_of_I2C_2_Master_Stop 3EC2  
             _interrupts_upperbound 0050         I2C_2_Master_Write@data_byte 000B  
            ??_DCmotors_calibration 007A                           main@start 008C  
                         left@delay 0066                 ??_colourclick_readB 0010  
               ??_colourclick_readC 0010                 ??_colourclick_readG 0010  
               ??_colourclick_readR 0010                       ??_USART4_init 000A  
       __size_of_I2C_2_Master_Start 000A                _colourclickLEDs_init 3E86  
       __size_of_I2C_2_Master_Write 000C                           _turnright 3A62  
         __end_of_colourclickLEDs_C 3D6A                         turnleft@deg 0074  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 3ED6  
                  __size_of_HighISR 3BDA                i2_I2C_2_Master_Start 3EEA  
              i2_I2C_2_Master_Write 3EAC                            __Hrparam 0000  
                       turnright@mL 0070                         turnright@mR 0072  
                        _ADC_getval 3E58        __end_of_colourclick_readRGBC 3874  
                          __Lrparam 0000                        __Lsmallconst 0E00  
         __end_of_colourclick_readB 3A12           __end_of_colourclick_readC 39C2  
         __end_of_colourclick_readG 3972           __end_of_colourclick_readR 3922  
                         forward@mL 0023                           forward@mR 0025  
            ??_colourcards_readRGBC 007C         __end_ofi2_I2C_2_Master_Idle 3CFE  
                  __size_of___fladd 04C0         __end_ofi2_I2C_2_Master_Stop 3EEA  
                  __size_of___fldiv 039A                    __size_of___awdiv 00C4  
                  __size_of___flmul 042A     __end_of_colourclick_calibration 37A2  
                  __size_of___lwdiv 0074                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                            _adjdelay 2F74  
                        _ANSELFbits 000EB4                 __end_of_timer0_init 3D8A  
       ??_colourcards_normaliseRGBC 0042                            ___xxtofl 2DC0  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
            DCmotors_calibration@mL 0076              DCmotors_calibration@mR 0078  
                    _buggyLEDs_init 3E70                    __size_of_forward 008E  
                   ___lwdiv@divisor 0012                     ___lwdiv@counter 0016  
                          __ptext10 0EA4                            __ptext11 3584  
                          __ptext20 3EC2                            __ptext12 3266  
                          __ptext21 3ECC                            __ptext13 3816  
                          __ptext30 3E58                            __ptext22 3BE2  
                          __ptext14 38D2                            __ptext31 3DCA  
                          __ptext23 3CAE                            __ptext15 3922  
                          __ptext40 29EA                            __ptext32 3A12  
                          __ptext24 3D48                            __ptext16 3972  
                          __ptext41 2DC0                            __ptext33 3EA0  
                          __ptext25 30F0                            __ptext17 39C2  
                          __ptext50 2F74                            __ptext42 37A2  
                          __ptext34 3ED6                            __ptext26 1F90  
                          __ptext18 3E94                            __ptext51 3E24  
                          __ptext43 1B66                            __ptext35 3E70  
                          __ptext27 3874                            __ptext19 3EB8  
                          __ptext60 3CD6                            __ptext44 33BC  
                          __ptext36 232A                            __ptext28 3612  
                          __ptext45 16A6                            __ptext37 3A62  
                          __ptext29 3DAA                            __ptext54 3E3E  
                          __ptext46 36A0                            __ptext38 3AB2  
                          __ptext55 3B50                            __ptext47 2BEC  
                          __ptext39 27E8                            __ptext56 3DEA  
                          __ptext48 3CFE                            __ptext57 3EAC  
                          __ptext49 34C0                            __ptext58 3EE0  
                          __ptext59 3EEA                    __size_of_reverse 008E  
             ?_colourclickLEDs_init 0001                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA          ??i2_interrupts_colourclick 0005  
                        ?_turnright 0070                       __size_of_main 0234  
                     __size_of_left 0202                       __size_of_stop 008A  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
               __end_of_USART4_init 3DEA                    _interrupts_clear 3E0A  
                         reverse@mL 0023                           reverse@mR 0025  
                   _turnright_delay 0054                         ??_clearance 002D  
                    _turnleft_delay 0055                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0056  
                 ?_colourclick_init 0001                  ??_colourclick_init 000E  
        __size_of_I2C_2_Master_Idle 0028          __size_of_I2C_2_Master_Init 002A  
        __size_of_I2C_2_Master_Read 0042                    DCmotors_setPWM@m 0018  
              _clicker2buttons_init 3EA0          __size_of_I2C_2_Master_Stop 000A  
                          _turnleft 3AB2                          turnleft@mL 0070  
                        turnleft@mR 0072              __end_of_buggyLEDs_init 3E86  
                        _INTCONbits 000FF2    __size_of_colourclick_writetoaddr 0020  
                       clearance@mL 0029                         clearance@mR 002B  
    colourclick_writetoaddr@address 000D    i2colourclick_writetoaddr@address 0004  
                       _PWM6CONbits 000FA4                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
        __size_of_colourclickLEDs_C 0022          __end_ofi2_interrupts_clear 3E58  
                          right@deg 0064           _colourcards_normaliseRGBC 30F0  
                   _interrupts_init 3D24                     _DCmotors_setPWM 2BEC  
                       ?_ADC_getval 0001          __size_of_colourclick_readB 0050  
        __size_of_colourclick_readC 0050          __size_of_colourclick_readG 0050  
        __size_of_colourclick_readR 0050               _colourclick_readRGBC2 3266  
                       _timer0_init 3D6A               ?_clicker2buttons_init 0001  
         colourclick_readRGBC2@mode 0019                     ?_buggyLEDs_init 0001  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
            ??_colourclickLEDs_init 000B                _colourclick_readRGBC 3816  
                     ___fladd@signs 004A                         _USART4_init 3DCA  
          ??_interrupts_colourclick 000E                          _TX4STAbits 000EE8  
                       ??_turnright 004F              ??i2_I2C_2_Master_Start 0002  
                     _overtime_flag 00A7                        ___fladd@aexp 004B  
            ??i2_I2C_2_Master_Write 0002                        ___fladd@bexp 004C  
      colourcards_normaliseRGBC@abs 003E  
