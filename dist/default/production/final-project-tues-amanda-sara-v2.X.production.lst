

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 04:38:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77  0000                     
    78                           ; Version 2.20
    79                           ; Generated 05/05/2020 GMT
    80                           ; 
    81                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	nvCOMRAM
   114  00004F                     __pnvCOMRAM:
   115                           	callstack 0
   116  00004F                     _turnright_calangle:
   117                           	callstack 0
   118  00004F                     	ds	2
   119  000051                     _turnleft_calangle:
   120                           	callstack 0
   121  000051                     	ds	2
   122  0000                     _INT1PPS	set	3569
   123  0000                     _RC7PPS	set	3689
   124  0000                     _RE2PPS	set	3700
   125  0000                     _TX4REG	set	3812
   126  0000                     _RC4REG	set	3811
   127  0000                     _PIR4bits	set	3639
   128  0000                     _RC4STAbits	set	3815
   129  0000                     _SP4BRGH	set	3814
   130  0000                     _SP4BRGL	set	3813
   131  0000                     _TX4STAbits	set	3816
   132  0000                     _BAUD4CONbits	set	3817
   133  0000                     _RX4PPS	set	3605
   134  0000                     _RC0PPS	set	3682
   135  0000                     _SSP2BUF	set	3797
   136  0000                     _SSP2CON2bits	set	3802
   137  0000                     _SSP2CON2	set	3802
   138  0000                     _SSP2STAT	set	3800
   139  0000                     _RD6PPS	set	3696
   140  0000                     _RD5PPS	set	3695
   141  0000                     _SSP2CLKPPS	set	3612
   142  0000                     _SSP2DATPPS	set	3613
   143  0000                     _ANSELDbits	set	3751
   144  0000                     _SSP2ADD	set	3798
   145  0000                     _SSP2CON1bits	set	3801
   146  0000                     _ANSELFbits	set	3764
   147  0000                     _PIR0bits	set	3635
   148  0000                     _IPR0bits	set	3615
   149  0000                     _PIE0bits	set	3625
   150  0000                     _ANSELBbits	set	3738
   151  0000                     _ADPCH	set	3935
   152  0000                     _ADREFbits	set	3928
   153  0000                     _T0CON0bits	set	4053
   154  0000                     _T0CON1bits	set	4054
   155  0000                     _PWM7CONbits	set	4001
   156  0000                     _PWM6CONbits	set	4004
   157  0000                     _LATCbits	set	3963
   158  0000                     _LATEbits	set	3965
   159  0000                     _TRISEbits	set	3973
   160  0000                     _T2PR	set	4028
   161  0000                     _T2CLKCONbits	set	4031
   162  0000                     _T2HLTbits	set	4030
   163  0000                     _T2CONbits	set	4029
   164  0000                     _TRISCbits	set	3971
   165  0000                     _TRISAbits	set	3969
   166  0000                     _TRISGbits	set	3975
   167  0000                     _TRISHbits	set	3976
   168  0000                     _TRISDbits	set	3972
   169  0000                     _ADRESH	set	3940
   170  0000                     _ADCON0bits	set	3936
   171  0000                     _TRISFbits	set	3974
   172  0000                     _LATAbits	set	3961
   173  0000                     _LATGbits	set	3967
   174  0000                     _TMR0L	set	4051
   175  0000                     _TMR0H	set	4052
   176  0000                     _INTCONbits	set	4082
   177  0000                     _TRISBbits	set	3970
   178  0000                     _LATHbits	set	3968
   179  0000                     _LATFbits	set	3966
   180  0000                     _LATDbits	set	3964
   181  0000                     _PORTFbits	set	3982
   182  0000                     _LATG	set	3967
   183  0000                     _PWM7DCH	set	4000
   184  0000                     _LATE	set	3965
   185  0000                     _PWM6DCH	set	4003
   186                           
   187                           	psect	smallconst
   188  000E00                     __psmallconst:
   189                           	callstack 0
   190  000E00  00                 	db	0
   191  000E01                     STR_1:
   192                           
   193                           ; BSR set to: 14
   194  000E01  52                 	db	82	;'R'
   195  000E02  47                 	db	71	;'G'
   196  000E03  42                 	db	66	;'B'
   197  000E04  43                 	db	67	;'C'
   198  000E05  3A                 	db	58	;':'
   199  000E06  20                 	db	32
   200  000E07  25                 	db	37
   201  000E08  69                 	db	105	;'i'
   202  000E09  20                 	db	32
   203  000E0A  25                 	db	37
   204  000E0B  69                 	db	105	;'i'
   205  000E0C  20                 	db	32
   206  000E0D  25                 	db	37
   207  000E0E  69                 	db	105	;'i'
   208  000E0F  20                 	db	32
   209  000E10  25                 	db	37
   210  000E11  69                 	db	105	;'i'
   211  000E12  20                 	db	32
   212  000E13  20                 	db	32
   213  000E14  20                 	db	32
   214  000E15  20                 	db	32
   215  000E16  20                 	db	32
   216  000E17  52                 	db	82	;'R'
   217  000E18  47                 	db	71	;'G'
   218  000E19  42                 	db	66	;'B'
   219  000E1A  43                 	db	67	;'C'
   220  000E1B  5F                 	db	95	;'_'
   221  000E1C  72                 	db	114	;'r'
   222  000E1D  65                 	db	101	;'e'
   223  000E1E  6C                 	db	108	;'l'
   224  000E1F  3A                 	db	58	;':'
   225  000E20  20                 	db	32
   226  000E21  25                 	db	37
   227  000E22  2E                 	db	46
   228  000E23  33                 	db	51	;'3'
   229  000E24  66                 	db	102	;'f'
   230  000E25  20                 	db	32
   231  000E26  25                 	db	37
   232  000E27  2E                 	db	46
   233  000E28  33                 	db	51	;'3'
   234  000E29  66                 	db	102	;'f'
   235  000E2A  20                 	db	32
   236  000E2B  25                 	db	37
   237  000E2C  2E                 	db	46
   238  000E2D  33                 	db	51	;'3'
   239  000E2E  66                 	db	102	;'f'
   240  000E2F  20                 	db	32
   241  000E30  20                 	db	32
   242  000E31  20                 	db	32
   243  000E32  20                 	db	32
   244  000E33  20                 	db	32
   245  000E34  43                 	db	67	;'C'
   246  000E35  6F                 	db	111	;'o'
   247  000E36  6C                 	db	108	;'l'
   248  000E37  6F                 	db	111	;'o'
   249  000E38  75                 	db	117	;'u'
   250  000E39  72                 	db	114	;'r'
   251  000E3A  3A                 	db	58	;':'
   252  000E3B  20                 	db	32
   253  000E3C  25                 	db	37
   254  000E3D  73                 	db	115	;'s'
   255  000E3E  0A                 	db	10
   256  000E3F  0D                 	db	13
   257  000E40  00                 	db	0
   258  000E41                     
   259                           ; BSR set to: 14
   260  000E41  52                 	db	82	;'R'
   261  000E42  47                 	db	71	;'G'
   262  000E43  42                 	db	66	;'B'
   263  000E44  43                 	db	67	;'C'
   264  000E45  3A                 	db	58	;':'
   265  000E46  20                 	db	32
   266  000E47  25                 	db	37
   267  000E48  69                 	db	105	;'i'
   268  000E49  20                 	db	32
   269  000E4A  25                 	db	37
   270  000E4B  69                 	db	105	;'i'
   271  000E4C  20                 	db	32
   272  000E4D  25                 	db	37
   273  000E4E  69                 	db	105	;'i'
   274  000E4F  20                 	db	32
   275  000E50  25                 	db	37
   276  000E51  69                 	db	105	;'i'
   277  000E52  20                 	db	32
   278  000E53  20                 	db	32
   279  000E54  20                 	db	32
   280  000E55  20                 	db	32
   281  000E56  20                 	db	32
   282  000E57  54                 	db	84	;'T'
   283  000E58  68                 	db	104	;'h'
   284  000E59  72                 	db	114	;'r'
   285  000E5A  65                 	db	101	;'e'
   286  000E5B  73                 	db	115	;'s'
   287  000E5C  68                 	db	104	;'h'
   288  000E5D  6F                 	db	111	;'o'
   289  000E5E  6C                 	db	108	;'l'
   290  000E5F  64                 	db	100	;'d'
   291  000E60  3A                 	db	58	;':'
   292  000E61  20                 	db	32
   293  000E62  25                 	db	37
   294  000E63  69                 	db	105	;'i'
   295  000E64  20                 	db	32
   296  000E65  25                 	db	37
   297  000E66  69                 	db	105	;'i'
   298  000E67  20                 	db	32
   299  000E68  25                 	db	37
   300  000E69  69                 	db	105	;'i'
   301  000E6A  0A                 	db	10
   302  000E6B  0D                 	db	13
   303  000E6C  00                 	db	0
   304  000E6D                     STR_10:
   305                           
   306                           ; BSR set to: 14
   307  000E6D  6C                 	db	108	;'l'
   308  000E6E  69                 	db	105	;'i'
   309  000E6F  67                 	db	103	;'g'
   310  000E70  68                 	db	104	;'h'
   311  000E71  74                 	db	116	;'t'
   312  000E72  20                 	db	32
   313  000E73  62                 	db	98	;'b'
   314  000E74  6C                 	db	108	;'l'
   315  000E75  75                 	db	117	;'u'
   316  000E76  65                 	db	101	;'e'
   317  000E77  00                 	db	0
   318  000E78                     
   319                           ; BSR set to: 14
   320  000E78  75                 	db	117	;'u'
   321  000E79  6E                 	db	110	;'n'
   322  000E7A  6B                 	db	107	;'k'
   323  000E7B  6E                 	db	110	;'n'
   324  000E7C  6F                 	db	111	;'o'
   325  000E7D  77                 	db	119	;'w'
   326  000E7E  6E                 	db	110	;'n'
   327  000E7F  00                 	db	0
   328  000E80                     
   329                           ; BSR set to: 14
   330  000E80  6F                 	db	111	;'o'
   331  000E81  72                 	db	114	;'r'
   332  000E82  61                 	db	97	;'a'
   333  000E83  6E                 	db	110	;'n'
   334  000E84  67                 	db	103	;'g'
   335  000E85  65                 	db	101	;'e'
   336  000E86  00                 	db	0
   337  000E87                     
   338                           ; BSR set to: 14
   339  000E87  79                 	db	121	;'y'
   340  000E88  65                 	db	101	;'e'
   341  000E89  6C                 	db	108	;'l'
   342  000E8A  6C                 	db	108	;'l'
   343  000E8B  6F                 	db	111	;'o'
   344  000E8C  77                 	db	119	;'w'
   345  000E8D  00                 	db	0
   346  000E8E                     
   347                           ; BSR set to: 14
   348  000E8E  77                 	db	119	;'w'
   349  000E8F  68                 	db	104	;'h'
   350  000E90  69                 	db	105	;'i'
   351  000E91  74                 	db	116	;'t'
   352  000E92  65                 	db	101	;'e'
   353  000E93  00                 	db	0
   354  000E94                     
   355                           ; BSR set to: 14
   356  000E94  67                 	db	103	;'g'
   357  000E95  72                 	db	114	;'r'
   358  000E96  65                 	db	101	;'e'
   359  000E97  65                 	db	101	;'e'
   360  000E98  6E                 	db	110	;'n'
   361  000E99  00                 	db	0
   362  000E9A                     
   363                           ; BSR set to: 14
   364  000E9A  70                 	db	112	;'p'
   365  000E9B  69                 	db	105	;'i'
   366  000E9C  6E                 	db	110	;'n'
   367  000E9D  6B                 	db	107	;'k'
   368  000E9E  00                 	db	0
   369  000E9F                     
   370                           ; BSR set to: 14
   371  000E9F  72                 	db	114	;'r'
   372  000EA0  65                 	db	101	;'e'
   373  000EA1  64                 	db	100	;'d'
   374  000EA2  00                 	db	0
   375  000EA3  00                 	db	0	; dummy byte at the end
   376  0000                     
   377                           ; #config settings
   378                           
   379                           	psect	cinit
   380  003942                     __pcinit:
   381                           	callstack 0
   382  003942                     start_initialization:
   383                           	callstack 0
   384  003942                     __initialization:
   385                           	callstack 0
   386                           
   387                           ; Clear objects allocated to BANK0 (4 bytes)
   388  003942  0100               	movlb	0
   389  003944  6BBD               	clrf	(__pbssBANK0+3)& (0+255),b
   390  003946  6BBC               	clrf	(__pbssBANK0+2)& (0+255),b
   391  003948  6BBB               	clrf	(__pbssBANK0+1)& (0+255),b
   392  00394A  6BBA               	clrf	__pbssBANK0& (0+255),b
   393                           
   394                           ; Clear objects allocated to COMRAM (4 bytes)
   395  00394C  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   396  00394E  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   397  003950  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   398  003952  6A53               	clrf	__pbssCOMRAM& (0+255),c
   399  003954                     end_of_initialization:
   400                           	callstack 0
   401  003954                     __end_of__initialization:
   402                           	callstack 0
   403  003954  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   404  003956  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   405  003958  0E00               	movlw	low (__Lsmallconst shr (0+16))
   406  00395A  6EF8               	movwf	tblptru,c
   407  00395C  0E0E               	movlw	high __Lsmallconst
   408  00395E  6EF7               	movwf	tblptrh,c
   409  003960  0100               	movlb	0
   410  003962  EF4D  F011         	goto	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMRAM
   413  000053                     __pbssCOMRAM:
   414                           	callstack 0
   415  000053                     _interrupts_upperbound:
   416                           	callstack 0
   417  000053                     	ds	2
   418  000055                     _interrupts_lowerbound:
   419                           	callstack 0
   420  000055                     	ds	2
   421                           
   422                           	psect	bssBANK0
   423  0000BA                     __pbssBANK0:
   424                           	callstack 0
   425  0000BA                     _overtime_flag:
   426                           	callstack 0
   427  0000BA                     	ds	1
   428  0000BB                     _returnhome_flag:
   429                           	callstack 0
   430  0000BB                     	ds	1
   431  0000BC                     _unknowncard_flag:
   432                           	callstack 0
   433  0000BC                     	ds	1
   434  0000BD                     _colourcard_flag:
   435                           	callstack 0
   436  0000BD                     	ds	1
   437                           
   438                           	psect	cstackBANK0
   439  000060                     __pcstackBANK0:
   440                           	callstack 0
   441  000060                     ___fldiv@rem:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0x0
   445  000060                     	ds	4
   446  000064                     ___fldiv@sign:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x4
   450  000064                     	ds	1
   451  000065                     ___fldiv@new_exp:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x5
   455  000065                     	ds	2
   456  000067                     ___fldiv@grs:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x7
   460  000067                     	ds	4
   461  00006B                     ___fldiv@bexp:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xB
   465  00006B                     	ds	1
   466  00006C                     ___fldiv@aexp:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xC
   470  00006C                     	ds	1
   471  00006D                     colourcards_normaliseRGBC@abs:
   472                           	callstack 0
   473  00006D                     left@mL:
   474                           	callstack 0
   475  00006D                     right@mL:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xD
   479  00006D                     	ds	2
   480  00006F                     colourcards_normaliseRGBC@rel:
   481                           	callstack 0
   482  00006F                     left@mR:
   483                           	callstack 0
   484  00006F                     right@mR:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xF
   488  00006F                     	ds	2
   489  000071                     colourcards_normaliseRGBC@R:
   490                           	callstack 0
   491  000071                     left@deg:
   492                           	callstack 0
   493  000071                     right@deg:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x11
   497  000071                     	ds	2
   498  000073                     colourcards_normaliseRGBC@G:
   499                           	callstack 0
   500  000073                     left@delay:
   501                           	callstack 0
   502  000073                     right@delay:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x13
   506  000073                     	ds	2
   507  000075                     colourcards_normaliseRGBC@B:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x15
   511  000075                     	ds	2
   512  000077                     colourcards_normaliseRGBC@C:
   513                           	callstack 0
   514  000077                     _left$3193:
   515                           	callstack 0
   516  000077                     _right$3194:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x17
   520  000077                     	ds	4
   521  00007B                     left@i:
   522                           	callstack 0
   523  00007B                     right@i:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x1B
   527  00007B                     	ds	2
   528  00007D                     turnleft@mL:
   529                           	callstack 0
   530  00007D                     turnright@mL:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x1D
   534  00007D                     	ds	2
   535  00007F                     turnleft@mR:
   536                           	callstack 0
   537  00007F                     turnright@mR:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x1F
   541  00007F                     	ds	2
   542  000081                     turnleft@deg:
   543                           	callstack 0
   544  000081                     turnright@deg:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x21
   548  000081                     	ds	2
   549  000083                     colourcards_readRGBC@abs:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x23
   553  000083                     	ds	2
   554  000085                     colourcards_readRGBC@mL:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x25
   558  000085                     	ds	2
   559  000087                     colourcards_readRGBC@mR:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x27
   563  000087                     	ds	2
   564  000089                     colourcards_readRGBC@rel:
   565                           	callstack 0
   566                           
   567                           ; 12 bytes @ 0x29
   568  000089                     	ds	12
   569  000095                     colourcards_testingRGBC@tmpval:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x35
   573  000095                     	ds	2
   574  000097                     colourcards_testingRGBC@mL:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x37
   578  000097                     	ds	2
   579  000099                     colourcards_testingRGBC@mR:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x39
   583  000099                     	ds	2
   584  00009B                     ??_colourcards_testingRGBC:
   585                           
   586                           ; 1 bytes @ 0x3B
   587  00009B                     	ds	2
   588  00009D                     ??_main:
   589                           
   590                           ; 1 bytes @ 0x3D
   591  00009D                     	ds	2
   592  00009F                     main@start:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x3F
   596  00009F                     	ds	1
   597  0000A0                     main@current:
   598                           	callstack 0
   599                           
   600                           ; 8 bytes @ 0x40
   601  0000A0                     	ds	8
   602  0000A8                     main@motorL:
   603                           	callstack 0
   604                           
   605                           ; 9 bytes @ 0x48
   606  0000A8                     	ds	9
   607  0000B1                     main@motorR:
   608                           	callstack 0
   609                           
   610                           ; 9 bytes @ 0x51
   611  0000B1                     	ds	9
   612                           
   613                           	psect	cstackCOMRAM
   614  000001                     __pcstackCOMRAM:
   615                           	callstack 0
   616  000001                     ??i2_I2C_2_Master_Idle:
   617  000001                     
   618                           ; 1 bytes @ 0x0
   619  000001                     	ds	1
   620  000002                     i2I2C_2_Master_Write@data_byte:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x1
   624  000002                     	ds	1
   625  000003                     i2colourclick_writetoaddr@value:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x2
   629  000003                     	ds	1
   630  000004                     i2colourclick_writetoaddr@address:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x3
   634  000004                     	ds	1
   635  000005                     ??i2_interrupts_colourclick:
   636                           
   637                           ; 1 bytes @ 0x4
   638  000005                     	ds	1
   639  000006                     ??_LowISR:
   640  000006                     
   641                           ; 1 bytes @ 0x5
   642  000006                     	ds	3
   643  000009                     ??_colourclickLEDs_RGB:
   644  000009                     ??_I2C_2_Master_Idle:
   645  000009                     ?___wmul:
   646                           	callstack 0
   647  000009                     ?___xxtofl:
   648                           	callstack 0
   649  000009                     ADC_getval@tmpval:
   650                           	callstack 0
   651  000009                     colourclickLEDs_C@tog:
   652                           	callstack 0
   653  000009                     DCmotors_init@PWMperiod:
   654                           	callstack 0
   655  000009                     ___wmul@multiplier:
   656                           	callstack 0
   657  000009                     ___xxtofl@val:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x8
   661  000009                     	ds	1
   662  00000A                     ??_I2C_2_Master_Read:
   663  00000A                     I2C_2_Master_Write@data_byte:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x9
   667  00000A                     	ds	1
   668  00000B                     ??_checkbatterylevel:
   669  00000B                     colourclick_writetoaddr@value:
   670                           	callstack 0
   671  00000B                     I2C_2_Master_Read@ack:
   672                           	callstack 0
   673  00000B                     ___wmul@multiplicand:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0xA
   677  00000B                     	ds	1
   678  00000C                     colourclick_writetoaddr@address:
   679                           	callstack 0
   680  00000C                     I2C_2_Master_Read@tmp:
   681                           	callstack 0
   682  00000C                     checkbatterylevel@batterylevel:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0xB
   686  00000C                     	ds	1
   687  00000D                     ??_colourclick_init:
   688  00000D                     ??_interrupts_colourclick:
   689  00000D                     ??___xxtofl:
   690  00000D                     ?_colourclick_readR:
   691                           	callstack 0
   692  00000D                     ?_colourclick_readG:
   693                           	callstack 0
   694  00000D                     ?_colourclick_readB:
   695                           	callstack 0
   696  00000D                     ?_colourclick_readC:
   697                           	callstack 0
   698  00000D                     ___wmul@product:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0xC
   702  00000D                     	ds	1
   703  00000E                     
   704                           ; 1 bytes @ 0xD
   705  00000E                     	ds	1
   706  00000F                     ??_colourclick_readR:
   707  00000F                     ??_colourclick_readG:
   708  00000F                     ??_colourclick_readB:
   709  00000F                     ??_colourclick_readC:
   710  00000F                     ?___awdiv:
   711                           	callstack 0
   712  00000F                     ___awdiv@dividend:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0xE
   716  00000F                     	ds	2
   717  000011                     ___xxtofl@sign:
   718                           	callstack 0
   719  000011                     ___awdiv@divisor:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x10
   723  000011                     	ds	1
   724  000012                     ___xxtofl@exp:
   725                           	callstack 0
   726  000012                     colourclick_readR@tmp:
   727                           	callstack 0
   728  000012                     colourclick_readG@tmp:
   729                           	callstack 0
   730  000012                     colourclick_readB@tmp:
   731                           	callstack 0
   732  000012                     colourclick_readC@tmp:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x11
   736  000012                     	ds	1
   737  000013                     ___awdiv@counter:
   738                           	callstack 0
   739  000013                     ___xxtofl@arg:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x12
   743  000013                     	ds	1
   744  000014                     ___awdiv@sign:
   745                           	callstack 0
   746  000014                     colourclick_readRGBC@tmpval:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x13
   750  000014                     	ds	1
   751  000015                     ___awdiv@quotient:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x14
   755  000015                     	ds	1
   756  000016                     colourclick_readRGBC2@tmpval:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x15
   760  000016                     	ds	1
   761  000017                     ?___flmul:
   762                           	callstack 0
   763  000017                     DCmotors_setPWM@m:
   764                           	callstack 0
   765  000017                     ___flge@ff1:
   766                           	callstack 0
   767  000017                     ___flmul@b:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x16
   771  000017                     	ds	1
   772  000018                     colourclick_readRGBC2@mode:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x17
   776  000018                     	ds	1
   777  000019                     ??_colourclick_readRGBC2:
   778  000019                     ??_DCmotors_setPWM:
   779                           
   780                           ; 1 bytes @ 0x18
   781  000019                     	ds	2
   782  00001B                     ___flge@ff2:
   783                           	callstack 0
   784  00001B                     ___flmul@a:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x1A
   788  00001B                     	ds	4
   789  00001F                     ??___flmul:
   790  00001F                     ??___flge:
   791                           
   792                           ; 1 bytes @ 0x1E
   793  00001F                     	ds	1
   794  000020                     DCmotors_setPWM@PWMduty:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x1F
   798  000020                     	ds	2
   799  000022                     forward@mL:
   800                           	callstack 0
   801  000022                     reverse@mL:
   802                           	callstack 0
   803  000022                     stop@mL:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x21
   807  000022                     	ds	1
   808  000023                     ___flmul@sign:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x22
   812  000023                     	ds	1
   813  000024                     forward@mR:
   814                           	callstack 0
   815  000024                     reverse@mR:
   816                           	callstack 0
   817  000024                     stop@mR:
   818                           	callstack 0
   819  000024                     ___flmul@grs:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x23
   823  000024                     	ds	2
   824  000026                     ??_stop:
   825  000026                     
   826                           ; 1 bytes @ 0x25
   827  000026                     	ds	2
   828  000028                     ___flmul@aexp:
   829                           	callstack 0
   830  000028                     clearance@mL:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x27
   834  000028                     	ds	1
   835  000029                     ___flmul@bexp:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x28
   839  000029                     	ds	1
   840  00002A                     clearance@mR:
   841                           	callstack 0
   842  00002A                     ___flmul@prod:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x29
   846  00002A                     	ds	2
   847  00002C                     ??_clearance:
   848                           
   849                           ; 1 bytes @ 0x2B
   850  00002C                     	ds	2
   851  00002E                     ___flmul@temp:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x2D
   855  00002E                     	ds	2
   856  000030                     ?___fladd:
   857                           	callstack 0
   858  000030                     ___fladd@b:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x2F
   862  000030                     	ds	4
   863  000034                     ___fladd@a:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x33
   867  000034                     	ds	4
   868  000038                     ??___fladd:
   869                           
   870                           ; 1 bytes @ 0x37
   871  000038                     	ds	4
   872  00003C                     ___fladd@signs:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x3B
   876  00003C                     	ds	1
   877  00003D                     ___fladd@aexp:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x3C
   881  00003D                     	ds	1
   882  00003E                     ___fladd@bexp:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x3D
   886  00003E                     	ds	1
   887  00003F                     ___fladd@grs:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x3E
   891  00003F                     	ds	1
   892  000040                     ?___fldiv:
   893                           	callstack 0
   894  000040                     ___fldiv@b:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x3F
   898  000040                     	ds	4
   899  000044                     ___fldiv@a:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x43
   903  000044                     	ds	4
   904  000048                     ??___fldiv:
   905                           
   906                           ; 1 bytes @ 0x47
   907  000048                     	ds	4
   908  00004C                     ??_left:
   909  00004C                     ??_right:
   910                           
   911                           ; 1 bytes @ 0x4B
   912  00004C                     	ds	1
   913  00004D                     ??_colourcards_readRGBC:
   914  00004D                     
   915                           ; 1 bytes @ 0x4C
   916  00004D                     	ds	2
   917                           
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 7 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  motorR          9   81[BANK0 ] struct .
   928 ;;  motorL          9   72[BANK0 ] struct .
   929 ;;  current         8   64[BANK0 ] struct .
   930 ;;  PWMperiod       1    0        unsigned char 
   931 ;;  start           1   63[BANK0 ] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   942 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;Total ram usage:       29 bytes
   946 ;; Hardware stack levels required when called: 14
   947 ;; This function calls:
   948 ;;		_ADC_init
   949 ;;		_DCmotors_init
   950 ;;		_USART4_init
   951 ;;		_checkbatterylevel
   952 ;;		_colourcards_readRGBC
   953 ;;		_colourcards_testingRGBC
   954 ;;		_colourclickLEDs_C
   955 ;;		_colourclick_init
   956 ;;		_colourclick_readRGBC
   957 ;;		_forward
   958 ;;		_interrupts_init
   959 ;;		_reverse
   960 ;;		_stop
   961 ;;		_timer0_init
   962 ;; This function is called by:
   963 ;;		Startup code after reset
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text0
   968  00229A                     __ptext0:
   969                           	callstack 0
   970  00229A                     _main:
   971                           	callstack 17
   972  00229A                     
   973                           ;main.c: 11:     RGBC_val current;;main.c: 12:     unsigned char start = 0;
   974  00229A  0E00               	movlw	0
   975  00229C  0100               	movlb	0	; () banked
   976  00229E  6F9F               	movwf	main@start& (0+255),b
   977                           
   978                           ;main.c: 14:     turnleft_calangle = 360;
   979  0022A0  0E01               	movlw	1
   980  0022A2  6E52               	movwf	(_turnleft_calangle+1)^0,c	;volatile
   981  0022A4  0E68               	movlw	104
   982  0022A6  6E51               	movwf	_turnleft_calangle^0,c	;volatile
   983                           
   984                           ;main.c: 15:     turnright_calangle = 360;
   985  0022A8  0E01               	movlw	1
   986  0022AA  6E50               	movwf	(_turnright_calangle+1)^0,c	;volatile
   987  0022AC  0E68               	movlw	104
   988  0022AE  6E4F               	movwf	_turnright_calangle^0,c	;volatile
   989                           
   990                           ;main.c: 16:     interrupts_lowerbound = 0;
   991  0022B0  0E00               	movlw	0
   992  0022B2  6E56               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
   993  0022B4  0E00               	movlw	0
   994  0022B6  6E55               	movwf	_interrupts_lowerbound^0,c	;volatile
   995                           
   996                           ;main.c: 17:     interrupts_upperbound = 0;
   997  0022B8  0E00               	movlw	0
   998  0022BA  6E54               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
   999  0022BC  0E00               	movlw	0
  1000  0022BE  6E53               	movwf	_interrupts_upperbound^0,c	;volatile
  1001                           
  1002                           ;main.c: 18:     colourcard_flag = 0;
  1003  0022C0  0E00               	movlw	0
  1004  0022C2  6FBD               	movwf	_colourcard_flag& (0+255),b	;volatile
  1005                           
  1006                           ;main.c: 19:     unknowncard_flag = 0;
  1007  0022C4  0E00               	movlw	0
  1008  0022C6  6FBC               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1009                           
  1010                           ;main.c: 20:     returnhome_flag = 0;
  1011  0022C8  0E00               	movlw	0
  1012  0022CA  6FBB               	movwf	_returnhome_flag& (0+255),b	;volatile
  1013                           
  1014                           ;main.c: 21:     overtime_flag = 0;
  1015  0022CC  0E00               	movlw	0
  1016  0022CE  6FBA               	movwf	_overtime_flag& (0+255),b	;volatile
  1017                           
  1018                           ;main.c: 23:     DC_motor motorL;;main.c: 24:     motorL.power=0;
  1019  0022D0  0E00               	movlw	0
  1020  0022D2  6FA8               	movwf	main@motorL& (0+255),b
  1021                           
  1022                           ;main.c: 25:     motorL.direction=1;
  1023  0022D4  0E01               	movlw	1
  1024  0022D6  6FA9               	movwf	(main@motorL+1)& (0+255),b
  1025  0022D8                     
  1026                           ; BSR set to: 0
  1027                           ;main.c: 26:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1028  0022D8  0EA3               	movlw	163
  1029  0022DA  6FAA               	movwf	(main@motorL+2)& (0+255),b
  1030  0022DC  0E0F               	movlw	15
  1031  0022DE  6FAB               	movwf	(main@motorL+3)& (0+255),b
  1032  0022E0                     
  1033                           ; BSR set to: 0
  1034                           ;main.c: 27:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1035  0022E0  0E7D               	movlw	125
  1036  0022E2  6FAC               	movwf	(main@motorL+4)& (0+255),b
  1037  0022E4  0E0F               	movlw	15
  1038  0022E6  6FAD               	movwf	(main@motorL+5)& (0+255),b
  1039                           
  1040                           ;main.c: 28:     motorL.dir_pin=4;
  1041  0022E8  0E04               	movlw	4
  1042  0022EA  6FAE               	movwf	(main@motorL+6)& (0+255),b
  1043  0022EC                     
  1044                           ; BSR set to: 0
  1045                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
  1046  0022EC  0E00               	movlw	0
  1047  0022EE  6FB0               	movwf	(main@motorL+8)& (0+255),b
  1048  0022F0  0E63               	movlw	99
  1049  0022F2  6FAF               	movwf	(main@motorL+7)& (0+255),b
  1050                           
  1051                           ;main.c: 31:     DC_motor motorR;;main.c: 32:     motorR.power=0;
  1052  0022F4  0E00               	movlw	0
  1053  0022F6  6FB1               	movwf	main@motorR& (0+255),b
  1054                           
  1055                           ;main.c: 33:     motorR.direction=1;
  1056  0022F8  0E01               	movlw	1
  1057  0022FA  6FB2               	movwf	(main@motorR+1)& (0+255),b
  1058  0022FC                     
  1059                           ; BSR set to: 0
  1060                           ;main.c: 34:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1061  0022FC  0EA0               	movlw	160
  1062  0022FE  6FB3               	movwf	(main@motorR+2)& (0+255),b
  1063  002300  0E0F               	movlw	15
  1064  002302  6FB4               	movwf	(main@motorR+3)& (0+255),b
  1065  002304                     
  1066                           ; BSR set to: 0
  1067                           ;main.c: 35:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1068  002304  0E7F               	movlw	127
  1069  002306  6FB5               	movwf	(main@motorR+4)& (0+255),b
  1070  002308  0E0F               	movlw	15
  1071  00230A  6FB6               	movwf	(main@motorR+5)& (0+255),b
  1072                           
  1073                           ;main.c: 36:     motorR.dir_pin=6;
  1074  00230C  0E06               	movlw	6
  1075  00230E  6FB7               	movwf	(main@motorR+6)& (0+255),b
  1076  002310                     
  1077                           ; BSR set to: 0
  1078                           ;main.c: 37:     motorR.PWMperiod=PWMperiod;
  1079  002310  0E00               	movlw	0
  1080  002312  6FB9               	movwf	(main@motorR+8)& (0+255),b
  1081  002314  0E63               	movlw	99
  1082  002316  6FB8               	movwf	(main@motorR+7)& (0+255),b
  1083  002318                     
  1084                           ; BSR set to: 0
  1085                           ;main.c: 39:     ADC_init();
  1086  002318  EC34  F01D         	call	_ADC_init	;wreg free
  1087  00231C                     
  1088                           ;main.c: 40:     colourclick_init();
  1089  00231C  EC35  F01C         	call	_colourclick_init	;wreg free
  1090  002320                     
  1091                           ;main.c: 41:     DCmotors_init(PWMperiod);
  1092  002320  0E63               	movlw	99
  1093  002322  EC9E  F01B         	call	_DCmotors_init
  1094  002326                     
  1095                           ;main.c: 42:     timer0_init();
  1096  002326  ECE7  F01C         	call	_timer0_init	;wreg free
  1097  00232A                     
  1098                           ;main.c: 43:     USART4_init();
  1099  00232A  EC07  F01D         	call	_USART4_init	;wreg free
  1100  00232E                     
  1101                           ;main.c: 44:     checkbatterylevel();
  1102  00232E  EC22  F018         	call	_checkbatterylevel	;wreg free
  1103  002332                     
  1104                           ;main.c: 56:     colourcards_testingRGBC(&current, &motorL, &motorR);
  1105  002332  0EA0               	movlw	low main@current
  1106  002334  0100               	movlb	0	; () banked
  1107  002336  6F95               	movwf	colourcards_testingRGBC@tmpval& (0+255),b
  1108  002338  0E00               	movlw	high main@current
  1109  00233A  6F96               	movwf	(colourcards_testingRGBC@tmpval+1)& (0+255),b
  1110  00233C  0EA8               	movlw	low main@motorL
  1111  00233E  6F97               	movwf	colourcards_testingRGBC@mL& (0+255),b
  1112  002340  0E00               	movlw	high main@motorL
  1113  002342  6F98               	movwf	(colourcards_testingRGBC@mL+1)& (0+255),b
  1114  002344  0EB1               	movlw	low main@motorR
  1115  002346  6F99               	movwf	colourcards_testingRGBC@mR& (0+255),b
  1116  002348  0E00               	movlw	high main@motorR
  1117  00234A  6F9A               	movwf	(colourcards_testingRGBC@mR+1)& (0+255),b
  1118  00234C  EC21  F01A         	call	_colourcards_testingRGBC	;wreg free
  1119  002350                     l67:
  1120  002350  A48E               	btfss	142,2,c	;volatile
  1121  002352  EFAD  F011         	goto	u5381
  1122  002356  EFAF  F011         	goto	u5380
  1123  00235A                     u5381:
  1124  00235A  EFB6  F011         	goto	l71
  1125  00235E                     u5380:
  1126  00235E  B68E               	btfsc	142,3,c	;volatile
  1127  002360  EFB4  F011         	goto	u5391
  1128  002364  EFB6  F011         	goto	u5390
  1129  002368                     u5391:
  1130  002368  EFA8  F011         	goto	l67
  1131  00236C                     u5390:
  1132  00236C                     l71:
  1133                           
  1134                           ;main.c: 63:     LATDbits.LATD3 = 1;
  1135  00236C  867C               	bsf	124,3,c	;volatile
  1136  00236E                     
  1137                           ;main.c: 64:     colourclickLEDs_C(1);
  1138  00236E  0E01               	movlw	1
  1139  002370  ECC5  F01C         	call	_colourclickLEDs_C
  1140  002374                     
  1141                           ;main.c: 65:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1142  002374  0E52               	movlw	82
  1143  002376  0100               	movlb	0	; () banked
  1144  002378  6F9E               	movwf	(??_main+1)& (0+255),b
  1145  00237A  0E2B               	movlw	43
  1146  00237C  6F9D               	movwf	??_main& (0+255),b
  1147  00237E  0E00               	movlw	0
  1148  002380                     u6017:
  1149  002380  2EE8               	decfsz	wreg,f,c
  1150  002382  D7FE               	bra	u6017
  1151  002384  2F9D               	decfsz	??_main& (0+255),f,b
  1152  002386  D7FC               	bra	u6017
  1153  002388  2F9E               	decfsz	(??_main+1)& (0+255),f,b
  1154  00238A  D7FA               	bra	u6017
  1155  00238C  F000               	nop	
  1156  00238E                     
  1157                           ;main.c: 66:     interrupts_init();
  1158  00238E  ECB3  F01C         	call	_interrupts_init	;wreg free
  1159  002392                     l4881:
  1160                           
  1161                           ;main.c: 72:         if (start<1 && colourcard_flag==1) {
  1162  002392  0100               	movlb	0	; () banked
  1163  002394  519F               	movf	main@start& (0+255),w,b
  1164  002396  A4D8               	btfss	status,2,c
  1165  002398  EFD0  F011         	goto	u5401
  1166  00239C  EFD2  F011         	goto	u5400
  1167  0023A0                     u5401:
  1168  0023A0  EFE0  F011         	goto	l4887
  1169  0023A4                     u5400:
  1170  0023A4                     
  1171                           ; BSR set to: 0
  1172  0023A4  05BD               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1173  0023A6  A4D8               	btfss	status,2,c
  1174  0023A8  EFD8  F011         	goto	u5411
  1175  0023AC  EFDA  F011         	goto	u5410
  1176  0023B0                     u5411:
  1177  0023B0  EFE0  F011         	goto	l4887
  1178  0023B4                     u5410:
  1179  0023B4                     
  1180                           ; BSR set to: 0
  1181                           ;main.c: 73:             colourcard_flag = 0;
  1182  0023B4  0E00               	movlw	0
  1183  0023B6  6FBD               	movwf	_colourcard_flag& (0+255),b	;volatile
  1184                           
  1185                           ;main.c: 74:             start = 1;
  1186  0023B8  0E01               	movlw	1
  1187  0023BA  6F9F               	movwf	main@start& (0+255),b
  1188                           
  1189                           ;main.c: 75:         } else if (start>0 && colourcard_flag==1) {
  1190  0023BC  EFC9  F011         	goto	l4881
  1191  0023C0                     l4887:
  1192                           
  1193                           ; BSR set to: 0
  1194  0023C0  519F               	movf	main@start& (0+255),w,b
  1195  0023C2  B4D8               	btfsc	status,2,c
  1196  0023C4  EFE6  F011         	goto	u5421
  1197  0023C8  EFE8  F011         	goto	u5420
  1198  0023CC                     u5421:
  1199  0023CC  EF5F  F012         	goto	l4917
  1200  0023D0                     u5420:
  1201  0023D0                     
  1202                           ; BSR set to: 0
  1203  0023D0  05BD               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1204  0023D2  A4D8               	btfss	status,2,c
  1205  0023D4  EFEE  F011         	goto	u5431
  1206  0023D8  EFF0  F011         	goto	u5430
  1207  0023DC                     u5431:
  1208  0023DC  EF5F  F012         	goto	l4917
  1209  0023E0                     u5430:
  1210  0023E0                     
  1211                           ; BSR set to: 0
  1212                           ;main.c: 76:             stop(&motorL, &motorR);
  1213  0023E0  0EA8               	movlw	low main@motorL
  1214  0023E2  6E22               	movwf	stop@mL^0,c
  1215  0023E4  0E00               	movlw	high main@motorL
  1216  0023E6  6E23               	movwf	(stop@mL+1)^0,c
  1217  0023E8  0EB1               	movlw	low main@motorR
  1218  0023EA  6E24               	movwf	stop@mR^0,c
  1219  0023EC  0E00               	movlw	high main@motorR
  1220  0023EE  6E25               	movwf	(stop@mR+1)^0,c
  1221  0023F0  ECDC  F019         	call	_stop	;wreg free
  1222  0023F4                     
  1223                           ;main.c: 77:             LATFbits.LATF0 = 1;
  1224  0023F4  807E               	bsf	126,0,c	;volatile
  1225  0023F6                     
  1226                           ;main.c: 78:             LATHbits.LATH0 = 1;
  1227  0023F6  8080               	bsf	128,0,c	;volatile
  1228                           
  1229                           ;main.c: 79:             reverse(&motorL, &motorR);
  1230  0023F8  0EA8               	movlw	low main@motorL
  1231  0023FA  6E22               	movwf	reverse@mL^0,c
  1232  0023FC  0E00               	movlw	high main@motorL
  1233  0023FE  6E23               	movwf	(reverse@mL+1)^0,c
  1234  002400  0EB1               	movlw	low main@motorR
  1235  002402  6E24               	movwf	reverse@mR^0,c
  1236  002404  0E00               	movlw	high main@motorR
  1237  002406  6E25               	movwf	(reverse@mR+1)^0,c
  1238  002408  EC95  F019         	call	_reverse	;wreg free
  1239  00240C                     
  1240                           ;main.c: 80:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1241  00240C  0E09               	movlw	9
  1242  00240E  0100               	movlb	0	; () banked
  1243  002410  6F9E               	movwf	(??_main+1)& (0+255),b
  1244  002412  0E1E               	movlw	30
  1245  002414  6F9D               	movwf	??_main& (0+255),b
  1246  002416  0EE4               	movlw	228
  1247  002418                     u6027:
  1248  002418  2EE8               	decfsz	wreg,f,c
  1249  00241A  D7FE               	bra	u6027
  1250  00241C  2F9D               	decfsz	??_main& (0+255),f,b
  1251  00241E  D7FC               	bra	u6027
  1252  002420  2F9E               	decfsz	(??_main+1)& (0+255),f,b
  1253  002422  D7FA               	bra	u6027
  1254  002424  F000               	nop	
  1255  002426                     
  1256                           ;main.c: 81:             stop(&motorL, &motorR);
  1257  002426  0EA8               	movlw	low main@motorL
  1258  002428  6E22               	movwf	stop@mL^0,c
  1259  00242A  0E00               	movlw	high main@motorL
  1260  00242C  6E23               	movwf	(stop@mL+1)^0,c
  1261  00242E  0EB1               	movlw	low main@motorR
  1262  002430  6E24               	movwf	stop@mR^0,c
  1263  002432  0E00               	movlw	high main@motorR
  1264  002434  6E25               	movwf	(stop@mR+1)^0,c
  1265  002436  ECDC  F019         	call	_stop	;wreg free
  1266  00243A                     
  1267                           ;main.c: 82:             LATFbits.LATF0 = 0;
  1268  00243A  907E               	bcf	126,0,c	;volatile
  1269  00243C                     
  1270                           ;main.c: 83:             LATHbits.LATH0 = 0;
  1271  00243C  9080               	bcf	128,0,c	;volatile
  1272                           
  1273                           ;main.c: 84:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1274  00243E  0E52               	movlw	82
  1275  002440  0100               	movlb	0	; () banked
  1276  002442  6F9E               	movwf	(??_main+1)& (0+255),b
  1277  002444  0E2B               	movlw	43
  1278  002446  6F9D               	movwf	??_main& (0+255),b
  1279  002448  0E00               	movlw	0
  1280  00244A                     u6037:
  1281  00244A  2EE8               	decfsz	wreg,f,c
  1282  00244C  D7FE               	bra	u6037
  1283  00244E  2F9D               	decfsz	??_main& (0+255),f,b
  1284  002450  D7FC               	bra	u6037
  1285  002452  2F9E               	decfsz	(??_main+1)& (0+255),f,b
  1286  002454  D7FA               	bra	u6037
  1287  002456  F000               	nop	
  1288  002458                     
  1289                           ;main.c: 86:             colourcards_readRGBC(&current, &motorL, &motorR);
  1290  002458  0EA0               	movlw	low main@current
  1291  00245A  0100               	movlb	0	; () banked
  1292  00245C  6F83               	movwf	colourcards_readRGBC@abs& (0+255),b
  1293  00245E  0E00               	movlw	high main@current
  1294  002460  6F84               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1295  002462  0EA8               	movlw	low main@motorL
  1296  002464  6F85               	movwf	colourcards_readRGBC@mL& (0+255),b
  1297  002466  0E00               	movlw	high main@motorL
  1298  002468  6F86               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1299  00246A  0EB1               	movlw	low main@motorR
  1300  00246C  6F87               	movwf	colourcards_readRGBC@mR& (0+255),b
  1301  00246E  0E00               	movlw	high main@motorR
  1302  002470  6F88               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1303  002472  EC52  F007         	call	_colourcards_readRGBC	;wreg free
  1304  002476                     
  1305                           ;main.c: 88:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1306  002476  0E52               	movlw	82
  1307  002478  0100               	movlb	0	; () banked
  1308  00247A  6F9E               	movwf	(??_main+1)& (0+255),b
  1309  00247C  0E2B               	movlw	43
  1310  00247E  6F9D               	movwf	??_main& (0+255),b
  1311  002480  0E00               	movlw	0
  1312  002482                     u6047:
  1313  002482  2EE8               	decfsz	wreg,f,c
  1314  002484  D7FE               	bra	u6047
  1315  002486  2F9D               	decfsz	??_main& (0+255),f,b
  1316  002488  D7FC               	bra	u6047
  1317  00248A  2F9E               	decfsz	(??_main+1)& (0+255),f,b
  1318  00248C  D7FA               	bra	u6047
  1319  00248E  F000               	nop	
  1320  002490                     
  1321                           ;main.c: 89:             colourclick_readRGBC(&current);
  1322  002490  0EA0               	movlw	low main@current
  1323  002492  6E14               	movwf	colourclick_readRGBC@tmpval^0,c
  1324  002494  0E00               	movlw	high main@current
  1325  002496  6E15               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1326  002498  EC50  F01A         	call	_colourclick_readRGBC	;wreg free
  1327  00249C                     
  1328                           ;main.c: 90:             interrupts_lowerbound = current.C - 150;
  1329  00249C  0E6A               	movlw	106
  1330  00249E  0100               	movlb	0	; () banked
  1331  0024A0  25A6               	addwf	(main@current+6)& (0+255),w,b
  1332  0024A2  6E55               	movwf	_interrupts_lowerbound^0,c	;volatile
  1333  0024A4  0EFF               	movlw	255
  1334  0024A6  21A7               	addwfc	(main@current+7)& (0+255),w,b
  1335  0024A8  6E56               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1336  0024AA                     
  1337                           ; BSR set to: 0
  1338                           ;main.c: 91:             interrupts_upperbound = current.C + 100;
  1339  0024AA  0E64               	movlw	100
  1340  0024AC  25A6               	addwf	(main@current+6)& (0+255),w,b
  1341  0024AE  6E53               	movwf	_interrupts_upperbound^0,c	;volatile
  1342  0024B0  0E00               	movlw	0
  1343  0024B2  21A7               	addwfc	(main@current+7)& (0+255),w,b
  1344  0024B4  6E54               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1345  0024B6                     
  1346                           ; BSR set to: 0
  1347                           ;main.c: 93:             colourcard_flag = 0;
  1348  0024B6  0E00               	movlw	0
  1349  0024B8  6FBD               	movwf	_colourcard_flag& (0+255),b	;volatile
  1350                           
  1351                           ;main.c: 94:         } else {forward(&motorL, &motorR);}
  1352  0024BA  EFC9  F011         	goto	l4881
  1353  0024BE                     l4917:
  1354                           
  1355                           ; BSR set to: 0
  1356  0024BE  0EA8               	movlw	low main@motorL
  1357  0024C0  6E22               	movwf	forward@mL^0,c
  1358  0024C2  0E00               	movlw	high main@motorL
  1359  0024C4  6E23               	movwf	(forward@mL+1)^0,c
  1360  0024C6  0EB1               	movlw	low main@motorR
  1361  0024C8  6E24               	movwf	forward@mR^0,c
  1362  0024CA  0E00               	movlw	high main@motorR
  1363  0024CC  6E25               	movwf	(forward@mR+1)^0,c
  1364  0024CE  EC4E  F019         	call	_forward	;wreg free
  1365  0024D2  EFC9  F011         	goto	l4881
  1366  0024D6  EF2E  F000         	goto	start
  1367  0024DA                     __end_of_main:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _timer0_init *****************
  1371 ;; Defined at:
  1372 ;;		line 8 in file "timers.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 7
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text1
  1401  0039CE                     __ptext1:
  1402                           	callstack 0
  1403  0039CE                     _timer0_init:
  1404                           	callstack 23
  1405  0039CE                     
  1406                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1407  0039CE  50D6               	movf	214,w,c	;volatile
  1408  0039D0  0B1F               	andlw	-225
  1409  0039D2  0940               	iorlw	64
  1410  0039D4  6ED6               	movwf	214,c	;volatile
  1411  0039D6                     
  1412                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1413  0039D6  88D6               	bsf	214,4,c	;volatile
  1414                           
  1415                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  1416  0039D8  50D6               	movf	214,w,c	;volatile
  1417  0039DA  0BF0               	andlw	-16
  1418  0039DC  0908               	iorlw	8
  1419  0039DE  6ED6               	movwf	214,c	;volatile
  1420  0039E0                     
  1421                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  1422  0039E0  88D5               	bsf	213,4,c	;volatile
  1423                           
  1424                           ;timers.c: 14:     TMR0H=0b1011;
  1425  0039E2  0E0B               	movlw	11
  1426  0039E4  6ED4               	movwf	212,c	;volatile
  1427                           
  1428                           ;timers.c: 15:     TMR0L=0b11011011;
  1429  0039E6  0EDB               	movlw	219
  1430  0039E8  6ED3               	movwf	211,c	;volatile
  1431  0039EA                     
  1432                           ;timers.c: 16:     T0CON0bits.T0EN=1;
  1433  0039EA  8ED5               	bsf	213,7,c	;volatile
  1434  0039EC  0012               	return		;funcret
  1435  0039EE                     __end_of_timer0_init:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function _interrupts_init *****************
  1439 ;; Defined at:
  1440 ;;		line 12 in file "interrupts.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 12
  1461 ;; This function calls:
  1462 ;;		_interrupts_clear
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text2
  1469  003966                     __ptext2:
  1470                           	callstack 0
  1471  003966                     _interrupts_init:
  1472                           	callstack 18
  1473  003966                     
  1474                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  1475  003966  8282               	bsf	130,1,c	;volatile
  1476                           
  1477                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  1478  003968  010E               	movlb	14	; () banked
  1479  00396A  939A               	bcf	154,1,b	;volatile
  1480  00396C                     
  1481                           ; BSR set to: 14
  1482                           ;interrupts.c: 15:     INT1PPS=0x09;
  1483  00396C  0E09               	movlw	9
  1484  00396E  010D               	movlb	13	; () banked
  1485  003970  6FF1               	movwf	241,b	;volatile
  1486  003972                     
  1487                           ; BSR set to: 13
  1488                           ;interrupts.c: 17:     PIE0bits.INT1IE = 1;
  1489  003972  010E               	movlb	14	; () banked
  1490  003974  8329               	bsf	41,1,b	;volatile
  1491  003976                     
  1492                           ; BSR set to: 14
  1493                           ;interrupts.c: 18:     PIE0bits.TMR0IE = 1;
  1494  003976  8B29               	bsf	41,5,b	;volatile
  1495  003978                     
  1496                           ; BSR set to: 14
  1497                           ;interrupts.c: 20:     IPR0bits.INT1IP = 1;
  1498  003978  831F               	bsf	31,1,b	;volatile
  1499  00397A                     
  1500                           ; BSR set to: 14
  1501                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 0;
  1502  00397A  9B1F               	bcf	31,5,b	;volatile
  1503  00397C                     
  1504                           ; BSR set to: 14
  1505                           ;interrupts.c: 23:     interrupts_clear();
  1506  00397C  EC27  F01D         	call	_interrupts_clear	;wreg free
  1507  003980                     
  1508                           ;interrupts.c: 25:     INTCONbits.INT1EDG = 0;
  1509  003980  92F2               	bcf	242,1,c	;volatile
  1510  003982                     
  1511                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  1512  003982  8AF2               	bsf	242,5,c	;volatile
  1513  003984                     
  1514                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  1515  003984  8CF2               	bsf	242,6,c	;volatile
  1516  003986                     
  1517                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  1518  003986  8EF2               	bsf	242,7,c	;volatile
  1519  003988  0012               	return		;funcret
  1520  00398A                     __end_of_interrupts_init:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _interrupts_clear *****************
  1524 ;; Defined at:
  1525 ;;		line 37 in file "interrupts.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 11
  1546 ;; This function calls:
  1547 ;;		_I2C_2_Master_Start
  1548 ;;		_I2C_2_Master_Stop
  1549 ;;		_I2C_2_Master_Write
  1550 ;;		_interrupts_colourclick
  1551 ;; This function is called by:
  1552 ;;		_interrupts_init
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text3
  1557  003A4E                     __ptext3:
  1558                           	callstack 0
  1559  003A4E                     _interrupts_clear:
  1560                           	callstack 18
  1561  003A4E                     
  1562                           ;interrupts.c: 38:     I2C_2_Master_Start();
  1563  003A4E  EC83  F01D         	call	_I2C_2_Master_Start	;wreg free
  1564                           
  1565                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  1566  003A52  0E52               	movlw	82
  1567  003A54  EC6C  F01D         	call	_I2C_2_Master_Write
  1568                           
  1569                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  1570  003A58  0EE6               	movlw	230
  1571  003A5A  EC6C  F01D         	call	_I2C_2_Master_Write
  1572                           
  1573                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  1574  003A5E  EC7E  F01D         	call	_I2C_2_Master_Stop	;wreg free
  1575                           
  1576                           ;interrupts.c: 43:     interrupts_colourclick();
  1577  003A62  ECC6  F01B         	call	_interrupts_colourclick	;wreg free
  1578  003A66  0012               	return		;funcret
  1579  003A68                     __end_of_interrupts_clear:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _interrupts_colourclick *****************
  1583 ;; Defined at:
  1584 ;;		line 50 in file "interrupts.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;Total ram usage:        1 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 10
  1605 ;; This function calls:
  1606 ;;		_colourclick_writetoaddr
  1607 ;; This function is called by:
  1608 ;;		_interrupts_clear
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text4
  1613  00378C                     __ptext4:
  1614                           	callstack 0
  1615  00378C                     _interrupts_colourclick:
  1616                           	callstack 18
  1617  00378C                     
  1618                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  1619  00378C  0E13               	movlw	19
  1620  00378E  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  1621  003790  0E00               	movlw	0
  1622  003792  ECF7  F01C         	call	_colourclick_writetoaddr
  1623  003796                     
  1624                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1625  003796  0E3F               	movlw	63
  1626  003798  6E0D               	movwf	??_interrupts_colourclick^0,c
  1627  00379A  0E55               	movlw	85
  1628  00379C                     u6057:
  1629  00379C  2EE8               	decfsz	wreg,f,c
  1630  00379E  D7FE               	bra	u6057
  1631  0037A0  2E0D               	decfsz	??_interrupts_colourclick^0,f,c
  1632  0037A2  D7FC               	bra	u6057
  1633  0037A4  F000               	nop	
  1634  0037A6                     
  1635                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  1636  0037A6  0E04               	movlw	4
  1637  0037A8  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  1638  0037AA  0E0C               	movlw	12
  1639  0037AC  ECF7  F01C         	call	_colourclick_writetoaddr
  1640  0037B0                     
  1641                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  1642  0037B0  C055  F00B         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  1643  0037B4  0E04               	movlw	4
  1644  0037B6  ECF7  F01C         	call	_colourclick_writetoaddr
  1645  0037BA                     
  1646                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  1647  0037BA  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  1648  0037BC  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  1649  0037BE  0E05               	movlw	5
  1650  0037C0  ECF7  F01C         	call	_colourclick_writetoaddr
  1651  0037C4                     
  1652                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  1653  0037C4  C053  F00B         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  1654  0037C8  0E06               	movlw	6
  1655  0037CA  ECF7  F01C         	call	_colourclick_writetoaddr
  1656  0037CE                     
  1657                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  1658  0037CE  5054               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  1659  0037D0  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  1660  0037D2  0E07               	movlw	7
  1661  0037D4  ECF7  F01C         	call	_colourclick_writetoaddr
  1662  0037D8  0012               	return		;funcret
  1663  0037DA                     __end_of_interrupts_colourclick:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _colourclick_init *****************
  1667 ;; Defined at:
  1668 ;;		line 12 in file "colour_click.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;Total ram usage:        1 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 10
  1689 ;; This function calls:
  1690 ;;		_I2C_2_Master_Init
  1691 ;;		_colourclickLEDs_init
  1692 ;;		_colourclick_writetoaddr
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text5
  1699  00386A                     __ptext5:
  1700                           	callstack 0
  1701  00386A                     _colourclick_init:
  1702                           	callstack 20
  1703  00386A                     
  1704                           ;colour_click.c: 14:     I2C_2_Master_Init();
  1705  00386A  EC51  F01C         	call	_I2C_2_Master_Init	;wreg free
  1706  00386E                     
  1707                           ;colour_click.c: 17:   colourclick_writetoaddr(0x00, 0x01);
  1708  00386E  0E01               	movlw	1
  1709  003870  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  1710  003872  0E00               	movlw	0
  1711  003874  ECF7  F01C         	call	_colourclick_writetoaddr
  1712  003878                     
  1713                           ;colour_click.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1714  003878  0E3F               	movlw	63
  1715  00387A  6E0D               	movwf	??_colourclick_init^0,c
  1716  00387C  0E55               	movlw	85
  1717  00387E                     u6067:
  1718  00387E  2EE8               	decfsz	wreg,f,c
  1719  003880  D7FE               	bra	u6067
  1720  003882  2E0D               	decfsz	??_colourclick_init^0,f,c
  1721  003884  D7FC               	bra	u6067
  1722  003886  F000               	nop	
  1723  003888                     
  1724                           ;colour_click.c: 21:  colourclick_writetoaddr(0x00, 0x03);
  1725  003888  0E03               	movlw	3
  1726  00388A  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  1727  00388C  0E00               	movlw	0
  1728  00388E  ECF7  F01C         	call	_colourclick_writetoaddr
  1729  003892                     
  1730                           ;colour_click.c: 24:  colourclick_writetoaddr(0x01, 0xD5);
  1731  003892  0ED5               	movlw	213
  1732  003894  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  1733  003896  0E01               	movlw	1
  1734  003898  ECF7  F01C         	call	_colourclick_writetoaddr
  1735  00389C                     
  1736                           ;colour_click.c: 26:     colourclickLEDs_init();
  1737  00389C  EC65  F01D         	call	_colourclickLEDs_init	;wreg free
  1738  0038A0  0012               	return		;funcret
  1739  0038A2                     __end_of_colourclick_init:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _colourclick_writetoaddr *****************
  1743 ;; Defined at:
  1744 ;;		line 33 in file "colour_click.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  address         1    wreg     unsigned char 
  1747 ;;  value           1   10[COMRAM] unsigned char 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  address         1   11[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1759 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1763 ;;Total ram usage:        2 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 9
  1766 ;; This function calls:
  1767 ;;		_I2C_2_Master_Start
  1768 ;;		_I2C_2_Master_Stop
  1769 ;;		_I2C_2_Master_Write
  1770 ;; This function is called by:
  1771 ;;		_interrupts_colourclick
  1772 ;;		_colourclick_init
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text6
  1777  0039EE                     __ptext6:
  1778                           	callstack 0
  1779  0039EE                     _colourclick_writetoaddr:
  1780                           	callstack 18
  1781                           
  1782                           ;incstack = 0
  1783                           ;colourclick_writetoaddr@address stored from wreg
  1784  0039EE  6E0C               	movwf	colourclick_writetoaddr@address^0,c
  1785  0039F0                     
  1786                           ;colour_click.c: 34:     I2C_2_Master_Start();
  1787  0039F0  EC83  F01D         	call	_I2C_2_Master_Start	;wreg free
  1788                           
  1789                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  1790  0039F4  0E52               	movlw	82
  1791  0039F6  EC6C  F01D         	call	_I2C_2_Master_Write
  1792                           
  1793                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  1794  0039FA  500C               	movf	colourclick_writetoaddr@address^0,w,c
  1795  0039FC  0980               	iorlw	128
  1796  0039FE  EC6C  F01D         	call	_I2C_2_Master_Write
  1797                           
  1798                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  1799  003A02  500B               	movf	colourclick_writetoaddr@value^0,w,c
  1800  003A04  EC6C  F01D         	call	_I2C_2_Master_Write
  1801                           
  1802                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  1803  003A08  EC7E  F01D         	call	_I2C_2_Master_Stop	;wreg free
  1804  003A0C  0012               	return		;funcret
  1805  003A0E                     __end_of_colourclick_writetoaddr:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _colourclickLEDs_init *****************
  1809 ;; Defined at:
  1810 ;;		line 32 in file "buttons_n_LEDs.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 8
  1831 ;; This function calls:
  1832 ;;		_colourclickLEDs_C
  1833 ;; This function is called by:
  1834 ;;		_colourclick_init
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text7
  1839  003ACA                     __ptext7:
  1840                           	callstack 0
  1841  003ACA                     _colourclickLEDs_init:
  1842                           	callstack 21
  1843  003ACA                     
  1844                           ;buttons_n_LEDs.c: 34:     TRISGbits.TRISG1 = 0;
  1845  003ACA  9287               	bcf	135,1,c	;volatile
  1846                           
  1847                           ;buttons_n_LEDs.c: 35:     TRISAbits.TRISA4 = 0;
  1848  003ACC  9881               	bcf	129,4,c	;volatile
  1849                           
  1850                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF7 = 0;
  1851  003ACE  9E86               	bcf	134,7,c	;volatile
  1852  003AD0                     
  1853                           ;buttons_n_LEDs.c: 39:     colourclickLEDs_C(0);
  1854  003AD0  0E00               	movlw	0
  1855  003AD2  ECC5  F01C         	call	_colourclickLEDs_C
  1856  003AD6  0012               	return		;funcret
  1857  003AD8                     __end_of_colourclickLEDs_init:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _I2C_2_Master_Init *****************
  1861 ;; Defined at:
  1862 ;;		line 8 in file "I2C.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 7
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_colourclick_init
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text8
  1891  0038A2                     __ptext8:
  1892                           	callstack 0
  1893  0038A2                     _I2C_2_Master_Init:
  1894                           	callstack 22
  1895  0038A2                     
  1896                           ;I2C.c: 10:   SSP2CON1bits.SSPM= 0b1000;
  1897  0038A2  010E               	movlb	14	; () banked
  1898  0038A4  51D9               	movf	217,w,b	;volatile
  1899  0038A6  0BF0               	andlw	-16
  1900  0038A8  0908               	iorlw	8
  1901  0038AA  6FD9               	movwf	217,b	;volatile
  1902  0038AC                     
  1903                           ; BSR set to: 14
  1904                           ;I2C.c: 11:   SSP2CON1bits.SSPEN = 1;
  1905  0038AC  8BD9               	bsf	217,5,b	;volatile
  1906                           
  1907                           ;I2C.c: 12:   SSP2ADD = (64000000/(4*100000))-1;
  1908  0038AE  0E9F               	movlw	159
  1909  0038B0  6FD6               	movwf	214,b	;volatile
  1910  0038B2                     
  1911                           ; BSR set to: 14
  1912                           ;I2C.c: 15:   TRISDbits.TRISD5 = 1;
  1913  0038B2  8A84               	bsf	132,5,c	;volatile
  1914  0038B4                     
  1915                           ; BSR set to: 14
  1916                           ;I2C.c: 16:   TRISDbits.TRISD6 = 1;
  1917  0038B4  8C84               	bsf	132,6,c	;volatile
  1918  0038B6                     
  1919                           ; BSR set to: 14
  1920                           ;I2C.c: 17:   ANSELDbits.ANSELD5=0;
  1921  0038B6  9BA7               	bcf	167,5,b	;volatile
  1922  0038B8                     
  1923                           ; BSR set to: 14
  1924                           ;I2C.c: 18:   ANSELDbits.ANSELD6=0;
  1925  0038B8  9DA7               	bcf	167,6,b	;volatile
  1926                           
  1927                           ;I2C.c: 19:   SSP2DATPPS=0x1D;
  1928  0038BA  0E1D               	movlw	29
  1929  0038BC  6F1D               	movwf	29,b	;volatile
  1930                           
  1931                           ;I2C.c: 20:   SSP2CLKPPS=0x1E;
  1932  0038BE  0E1E               	movlw	30
  1933  0038C0  6F1C               	movwf	28,b	;volatile
  1934                           
  1935                           ;I2C.c: 21:   RD5PPS=0x1C;
  1936  0038C2  0E1C               	movlw	28
  1937  0038C4  6F6F               	movwf	111,b	;volatile
  1938                           
  1939                           ;I2C.c: 22:   RD6PPS=0x1B;
  1940  0038C6  0E1B               	movlw	27
  1941  0038C8  6F70               	movwf	112,b	;volatile
  1942  0038CA                     
  1943                           ; BSR set to: 14
  1944  0038CA  0012               	return		;funcret
  1945  0038CC                     __end_of_I2C_2_Master_Init:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _colourcards_testingRGBC *****************
  1949 ;; Defined at:
  1950 ;;		line 121 in file "colour_cards.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  tmpval          2   53[BANK0 ] PTR struct .
  1953 ;;		 -> main@current(8), 
  1954 ;;  mL              2   55[BANK0 ] PTR struct .
  1955 ;;		 -> main@motorL(9), 
  1956 ;;  mR              2   57[BANK0 ] PTR struct .
  1957 ;;		 -> main@motorR(9), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1969 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1973 ;;Total ram usage:        8 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 13
  1976 ;; This function calls:
  1977 ;;		_colourcards_readRGBC
  1978 ;;		_colourclickLEDs_C
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text9
  1985  003442                     __ptext9:
  1986                           	callstack 0
  1987  003442                     _colourcards_testingRGBC:
  1988                           	callstack 17
  1989  003442                     
  1990                           ;colour_cards.c: 122:     LATDbits.LATD3 = 1;
  1991  003442  867C               	bsf	124,3,c	;volatile
  1992  003444                     
  1993                           ;colour_cards.c: 123:     colourclickLEDs_C(1);
  1994  003444  0E01               	movlw	1
  1995  003446  ECC5  F01C         	call	_colourclickLEDs_C
  1996  00344A                     l227:
  1997  00344A  A48E               	btfss	142,2,c	;volatile
  1998  00344C  EF2A  F01A         	goto	u5361
  1999  003450  EF2C  F01A         	goto	u5360
  2000  003454                     u5361:
  2001  003454  EF33  F01A         	goto	l4841
  2002  003458                     u5360:
  2003  003458  B68E               	btfsc	142,3,c	;volatile
  2004  00345A  EF31  F01A         	goto	u5371
  2005  00345E  EF33  F01A         	goto	u5370
  2006  003462                     u5371:
  2007  003462  EF25  F01A         	goto	l227
  2008  003466                     u5370:
  2009  003466                     l4841:
  2010                           
  2011                           ;colour_cards.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2012  003466  0E05               	movlw	5
  2013  003468  0100               	movlb	0	; () banked
  2014  00346A  6F9C               	movwf	(??_colourcards_testingRGBC+1)& (0+255),b
  2015  00346C  0E0F               	movlw	15
  2016  00346E  6F9B               	movwf	??_colourcards_testingRGBC& (0+255),b
  2017  003470  0EF1               	movlw	241
  2018  003472                     u6077:
  2019  003472  2EE8               	decfsz	wreg,f,c
  2020  003474  D7FE               	bra	u6077
  2021  003476  2F9B               	decfsz	??_colourcards_testingRGBC& (0+255),f,b
  2022  003478  D7FC               	bra	u6077
  2023  00347A  2F9C               	decfsz	(??_colourcards_testingRGBC+1)& (0+255),f,b
  2024  00347C  D7FA               	bra	u6077
  2025  00347E                     
  2026                           ;colour_cards.c: 128:         colourcards_readRGBC(tmpval, mL, mR);
  2027  00347E  C095  F083         	movff	colourcards_testingRGBC@tmpval,colourcards_readRGBC@abs
  2028  003482  C096  F084         	movff	colourcards_testingRGBC@tmpval+1,colourcards_readRGBC@abs+1
  2029  003486  C097  F085         	movff	colourcards_testingRGBC@mL,colourcards_readRGBC@mL
  2030  00348A  C098  F086         	movff	colourcards_testingRGBC@mL+1,colourcards_readRGBC@mL+1
  2031  00348E  C099  F087         	movff	colourcards_testingRGBC@mR,colourcards_readRGBC@mR
  2032  003492  C09A  F088         	movff	colourcards_testingRGBC@mR+1,colourcards_readRGBC@mR+1
  2033  003496  EC52  F007         	call	_colourcards_readRGBC	;wreg free
  2034  00349A  EF25  F01A         	goto	l227
  2035  00349E  0012               	return		;funcret
  2036  0034A0                     __end_of_colourcards_testingRGBC:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _colourcards_readRGBC *****************
  2040 ;; Defined at:
  2041 ;;		line 13 in file "colour_cards.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  abs             2   35[BANK0 ] PTR struct .
  2044 ;;		 -> main@current(8), 
  2045 ;;  mL              2   37[BANK0 ] PTR struct .
  2046 ;;		 -> main@motorL(9), 
  2047 ;;  mR              2   39[BANK0 ] PTR struct .
  2048 ;;		 -> main@motorR(9), 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  rel            12   41[BANK0 ] struct .
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;      Totals:         2      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;Total ram usage:       20 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 12
  2067 ;; This function calls:
  2068 ;;		___flge
  2069 ;;		_clearance
  2070 ;;		_colourcards_normaliseRGBC
  2071 ;;		_colourclick_readRGBC
  2072 ;;		_colourclick_readRGBC2
  2073 ;;		_forward
  2074 ;;		_reverse
  2075 ;;		_stop
  2076 ;;		_turnleft
  2077 ;;		_turnright
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;;		_colourcards_testingRGBC
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text10
  2085  000EA4                     __ptext10:
  2086                           	callstack 0
  2087  000EA4                     _colourcards_readRGBC:
  2088                           	callstack 17
  2089  000EA4                     
  2090                           ;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  2091  000EA4  010E               	movlb	14	; () banked
  2092  000EA6  9329               	bcf	41,1,b	;volatile
  2093  000EA8                     
  2094                           ; BSR set to: 14
  2095                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  2096  000EA8  C083  F014         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2097  000EAC  C084  F015         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2098  000EB0  EC50  F01A         	call	_colourclick_readRGBC	;wreg free
  2099                           
  2100                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  2101  000EB4  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2102  000EB8  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2103  000EBC  0E89               	movlw	low colourcards_readRGBC@rel
  2104  000EBE  0100               	movlb	0	; () banked
  2105  000EC0  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2106  000EC2  0E00               	movlw	high colourcards_readRGBC@rel
  2107  000EC4  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2108  000EC6  EC37  F016         	call	_colourcards_normaliseRGBC	;wreg free
  2109  000ECA                     
  2110                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  2111  000ECA  0E71               	movlw	113
  2112  000ECC  6E17               	movwf	___flge@ff1^0,c
  2113  000ECE  0E3D               	movlw	61
  2114  000ED0  6E18               	movwf	(___flge@ff1+1)^0,c
  2115  000ED2  0E0A               	movlw	10
  2116  000ED4  6E19               	movwf	(___flge@ff1+2)^0,c
  2117  000ED6  0E3F               	movlw	63
  2118  000ED8  6E1A               	movwf	(___flge@ff1+3)^0,c
  2119  000EDA  C089  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  2120  000EDE  C08A  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2121  000EE2  C08B  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2122  000EE6  C08C  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2123  000EEA  ECA0  F017         	call	___flge	;wreg free
  2124  000EEE  B0D8               	btfsc	status,0,c
  2125  000EF0  EF7C  F007         	goto	u5151
  2126  000EF4  EF7E  F007         	goto	u5150
  2127  000EF8                     u5151:
  2128  000EF8  EF29  F008         	goto	l4741
  2129  000EFC                     u5150:
  2130  000EFC  C08D  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2131  000F00  C08E  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2132  000F04  C08F  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2133  000F08  C090  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2134  000F0C  0E48               	movlw	72
  2135  000F0E  6E1B               	movwf	___flge@ff2^0,c
  2136  000F10  0EE1               	movlw	225
  2137  000F12  6E1C               	movwf	(___flge@ff2+1)^0,c
  2138  000F14  0E7A               	movlw	122
  2139  000F16  6E1D               	movwf	(___flge@ff2+2)^0,c
  2140  000F18  0E3E               	movlw	62
  2141  000F1A  6E1E               	movwf	(___flge@ff2+3)^0,c
  2142  000F1C  ECA0  F017         	call	___flge	;wreg free
  2143  000F20  B0D8               	btfsc	status,0,c
  2144  000F22  EF95  F007         	goto	u5161
  2145  000F26  EF97  F007         	goto	u5160
  2146  000F2A                     u5161:
  2147  000F2A  EF29  F008         	goto	l4741
  2148  000F2E                     u5160:
  2149  000F2E  C091  F017         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2150  000F32  C092  F018         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2151  000F36  C093  F019         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2152  000F3A  C094  F01A         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2153  000F3E  0EEC               	movlw	236
  2154  000F40  6E1B               	movwf	___flge@ff2^0,c
  2155  000F42  0E51               	movlw	81
  2156  000F44  6E1C               	movwf	(___flge@ff2+1)^0,c
  2157  000F46  0E38               	movlw	56
  2158  000F48  6E1D               	movwf	(___flge@ff2+2)^0,c
  2159  000F4A  0E3E               	movlw	62
  2160  000F4C  6E1E               	movwf	(___flge@ff2+3)^0,c
  2161  000F4E  ECA0  F017         	call	___flge	;wreg free
  2162  000F52  B0D8               	btfsc	status,0,c
  2163  000F54  EFAE  F007         	goto	u5171
  2164  000F58  EFB0  F007         	goto	u5170
  2165  000F5C                     u5171:
  2166  000F5C  EF29  F008         	goto	l4741
  2167  000F60                     u5170:
  2168  000F60                     
  2169                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  2170  000F60  C083  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2171  000F64  C084  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2172  000F68  0E03               	movlw	3
  2173  000F6A  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  2174  000F6C  ECF5  F016         	call	_colourclick_readRGBC2	;wreg free
  2175                           
  2176                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  2177  000F70  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2178  000F74  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2179  000F78  0E89               	movlw	low colourcards_readRGBC@rel
  2180  000F7A  0100               	movlb	0	; () banked
  2181  000F7C  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2182  000F7E  0E00               	movlw	high colourcards_readRGBC@rel
  2183  000F80  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2184  000F82  EC37  F016         	call	_colourcards_normaliseRGBC	;wreg free
  2185  000F86                     
  2186                           ;colour_cards.c: 27:         if (rel.G<0.185) {
  2187  000F86  C08D  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2188  000F8A  C08E  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2189  000F8E  C08F  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2190  000F92  C090  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2191  000F96  0EA4               	movlw	164
  2192  000F98  6E1B               	movwf	___flge@ff2^0,c
  2193  000F9A  0E70               	movlw	112
  2194  000F9C  6E1C               	movwf	(___flge@ff2+1)^0,c
  2195  000F9E  0E3D               	movlw	61
  2196  000FA0  6E1D               	movwf	(___flge@ff2+2)^0,c
  2197  000FA2  0E3E               	movlw	62
  2198  000FA4  6E1E               	movwf	(___flge@ff2+3)^0,c
  2199  000FA6  ECA0  F017         	call	___flge	;wreg free
  2200  000FAA  B0D8               	btfsc	status,0,c
  2201  000FAC  EFDA  F007         	goto	u5181
  2202  000FB0  EFDC  F007         	goto	u5180
  2203  000FB4                     u5181:
  2204  000FB4  EF04  F008         	goto	l4737
  2205  000FB8                     u5180:
  2206  000FB8                     
  2207                           ;colour_cards.c: 29:             clearance(mL, mR);
  2208  000FB8  C085  F028         	movff	colourcards_readRGBC@mL,clearance@mL
  2209  000FBC  C086  F029         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2210  000FC0  C087  F02A         	movff	colourcards_readRGBC@mR,clearance@mR
  2211  000FC4  C088  F02B         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2212  000FC8  EC7F  F01A         	call	_clearance	;wreg free
  2213                           
  2214                           ;colour_cards.c: 30:             turnright(mL, mR, 90);
  2215  000FCC  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2216  000FD0  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2217  000FD4  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2218  000FD8  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2219  000FDC  0E00               	movlw	0
  2220  000FDE  0100               	movlb	0	; () banked
  2221  000FE0  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2222  000FE2  0E5A               	movlw	90
  2223  000FE4  6F81               	movwf	turnright@deg& (0+255),b
  2224  000FE6  ECAE  F01A         	call	_turnright	;wreg free
  2225                           
  2226                           ;colour_cards.c: 31:             stop(mL, mR);
  2227  000FEA  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2228  000FEE  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2229  000FF2  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2230  000FF6  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2231  000FFA  ECDC  F019         	call	_stop	;wreg free
  2232  000FFE                     l4735:
  2233                           
  2234                           ;colour_cards.c: 32:             unknowncard_flag = 0;
  2235  000FFE  0E00               	movlw	0
  2236  001000  0100               	movlb	0	; () banked
  2237  001002  6FBC               	movwf	_unknowncard_flag& (0+255),b	;volatile
  2238                           
  2239                           ;colour_cards.c: 33:         } else {
  2240  001004  EF07  F00B         	goto	l4833
  2241  001008                     l4737:
  2242                           
  2243                           ;colour_cards.c: 35:             clearance(mL, mR);
  2244  001008  C085  F028         	movff	colourcards_readRGBC@mL,clearance@mL
  2245  00100C  C086  F029         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2246  001010  C087  F02A         	movff	colourcards_readRGBC@mR,clearance@mR
  2247  001014  C088  F02B         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2248  001018  EC7F  F01A         	call	_clearance	;wreg free
  2249                           
  2250                           ;colour_cards.c: 36:             turnright(mL, mR, 135);
  2251  00101C  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2252  001020  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2253  001024  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2254  001028  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2255  00102C  0E00               	movlw	0
  2256  00102E  0100               	movlb	0	; () banked
  2257  001030  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2258  001032  0E87               	movlw	135
  2259  001034  6F81               	movwf	turnright@deg& (0+255),b
  2260  001036  ECAE  F01A         	call	_turnright	;wreg free
  2261                           
  2262                           ;colour_cards.c: 37:             stop(mL, mR);
  2263  00103A  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2264  00103E  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2265  001042  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2266  001046  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2267  00104A  ECDC  F019         	call	_stop	;wreg free
  2268  00104E  EFFF  F007         	goto	l4735
  2269  001052                     l4741:
  2270  001052  C089  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  2271  001056  C08A  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2272  00105A  C08B  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2273  00105E  C08C  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2274  001062  0EAE               	movlw	174
  2275  001064  6E1B               	movwf	___flge@ff2^0,c
  2276  001066  0E47               	movlw	71
  2277  001068  6E1C               	movwf	(___flge@ff2+1)^0,c
  2278  00106A  0EE1               	movlw	225
  2279  00106C  6E1D               	movwf	(___flge@ff2+2)^0,c
  2280  00106E  0E3E               	movlw	62
  2281  001070  6E1E               	movwf	(___flge@ff2+3)^0,c
  2282  001072  ECA0  F017         	call	___flge	;wreg free
  2283  001076  B0D8               	btfsc	status,0,c
  2284  001078  EF40  F008         	goto	u5191
  2285  00107C  EF42  F008         	goto	u5190
  2286  001080                     u5191:
  2287  001080  EF3B  F009         	goto	l4767
  2288  001084                     u5190:
  2289  001084  0E9A               	movlw	154
  2290  001086  6E17               	movwf	___flge@ff1^0,c
  2291  001088  0E99               	movlw	153
  2292  00108A  6E18               	movwf	(___flge@ff1+1)^0,c
  2293  00108C  0E99               	movlw	153
  2294  00108E  6E19               	movwf	(___flge@ff1+2)^0,c
  2295  001090  0E3E               	movlw	62
  2296  001092  6E1A               	movwf	(___flge@ff1+3)^0,c
  2297  001094  C08D  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2298  001098  C08E  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2299  00109C  C08F  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2300  0010A0  C090  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2301  0010A4  ECA0  F017         	call	___flge	;wreg free
  2302  0010A8  B0D8               	btfsc	status,0,c
  2303  0010AA  EF59  F008         	goto	u5201
  2304  0010AE  EF5B  F008         	goto	u5200
  2305  0010B2                     u5201:
  2306  0010B2  EF3B  F009         	goto	l4767
  2307  0010B6                     u5200:
  2308  0010B6  0E14               	movlw	20
  2309  0010B8  6E17               	movwf	___flge@ff1^0,c
  2310  0010BA  0EAE               	movlw	174
  2311  0010BC  6E18               	movwf	(___flge@ff1+1)^0,c
  2312  0010BE  0E47               	movlw	71
  2313  0010C0  6E19               	movwf	(___flge@ff1+2)^0,c
  2314  0010C2  0E3E               	movlw	62
  2315  0010C4  6E1A               	movwf	(___flge@ff1+3)^0,c
  2316  0010C6  C091  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2317  0010CA  C092  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2318  0010CE  C093  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2319  0010D2  C094  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2320  0010D6  ECA0  F017         	call	___flge	;wreg free
  2321  0010DA  B0D8               	btfsc	status,0,c
  2322  0010DC  EF72  F008         	goto	u5211
  2323  0010E0  EF74  F008         	goto	u5210
  2324  0010E4                     u5211:
  2325  0010E4  EF3B  F009         	goto	l4767
  2326  0010E8                     u5210:
  2327  0010E8                     
  2328                           ;colour_cards.c: 43:         colourclick_readRGBC2(abs, 1);
  2329  0010E8  C083  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2330  0010EC  C084  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2331  0010F0  0E01               	movlw	1
  2332  0010F2  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  2333  0010F4  ECF5  F016         	call	_colourclick_readRGBC2	;wreg free
  2334                           
  2335                           ;colour_cards.c: 44:         colourcards_normaliseRGBC(abs, &rel);
  2336  0010F8  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2337  0010FC  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2338  001100  0E89               	movlw	low colourcards_readRGBC@rel
  2339  001102  0100               	movlb	0	; () banked
  2340  001104  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2341  001106  0E00               	movlw	high colourcards_readRGBC@rel
  2342  001108  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2343  00110A  EC37  F016         	call	_colourcards_normaliseRGBC	;wreg free
  2344  00110E                     
  2345                           ;colour_cards.c: 45:         if (rel.B<0.125) {
  2346  00110E  C091  F017         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2347  001112  C092  F018         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2348  001116  C093  F019         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2349  00111A  C094  F01A         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2350  00111E  0E00               	movlw	0
  2351  001120  6E1B               	movwf	___flge@ff2^0,c
  2352  001122  0E00               	movlw	0
  2353  001124  6E1C               	movwf	(___flge@ff2+1)^0,c
  2354  001126  0E00               	movlw	0
  2355  001128  6E1D               	movwf	(___flge@ff2+2)^0,c
  2356  00112A  0E3E               	movlw	62
  2357  00112C  6E1E               	movwf	(___flge@ff2+3)^0,c
  2358  00112E  ECA0  F017         	call	___flge	;wreg free
  2359  001132  B0D8               	btfsc	status,0,c
  2360  001134  EF9E  F008         	goto	u5221
  2361  001138  EFA0  F008         	goto	u5220
  2362  00113C                     u5221:
  2363  00113C  EFC5  F008         	goto	l4755
  2364  001140                     u5220:
  2365  001140                     
  2366                           ;colour_cards.c: 47:             clearance(mL, mR);
  2367  001140  C085  F028         	movff	colourcards_readRGBC@mL,clearance@mL
  2368  001144  C086  F029         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2369  001148  C087  F02A         	movff	colourcards_readRGBC@mR,clearance@mR
  2370  00114C  C088  F02B         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2371  001150  EC7F  F01A         	call	_clearance	;wreg free
  2372                           
  2373                           ;colour_cards.c: 48:             turnleft(mL, mR, 90);
  2374  001154  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2375  001158  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2376  00115C  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2377  001160  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2378  001164  0E00               	movlw	0
  2379  001166  0100               	movlb	0	; () banked
  2380  001168  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2381  00116A  0E5A               	movlw	90
  2382  00116C  6F81               	movwf	turnleft@deg& (0+255),b
  2383  00116E  ECD6  F01A         	call	_turnleft	;wreg free
  2384                           
  2385                           ;colour_cards.c: 49:             stop(mL, mR);
  2386  001172  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2387  001176  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2388  00117A  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2389  00117E  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2390  001182  ECDC  F019         	call	_stop	;wreg free
  2391  001186  EFFF  F007         	goto	l4735
  2392  00118A                     l4755:
  2393                           
  2394                           ;colour_cards.c: 52:             colourclick_readRGBC2(abs, 2);
  2395  00118A  C083  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2396  00118E  C084  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2397  001192  0E02               	movlw	2
  2398  001194  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  2399  001196  ECF5  F016         	call	_colourclick_readRGBC2	;wreg free
  2400                           
  2401                           ;colour_cards.c: 53:             colourcards_normaliseRGBC(abs, &rel);
  2402  00119A  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2403  00119E  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2404  0011A2  0E89               	movlw	low colourcards_readRGBC@rel
  2405  0011A4  0100               	movlb	0	; () banked
  2406  0011A6  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2407  0011A8  0E00               	movlw	high colourcards_readRGBC@rel
  2408  0011AA  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2409  0011AC  EC37  F016         	call	_colourcards_normaliseRGBC	;wreg free
  2410  0011B0                     
  2411                           ;colour_cards.c: 54:             if (rel.R<0.115) {
  2412  0011B0  C089  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  2413  0011B4  C08A  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2414  0011B8  C08B  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2415  0011BC  C08C  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2416  0011C0  0E1F               	movlw	31
  2417  0011C2  6E1B               	movwf	___flge@ff2^0,c
  2418  0011C4  0E85               	movlw	133
  2419  0011C6  6E1C               	movwf	(___flge@ff2+1)^0,c
  2420  0011C8  0EEB               	movlw	235
  2421  0011CA  6E1D               	movwf	(___flge@ff2+2)^0,c
  2422  0011CC  0E3D               	movlw	61
  2423  0011CE  6E1E               	movwf	(___flge@ff2+3)^0,c
  2424  0011D0  ECA0  F017         	call	___flge	;wreg free
  2425  0011D4  B0D8               	btfsc	status,0,c
  2426  0011D6  EFEF  F008         	goto	u5231
  2427  0011DA  EFF1  F008         	goto	u5230
  2428  0011DE                     u5231:
  2429  0011DE  EF16  F009         	goto	l4763
  2430  0011E2                     u5230:
  2431  0011E2                     
  2432                           ;colour_cards.c: 56:                 clearance(mL, mR);
  2433  0011E2  C085  F028         	movff	colourcards_readRGBC@mL,clearance@mL
  2434  0011E6  C086  F029         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2435  0011EA  C087  F02A         	movff	colourcards_readRGBC@mR,clearance@mR
  2436  0011EE  C088  F02B         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2437  0011F2  EC7F  F01A         	call	_clearance	;wreg free
  2438                           
  2439                           ;colour_cards.c: 57:                 turnright(mL, mR, 180);
  2440  0011F6  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2441  0011FA  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2442  0011FE  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2443  001202  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2444  001206  0E00               	movlw	0
  2445  001208  0100               	movlb	0	; () banked
  2446  00120A  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2447  00120C  0EB4               	movlw	180
  2448  00120E  6F81               	movwf	turnright@deg& (0+255),b
  2449  001210  ECAE  F01A         	call	_turnright	;wreg free
  2450                           
  2451                           ;colour_cards.c: 58:                 stop(mL, mR);
  2452  001214  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2453  001218  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2454  00121C  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2455  001220  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2456  001224  ECDC  F019         	call	_stop	;wreg free
  2457  001228  EFFF  F007         	goto	l4735
  2458  00122C                     l4763:
  2459                           
  2460                           ;colour_cards.c: 62:                 clearance(mL, mR);
  2461  00122C  C085  F028         	movff	colourcards_readRGBC@mL,clearance@mL
  2462  001230  C086  F029         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2463  001234  C087  F02A         	movff	colourcards_readRGBC@mR,clearance@mR
  2464  001238  C088  F02B         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2465  00123C  EC7F  F01A         	call	_clearance	;wreg free
  2466                           
  2467                           ;colour_cards.c: 63:                 turnleft(mL, mR, 135);
  2468  001240  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2469  001244  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2470  001248  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2471  00124C  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2472  001250  0E00               	movlw	0
  2473  001252  0100               	movlb	0	; () banked
  2474  001254  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2475  001256  0E87               	movlw	135
  2476  001258  6F81               	movwf	turnleft@deg& (0+255),b
  2477  00125A  ECD6  F01A         	call	_turnleft	;wreg free
  2478                           
  2479                           ;colour_cards.c: 64:                 stop(mL, mR);
  2480  00125E  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2481  001262  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2482  001266  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2483  00126A  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2484  00126E  ECDC  F019         	call	_stop	;wreg free
  2485  001272  EFFF  F007         	goto	l4735
  2486  001276                     l4767:
  2487  001276  0E48               	movlw	72
  2488  001278  6E17               	movwf	___flge@ff1^0,c
  2489  00127A  0EE1               	movlw	225
  2490  00127C  6E18               	movwf	(___flge@ff1+1)^0,c
  2491  00127E  0EFA               	movlw	250
  2492  001280  6E19               	movwf	(___flge@ff1+2)^0,c
  2493  001282  0E3E               	movlw	62
  2494  001284  6E1A               	movwf	(___flge@ff1+3)^0,c
  2495  001286  C089  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  2496  00128A  C08A  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2497  00128E  C08B  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2498  001292  C08C  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2499  001296  ECA0  F017         	call	___flge	;wreg free
  2500  00129A  B0D8               	btfsc	status,0,c
  2501  00129C  EF52  F009         	goto	u5241
  2502  0012A0  EF54  F009         	goto	u5240
  2503  0012A4                     u5241:
  2504  0012A4  EFCD  F009         	goto	l4785
  2505  0012A8                     u5240:
  2506  0012A8  0E85               	movlw	133
  2507  0012AA  6E17               	movwf	___flge@ff1^0,c
  2508  0012AC  0EEB               	movlw	235
  2509  0012AE  6E18               	movwf	(___flge@ff1+1)^0,c
  2510  0012B0  0E91               	movlw	145
  2511  0012B2  6E19               	movwf	(___flge@ff1+2)^0,c
  2512  0012B4  0E3E               	movlw	62
  2513  0012B6  6E1A               	movwf	(___flge@ff1+3)^0,c
  2514  0012B8  C08D  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2515  0012BC  C08E  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2516  0012C0  C08F  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2517  0012C4  C090  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2518  0012C8  ECA0  F017         	call	___flge	;wreg free
  2519  0012CC  B0D8               	btfsc	status,0,c
  2520  0012CE  EF6B  F009         	goto	u5251
  2521  0012D2  EF6D  F009         	goto	u5250
  2522  0012D6                     u5251:
  2523  0012D6  EFCD  F009         	goto	l4785
  2524  0012DA                     u5250:
  2525  0012DA  0EEC               	movlw	236
  2526  0012DC  6E17               	movwf	___flge@ff1^0,c
  2527  0012DE  0E51               	movlw	81
  2528  0012E0  6E18               	movwf	(___flge@ff1+1)^0,c
  2529  0012E2  0E38               	movlw	56
  2530  0012E4  6E19               	movwf	(___flge@ff1+2)^0,c
  2531  0012E6  0E3E               	movlw	62
  2532  0012E8  6E1A               	movwf	(___flge@ff1+3)^0,c
  2533  0012EA  C091  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2534  0012EE  C092  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2535  0012F2  C093  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2536  0012F6  C094  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2537  0012FA  ECA0  F017         	call	___flge	;wreg free
  2538  0012FE  B0D8               	btfsc	status,0,c
  2539  001300  EF84  F009         	goto	u5261
  2540  001304  EF86  F009         	goto	u5260
  2541  001308                     u5261:
  2542  001308  EFCD  F009         	goto	l4785
  2543  00130C                     u5260:
  2544  00130C                     
  2545                           ;colour_cards.c: 71:         reverse(mL, mR);
  2546  00130C  C085  F022         	movff	colourcards_readRGBC@mL,reverse@mL
  2547  001310  C086  F023         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  2548  001314  C087  F024         	movff	colourcards_readRGBC@mR,reverse@mR
  2549  001318  C088  F025         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2550  00131C  EC95  F019         	call	_reverse	;wreg free
  2551  001320                     
  2552                           ;colour_cards.c: 72:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  2553  001320  0E72               	movlw	114
  2554  001322  6E4E               	movwf	(??_colourcards_readRGBC+1)^0,c
  2555  001324  0EA3               	movlw	163
  2556  001326  6E4D               	movwf	??_colourcards_readRGBC^0,c
  2557  001328  0E9B               	movlw	155
  2558  00132A                     u6087:
  2559  00132A  2EE8               	decfsz	wreg,f,c
  2560  00132C  D7FE               	bra	u6087
  2561  00132E  2E4D               	decfsz	??_colourcards_readRGBC^0,f,c
  2562  001330  D7FC               	bra	u6087
  2563  001332  2E4E               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  2564  001334  D7FA               	bra	u6087
  2565  001336  F000               	nop	
  2566  001338                     
  2567                           ;colour_cards.c: 73:         stop(mL, mR);
  2568  001338  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2569  00133C  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2570  001340  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2571  001344  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2572  001348  ECDC  F019         	call	_stop	;wreg free
  2573                           
  2574                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2575  00134C  0E09               	movlw	9
  2576  00134E  6E4E               	movwf	(??_colourcards_readRGBC+1)^0,c
  2577  001350  0E1E               	movlw	30
  2578  001352  6E4D               	movwf	??_colourcards_readRGBC^0,c
  2579  001354  0EE4               	movlw	228
  2580  001356                     u6097:
  2581  001356  2EE8               	decfsz	wreg,f,c
  2582  001358  D7FE               	bra	u6097
  2583  00135A  2E4D               	decfsz	??_colourcards_readRGBC^0,f,c
  2584  00135C  D7FC               	bra	u6097
  2585  00135E  2E4E               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  2586  001360  D7FA               	bra	u6097
  2587  001362  D000               	nop2	
  2588  001364                     
  2589                           ;colour_cards.c: 75:         turnright(mL, mR, 90);
  2590  001364  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2591  001368  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2592  00136C  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2593  001370  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2594  001374  0E00               	movlw	0
  2595  001376  0100               	movlb	0	; () banked
  2596  001378  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2597  00137A  0E5A               	movlw	90
  2598  00137C  6F81               	movwf	turnright@deg& (0+255),b
  2599  00137E  ECAE  F01A         	call	_turnright	;wreg free
  2600  001382                     l4781:
  2601                           
  2602                           ;colour_cards.c: 76:         stop(mL, mR);
  2603  001382  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2604  001386  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2605  00138A  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2606  00138E  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2607  001392  ECDC  F019         	call	_stop	;wreg free
  2608  001396  EFFF  F007         	goto	l4735
  2609  00139A                     l4785:
  2610  00139A  0E48               	movlw	72
  2611  00139C  6E17               	movwf	___flge@ff1^0,c
  2612  00139E  0EE1               	movlw	225
  2613  0013A0  6E18               	movwf	(___flge@ff1+1)^0,c
  2614  0013A2  0EFA               	movlw	250
  2615  0013A4  6E19               	movwf	(___flge@ff1+2)^0,c
  2616  0013A6  0E3E               	movlw	62
  2617  0013A8  6E1A               	movwf	(___flge@ff1+3)^0,c
  2618  0013AA  C089  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  2619  0013AE  C08A  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2620  0013B2  C08B  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2621  0013B6  C08C  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2622  0013BA  ECA0  F017         	call	___flge	;wreg free
  2623  0013BE  B0D8               	btfsc	status,0,c
  2624  0013C0  EFE4  F009         	goto	u5271
  2625  0013C4  EFE6  F009         	goto	u5270
  2626  0013C8                     u5271:
  2627  0013C8  EF55  F00A         	goto	l4803
  2628  0013CC                     u5270:
  2629  0013CC  C08D  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2630  0013D0  C08E  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2631  0013D4  C08F  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2632  0013D8  C090  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2633  0013DC  0ECD               	movlw	205
  2634  0013DE  6E1B               	movwf	___flge@ff2^0,c
  2635  0013E0  0ECC               	movlw	204
  2636  0013E2  6E1C               	movwf	(___flge@ff2+1)^0,c
  2637  0013E4  0E8C               	movlw	140
  2638  0013E6  6E1D               	movwf	(___flge@ff2+2)^0,c
  2639  0013E8  0E3E               	movlw	62
  2640  0013EA  6E1E               	movwf	(___flge@ff2+3)^0,c
  2641  0013EC  ECA0  F017         	call	___flge	;wreg free
  2642  0013F0  B0D8               	btfsc	status,0,c
  2643  0013F2  EFFD  F009         	goto	u5281
  2644  0013F6  EFFF  F009         	goto	u5280
  2645  0013FA                     u5281:
  2646  0013FA  EF55  F00A         	goto	l4803
  2647  0013FE                     u5280:
  2648  0013FE  0E14               	movlw	20
  2649  001400  6E17               	movwf	___flge@ff1^0,c
  2650  001402  0EAE               	movlw	174
  2651  001404  6E18               	movwf	(___flge@ff1+1)^0,c
  2652  001406  0E47               	movlw	71
  2653  001408  6E19               	movwf	(___flge@ff1+2)^0,c
  2654  00140A  0E3E               	movlw	62
  2655  00140C  6E1A               	movwf	(___flge@ff1+3)^0,c
  2656  00140E  C091  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2657  001412  C092  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2658  001416  C093  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2659  00141A  C094  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2660  00141E  ECA0  F017         	call	___flge	;wreg free
  2661  001422  B0D8               	btfsc	status,0,c
  2662  001424  EF16  F00A         	goto	u5291
  2663  001428  EF18  F00A         	goto	u5290
  2664  00142C                     u5291:
  2665  00142C  EF55  F00A         	goto	l4803
  2666  001430                     u5290:
  2667  001430                     
  2668                           ;colour_cards.c: 81:         reverse(mL, mR);
  2669  001430  C085  F022         	movff	colourcards_readRGBC@mL,reverse@mL
  2670  001434  C086  F023         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  2671  001438  C087  F024         	movff	colourcards_readRGBC@mR,reverse@mR
  2672  00143C  C088  F025         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2673  001440  EC95  F019         	call	_reverse	;wreg free
  2674  001444                     
  2675                           ;colour_cards.c: 82:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  2676  001444  0E72               	movlw	114
  2677  001446  6E4E               	movwf	(??_colourcards_readRGBC+1)^0,c
  2678  001448  0EA3               	movlw	163
  2679  00144A  6E4D               	movwf	??_colourcards_readRGBC^0,c
  2680  00144C  0E9B               	movlw	155
  2681  00144E                     u6107:
  2682  00144E  2EE8               	decfsz	wreg,f,c
  2683  001450  D7FE               	bra	u6107
  2684  001452  2E4D               	decfsz	??_colourcards_readRGBC^0,f,c
  2685  001454  D7FC               	bra	u6107
  2686  001456  2E4E               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  2687  001458  D7FA               	bra	u6107
  2688  00145A  F000               	nop	
  2689  00145C                     
  2690                           ;colour_cards.c: 83:         stop(mL, mR);
  2691  00145C  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2692  001460  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2693  001464  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2694  001468  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2695  00146C  ECDC  F019         	call	_stop	;wreg free
  2696                           
  2697                           ;colour_cards.c: 84:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2698  001470  0E09               	movlw	9
  2699  001472  6E4E               	movwf	(??_colourcards_readRGBC+1)^0,c
  2700  001474  0E1E               	movlw	30
  2701  001476  6E4D               	movwf	??_colourcards_readRGBC^0,c
  2702  001478  0EE4               	movlw	228
  2703  00147A                     u6117:
  2704  00147A  2EE8               	decfsz	wreg,f,c
  2705  00147C  D7FE               	bra	u6117
  2706  00147E  2E4D               	decfsz	??_colourcards_readRGBC^0,f,c
  2707  001480  D7FC               	bra	u6117
  2708  001482  2E4E               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  2709  001484  D7FA               	bra	u6117
  2710  001486  D000               	nop2	
  2711  001488                     
  2712                           ;colour_cards.c: 85:         turnleft(mL, mR, 90);
  2713  001488  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2714  00148C  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2715  001490  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2716  001494  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2717  001498  0E00               	movlw	0
  2718  00149A  0100               	movlb	0	; () banked
  2719  00149C  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2720  00149E  0E5A               	movlw	90
  2721  0014A0  6F81               	movwf	turnleft@deg& (0+255),b
  2722  0014A2  ECD6  F01A         	call	_turnleft	;wreg free
  2723  0014A6  EFC1  F009         	goto	l4781
  2724  0014AA                     l4803:
  2725  0014AA  C089  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  2726  0014AE  C08A  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2727  0014B2  C08B  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2728  0014B6  C08C  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2729  0014BA  0ED7               	movlw	215
  2730  0014BC  6E1B               	movwf	___flge@ff2^0,c
  2731  0014BE  0EA3               	movlw	163
  2732  0014C0  6E1C               	movwf	(___flge@ff2+1)^0,c
  2733  0014C2  0EF0               	movlw	240
  2734  0014C4  6E1D               	movwf	(___flge@ff2+2)^0,c
  2735  0014C6  0E3E               	movlw	62
  2736  0014C8  6E1E               	movwf	(___flge@ff2+3)^0,c
  2737  0014CA  ECA0  F017         	call	___flge	;wreg free
  2738  0014CE  B0D8               	btfsc	status,0,c
  2739  0014D0  EF6C  F00A         	goto	u5301
  2740  0014D4  EF6E  F00A         	goto	u5300
  2741  0014D8                     u5301:
  2742  0014D8  EFA7  F00A         	goto	l4811
  2743  0014DC                     u5300:
  2744  0014DC  0E3D               	movlw	61
  2745  0014DE  6E17               	movwf	___flge@ff1^0,c
  2746  0014E0  0E0A               	movlw	10
  2747  0014E2  6E18               	movwf	(___flge@ff1+1)^0,c
  2748  0014E4  0E97               	movlw	151
  2749  0014E6  6E19               	movwf	(___flge@ff1+2)^0,c
  2750  0014E8  0E3E               	movlw	62
  2751  0014EA  6E1A               	movwf	(___flge@ff1+3)^0,c
  2752  0014EC  C08D  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2753  0014F0  C08E  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2754  0014F4  C08F  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2755  0014F8  C090  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2756  0014FC  ECA0  F017         	call	___flge	;wreg free
  2757  001500  B0D8               	btfsc	status,0,c
  2758  001502  EF85  F00A         	goto	u5311
  2759  001506  EF87  F00A         	goto	u5310
  2760  00150A                     u5311:
  2761  00150A  EFA7  F00A         	goto	l4811
  2762  00150E                     u5310:
  2763  00150E  0E3D               	movlw	61
  2764  001510  6E17               	movwf	___flge@ff1^0,c
  2765  001512  0E0A               	movlw	10
  2766  001514  6E18               	movwf	(___flge@ff1+1)^0,c
  2767  001516  0E57               	movlw	87
  2768  001518  6E19               	movwf	(___flge@ff1+2)^0,c
  2769  00151A  0E3E               	movlw	62
  2770  00151C  6E1A               	movwf	(___flge@ff1+3)^0,c
  2771  00151E  C091  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2772  001522  C092  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2773  001526  C093  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2774  00152A  C094  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2775  00152E  ECA0  F017         	call	___flge	;wreg free
  2776  001532  B0D8               	btfsc	status,0,c
  2777  001534  EF9E  F00A         	goto	u5321
  2778  001538  EFA0  F00A         	goto	u5320
  2779  00153C                     u5321:
  2780  00153C  EFA7  F00A         	goto	l4811
  2781  001540                     u5320:
  2782  001540                     
  2783                           ;colour_cards.c: 91:         unknowncard_flag = 0;
  2784  001540  0E00               	movlw	0
  2785  001542  0100               	movlb	0	; () banked
  2786  001544  6FBC               	movwf	_unknowncard_flag& (0+255),b	;volatile
  2787                           
  2788                           ;colour_cards.c: 92:         returnhome_flag = 1;
  2789  001546  0E01               	movlw	1
  2790  001548  6FBB               	movwf	_returnhome_flag& (0+255),b	;volatile
  2791                           
  2792                           ;colour_cards.c: 94:     } else {
  2793  00154A  EF07  F00B         	goto	l4833
  2794  00154E                     l4811:
  2795                           
  2796                           ;colour_cards.c: 96:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2797  00154E  0E52               	movlw	82
  2798  001550  6E4E               	movwf	(??_colourcards_readRGBC+1)^0,c
  2799  001552  0E2B               	movlw	43
  2800  001554  6E4D               	movwf	??_colourcards_readRGBC^0,c
  2801  001556  0E00               	movlw	0
  2802  001558                     u6127:
  2803  001558  2EE8               	decfsz	wreg,f,c
  2804  00155A  D7FE               	bra	u6127
  2805  00155C  2E4D               	decfsz	??_colourcards_readRGBC^0,f,c
  2806  00155E  D7FC               	bra	u6127
  2807  001560  2E4E               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  2808  001562  D7FA               	bra	u6127
  2809  001564  D000               	nop2	
  2810  001566                     
  2811                           ;colour_cards.c: 97:         forward(mL, mR);
  2812  001566  C085  F022         	movff	colourcards_readRGBC@mL,forward@mL
  2813  00156A  C086  F023         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  2814  00156E  C087  F024         	movff	colourcards_readRGBC@mR,forward@mR
  2815  001572  C088  F025         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  2816  001576  EC4E  F019         	call	_forward	;wreg free
  2817  00157A                     
  2818                           ;colour_cards.c: 98:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2819  00157A  0ED0               	movlw	208
  2820  00157C  6E4D               	movwf	??_colourcards_readRGBC^0,c
  2821  00157E  0ECA               	movlw	202
  2822  001580                     u6137:
  2823  001580  2EE8               	decfsz	wreg,f,c
  2824  001582  D7FE               	bra	u6137
  2825  001584  2E4D               	decfsz	??_colourcards_readRGBC^0,f,c
  2826  001586  D7FC               	bra	u6137
  2827                           
  2828                           ;colour_cards.c: 99:         stop(mL, mR);
  2829  001588  C085  F022         	movff	colourcards_readRGBC@mL,stop@mL
  2830  00158C  C086  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2831  001590  C087  F024         	movff	colourcards_readRGBC@mR,stop@mR
  2832  001594  C088  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2833  001598  ECDC  F019         	call	_stop	;wreg free
  2834  00159C                     
  2835                           ;colour_cards.c: 100:         colourclick_readRGBC(abs);
  2836  00159C  C083  F014         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2837  0015A0  C084  F015         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2838  0015A4  EC50  F01A         	call	_colourclick_readRGBC	;wreg free
  2839  0015A8                     
  2840                           ;colour_cards.c: 101:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrup
      +                          ts_upperbound)) {
  2841  0015A8  0100               	movlb	0	; () banked
  2842  0015AA  EE20 F006          	lfsr	2,6
  2843  0015AE  5183               	movf	colourcards_readRGBC@abs& (0+255),w,b
  2844  0015B0  26D9               	addwf	fsr2l,f,c
  2845  0015B2  5184               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  2846  0015B4  22DA               	addwfc	fsr2h,f,c
  2847  0015B6  5055               	movf	_interrupts_lowerbound^0,w,c	;volatile
  2848  0015B8  5CDE               	subwf	postinc2,w,c
  2849  0015BA  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2850  0015BC  58DE               	subwfb	postinc2,w,c
  2851  0015BE  A0D8               	btfss	status,0,c
  2852  0015C0  EFE4  F00A         	goto	u5331
  2853  0015C4  EFE6  F00A         	goto	u5330
  2854  0015C8                     u5331:
  2855  0015C8  EFF7  F00A         	goto	l4823
  2856  0015CC                     u5330:
  2857  0015CC                     
  2858                           ; BSR set to: 0
  2859  0015CC  EE20 F006          	lfsr	2,6
  2860  0015D0  5183               	movf	colourcards_readRGBC@abs& (0+255),w,b
  2861  0015D2  26D9               	addwf	fsr2l,f,c
  2862  0015D4  5184               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  2863  0015D6  22DA               	addwfc	fsr2h,f,c
  2864  0015D8  50DE               	movf	postinc2,w,c
  2865  0015DA  5C53               	subwf	_interrupts_upperbound^0,w,c	;volatile
  2866  0015DC  50DE               	movf	postinc2,w,c
  2867  0015DE  5854               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  2868  0015E0  B0D8               	btfsc	status,0,c
  2869  0015E2  EFF5  F00A         	goto	u5341
  2870  0015E6  EFF7  F00A         	goto	u5340
  2871  0015EA                     u5341:
  2872  0015EA  EFFF  F007         	goto	l4735
  2873  0015EE                     u5340:
  2874  0015EE                     l4823:
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;colour_cards.c: 102:             if (unknowncard_flag<3) {
  2878  0015EE  0E03               	movlw	3
  2879  0015F0  61BC               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  2880  0015F2  EFFD  F00A         	goto	u5351
  2881  0015F6  EFFF  F00A         	goto	u5350
  2882  0015FA                     u5351:
  2883  0015FA  EF04  F00B         	goto	l220
  2884  0015FE                     u5350:
  2885  0015FE                     
  2886                           ; BSR set to: 0
  2887                           ;colour_cards.c: 103:                 unknowncard_flag++;
  2888  0015FE  2BBC               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  2889  001600                     
  2890                           ; BSR set to: 0
  2891                           ;colour_cards.c: 104:                 PIR0bits.INT1IF = 1;
  2892  001600  010E               	movlb	14	; () banked
  2893  001602  8333               	bsf	51,1,b	;volatile
  2894                           
  2895                           ;colour_cards.c: 105:             } else {
  2896  001604  EF07  F00B         	goto	l4833
  2897  001608                     l220:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;colour_cards.c: 106:                 LATHbits.LATH3 = 1;
  2901  001608  8680               	bsf	128,3,c	;volatile
  2902  00160A                     
  2903                           ; BSR set to: 0
  2904                           ;colour_cards.c: 107:                 returnhome_flag = 1;
  2905  00160A  0E01               	movlw	1
  2906  00160C  6FBB               	movwf	_returnhome_flag& (0+255),b	;volatile
  2907  00160E                     l4833:
  2908                           
  2909                           ;colour_cards.c: 114:     PIE0bits.INT1IE = 1;
  2910  00160E  010E               	movlb	14	; () banked
  2911  001610  8329               	bsf	41,1,b	;volatile
  2912  001612                     
  2913                           ; BSR set to: 14
  2914  001612  0012               	return		;funcret
  2915  001614                     __end_of_colourcards_readRGBC:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _turnright *****************
  2919 ;; Defined at:
  2920 ;;		line 235 in file "DC_motors.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  mL              2   29[BANK0 ] PTR struct .
  2923 ;;		 -> main@motorL(9), 
  2924 ;;  mR              2   31[BANK0 ] PTR struct .
  2925 ;;		 -> main@motorR(9), 
  2926 ;;  deg             2   33[BANK0 ] unsigned int 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2938 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;Total ram usage:        6 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 10
  2945 ;; This function calls:
  2946 ;;		_left
  2947 ;;		_right
  2948 ;; This function is called by:
  2949 ;;		_colourcards_readRGBC
  2950 ;;		_DCmotors_calibration
  2951 ;;		_DCmotors_testing
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text11
  2956  00355C                     __ptext11:
  2957                           	callstack 0
  2958  00355C                     _turnright:
  2959                           	callstack 18
  2960  00355C                     
  2961                           ;DC_motors.c: 236:     if (returnhome_flag==0) {right(mL, mR, deg);}
  2962  00355C  0100               	movlb	0	; () banked
  2963  00355E  51BB               	movf	_returnhome_flag& (0+255),w,b	;volatile
  2964  003560  A4D8               	btfss	status,2,c
  2965  003562  EFB5  F01A         	goto	u5131
  2966  003566  EFB7  F01A         	goto	u5130
  2967  00356A                     u5131:
  2968  00356A  EFC7  F01A         	goto	l4711
  2969  00356E                     u5130:
  2970  00356E                     
  2971                           ; BSR set to: 0
  2972  00356E  C07D  F06D         	movff	turnright@mL,right@mL
  2973  003572  C07E  F06E         	movff	turnright@mL+1,right@mL+1
  2974  003576  C07F  F06F         	movff	turnright@mR,right@mR
  2975  00357A  C080  F070         	movff	turnright@mR+1,right@mR+1
  2976  00357E  C081  F071         	movff	turnright@deg,right@deg
  2977  003582  C082  F072         	movff	turnright@deg+1,right@deg+1
  2978  003586  EC6D  F012         	call	_right	;wreg free
  2979  00358A  EFD5  F01A         	goto	l648
  2980  00358E                     l4711:
  2981                           
  2982                           ; BSR set to: 0
  2983  00358E  C07D  F06D         	movff	turnright@mL,left@mL
  2984  003592  C07E  F06E         	movff	turnright@mL+1,left@mL+1
  2985  003596  C07F  F06F         	movff	turnright@mR,left@mR
  2986  00359A  C080  F070         	movff	turnright@mR+1,left@mR+1
  2987  00359E  C081  F071         	movff	turnright@deg,left@deg
  2988  0035A2  C082  F072         	movff	turnright@deg+1,left@deg+1
  2989  0035A6  EC70  F013         	call	_left	;wreg free
  2990  0035AA                     l648:
  2991  0035AA  0012               	return		;funcret
  2992  0035AC                     __end_of_turnright:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _turnleft *****************
  2996 ;; Defined at:
  2997 ;;		line 226 in file "DC_motors.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  mL              2   29[BANK0 ] PTR struct .
  3000 ;;		 -> main@motorL(9), 
  3001 ;;  mR              2   31[BANK0 ] PTR struct .
  3002 ;;		 -> main@motorR(9), 
  3003 ;;  deg             2   33[BANK0 ] unsigned int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3015 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;Total ram usage:        6 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 10
  3022 ;; This function calls:
  3023 ;;		_left
  3024 ;;		_right
  3025 ;; This function is called by:
  3026 ;;		_colourcards_readRGBC
  3027 ;;		_DCmotors_calibration
  3028 ;;		_DCmotors_testing
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text12
  3033  0035AC                     __ptext12:
  3034                           	callstack 0
  3035  0035AC                     _turnleft:
  3036                           	callstack 18
  3037  0035AC                     
  3038                           ;DC_motors.c: 227:     if (returnhome_flag==0) {left(mL, mR, deg);}
  3039  0035AC  0100               	movlb	0	; () banked
  3040  0035AE  51BB               	movf	_returnhome_flag& (0+255),w,b	;volatile
  3041  0035B0  A4D8               	btfss	status,2,c
  3042  0035B2  EFDD  F01A         	goto	u5141
  3043  0035B6  EFDF  F01A         	goto	u5140
  3044  0035BA                     u5141:
  3045  0035BA  EFEF  F01A         	goto	l4717
  3046  0035BE                     u5140:
  3047  0035BE                     
  3048                           ; BSR set to: 0
  3049  0035BE  C07D  F06D         	movff	turnleft@mL,left@mL
  3050  0035C2  C07E  F06E         	movff	turnleft@mL+1,left@mL+1
  3051  0035C6  C07F  F06F         	movff	turnleft@mR,left@mR
  3052  0035CA  C080  F070         	movff	turnleft@mR+1,left@mR+1
  3053  0035CE  C081  F071         	movff	turnleft@deg,left@deg
  3054  0035D2  C082  F072         	movff	turnleft@deg+1,left@deg+1
  3055  0035D6  EC70  F013         	call	_left	;wreg free
  3056  0035DA  EFFD  F01A         	goto	l643
  3057  0035DE                     l4717:
  3058                           
  3059                           ; BSR set to: 0
  3060  0035DE  C07D  F06D         	movff	turnleft@mL,right@mL
  3061  0035E2  C07E  F06E         	movff	turnleft@mL+1,right@mL+1
  3062  0035E6  C07F  F06F         	movff	turnleft@mR,right@mR
  3063  0035EA  C080  F070         	movff	turnleft@mR+1,right@mR+1
  3064  0035EE  C081  F071         	movff	turnleft@deg,right@deg
  3065  0035F2  C082  F072         	movff	turnleft@deg+1,right@deg+1
  3066  0035F6  EC6D  F012         	call	_right	;wreg free
  3067  0035FA                     l643:
  3068  0035FA  0012               	return		;funcret
  3069  0035FC                     __end_of_turnleft:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _right *****************
  3073 ;; Defined at:
  3074 ;;		line 195 in file "DC_motors.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  mL              2   13[BANK0 ] PTR struct .
  3077 ;;		 -> main@motorL(9), 
  3078 ;;  mR              2   15[BANK0 ] PTR struct .
  3079 ;;		 -> main@motorR(9), 
  3080 ;;  deg             2   17[BANK0 ] unsigned int 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  delay           4   19[BANK0 ] unsigned int 
  3083 ;;  i               2   27[BANK0 ] unsigned int 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3093 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3096 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;Total ram usage:       17 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 9
  3100 ;; This function calls:
  3101 ;;		_DCmotors_setPWM
  3102 ;;		___fladd
  3103 ;;		___fldiv
  3104 ;;		___flge
  3105 ;;		___flmul
  3106 ;;		___xxtofl
  3107 ;; This function is called by:
  3108 ;;		_turnleft
  3109 ;;		_turnright
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text13
  3114  0024DA                     __ptext13:
  3115                           	callstack 0
  3116  0024DA                     _right:
  3117                           	callstack 18
  3118  0024DA                     
  3119                           ;DC_motors.c: 197:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  3120  0024DA  0E23               	movlw	35
  3121  0024DC  6E34               	movwf	___fladd@a^0,c
  3122  0024DE  0EDB               	movlw	219
  3123  0024E0  6E35               	movwf	(___fladd@a+1)^0,c
  3124  0024E2  0E7B               	movlw	123
  3125  0024E4  6E36               	movwf	(___fladd@a+2)^0,c
  3126  0024E6  0E42               	movlw	66
  3127  0024E8  6E37               	movwf	(___fladd@a+3)^0,c
  3128  0024EA  0E6F               	movlw	111
  3129  0024EC  6E1B               	movwf	___flmul@a^0,c
  3130  0024EE  0EF0               	movlw	240
  3131  0024F0  6E1C               	movwf	(___flmul@a+1)^0,c
  3132  0024F2  0E01               	movlw	1
  3133  0024F4  6E1D               	movwf	(___flmul@a+2)^0,c
  3134  0024F6  0E40               	movlw	64
  3135  0024F8  6E1E               	movwf	(___flmul@a+3)^0,c
  3136  0024FA  C071  F009         	movff	right@deg,___xxtofl@val
  3137  0024FE  C072  F00A         	movff	right@deg+1,___xxtofl@val+1
  3138  002502  6A0B               	clrf	(___xxtofl@val+2)^0,c
  3139  002504  6A0C               	clrf	(___xxtofl@val+3)^0,c
  3140  002506  0E00               	movlw	0
  3141  002508  EC5D  F015         	call	___xxtofl
  3142  00250C  C009  F017         	movff	?___xxtofl,___flmul@b
  3143  002510  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  3144  002514  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  3145  002518  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  3146  00251C  EC6A  F00D         	call	___flmul	;wreg free
  3147  002520  C017  F030         	movff	?___flmul,___fladd@b
  3148  002524  C018  F031         	movff	?___flmul+1,___fladd@b+1
  3149  002528  C019  F032         	movff	?___flmul+2,___fladd@b+2
  3150  00252C  C01A  F033         	movff	?___flmul+3,___fladd@b+3
  3151  002530  EC0A  F00B         	call	___fladd	;wreg free
  3152  002534  C030  F077         	movff	?___fladd,_right$3194
  3153  002538  C031  F078         	movff	?___fladd+1,_right$3194+1
  3154  00253C  C032  F079         	movff	?___fladd+2,_right$3194+2
  3155  002540  C033  F07A         	movff	?___fladd+3,_right$3194+3
  3156                           
  3157                           ;DC_motors.c: 197:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  3158  002544  0E00               	movlw	0
  3159  002546  6E1B               	movwf	___flmul@a^0,c
  3160  002548  0E00               	movlw	0
  3161  00254A  6E1C               	movwf	(___flmul@a+1)^0,c
  3162  00254C  0EB4               	movlw	180
  3163  00254E  6E1D               	movwf	(___flmul@a+2)^0,c
  3164  002550  0E43               	movlw	67
  3165  002552  6E1E               	movwf	(___flmul@a+3)^0,c
  3166  002554  C077  F017         	movff	_right$3194,___flmul@b
  3167  002558  C078  F018         	movff	_right$3194+1,___flmul@b+1
  3168  00255C  C079  F019         	movff	_right$3194+2,___flmul@b+2
  3169  002560  C07A  F01A         	movff	_right$3194+3,___flmul@b+3
  3170  002564  EC6A  F00D         	call	___flmul	;wreg free
  3171  002568  C017  F040         	movff	?___flmul,___fldiv@b
  3172  00256C  C018  F041         	movff	?___flmul+1,___fldiv@b+1
  3173  002570  C019  F042         	movff	?___flmul+2,___fldiv@b+2
  3174  002574  C01A  F043         	movff	?___flmul+3,___fldiv@b+3
  3175  002578  C04F  F009         	movff	_turnright_calangle,___xxtofl@val	;volatile
  3176  00257C  C050  F00A         	movff	_turnright_calangle+1,___xxtofl@val+1	;volatile
  3177  002580  0E00               	movlw	0
  3178  002582  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  3179  002584  0EFF               	movlw	-1
  3180  002586  6E0B               	movwf	(___xxtofl@val+2)^0,c
  3181  002588  6E0C               	movwf	(___xxtofl@val+3)^0,c
  3182  00258A  0E01               	movlw	1
  3183  00258C  EC5D  F015         	call	___xxtofl
  3184  002590  C009  F044         	movff	?___xxtofl,___fldiv@a
  3185  002594  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  3186  002598  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  3187  00259C  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  3188  0025A0  EC7F  F00F         	call	___fldiv	;wreg free
  3189  0025A4  C040  F073         	movff	?___fldiv,right@delay
  3190  0025A8  C041  F074         	movff	?___fldiv+1,right@delay+1
  3191  0025AC  C042  F075         	movff	?___fldiv+2,right@delay+2
  3192  0025B0  C043  F076         	movff	?___fldiv+3,right@delay+3
  3193  0025B4                     
  3194                           ;DC_motors.c: 200:     mL->direction = 1;
  3195  0025B4  0100               	movlb	0	; () banked
  3196  0025B6  EE20 F001          	lfsr	2,1
  3197  0025BA  516D               	movf	right@mL& (0+255),w,b
  3198  0025BC  26D9               	addwf	fsr2l,f,c
  3199  0025BE  516E               	movf	(right@mL+1)& (0+255),w,b
  3200  0025C0  22DA               	addwfc	fsr2h,f,c
  3201  0025C2  0E01               	movlw	1
  3202  0025C4  6EDF               	movwf	indf2,c
  3203  0025C6                     
  3204                           ; BSR set to: 0
  3205                           ;DC_motors.c: 201:     mR->direction = 0;
  3206  0025C6  EE20 F001          	lfsr	2,1
  3207  0025CA  516F               	movf	right@mR& (0+255),w,b
  3208  0025CC  26D9               	addwf	fsr2l,f,c
  3209  0025CE  5170               	movf	(right@mR+1)& (0+255),w,b
  3210  0025D0  22DA               	addwfc	fsr2h,f,c
  3211  0025D2  0E00               	movlw	0
  3212  0025D4  6EDF               	movwf	indf2,c
  3213  0025D6                     
  3214                           ; BSR set to: 0
  3215                           ;DC_motors.c: 204:     LATHbits.LATH0 = 1;
  3216  0025D6  8080               	bsf	128,0,c	;volatile
  3217                           
  3218                           ;DC_motors.c: 205:     while((mL->power < 70) || (mR->power < 70)){
  3219  0025D8  EF22  F013         	goto	l4681
  3220  0025DC                     l4667:
  3221                           
  3222                           ;DC_motors.c: 207:         if (mL->power < 70) {mL->power += 10;}
  3223  0025DC  C06D  FFD9         	movff	right@mL,fsr2l
  3224  0025E0  C06E  FFDA         	movff	right@mL+1,fsr2h
  3225  0025E4  0E46               	movlw	70
  3226  0025E6  60DF               	cpfslt	indf2,c
  3227  0025E8  EFF8  F012         	goto	u5081
  3228  0025EC  EFFA  F012         	goto	u5080
  3229  0025F0                     u5081:
  3230  0025F0  EF00  F013         	goto	l4671
  3231  0025F4                     u5080:
  3232  0025F4  C06D  FFD9         	movff	right@mL,fsr2l
  3233  0025F8  C06E  FFDA         	movff	right@mL+1,fsr2h
  3234  0025FC  0E0A               	movlw	10
  3235  0025FE  26DF               	addwf	indf2,f,c
  3236  002600                     l4671:
  3237                           
  3238                           ;DC_motors.c: 208:         if (mR->power < 70) {mR->power += 10;}
  3239  002600  C06F  FFD9         	movff	right@mR,fsr2l
  3240  002604  C070  FFDA         	movff	right@mR+1,fsr2h
  3241  002608  0E46               	movlw	70
  3242  00260A  60DF               	cpfslt	indf2,c
  3243  00260C  EF0A  F013         	goto	u5091
  3244  002610  EF0C  F013         	goto	u5090
  3245  002614                     u5091:
  3246  002614  EF12  F013         	goto	l4675
  3247  002618                     u5090:
  3248  002618  C06F  FFD9         	movff	right@mR,fsr2l
  3249  00261C  C070  FFDA         	movff	right@mR+1,fsr2h
  3250  002620  0E0A               	movlw	10
  3251  002622  26DF               	addwf	indf2,f,c
  3252  002624                     l4675:
  3253                           
  3254                           ;DC_motors.c: 211:         DCmotors_setPWM(mL);
  3255  002624  C06D  F017         	movff	right@mL,DCmotors_setPWM@m
  3256  002628  C06E  F018         	movff	right@mL+1,DCmotors_setPWM@m+1
  3257  00262C  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  3258  002630                     
  3259                           ;DC_motors.c: 212:         DCmotors_setPWM(mR);
  3260  002630  C06F  F017         	movff	right@mR,DCmotors_setPWM@m
  3261  002634  C070  F018         	movff	right@mR+1,DCmotors_setPWM@m+1
  3262  002638  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  3263  00263C                     
  3264                           ;DC_motors.c: 213:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  3265  00263C  0EA0               	movlw	160
  3266  00263E                     u6147:
  3267  00263E  D000               	nop2	
  3268  002640  2EE8               	decfsz	wreg,f,c
  3269  002642  D7FD               	bra	u6147
  3270  002644                     l4681:
  3271                           
  3272                           ;DC_motors.c: 205:     while((mL->power < 70) || (mR->power < 70)){
  3273  002644  C06D  FFD9         	movff	right@mL,fsr2l
  3274  002648  C06E  FFDA         	movff	right@mL+1,fsr2h
  3275  00264C  0E45               	movlw	69
  3276  00264E  64DF               	cpfsgt	indf2,c
  3277  002650  EF2C  F013         	goto	u5101
  3278  002654  EF2E  F013         	goto	u5100
  3279  002658                     u5101:
  3280  002658  EFEE  F012         	goto	l4667
  3281  00265C                     u5100:
  3282  00265C  C06F  FFD9         	movff	right@mR,fsr2l
  3283  002660  C070  FFDA         	movff	right@mR+1,fsr2h
  3284  002664  0E45               	movlw	69
  3285  002666  64DF               	cpfsgt	indf2,c
  3286  002668  EF38  F013         	goto	u5111
  3287  00266C  EF3A  F013         	goto	u5110
  3288  002670                     u5111:
  3289  002670  EFEE  F012         	goto	l4667
  3290  002674                     u5110:
  3291  002674                     
  3292                           ;DC_motors.c: 216:     unsigned int i;;DC_motors.c: 217:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  3293  002674  0E00               	movlw	0
  3294  002676  0100               	movlb	0	; () banked
  3295  002678  6F7C               	movwf	(right@i+1)& (0+255),b
  3296  00267A  0E00               	movlw	0
  3297  00267C  6F7B               	movwf	right@i& (0+255),b
  3298  00267E  EF4C  F013         	goto	l4691
  3299  002682                     l4687:
  3300  002682  0E15               	movlw	21
  3301  002684  6E4C               	movwf	??_right^0,c
  3302  002686  0EC6               	movlw	198
  3303  002688                     u6157:
  3304  002688  2EE8               	decfsz	wreg,f,c
  3305  00268A  D7FE               	bra	u6157
  3306  00268C  2E4C               	decfsz	??_right^0,f,c
  3307  00268E  D7FC               	bra	u6157
  3308  002690  D000               	nop2	
  3309  002692  0100               	movlb	0	; () banked
  3310  002694  4B7B               	infsnz	right@i& (0+255),f,b
  3311  002696  2B7C               	incf	(right@i+1)& (0+255),f,b
  3312  002698                     l4691:
  3313                           
  3314                           ; BSR set to: 0
  3315  002698  C07B  F009         	movff	right@i,___xxtofl@val
  3316  00269C  C07C  F00A         	movff	right@i+1,___xxtofl@val+1
  3317  0026A0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  3318  0026A2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  3319  0026A4  0E00               	movlw	0
  3320  0026A6  EC5D  F015         	call	___xxtofl
  3321  0026AA  C009  F017         	movff	?___xxtofl,___flge@ff1
  3322  0026AE  C00A  F018         	movff	?___xxtofl+1,___flge@ff1+1
  3323  0026B2  C00B  F019         	movff	?___xxtofl+2,___flge@ff1+2
  3324  0026B6  C00C  F01A         	movff	?___xxtofl+3,___flge@ff1+3
  3325  0026BA  C073  F01B         	movff	right@delay,___flge@ff2
  3326  0026BE  C074  F01C         	movff	right@delay+1,___flge@ff2+1
  3327  0026C2  C075  F01D         	movff	right@delay+2,___flge@ff2+2
  3328  0026C6  C076  F01E         	movff	right@delay+3,___flge@ff2+3
  3329  0026CA  ECA0  F017         	call	___flge	;wreg free
  3330  0026CE  A0D8               	btfss	status,0,c
  3331  0026D0  EF6C  F013         	goto	u5121
  3332  0026D4  EF6E  F013         	goto	u5120
  3333  0026D8                     u5121:
  3334  0026D8  EF41  F013         	goto	l4687
  3335  0026DC                     u5120:
  3336  0026DC                     
  3337                           ;DC_motors.c: 219:     LATHbits.LATH0 = 0;
  3338  0026DC  9080               	bcf	128,0,c	;volatile
  3339  0026DE  0012               	return		;funcret
  3340  0026E0                     __end_of_right:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function _left *****************
  3344 ;; Defined at:
  3345 ;;		line 165 in file "DC_motors.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  mL              2   13[BANK0 ] PTR struct .
  3348 ;;		 -> main@motorL(9), 
  3349 ;;  mR              2   15[BANK0 ] PTR struct .
  3350 ;;		 -> main@motorR(9), 
  3351 ;;  deg             2   17[BANK0 ] unsigned int 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  delay           4   19[BANK0 ] unsigned int 
  3354 ;;  i               2   27[BANK0 ] unsigned int 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3364 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;Total ram usage:       17 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 9
  3371 ;; This function calls:
  3372 ;;		_DCmotors_setPWM
  3373 ;;		___fladd
  3374 ;;		___fldiv
  3375 ;;		___flge
  3376 ;;		___flmul
  3377 ;;		___xxtofl
  3378 ;; This function is called by:
  3379 ;;		_turnleft
  3380 ;;		_turnright
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text14
  3385  0026E0                     __ptext14:
  3386                           	callstack 0
  3387  0026E0                     _left:
  3388                           	callstack 18
  3389  0026E0                     
  3390                           ;DC_motors.c: 167:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  3391  0026E0  0E4A               	movlw	74
  3392  0026E2  6E34               	movwf	___fladd@a^0,c
  3393  0026E4  0E0C               	movlw	12
  3394  0026E6  6E35               	movwf	(___fladd@a+1)^0,c
  3395  0026E8  0EFC               	movlw	252
  3396  0026EA  6E36               	movwf	(___fladd@a+2)^0,c
  3397  0026EC  0E41               	movlw	65
  3398  0026EE  6E37               	movwf	(___fladd@a+3)^0,c
  3399  0026F0  0E7D               	movlw	125
  3400  0026F2  6E1B               	movwf	___flmul@a^0,c
  3401  0026F4  0E3F               	movlw	63
  3402  0026F6  6E1C               	movwf	(___flmul@a+1)^0,c
  3403  0026F8  0E15               	movlw	21
  3404  0026FA  6E1D               	movwf	(___flmul@a+2)^0,c
  3405  0026FC  0E40               	movlw	64
  3406  0026FE  6E1E               	movwf	(___flmul@a+3)^0,c
  3407  002700  C071  F009         	movff	left@deg,___xxtofl@val
  3408  002704  C072  F00A         	movff	left@deg+1,___xxtofl@val+1
  3409  002708  6A0B               	clrf	(___xxtofl@val+2)^0,c
  3410  00270A  6A0C               	clrf	(___xxtofl@val+3)^0,c
  3411  00270C  0E00               	movlw	0
  3412  00270E  EC5D  F015         	call	___xxtofl
  3413  002712  C009  F017         	movff	?___xxtofl,___flmul@b
  3414  002716  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  3415  00271A  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  3416  00271E  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  3417  002722  EC6A  F00D         	call	___flmul	;wreg free
  3418  002726  C017  F030         	movff	?___flmul,___fladd@b
  3419  00272A  C018  F031         	movff	?___flmul+1,___fladd@b+1
  3420  00272E  C019  F032         	movff	?___flmul+2,___fladd@b+2
  3421  002732  C01A  F033         	movff	?___flmul+3,___fladd@b+3
  3422  002736  EC0A  F00B         	call	___fladd	;wreg free
  3423  00273A  C030  F077         	movff	?___fladd,_left$3193
  3424  00273E  C031  F078         	movff	?___fladd+1,_left$3193+1
  3425  002742  C032  F079         	movff	?___fladd+2,_left$3193+2
  3426  002746  C033  F07A         	movff	?___fladd+3,_left$3193+3
  3427                           
  3428                           ;DC_motors.c: 167:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  3429  00274A  0E00               	movlw	0
  3430  00274C  6E1B               	movwf	___flmul@a^0,c
  3431  00274E  0E00               	movlw	0
  3432  002750  6E1C               	movwf	(___flmul@a+1)^0,c
  3433  002752  0EB4               	movlw	180
  3434  002754  6E1D               	movwf	(___flmul@a+2)^0,c
  3435  002756  0E43               	movlw	67
  3436  002758  6E1E               	movwf	(___flmul@a+3)^0,c
  3437  00275A  C077  F017         	movff	_left$3193,___flmul@b
  3438  00275E  C078  F018         	movff	_left$3193+1,___flmul@b+1
  3439  002762  C079  F019         	movff	_left$3193+2,___flmul@b+2
  3440  002766  C07A  F01A         	movff	_left$3193+3,___flmul@b+3
  3441  00276A  EC6A  F00D         	call	___flmul	;wreg free
  3442  00276E  C017  F040         	movff	?___flmul,___fldiv@b
  3443  002772  C018  F041         	movff	?___flmul+1,___fldiv@b+1
  3444  002776  C019  F042         	movff	?___flmul+2,___fldiv@b+2
  3445  00277A  C01A  F043         	movff	?___flmul+3,___fldiv@b+3
  3446  00277E  C051  F009         	movff	_turnleft_calangle,___xxtofl@val	;volatile
  3447  002782  C052  F00A         	movff	_turnleft_calangle+1,___xxtofl@val+1	;volatile
  3448  002786  0E00               	movlw	0
  3449  002788  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  3450  00278A  0EFF               	movlw	-1
  3451  00278C  6E0B               	movwf	(___xxtofl@val+2)^0,c
  3452  00278E  6E0C               	movwf	(___xxtofl@val+3)^0,c
  3453  002790  0E01               	movlw	1
  3454  002792  EC5D  F015         	call	___xxtofl
  3455  002796  C009  F044         	movff	?___xxtofl,___fldiv@a
  3456  00279A  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  3457  00279E  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  3458  0027A2  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  3459  0027A6  EC7F  F00F         	call	___fldiv	;wreg free
  3460  0027AA  C040  F073         	movff	?___fldiv,left@delay
  3461  0027AE  C041  F074         	movff	?___fldiv+1,left@delay+1
  3462  0027B2  C042  F075         	movff	?___fldiv+2,left@delay+2
  3463  0027B6  C043  F076         	movff	?___fldiv+3,left@delay+3
  3464  0027BA                     
  3465                           ;DC_motors.c: 170:     mL->direction = 0;
  3466  0027BA  0100               	movlb	0	; () banked
  3467  0027BC  EE20 F001          	lfsr	2,1
  3468  0027C0  516D               	movf	left@mL& (0+255),w,b
  3469  0027C2  26D9               	addwf	fsr2l,f,c
  3470  0027C4  516E               	movf	(left@mL+1)& (0+255),w,b
  3471  0027C6  22DA               	addwfc	fsr2h,f,c
  3472  0027C8  0E00               	movlw	0
  3473  0027CA  6EDF               	movwf	indf2,c
  3474  0027CC                     
  3475                           ; BSR set to: 0
  3476                           ;DC_motors.c: 171:     mR->direction = 1;
  3477  0027CC  EE20 F001          	lfsr	2,1
  3478  0027D0  516F               	movf	left@mR& (0+255),w,b
  3479  0027D2  26D9               	addwf	fsr2l,f,c
  3480  0027D4  5170               	movf	(left@mR+1)& (0+255),w,b
  3481  0027D6  22DA               	addwfc	fsr2h,f,c
  3482  0027D8  0E01               	movlw	1
  3483  0027DA  6EDF               	movwf	indf2,c
  3484  0027DC                     
  3485                           ; BSR set to: 0
  3486                           ;DC_motors.c: 174:     LATFbits.LATF0 = 1;
  3487  0027DC  807E               	bsf	126,0,c	;volatile
  3488                           
  3489                           ;DC_motors.c: 175:     while((mL->power < 70) || (mR->power < 70)){
  3490  0027DE  EF25  F014         	goto	l4647
  3491  0027E2                     l4633:
  3492                           
  3493                           ;DC_motors.c: 177:         if (mL->power < 70) {mL->power += 10;}
  3494  0027E2  C06D  FFD9         	movff	left@mL,fsr2l
  3495  0027E6  C06E  FFDA         	movff	left@mL+1,fsr2h
  3496  0027EA  0E46               	movlw	70
  3497  0027EC  60DF               	cpfslt	indf2,c
  3498  0027EE  EFFB  F013         	goto	u5031
  3499  0027F2  EFFD  F013         	goto	u5030
  3500  0027F6                     u5031:
  3501  0027F6  EF03  F014         	goto	l4637
  3502  0027FA                     u5030:
  3503  0027FA  C06D  FFD9         	movff	left@mL,fsr2l
  3504  0027FE  C06E  FFDA         	movff	left@mL+1,fsr2h
  3505  002802  0E0A               	movlw	10
  3506  002804  26DF               	addwf	indf2,f,c
  3507  002806                     l4637:
  3508                           
  3509                           ;DC_motors.c: 178:         if (mR->power < 70) {mR->power += 10;}
  3510  002806  C06F  FFD9         	movff	left@mR,fsr2l
  3511  00280A  C070  FFDA         	movff	left@mR+1,fsr2h
  3512  00280E  0E46               	movlw	70
  3513  002810  60DF               	cpfslt	indf2,c
  3514  002812  EF0D  F014         	goto	u5041
  3515  002816  EF0F  F014         	goto	u5040
  3516  00281A                     u5041:
  3517  00281A  EF15  F014         	goto	l4641
  3518  00281E                     u5040:
  3519  00281E  C06F  FFD9         	movff	left@mR,fsr2l
  3520  002822  C070  FFDA         	movff	left@mR+1,fsr2h
  3521  002826  0E0A               	movlw	10
  3522  002828  26DF               	addwf	indf2,f,c
  3523  00282A                     l4641:
  3524                           
  3525                           ;DC_motors.c: 181:         DCmotors_setPWM(mL);
  3526  00282A  C06D  F017         	movff	left@mL,DCmotors_setPWM@m
  3527  00282E  C06E  F018         	movff	left@mL+1,DCmotors_setPWM@m+1
  3528  002832  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  3529  002836                     
  3530                           ;DC_motors.c: 182:         DCmotors_setPWM(mR);
  3531  002836  C06F  F017         	movff	left@mR,DCmotors_setPWM@m
  3532  00283A  C070  F018         	movff	left@mR+1,DCmotors_setPWM@m+1
  3533  00283E  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  3534  002842                     
  3535                           ;DC_motors.c: 183:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  3536  002842  0EA0               	movlw	160
  3537  002844                     u6167:
  3538  002844  D000               	nop2	
  3539  002846  2EE8               	decfsz	wreg,f,c
  3540  002848  D7FD               	bra	u6167
  3541  00284A                     l4647:
  3542                           
  3543                           ;DC_motors.c: 175:     while((mL->power < 70) || (mR->power < 70)){
  3544  00284A  C06D  FFD9         	movff	left@mL,fsr2l
  3545  00284E  C06E  FFDA         	movff	left@mL+1,fsr2h
  3546  002852  0E45               	movlw	69
  3547  002854  64DF               	cpfsgt	indf2,c
  3548  002856  EF2F  F014         	goto	u5051
  3549  00285A  EF31  F014         	goto	u5050
  3550  00285E                     u5051:
  3551  00285E  EFF1  F013         	goto	l4633
  3552  002862                     u5050:
  3553  002862  C06F  FFD9         	movff	left@mR,fsr2l
  3554  002866  C070  FFDA         	movff	left@mR+1,fsr2h
  3555  00286A  0E45               	movlw	69
  3556  00286C  64DF               	cpfsgt	indf2,c
  3557  00286E  EF3B  F014         	goto	u5061
  3558  002872  EF3D  F014         	goto	u5060
  3559  002876                     u5061:
  3560  002876  EFF1  F013         	goto	l4633
  3561  00287A                     u5060:
  3562  00287A                     
  3563                           ;DC_motors.c: 186:     unsigned int i;;DC_motors.c: 187:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  3564  00287A  0E00               	movlw	0
  3565  00287C  0100               	movlb	0	; () banked
  3566  00287E  6F7C               	movwf	(left@i+1)& (0+255),b
  3567  002880  0E00               	movlw	0
  3568  002882  6F7B               	movwf	left@i& (0+255),b
  3569  002884  EF4F  F014         	goto	l4657
  3570  002888                     l4653:
  3571  002888  0E15               	movlw	21
  3572  00288A  6E4C               	movwf	??_left^0,c
  3573  00288C  0EC6               	movlw	198
  3574  00288E                     u6177:
  3575  00288E  2EE8               	decfsz	wreg,f,c
  3576  002890  D7FE               	bra	u6177
  3577  002892  2E4C               	decfsz	??_left^0,f,c
  3578  002894  D7FC               	bra	u6177
  3579  002896  D000               	nop2	
  3580  002898  0100               	movlb	0	; () banked
  3581  00289A  4B7B               	infsnz	left@i& (0+255),f,b
  3582  00289C  2B7C               	incf	(left@i+1)& (0+255),f,b
  3583  00289E                     l4657:
  3584                           
  3585                           ; BSR set to: 0
  3586  00289E  C07B  F009         	movff	left@i,___xxtofl@val
  3587  0028A2  C07C  F00A         	movff	left@i+1,___xxtofl@val+1
  3588  0028A6  6A0B               	clrf	(___xxtofl@val+2)^0,c
  3589  0028A8  6A0C               	clrf	(___xxtofl@val+3)^0,c
  3590  0028AA  0E00               	movlw	0
  3591  0028AC  EC5D  F015         	call	___xxtofl
  3592  0028B0  C009  F017         	movff	?___xxtofl,___flge@ff1
  3593  0028B4  C00A  F018         	movff	?___xxtofl+1,___flge@ff1+1
  3594  0028B8  C00B  F019         	movff	?___xxtofl+2,___flge@ff1+2
  3595  0028BC  C00C  F01A         	movff	?___xxtofl+3,___flge@ff1+3
  3596  0028C0  C073  F01B         	movff	left@delay,___flge@ff2
  3597  0028C4  C074  F01C         	movff	left@delay+1,___flge@ff2+1
  3598  0028C8  C075  F01D         	movff	left@delay+2,___flge@ff2+2
  3599  0028CC  C076  F01E         	movff	left@delay+3,___flge@ff2+3
  3600  0028D0  ECA0  F017         	call	___flge	;wreg free
  3601  0028D4  A0D8               	btfss	status,0,c
  3602  0028D6  EF6F  F014         	goto	u5071
  3603  0028DA  EF71  F014         	goto	u5070
  3604  0028DE                     u5071:
  3605  0028DE  EF44  F014         	goto	l4653
  3606  0028E2                     u5070:
  3607  0028E2                     
  3608                           ;DC_motors.c: 188:     LATFbits.LATF0 = 0;
  3609  0028E2  907E               	bcf	126,0,c	;volatile
  3610  0028E4  0012               	return		;funcret
  3611  0028E6                     __end_of_left:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function ___flmul *****************
  3615 ;; Defined at:
  3616 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  b               4   22[COMRAM] void 
  3619 ;;  a               4   26[COMRAM] void 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  prod            4   41[COMRAM] struct .
  3622 ;;  grs             4   35[COMRAM] unsigned long 
  3623 ;;  temp            2   45[COMRAM] struct .
  3624 ;;  bexp            1   40[COMRAM] unsigned char 
  3625 ;;  aexp            1   39[COMRAM] unsigned char 
  3626 ;;  sign            1   34[COMRAM] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  4   22[COMRAM] unsigned char 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, prodl, prodh
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3636 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;Total ram usage:       25 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 7
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_left
  3647 ;;		_right
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text15
  3652  001AD4                     __ptext15:
  3653                           	callstack 0
  3654  001AD4                     ___flmul:
  3655                           	callstack 19
  3656  001AD4  501A               	movf	(___flmul@b+3)^0,w,c
  3657  001AD6  0B80               	andlw	128
  3658  001AD8  6E23               	movwf	___flmul@sign^0,c
  3659  001ADA  501A               	movf	(___flmul@b+3)^0,w,c
  3660  001ADC  241A               	addwf	(___flmul@b+3)^0,w,c
  3661  001ADE  6E29               	movwf	___flmul@bexp^0,c
  3662  001AE0  AE19               	btfss	(___flmul@b+2)^0,7,c
  3663  001AE2  EF75  F00D         	goto	u3371
  3664  001AE6  EF77  F00D         	goto	u3370
  3665  001AEA                     u3371:
  3666  001AEA  EF78  F00D         	goto	l3555
  3667  001AEE                     u3370:
  3668  001AEE  8029               	bsf	___flmul@bexp^0,0,c
  3669  001AF0                     l3555:
  3670  001AF0  5029               	movf	___flmul@bexp^0,w,c
  3671  001AF2  B4D8               	btfsc	status,2,c
  3672  001AF4  EF7E  F00D         	goto	u3381
  3673  001AF8  EF80  F00D         	goto	u3380
  3674  001AFC                     u3381:
  3675  001AFC  EF93  F00D         	goto	l3563
  3676  001B00                     u3380:
  3677  001B00  2829               	incf	___flmul@bexp^0,w,c
  3678  001B02  A4D8               	btfss	status,2,c
  3679  001B04  EF86  F00D         	goto	u3391
  3680  001B08  EF88  F00D         	goto	u3390
  3681  001B0C                     u3391:
  3682  001B0C  EF90  F00D         	goto	l3561
  3683  001B10                     u3390:
  3684  001B10  0E00               	movlw	0
  3685  001B12  6E17               	movwf	___flmul@b^0,c
  3686  001B14  0E00               	movlw	0
  3687  001B16  6E18               	movwf	(___flmul@b+1)^0,c
  3688  001B18  0E00               	movlw	0
  3689  001B1A  6E19               	movwf	(___flmul@b+2)^0,c
  3690  001B1C  0E00               	movlw	0
  3691  001B1E  6E1A               	movwf	(___flmul@b+3)^0,c
  3692  001B20                     l3561:
  3693  001B20  8E19               	bsf	(___flmul@b+2)^0,7,c
  3694  001B22  EF9B  F00D         	goto	l3565
  3695  001B26                     l3563:
  3696  001B26  0E00               	movlw	0
  3697  001B28  6E17               	movwf	___flmul@b^0,c
  3698  001B2A  0E00               	movlw	0
  3699  001B2C  6E18               	movwf	(___flmul@b+1)^0,c
  3700  001B2E  0E00               	movlw	0
  3701  001B30  6E19               	movwf	(___flmul@b+2)^0,c
  3702  001B32  0E00               	movlw	0
  3703  001B34  6E1A               	movwf	(___flmul@b+3)^0,c
  3704  001B36                     l3565:
  3705  001B36  501E               	movf	(___flmul@a+3)^0,w,c
  3706  001B38  0B80               	andlw	128
  3707  001B3A  1A23               	xorwf	___flmul@sign^0,f,c
  3708  001B3C  501E               	movf	(___flmul@a+3)^0,w,c
  3709  001B3E  241E               	addwf	(___flmul@a+3)^0,w,c
  3710  001B40  6E28               	movwf	___flmul@aexp^0,c
  3711  001B42  AE1D               	btfss	(___flmul@a+2)^0,7,c
  3712  001B44  EFA6  F00D         	goto	u3401
  3713  001B48  EFA8  F00D         	goto	u3400
  3714  001B4C                     u3401:
  3715  001B4C  EFA9  F00D         	goto	l3573
  3716  001B50                     u3400:
  3717  001B50  8028               	bsf	___flmul@aexp^0,0,c
  3718  001B52                     l3573:
  3719  001B52  5028               	movf	___flmul@aexp^0,w,c
  3720  001B54  B4D8               	btfsc	status,2,c
  3721  001B56  EFAF  F00D         	goto	u3411
  3722  001B5A  EFB1  F00D         	goto	u3410
  3723  001B5E                     u3411:
  3724  001B5E  EFC4  F00D         	goto	l3581
  3725  001B62                     u3410:
  3726  001B62  2828               	incf	___flmul@aexp^0,w,c
  3727  001B64  A4D8               	btfss	status,2,c
  3728  001B66  EFB7  F00D         	goto	u3421
  3729  001B6A  EFB9  F00D         	goto	u3420
  3730  001B6E                     u3421:
  3731  001B6E  EFC1  F00D         	goto	l3579
  3732  001B72                     u3420:
  3733  001B72  0E00               	movlw	0
  3734  001B74  6E1B               	movwf	___flmul@a^0,c
  3735  001B76  0E00               	movlw	0
  3736  001B78  6E1C               	movwf	(___flmul@a+1)^0,c
  3737  001B7A  0E00               	movlw	0
  3738  001B7C  6E1D               	movwf	(___flmul@a+2)^0,c
  3739  001B7E  0E00               	movlw	0
  3740  001B80  6E1E               	movwf	(___flmul@a+3)^0,c
  3741  001B82                     l3579:
  3742  001B82  8E1D               	bsf	(___flmul@a+2)^0,7,c
  3743  001B84  EFCC  F00D         	goto	l1377
  3744  001B88                     l3581:
  3745  001B88  0E00               	movlw	0
  3746  001B8A  6E1B               	movwf	___flmul@a^0,c
  3747  001B8C  0E00               	movlw	0
  3748  001B8E  6E1C               	movwf	(___flmul@a+1)^0,c
  3749  001B90  0E00               	movlw	0
  3750  001B92  6E1D               	movwf	(___flmul@a+2)^0,c
  3751  001B94  0E00               	movlw	0
  3752  001B96  6E1E               	movwf	(___flmul@a+3)^0,c
  3753  001B98                     l1377:
  3754  001B98  5028               	movf	___flmul@aexp^0,w,c
  3755  001B9A  B4D8               	btfsc	status,2,c
  3756  001B9C  EFD2  F00D         	goto	u3431
  3757  001BA0  EFD4  F00D         	goto	u3430
  3758  001BA4                     u3431:
  3759  001BA4  EFDC  F00D         	goto	l3585
  3760  001BA8                     u3430:
  3761  001BA8  5029               	movf	___flmul@bexp^0,w,c
  3762  001BAA  A4D8               	btfss	status,2,c
  3763  001BAC  EFDA  F00D         	goto	u3441
  3764  001BB0  EFDC  F00D         	goto	u3440
  3765  001BB4                     u3441:
  3766  001BB4  EFE6  F00D         	goto	l3589
  3767  001BB8                     u3440:
  3768  001BB8                     l3585:
  3769  001BB8  0E00               	movlw	0
  3770  001BBA  6E17               	movwf	?___flmul^0,c
  3771  001BBC  0E00               	movlw	0
  3772  001BBE  6E18               	movwf	(?___flmul+1)^0,c
  3773  001BC0  0E00               	movlw	0
  3774  001BC2  6E19               	movwf	(?___flmul+2)^0,c
  3775  001BC4  0E00               	movlw	0
  3776  001BC6  6E1A               	movwf	(?___flmul+3)^0,c
  3777  001BC8  EF7E  F00F         	goto	l1381
  3778  001BCC                     l3589:
  3779  001BCC  501D               	movf	(___flmul@a+2)^0,w,c
  3780  001BCE  0217               	mulwf	___flmul@b^0,c
  3781  001BD0  CFF3 F02E          	movff	prodl,___flmul@temp
  3782  001BD4  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3783  001BD8  502E               	movf	___flmul@temp^0,w,c
  3784  001BDA  6E24               	movwf	___flmul@grs^0,c
  3785  001BDC  6A25               	clrf	(___flmul@grs+1)^0,c
  3786  001BDE  6A26               	clrf	(___flmul@grs+2)^0,c
  3787  001BE0  6A27               	clrf	(___flmul@grs+3)^0,c
  3788  001BE2  502F               	movf	(___flmul@temp+1)^0,w,c
  3789  001BE4  6E2A               	movwf	___flmul@prod^0,c
  3790  001BE6  6A2B               	clrf	(___flmul@prod+1)^0,c
  3791  001BE8  6A2C               	clrf	(___flmul@prod+2)^0,c
  3792  001BEA  6A2D               	clrf	(___flmul@prod+3)^0,c
  3793  001BEC  501C               	movf	(___flmul@a+1)^0,w,c
  3794  001BEE  0218               	mulwf	(___flmul@b+1)^0,c
  3795  001BF0  CFF3 F02E          	movff	prodl,___flmul@temp
  3796  001BF4  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3797  001BF8  502E               	movf	___flmul@temp^0,w,c
  3798  001BFA  2624               	addwf	___flmul@grs^0,f,c
  3799  001BFC  0E00               	movlw	0
  3800  001BFE  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3801  001C00  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3802  001C02  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3803  001C04  502F               	movf	(___flmul@temp+1)^0,w,c
  3804  001C06  262A               	addwf	___flmul@prod^0,f,c
  3805  001C08  0E00               	movlw	0
  3806  001C0A  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3807  001C0C  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3808  001C0E  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3809  001C10  501B               	movf	___flmul@a^0,w,c
  3810  001C12  0219               	mulwf	(___flmul@b+2)^0,c
  3811  001C14  CFF3 F02E          	movff	prodl,___flmul@temp
  3812  001C18  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3813  001C1C  502E               	movf	___flmul@temp^0,w,c
  3814  001C1E  2624               	addwf	___flmul@grs^0,f,c
  3815  001C20  0E00               	movlw	0
  3816  001C22  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3817  001C24  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3818  001C26  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3819  001C28  502F               	movf	(___flmul@temp+1)^0,w,c
  3820  001C2A  262A               	addwf	___flmul@prod^0,f,c
  3821  001C2C  0E00               	movlw	0
  3822  001C2E  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3823  001C30  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3824  001C32  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3825  001C34  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3826  001C38  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3827  001C3C  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3828  001C40  6A24               	clrf	___flmul@grs^0,c
  3829  001C42  501B               	movf	___flmul@a^0,w,c
  3830  001C44  0218               	mulwf	(___flmul@b+1)^0,c
  3831  001C46  CFF3 F02E          	movff	prodl,___flmul@temp
  3832  001C4A  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3833  001C4E  502E               	movf	___flmul@temp^0,w,c
  3834  001C50  2624               	addwf	___flmul@grs^0,f,c
  3835  001C52  502F               	movf	(___flmul@temp+1)^0,w,c
  3836  001C54  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3837  001C56  0E00               	movlw	0
  3838  001C58  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3839  001C5A  0E00               	movlw	0
  3840  001C5C  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3841  001C5E  501C               	movf	(___flmul@a+1)^0,w,c
  3842  001C60  0217               	mulwf	___flmul@b^0,c
  3843  001C62  CFF3 F02E          	movff	prodl,___flmul@temp
  3844  001C66  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3845  001C6A  502E               	movf	___flmul@temp^0,w,c
  3846  001C6C  2624               	addwf	___flmul@grs^0,f,c
  3847  001C6E  502F               	movf	(___flmul@temp+1)^0,w,c
  3848  001C70  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3849  001C72  0E00               	movlw	0
  3850  001C74  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3851  001C76  0E00               	movlw	0
  3852  001C78  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3853  001C7A  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3854  001C7E  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3855  001C82  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3856  001C86  6A24               	clrf	___flmul@grs^0,c
  3857  001C88  501B               	movf	___flmul@a^0,w,c
  3858  001C8A  0217               	mulwf	___flmul@b^0,c
  3859  001C8C  CFF3 F02E          	movff	prodl,___flmul@temp
  3860  001C90  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3861  001C94  502E               	movf	___flmul@temp^0,w,c
  3862  001C96  2624               	addwf	___flmul@grs^0,f,c
  3863  001C98  502F               	movf	(___flmul@temp+1)^0,w,c
  3864  001C9A  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3865  001C9C  0E00               	movlw	0
  3866  001C9E  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3867  001CA0  0E00               	movlw	0
  3868  001CA2  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3869  001CA4  501D               	movf	(___flmul@a+2)^0,w,c
  3870  001CA6  0218               	mulwf	(___flmul@b+1)^0,c
  3871  001CA8  CFF3 F02E          	movff	prodl,___flmul@temp
  3872  001CAC  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3873  001CB0  502E               	movf	___flmul@temp^0,w,c
  3874  001CB2  262A               	addwf	___flmul@prod^0,f,c
  3875  001CB4  502F               	movf	(___flmul@temp+1)^0,w,c
  3876  001CB6  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3877  001CB8  0E00               	movlw	0
  3878  001CBA  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3879  001CBC  0E00               	movlw	0
  3880  001CBE  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3881  001CC0  501C               	movf	(___flmul@a+1)^0,w,c
  3882  001CC2  0219               	mulwf	(___flmul@b+2)^0,c
  3883  001CC4  CFF3 F02E          	movff	prodl,___flmul@temp
  3884  001CC8  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3885  001CCC  502E               	movf	___flmul@temp^0,w,c
  3886  001CCE  262A               	addwf	___flmul@prod^0,f,c
  3887  001CD0  502F               	movf	(___flmul@temp+1)^0,w,c
  3888  001CD2  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3889  001CD4  0E00               	movlw	0
  3890  001CD6  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3891  001CD8  0E00               	movlw	0
  3892  001CDA  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3893  001CDC  501D               	movf	(___flmul@a+2)^0,w,c
  3894  001CDE  0219               	mulwf	(___flmul@b+2)^0,c
  3895  001CE0  CFF3 F02E          	movff	prodl,___flmul@temp
  3896  001CE4  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3897  001CE8  502E               	movf	___flmul@temp^0,w,c
  3898  001CEA  6E1F               	movwf	??___flmul^0,c
  3899  001CEC  502F               	movf	(___flmul@temp+1)^0,w,c
  3900  001CEE  6E20               	movwf	(??___flmul+1)^0,c
  3901  001CF0  6A21               	clrf	(??___flmul+2)^0,c
  3902  001CF2  6A22               	clrf	(??___flmul+3)^0,c
  3903  001CF4  C021  F022         	movff	??___flmul+2,??___flmul+3
  3904  001CF8  C020  F021         	movff	??___flmul+1,??___flmul+2
  3905  001CFC  C01F  F020         	movff	??___flmul,??___flmul+1
  3906  001D00  6A1F               	clrf	??___flmul^0,c
  3907  001D02  501F               	movf	??___flmul^0,w,c
  3908  001D04  262A               	addwf	___flmul@prod^0,f,c
  3909  001D06  5020               	movf	(??___flmul+1)^0,w,c
  3910  001D08  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3911  001D0A  5021               	movf	(??___flmul+2)^0,w,c
  3912  001D0C  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3913  001D0E  5022               	movf	(??___flmul+3)^0,w,c
  3914  001D10  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3915  001D12  C024  F01F         	movff	___flmul@grs,??___flmul
  3916  001D16  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  3917  001D1A  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  3918  001D1E  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  3919  001D22  0E19               	movlw	25
  3920  001D24  EF99  F00E         	goto	u3450
  3921  001D28                     u3455:
  3922  001D28  90D8               	bcf	status,0,c
  3923  001D2A  3222               	rrcf	(??___flmul+3)^0,f,c
  3924  001D2C  3221               	rrcf	(??___flmul+2)^0,f,c
  3925  001D2E  3220               	rrcf	(??___flmul+1)^0,f,c
  3926  001D30  321F               	rrcf	??___flmul^0,f,c
  3927  001D32                     u3450:
  3928  001D32  2EE8               	decfsz	wreg,f,c
  3929  001D34  EF94  F00E         	goto	u3455
  3930  001D38  501F               	movf	??___flmul^0,w,c
  3931  001D3A  262A               	addwf	___flmul@prod^0,f,c
  3932  001D3C  5020               	movf	(??___flmul+1)^0,w,c
  3933  001D3E  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3934  001D40  5021               	movf	(??___flmul+2)^0,w,c
  3935  001D42  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3936  001D44  5022               	movf	(??___flmul+3)^0,w,c
  3937  001D46  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3938  001D48  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3939  001D4C  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3940  001D50  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3941  001D54  6A24               	clrf	___flmul@grs^0,c
  3942  001D56  5028               	movf	___flmul@aexp^0,w,c
  3943  001D58  C029  F01F         	movff	___flmul@bexp,??___flmul
  3944  001D5C  6A20               	clrf	(??___flmul+1)^0,c
  3945  001D5E  261F               	addwf	??___flmul^0,f,c
  3946  001D60  0E00               	movlw	0
  3947  001D62  2220               	addwfc	(??___flmul+1)^0,f,c
  3948  001D64  0E82               	movlw	130
  3949  001D66  241F               	addwf	??___flmul^0,w,c
  3950  001D68  6E2E               	movwf	___flmul@temp^0,c
  3951  001D6A  0EFF               	movlw	255
  3952  001D6C  2020               	addwfc	(??___flmul+1)^0,w,c
  3953  001D6E  6E2F               	movwf	(___flmul@temp+1)^0,c
  3954  001D70  EFCF  F00E         	goto	l3637
  3955  001D74                     l3631:
  3956  001D74  90D8               	bcf	status,0,c
  3957  001D76  362A               	rlcf	___flmul@prod^0,f,c
  3958  001D78  362B               	rlcf	(___flmul@prod+1)^0,f,c
  3959  001D7A  362C               	rlcf	(___flmul@prod+2)^0,f,c
  3960  001D7C  362D               	rlcf	(___flmul@prod+3)^0,f,c
  3961  001D7E  AE27               	btfss	(___flmul@grs+3)^0,7,c
  3962  001D80  EFC4  F00E         	goto	u3461
  3963  001D84  EFC6  F00E         	goto	u3460
  3964  001D88                     u3461:
  3965  001D88  EFC7  F00E         	goto	l1384
  3966  001D8C                     u3460:
  3967  001D8C  802A               	bsf	___flmul@prod^0,0,c
  3968  001D8E                     l1384:
  3969  001D8E  90D8               	bcf	status,0,c
  3970  001D90  3624               	rlcf	___flmul@grs^0,f,c
  3971  001D92  3625               	rlcf	(___flmul@grs+1)^0,f,c
  3972  001D94  3626               	rlcf	(___flmul@grs+2)^0,f,c
  3973  001D96  3627               	rlcf	(___flmul@grs+3)^0,f,c
  3974  001D98  062E               	decf	___flmul@temp^0,f,c
  3975  001D9A  A0D8               	btfss	status,0,c
  3976  001D9C  062F               	decf	(___flmul@temp+1)^0,f,c
  3977  001D9E                     l3637:
  3978  001D9E  AE2C               	btfss	(___flmul@prod+2)^0,7,c
  3979  001DA0  EFD4  F00E         	goto	u3471
  3980  001DA4  EFD6  F00E         	goto	u3470
  3981  001DA8                     u3471:
  3982  001DA8  EFBA  F00E         	goto	l3631
  3983  001DAC                     u3470:
  3984  001DAC  0E00               	movlw	0
  3985  001DAE  6E28               	movwf	___flmul@aexp^0,c
  3986  001DB0  AE27               	btfss	(___flmul@grs+3)^0,7,c
  3987  001DB2  EFDD  F00E         	goto	u3481
  3988  001DB6  EFDF  F00E         	goto	u3480
  3989  001DBA                     u3481:
  3990  001DBA  EF03  F00F         	goto	l1386
  3991  001DBE                     u3480:
  3992  001DBE  0EFF               	movlw	255
  3993  001DC0  1424               	andwf	___flmul@grs^0,w,c
  3994  001DC2  6E1F               	movwf	??___flmul^0,c
  3995  001DC4  0EFF               	movlw	255
  3996  001DC6  1425               	andwf	(___flmul@grs+1)^0,w,c
  3997  001DC8  6E20               	movwf	(??___flmul+1)^0,c
  3998  001DCA  0EFF               	movlw	255
  3999  001DCC  1426               	andwf	(___flmul@grs+2)^0,w,c
  4000  001DCE  6E21               	movwf	(??___flmul+2)^0,c
  4001  001DD0  0E7F               	movlw	127
  4002  001DD2  1427               	andwf	(___flmul@grs+3)^0,w,c
  4003  001DD4  6E22               	movwf	(??___flmul+3)^0,c
  4004  001DD6  501F               	movf	??___flmul^0,w,c
  4005  001DD8  1020               	iorwf	(??___flmul+1)^0,w,c
  4006  001DDA  1021               	iorwf	(??___flmul+2)^0,w,c
  4007  001DDC  1022               	iorwf	(??___flmul+3)^0,w,c
  4008  001DDE  B4D8               	btfsc	status,2,c
  4009  001DE0  EFF4  F00E         	goto	u3491
  4010  001DE4  EFF6  F00E         	goto	u3490
  4011  001DE8                     u3491:
  4012  001DE8  EFFA  F00E         	goto	l1387
  4013  001DEC                     u3490:
  4014  001DEC                     l3645:
  4015  001DEC  0E01               	movlw	1
  4016  001DEE  6E28               	movwf	___flmul@aexp^0,c
  4017  001DF0  EF03  F00F         	goto	l1386
  4018  001DF4                     l1387:
  4019  001DF4  A02A               	btfss	___flmul@prod^0,0,c
  4020  001DF6  EFFF  F00E         	goto	u3501
  4021  001DFA  EF01  F00F         	goto	u3500
  4022  001DFE                     u3501:
  4023  001DFE  EF03  F00F         	goto	l1386
  4024  001E02                     u3500:
  4025  001E02  EFF6  F00E         	goto	l3645
  4026  001E06                     l1386:
  4027  001E06  5028               	movf	___flmul@aexp^0,w,c
  4028  001E08  B4D8               	btfsc	status,2,c
  4029  001E0A  EF09  F00F         	goto	u3511
  4030  001E0E  EF0B  F00F         	goto	u3510
  4031  001E12                     u3511:
  4032  001E12  EF2F  F00F         	goto	l3657
  4033  001E16                     u3510:
  4034  001E16  0E01               	movlw	1
  4035  001E18  262A               	addwf	___flmul@prod^0,f,c
  4036  001E1A  0E00               	movlw	0
  4037  001E1C  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4038  001E1E  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4039  001E20  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4040  001E22  A02D               	btfss	(___flmul@prod+3)^0,0,c
  4041  001E24  EF16  F00F         	goto	u3521
  4042  001E28  EF18  F00F         	goto	u3520
  4043  001E2C                     u3521:
  4044  001E2C  EF2F  F00F         	goto	l3657
  4045  001E30                     u3520:
  4046  001E30  C02A  F01F         	movff	___flmul@prod,??___flmul
  4047  001E34  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  4048  001E38  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  4049  001E3C  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  4050  001E40  3422               	rlcf	(??___flmul+3)^0,w,c
  4051  001E42  3222               	rrcf	(??___flmul+3)^0,f,c
  4052  001E44  3221               	rrcf	(??___flmul+2)^0,f,c
  4053  001E46  3220               	rrcf	(??___flmul+1)^0,f,c
  4054  001E48  321F               	rrcf	??___flmul^0,f,c
  4055  001E4A  C01F  F02A         	movff	??___flmul,___flmul@prod
  4056  001E4E  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  4057  001E52  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  4058  001E56  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  4059  001E5A  4A2E               	infsnz	___flmul@temp^0,f,c
  4060  001E5C  2A2F               	incf	(___flmul@temp+1)^0,f,c
  4061  001E5E                     l3657:
  4062  001E5E  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  4063  001E60  EF3A  F00F         	goto	u3531
  4064  001E64  502F               	movf	(___flmul@temp+1)^0,w,c
  4065  001E66  E108               	bnz	u3530
  4066  001E68  282E               	incf	___flmul@temp^0,w,c
  4067  001E6A  A0D8               	btfss	status,0,c
  4068  001E6C  EF3A  F00F         	goto	u3531
  4069  001E70  EF3C  F00F         	goto	u3530
  4070  001E74                     u3531:
  4071  001E74  EF46  F00F         	goto	l3661
  4072  001E78                     u3530:
  4073  001E78  0E00               	movlw	0
  4074  001E7A  6E2A               	movwf	___flmul@prod^0,c
  4075  001E7C  0E00               	movlw	0
  4076  001E7E  6E2B               	movwf	(___flmul@prod+1)^0,c
  4077  001E80  0E80               	movlw	128
  4078  001E82  6E2C               	movwf	(___flmul@prod+2)^0,c
  4079  001E84  0E7F               	movlw	127
  4080  001E86  6E2D               	movwf	(___flmul@prod+3)^0,c
  4081  001E88  EF74  F00F         	goto	l3673
  4082  001E8C                     l3661:
  4083  001E8C  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  4084  001E8E  EF53  F00F         	goto	u3540
  4085  001E92  502F               	movf	(___flmul@temp+1)^0,w,c
  4086  001E94  E106               	bnz	u3541
  4087  001E96  042E               	decf	___flmul@temp^0,w,c
  4088  001E98  B0D8               	btfsc	status,0,c
  4089  001E9A  EF51  F00F         	goto	u3541
  4090  001E9E  EF53  F00F         	goto	u3540
  4091  001EA2                     u3541:
  4092  001EA2  EF5F  F00F         	goto	l1394
  4093  001EA6                     u3540:
  4094  001EA6  0E00               	movlw	0
  4095  001EA8  6E2A               	movwf	___flmul@prod^0,c
  4096  001EAA  0E00               	movlw	0
  4097  001EAC  6E2B               	movwf	(___flmul@prod+1)^0,c
  4098  001EAE  0E00               	movlw	0
  4099  001EB0  6E2C               	movwf	(___flmul@prod+2)^0,c
  4100  001EB2  0E00               	movlw	0
  4101  001EB4  6E2D               	movwf	(___flmul@prod+3)^0,c
  4102  001EB6  0E00               	movlw	0
  4103  001EB8  6E23               	movwf	___flmul@sign^0,c
  4104  001EBA  EF74  F00F         	goto	l3673
  4105  001EBE                     l1394:
  4106  001EBE  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  4107  001EC2  0EFF               	movlw	255
  4108  001EC4  162A               	andwf	___flmul@prod^0,f,c
  4109  001EC6  0EFF               	movlw	255
  4110  001EC8  162B               	andwf	(___flmul@prod+1)^0,f,c
  4111  001ECA  0E7F               	movlw	127
  4112  001ECC  162C               	andwf	(___flmul@prod+2)^0,f,c
  4113  001ECE  0E00               	movlw	0
  4114  001ED0  162D               	andwf	(___flmul@prod+3)^0,f,c
  4115  001ED2  A029               	btfss	___flmul@bexp^0,0,c
  4116  001ED4  EF6E  F00F         	goto	u3551
  4117  001ED8  EF70  F00F         	goto	u3550
  4118  001EDC                     u3551:
  4119  001EDC  EF71  F00F         	goto	l3671
  4120  001EE0                     u3550:
  4121  001EE0  8E2C               	bsf	(___flmul@prod+2)^0,7,c
  4122  001EE2                     l3671:
  4123  001EE2  90D8               	bcf	status,0,c
  4124  001EE4  3029               	rrcf	___flmul@bexp^0,w,c
  4125  001EE6  6E2D               	movwf	(___flmul@prod+3)^0,c
  4126  001EE8                     l3673:
  4127  001EE8  5023               	movf	___flmul@sign^0,w,c
  4128  001EEA  122D               	iorwf	(___flmul@prod+3)^0,f,c
  4129  001EEC  C02A  F017         	movff	___flmul@prod,?___flmul
  4130  001EF0  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  4131  001EF4  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  4132  001EF8  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  4133  001EFC                     l1381:
  4134  001EFC  0012               	return		;funcret
  4135  001EFE                     __end_of___flmul:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function ___flge *****************
  4139 ;; Defined at:
  4140 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  ff1             4   22[COMRAM] unsigned char 
  4143 ;;  ff2             4   26[COMRAM] unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4155 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;Total ram usage:       12 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 7
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_colourcards_readRGBC
  4166 ;;		_left
  4167 ;;		_right
  4168 ;;		_colourcards_testingRGBC2
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text16
  4173  002F40                     __ptext16:
  4174                           	callstack 0
  4175  002F40                     ___flge:
  4176                           	callstack 19
  4177  002F40  0E00               	movlw	0
  4178  002F42  1417               	andwf	___flge@ff1^0,w,c
  4179  002F44  6E1F               	movwf	??___flge^0,c
  4180  002F46  0E00               	movlw	0
  4181  002F48  1418               	andwf	(___flge@ff1+1)^0,w,c
  4182  002F4A  6E20               	movwf	(??___flge+1)^0,c
  4183  002F4C  0E80               	movlw	128
  4184  002F4E  1419               	andwf	(___flge@ff1+2)^0,w,c
  4185  002F50  6E21               	movwf	(??___flge+2)^0,c
  4186  002F52  0E7F               	movlw	127
  4187  002F54  141A               	andwf	(___flge@ff1+3)^0,w,c
  4188  002F56  6E22               	movwf	(??___flge+3)^0,c
  4189  002F58  501F               	movf	??___flge^0,w,c
  4190  002F5A  1020               	iorwf	(??___flge+1)^0,w,c
  4191  002F5C  1021               	iorwf	(??___flge+2)^0,w,c
  4192  002F5E  1022               	iorwf	(??___flge+3)^0,w,c
  4193  002F60  A4D8               	btfss	status,2,c
  4194  002F62  EFB5  F017         	goto	u3561
  4195  002F66  EFB7  F017         	goto	u3560
  4196  002F6A                     u3561:
  4197  002F6A  EFBF  F017         	goto	l3683
  4198  002F6E                     u3560:
  4199  002F6E  0E00               	movlw	0
  4200  002F70  6E17               	movwf	___flge@ff1^0,c
  4201  002F72  0E00               	movlw	0
  4202  002F74  6E18               	movwf	(___flge@ff1+1)^0,c
  4203  002F76  0E00               	movlw	0
  4204  002F78  6E19               	movwf	(___flge@ff1+2)^0,c
  4205  002F7A  0E00               	movlw	0
  4206  002F7C  6E1A               	movwf	(___flge@ff1+3)^0,c
  4207  002F7E                     l3683:
  4208  002F7E  0E00               	movlw	0
  4209  002F80  141B               	andwf	___flge@ff2^0,w,c
  4210  002F82  6E1F               	movwf	??___flge^0,c
  4211  002F84  0E00               	movlw	0
  4212  002F86  141C               	andwf	(___flge@ff2+1)^0,w,c
  4213  002F88  6E20               	movwf	(??___flge+1)^0,c
  4214  002F8A  0E80               	movlw	128
  4215  002F8C  141D               	andwf	(___flge@ff2+2)^0,w,c
  4216  002F8E  6E21               	movwf	(??___flge+2)^0,c
  4217  002F90  0E7F               	movlw	127
  4218  002F92  141E               	andwf	(___flge@ff2+3)^0,w,c
  4219  002F94  6E22               	movwf	(??___flge+3)^0,c
  4220  002F96  501F               	movf	??___flge^0,w,c
  4221  002F98  1020               	iorwf	(??___flge+1)^0,w,c
  4222  002F9A  1021               	iorwf	(??___flge+2)^0,w,c
  4223  002F9C  1022               	iorwf	(??___flge+3)^0,w,c
  4224  002F9E  A4D8               	btfss	status,2,c
  4225  002FA0  EFD4  F017         	goto	u3571
  4226  002FA4  EFD6  F017         	goto	u3570
  4227  002FA8                     u3571:
  4228  002FA8  EFDE  F017         	goto	l3687
  4229  002FAC                     u3570:
  4230  002FAC  0E00               	movlw	0
  4231  002FAE  6E1B               	movwf	___flge@ff2^0,c
  4232  002FB0  0E00               	movlw	0
  4233  002FB2  6E1C               	movwf	(___flge@ff2+1)^0,c
  4234  002FB4  0E00               	movlw	0
  4235  002FB6  6E1D               	movwf	(___flge@ff2+2)^0,c
  4236  002FB8  0E00               	movlw	0
  4237  002FBA  6E1E               	movwf	(___flge@ff2+3)^0,c
  4238  002FBC                     l3687:
  4239  002FBC  AE1A               	btfss	(___flge@ff1+3)^0,7,c
  4240  002FBE  EFE3  F017         	goto	u3581
  4241  002FC2  EFE5  F017         	goto	u3580
  4242  002FC6                     u3581:
  4243  002FC6  EFEE  F017         	goto	l3691
  4244  002FCA                     u3580:
  4245  002FCA  6C17               	negf	___flge@ff1^0,c
  4246  002FCC  1E18               	comf	(___flge@ff1+1)^0,f,c
  4247  002FCE  B0D8               	btfsc	status,0,c
  4248  002FD0  2A18               	incf	(___flge@ff1+1)^0,f,c
  4249  002FD2  1E19               	comf	(___flge@ff1+2)^0,f,c
  4250  002FD4  B0D8               	btfsc	status,0,c
  4251  002FD6  2A19               	incf	(___flge@ff1+2)^0,f,c
  4252  002FD8  0E80               	movlw	128
  4253  002FDA  561A               	subfwb	(___flge@ff1+3)^0,f,c
  4254  002FDC                     l3691:
  4255  002FDC  AE1E               	btfss	(___flge@ff2+3)^0,7,c
  4256  002FDE  EFF3  F017         	goto	u3591
  4257  002FE2  EFF5  F017         	goto	u3590
  4258  002FE6                     u3591:
  4259  002FE6  EFFE  F017         	goto	l1028
  4260  002FEA                     u3590:
  4261  002FEA  6C1B               	negf	___flge@ff2^0,c
  4262  002FEC  1E1C               	comf	(___flge@ff2+1)^0,f,c
  4263  002FEE  B0D8               	btfsc	status,0,c
  4264  002FF0  2A1C               	incf	(___flge@ff2+1)^0,f,c
  4265  002FF2  1E1D               	comf	(___flge@ff2+2)^0,f,c
  4266  002FF4  B0D8               	btfsc	status,0,c
  4267  002FF6  2A1D               	incf	(___flge@ff2+2)^0,f,c
  4268  002FF8  0E80               	movlw	128
  4269  002FFA  561E               	subfwb	(___flge@ff2+3)^0,f,c
  4270  002FFC                     l1028:
  4271  002FFC  0E00               	movlw	0
  4272  002FFE  1A17               	xorwf	___flge@ff1^0,f,c
  4273  003000  0E00               	movlw	0
  4274  003002  1A18               	xorwf	(___flge@ff1+1)^0,f,c
  4275  003004  0E00               	movlw	0
  4276  003006  1A19               	xorwf	(___flge@ff1+2)^0,f,c
  4277  003008  0E80               	movlw	128
  4278  00300A  1A1A               	xorwf	(___flge@ff1+3)^0,f,c
  4279  00300C  0E00               	movlw	0
  4280  00300E  1A1B               	xorwf	___flge@ff2^0,f,c
  4281  003010  0E00               	movlw	0
  4282  003012  1A1C               	xorwf	(___flge@ff2+1)^0,f,c
  4283  003014  0E00               	movlw	0
  4284  003016  1A1D               	xorwf	(___flge@ff2+2)^0,f,c
  4285  003018  0E80               	movlw	128
  4286  00301A  1A1E               	xorwf	(___flge@ff2+3)^0,f,c
  4287  00301C  501B               	movf	___flge@ff2^0,w,c
  4288  00301E  5C17               	subwf	___flge@ff1^0,w,c
  4289  003020  501C               	movf	(___flge@ff2+1)^0,w,c
  4290  003022  5818               	subwfb	(___flge@ff1+1)^0,w,c
  4291  003024  501D               	movf	(___flge@ff2+2)^0,w,c
  4292  003026  5819               	subwfb	(___flge@ff1+2)^0,w,c
  4293  003028  501E               	movf	(___flge@ff2+3)^0,w,c
  4294  00302A  581A               	subwfb	(___flge@ff1+3)^0,w,c
  4295  00302C  B0D8               	btfsc	status,0,c
  4296  00302E  EF1B  F018         	goto	u3601
  4297  003032  EF1D  F018         	goto	u3600
  4298  003036                     u3601:
  4299  003036  EF20  F018         	goto	l3697
  4300  00303A                     u3600:
  4301  00303A  90D8               	bcf	status,0,c
  4302  00303C  EF21  F018         	goto	l1033
  4303  003040                     l3697:
  4304  003040  80D8               	bsf	status,0,c
  4305  003042                     l1033:
  4306  003042  0012               	return		;funcret
  4307  003044                     __end_of___flge:
  4308                           	callstack 0
  4309                           
  4310 ;; *************** function ___fladd *****************
  4311 ;; Defined at:
  4312 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  b               4   47[COMRAM] unsigned char 
  4315 ;;  a               4   51[COMRAM] unsigned char 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  grs             1   62[COMRAM] unsigned char 
  4318 ;;  bexp            1   61[COMRAM] unsigned char 
  4319 ;;  aexp            1   60[COMRAM] unsigned char 
  4320 ;;  signs           1   59[COMRAM] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  4   47[COMRAM] unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4330 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;Total ram usage:       16 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 7
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_left
  4341 ;;		_right
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text17
  4346  001614                     __ptext17:
  4347                           	callstack 0
  4348  001614                     ___fladd:
  4349                           	callstack 19
  4350  001614  5033               	movf	(___fladd@b+3)^0,w,c
  4351  001616  0B80               	andlw	128
  4352  001618  6E3C               	movwf	___fladd@signs^0,c
  4353  00161A  5033               	movf	(___fladd@b+3)^0,w,c
  4354  00161C  2433               	addwf	(___fladd@b+3)^0,w,c
  4355  00161E  6E3E               	movwf	___fladd@bexp^0,c
  4356  001620  AE32               	btfss	(___fladd@b+2)^0,7,c
  4357  001622  EF15  F00B         	goto	u2751
  4358  001626  EF17  F00B         	goto	u2750
  4359  00162A                     u2751:
  4360  00162A  EF18  F00B         	goto	l3215
  4361  00162E                     u2750:
  4362  00162E  803E               	bsf	___fladd@bexp^0,0,c
  4363  001630                     l3215:
  4364  001630  503E               	movf	___fladd@bexp^0,w,c
  4365  001632  B4D8               	btfsc	status,2,c
  4366  001634  EF1E  F00B         	goto	u2761
  4367  001638  EF20  F00B         	goto	u2760
  4368  00163C                     u2761:
  4369  00163C  EF35  F00B         	goto	l3225
  4370  001640                     u2760:
  4371  001640  283E               	incf	___fladd@bexp^0,w,c
  4372  001642  A4D8               	btfss	status,2,c
  4373  001644  EF26  F00B         	goto	u2771
  4374  001648  EF28  F00B         	goto	u2770
  4375  00164C                     u2771:
  4376  00164C  EF30  F00B         	goto	l3221
  4377  001650                     u2770:
  4378  001650  0E00               	movlw	0
  4379  001652  6E30               	movwf	___fladd@b^0,c
  4380  001654  0E00               	movlw	0
  4381  001656  6E31               	movwf	(___fladd@b+1)^0,c
  4382  001658  0E00               	movlw	0
  4383  00165A  6E32               	movwf	(___fladd@b+2)^0,c
  4384  00165C  0E00               	movlw	0
  4385  00165E  6E33               	movwf	(___fladd@b+3)^0,c
  4386  001660                     l3221:
  4387  001660  8E32               	bsf	(___fladd@b+2)^0,7,c
  4388  001662  0E00               	movlw	0
  4389  001664  6E33               	movwf	(___fladd@b+3)^0,c
  4390  001666  EF3D  F00B         	goto	l3227
  4391  00166A                     l3225:
  4392  00166A  0E00               	movlw	0
  4393  00166C  6E30               	movwf	___fladd@b^0,c
  4394  00166E  0E00               	movlw	0
  4395  001670  6E31               	movwf	(___fladd@b+1)^0,c
  4396  001672  0E00               	movlw	0
  4397  001674  6E32               	movwf	(___fladd@b+2)^0,c
  4398  001676  0E00               	movlw	0
  4399  001678  6E33               	movwf	(___fladd@b+3)^0,c
  4400  00167A                     l3227:
  4401  00167A  5037               	movf	(___fladd@a+3)^0,w,c
  4402  00167C  0B80               	andlw	128
  4403  00167E  6E3D               	movwf	___fladd@aexp^0,c
  4404  001680  503C               	movf	___fladd@signs^0,w,c
  4405  001682  183D               	xorwf	___fladd@aexp^0,w,c
  4406  001684  B4D8               	btfsc	status,2,c
  4407  001686  EF47  F00B         	goto	u2781
  4408  00168A  EF49  F00B         	goto	u2780
  4409  00168E                     u2781:
  4410  00168E  EF4A  F00B         	goto	l3233
  4411  001692                     u2780:
  4412  001692  8C3C               	bsf	___fladd@signs^0,6,c
  4413  001694                     l3233:
  4414  001694  5037               	movf	(___fladd@a+3)^0,w,c
  4415  001696  2437               	addwf	(___fladd@a+3)^0,w,c
  4416  001698  6E3D               	movwf	___fladd@aexp^0,c
  4417  00169A  AE36               	btfss	(___fladd@a+2)^0,7,c
  4418  00169C  EF52  F00B         	goto	u2791
  4419  0016A0  EF54  F00B         	goto	u2790
  4420  0016A4                     u2791:
  4421  0016A4  EF55  F00B         	goto	l3239
  4422  0016A8                     u2790:
  4423  0016A8  803D               	bsf	___fladd@aexp^0,0,c
  4424  0016AA                     l3239:
  4425  0016AA  503D               	movf	___fladd@aexp^0,w,c
  4426  0016AC  B4D8               	btfsc	status,2,c
  4427  0016AE  EF5B  F00B         	goto	u2801
  4428  0016B2  EF5D  F00B         	goto	u2800
  4429  0016B6                     u2801:
  4430  0016B6  EF72  F00B         	goto	l3249
  4431  0016BA                     u2800:
  4432  0016BA  283D               	incf	___fladd@aexp^0,w,c
  4433  0016BC  A4D8               	btfss	status,2,c
  4434  0016BE  EF63  F00B         	goto	u2811
  4435  0016C2  EF65  F00B         	goto	u2810
  4436  0016C6                     u2811:
  4437  0016C6  EF6D  F00B         	goto	l3245
  4438  0016CA                     u2810:
  4439  0016CA  0E00               	movlw	0
  4440  0016CC  6E34               	movwf	___fladd@a^0,c
  4441  0016CE  0E00               	movlw	0
  4442  0016D0  6E35               	movwf	(___fladd@a+1)^0,c
  4443  0016D2  0E00               	movlw	0
  4444  0016D4  6E36               	movwf	(___fladd@a+2)^0,c
  4445  0016D6  0E00               	movlw	0
  4446  0016D8  6E37               	movwf	(___fladd@a+3)^0,c
  4447  0016DA                     l3245:
  4448  0016DA  8E36               	bsf	(___fladd@a+2)^0,7,c
  4449  0016DC  0E00               	movlw	0
  4450  0016DE  6E37               	movwf	(___fladd@a+3)^0,c
  4451  0016E0  EF7A  F00B         	goto	l3251
  4452  0016E4                     l3249:
  4453  0016E4  0E00               	movlw	0
  4454  0016E6  6E34               	movwf	___fladd@a^0,c
  4455  0016E8  0E00               	movlw	0
  4456  0016EA  6E35               	movwf	(___fladd@a+1)^0,c
  4457  0016EC  0E00               	movlw	0
  4458  0016EE  6E36               	movwf	(___fladd@a+2)^0,c
  4459  0016F0  0E00               	movlw	0
  4460  0016F2  6E37               	movwf	(___fladd@a+3)^0,c
  4461  0016F4                     l3251:
  4462  0016F4  503E               	movf	___fladd@bexp^0,w,c
  4463  0016F6  5C3D               	subwf	___fladd@aexp^0,w,c
  4464  0016F8  B0D8               	btfsc	status,0,c
  4465  0016FA  EF81  F00B         	goto	u2821
  4466  0016FE  EF83  F00B         	goto	u2820
  4467  001702                     u2821:
  4468  001702  EFAA  F00B         	goto	l3287
  4469  001706                     u2820:
  4470  001706  AC3C               	btfss	___fladd@signs^0,6,c
  4471  001708  EF88  F00B         	goto	u2831
  4472  00170C  EF8A  F00B         	goto	u2830
  4473  001710                     u2831:
  4474  001710  EF8C  F00B         	goto	l3257
  4475  001714                     u2830:
  4476  001714  0E80               	movlw	128
  4477  001716  1A3C               	xorwf	___fladd@signs^0,f,c
  4478  001718                     l3257:
  4479  001718  C03E  F03F         	movff	___fladd@bexp,___fladd@grs
  4480  00171C  C03D  F03E         	movff	___fladd@aexp,___fladd@bexp
  4481  001720  C03F  F03D         	movff	___fladd@grs,___fladd@aexp
  4482  001724  C030  F03F         	movff	___fladd@b,___fladd@grs
  4483  001728  C034  F030         	movff	___fladd@a,___fladd@b
  4484  00172C  C03F  F034         	movff	___fladd@grs,___fladd@a
  4485  001730  C031  F03F         	movff	___fladd@b+1,___fladd@grs
  4486  001734  C035  F031         	movff	___fladd@a+1,___fladd@b+1
  4487  001738  C03F  F035         	movff	___fladd@grs,___fladd@a+1
  4488  00173C  C032  F03F         	movff	___fladd@b+2,___fladd@grs
  4489  001740  C036  F032         	movff	___fladd@a+2,___fladd@b+2
  4490  001744  C03F  F036         	movff	___fladd@grs,___fladd@a+2
  4491  001748  C033  F03F         	movff	___fladd@b+3,___fladd@grs
  4492  00174C  C037  F033         	movff	___fladd@a+3,___fladd@b+3
  4493  001750  C03F  F037         	movff	___fladd@grs,___fladd@a+3
  4494  001754                     l3287:
  4495  001754  0E00               	movlw	0
  4496  001756  6E3F               	movwf	___fladd@grs^0,c
  4497  001758  503E               	movf	___fladd@bexp^0,w,c
  4498  00175A  C03D  F038         	movff	___fladd@aexp,??___fladd
  4499  00175E  6A39               	clrf	(??___fladd+1)^0,c
  4500  001760  5E38               	subwf	??___fladd^0,f,c
  4501  001762  0E00               	movlw	0
  4502  001764  5A39               	subwfb	(??___fladd+1)^0,f,c
  4503  001766  BE39               	btfsc	(??___fladd+1)^0,7,c
  4504  001768  EFBF  F00B         	goto	u2841
  4505  00176C  5039               	movf	(??___fladd+1)^0,w,c
  4506  00176E  E109               	bnz	u2840
  4507  001770  0E1A               	movlw	26
  4508  001772  5C38               	subwf	??___fladd^0,w,c
  4509  001774  A0D8               	btfss	status,0,c
  4510  001776  EFBF  F00B         	goto	u2841
  4511  00177A  EFC1  F00B         	goto	u2840
  4512  00177E                     u2841:
  4513  00177E  EFF8  F00B         	goto	l1292
  4514  001782                     u2840:
  4515  001782  5030               	movf	___fladd@b^0,w,c
  4516  001784  1031               	iorwf	(___fladd@b+1)^0,w,c
  4517  001786  1032               	iorwf	(___fladd@b+2)^0,w,c
  4518  001788  1033               	iorwf	(___fladd@b+3)^0,w,c
  4519  00178A  A4D8               	btfss	status,2,c
  4520  00178C  EFCA  F00B         	goto	u2851
  4521  001790  EFCD  F00B         	goto	u2850
  4522  001794                     u2851:
  4523  001794  0E01               	movlw	1
  4524  001796  EFCE  F00B         	goto	u2860
  4525  00179A                     u2850:
  4526  00179A  0E00               	movlw	0
  4527  00179C                     u2860:
  4528  00179C  6E3F               	movwf	___fladd@grs^0,c
  4529  00179E  0E00               	movlw	0
  4530  0017A0  6E30               	movwf	___fladd@b^0,c
  4531  0017A2  0E00               	movlw	0
  4532  0017A4  6E31               	movwf	(___fladd@b+1)^0,c
  4533  0017A6  0E00               	movlw	0
  4534  0017A8  6E32               	movwf	(___fladd@b+2)^0,c
  4535  0017AA  0E00               	movlw	0
  4536  0017AC  6E33               	movwf	(___fladd@b+3)^0,c
  4537  0017AE  C03D  F03E         	movff	___fladd@aexp,___fladd@bexp
  4538  0017B2  EF01  F00C         	goto	l1291
  4539  0017B6                     l1293:
  4540  0017B6  A03F               	btfss	___fladd@grs^0,0,c
  4541  0017B8  EFE0  F00B         	goto	u2871
  4542  0017BC  EFE2  F00B         	goto	u2870
  4543  0017C0                     u2871:
  4544  0017C0  EFE8  F00B         	goto	l3299
  4545  0017C4                     u2870:
  4546  0017C4  90D8               	bcf	status,0,c
  4547  0017C6  303F               	rrcf	___fladd@grs^0,w,c
  4548  0017C8  0901               	iorlw	1
  4549  0017CA  6E3F               	movwf	___fladd@grs^0,c
  4550  0017CC  EFEA  F00B         	goto	l3301
  4551  0017D0                     l3299:
  4552  0017D0  90D8               	bcf	status,0,c
  4553  0017D2  323F               	rrcf	___fladd@grs^0,f,c
  4554  0017D4                     l3301:
  4555  0017D4  A030               	btfss	___fladd@b^0,0,c
  4556  0017D6  EFEF  F00B         	goto	u2881
  4557  0017DA  EFF1  F00B         	goto	u2880
  4558  0017DE                     u2881:
  4559  0017DE  EFF2  F00B         	goto	l3305
  4560  0017E2                     u2880:
  4561  0017E2  8E3F               	bsf	___fladd@grs^0,7,c
  4562  0017E4                     l3305:
  4563  0017E4  3433               	rlcf	(___fladd@b+3)^0,w,c
  4564  0017E6  3233               	rrcf	(___fladd@b+3)^0,f,c
  4565  0017E8  3232               	rrcf	(___fladd@b+2)^0,f,c
  4566  0017EA  3231               	rrcf	(___fladd@b+1)^0,f,c
  4567  0017EC  3230               	rrcf	___fladd@b^0,f,c
  4568  0017EE  2A3E               	incf	___fladd@bexp^0,f,c
  4569  0017F0                     l1292:
  4570  0017F0  503D               	movf	___fladd@aexp^0,w,c
  4571  0017F2  5C3E               	subwf	___fladd@bexp^0,w,c
  4572  0017F4  A0D8               	btfss	status,0,c
  4573  0017F6  EFFF  F00B         	goto	u2891
  4574  0017FA  EF01  F00C         	goto	u2890
  4575  0017FE                     u2891:
  4576  0017FE  EFDB  F00B         	goto	l1293
  4577  001802                     u2890:
  4578  001802                     l1291:
  4579  001802  BC3C               	btfsc	___fladd@signs^0,6,c
  4580  001804  EF06  F00C         	goto	u2901
  4581  001808  EF08  F00C         	goto	u2900
  4582  00180C                     u2901:
  4583  00180C  EF48  F00C         	goto	l3333
  4584  001810                     u2900:
  4585  001810  503E               	movf	___fladd@bexp^0,w,c
  4586  001812  A4D8               	btfss	status,2,c
  4587  001814  EF0E  F00C         	goto	u2911
  4588  001818  EF10  F00C         	goto	u2910
  4589  00181C                     u2911:
  4590  00181C  EF1A  F00C         	goto	l3315
  4591  001820                     u2910:
  4592  001820  0E00               	movlw	0
  4593  001822  6E30               	movwf	?___fladd^0,c
  4594  001824  0E00               	movlw	0
  4595  001826  6E31               	movwf	(?___fladd+1)^0,c
  4596  001828  0E00               	movlw	0
  4597  00182A  6E32               	movwf	(?___fladd+2)^0,c
  4598  00182C  0E00               	movlw	0
  4599  00182E  6E33               	movwf	(?___fladd+3)^0,c
  4600  001830  EF69  F00D         	goto	l1300
  4601  001834                     l3315:
  4602  001834  5034               	movf	___fladd@a^0,w,c
  4603  001836  2630               	addwf	___fladd@b^0,f,c
  4604  001838  5035               	movf	(___fladd@a+1)^0,w,c
  4605  00183A  2231               	addwfc	(___fladd@b+1)^0,f,c
  4606  00183C  5036               	movf	(___fladd@a+2)^0,w,c
  4607  00183E  2232               	addwfc	(___fladd@b+2)^0,f,c
  4608  001840  5037               	movf	(___fladd@a+3)^0,w,c
  4609  001842  2233               	addwfc	(___fladd@b+3)^0,f,c
  4610  001844  A033               	btfss	(___fladd@b+3)^0,0,c
  4611  001846  EF27  F00C         	goto	u2921
  4612  00184A  EF29  F00C         	goto	u2920
  4613  00184E                     u2921:
  4614  00184E  EFD5  F00C         	goto	l3369
  4615  001852                     u2920:
  4616  001852  A03F               	btfss	___fladd@grs^0,0,c
  4617  001854  EF2E  F00C         	goto	u2931
  4618  001858  EF30  F00C         	goto	u2930
  4619  00185C                     u2931:
  4620  00185C  EF36  F00C         	goto	l3323
  4621  001860                     u2930:
  4622  001860  90D8               	bcf	status,0,c
  4623  001862  303F               	rrcf	___fladd@grs^0,w,c
  4624  001864  0901               	iorlw	1
  4625  001866  6E3F               	movwf	___fladd@grs^0,c
  4626  001868  EF38  F00C         	goto	l3325
  4627  00186C                     l3323:
  4628  00186C  90D8               	bcf	status,0,c
  4629  00186E  323F               	rrcf	___fladd@grs^0,f,c
  4630  001870                     l3325:
  4631  001870  A030               	btfss	___fladd@b^0,0,c
  4632  001872  EF3D  F00C         	goto	u2941
  4633  001876  EF3F  F00C         	goto	u2940
  4634  00187A                     u2941:
  4635  00187A  EF40  F00C         	goto	l3329
  4636  00187E                     u2940:
  4637  00187E  8E3F               	bsf	___fladd@grs^0,7,c
  4638  001880                     l3329:
  4639  001880  3433               	rlcf	(___fladd@b+3)^0,w,c
  4640  001882  3233               	rrcf	(___fladd@b+3)^0,f,c
  4641  001884  3232               	rrcf	(___fladd@b+2)^0,f,c
  4642  001886  3231               	rrcf	(___fladd@b+1)^0,f,c
  4643  001888  3230               	rrcf	___fladd@b^0,f,c
  4644  00188A  2A3E               	incf	___fladd@bexp^0,f,c
  4645  00188C  EFD5  F00C         	goto	l3369
  4646  001890                     l3333:
  4647  001890  5034               	movf	___fladd@a^0,w,c
  4648  001892  5C30               	subwf	___fladd@b^0,w,c
  4649  001894  5035               	movf	(___fladd@a+1)^0,w,c
  4650  001896  5831               	subwfb	(___fladd@b+1)^0,w,c
  4651  001898  5036               	movf	(___fladd@a+2)^0,w,c
  4652  00189A  5832               	subwfb	(___fladd@b+2)^0,w,c
  4653  00189C  5033               	movf	(___fladd@b+3)^0,w,c
  4654  00189E  0A80               	xorlw	128
  4655  0018A0  6E38               	movwf	??___fladd^0,c
  4656  0018A2  5037               	movf	(___fladd@a+3)^0,w,c
  4657  0018A4  0A80               	xorlw	128
  4658  0018A6  5838               	subwfb	??___fladd^0,w,c
  4659  0018A8  B0D8               	btfsc	status,0,c
  4660  0018AA  EF59  F00C         	goto	u2951
  4661  0018AE  EF5B  F00C         	goto	u2950
  4662  0018B2                     u2951:
  4663  0018B2  EF86  F00C         	goto	l3343
  4664  0018B6                     u2950:
  4665  0018B6  5030               	movf	___fladd@b^0,w,c
  4666  0018B8  5C34               	subwf	___fladd@a^0,w,c
  4667  0018BA  6E38               	movwf	??___fladd^0,c
  4668  0018BC  5031               	movf	(___fladd@b+1)^0,w,c
  4669  0018BE  5835               	subwfb	(___fladd@a+1)^0,w,c
  4670  0018C0  6E39               	movwf	(??___fladd+1)^0,c
  4671  0018C2  5032               	movf	(___fladd@b+2)^0,w,c
  4672  0018C4  5836               	subwfb	(___fladd@a+2)^0,w,c
  4673  0018C6  6E3A               	movwf	(??___fladd+2)^0,c
  4674  0018C8  5033               	movf	(___fladd@b+3)^0,w,c
  4675  0018CA  5837               	subwfb	(___fladd@a+3)^0,w,c
  4676  0018CC  6E3B               	movwf	(??___fladd+3)^0,c
  4677  0018CE  0EFF               	movlw	255
  4678  0018D0  2438               	addwf	??___fladd^0,w,c
  4679  0018D2  6E30               	movwf	___fladd@b^0,c
  4680  0018D4  0EFF               	movlw	255
  4681  0018D6  2039               	addwfc	(??___fladd+1)^0,w,c
  4682  0018D8  6E31               	movwf	(___fladd@b+1)^0,c
  4683  0018DA  0EFF               	movlw	255
  4684  0018DC  203A               	addwfc	(??___fladd+2)^0,w,c
  4685  0018DE  6E32               	movwf	(___fladd@b+2)^0,c
  4686  0018E0  0EFF               	movlw	255
  4687  0018E2  203B               	addwfc	(??___fladd+3)^0,w,c
  4688  0018E4  6E33               	movwf	(___fladd@b+3)^0,c
  4689  0018E6  0E80               	movlw	128
  4690  0018E8  1A3C               	xorwf	___fladd@signs^0,f,c
  4691  0018EA  6C3F               	negf	___fladd@grs^0,c
  4692  0018EC  503F               	movf	___fladd@grs^0,w,c
  4693  0018EE  A4D8               	btfss	status,2,c
  4694  0018F0  EF7C  F00C         	goto	u2961
  4695  0018F4  EF7E  F00C         	goto	u2960
  4696  0018F8                     u2961:
  4697  0018F8  EF8E  F00C         	goto	l1308
  4698  0018FC                     u2960:
  4699  0018FC  0E01               	movlw	1
  4700  0018FE  2630               	addwf	___fladd@b^0,f,c
  4701  001900  0E00               	movlw	0
  4702  001902  2231               	addwfc	(___fladd@b+1)^0,f,c
  4703  001904  2232               	addwfc	(___fladd@b+2)^0,f,c
  4704  001906  2233               	addwfc	(___fladd@b+3)^0,f,c
  4705  001908  EF8E  F00C         	goto	l1308
  4706  00190C                     l3343:
  4707  00190C  5034               	movf	___fladd@a^0,w,c
  4708  00190E  5E30               	subwf	___fladd@b^0,f,c
  4709  001910  5035               	movf	(___fladd@a+1)^0,w,c
  4710  001912  5A31               	subwfb	(___fladd@b+1)^0,f,c
  4711  001914  5036               	movf	(___fladd@a+2)^0,w,c
  4712  001916  5A32               	subwfb	(___fladd@b+2)^0,f,c
  4713  001918  5037               	movf	(___fladd@a+3)^0,w,c
  4714  00191A  5A33               	subwfb	(___fladd@b+3)^0,f,c
  4715  00191C                     l1308:
  4716  00191C  5030               	movf	___fladd@b^0,w,c
  4717  00191E  1031               	iorwf	(___fladd@b+1)^0,w,c
  4718  001920  1032               	iorwf	(___fladd@b+2)^0,w,c
  4719  001922  1033               	iorwf	(___fladd@b+3)^0,w,c
  4720  001924  A4D8               	btfss	status,2,c
  4721  001926  EF97  F00C         	goto	u2971
  4722  00192A  EF99  F00C         	goto	u2970
  4723  00192E                     u2971:
  4724  00192E  EFCE  F00C         	goto	l3367
  4725  001932                     u2970:
  4726  001932  503F               	movf	___fladd@grs^0,w,c
  4727  001934  A4D8               	btfss	status,2,c
  4728  001936  EF9F  F00C         	goto	u2981
  4729  00193A  EFA1  F00C         	goto	u2980
  4730  00193E                     u2981:
  4731  00193E  EFCE  F00C         	goto	l3367
  4732  001942                     u2980:
  4733  001942  0E00               	movlw	0
  4734  001944  6E30               	movwf	?___fladd^0,c
  4735  001946  0E00               	movlw	0
  4736  001948  6E31               	movwf	(?___fladd+1)^0,c
  4737  00194A  0E00               	movlw	0
  4738  00194C  6E32               	movwf	(?___fladd+2)^0,c
  4739  00194E  0E00               	movlw	0
  4740  001950  6E33               	movwf	(?___fladd+3)^0,c
  4741  001952  EF69  F00D         	goto	l1300
  4742  001956                     l3351:
  4743  001956  90D8               	bcf	status,0,c
  4744  001958  3630               	rlcf	___fladd@b^0,f,c
  4745  00195A  3631               	rlcf	(___fladd@b+1)^0,f,c
  4746  00195C  3632               	rlcf	(___fladd@b+2)^0,f,c
  4747  00195E  3633               	rlcf	(___fladd@b+3)^0,f,c
  4748  001960  AE3F               	btfss	___fladd@grs^0,7,c
  4749  001962  EFB5  F00C         	goto	u2991
  4750  001966  EFB7  F00C         	goto	u2990
  4751  00196A                     u2991:
  4752  00196A  EFB8  F00C         	goto	l3357
  4753  00196E                     u2990:
  4754  00196E  8030               	bsf	___fladd@b^0,0,c
  4755  001970                     l3357:
  4756  001970  A03F               	btfss	___fladd@grs^0,0,c
  4757  001972  EFBD  F00C         	goto	u3001
  4758  001976  EFBF  F00C         	goto	u3000
  4759  00197A                     u3001:
  4760  00197A  EFC3  F00C         	goto	l3361
  4761  00197E                     u3000:
  4762  00197E  80D8               	bsf	status,0,c
  4763  001980  363F               	rlcf	___fladd@grs^0,f,c
  4764  001982  EFC5  F00C         	goto	l3363
  4765  001986                     l3361:
  4766  001986  90D8               	bcf	status,0,c
  4767  001988  363F               	rlcf	___fladd@grs^0,f,c
  4768  00198A                     l3363:
  4769  00198A  503E               	movf	___fladd@bexp^0,w,c
  4770  00198C  B4D8               	btfsc	status,2,c
  4771  00198E  EFCB  F00C         	goto	u3011
  4772  001992  EFCD  F00C         	goto	u3010
  4773  001996                     u3011:
  4774  001996  EFCE  F00C         	goto	l3367
  4775  00199A                     u3010:
  4776  00199A  063E               	decf	___fladd@bexp^0,f,c
  4777  00199C                     l3367:
  4778  00199C  AE32               	btfss	(___fladd@b+2)^0,7,c
  4779  00199E  EFD3  F00C         	goto	u3021
  4780  0019A2  EFD5  F00C         	goto	u3020
  4781  0019A6                     u3021:
  4782  0019A6  EFAB  F00C         	goto	l3351
  4783  0019AA                     u3020:
  4784  0019AA                     l3369:
  4785  0019AA  0E00               	movlw	0
  4786  0019AC  6E3D               	movwf	___fladd@aexp^0,c
  4787  0019AE  AE3F               	btfss	___fladd@grs^0,7,c
  4788  0019B0  EFDC  F00C         	goto	u3031
  4789  0019B4  EFDE  F00C         	goto	u3030
  4790  0019B8                     u3031:
  4791  0019B8  EFF6  F00C         	goto	l1317
  4792  0019BC                     u3030:
  4793  0019BC  C03F  F038         	movff	___fladd@grs,??___fladd
  4794  0019C0  0E7F               	movlw	127
  4795  0019C2  1638               	andwf	??___fladd^0,f,c
  4796  0019C4  B4D8               	btfsc	status,2,c
  4797  0019C6  EFE7  F00C         	goto	u3041
  4798  0019CA  EFE9  F00C         	goto	u3040
  4799  0019CE                     u3041:
  4800  0019CE  EFED  F00C         	goto	l1318
  4801  0019D2                     u3040:
  4802  0019D2                     l3375:
  4803  0019D2  0E01               	movlw	1
  4804  0019D4  6E3D               	movwf	___fladd@aexp^0,c
  4805  0019D6  EFF6  F00C         	goto	l1317
  4806  0019DA                     l1318:
  4807  0019DA  A030               	btfss	___fladd@b^0,0,c
  4808  0019DC  EFF2  F00C         	goto	u3051
  4809  0019E0  EFF4  F00C         	goto	u3050
  4810  0019E4                     u3051:
  4811  0019E4  EFF6  F00C         	goto	l1317
  4812  0019E8                     u3050:
  4813  0019E8  EFE9  F00C         	goto	l3375
  4814  0019EC                     l1317:
  4815  0019EC  503D               	movf	___fladd@aexp^0,w,c
  4816  0019EE  B4D8               	btfsc	status,2,c
  4817  0019F0  EFFC  F00C         	goto	u3061
  4818  0019F4  EFFE  F00C         	goto	u3060
  4819  0019F8                     u3061:
  4820  0019F8  EF29  F00D         	goto	l3387
  4821  0019FC                     u3060:
  4822  0019FC  0E01               	movlw	1
  4823  0019FE  2630               	addwf	___fladd@b^0,f,c
  4824  001A00  0E00               	movlw	0
  4825  001A02  2231               	addwfc	(___fladd@b+1)^0,f,c
  4826  001A04  2232               	addwfc	(___fladd@b+2)^0,f,c
  4827  001A06  2233               	addwfc	(___fladd@b+3)^0,f,c
  4828  001A08  A033               	btfss	(___fladd@b+3)^0,0,c
  4829  001A0A  EF09  F00D         	goto	u3071
  4830  001A0E  EF0B  F00D         	goto	u3070
  4831  001A12                     u3071:
  4832  001A12  EF29  F00D         	goto	l3387
  4833  001A16                     u3070:
  4834  001A16  C030  F038         	movff	___fladd@b,??___fladd
  4835  001A1A  C031  F039         	movff	___fladd@b+1,??___fladd+1
  4836  001A1E  C032  F03A         	movff	___fladd@b+2,??___fladd+2
  4837  001A22  C033  F03B         	movff	___fladd@b+3,??___fladd+3
  4838  001A26  343B               	rlcf	(??___fladd+3)^0,w,c
  4839  001A28  323B               	rrcf	(??___fladd+3)^0,f,c
  4840  001A2A  323A               	rrcf	(??___fladd+2)^0,f,c
  4841  001A2C  3239               	rrcf	(??___fladd+1)^0,f,c
  4842  001A2E  3238               	rrcf	??___fladd^0,f,c
  4843  001A30  C038  F030         	movff	??___fladd,___fladd@b
  4844  001A34  C039  F031         	movff	??___fladd+1,___fladd@b+1
  4845  001A38  C03A  F032         	movff	??___fladd+2,___fladd@b+2
  4846  001A3C  C03B  F033         	movff	??___fladd+3,___fladd@b+3
  4847  001A40  283E               	incf	___fladd@bexp^0,w,c
  4848  001A42  B4D8               	btfsc	status,2,c
  4849  001A44  EF26  F00D         	goto	u3081
  4850  001A48  EF28  F00D         	goto	u3080
  4851  001A4C                     u3081:
  4852  001A4C  EF29  F00D         	goto	l3387
  4853  001A50                     u3080:
  4854  001A50  2A3E               	incf	___fladd@bexp^0,f,c
  4855  001A52                     l3387:
  4856  001A52  283E               	incf	___fladd@bexp^0,w,c
  4857  001A54  B4D8               	btfsc	status,2,c
  4858  001A56  EF2F  F00D         	goto	u3091
  4859  001A5A  EF31  F00D         	goto	u3090
  4860  001A5E                     u3091:
  4861  001A5E  EF39  F00D         	goto	l3391
  4862  001A62                     u3090:
  4863  001A62  503E               	movf	___fladd@bexp^0,w,c
  4864  001A64  A4D8               	btfss	status,2,c
  4865  001A66  EF37  F00D         	goto	u3101
  4866  001A6A  EF39  F00D         	goto	u3100
  4867  001A6E                     u3101:
  4868  001A6E  EF4B  F00D         	goto	l3395
  4869  001A72                     u3100:
  4870  001A72                     l3391:
  4871  001A72  0E00               	movlw	0
  4872  001A74  6E30               	movwf	___fladd@b^0,c
  4873  001A76  0E00               	movlw	0
  4874  001A78  6E31               	movwf	(___fladd@b+1)^0,c
  4875  001A7A  0E00               	movlw	0
  4876  001A7C  6E32               	movwf	(___fladd@b+2)^0,c
  4877  001A7E  0E00               	movlw	0
  4878  001A80  6E33               	movwf	(___fladd@b+3)^0,c
  4879  001A82  503E               	movf	___fladd@bexp^0,w,c
  4880  001A84  A4D8               	btfss	status,2,c
  4881  001A86  EF47  F00D         	goto	u3111
  4882  001A8A  EF49  F00D         	goto	u3110
  4883  001A8E                     u3111:
  4884  001A8E  EF4B  F00D         	goto	l3395
  4885  001A92                     u3110:
  4886  001A92  0E00               	movlw	0
  4887  001A94  6E3C               	movwf	___fladd@signs^0,c
  4888  001A96                     l3395:
  4889  001A96  A03E               	btfss	___fladd@bexp^0,0,c
  4890  001A98  EF50  F00D         	goto	u3121
  4891  001A9C  EF52  F00D         	goto	u3120
  4892  001AA0                     u3121:
  4893  001AA0  EF55  F00D         	goto	l3399
  4894  001AA4                     u3120:
  4895  001AA4  8E32               	bsf	(___fladd@b+2)^0,7,c
  4896  001AA6  EF56  F00D         	goto	l3401
  4897  001AAA                     l3399:
  4898  001AAA  9E32               	bcf	(___fladd@b+2)^0,7,c
  4899  001AAC                     l3401:
  4900  001AAC  90D8               	bcf	status,0,c
  4901  001AAE  303E               	rrcf	___fladd@bexp^0,w,c
  4902  001AB0  6E33               	movwf	(___fladd@b+3)^0,c
  4903  001AB2  AE3C               	btfss	___fladd@signs^0,7,c
  4904  001AB4  EF5E  F00D         	goto	u3131
  4905  001AB8  EF60  F00D         	goto	u3130
  4906  001ABC                     u3131:
  4907  001ABC  EF61  F00D         	goto	l3407
  4908  001AC0                     u3130:
  4909  001AC0  8E33               	bsf	(___fladd@b+3)^0,7,c
  4910  001AC2                     l3407:
  4911  001AC2  C030  F030         	movff	___fladd@b,?___fladd
  4912  001AC6  C031  F031         	movff	___fladd@b+1,?___fladd+1
  4913  001ACA  C032  F032         	movff	___fladd@b+2,?___fladd+2
  4914  001ACE  C033  F033         	movff	___fladd@b+3,?___fladd+3
  4915  001AD2                     l1300:
  4916  001AD2  0012               	return		;funcret
  4917  001AD4                     __end_of___fladd:
  4918                           	callstack 0
  4919                           
  4920 ;; *************** function _forward *****************
  4921 ;; Defined at:
  4922 ;;		line 93 in file "DC_motors.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  mL              2   33[COMRAM] PTR struct .
  4925 ;;		 -> main@motorL(9), 
  4926 ;;  mR              2   35[COMRAM] PTR struct .
  4927 ;;		 -> main@motorR(9), 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4942 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4943 ;;Total ram usage:        5 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 9
  4946 ;; This function calls:
  4947 ;;		_DCmotors_setPWM
  4948 ;; This function is called by:
  4949 ;;		_main
  4950 ;;		_colourcards_readRGBC
  4951 ;;		_DCmotors_testing
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text18
  4956  00329C                     __ptext18:
  4957                           	callstack 0
  4958  00329C                     _forward:
  4959                           	callstack 21
  4960  00329C                     
  4961                           ;DC_motors.c: 94:     mL->direction = 1;
  4962  00329C  EE20 F001          	lfsr	2,1
  4963  0032A0  5022               	movf	forward@mL^0,w,c
  4964  0032A2  26D9               	addwf	fsr2l,f,c
  4965  0032A4  5023               	movf	(forward@mL+1)^0,w,c
  4966  0032A6  22DA               	addwfc	fsr2h,f,c
  4967  0032A8  0E01               	movlw	1
  4968  0032AA  6EDF               	movwf	indf2,c
  4969                           
  4970                           ;DC_motors.c: 95:     mR->direction = 1;
  4971  0032AC  EE20 F001          	lfsr	2,1
  4972  0032B0  5024               	movf	forward@mR^0,w,c
  4973  0032B2  26D9               	addwf	fsr2l,f,c
  4974  0032B4  5025               	movf	(forward@mR+1)^0,w,c
  4975  0032B6  22DA               	addwfc	fsr2h,f,c
  4976  0032B8  0E01               	movlw	1
  4977  0032BA  6EDF               	movwf	indf2,c
  4978                           
  4979                           ;DC_motors.c: 98:     while((mL->power < 20) && (mR->power < 20)){
  4980  0032BC  EF7C  F019         	goto	l3879
  4981  0032C0                     l3871:
  4982                           
  4983                           ;DC_motors.c: 99:         mL->power += 10;
  4984  0032C0  C022  FFD9         	movff	forward@mL,fsr2l
  4985  0032C4  C023  FFDA         	movff	forward@mL+1,fsr2h
  4986  0032C8  0E0A               	movlw	10
  4987  0032CA  26DF               	addwf	indf2,f,c
  4988                           
  4989                           ;DC_motors.c: 100:         mR->power += 10;
  4990  0032CC  C024  FFD9         	movff	forward@mR,fsr2l
  4991  0032D0  C025  FFDA         	movff	forward@mR+1,fsr2h
  4992  0032D4  0E0A               	movlw	10
  4993  0032D6  26DF               	addwf	indf2,f,c
  4994  0032D8                     
  4995                           ;DC_motors.c: 102:         DCmotors_setPWM(mL);
  4996  0032D8  C022  F017         	movff	forward@mL,DCmotors_setPWM@m
  4997  0032DC  C023  F018         	movff	forward@mL+1,DCmotors_setPWM@m+1
  4998  0032E0  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  4999  0032E4                     
  5000                           ;DC_motors.c: 103:         DCmotors_setPWM(mR);
  5001  0032E4  C024  F017         	movff	forward@mR,DCmotors_setPWM@m
  5002  0032E8  C025  F018         	movff	forward@mR+1,DCmotors_setPWM@m+1
  5003  0032EC  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  5004  0032F0                     
  5005                           ;DC_motors.c: 104:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  5006  0032F0  0EA0               	movlw	160
  5007  0032F2                     u6187:
  5008  0032F2  D000               	nop2	
  5009  0032F4  2EE8               	decfsz	wreg,f,c
  5010  0032F6  D7FD               	bra	u6187
  5011  0032F8                     l3879:
  5012                           
  5013                           ;DC_motors.c: 98:     while((mL->power < 20) && (mR->power < 20)){
  5014  0032F8  C022  FFD9         	movff	forward@mL,fsr2l
  5015  0032FC  C023  FFDA         	movff	forward@mL+1,fsr2h
  5016  003300  0E14               	movlw	20
  5017  003302  60DF               	cpfslt	indf2,c
  5018  003304  EF86  F019         	goto	u3901
  5019  003308  EF88  F019         	goto	u3900
  5020  00330C                     u3901:
  5021  00330C  EF94  F019         	goto	l597
  5022  003310                     u3900:
  5023  003310  C024  FFD9         	movff	forward@mR,fsr2l
  5024  003314  C025  FFDA         	movff	forward@mR+1,fsr2h
  5025  003318  0E13               	movlw	19
  5026  00331A  64DF               	cpfsgt	indf2,c
  5027  00331C  EF92  F019         	goto	u3911
  5028  003320  EF94  F019         	goto	u3910
  5029  003324                     u3911:
  5030  003324  EF60  F019         	goto	l3871
  5031  003328                     u3910:
  5032  003328                     l597:
  5033  003328  0012               	return		;funcret
  5034  00332A                     __end_of_forward:
  5035                           	callstack 0
  5036                           
  5037 ;; *************** function _colourclick_readRGBC2 *****************
  5038 ;; Defined at:
  5039 ;;		line 124 in file "colour_click.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  tmpval          2   21[COMRAM] PTR struct .
  5042 ;;		 -> colourcards_testingRGBC2@abs(8), main@current(8), 
  5043 ;;  mode            1   23[COMRAM] unsigned char 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5055 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;Total ram usage:        5 bytes
  5060 ;; Hardware stack levels used: 1
  5061 ;; Hardware stack levels required when called: 11
  5062 ;; This function calls:
  5063 ;;		_colourclickLEDs_C
  5064 ;;		_colourclick_readRGBC
  5065 ;; This function is called by:
  5066 ;;		_colourcards_readRGBC
  5067 ;;		_colourcards_testingRGBC2
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text19
  5072  002DEA                     __ptext19:
  5073                           	callstack 0
  5074  002DEA                     _colourclick_readRGBC2:
  5075                           	callstack 17
  5076  002DEA                     
  5077                           ;colour_click.c: 125:     colourclickLEDs_C(0);
  5078  002DEA  0E00               	movlw	0
  5079  002DEC  ECC5  F01C         	call	_colourclickLEDs_C
  5080  002DF0                     
  5081                           ;colour_click.c: 126:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5082  002DF0  0E09               	movlw	9
  5083  002DF2  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5084  002DF4  0E1E               	movlw	30
  5085  002DF6  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5086  002DF8  0EE4               	movlw	228
  5087  002DFA                     u6197:
  5088  002DFA  2EE8               	decfsz	wreg,f,c
  5089  002DFC  D7FE               	bra	u6197
  5090  002DFE  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5091  002E00  D7FC               	bra	u6197
  5092  002E02  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5093  002E04  D7FA               	bra	u6197
  5094  002E06  D000               	nop2	
  5095  002E08                     
  5096                           ;colour_click.c: 128:     if (mode==1) {
  5097  002E08  0418               	decf	colourclick_readRGBC2@mode^0,w,c
  5098  002E0A  A4D8               	btfss	status,2,c
  5099  002E0C  EF0A  F017         	goto	u3921
  5100  002E10  EF0C  F017         	goto	u3920
  5101  002E14                     u3921:
  5102  002E14  EF3A  F017         	goto	l3929
  5103  002E18                     u3920:
  5104  002E18                     
  5105                           ;colour_click.c: 129:         LATGbits.LATG1 = 1;
  5106  002E18  827F               	bsf	127,1,c	;volatile
  5107  002E1A                     
  5108                           ;colour_click.c: 130:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5109  002E1A  0E52               	movlw	82
  5110  002E1C  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5111  002E1E  0E2B               	movlw	43
  5112  002E20  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5113  002E22  0E00               	movlw	0
  5114  002E24                     u6207:
  5115  002E24  2EE8               	decfsz	wreg,f,c
  5116  002E26  D7FE               	bra	u6207
  5117  002E28  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5118  002E2A  D7FC               	bra	u6207
  5119  002E2C  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5120  002E2E  D7FA               	bra	u6207
  5121  002E30  D000               	nop2	
  5122  002E32                     
  5123                           ;colour_click.c: 131:         colourclick_readRGBC(tmpval);
  5124  002E32  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  5125  002E36  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  5126  002E3A  EC50  F01A         	call	_colourclick_readRGBC	;wreg free
  5127  002E3E                     
  5128                           ;colour_click.c: 132:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5129  002E3E  0E52               	movlw	82
  5130  002E40  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5131  002E42  0E2B               	movlw	43
  5132  002E44  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5133  002E46  0E00               	movlw	0
  5134  002E48                     u6217:
  5135  002E48  2EE8               	decfsz	wreg,f,c
  5136  002E4A  D7FE               	bra	u6217
  5137  002E4C  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5138  002E4E  D7FC               	bra	u6217
  5139  002E50  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5140  002E52  D7FA               	bra	u6217
  5141  002E54  D000               	nop2	
  5142  002E56                     
  5143                           ;colour_click.c: 133:         LATGbits.LATG1 = 0;
  5144  002E56  927F               	bcf	127,1,c	;volatile
  5145  002E58                     l3927:
  5146                           
  5147                           ;colour_click.c: 134:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5148  002E58  0E02               	movlw	2
  5149  002E5A  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5150  002E5C  0EA0               	movlw	160
  5151  002E5E  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5152  002E60  0E92               	movlw	146
  5153  002E62                     u6227:
  5154  002E62  2EE8               	decfsz	wreg,f,c
  5155  002E64  D7FE               	bra	u6227
  5156  002E66  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5157  002E68  D7FC               	bra	u6227
  5158  002E6A  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5159  002E6C  D7FA               	bra	u6227
  5160  002E6E  D000               	nop2	
  5161                           
  5162                           ;colour_click.c: 135:     } else if (mode==2) {
  5163  002E70  EF90  F017         	goto	l3957
  5164  002E74                     l3929:
  5165  002E74  0E02               	movlw	2
  5166  002E76  1818               	xorwf	colourclick_readRGBC2@mode^0,w,c
  5167  002E78  A4D8               	btfss	status,2,c
  5168  002E7A  EF41  F017         	goto	u3931
  5169  002E7E  EF43  F017         	goto	u3930
  5170  002E82                     u3931:
  5171  002E82  EF65  F017         	goto	l3943
  5172  002E86                     u3930:
  5173  002E86                     
  5174                           ;colour_click.c: 136:         LATAbits.LATA4 = 1;
  5175  002E86  8879               	bsf	121,4,c	;volatile
  5176  002E88                     
  5177                           ;colour_click.c: 137:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5178  002E88  0E52               	movlw	82
  5179  002E8A  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5180  002E8C  0E2B               	movlw	43
  5181  002E8E  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5182  002E90  0E00               	movlw	0
  5183  002E92                     u6237:
  5184  002E92  2EE8               	decfsz	wreg,f,c
  5185  002E94  D7FE               	bra	u6237
  5186  002E96  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5187  002E98  D7FC               	bra	u6237
  5188  002E9A  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5189  002E9C  D7FA               	bra	u6237
  5190  002E9E  D000               	nop2	
  5191  002EA0                     
  5192                           ;colour_click.c: 138:         colourclick_readRGBC(tmpval);
  5193  002EA0  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  5194  002EA4  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  5195  002EA8  EC50  F01A         	call	_colourclick_readRGBC	;wreg free
  5196  002EAC                     
  5197                           ;colour_click.c: 139:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5198  002EAC  0E52               	movlw	82
  5199  002EAE  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5200  002EB0  0E2B               	movlw	43
  5201  002EB2  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5202  002EB4  0E00               	movlw	0
  5203  002EB6                     u6247:
  5204  002EB6  2EE8               	decfsz	wreg,f,c
  5205  002EB8  D7FE               	bra	u6247
  5206  002EBA  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5207  002EBC  D7FC               	bra	u6247
  5208  002EBE  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5209  002EC0  D7FA               	bra	u6247
  5210  002EC2  D000               	nop2	
  5211  002EC4                     
  5212                           ;colour_click.c: 140:         LATAbits.LATA4 = 0;
  5213  002EC4  9879               	bcf	121,4,c	;volatile
  5214  002EC6  EF2C  F017         	goto	l3927
  5215  002ECA                     l3943:
  5216  002ECA  0E03               	movlw	3
  5217  002ECC  1818               	xorwf	colourclick_readRGBC2@mode^0,w,c
  5218  002ECE  A4D8               	btfss	status,2,c
  5219  002ED0  EF6C  F017         	goto	u3941
  5220  002ED4  EF6E  F017         	goto	u3940
  5221  002ED8                     u3941:
  5222  002ED8  EF90  F017         	goto	l3957
  5223  002EDC                     u3940:
  5224  002EDC                     
  5225                           ;colour_click.c: 143:         LATFbits.LATF7 = 1;
  5226  002EDC  8E7E               	bsf	126,7,c	;volatile
  5227  002EDE                     
  5228                           ;colour_click.c: 144:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5229  002EDE  0E52               	movlw	82
  5230  002EE0  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5231  002EE2  0E2B               	movlw	43
  5232  002EE4  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5233  002EE6  0E00               	movlw	0
  5234  002EE8                     u6257:
  5235  002EE8  2EE8               	decfsz	wreg,f,c
  5236  002EEA  D7FE               	bra	u6257
  5237  002EEC  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5238  002EEE  D7FC               	bra	u6257
  5239  002EF0  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5240  002EF2  D7FA               	bra	u6257
  5241  002EF4  D000               	nop2	
  5242  002EF6                     
  5243                           ;colour_click.c: 145:         colourclick_readRGBC(tmpval);
  5244  002EF6  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  5245  002EFA  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  5246  002EFE  EC50  F01A         	call	_colourclick_readRGBC	;wreg free
  5247  002F02                     
  5248                           ;colour_click.c: 146:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5249  002F02  0E52               	movlw	82
  5250  002F04  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5251  002F06  0E2B               	movlw	43
  5252  002F08  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5253  002F0A  0E00               	movlw	0
  5254  002F0C                     u6267:
  5255  002F0C  2EE8               	decfsz	wreg,f,c
  5256  002F0E  D7FE               	bra	u6267
  5257  002F10  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5258  002F12  D7FC               	bra	u6267
  5259  002F14  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5260  002F16  D7FA               	bra	u6267
  5261  002F18  D000               	nop2	
  5262  002F1A                     
  5263                           ;colour_click.c: 147:         LATFbits.LATF7 = 0;
  5264  002F1A  9E7E               	bcf	126,7,c	;volatile
  5265  002F1C  EF2C  F017         	goto	l3927
  5266  002F20                     l3957:
  5267                           
  5268                           ;colour_click.c: 151:     colourclickLEDs_C(1);
  5269  002F20  0E01               	movlw	1
  5270  002F22  ECC5  F01C         	call	_colourclickLEDs_C
  5271  002F26                     
  5272                           ;colour_click.c: 152:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5273  002F26  0E09               	movlw	9
  5274  002F28  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5275  002F2A  0E1E               	movlw	30
  5276  002F2C  6E19               	movwf	??_colourclick_readRGBC2^0,c
  5277  002F2E  0EE4               	movlw	228
  5278  002F30                     u6277:
  5279  002F30  2EE8               	decfsz	wreg,f,c
  5280  002F32  D7FE               	bra	u6277
  5281  002F34  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  5282  002F36  D7FC               	bra	u6277
  5283  002F38  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5284  002F3A  D7FA               	bra	u6277
  5285  002F3C  D000               	nop2	
  5286  002F3E  0012               	return		;funcret
  5287  002F40                     __end_of_colourclick_readRGBC2:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _colourclick_readRGBC *****************
  5291 ;; Defined at:
  5292 ;;		line 113 in file "colour_click.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  tmpval          2   19[COMRAM] PTR struct .
  5295 ;;		 -> colourclick_calibration@initial(8), colourcards_testingRGBC2@abs(8), main@current(8), 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;Total ram usage:        2 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; Hardware stack levels required when called: 10
  5314 ;; This function calls:
  5315 ;;		_colourclick_readB
  5316 ;;		_colourclick_readC
  5317 ;;		_colourclick_readG
  5318 ;;		_colourclick_readR
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;;		_colourcards_readRGBC
  5322 ;;		_colourclick_readRGBC2
  5323 ;;		_colourcards_testingRGBC2
  5324 ;;		_colourclick_calibration
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text20
  5329  0034A0                     __ptext20:
  5330                           	callstack 0
  5331  0034A0                     _colourclick_readRGBC:
  5332                           	callstack 20
  5333  0034A0                     
  5334                           ;colour_click.c: 114:     tmpval->R = colourclick_readR();
  5335  0034A0  ECFE  F01A         	call	_colourclick_readR	;wreg free
  5336  0034A4  C014  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  5337  0034A8  C015  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  5338  0034AC  C00D  FFDE         	movff	?_colourclick_readR,postinc2
  5339  0034B0  C00E  FFDD         	movff	?_colourclick_readR+1,postdec2
  5340                           
  5341                           ;colour_click.c: 115:     tmpval->G = colourclick_readG();
  5342  0034B4  EC26  F01B         	call	_colourclick_readG	;wreg free
  5343  0034B8  EE20 F002          	lfsr	2,2
  5344  0034BC  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  5345  0034BE  26D9               	addwf	fsr2l,f,c
  5346  0034C0  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  5347  0034C2  22DA               	addwfc	fsr2h,f,c
  5348  0034C4  C00D  FFDE         	movff	?_colourclick_readG,postinc2
  5349  0034C8  C00E  FFDD         	movff	?_colourclick_readG+1,postdec2
  5350                           
  5351                           ;colour_click.c: 116:     tmpval->B = colourclick_readB();
  5352  0034CC  EC76  F01B         	call	_colourclick_readB	;wreg free
  5353  0034D0  EE20 F004          	lfsr	2,4
  5354  0034D4  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  5355  0034D6  26D9               	addwf	fsr2l,f,c
  5356  0034D8  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  5357  0034DA  22DA               	addwfc	fsr2h,f,c
  5358  0034DC  C00D  FFDE         	movff	?_colourclick_readB,postinc2
  5359  0034E0  C00E  FFDD         	movff	?_colourclick_readB+1,postdec2
  5360                           
  5361                           ;colour_click.c: 117:     tmpval->C = colourclick_readC();
  5362  0034E4  EC4E  F01B         	call	_colourclick_readC	;wreg free
  5363  0034E8  EE20 F006          	lfsr	2,6
  5364  0034EC  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  5365  0034EE  26D9               	addwf	fsr2l,f,c
  5366  0034F0  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  5367  0034F2  22DA               	addwfc	fsr2h,f,c
  5368  0034F4  C00D  FFDE         	movff	?_colourclick_readC,postinc2
  5369  0034F8  C00E  FFDD         	movff	?_colourclick_readC+1,postdec2
  5370  0034FC  0012               	return		;funcret
  5371  0034FE                     __end_of_colourclick_readRGBC:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function _colourclick_readR *****************
  5375 ;; Defined at:
  5376 ;;		line 45 in file "colour_click.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;		None
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  tmp             2   17[COMRAM] unsigned int 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2   12[COMRAM] unsigned int 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;Total ram usage:        7 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; Hardware stack levels required when called: 9
  5397 ;; This function calls:
  5398 ;;		_I2C_2_Master_Read
  5399 ;;		_I2C_2_Master_RepStart
  5400 ;;		_I2C_2_Master_Start
  5401 ;;		_I2C_2_Master_Stop
  5402 ;;		_I2C_2_Master_Write
  5403 ;; This function is called by:
  5404 ;;		_colourclick_readRGBC
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text21
  5409  0035FC                     __ptext21:
  5410                           	callstack 0
  5411  0035FC                     _colourclick_readR:
  5412                           	callstack 20
  5413  0035FC                     
  5414                           ;colour_click.c: 46:  unsigned int tmp;;colour_click.c: 47:  I2C_2_Master_Start();
  5415  0035FC  EC83  F01D         	call	_I2C_2_Master_Start	;wreg free
  5416                           
  5417                           ;colour_click.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  5418  003600  0E52               	movlw	82
  5419  003602  EC6C  F01D         	call	_I2C_2_Master_Write
  5420                           
  5421                           ;colour_click.c: 49:  I2C_2_Master_Write(0xA0 | 0x16);
  5422  003606  0EB6               	movlw	182
  5423  003608  EC6C  F01D         	call	_I2C_2_Master_Write
  5424                           
  5425                           ;colour_click.c: 50:  I2C_2_Master_RepStart();
  5426  00360C  EC88  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5427                           
  5428                           ;colour_click.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  5429  003610  0E53               	movlw	83
  5430  003612  EC6C  F01D         	call	_I2C_2_Master_Write
  5431                           
  5432                           ;colour_click.c: 52:  tmp=I2C_2_Master_Read(1);
  5433  003616  0E01               	movlw	1
  5434  003618  EC14  F01C         	call	_I2C_2_Master_Read
  5435  00361C  6E0F               	movwf	??_colourclick_readR^0,c
  5436  00361E  500F               	movf	??_colourclick_readR^0,w,c
  5437  003620  6E12               	movwf	colourclick_readR@tmp^0,c
  5438  003622  6A13               	clrf	(colourclick_readR@tmp+1)^0,c
  5439                           
  5440                           ;colour_click.c: 53:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  5441  003624  0E00               	movlw	0
  5442  003626  EC14  F01C         	call	_I2C_2_Master_Read
  5443  00362A  6E0F               	movwf	??_colourclick_readR^0,c
  5444  00362C  500F               	movf	??_colourclick_readR^0,w,c
  5445  00362E  6E11               	movwf	(??_colourclick_readR+2)^0,c
  5446  003630  6A10               	clrf	(??_colourclick_readR+1)^0,c
  5447  003632  5012               	movf	colourclick_readR@tmp^0,w,c
  5448  003634  1010               	iorwf	(??_colourclick_readR+1)^0,w,c
  5449  003636  6E12               	movwf	colourclick_readR@tmp^0,c
  5450  003638  5013               	movf	(colourclick_readR@tmp+1)^0,w,c
  5451  00363A  1011               	iorwf	(??_colourclick_readR+2)^0,w,c
  5452  00363C  6E13               	movwf	(colourclick_readR@tmp+1)^0,c
  5453                           
  5454                           ;colour_click.c: 54:  I2C_2_Master_Stop();
  5455  00363E  EC7E  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5456  003642                     
  5457                           ;colour_click.c: 55:  return tmp;
  5458  003642  C012  F00D         	movff	colourclick_readR@tmp,?_colourclick_readR
  5459  003646  C013  F00E         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  5460  00364A  0012               	return		;funcret
  5461  00364C                     __end_of_colourclick_readR:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function _colourclick_readG *****************
  5465 ;; Defined at:
  5466 ;;		line 62 in file "colour_click.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  tmp             2   17[COMRAM] unsigned int 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  2   12[COMRAM] unsigned int 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5484 ;;Total ram usage:        7 bytes
  5485 ;; Hardware stack levels used: 1
  5486 ;; Hardware stack levels required when called: 9
  5487 ;; This function calls:
  5488 ;;		_I2C_2_Master_Read
  5489 ;;		_I2C_2_Master_RepStart
  5490 ;;		_I2C_2_Master_Start
  5491 ;;		_I2C_2_Master_Stop
  5492 ;;		_I2C_2_Master_Write
  5493 ;; This function is called by:
  5494 ;;		_colourclick_readRGBC
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text22
  5499  00364C                     __ptext22:
  5500                           	callstack 0
  5501  00364C                     _colourclick_readG:
  5502                           	callstack 20
  5503  00364C                     
  5504                           ;colour_click.c: 63:  unsigned int tmp;;colour_click.c: 64:  I2C_2_Master_Start();
  5505  00364C  EC83  F01D         	call	_I2C_2_Master_Start	;wreg free
  5506                           
  5507                           ;colour_click.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  5508  003650  0E52               	movlw	82
  5509  003652  EC6C  F01D         	call	_I2C_2_Master_Write
  5510                           
  5511                           ;colour_click.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  5512  003656  0EB8               	movlw	184
  5513  003658  EC6C  F01D         	call	_I2C_2_Master_Write
  5514                           
  5515                           ;colour_click.c: 67:  I2C_2_Master_RepStart();
  5516  00365C  EC88  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5517                           
  5518                           ;colour_click.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  5519  003660  0E53               	movlw	83
  5520  003662  EC6C  F01D         	call	_I2C_2_Master_Write
  5521                           
  5522                           ;colour_click.c: 69:  tmp=I2C_2_Master_Read(1);
  5523  003666  0E01               	movlw	1
  5524  003668  EC14  F01C         	call	_I2C_2_Master_Read
  5525  00366C  6E0F               	movwf	??_colourclick_readG^0,c
  5526  00366E  500F               	movf	??_colourclick_readG^0,w,c
  5527  003670  6E12               	movwf	colourclick_readG@tmp^0,c
  5528  003672  6A13               	clrf	(colourclick_readG@tmp+1)^0,c
  5529                           
  5530                           ;colour_click.c: 70:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  5531  003674  0E00               	movlw	0
  5532  003676  EC14  F01C         	call	_I2C_2_Master_Read
  5533  00367A  6E0F               	movwf	??_colourclick_readG^0,c
  5534  00367C  500F               	movf	??_colourclick_readG^0,w,c
  5535  00367E  6E11               	movwf	(??_colourclick_readG+2)^0,c
  5536  003680  6A10               	clrf	(??_colourclick_readG+1)^0,c
  5537  003682  5012               	movf	colourclick_readG@tmp^0,w,c
  5538  003684  1010               	iorwf	(??_colourclick_readG+1)^0,w,c
  5539  003686  6E12               	movwf	colourclick_readG@tmp^0,c
  5540  003688  5013               	movf	(colourclick_readG@tmp+1)^0,w,c
  5541  00368A  1011               	iorwf	(??_colourclick_readG+2)^0,w,c
  5542  00368C  6E13               	movwf	(colourclick_readG@tmp+1)^0,c
  5543                           
  5544                           ;colour_click.c: 71:  I2C_2_Master_Stop();
  5545  00368E  EC7E  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5546  003692                     
  5547                           ;colour_click.c: 72:  return tmp;
  5548  003692  C012  F00D         	movff	colourclick_readG@tmp,?_colourclick_readG
  5549  003696  C013  F00E         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  5550  00369A  0012               	return		;funcret
  5551  00369C                     __end_of_colourclick_readG:
  5552                           	callstack 0
  5553                           
  5554 ;; *************** function _colourclick_readC *****************
  5555 ;; Defined at:
  5556 ;;		line 96 in file "colour_click.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  tmp             2   17[COMRAM] unsigned int 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  2   12[COMRAM] unsigned int 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5572 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5573 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5574 ;;Total ram usage:        7 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; Hardware stack levels required when called: 9
  5577 ;; This function calls:
  5578 ;;		_I2C_2_Master_Read
  5579 ;;		_I2C_2_Master_RepStart
  5580 ;;		_I2C_2_Master_Start
  5581 ;;		_I2C_2_Master_Stop
  5582 ;;		_I2C_2_Master_Write
  5583 ;; This function is called by:
  5584 ;;		_colourclick_readRGBC
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text23
  5589  00369C                     __ptext23:
  5590                           	callstack 0
  5591  00369C                     _colourclick_readC:
  5592                           	callstack 20
  5593  00369C                     
  5594                           ;colour_click.c: 97:  unsigned int tmp;;colour_click.c: 98:  I2C_2_Master_Start();
  5595  00369C  EC83  F01D         	call	_I2C_2_Master_Start	;wreg free
  5596                           
  5597                           ;colour_click.c: 99:  I2C_2_Master_Write(0x52 | 0x00);
  5598  0036A0  0E52               	movlw	82
  5599  0036A2  EC6C  F01D         	call	_I2C_2_Master_Write
  5600                           
  5601                           ;colour_click.c: 100:  I2C_2_Master_Write(0xA0 | 0x14);
  5602  0036A6  0EB4               	movlw	180
  5603  0036A8  EC6C  F01D         	call	_I2C_2_Master_Write
  5604                           
  5605                           ;colour_click.c: 101:  I2C_2_Master_RepStart();
  5606  0036AC  EC88  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5607                           
  5608                           ;colour_click.c: 102:  I2C_2_Master_Write(0x52 | 0x01);
  5609  0036B0  0E53               	movlw	83
  5610  0036B2  EC6C  F01D         	call	_I2C_2_Master_Write
  5611                           
  5612                           ;colour_click.c: 103:  tmp=I2C_2_Master_Read(1);
  5613  0036B6  0E01               	movlw	1
  5614  0036B8  EC14  F01C         	call	_I2C_2_Master_Read
  5615  0036BC  6E0F               	movwf	??_colourclick_readC^0,c
  5616  0036BE  500F               	movf	??_colourclick_readC^0,w,c
  5617  0036C0  6E12               	movwf	colourclick_readC@tmp^0,c
  5618  0036C2  6A13               	clrf	(colourclick_readC@tmp+1)^0,c
  5619                           
  5620                           ;colour_click.c: 104:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  5621  0036C4  0E00               	movlw	0
  5622  0036C6  EC14  F01C         	call	_I2C_2_Master_Read
  5623  0036CA  6E0F               	movwf	??_colourclick_readC^0,c
  5624  0036CC  500F               	movf	??_colourclick_readC^0,w,c
  5625  0036CE  6E11               	movwf	(??_colourclick_readC+2)^0,c
  5626  0036D0  6A10               	clrf	(??_colourclick_readC+1)^0,c
  5627  0036D2  5012               	movf	colourclick_readC@tmp^0,w,c
  5628  0036D4  1010               	iorwf	(??_colourclick_readC+1)^0,w,c
  5629  0036D6  6E12               	movwf	colourclick_readC@tmp^0,c
  5630  0036D8  5013               	movf	(colourclick_readC@tmp+1)^0,w,c
  5631  0036DA  1011               	iorwf	(??_colourclick_readC+2)^0,w,c
  5632  0036DC  6E13               	movwf	(colourclick_readC@tmp+1)^0,c
  5633                           
  5634                           ;colour_click.c: 105:  I2C_2_Master_Stop();
  5635  0036DE  EC7E  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5636  0036E2                     
  5637                           ;colour_click.c: 106:  return tmp;
  5638  0036E2  C012  F00D         	movff	colourclick_readC@tmp,?_colourclick_readC
  5639  0036E6  C013  F00E         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  5640  0036EA  0012               	return		;funcret
  5641  0036EC                     __end_of_colourclick_readC:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _colourclick_readB *****************
  5645 ;; Defined at:
  5646 ;;		line 79 in file "colour_click.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  tmp             2   17[COMRAM] unsigned int 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  2   12[COMRAM] unsigned int 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0, cstack
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5663 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;Total ram usage:        7 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 9
  5667 ;; This function calls:
  5668 ;;		_I2C_2_Master_Read
  5669 ;;		_I2C_2_Master_RepStart
  5670 ;;		_I2C_2_Master_Start
  5671 ;;		_I2C_2_Master_Stop
  5672 ;;		_I2C_2_Master_Write
  5673 ;; This function is called by:
  5674 ;;		_colourclick_readRGBC
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text24
  5679  0036EC                     __ptext24:
  5680                           	callstack 0
  5681  0036EC                     _colourclick_readB:
  5682                           	callstack 20
  5683  0036EC                     
  5684                           ;colour_click.c: 80:  unsigned int tmp;;colour_click.c: 81:  I2C_2_Master_Start();
  5685  0036EC  EC83  F01D         	call	_I2C_2_Master_Start	;wreg free
  5686                           
  5687                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  5688  0036F0  0E52               	movlw	82
  5689  0036F2  EC6C  F01D         	call	_I2C_2_Master_Write
  5690                           
  5691                           ;colour_click.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  5692  0036F6  0EBA               	movlw	186
  5693  0036F8  EC6C  F01D         	call	_I2C_2_Master_Write
  5694                           
  5695                           ;colour_click.c: 84:  I2C_2_Master_RepStart();
  5696  0036FC  EC88  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5697                           
  5698                           ;colour_click.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  5699  003700  0E53               	movlw	83
  5700  003702  EC6C  F01D         	call	_I2C_2_Master_Write
  5701                           
  5702                           ;colour_click.c: 86:  tmp=I2C_2_Master_Read(1);
  5703  003706  0E01               	movlw	1
  5704  003708  EC14  F01C         	call	_I2C_2_Master_Read
  5705  00370C  6E0F               	movwf	??_colourclick_readB^0,c
  5706  00370E  500F               	movf	??_colourclick_readB^0,w,c
  5707  003710  6E12               	movwf	colourclick_readB@tmp^0,c
  5708  003712  6A13               	clrf	(colourclick_readB@tmp+1)^0,c
  5709                           
  5710                           ;colour_click.c: 87:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  5711  003714  0E00               	movlw	0
  5712  003716  EC14  F01C         	call	_I2C_2_Master_Read
  5713  00371A  6E0F               	movwf	??_colourclick_readB^0,c
  5714  00371C  500F               	movf	??_colourclick_readB^0,w,c
  5715  00371E  6E11               	movwf	(??_colourclick_readB+2)^0,c
  5716  003720  6A10               	clrf	(??_colourclick_readB+1)^0,c
  5717  003722  5012               	movf	colourclick_readB@tmp^0,w,c
  5718  003724  1010               	iorwf	(??_colourclick_readB+1)^0,w,c
  5719  003726  6E12               	movwf	colourclick_readB@tmp^0,c
  5720  003728  5013               	movf	(colourclick_readB@tmp+1)^0,w,c
  5721  00372A  1011               	iorwf	(??_colourclick_readB+2)^0,w,c
  5722  00372C  6E13               	movwf	(colourclick_readB@tmp+1)^0,c
  5723                           
  5724                           ;colour_click.c: 88:  I2C_2_Master_Stop();
  5725  00372E  EC7E  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5726  003732                     
  5727                           ;colour_click.c: 89:  return tmp;
  5728  003732  C012  F00D         	movff	colourclick_readB@tmp,?_colourclick_readB
  5729  003736  C013  F00E         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  5730  00373A  0012               	return		;funcret
  5731  00373C                     __end_of_colourclick_readB:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function _I2C_2_Master_Write *****************
  5735 ;; Defined at:
  5736 ;;		line 64 in file "I2C.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  data_byte       1    wreg     unsigned char 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  data_byte       1    9[COMRAM] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      void 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;Total ram usage:        1 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 8
  5757 ;; This function calls:
  5758 ;;		_I2C_2_Master_Idle
  5759 ;; This function is called by:
  5760 ;;		_interrupts_clear
  5761 ;;		_colourclick_writetoaddr
  5762 ;;		_colourclick_readR
  5763 ;;		_colourclick_readG
  5764 ;;		_colourclick_readB
  5765 ;;		_colourclick_readC
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text25
  5770  003AD8                     __ptext25:
  5771                           	callstack 0
  5772  003AD8                     _I2C_2_Master_Write:
  5773                           	callstack 18
  5774                           
  5775                           ;incstack = 0
  5776                           ;I2C_2_Master_Write@data_byte stored from wreg
  5777  003AD8  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  5778  003ADA                     
  5779                           ;I2C.c: 65:   I2C_2_Master_Idle();
  5780  003ADA  EC66  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5781  003ADE                     
  5782                           ;I2C.c: 66:   SSP2BUF = data_byte;
  5783  003ADE  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5784  003AE2  0012               	return		;funcret
  5785  003AE4                     __end_of_I2C_2_Master_Write:
  5786                           	callstack 0
  5787                           
  5788 ;; *************** function _I2C_2_Master_Stop *****************
  5789 ;; Defined at:
  5790 ;;		line 55 in file "I2C.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5808 ;;Total ram usage:        0 bytes
  5809 ;; Hardware stack levels used: 1
  5810 ;; Hardware stack levels required when called: 8
  5811 ;; This function calls:
  5812 ;;		_I2C_2_Master_Idle
  5813 ;; This function is called by:
  5814 ;;		_interrupts_clear
  5815 ;;		_colourclick_writetoaddr
  5816 ;;		_colourclick_readR
  5817 ;;		_colourclick_readG
  5818 ;;		_colourclick_readB
  5819 ;;		_colourclick_readC
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text26
  5824  003AFC                     __ptext26:
  5825                           	callstack 0
  5826  003AFC                     _I2C_2_Master_Stop:
  5827                           	callstack 18
  5828  003AFC                     
  5829                           ;I2C.c: 56:   I2C_2_Master_Idle();
  5830  003AFC  EC66  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5831  003B00                     
  5832                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  5833  003B00  010E               	movlb	14	; () banked
  5834  003B02  85DA               	bsf	218,2,b	;volatile
  5835  003B04                     
  5836                           ; BSR set to: 14
  5837  003B04  0012               	return		;funcret
  5838  003B06                     __end_of_I2C_2_Master_Stop:
  5839                           	callstack 0
  5840                           
  5841 ;; *************** function _I2C_2_Master_Start *****************
  5842 ;; Defined at:
  5843 ;;		line 37 in file "I2C.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;		None
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;		None
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5861 ;;Total ram usage:        0 bytes
  5862 ;; Hardware stack levels used: 1
  5863 ;; Hardware stack levels required when called: 8
  5864 ;; This function calls:
  5865 ;;		_I2C_2_Master_Idle
  5866 ;; This function is called by:
  5867 ;;		_interrupts_clear
  5868 ;;		_colourclick_writetoaddr
  5869 ;;		_colourclick_readR
  5870 ;;		_colourclick_readG
  5871 ;;		_colourclick_readB
  5872 ;;		_colourclick_readC
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text27
  5877  003B06                     __ptext27:
  5878                           	callstack 0
  5879  003B06                     _I2C_2_Master_Start:
  5880                           	callstack 18
  5881  003B06                     
  5882                           ;I2C.c: 38:   I2C_2_Master_Idle();
  5883  003B06  EC66  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5884  003B0A                     
  5885                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  5886  003B0A  010E               	movlb	14	; () banked
  5887  003B0C  81DA               	bsf	218,0,b	;volatile
  5888  003B0E                     
  5889                           ; BSR set to: 14
  5890  003B0E  0012               	return		;funcret
  5891  003B10                     __end_of_I2C_2_Master_Start:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _I2C_2_Master_RepStart *****************
  5895 ;; Defined at:
  5896 ;;		line 46 in file "I2C.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 8
  5917 ;; This function calls:
  5918 ;;		_I2C_2_Master_Idle
  5919 ;; This function is called by:
  5920 ;;		_colourclick_readR
  5921 ;;		_colourclick_readG
  5922 ;;		_colourclick_readB
  5923 ;;		_colourclick_readC
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text28
  5928  003B10                     __ptext28:
  5929                           	callstack 0
  5930  003B10                     _I2C_2_Master_RepStart:
  5931                           	callstack 20
  5932  003B10                     
  5933                           ;I2C.c: 47:   I2C_2_Master_Idle();
  5934  003B10  EC66  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5935  003B14                     
  5936                           ;I2C.c: 48:   SSP2CON2bits.RSEN = 1;
  5937  003B14  010E               	movlb	14	; () banked
  5938  003B16  83DA               	bsf	218,1,b	;volatile
  5939  003B18                     
  5940                           ; BSR set to: 14
  5941  003B18  0012               	return		;funcret
  5942  003B1A                     __end_of_I2C_2_Master_RepStart:
  5943                           	callstack 0
  5944                           
  5945 ;; *************** function _I2C_2_Master_Read *****************
  5946 ;; Defined at:
  5947 ;;		line 73 in file "I2C.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  ack             1    wreg     unsigned char 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  ack             1   10[COMRAM] unsigned char 
  5952 ;;  tmp             1   11[COMRAM] unsigned char 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      unsigned char 
  5955 ;; Registers used:
  5956 ;;		wreg, status,2, status,0, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;Total ram usage:        3 bytes
  5967 ;; Hardware stack levels used: 1
  5968 ;; Hardware stack levels required when called: 8
  5969 ;; This function calls:
  5970 ;;		_I2C_2_Master_Idle
  5971 ;; This function is called by:
  5972 ;;		_colourclick_readR
  5973 ;;		_colourclick_readG
  5974 ;;		_colourclick_readB
  5975 ;;		_colourclick_readC
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text29
  5980  003828                     __ptext29:
  5981                           	callstack 0
  5982  003828                     _I2C_2_Master_Read:
  5983                           	callstack 20
  5984                           
  5985                           ; BSR set to: 14
  5986                           ;incstack = 0
  5987                           ;I2C_2_Master_Read@ack stored from wreg
  5988  003828  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  5989  00382A                     
  5990                           ;I2C.c: 74:   unsigned char tmp;;I2C.c: 75:   I2C_2_Master_Idle();
  5991  00382A  EC66  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5992  00382E                     
  5993                           ;I2C.c: 76:   SSP2CON2bits.RCEN = 1;
  5994  00382E  010E               	movlb	14	; () banked
  5995  003830  87DA               	bsf	218,3,b	;volatile
  5996                           
  5997                           ;I2C.c: 77:   I2C_2_Master_Idle();
  5998  003832  EC66  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5999  003836                     
  6000                           ;I2C.c: 78:   tmp = SSP2BUF;
  6001  003836  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6002                           
  6003                           ;I2C.c: 79:   I2C_2_Master_Idle();
  6004  00383A  EC66  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6005  00383E                     
  6006                           ;I2C.c: 80:   SSP2CON2bits.ACKDT = !ack;
  6007  00383E  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  6008  003840  B4D8               	btfsc	status,2,c
  6009  003842  EF25  F01C         	goto	u2631
  6010  003846  EF29  F01C         	goto	u2630
  6011  00384A                     u2631:
  6012  00384A  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  6013  00384C  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  6014  00384E  EF2A  F01C         	goto	u2648
  6015  003852                     u2630:
  6016  003852  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  6017  003854                     u2648:
  6018  003854  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  6019  003856  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  6020  003858  010E               	movlb	14	; () banked
  6021  00385A  51DA               	movf	218,w,b	;volatile
  6022  00385C  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  6023  00385E  0BDF               	andlw	-33
  6024  003860  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  6025  003862  6FDA               	movwf	218,b	;volatile
  6026  003864                     
  6027                           ; BSR set to: 14
  6028                           ;I2C.c: 81:   SSP2CON2bits.ACKEN = 1;
  6029  003864  89DA               	bsf	218,4,b	;volatile
  6030  003866                     
  6031                           ; BSR set to: 14
  6032                           ;I2C.c: 82:   return tmp;
  6033  003866  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  6034  003868                     
  6035                           ; BSR set to: 14
  6036  003868  0012               	return		;funcret
  6037  00386A                     __end_of_I2C_2_Master_Read:
  6038                           	callstack 0
  6039                           
  6040 ;; *************** function _I2C_2_Master_Idle *****************
  6041 ;; Defined at:
  6042 ;;		line 29 in file "I2C.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;Total ram usage:        1 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; Hardware stack levels required when called: 7
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_I2C_2_Master_Start
  6067 ;;		_I2C_2_Master_RepStart
  6068 ;;		_I2C_2_Master_Stop
  6069 ;;		_I2C_2_Master_Write
  6070 ;;		_I2C_2_Master_Read
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text30
  6075  0038CC                     __ptext30:
  6076                           	callstack 0
  6077  0038CC                     _I2C_2_Master_Idle:
  6078                           	callstack 18
  6079  0038CC                     l449:
  6080  0038CC  010E               	movlb	14	; () banked
  6081  0038CE  B5D8               	btfsc	216,2,b	;volatile
  6082  0038D0  EF6C  F01C         	goto	u2611
  6083  0038D4  EF6E  F01C         	goto	u2610
  6084  0038D8                     u2611:
  6085  0038D8  EF66  F01C         	goto	l449
  6086  0038DC                     u2610:
  6087  0038DC                     
  6088                           ; BSR set to: 14
  6089  0038DC  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6090  0038E0  0E1F               	movlw	31
  6091  0038E2  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  6092  0038E4  A4D8               	btfss	status,2,c
  6093  0038E6  EF77  F01C         	goto	u2621
  6094  0038EA  EF79  F01C         	goto	u2620
  6095  0038EE                     u2621:
  6096  0038EE  EF66  F01C         	goto	l449
  6097  0038F2                     u2620:
  6098  0038F2                     
  6099                           ; BSR set to: 14
  6100  0038F2  0012               	return		;funcret
  6101  0038F4                     __end_of_I2C_2_Master_Idle:
  6102                           	callstack 0
  6103                           
  6104 ;; *************** function _colourclickLEDs_C *****************
  6105 ;; Defined at:
  6106 ;;		line 67 in file "buttons_n_LEDs.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  tog             1    wreg     unsigned char 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  tog             1    8[COMRAM] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6124 ;;Total ram usage:        1 bytes
  6125 ;; Hardware stack levels used: 1
  6126 ;; Hardware stack levels required when called: 7
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_main
  6131 ;;		_colourcards_testingRGBC
  6132 ;;		_colourclick_readRGBC2
  6133 ;;		_colourclickLEDs_init
  6134 ;;		_colourcards_testingRGBC2
  6135 ;;		_colourclick_calibration
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text31
  6140  00398A                     __ptext31:
  6141                           	callstack 0
  6142  00398A                     _colourclickLEDs_C:
  6143                           	callstack 21
  6144                           
  6145                           ; BSR set to: 14
  6146                           ;incstack = 0
  6147                           ;colourclickLEDs_C@tog stored from wreg
  6148  00398A  6E09               	movwf	colourclickLEDs_C@tog^0,c
  6149  00398C                     
  6150                           ;buttons_n_LEDs.c: 68:     LATGbits.LATG1 = tog;
  6151  00398C  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  6152  00398E  D002               	bra	u3735
  6153  003990  927F               	bcf	127,1,c	;volatile
  6154  003992  D001               	bra	u3736
  6155  003994                     u3735:
  6156  003994  827F               	bsf	127,1,c	;volatile
  6157  003996                     u3736:
  6158                           
  6159                           ;buttons_n_LEDs.c: 69:     LATAbits.LATA4 = tog;
  6160  003996  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  6161  003998  D002               	bra	u3745
  6162  00399A  9879               	bcf	121,4,c	;volatile
  6163  00399C  D001               	bra	u3746
  6164  00399E                     u3745:
  6165  00399E  8879               	bsf	121,4,c	;volatile
  6166  0039A0                     u3746:
  6167                           
  6168                           ;buttons_n_LEDs.c: 70:     LATFbits.LATF7 = tog;
  6169  0039A0  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  6170  0039A2  D002               	bra	u3755
  6171  0039A4  9E7E               	bcf	126,7,c	;volatile
  6172  0039A6  D001               	bra	u3756
  6173  0039A8                     u3755:
  6174  0039A8  8E7E               	bsf	126,7,c	;volatile
  6175  0039AA                     u3756:
  6176  0039AA  0012               	return		;funcret
  6177  0039AC                     __end_of_colourclickLEDs_C:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _colourcards_normaliseRGBC *****************
  6181 ;; Defined at:
  6182 ;;		line 214 in file "colour_cards.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  abs             2   13[BANK0 ] PTR struct .
  6185 ;;		 -> colourcards_testingRGBC2@abs(8), main@current(8), 
  6186 ;;  rel             2   15[BANK0 ] PTR struct .
  6187 ;;		 -> colourcards_testingRGBC2@rel(12), colourcards_readRGBC@rel(12), 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  C               2   23[BANK0 ] unsigned int 
  6190 ;;  B               2   21[BANK0 ] unsigned int 
  6191 ;;  G               2   19[BANK0 ] unsigned int 
  6192 ;;  R               2   17[BANK0 ] unsigned int 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6203 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;Total ram usage:       12 bytes
  6207 ;; Hardware stack levels used: 1
  6208 ;; Hardware stack levels required when called: 8
  6209 ;; This function calls:
  6210 ;;		___fldiv
  6211 ;;		___xxtofl
  6212 ;; This function is called by:
  6213 ;;		_colourcards_readRGBC
  6214 ;;		_colourcards_testingRGBC2
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text32
  6219  002C6E                     __ptext32:
  6220                           	callstack 0
  6221  002C6E                     _colourcards_normaliseRGBC:
  6222                           	callstack 20
  6223  002C6E                     
  6224                           ;colour_cards.c: 215:     unsigned int R = abs->R;
  6225  002C6E  C06D  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
  6226  002C72  C06E  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
  6227  002C76  CFDE F071          	movff	postinc2,colourcards_normaliseRGBC@R
  6228  002C7A  CFDD F072          	movff	postdec2,colourcards_normaliseRGBC@R+1
  6229  002C7E                     
  6230                           ;colour_cards.c: 216:     unsigned int G = abs->G;
  6231  002C7E  0100               	movlb	0	; () banked
  6232  002C80  EE20 F002          	lfsr	2,2
  6233  002C84  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  6234  002C86  26D9               	addwf	fsr2l,f,c
  6235  002C88  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  6236  002C8A  22DA               	addwfc	fsr2h,f,c
  6237  002C8C  CFDE F073          	movff	postinc2,colourcards_normaliseRGBC@G
  6238  002C90  CFDD F074          	movff	postdec2,colourcards_normaliseRGBC@G+1
  6239  002C94                     
  6240                           ; BSR set to: 0
  6241                           ;colour_cards.c: 217:     unsigned int B = abs->B;
  6242  002C94  EE20 F004          	lfsr	2,4
  6243  002C98  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  6244  002C9A  26D9               	addwf	fsr2l,f,c
  6245  002C9C  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  6246  002C9E  22DA               	addwfc	fsr2h,f,c
  6247  002CA0  CFDE F075          	movff	postinc2,colourcards_normaliseRGBC@B
  6248  002CA4  CFDD F076          	movff	postdec2,colourcards_normaliseRGBC@B+1
  6249  002CA8                     
  6250                           ; BSR set to: 0
  6251                           ;colour_cards.c: 218:     unsigned int C = abs->C;
  6252  002CA8  EE20 F006          	lfsr	2,6
  6253  002CAC  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  6254  002CAE  26D9               	addwf	fsr2l,f,c
  6255  002CB0  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  6256  002CB2  22DA               	addwfc	fsr2h,f,c
  6257  002CB4  CFDE F077          	movff	postinc2,colourcards_normaliseRGBC@C
  6258  002CB8  CFDD F078          	movff	postdec2,colourcards_normaliseRGBC@C+1
  6259  002CBC                     
  6260                           ; BSR set to: 0
  6261                           ;colour_cards.c: 220:     rel->R = (float)R/(float)C;
  6262  002CBC  C071  F009         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
  6263  002CC0  C072  F00A         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
  6264  002CC4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  6265  002CC6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  6266  002CC8  0E00               	movlw	0
  6267  002CCA  EC5D  F015         	call	___xxtofl
  6268  002CCE  C009  F040         	movff	?___xxtofl,___fldiv@b
  6269  002CD2  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  6270  002CD6  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  6271  002CDA  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  6272  002CDE  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  6273  002CE2  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  6274  002CE6  6A0B               	clrf	(___xxtofl@val+2)^0,c
  6275  002CE8  6A0C               	clrf	(___xxtofl@val+3)^0,c
  6276  002CEA  0E00               	movlw	0
  6277  002CEC  EC5D  F015         	call	___xxtofl
  6278  002CF0  C009  F044         	movff	?___xxtofl,___fldiv@a
  6279  002CF4  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  6280  002CF8  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  6281  002CFC  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  6282  002D00  EC7F  F00F         	call	___fldiv	;wreg free
  6283  002D04  C06F  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
  6284  002D08  C070  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
  6285  002D0C  C040  FFDE         	movff	?___fldiv,postinc2
  6286  002D10  C041  FFDE         	movff	?___fldiv+1,postinc2
  6287  002D14  C042  FFDE         	movff	?___fldiv+2,postinc2
  6288  002D18  C043  FFDE         	movff	?___fldiv+3,postinc2
  6289  002D1C                     
  6290                           ;colour_cards.c: 221:     rel->G = (float)G/(float)C;
  6291  002D1C  C073  F009         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
  6292  002D20  C074  F00A         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
  6293  002D24  6A0B               	clrf	(___xxtofl@val+2)^0,c
  6294  002D26  6A0C               	clrf	(___xxtofl@val+3)^0,c
  6295  002D28  0E00               	movlw	0
  6296  002D2A  EC5D  F015         	call	___xxtofl
  6297  002D2E  C009  F040         	movff	?___xxtofl,___fldiv@b
  6298  002D32  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  6299  002D36  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  6300  002D3A  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  6301  002D3E  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  6302  002D42  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  6303  002D46  6A0B               	clrf	(___xxtofl@val+2)^0,c
  6304  002D48  6A0C               	clrf	(___xxtofl@val+3)^0,c
  6305  002D4A  0E00               	movlw	0
  6306  002D4C  EC5D  F015         	call	___xxtofl
  6307  002D50  C009  F044         	movff	?___xxtofl,___fldiv@a
  6308  002D54  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  6309  002D58  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  6310  002D5C  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  6311  002D60  EC7F  F00F         	call	___fldiv	;wreg free
  6312  002D64  0100               	movlb	0	; () banked
  6313  002D66  EE20 F004          	lfsr	2,4
  6314  002D6A  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  6315  002D6C  26D9               	addwf	fsr2l,f,c
  6316  002D6E  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  6317  002D70  22DA               	addwfc	fsr2h,f,c
  6318  002D72  C040  FFDE         	movff	?___fldiv,postinc2
  6319  002D76  C041  FFDE         	movff	?___fldiv+1,postinc2
  6320  002D7A  C042  FFDE         	movff	?___fldiv+2,postinc2
  6321  002D7E  C043  FFDE         	movff	?___fldiv+3,postinc2
  6322  002D82                     
  6323                           ; BSR set to: 0
  6324                           ;colour_cards.c: 222:     rel->B = (float)B/(float)C;
  6325  002D82  C075  F009         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
  6326  002D86  C076  F00A         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
  6327  002D8A  6A0B               	clrf	(___xxtofl@val+2)^0,c
  6328  002D8C  6A0C               	clrf	(___xxtofl@val+3)^0,c
  6329  002D8E  0E00               	movlw	0
  6330  002D90  EC5D  F015         	call	___xxtofl
  6331  002D94  C009  F040         	movff	?___xxtofl,___fldiv@b
  6332  002D98  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  6333  002D9C  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  6334  002DA0  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  6335  002DA4  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  6336  002DA8  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  6337  002DAC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  6338  002DAE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  6339  002DB0  0E00               	movlw	0
  6340  002DB2  EC5D  F015         	call	___xxtofl
  6341  002DB6  C009  F044         	movff	?___xxtofl,___fldiv@a
  6342  002DBA  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  6343  002DBE  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  6344  002DC2  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  6345  002DC6  EC7F  F00F         	call	___fldiv	;wreg free
  6346  002DCA  0100               	movlb	0	; () banked
  6347  002DCC  EE20 F008          	lfsr	2,8
  6348  002DD0  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  6349  002DD2  26D9               	addwf	fsr2l,f,c
  6350  002DD4  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  6351  002DD6  22DA               	addwfc	fsr2h,f,c
  6352  002DD8  C040  FFDE         	movff	?___fldiv,postinc2
  6353  002DDC  C041  FFDE         	movff	?___fldiv+1,postinc2
  6354  002DE0  C042  FFDE         	movff	?___fldiv+2,postinc2
  6355  002DE4  C043  FFDE         	movff	?___fldiv+3,postinc2
  6356  002DE8                     
  6357                           ; BSR set to: 0
  6358  002DE8  0012               	return		;funcret
  6359  002DEA                     __end_of_colourcards_normaliseRGBC:
  6360                           	callstack 0
  6361                           
  6362 ;; *************** function ___xxtofl *****************
  6363 ;; Defined at:
  6364 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  sign            1    wreg     unsigned char 
  6367 ;;  val             4    8[COMRAM] long 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  sign            1   16[COMRAM] unsigned char 
  6370 ;;  arg             4   18[COMRAM] unsigned long 
  6371 ;;  exp             1   17[COMRAM] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  4    8[COMRAM] unsigned char 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6382 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6384 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6385 ;;Total ram usage:       14 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; Hardware stack levels required when called: 7
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_colourcards_normaliseRGBC
  6392 ;;		_left
  6393 ;;		_right
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text33
  6398  002ABA                     __ptext33:
  6399                           	callstack 0
  6400  002ABA                     ___xxtofl:
  6401                           	callstack 19
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;incstack = 0
  6405                           ;___xxtofl@sign stored from wreg
  6406  002ABA  6E11               	movwf	___xxtofl@sign^0,c
  6407  002ABC  5011               	movf	___xxtofl@sign^0,w,c
  6408  002ABE  B4D8               	btfsc	status,2,c
  6409  002AC0  EF64  F015         	goto	u3611
  6410  002AC4  EF66  F015         	goto	u3610
  6411  002AC8                     u3611:
  6412  002AC8  EF88  F015         	goto	l1418
  6413  002ACC                     u3610:
  6414  002ACC  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  6415  002ACE  EF6D  F015         	goto	u3620
  6416  002AD2  EF6B  F015         	goto	u3621
  6417  002AD6                     u3621:
  6418  002AD6  EF88  F015         	goto	l1418
  6419  002ADA                     u3620:
  6420  002ADA  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  6421  002ADE  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  6422  002AE2  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  6423  002AE6  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  6424  002AEA  1E0D               	comf	??___xxtofl^0,f,c
  6425  002AEC  1E0E               	comf	(??___xxtofl+1)^0,f,c
  6426  002AEE  1E0F               	comf	(??___xxtofl+2)^0,f,c
  6427  002AF0  1E10               	comf	(??___xxtofl+3)^0,f,c
  6428  002AF2  2A0D               	incf	??___xxtofl^0,f,c
  6429  002AF4  0E00               	movlw	0
  6430  002AF6  220E               	addwfc	(??___xxtofl+1)^0,f,c
  6431  002AF8  220F               	addwfc	(??___xxtofl+2)^0,f,c
  6432  002AFA  2210               	addwfc	(??___xxtofl+3)^0,f,c
  6433  002AFC  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  6434  002B00  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  6435  002B04  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  6436  002B08  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  6437  002B0C  EF90  F015         	goto	l3707
  6438  002B10                     l1418:
  6439  002B10  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  6440  002B14  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6441  002B18  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6442  002B1C  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6443  002B20                     l3707:
  6444  002B20  5009               	movf	___xxtofl@val^0,w,c
  6445  002B22  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  6446  002B24  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  6447  002B26  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  6448  002B28  A4D8               	btfss	status,2,c
  6449  002B2A  EF99  F015         	goto	u3631
  6450  002B2E  EF9B  F015         	goto	u3630
  6451  002B32                     u3631:
  6452  002B32  EFA5  F015         	goto	l3713
  6453  002B36                     u3630:
  6454  002B36  0E00               	movlw	0
  6455  002B38  6E09               	movwf	?___xxtofl^0,c
  6456  002B3A  0E00               	movlw	0
  6457  002B3C  6E0A               	movwf	(?___xxtofl+1)^0,c
  6458  002B3E  0E00               	movlw	0
  6459  002B40  6E0B               	movwf	(?___xxtofl+2)^0,c
  6460  002B42  0E00               	movlw	0
  6461  002B44  6E0C               	movwf	(?___xxtofl+3)^0,c
  6462  002B46  EF36  F016         	goto	l1421
  6463  002B4A                     l3713:
  6464  002B4A  0E96               	movlw	150
  6465  002B4C  6E12               	movwf	___xxtofl@exp^0,c
  6466  002B4E  EFAF  F015         	goto	l3717
  6467  002B52                     l3715:
  6468  002B52  2A12               	incf	___xxtofl@exp^0,f,c
  6469  002B54  90D8               	bcf	status,0,c
  6470  002B56  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  6471  002B58  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  6472  002B5A  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  6473  002B5C  3213               	rrcf	___xxtofl@arg^0,f,c
  6474  002B5E                     l3717:
  6475  002B5E  0E00               	movlw	0
  6476  002B60  1413               	andwf	___xxtofl@arg^0,w,c
  6477  002B62  6E0D               	movwf	??___xxtofl^0,c
  6478  002B64  0E00               	movlw	0
  6479  002B66  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  6480  002B68  6E0E               	movwf	(??___xxtofl+1)^0,c
  6481  002B6A  0E00               	movlw	0
  6482  002B6C  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  6483  002B6E  6E0F               	movwf	(??___xxtofl+2)^0,c
  6484  002B70  0EFE               	movlw	254
  6485  002B72  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  6486  002B74  6E10               	movwf	(??___xxtofl+3)^0,c
  6487  002B76  500D               	movf	??___xxtofl^0,w,c
  6488  002B78  100E               	iorwf	(??___xxtofl+1)^0,w,c
  6489  002B7A  100F               	iorwf	(??___xxtofl+2)^0,w,c
  6490  002B7C  1010               	iorwf	(??___xxtofl+3)^0,w,c
  6491  002B7E  A4D8               	btfss	status,2,c
  6492  002B80  EFC4  F015         	goto	u3641
  6493  002B84  EFC6  F015         	goto	u3640
  6494  002B88                     u3641:
  6495  002B88  EFA9  F015         	goto	l3715
  6496  002B8C                     u3640:
  6497  002B8C  EFD4  F015         	goto	l1425
  6498  002B90                     l3719:
  6499  002B90  2A12               	incf	___xxtofl@exp^0,f,c
  6500  002B92  0E01               	movlw	1
  6501  002B94  2613               	addwf	___xxtofl@arg^0,f,c
  6502  002B96  0E00               	movlw	0
  6503  002B98  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  6504  002B9A  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  6505  002B9C  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  6506  002B9E  90D8               	bcf	status,0,c
  6507  002BA0  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  6508  002BA2  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  6509  002BA4  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  6510  002BA6  3213               	rrcf	___xxtofl@arg^0,f,c
  6511  002BA8                     l1425:
  6512  002BA8  0E00               	movlw	0
  6513  002BAA  1413               	andwf	___xxtofl@arg^0,w,c
  6514  002BAC  6E0D               	movwf	??___xxtofl^0,c
  6515  002BAE  0E00               	movlw	0
  6516  002BB0  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  6517  002BB2  6E0E               	movwf	(??___xxtofl+1)^0,c
  6518  002BB4  0E00               	movlw	0
  6519  002BB6  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  6520  002BB8  6E0F               	movwf	(??___xxtofl+2)^0,c
  6521  002BBA  0EFF               	movlw	255
  6522  002BBC  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  6523  002BBE  6E10               	movwf	(??___xxtofl+3)^0,c
  6524  002BC0  500D               	movf	??___xxtofl^0,w,c
  6525  002BC2  100E               	iorwf	(??___xxtofl+1)^0,w,c
  6526  002BC4  100F               	iorwf	(??___xxtofl+2)^0,w,c
  6527  002BC6  1010               	iorwf	(??___xxtofl+3)^0,w,c
  6528  002BC8  A4D8               	btfss	status,2,c
  6529  002BCA  EFE9  F015         	goto	u3651
  6530  002BCE  EFEB  F015         	goto	u3650
  6531  002BD2                     u3651:
  6532  002BD2  EFC8  F015         	goto	l3719
  6533  002BD6                     u3650:
  6534  002BD6  EFF3  F015         	goto	l3727
  6535  002BDA                     l3725:
  6536  002BDA  0612               	decf	___xxtofl@exp^0,f,c
  6537  002BDC  90D8               	bcf	status,0,c
  6538  002BDE  3613               	rlcf	___xxtofl@arg^0,f,c
  6539  002BE0  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  6540  002BE2  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  6541  002BE4  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  6542  002BE6                     l3727:
  6543  002BE6  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  6544  002BE8  EFF8  F015         	goto	u3661
  6545  002BEC  EFFA  F015         	goto	u3660
  6546  002BF0                     u3661:
  6547  002BF0  EF02  F016         	goto	l1432
  6548  002BF4                     u3660:
  6549  002BF4  0E02               	movlw	2
  6550  002BF6  6012               	cpfslt	___xxtofl@exp^0,c
  6551  002BF8  EF00  F016         	goto	u3671
  6552  002BFC  EF02  F016         	goto	u3670
  6553  002C00                     u3671:
  6554  002C00  EFED  F015         	goto	l3725
  6555  002C04                     u3670:
  6556  002C04                     l1432:
  6557  002C04  B012               	btfsc	___xxtofl@exp^0,0,c
  6558  002C06  EF07  F016         	goto	u3681
  6559  002C0A  EF09  F016         	goto	u3680
  6560  002C0E                     u3681:
  6561  002C0E  EF0A  F016         	goto	l3733
  6562  002C12                     u3680:
  6563  002C12  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  6564  002C14                     l3733:
  6565  002C14  90D8               	bcf	status,0,c
  6566  002C16  3212               	rrcf	___xxtofl@exp^0,f,c
  6567  002C18  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  6568  002C1C  6A0E               	clrf	(??___xxtofl+1)^0,c
  6569  002C1E  6A0F               	clrf	(??___xxtofl+2)^0,c
  6570  002C20  6A10               	clrf	(??___xxtofl+3)^0,c
  6571  002C22  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  6572  002C26  6A0F               	clrf	(??___xxtofl+2)^0,c
  6573  002C28  6A0E               	clrf	(??___xxtofl+1)^0,c
  6574  002C2A  6A0D               	clrf	??___xxtofl^0,c
  6575  002C2C  500D               	movf	??___xxtofl^0,w,c
  6576  002C2E  1213               	iorwf	___xxtofl@arg^0,f,c
  6577  002C30  500E               	movf	(??___xxtofl+1)^0,w,c
  6578  002C32  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  6579  002C34  500F               	movf	(??___xxtofl+2)^0,w,c
  6580  002C36  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  6581  002C38  5010               	movf	(??___xxtofl+3)^0,w,c
  6582  002C3A  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  6583  002C3C  5011               	movf	___xxtofl@sign^0,w,c
  6584  002C3E  B4D8               	btfsc	status,2,c
  6585  002C40  EF24  F016         	goto	u3691
  6586  002C44  EF26  F016         	goto	u3690
  6587  002C48                     u3691:
  6588  002C48  EF2E  F016         	goto	l3743
  6589  002C4C                     u3690:
  6590  002C4C  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  6591  002C4E  EF2D  F016         	goto	u3700
  6592  002C52  EF2B  F016         	goto	u3701
  6593  002C56                     u3701:
  6594  002C56  EF2E  F016         	goto	l3743
  6595  002C5A                     u3700:
  6596  002C5A  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  6597  002C5C                     l3743:
  6598  002C5C  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  6599  002C60  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  6600  002C64  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  6601  002C68  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  6602  002C6C                     l1421:
  6603  002C6C  0012               	return		;funcret
  6604  002C6E                     __end_of___xxtofl:
  6605                           	callstack 0
  6606                           
  6607 ;; *************** function ___fldiv *****************
  6608 ;; Defined at:
  6609 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  b               4   63[COMRAM] unsigned char 
  6612 ;;  a               4   67[COMRAM] unsigned char 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  grs             4    7[BANK0 ] unsigned long 
  6615 ;;  rem             4    0[BANK0 ] unsigned long 
  6616 ;;  new_exp         2    5[BANK0 ] short 
  6617 ;;  aexp            1   12[BANK0 ] unsigned char 
  6618 ;;  bexp            1   11[BANK0 ] unsigned char 
  6619 ;;  sign            1    4[BANK0 ] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  4   63[COMRAM] unsigned char 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6629 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6631 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6632 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6633 ;;Total ram usage:       25 bytes
  6634 ;; Hardware stack levels used: 1
  6635 ;; Hardware stack levels required when called: 7
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_colourcards_normaliseRGBC
  6640 ;;		_left
  6641 ;;		_right
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text34
  6646  001EFE                     __ptext34:
  6647                           	callstack 0
  6648  001EFE                     ___fldiv:
  6649                           	callstack 19
  6650  001EFE  5043               	movf	(___fldiv@b+3)^0,w,c
  6651  001F00  0B80               	andlw	128
  6652  001F02  0100               	movlb	0	; () banked
  6653  001F04  6F64               	movwf	___fldiv@sign& (0+255),b
  6654  001F06  5043               	movf	(___fldiv@b+3)^0,w,c
  6655  001F08  2443               	addwf	(___fldiv@b+3)^0,w,c
  6656  001F0A  6F6B               	movwf	___fldiv@bexp& (0+255),b
  6657  001F0C                     
  6658                           ; BSR set to: 0
  6659  001F0C  AE42               	btfss	(___fldiv@b+2)^0,7,c
  6660  001F0E  EF8B  F00F         	goto	u3141
  6661  001F12  EF8D  F00F         	goto	u3140
  6662  001F16                     u3141:
  6663  001F16  EF8E  F00F         	goto	l3417
  6664  001F1A                     u3140:
  6665  001F1A                     
  6666                           ; BSR set to: 0
  6667  001F1A  816B               	bsf	___fldiv@bexp& (0+255),0,b
  6668  001F1C                     l3417:
  6669                           
  6670                           ; BSR set to: 0
  6671  001F1C  516B               	movf	___fldiv@bexp& (0+255),w,b
  6672  001F1E  B4D8               	btfsc	status,2,c
  6673  001F20  EF94  F00F         	goto	u3151
  6674  001F24  EF96  F00F         	goto	u3150
  6675  001F28                     u3151:
  6676  001F28  EFAB  F00F         	goto	l3427
  6677  001F2C                     u3150:
  6678  001F2C                     
  6679                           ; BSR set to: 0
  6680  001F2C  296B               	incf	___fldiv@bexp& (0+255),w,b
  6681  001F2E  A4D8               	btfss	status,2,c
  6682  001F30  EF9C  F00F         	goto	u3161
  6683  001F34  EF9E  F00F         	goto	u3160
  6684  001F38                     u3161:
  6685  001F38  EFA6  F00F         	goto	l3423
  6686  001F3C                     u3160:
  6687  001F3C                     
  6688                           ; BSR set to: 0
  6689  001F3C  0E00               	movlw	0
  6690  001F3E  6E40               	movwf	___fldiv@b^0,c
  6691  001F40  0E00               	movlw	0
  6692  001F42  6E41               	movwf	(___fldiv@b+1)^0,c
  6693  001F44  0E00               	movlw	0
  6694  001F46  6E42               	movwf	(___fldiv@b+2)^0,c
  6695  001F48  0E00               	movlw	0
  6696  001F4A  6E43               	movwf	(___fldiv@b+3)^0,c
  6697  001F4C                     l3423:
  6698                           
  6699                           ; BSR set to: 0
  6700  001F4C  8E42               	bsf	(___fldiv@b+2)^0,7,c
  6701  001F4E                     
  6702                           ; BSR set to: 0
  6703  001F4E  0E00               	movlw	0
  6704  001F50  6E43               	movwf	(___fldiv@b+3)^0,c
  6705  001F52  EFB3  F00F         	goto	l3429
  6706  001F56                     l3427:
  6707                           
  6708                           ; BSR set to: 0
  6709  001F56  0E00               	movlw	0
  6710  001F58  6E40               	movwf	___fldiv@b^0,c
  6711  001F5A  0E00               	movlw	0
  6712  001F5C  6E41               	movwf	(___fldiv@b+1)^0,c
  6713  001F5E  0E00               	movlw	0
  6714  001F60  6E42               	movwf	(___fldiv@b+2)^0,c
  6715  001F62  0E00               	movlw	0
  6716  001F64  6E43               	movwf	(___fldiv@b+3)^0,c
  6717  001F66                     l3429:
  6718                           
  6719                           ; BSR set to: 0
  6720  001F66  5047               	movf	(___fldiv@a+3)^0,w,c
  6721  001F68  0B80               	andlw	128
  6722  001F6A  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  6723  001F6C                     
  6724                           ; BSR set to: 0
  6725  001F6C  5047               	movf	(___fldiv@a+3)^0,w,c
  6726  001F6E  2447               	addwf	(___fldiv@a+3)^0,w,c
  6727  001F70  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6728  001F72                     
  6729                           ; BSR set to: 0
  6730  001F72  AE46               	btfss	(___fldiv@a+2)^0,7,c
  6731  001F74  EFBE  F00F         	goto	u3171
  6732  001F78  EFC0  F00F         	goto	u3170
  6733  001F7C                     u3171:
  6734  001F7C  EFC1  F00F         	goto	l3437
  6735  001F80                     u3170:
  6736  001F80                     
  6737                           ; BSR set to: 0
  6738  001F80  816C               	bsf	___fldiv@aexp& (0+255),0,b
  6739  001F82                     l3437:
  6740                           
  6741                           ; BSR set to: 0
  6742  001F82  516C               	movf	___fldiv@aexp& (0+255),w,b
  6743  001F84  B4D8               	btfsc	status,2,c
  6744  001F86  EFC7  F00F         	goto	u3181
  6745  001F8A  EFC9  F00F         	goto	u3180
  6746  001F8E                     u3181:
  6747  001F8E  EFDE  F00F         	goto	l3447
  6748  001F92                     u3180:
  6749  001F92                     
  6750                           ; BSR set to: 0
  6751  001F92  296C               	incf	___fldiv@aexp& (0+255),w,b
  6752  001F94  A4D8               	btfss	status,2,c
  6753  001F96  EFCF  F00F         	goto	u3191
  6754  001F9A  EFD1  F00F         	goto	u3190
  6755  001F9E                     u3191:
  6756  001F9E  EFD9  F00F         	goto	l3443
  6757  001FA2                     u3190:
  6758  001FA2                     
  6759                           ; BSR set to: 0
  6760  001FA2  0E00               	movlw	0
  6761  001FA4  6E44               	movwf	___fldiv@a^0,c
  6762  001FA6  0E00               	movlw	0
  6763  001FA8  6E45               	movwf	(___fldiv@a+1)^0,c
  6764  001FAA  0E00               	movlw	0
  6765  001FAC  6E46               	movwf	(___fldiv@a+2)^0,c
  6766  001FAE  0E00               	movlw	0
  6767  001FB0  6E47               	movwf	(___fldiv@a+3)^0,c
  6768  001FB2                     l3443:
  6769                           
  6770                           ; BSR set to: 0
  6771  001FB2  8E46               	bsf	(___fldiv@a+2)^0,7,c
  6772  001FB4                     
  6773                           ; BSR set to: 0
  6774  001FB4  0E00               	movlw	0
  6775  001FB6  6E47               	movwf	(___fldiv@a+3)^0,c
  6776  001FB8  EFE6  F00F         	goto	l3449
  6777  001FBC                     l3447:
  6778                           
  6779                           ; BSR set to: 0
  6780  001FBC  0E00               	movlw	0
  6781  001FBE  6E44               	movwf	___fldiv@a^0,c
  6782  001FC0  0E00               	movlw	0
  6783  001FC2  6E45               	movwf	(___fldiv@a+1)^0,c
  6784  001FC4  0E00               	movlw	0
  6785  001FC6  6E46               	movwf	(___fldiv@a+2)^0,c
  6786  001FC8  0E00               	movlw	0
  6787  001FCA  6E47               	movwf	(___fldiv@a+3)^0,c
  6788  001FCC                     l3449:
  6789                           
  6790                           ; BSR set to: 0
  6791  001FCC  5044               	movf	___fldiv@a^0,w,c
  6792  001FCE  1045               	iorwf	(___fldiv@a+1)^0,w,c
  6793  001FD0  1046               	iorwf	(___fldiv@a+2)^0,w,c
  6794  001FD2  1047               	iorwf	(___fldiv@a+3)^0,w,c
  6795  001FD4  A4D8               	btfss	status,2,c
  6796  001FD6  EFEF  F00F         	goto	u3201
  6797  001FDA  EFF1  F00F         	goto	u3200
  6798  001FDE                     u3201:
  6799  001FDE  EF09  F010         	goto	l3461
  6800  001FE2                     u3200:
  6801  001FE2                     
  6802                           ; BSR set to: 0
  6803  001FE2  0E00               	movlw	0
  6804  001FE4  6E40               	movwf	___fldiv@b^0,c
  6805  001FE6  0E00               	movlw	0
  6806  001FE8  6E41               	movwf	(___fldiv@b+1)^0,c
  6807  001FEA  0E00               	movlw	0
  6808  001FEC  6E42               	movwf	(___fldiv@b+2)^0,c
  6809  001FEE  0E00               	movlw	0
  6810  001FF0  6E43               	movwf	(___fldiv@b+3)^0,c
  6811  001FF2                     
  6812                           ; BSR set to: 0
  6813  001FF2  0E80               	movlw	128
  6814  001FF4  1242               	iorwf	(___fldiv@b+2)^0,f,c
  6815  001FF6  0E7F               	movlw	127
  6816  001FF8  1243               	iorwf	(___fldiv@b+3)^0,f,c
  6817  001FFA                     l3455:
  6818                           
  6819                           ; BSR set to: 0
  6820  001FFA  5164               	movf	___fldiv@sign& (0+255),w,b
  6821  001FFC  1243               	iorwf	(___fldiv@b+3)^0,f,c
  6822  001FFE                     
  6823                           ; BSR set to: 0
  6824  001FFE  C040  F040         	movff	___fldiv@b,?___fldiv
  6825  002002  C041  F041         	movff	___fldiv@b+1,?___fldiv+1
  6826  002006  C042  F042         	movff	___fldiv@b+2,?___fldiv+2
  6827  00200A  C043  F043         	movff	___fldiv@b+3,?___fldiv+3
  6828  00200E  EF4C  F011         	goto	l1345
  6829  002012                     l3461:
  6830                           
  6831                           ; BSR set to: 0
  6832  002012  516B               	movf	___fldiv@bexp& (0+255),w,b
  6833  002014  A4D8               	btfss	status,2,c
  6834  002016  EF0F  F010         	goto	u3211
  6835  00201A  EF11  F010         	goto	u3210
  6836  00201E                     u3211:
  6837  00201E  EF1B  F010         	goto	l3469
  6838  002022                     u3210:
  6839  002022                     
  6840                           ; BSR set to: 0
  6841  002022  0E00               	movlw	0
  6842  002024  6E40               	movwf	?___fldiv^0,c
  6843  002026  0E00               	movlw	0
  6844  002028  6E41               	movwf	(?___fldiv+1)^0,c
  6845  00202A  0E00               	movlw	0
  6846  00202C  6E42               	movwf	(?___fldiv+2)^0,c
  6847  00202E  0E00               	movlw	0
  6848  002030  6E43               	movwf	(?___fldiv+3)^0,c
  6849  002032  EF4C  F011         	goto	l1345
  6850  002036                     l3469:
  6851                           
  6852                           ; BSR set to: 0
  6853  002036  516C               	movf	___fldiv@aexp& (0+255),w,b
  6854  002038  C06B  F048         	movff	___fldiv@bexp,??___fldiv
  6855  00203C  6A49               	clrf	(??___fldiv+1)^0,c
  6856  00203E  5E48               	subwf	??___fldiv^0,f,c
  6857  002040  0E00               	movlw	0
  6858  002042  5A49               	subwfb	(??___fldiv+1)^0,f,c
  6859  002044  0E7F               	movlw	127
  6860  002046  2448               	addwf	??___fldiv^0,w,c
  6861  002048  6F65               	movwf	___fldiv@new_exp& (0+255),b
  6862  00204A  0E00               	movlw	0
  6863  00204C  2049               	addwfc	(??___fldiv+1)^0,w,c
  6864  00204E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6865  002050                     
  6866                           ; BSR set to: 0
  6867  002050  C040  F060         	movff	___fldiv@b,___fldiv@rem
  6868  002054  C041  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  6869  002058  C042  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  6870  00205C  C043  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  6871  002060                     
  6872                           ; BSR set to: 0
  6873  002060  0E00               	movlw	0
  6874  002062  6E40               	movwf	___fldiv@b^0,c
  6875  002064  0E00               	movlw	0
  6876  002066  6E41               	movwf	(___fldiv@b+1)^0,c
  6877  002068  0E00               	movlw	0
  6878  00206A  6E42               	movwf	(___fldiv@b+2)^0,c
  6879  00206C  0E00               	movlw	0
  6880  00206E  6E43               	movwf	(___fldiv@b+3)^0,c
  6881  002070                     
  6882                           ; BSR set to: 0
  6883  002070  0E00               	movlw	0
  6884  002072  6F67               	movwf	___fldiv@grs& (0+255),b
  6885  002074  0E00               	movlw	0
  6886  002076  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  6887  002078  0E00               	movlw	0
  6888  00207A  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  6889  00207C  0E00               	movlw	0
  6890  00207E  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  6891  002080                     
  6892                           ; BSR set to: 0
  6893  002080  0E00               	movlw	0
  6894  002082  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6895  002084  EF7C  F010         	goto	l1347
  6896  002088                     l3479:
  6897                           
  6898                           ; BSR set to: 0
  6899  002088  516C               	movf	___fldiv@aexp& (0+255),w,b
  6900  00208A  B4D8               	btfsc	status,2,c
  6901  00208C  EF4A  F010         	goto	u3221
  6902  002090  EF4C  F010         	goto	u3220
  6903  002094                     u3221:
  6904  002094  EF63  F010         	goto	l3487
  6905  002098                     u3220:
  6906  002098                     
  6907                           ; BSR set to: 0
  6908  002098  90D8               	bcf	status,0,c
  6909  00209A  3760               	rlcf	___fldiv@rem& (0+255),f,b
  6910  00209C  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6911  00209E  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6912  0020A0  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6913  0020A2  90D8               	bcf	status,0,c
  6914  0020A4  3640               	rlcf	___fldiv@b^0,f,c
  6915  0020A6  3641               	rlcf	(___fldiv@b+1)^0,f,c
  6916  0020A8  3642               	rlcf	(___fldiv@b+2)^0,f,c
  6917  0020AA  3643               	rlcf	(___fldiv@b+3)^0,f,c
  6918  0020AC                     
  6919                           ; BSR set to: 0
  6920  0020AC  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6921  0020AE  EF5B  F010         	goto	u3231
  6922  0020B2  EF5D  F010         	goto	u3230
  6923  0020B6                     u3231:
  6924  0020B6  EF5E  F010         	goto	l1350
  6925  0020BA                     u3230:
  6926  0020BA                     
  6927                           ; BSR set to: 0
  6928  0020BA  8040               	bsf	___fldiv@b^0,0,c
  6929  0020BC                     l1350:
  6930                           
  6931                           ; BSR set to: 0
  6932  0020BC  90D8               	bcf	status,0,c
  6933  0020BE  3767               	rlcf	___fldiv@grs& (0+255),f,b
  6934  0020C0  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6935  0020C2  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6936  0020C4  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6937  0020C6                     l3487:
  6938                           
  6939                           ; BSR set to: 0
  6940  0020C6  5044               	movf	___fldiv@a^0,w,c
  6941  0020C8  5D60               	subwf	___fldiv@rem& (0+255),w,b
  6942  0020CA  5045               	movf	(___fldiv@a+1)^0,w,c
  6943  0020CC  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6944  0020CE  5046               	movf	(___fldiv@a+2)^0,w,c
  6945  0020D0  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6946  0020D2  5047               	movf	(___fldiv@a+3)^0,w,c
  6947  0020D4  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6948  0020D6  A0D8               	btfss	status,0,c
  6949  0020D8  EF70  F010         	goto	u3241
  6950  0020DC  EF72  F010         	goto	u3240
  6951  0020E0                     u3241:
  6952  0020E0  EF7B  F010         	goto	l3493
  6953  0020E4                     u3240:
  6954  0020E4                     
  6955                           ; BSR set to: 0
  6956  0020E4  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6957  0020E6                     
  6958                           ; BSR set to: 0
  6959  0020E6  5044               	movf	___fldiv@a^0,w,c
  6960  0020E8  5F60               	subwf	___fldiv@rem& (0+255),f,b
  6961  0020EA  5045               	movf	(___fldiv@a+1)^0,w,c
  6962  0020EC  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6963  0020EE  5046               	movf	(___fldiv@a+2)^0,w,c
  6964  0020F0  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6965  0020F2  5047               	movf	(___fldiv@a+3)^0,w,c
  6966  0020F4  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6967  0020F6                     l3493:
  6968                           
  6969                           ; BSR set to: 0
  6970  0020F6  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  6971  0020F8                     l1347:
  6972                           
  6973                           ; BSR set to: 0
  6974  0020F8  0E19               	movlw	25
  6975  0020FA  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  6976  0020FC  EF82  F010         	goto	u3251
  6977  002100  EF84  F010         	goto	u3250
  6978  002104                     u3251:
  6979  002104  EF44  F010         	goto	l3479
  6980  002108                     u3250:
  6981  002108                     
  6982                           ; BSR set to: 0
  6983  002108  5160               	movf	___fldiv@rem& (0+255),w,b
  6984  00210A  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6985  00210C  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6986  00210E  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6987  002110  B4D8               	btfsc	status,2,c
  6988  002112  EF8D  F010         	goto	u3261
  6989  002116  EF8F  F010         	goto	u3260
  6990  00211A                     u3261:
  6991  00211A  EFA7  F010         	goto	l3505
  6992  00211E                     u3260:
  6993  00211E                     
  6994                           ; BSR set to: 0
  6995  00211E  8167               	bsf	___fldiv@grs& (0+255),0,b
  6996  002120  EFA7  F010         	goto	l3505
  6997  002124                     l3499:
  6998                           
  6999                           ; BSR set to: 0
  7000  002124  90D8               	bcf	status,0,c
  7001  002126  3640               	rlcf	___fldiv@b^0,f,c
  7002  002128  3641               	rlcf	(___fldiv@b+1)^0,f,c
  7003  00212A  3642               	rlcf	(___fldiv@b+2)^0,f,c
  7004  00212C  3643               	rlcf	(___fldiv@b+3)^0,f,c
  7005  00212E                     
  7006                           ; BSR set to: 0
  7007  00212E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7008  002130  EF9C  F010         	goto	u3271
  7009  002134  EF9E  F010         	goto	u3270
  7010  002138                     u3271:
  7011  002138  EF9F  F010         	goto	l1356
  7012  00213C                     u3270:
  7013  00213C                     
  7014                           ; BSR set to: 0
  7015  00213C  8040               	bsf	___fldiv@b^0,0,c
  7016  00213E                     l1356:
  7017                           
  7018                           ; BSR set to: 0
  7019  00213E  90D8               	bcf	status,0,c
  7020  002140  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7021  002142  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7022  002144  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7023  002146  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7024  002148  0765               	decf	___fldiv@new_exp& (0+255),f,b
  7025  00214A  A0D8               	btfss	status,0,c
  7026  00214C  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7027  00214E                     l3505:
  7028                           
  7029                           ; BSR set to: 0
  7030  00214E  AE42               	btfss	(___fldiv@b+2)^0,7,c
  7031  002150  EFAC  F010         	goto	u3281
  7032  002154  EFAE  F010         	goto	u3280
  7033  002158                     u3281:
  7034  002158  EF92  F010         	goto	l3499
  7035  00215C                     u3280:
  7036  00215C                     
  7037                           ; BSR set to: 0
  7038  00215C  0E00               	movlw	0
  7039  00215E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7040  002160                     
  7041                           ; BSR set to: 0
  7042  002160  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7043  002162  EFB5  F010         	goto	u3291
  7044  002166  EFB7  F010         	goto	u3290
  7045  00216A                     u3291:
  7046  00216A  EFDB  F010         	goto	l1358
  7047  00216E                     u3290:
  7048  00216E                     
  7049                           ; BSR set to: 0
  7050  00216E  0EFF               	movlw	255
  7051  002170  1567               	andwf	___fldiv@grs& (0+255),w,b
  7052  002172  6E48               	movwf	??___fldiv^0,c
  7053  002174  0EFF               	movlw	255
  7054  002176  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7055  002178  6E49               	movwf	(??___fldiv+1)^0,c
  7056  00217A  0EFF               	movlw	255
  7057  00217C  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7058  00217E  6E4A               	movwf	(??___fldiv+2)^0,c
  7059  002180  0E7F               	movlw	127
  7060  002182  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7061  002184  6E4B               	movwf	(??___fldiv+3)^0,c
  7062  002186  5048               	movf	??___fldiv^0,w,c
  7063  002188  1049               	iorwf	(??___fldiv+1)^0,w,c
  7064  00218A  104A               	iorwf	(??___fldiv+2)^0,w,c
  7065  00218C  104B               	iorwf	(??___fldiv+3)^0,w,c
  7066  00218E  B4D8               	btfsc	status,2,c
  7067  002190  EFCC  F010         	goto	u3301
  7068  002194  EFCE  F010         	goto	u3300
  7069  002198                     u3301:
  7070  002198  EFD2  F010         	goto	l1359
  7071  00219C                     u3300:
  7072  00219C                     l3513:
  7073                           
  7074                           ; BSR set to: 0
  7075  00219C  0E01               	movlw	1
  7076  00219E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7077  0021A0  EFDB  F010         	goto	l1358
  7078  0021A4                     l1359:
  7079                           
  7080                           ; BSR set to: 0
  7081  0021A4  A040               	btfss	___fldiv@b^0,0,c
  7082  0021A6  EFD7  F010         	goto	u3311
  7083  0021AA  EFD9  F010         	goto	u3310
  7084  0021AE                     u3311:
  7085  0021AE  EFDB  F010         	goto	l1358
  7086  0021B2                     u3310:
  7087  0021B2  EFCE  F010         	goto	l3513
  7088  0021B6                     l1358:
  7089                           
  7090                           ; BSR set to: 0
  7091  0021B6  516C               	movf	___fldiv@aexp& (0+255),w,b
  7092  0021B8  B4D8               	btfsc	status,2,c
  7093  0021BA  EFE1  F010         	goto	u3321
  7094  0021BE  EFE3  F010         	goto	u3320
  7095  0021C2                     u3321:
  7096  0021C2  EF07  F011         	goto	l3525
  7097  0021C6                     u3320:
  7098  0021C6                     
  7099                           ; BSR set to: 0
  7100  0021C6  0E01               	movlw	1
  7101  0021C8  2640               	addwf	___fldiv@b^0,f,c
  7102  0021CA  0E00               	movlw	0
  7103  0021CC  2241               	addwfc	(___fldiv@b+1)^0,f,c
  7104  0021CE  2242               	addwfc	(___fldiv@b+2)^0,f,c
  7105  0021D0  2243               	addwfc	(___fldiv@b+3)^0,f,c
  7106  0021D2                     
  7107                           ; BSR set to: 0
  7108  0021D2  A043               	btfss	(___fldiv@b+3)^0,0,c
  7109  0021D4  EFEE  F010         	goto	u3331
  7110  0021D8  EFF0  F010         	goto	u3330
  7111  0021DC                     u3331:
  7112  0021DC  EF07  F011         	goto	l3525
  7113  0021E0                     u3330:
  7114  0021E0                     
  7115                           ; BSR set to: 0
  7116  0021E0  C040  F048         	movff	___fldiv@b,??___fldiv
  7117  0021E4  C041  F049         	movff	___fldiv@b+1,??___fldiv+1
  7118  0021E8  C042  F04A         	movff	___fldiv@b+2,??___fldiv+2
  7119  0021EC  C043  F04B         	movff	___fldiv@b+3,??___fldiv+3
  7120  0021F0  344B               	rlcf	(??___fldiv+3)^0,w,c
  7121  0021F2  324B               	rrcf	(??___fldiv+3)^0,f,c
  7122  0021F4  324A               	rrcf	(??___fldiv+2)^0,f,c
  7123  0021F6  3249               	rrcf	(??___fldiv+1)^0,f,c
  7124  0021F8  3248               	rrcf	??___fldiv^0,f,c
  7125  0021FA  C048  F040         	movff	??___fldiv,___fldiv@b
  7126  0021FE  C049  F041         	movff	??___fldiv+1,___fldiv@b+1
  7127  002202  C04A  F042         	movff	??___fldiv+2,___fldiv@b+2
  7128  002206  C04B  F043         	movff	??___fldiv+3,___fldiv@b+3
  7129  00220A                     
  7130                           ; BSR set to: 0
  7131  00220A  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  7132  00220C  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7133  00220E                     l3525:
  7134                           
  7135                           ; BSR set to: 0
  7136  00220E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7137  002210  EF12  F011         	goto	u3341
  7138  002214  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7139  002216  E108               	bnz	u3340
  7140  002218  2965               	incf	___fldiv@new_exp& (0+255),w,b
  7141  00221A  A0D8               	btfss	status,0,c
  7142  00221C  EF12  F011         	goto	u3341
  7143  002220  EF14  F011         	goto	u3340
  7144  002224                     u3341:
  7145  002224  EF1F  F011         	goto	l3529
  7146  002228                     u3340:
  7147  002228                     
  7148                           ; BSR set to: 0
  7149  002228  0E00               	movlw	0
  7150  00222A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7151  00222C  6965               	setf	___fldiv@new_exp& (0+255),b
  7152  00222E  0E00               	movlw	0
  7153  002230  6E40               	movwf	___fldiv@b^0,c
  7154  002232  0E00               	movlw	0
  7155  002234  6E41               	movwf	(___fldiv@b+1)^0,c
  7156  002236  0E00               	movlw	0
  7157  002238  6E42               	movwf	(___fldiv@b+2)^0,c
  7158  00223A  0E00               	movlw	0
  7159  00223C  6E43               	movwf	(___fldiv@b+3)^0,c
  7160  00223E                     l3529:
  7161                           
  7162                           ; BSR set to: 0
  7163  00223E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7164  002240  EF2C  F011         	goto	u3350
  7165  002244  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7166  002246  E106               	bnz	u3351
  7167  002248  0565               	decf	___fldiv@new_exp& (0+255),w,b
  7168  00224A  B0D8               	btfsc	status,0,c
  7169  00224C  EF2A  F011         	goto	u3351
  7170  002250  EF2C  F011         	goto	u3350
  7171  002254                     u3351:
  7172  002254  EF3A  F011         	goto	l3533
  7173  002258                     u3350:
  7174  002258                     
  7175                           ; BSR set to: 0
  7176  002258  0E00               	movlw	0
  7177  00225A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7178  00225C  0E00               	movlw	0
  7179  00225E  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7180  002260  0E00               	movlw	0
  7181  002262  6E40               	movwf	___fldiv@b^0,c
  7182  002264  0E00               	movlw	0
  7183  002266  6E41               	movwf	(___fldiv@b+1)^0,c
  7184  002268  0E00               	movlw	0
  7185  00226A  6E42               	movwf	(___fldiv@b+2)^0,c
  7186  00226C  0E00               	movlw	0
  7187  00226E  6E43               	movwf	(___fldiv@b+3)^0,c
  7188  002270  0E00               	movlw	0
  7189  002272  6F64               	movwf	___fldiv@sign& (0+255),b
  7190  002274                     l3533:
  7191                           
  7192                           ; BSR set to: 0
  7193  002274  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  7194  002278                     
  7195                           ; BSR set to: 0
  7196  002278  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  7197  00227A  EF41  F011         	goto	u3361
  7198  00227E  EF43  F011         	goto	u3360
  7199  002282                     u3361:
  7200  002282  EF46  F011         	goto	l3539
  7201  002286                     u3360:
  7202  002286                     
  7203                           ; BSR set to: 0
  7204  002286  8E42               	bsf	(___fldiv@b+2)^0,7,c
  7205  002288  EF47  F011         	goto	l3541
  7206  00228C                     l3539:
  7207                           
  7208                           ; BSR set to: 0
  7209  00228C  9E42               	bcf	(___fldiv@b+2)^0,7,c
  7210  00228E                     l3541:
  7211                           
  7212                           ; BSR set to: 0
  7213  00228E  90D8               	bcf	status,0,c
  7214  002290  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  7215  002292  6E43               	movwf	(___fldiv@b+3)^0,c
  7216  002294  EFFD  F00F         	goto	l3455
  7217  002298                     l1345:
  7218                           
  7219                           ; BSR set to: 0
  7220  002298  0012               	return		;funcret
  7221  00229A                     __end_of___fldiv:
  7222                           	callstack 0
  7223                           
  7224 ;; *************** function _clearance *****************
  7225 ;; Defined at:
  7226 ;;		line 132 in file "DC_motors.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  mL              2   39[COMRAM] PTR struct .
  7229 ;;		 -> main@motorL(9), 
  7230 ;;  mR              2   41[COMRAM] PTR struct .
  7231 ;;		 -> main@motorR(9), 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;		None
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7247 ;;Total ram usage:        6 bytes
  7248 ;; Hardware stack levels used: 1
  7249 ;; Hardware stack levels required when called: 10
  7250 ;; This function calls:
  7251 ;;		_reverse
  7252 ;;		_stop
  7253 ;; This function is called by:
  7254 ;;		_colourcards_readRGBC
  7255 ;;		_DCmotors_testing
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text35
  7260  0034FE                     __ptext35:
  7261                           	callstack 0
  7262  0034FE                     _clearance:
  7263                           	callstack 18
  7264  0034FE                     
  7265                           ;DC_motors.c: 133:     LATDbits.LATD3 = 0;
  7266  0034FE  967C               	bcf	124,3,c	;volatile
  7267  003500                     
  7268                           ;DC_motors.c: 134:     reverse(mL, mR);
  7269  003500  C028  F022         	movff	clearance@mL,reverse@mL
  7270  003504  C029  F023         	movff	clearance@mL+1,reverse@mL+1
  7271  003508  C02A  F024         	movff	clearance@mR,reverse@mR
  7272  00350C  C02B  F025         	movff	clearance@mR+1,reverse@mR+1
  7273  003510  EC95  F019         	call	_reverse	;wreg free
  7274  003514                     
  7275                           ;DC_motors.c: 135:     _delay((unsigned long)((350)*(64000000/4000.0)));
  7276  003514  0E1D               	movlw	29
  7277  003516  6E2D               	movwf	(??_clearance+1)^0,c
  7278  003518  0E69               	movlw	105
  7279  00351A  6E2C               	movwf	??_clearance^0,c
  7280  00351C  0EA5               	movlw	165
  7281  00351E                     u6287:
  7282  00351E  2EE8               	decfsz	wreg,f,c
  7283  003520  D7FE               	bra	u6287
  7284  003522  2E2C               	decfsz	??_clearance^0,f,c
  7285  003524  D7FC               	bra	u6287
  7286  003526  2E2D               	decfsz	(??_clearance+1)^0,f,c
  7287  003528  D7FA               	bra	u6287
  7288  00352A  F000               	nop	
  7289  00352C                     
  7290                           ;DC_motors.c: 136:     stop(mL, mR);
  7291  00352C  C028  F022         	movff	clearance@mL,stop@mL
  7292  003530  C029  F023         	movff	clearance@mL+1,stop@mL+1
  7293  003534  C02A  F024         	movff	clearance@mR,stop@mR
  7294  003538  C02B  F025         	movff	clearance@mR+1,stop@mR+1
  7295  00353C  ECDC  F019         	call	_stop	;wreg free
  7296                           
  7297                           ;DC_motors.c: 137:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7298  003540  0E52               	movlw	82
  7299  003542  6E2D               	movwf	(??_clearance+1)^0,c
  7300  003544  0E2B               	movlw	43
  7301  003546  6E2C               	movwf	??_clearance^0,c
  7302  003548  0E00               	movlw	0
  7303  00354A                     u6297:
  7304  00354A  2EE8               	decfsz	wreg,f,c
  7305  00354C  D7FE               	bra	u6297
  7306  00354E  2E2C               	decfsz	??_clearance^0,f,c
  7307  003550  D7FC               	bra	u6297
  7308  003552  2E2D               	decfsz	(??_clearance+1)^0,f,c
  7309  003554  D7FA               	bra	u6297
  7310  003556  D000               	nop2	
  7311  003558                     
  7312                           ;DC_motors.c: 138:     LATDbits.LATD3 = 0;
  7313  003558  967C               	bcf	124,3,c	;volatile
  7314  00355A  0012               	return		;funcret
  7315  00355C                     __end_of_clearance:
  7316                           	callstack 0
  7317                           
  7318 ;; *************** function _stop *****************
  7319 ;; Defined at:
  7320 ;;		line 145 in file "DC_motors.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  mL              2   33[COMRAM] PTR struct .
  7323 ;;		 -> main@motorL(9), 
  7324 ;;  mR              2   35[COMRAM] PTR struct .
  7325 ;;		 -> main@motorR(9), 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;Total ram usage:        6 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 9
  7344 ;; This function calls:
  7345 ;;		_DCmotors_setPWM
  7346 ;; This function is called by:
  7347 ;;		_main
  7348 ;;		_colourcards_readRGBC
  7349 ;;		_clearance
  7350 ;;		_DCmotors_calibration
  7351 ;;		_DCmotors_testing
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text36
  7356  0033B8                     __ptext36:
  7357                           	callstack 0
  7358  0033B8                     _stop:
  7359                           	callstack 21
  7360  0033B8                     
  7361                           ;DC_motors.c: 146:     LATDbits.LATD4 = 1;
  7362  0033B8  887C               	bsf	124,4,c	;volatile
  7363                           
  7364                           ;DC_motors.c: 148:     while((mL->power > 0) && (mR->power > 0)){
  7365  0033BA  EFFB  F019         	goto	l3763
  7366  0033BE                     l3755:
  7367                           
  7368                           ;DC_motors.c: 149:         mL->power -= 10;
  7369  0033BE  C022  FFD9         	movff	stop@mL,fsr2l
  7370  0033C2  C023  FFDA         	movff	stop@mL+1,fsr2h
  7371  0033C6  0E0A               	movlw	10
  7372  0033C8  5EDF               	subwf	indf2,f,c
  7373                           
  7374                           ;DC_motors.c: 150:         mR->power -= 10;
  7375  0033CA  C024  FFD9         	movff	stop@mR,fsr2l
  7376  0033CE  C025  FFDA         	movff	stop@mR+1,fsr2h
  7377  0033D2  0E0A               	movlw	10
  7378  0033D4  5EDF               	subwf	indf2,f,c
  7379  0033D6                     
  7380                           ;DC_motors.c: 153:         DCmotors_setPWM(mL);
  7381  0033D6  C022  F017         	movff	stop@mL,DCmotors_setPWM@m
  7382  0033DA  C023  F018         	movff	stop@mL+1,DCmotors_setPWM@m+1
  7383  0033DE  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  7384  0033E2                     
  7385                           ;DC_motors.c: 154:         DCmotors_setPWM(mR);
  7386  0033E2  C024  F017         	movff	stop@mR,DCmotors_setPWM@m
  7387  0033E6  C025  F018         	movff	stop@mR+1,DCmotors_setPWM@m+1
  7388  0033EA  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  7389  0033EE                     
  7390                           ;DC_motors.c: 155:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7391  0033EE  0EA0               	movlw	160
  7392  0033F0                     u6307:
  7393  0033F0  D000               	nop2	
  7394  0033F2  2EE8               	decfsz	wreg,f,c
  7395  0033F4  D7FD               	bra	u6307
  7396  0033F6                     l3763:
  7397                           
  7398                           ;DC_motors.c: 148:     while((mL->power > 0) && (mR->power > 0)){
  7399  0033F6  C022  FFD9         	movff	stop@mL,fsr2l
  7400  0033FA  C023  FFDA         	movff	stop@mL+1,fsr2h
  7401  0033FE  50DF               	movf	indf2,w,c
  7402  003400  B4D8               	btfsc	status,2,c
  7403  003402  EF05  F01A         	goto	u3761
  7404  003406  EF07  F01A         	goto	u3760
  7405  00340A                     u3761:
  7406  00340A  EF13  F01A         	goto	l3767
  7407  00340E                     u3760:
  7408  00340E  C024  FFD9         	movff	stop@mR,fsr2l
  7409  003412  C025  FFDA         	movff	stop@mR+1,fsr2h
  7410  003416  50DF               	movf	indf2,w,c
  7411  003418  A4D8               	btfss	status,2,c
  7412  00341A  EF11  F01A         	goto	u3771
  7413  00341E  EF13  F01A         	goto	u3770
  7414  003422                     u3771:
  7415  003422  EFDF  F019         	goto	l3755
  7416  003426                     u3770:
  7417  003426                     l3767:
  7418                           
  7419                           ;DC_motors.c: 157:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7420  003426  0E29               	movlw	41
  7421  003428  6E27               	movwf	(??_stop+1)^0,c
  7422  00342A  0E96               	movlw	150
  7423  00342C  6E26               	movwf	??_stop^0,c
  7424  00342E  0E7F               	movlw	127
  7425  003430                     u6317:
  7426  003430  2EE8               	decfsz	wreg,f,c
  7427  003432  D7FE               	bra	u6317
  7428  003434  2E26               	decfsz	??_stop^0,f,c
  7429  003436  D7FC               	bra	u6317
  7430  003438  2E27               	decfsz	(??_stop+1)^0,f,c
  7431  00343A  D7FA               	bra	u6317
  7432  00343C  F000               	nop	
  7433  00343E                     
  7434                           ;DC_motors.c: 158:     LATDbits.LATD4 = 0;
  7435  00343E  987C               	bcf	124,4,c	;volatile
  7436  003440  0012               	return		;funcret
  7437  003442                     __end_of_stop:
  7438                           	callstack 0
  7439                           
  7440 ;; *************** function _reverse *****************
  7441 ;; Defined at:
  7442 ;;		line 112 in file "DC_motors.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  mL              2   33[COMRAM] PTR struct .
  7445 ;;		 -> main@motorL(9), 
  7446 ;;  mR              2   35[COMRAM] PTR struct .
  7447 ;;		 -> main@motorR(9), 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;Total ram usage:        5 bytes
  7464 ;; Hardware stack levels used: 1
  7465 ;; Hardware stack levels required when called: 9
  7466 ;; This function calls:
  7467 ;;		_DCmotors_setPWM
  7468 ;; This function is called by:
  7469 ;;		_main
  7470 ;;		_colourcards_readRGBC
  7471 ;;		_clearance
  7472 ;;		_DCmotors_testing
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text37
  7477  00332A                     __ptext37:
  7478                           	callstack 0
  7479  00332A                     _reverse:
  7480                           	callstack 21
  7481  00332A                     
  7482                           ;DC_motors.c: 114:     mL->direction = 0;
  7483  00332A  EE20 F001          	lfsr	2,1
  7484  00332E  5022               	movf	reverse@mL^0,w,c
  7485  003330  26D9               	addwf	fsr2l,f,c
  7486  003332  5023               	movf	(reverse@mL+1)^0,w,c
  7487  003334  22DA               	addwfc	fsr2h,f,c
  7488  003336  0E00               	movlw	0
  7489  003338  6EDF               	movwf	indf2,c
  7490                           
  7491                           ;DC_motors.c: 115:     mR->direction = 0;
  7492  00333A  EE20 F001          	lfsr	2,1
  7493  00333E  5024               	movf	reverse@mR^0,w,c
  7494  003340  26D9               	addwf	fsr2l,f,c
  7495  003342  5025               	movf	(reverse@mR+1)^0,w,c
  7496  003344  22DA               	addwfc	fsr2h,f,c
  7497  003346  0E00               	movlw	0
  7498  003348  6EDF               	movwf	indf2,c
  7499                           
  7500                           ;DC_motors.c: 118:     while((mL->power < 50) && (mR->power < 50)){
  7501  00334A  EFC3  F019         	goto	l3781
  7502  00334E                     l3773:
  7503                           
  7504                           ;DC_motors.c: 119:         mL->power += 10;
  7505  00334E  C022  FFD9         	movff	reverse@mL,fsr2l
  7506  003352  C023  FFDA         	movff	reverse@mL+1,fsr2h
  7507  003356  0E0A               	movlw	10
  7508  003358  26DF               	addwf	indf2,f,c
  7509                           
  7510                           ;DC_motors.c: 120:         mR->power += 10;
  7511  00335A  C024  FFD9         	movff	reverse@mR,fsr2l
  7512  00335E  C025  FFDA         	movff	reverse@mR+1,fsr2h
  7513  003362  0E0A               	movlw	10
  7514  003364  26DF               	addwf	indf2,f,c
  7515  003366                     
  7516                           ;DC_motors.c: 122:         DCmotors_setPWM(mL);
  7517  003366  C022  F017         	movff	reverse@mL,DCmotors_setPWM@m
  7518  00336A  C023  F018         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  7519  00336E  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  7520  003372                     
  7521                           ;DC_motors.c: 123:         DCmotors_setPWM(mR);
  7522  003372  C024  F017         	movff	reverse@mR,DCmotors_setPWM@m
  7523  003376  C025  F018         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  7524  00337A  EC73  F014         	call	_DCmotors_setPWM	;wreg free
  7525  00337E                     
  7526                           ;DC_motors.c: 124:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7527  00337E  0EA0               	movlw	160
  7528  003380                     u6327:
  7529  003380  D000               	nop2	
  7530  003382  2EE8               	decfsz	wreg,f,c
  7531  003384  D7FD               	bra	u6327
  7532  003386                     l3781:
  7533                           
  7534                           ;DC_motors.c: 118:     while((mL->power < 50) && (mR->power < 50)){
  7535  003386  C022  FFD9         	movff	reverse@mL,fsr2l
  7536  00338A  C023  FFDA         	movff	reverse@mL+1,fsr2h
  7537  00338E  0E32               	movlw	50
  7538  003390  60DF               	cpfslt	indf2,c
  7539  003392  EFCD  F019         	goto	u3781
  7540  003396  EFCF  F019         	goto	u3780
  7541  00339A                     u3781:
  7542  00339A  EFDB  F019         	goto	l605
  7543  00339E                     u3780:
  7544  00339E  C024  FFD9         	movff	reverse@mR,fsr2l
  7545  0033A2  C025  FFDA         	movff	reverse@mR+1,fsr2h
  7546  0033A6  0E31               	movlw	49
  7547  0033A8  64DF               	cpfsgt	indf2,c
  7548  0033AA  EFD9  F019         	goto	u3791
  7549  0033AE  EFDB  F019         	goto	u3790
  7550  0033B2                     u3791:
  7551  0033B2  EFA7  F019         	goto	l3773
  7552  0033B6                     u3790:
  7553  0033B6                     l605:
  7554  0033B6  0012               	return		;funcret
  7555  0033B8                     __end_of_reverse:
  7556                           	callstack 0
  7557                           
  7558 ;; *************** function _DCmotors_setPWM *****************
  7559 ;; Defined at:
  7560 ;;		line 50 in file "DC_motors.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  m               2   22[COMRAM] PTR struct .
  7563 ;;		 -> main@motorR(9), main@motorL(9), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  PWMduty         2   31[COMRAM] int 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      void 
  7568 ;; Registers used:
  7569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;Total ram usage:       11 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 8
  7582 ;; This function calls:
  7583 ;;		___awdiv
  7584 ;;		___wmul
  7585 ;; This function is called by:
  7586 ;;		_forward
  7587 ;;		_reverse
  7588 ;;		_stop
  7589 ;;		_left
  7590 ;;		_right
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           	psect	text38
  7595  0028E6                     __ptext38:
  7596                           	callstack 0
  7597  0028E6                     _DCmotors_setPWM:
  7598                           	callstack 21
  7599  0028E6                     
  7600                           ;DC_motors.c: 51:  int PWMduty;;DC_motors.c: 53:  if (m->direction){
  7601  0028E6  EE20 F001          	lfsr	2,1
  7602  0028EA  5017               	movf	DCmotors_setPWM@m^0,w,c
  7603  0028EC  26D9               	addwf	fsr2l,f,c
  7604  0028EE  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7605  0028F0  22DA               	addwfc	fsr2h,f,c
  7606  0028F2  50DF               	movf	indf2,w,c
  7607  0028F4  B4D8               	btfsc	status,2,c
  7608  0028F6  EF7F  F014         	goto	u2711
  7609  0028FA  EF81  F014         	goto	u2710
  7610  0028FE                     u2711:
  7611  0028FE  EFB2  F014         	goto	l3199
  7612  002902                     u2710:
  7613  002902                     
  7614                           ;DC_motors.c: 54:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
  7615  002902  C017  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  7616  002906  C018  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  7617  00290A  50DF               	movf	indf2,w,c
  7618  00290C  6E19               	movwf	??_DCmotors_setPWM^0,c
  7619  00290E  5019               	movf	??_DCmotors_setPWM^0,w,c
  7620  002910  6E09               	movwf	___wmul@multiplier^0,c
  7621  002912  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7622  002914  EE20 F007          	lfsr	2,7
  7623  002918  5017               	movf	DCmotors_setPWM@m^0,w,c
  7624  00291A  26D9               	addwf	fsr2l,f,c
  7625  00291C  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7626  00291E  22DA               	addwfc	fsr2h,f,c
  7627  002920  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7628  002924  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7629  002928  EC8E  F01C         	call	___wmul	;wreg free
  7630  00292C  C009  F00F         	movff	?___wmul,___awdiv@dividend
  7631  002930  C00A  F010         	movff	?___wmul+1,___awdiv@dividend+1
  7632  002934  0E00               	movlw	0
  7633  002936  6E12               	movwf	(___awdiv@divisor+1)^0,c
  7634  002938  0E64               	movlw	100
  7635  00293A  6E11               	movwf	___awdiv@divisor^0,c
  7636  00293C  EC9D  F018         	call	___awdiv	;wreg free
  7637  002940  EE20 F007          	lfsr	2,7
  7638  002944  5017               	movf	DCmotors_setPWM@m^0,w,c
  7639  002946  26D9               	addwf	fsr2l,f,c
  7640  002948  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7641  00294A  22DA               	addwfc	fsr2h,f,c
  7642  00294C  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM+1
  7643  002950  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+2
  7644  002954  500F               	movf	?___awdiv^0,w,c
  7645  002956  5C1A               	subwf	(??_DCmotors_setPWM+1)^0,w,c
  7646  002958  6E20               	movwf	DCmotors_setPWM@PWMduty^0,c
  7647  00295A  5010               	movf	(?___awdiv+1)^0,w,c
  7648  00295C  581B               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  7649  00295E  6E21               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  7650                           
  7651                           ;DC_motors.c: 55:  } else {
  7652  002960  EFD5  F014         	goto	l3201
  7653  002964                     l3199:
  7654                           
  7655                           ;DC_motors.c: 56:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  7656  002964  C017  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  7657  002968  C018  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  7658  00296C  50DF               	movf	indf2,w,c
  7659  00296E  6E19               	movwf	??_DCmotors_setPWM^0,c
  7660  002970  5019               	movf	??_DCmotors_setPWM^0,w,c
  7661  002972  6E09               	movwf	___wmul@multiplier^0,c
  7662  002974  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7663  002976  EE20 F007          	lfsr	2,7
  7664  00297A  5017               	movf	DCmotors_setPWM@m^0,w,c
  7665  00297C  26D9               	addwf	fsr2l,f,c
  7666  00297E  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7667  002980  22DA               	addwfc	fsr2h,f,c
  7668  002982  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7669  002986  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7670  00298A  EC8E  F01C         	call	___wmul	;wreg free
  7671  00298E  C009  F00F         	movff	?___wmul,___awdiv@dividend
  7672  002992  C00A  F010         	movff	?___wmul+1,___awdiv@dividend+1
  7673  002996  0E00               	movlw	0
  7674  002998  6E12               	movwf	(___awdiv@divisor+1)^0,c
  7675  00299A  0E64               	movlw	100
  7676  00299C  6E11               	movwf	___awdiv@divisor^0,c
  7677  00299E  EC9D  F018         	call	___awdiv	;wreg free
  7678  0029A2  C00F  F020         	movff	?___awdiv,DCmotors_setPWM@PWMduty
  7679  0029A6  C010  F021         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  7680  0029AA                     l3201:
  7681                           
  7682                           ;DC_motors.c: 59:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  7683  0029AA  EE20 F002          	lfsr	2,2
  7684  0029AE  5017               	movf	DCmotors_setPWM@m^0,w,c
  7685  0029B0  26D9               	addwf	fsr2l,f,c
  7686  0029B2  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7687  0029B4  22DA               	addwfc	fsr2h,f,c
  7688  0029B6  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  7689  0029BA  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  7690  0029BE  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  7691  0029C2  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  7692  0029C6  C020  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  7693  0029CA                     
  7694                           ;DC_motors.c: 61:  if (m->direction){
  7695  0029CA  EE20 F001          	lfsr	2,1
  7696  0029CE  5017               	movf	DCmotors_setPWM@m^0,w,c
  7697  0029D0  26D9               	addwf	fsr2l,f,c
  7698  0029D2  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7699  0029D4  22DA               	addwfc	fsr2h,f,c
  7700  0029D6  50DF               	movf	indf2,w,c
  7701  0029D8  B4D8               	btfsc	status,2,c
  7702  0029DA  EFF1  F014         	goto	u2721
  7703  0029DE  EFF3  F014         	goto	u2720
  7704  0029E2                     u2721:
  7705  0029E2  EF28  F015         	goto	l3207
  7706  0029E6                     u2720:
  7707  0029E6                     
  7708                           ;DC_motors.c: 62:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  7709  0029E6  EE20 F004          	lfsr	2,4
  7710  0029EA  5017               	movf	DCmotors_setPWM@m^0,w,c
  7711  0029EC  26D9               	addwf	fsr2l,f,c
  7712  0029EE  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7713  0029F0  22DA               	addwfc	fsr2h,f,c
  7714  0029F2  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  7715  0029F6  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  7716  0029FA  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  7717  0029FE  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  7718  002A02  EE10 F004          	lfsr	1,4
  7719  002A06  5017               	movf	DCmotors_setPWM@m^0,w,c
  7720  002A08  26E1               	addwf	fsr1l,f,c
  7721  002A0A  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7722  002A0C  22E2               	addwfc	fsr1h,f,c
  7723  002A0E  CFE6 F01B          	movff	postinc1,??_DCmotors_setPWM+2
  7724  002A12  CFE5 F01C          	movff	postdec1,??_DCmotors_setPWM+3
  7725  002A16  C01B  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  7726  002A1A  C01C  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  7727  002A1E  50E7               	movf	indf1,w,c
  7728  002A20  6E1D               	movwf	(??_DCmotors_setPWM+4)^0,c
  7729  002A22  EE10 F006          	lfsr	1,6
  7730  002A26  5017               	movf	DCmotors_setPWM@m^0,w,c
  7731  002A28  26E1               	addwf	fsr1l,f,c
  7732  002A2A  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7733  002A2C  22E2               	addwfc	fsr1h,f,c
  7734  002A2E  50E7               	movf	indf1,w,c
  7735  002A30  6E1E               	movwf	(??_DCmotors_setPWM+5)^0,c
  7736  002A32  0E01               	movlw	1
  7737  002A34  6E1F               	movwf	(??_DCmotors_setPWM+6)^0,c
  7738  002A36  2A1E               	incf	(??_DCmotors_setPWM+5)^0,f,c
  7739  002A38  EF20  F015         	goto	u2734
  7740  002A3C                     u2735:
  7741  002A3C  90D8               	bcf	status,0,c
  7742  002A3E  361F               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  7743  002A40                     u2734:
  7744  002A40  2E1E               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  7745  002A42  EF1E  F015         	goto	u2735
  7746  002A46  501F               	movf	(??_DCmotors_setPWM+6)^0,w,c
  7747  002A48  101D               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  7748  002A4A  6EDF               	movwf	indf2,c
  7749                           
  7750                           ;DC_motors.c: 63:  } else {
  7751  002A4C  EF5C  F015         	goto	l582
  7752  002A50                     l3207:
  7753                           
  7754                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
  7755  002A50  EE20 F004          	lfsr	2,4
  7756  002A54  5017               	movf	DCmotors_setPWM@m^0,w,c
  7757  002A56  26D9               	addwf	fsr2l,f,c
  7758  002A58  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7759  002A5A  22DA               	addwfc	fsr2h,f,c
  7760  002A5C  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  7761  002A60  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  7762  002A64  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  7763  002A68  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  7764  002A6C  EE10 F004          	lfsr	1,4
  7765  002A70  5017               	movf	DCmotors_setPWM@m^0,w,c
  7766  002A72  26E1               	addwf	fsr1l,f,c
  7767  002A74  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7768  002A76  22E2               	addwfc	fsr1h,f,c
  7769  002A78  CFE6 F01B          	movff	postinc1,??_DCmotors_setPWM+2
  7770  002A7C  CFE5 F01C          	movff	postdec1,??_DCmotors_setPWM+3
  7771  002A80  C01B  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  7772  002A84  C01C  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  7773  002A88  50E7               	movf	indf1,w,c
  7774  002A8A  6E1D               	movwf	(??_DCmotors_setPWM+4)^0,c
  7775  002A8C  EE10 F006          	lfsr	1,6
  7776  002A90  5017               	movf	DCmotors_setPWM@m^0,w,c
  7777  002A92  26E1               	addwf	fsr1l,f,c
  7778  002A94  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7779  002A96  22E2               	addwfc	fsr1h,f,c
  7780  002A98  50E7               	movf	indf1,w,c
  7781  002A9A  6E1E               	movwf	(??_DCmotors_setPWM+5)^0,c
  7782  002A9C  0E01               	movlw	1
  7783  002A9E  6E1F               	movwf	(??_DCmotors_setPWM+6)^0,c
  7784  002AA0  2A1E               	incf	(??_DCmotors_setPWM+5)^0,f,c
  7785  002AA2  EF55  F015         	goto	u2744
  7786  002AA6                     u2745:
  7787  002AA6  90D8               	bcf	status,0,c
  7788  002AA8  361F               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  7789  002AAA                     u2744:
  7790  002AAA  2E1E               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  7791  002AAC  EF53  F015         	goto	u2745
  7792  002AB0  501F               	movf	(??_DCmotors_setPWM+6)^0,w,c
  7793  002AB2  0AFF               	xorlw	255
  7794  002AB4  141D               	andwf	(??_DCmotors_setPWM+4)^0,w,c
  7795  002AB6  6EDF               	movwf	indf2,c
  7796  002AB8                     l582:
  7797  002AB8  0012               	return		;funcret
  7798  002ABA                     __end_of_DCmotors_setPWM:
  7799                           	callstack 0
  7800                           
  7801 ;; *************** function ___wmul *****************
  7802 ;; Defined at:
  7803 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  multiplier      2    8[COMRAM] unsigned int 
  7806 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  product         2   12[COMRAM] unsigned int 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  2    8[COMRAM] unsigned int 
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0, prodl, prodh
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;Total ram usage:        6 bytes
  7823 ;; Hardware stack levels used: 1
  7824 ;; Hardware stack levels required when called: 7
  7825 ;; This function calls:
  7826 ;;		Nothing
  7827 ;; This function is called by:
  7828 ;;		_DCmotors_setPWM
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text39
  7833  00391C                     __ptext39:
  7834                           	callstack 0
  7835  00391C                     ___wmul:
  7836                           	callstack 21
  7837  00391C  5009               	movf	___wmul@multiplier^0,w,c
  7838  00391E  020B               	mulwf	___wmul@multiplicand^0,c
  7839  003920  CFF3 F00D          	movff	prodl,___wmul@product
  7840  003924  CFF4 F00E          	movff	prodh,___wmul@product+1
  7841  003928  5009               	movf	___wmul@multiplier^0,w,c
  7842  00392A  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7843  00392C  50F3               	movf	243,w,c
  7844  00392E  260E               	addwf	(___wmul@product+1)^0,f,c
  7845  003930  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7846  003932  020B               	mulwf	___wmul@multiplicand^0,c
  7847  003934  50F3               	movf	243,w,c
  7848  003936  260E               	addwf	(___wmul@product+1)^0,f,c
  7849  003938  C00D  F009         	movff	___wmul@product,?___wmul
  7850  00393C  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7851  003940  0012               	return		;funcret
  7852  003942                     __end_of___wmul:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function ___awdiv *****************
  7856 ;; Defined at:
  7857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  dividend        2   14[COMRAM] int 
  7860 ;;  divisor         2   16[COMRAM] int 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  quotient        2   20[COMRAM] int 
  7863 ;;  sign            1   19[COMRAM] unsigned char 
  7864 ;;  counter         1   18[COMRAM] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  2   14[COMRAM] int 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;Total ram usage:        8 bytes
  7879 ;; Hardware stack levels used: 1
  7880 ;; Hardware stack levels required when called: 7
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_DCmotors_setPWM
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text40
  7889  00313A                     __ptext40:
  7890                           	callstack 0
  7891  00313A                     ___awdiv:
  7892                           	callstack 21
  7893  00313A  0E00               	movlw	0
  7894  00313C  6E14               	movwf	___awdiv@sign^0,c
  7895  00313E  BE12               	btfsc	(___awdiv@divisor+1)^0,7,c
  7896  003140  EFA6  F018         	goto	u2650
  7897  003144  EFA4  F018         	goto	u2651
  7898  003148                     u2651:
  7899  003148  EFAC  F018         	goto	l3135
  7900  00314C                     u2650:
  7901  00314C  6C11               	negf	___awdiv@divisor^0,c
  7902  00314E  1E12               	comf	(___awdiv@divisor+1)^0,f,c
  7903  003150  B0D8               	btfsc	status,0,c
  7904  003152  2A12               	incf	(___awdiv@divisor+1)^0,f,c
  7905  003154  0E01               	movlw	1
  7906  003156  6E14               	movwf	___awdiv@sign^0,c
  7907  003158                     l3135:
  7908  003158  BE10               	btfsc	(___awdiv@dividend+1)^0,7,c
  7909  00315A  EFB3  F018         	goto	u2660
  7910  00315E  EFB1  F018         	goto	u2661
  7911  003162                     u2661:
  7912  003162  EFB9  F018         	goto	l3141
  7913  003166                     u2660:
  7914  003166  6C0F               	negf	___awdiv@dividend^0,c
  7915  003168  1E10               	comf	(___awdiv@dividend+1)^0,f,c
  7916  00316A  B0D8               	btfsc	status,0,c
  7917  00316C  2A10               	incf	(___awdiv@dividend+1)^0,f,c
  7918  00316E  0E01               	movlw	1
  7919  003170  1A14               	xorwf	___awdiv@sign^0,f,c
  7920  003172                     l3141:
  7921  003172  0E00               	movlw	0
  7922  003174  6E16               	movwf	(___awdiv@quotient+1)^0,c
  7923  003176  0E00               	movlw	0
  7924  003178  6E15               	movwf	___awdiv@quotient^0,c
  7925  00317A  5011               	movf	___awdiv@divisor^0,w,c
  7926  00317C  1012               	iorwf	(___awdiv@divisor+1)^0,w,c
  7927  00317E  B4D8               	btfsc	status,2,c
  7928  003180  EFC4  F018         	goto	u2671
  7929  003184  EFC6  F018         	goto	u2670
  7930  003188                     u2671:
  7931  003188  EFEE  F018         	goto	l3163
  7932  00318C                     u2670:
  7933  00318C  0E01               	movlw	1
  7934  00318E  6E13               	movwf	___awdiv@counter^0,c
  7935  003190  EFCE  F018         	goto	l3149
  7936  003194                     l3147:
  7937  003194  90D8               	bcf	status,0,c
  7938  003196  3611               	rlcf	___awdiv@divisor^0,f,c
  7939  003198  3612               	rlcf	(___awdiv@divisor+1)^0,f,c
  7940  00319A  2A13               	incf	___awdiv@counter^0,f,c
  7941  00319C                     l3149:
  7942  00319C  AE12               	btfss	(___awdiv@divisor+1)^0,7,c
  7943  00319E  EFD3  F018         	goto	u2681
  7944  0031A2  EFD5  F018         	goto	u2680
  7945  0031A6                     u2681:
  7946  0031A6  EFCA  F018         	goto	l3147
  7947  0031AA                     u2680:
  7948  0031AA                     l3151:
  7949  0031AA  90D8               	bcf	status,0,c
  7950  0031AC  3615               	rlcf	___awdiv@quotient^0,f,c
  7951  0031AE  3616               	rlcf	(___awdiv@quotient+1)^0,f,c
  7952  0031B0  5011               	movf	___awdiv@divisor^0,w,c
  7953  0031B2  5C0F               	subwf	___awdiv@dividend^0,w,c
  7954  0031B4  5012               	movf	(___awdiv@divisor+1)^0,w,c
  7955  0031B6  5810               	subwfb	(___awdiv@dividend+1)^0,w,c
  7956  0031B8  A0D8               	btfss	status,0,c
  7957  0031BA  EFE1  F018         	goto	u2691
  7958  0031BE  EFE3  F018         	goto	u2690
  7959  0031C2                     u2691:
  7960  0031C2  EFE8  F018         	goto	l3159
  7961  0031C6                     u2690:
  7962  0031C6  5011               	movf	___awdiv@divisor^0,w,c
  7963  0031C8  5E0F               	subwf	___awdiv@dividend^0,f,c
  7964  0031CA  5012               	movf	(___awdiv@divisor+1)^0,w,c
  7965  0031CC  5A10               	subwfb	(___awdiv@dividend+1)^0,f,c
  7966  0031CE  8015               	bsf	___awdiv@quotient^0,0,c
  7967  0031D0                     l3159:
  7968  0031D0  90D8               	bcf	status,0,c
  7969  0031D2  3212               	rrcf	(___awdiv@divisor+1)^0,f,c
  7970  0031D4  3211               	rrcf	___awdiv@divisor^0,f,c
  7971  0031D6  2E13               	decfsz	___awdiv@counter^0,f,c
  7972  0031D8  EFD5  F018         	goto	l3151
  7973  0031DC                     l3163:
  7974  0031DC  5014               	movf	___awdiv@sign^0,w,c
  7975  0031DE  B4D8               	btfsc	status,2,c
  7976  0031E0  EFF4  F018         	goto	u2701
  7977  0031E4  EFF6  F018         	goto	u2700
  7978  0031E8                     u2701:
  7979  0031E8  EFFA  F018         	goto	l3167
  7980  0031EC                     u2700:
  7981  0031EC  6C15               	negf	___awdiv@quotient^0,c
  7982  0031EE  1E16               	comf	(___awdiv@quotient+1)^0,f,c
  7983  0031F0  B0D8               	btfsc	status,0,c
  7984  0031F2  2A16               	incf	(___awdiv@quotient+1)^0,f,c
  7985  0031F4                     l3167:
  7986  0031F4  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  7987  0031F8  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  7988  0031FC  0012               	return		;funcret
  7989  0031FE                     __end_of___awdiv:
  7990                           	callstack 0
  7991                           
  7992 ;; *************** function _checkbatterylevel *****************
  7993 ;; Defined at:
  7994 ;;		line 72 in file "DC_motors.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;		None
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;  batterylevel    1   11[COMRAM] unsigned char 
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  1    wreg      void 
  8001 ;; Registers used:
  8002 ;;		wreg, status,2, status,0, cstack
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8012 ;;Total ram usage:        2 bytes
  8013 ;; Hardware stack levels used: 1
  8014 ;; Hardware stack levels required when called: 8
  8015 ;; This function calls:
  8016 ;;		_ADC_getval
  8017 ;;		_colourclickLEDs_RGB
  8018 ;; This function is called by:
  8019 ;;		_main
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           
  8023                           	psect	text41
  8024  003044                     __ptext41:
  8025                           	callstack 0
  8026  003044                     _checkbatterylevel:
  8027                           	callstack 22
  8028  003044                     
  8029                           ;DC_motors.c: 73:     unsigned char batterylevel;;DC_motors.c: 74:     batterylevel = AD
      +                          C_getval();
  8030  003044  EC4E  F01D         	call	_ADC_getval	;wreg free
  8031  003048  6E0C               	movwf	checkbatterylevel@batterylevel^0,c
  8032  00304A                     
  8033                           ;DC_motors.c: 75:     if (batterylevel<100) {
  8034  00304A  0E64               	movlw	100
  8035  00304C  600C               	cpfslt	checkbatterylevel@batterylevel^0,c
  8036  00304E  EF2B  F018         	goto	u4191
  8037  003052  EF2D  F018         	goto	u4190
  8038  003056                     u4191:
  8039  003056  EF9C  F018         	goto	l589
  8040  00305A                     u4190:
  8041  00305A                     l4239:
  8042                           
  8043                           ;DC_motors.c: 77:             LATDbits.LATD7 = !LATDbits.LATD7;
  8044  00305A  AE7C               	btfss	124,7,c	;volatile
  8045  00305C  EF32  F018         	goto	u4201
  8046  003060  EF36  F018         	goto	u4200
  8047  003064                     u4201:
  8048  003064  6A0B               	clrf	??_checkbatterylevel^0,c
  8049  003066  2A0B               	incf	??_checkbatterylevel^0,f,c
  8050  003068  EF37  F018         	goto	u4218
  8051  00306C                     u4200:
  8052  00306C  6A0B               	clrf	??_checkbatterylevel^0,c
  8053  00306E                     u4218:
  8054  00306E  320B               	rrcf	??_checkbatterylevel^0,f,c
  8055  003070  320B               	rrcf	??_checkbatterylevel^0,f,c
  8056  003072  507C               	movf	124,w,c	;volatile
  8057  003074  180B               	xorwf	??_checkbatterylevel^0,w,c
  8058  003076  0B7F               	andlw	-129
  8059  003078  180B               	xorwf	??_checkbatterylevel^0,w,c
  8060  00307A  6E7C               	movwf	124,c	;volatile
  8061                           
  8062                           ;DC_motors.c: 78:             LATHbits.LATH3 = !LATHbits.LATH3;
  8063  00307C  A680               	btfss	128,3,c	;volatile
  8064  00307E  EF43  F018         	goto	u4221
  8065  003082  EF47  F018         	goto	u4220
  8066  003086                     u4221:
  8067  003086  6A0B               	clrf	??_checkbatterylevel^0,c
  8068  003088  2A0B               	incf	??_checkbatterylevel^0,f,c
  8069  00308A  EF48  F018         	goto	u4238
  8070  00308E                     u4220:
  8071  00308E  6A0B               	clrf	??_checkbatterylevel^0,c
  8072  003090                     u4238:
  8073  003090  460B               	rlncf	??_checkbatterylevel^0,f,c
  8074  003092  460B               	rlncf	??_checkbatterylevel^0,f,c
  8075  003094  460B               	rlncf	??_checkbatterylevel^0,f,c
  8076  003096  5080               	movf	128,w,c	;volatile
  8077  003098  180B               	xorwf	??_checkbatterylevel^0,w,c
  8078  00309A  0BF7               	andlw	-9
  8079  00309C  180B               	xorwf	??_checkbatterylevel^0,w,c
  8080  00309E  6E80               	movwf	128,c	;volatile
  8081                           
  8082                           ;DC_motors.c: 79:             LATDbits.LATD3 = !LATDbits.LATD3;
  8083  0030A0  A67C               	btfss	124,3,c	;volatile
  8084  0030A2  EF55  F018         	goto	u4241
  8085  0030A6  EF59  F018         	goto	u4240
  8086  0030AA                     u4241:
  8087  0030AA  6A0B               	clrf	??_checkbatterylevel^0,c
  8088  0030AC  2A0B               	incf	??_checkbatterylevel^0,f,c
  8089  0030AE  EF5A  F018         	goto	u4258
  8090  0030B2                     u4240:
  8091  0030B2  6A0B               	clrf	??_checkbatterylevel^0,c
  8092  0030B4                     u4258:
  8093  0030B4  460B               	rlncf	??_checkbatterylevel^0,f,c
  8094  0030B6  460B               	rlncf	??_checkbatterylevel^0,f,c
  8095  0030B8  460B               	rlncf	??_checkbatterylevel^0,f,c
  8096  0030BA  507C               	movf	124,w,c	;volatile
  8097  0030BC  180B               	xorwf	??_checkbatterylevel^0,w,c
  8098  0030BE  0BF7               	andlw	-9
  8099  0030C0  180B               	xorwf	??_checkbatterylevel^0,w,c
  8100  0030C2  6E7C               	movwf	124,c	;volatile
  8101                           
  8102                           ;DC_motors.c: 80:             LATDbits.LATD4 = !LATDbits.LATD4;
  8103  0030C4  A87C               	btfss	124,4,c	;volatile
  8104  0030C6  EF67  F018         	goto	u4261
  8105  0030CA  EF6B  F018         	goto	u4260
  8106  0030CE                     u4261:
  8107  0030CE  6A0B               	clrf	??_checkbatterylevel^0,c
  8108  0030D0  2A0B               	incf	??_checkbatterylevel^0,f,c
  8109  0030D2  EF6C  F018         	goto	u4278
  8110  0030D6                     u4260:
  8111  0030D6  6A0B               	clrf	??_checkbatterylevel^0,c
  8112  0030D8                     u4278:
  8113  0030D8  3A0B               	swapf	??_checkbatterylevel^0,f,c
  8114  0030DA  507C               	movf	124,w,c	;volatile
  8115  0030DC  180B               	xorwf	??_checkbatterylevel^0,w,c
  8116  0030DE  0BEF               	andlw	-17
  8117  0030E0  180B               	xorwf	??_checkbatterylevel^0,w,c
  8118  0030E2  6E7C               	movwf	124,c	;volatile
  8119                           
  8120                           ;DC_motors.c: 81:             LATFbits.LATF0 = !LATFbits.LATF0;
  8121  0030E4  A07E               	btfss	126,0,c	;volatile
  8122  0030E6  EF77  F018         	goto	u4281
  8123  0030EA  EF7B  F018         	goto	u4280
  8124  0030EE                     u4281:
  8125  0030EE  6A0B               	clrf	??_checkbatterylevel^0,c
  8126  0030F0  2A0B               	incf	??_checkbatterylevel^0,f,c
  8127  0030F2  EF7C  F018         	goto	u4298
  8128  0030F6                     u4280:
  8129  0030F6  6A0B               	clrf	??_checkbatterylevel^0,c
  8130  0030F8                     u4298:
  8131  0030F8  507E               	movf	126,w,c	;volatile
  8132  0030FA  180B               	xorwf	??_checkbatterylevel^0,w,c
  8133  0030FC  0BFE               	andlw	-2
  8134  0030FE  180B               	xorwf	??_checkbatterylevel^0,w,c
  8135  003100  6E7E               	movwf	126,c	;volatile
  8136                           
  8137                           ;DC_motors.c: 82:             LATHbits.LATH0 = !LATHbits.LATH0;
  8138  003102  A080               	btfss	128,0,c	;volatile
  8139  003104  EF86  F018         	goto	u4301
  8140  003108  EF8A  F018         	goto	u4300
  8141  00310C                     u4301:
  8142  00310C  6A0B               	clrf	??_checkbatterylevel^0,c
  8143  00310E  2A0B               	incf	??_checkbatterylevel^0,f,c
  8144  003110  EF8B  F018         	goto	u4318
  8145  003114                     u4300:
  8146  003114  6A0B               	clrf	??_checkbatterylevel^0,c
  8147  003116                     u4318:
  8148  003116  5080               	movf	128,w,c	;volatile
  8149  003118  180B               	xorwf	??_checkbatterylevel^0,w,c
  8150  00311A  0BFE               	andlw	-2
  8151  00311C  180B               	xorwf	??_checkbatterylevel^0,w,c
  8152  00311E  6E80               	movwf	128,c	;volatile
  8153  003120                     
  8154                           ;DC_motors.c: 83:             colourclickLEDs_RGB();
  8155  003120  ECFF  F018         	call	_colourclickLEDs_RGB	;wreg free
  8156  003124                     
  8157                           ;DC_motors.c: 84:             _delay((unsigned long)((5)*(64000000/4000.0)));
  8158  003124  0E68               	movlw	104
  8159  003126  6E0B               	movwf	??_checkbatterylevel^0,c
  8160  003128  0EE4               	movlw	228
  8161  00312A                     u6337:
  8162  00312A  2EE8               	decfsz	wreg,f,c
  8163  00312C  D7FE               	bra	u6337
  8164  00312E  2E0B               	decfsz	??_checkbatterylevel^0,f,c
  8165  003130  D7FC               	bra	u6337
  8166  003132  D000               	nop2	
  8167  003134  EF2D  F018         	goto	l4239
  8168  003138                     l589:
  8169  003138  0012               	return		;funcret
  8170  00313A                     __end_of_checkbatterylevel:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function _colourclickLEDs_RGB *****************
  8174 ;; Defined at:
  8175 ;;		line 46 in file "buttons_n_LEDs.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;Total ram usage:        2 bytes
  8194 ;; Hardware stack levels used: 1
  8195 ;; Hardware stack levels required when called: 7
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_checkbatterylevel
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text42
  8204  0031FE                     __ptext42:
  8205                           	callstack 0
  8206  0031FE                     _colourclickLEDs_RGB:
  8207                           	callstack 22
  8208  0031FE                     
  8209                           ;buttons_n_LEDs.c: 47:     LATGbits.LATG1 = 1;
  8210  0031FE  827F               	bsf	127,1,c	;volatile
  8211  003200                     
  8212                           ;buttons_n_LEDs.c: 48:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8213  003200  0E02               	movlw	2
  8214  003202  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8215  003204  0EA0               	movlw	160
  8216  003206  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8217  003208  0E92               	movlw	146
  8218  00320A                     u6347:
  8219  00320A  2EE8               	decfsz	wreg,f,c
  8220  00320C  D7FE               	bra	u6347
  8221  00320E  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8222  003210  D7FC               	bra	u6347
  8223  003212  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8224  003214  D7FA               	bra	u6347
  8225  003216  D000               	nop2	
  8226  003218                     
  8227                           ;buttons_n_LEDs.c: 49:     LATGbits.LATG1 = 0;
  8228  003218  927F               	bcf	127,1,c	;volatile
  8229                           
  8230                           ;buttons_n_LEDs.c: 50:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8231  00321A  0E02               	movlw	2
  8232  00321C  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8233  00321E  0EA0               	movlw	160
  8234  003220  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8235  003222  0E92               	movlw	146
  8236  003224                     u6357:
  8237  003224  2EE8               	decfsz	wreg,f,c
  8238  003226  D7FE               	bra	u6357
  8239  003228  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8240  00322A  D7FC               	bra	u6357
  8241  00322C  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8242  00322E  D7FA               	bra	u6357
  8243  003230  D000               	nop2	
  8244  003232                     
  8245                           ;buttons_n_LEDs.c: 52:     LATAbits.LATA4 = 1;
  8246  003232  8879               	bsf	121,4,c	;volatile
  8247                           
  8248                           ;buttons_n_LEDs.c: 53:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8249  003234  0E02               	movlw	2
  8250  003236  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8251  003238  0EA0               	movlw	160
  8252  00323A  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8253  00323C  0E92               	movlw	146
  8254  00323E                     u6367:
  8255  00323E  2EE8               	decfsz	wreg,f,c
  8256  003240  D7FE               	bra	u6367
  8257  003242  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8258  003244  D7FC               	bra	u6367
  8259  003246  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8260  003248  D7FA               	bra	u6367
  8261  00324A  D000               	nop2	
  8262  00324C                     
  8263                           ;buttons_n_LEDs.c: 54:     LATAbits.LATA4 = 0;
  8264  00324C  9879               	bcf	121,4,c	;volatile
  8265                           
  8266                           ;buttons_n_LEDs.c: 55:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8267  00324E  0E02               	movlw	2
  8268  003250  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8269  003252  0EA0               	movlw	160
  8270  003254  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8271  003256  0E92               	movlw	146
  8272  003258                     u6377:
  8273  003258  2EE8               	decfsz	wreg,f,c
  8274  00325A  D7FE               	bra	u6377
  8275  00325C  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8276  00325E  D7FC               	bra	u6377
  8277  003260  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8278  003262  D7FA               	bra	u6377
  8279  003264  D000               	nop2	
  8280  003266                     
  8281                           ;buttons_n_LEDs.c: 57:     LATFbits.LATF7 = 1;
  8282  003266  8E7E               	bsf	126,7,c	;volatile
  8283                           
  8284                           ;buttons_n_LEDs.c: 58:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8285  003268  0E02               	movlw	2
  8286  00326A  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8287  00326C  0EA0               	movlw	160
  8288  00326E  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8289  003270  0E92               	movlw	146
  8290  003272                     u6387:
  8291  003272  2EE8               	decfsz	wreg,f,c
  8292  003274  D7FE               	bra	u6387
  8293  003276  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8294  003278  D7FC               	bra	u6387
  8295  00327A  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8296  00327C  D7FA               	bra	u6387
  8297  00327E  D000               	nop2	
  8298  003280                     
  8299                           ;buttons_n_LEDs.c: 59:     LATFbits.LATF7 = 0;
  8300  003280  9E7E               	bcf	126,7,c	;volatile
  8301                           
  8302                           ;buttons_n_LEDs.c: 60:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8303  003282  0E02               	movlw	2
  8304  003284  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8305  003286  0EA0               	movlw	160
  8306  003288  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8307  00328A  0E92               	movlw	146
  8308  00328C                     u6397:
  8309  00328C  2EE8               	decfsz	wreg,f,c
  8310  00328E  D7FE               	bra	u6397
  8311  003290  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8312  003292  D7FC               	bra	u6397
  8313  003294  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8314  003296  D7FA               	bra	u6397
  8315  003298  D000               	nop2	
  8316  00329A  0012               	return		;funcret
  8317  00329C                     __end_of_colourclickLEDs_RGB:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _ADC_getval *****************
  8321 ;; Defined at:
  8322 ;;		line 26 in file "ADC.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;		None
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  tmpval          1    8[COMRAM] unsigned char 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      unsigned char 
  8329 ;; Registers used:
  8330 ;;		wreg, status,2
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;Total ram usage:        1 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; Hardware stack levels required when called: 7
  8343 ;; This function calls:
  8344 ;;		Nothing
  8345 ;; This function is called by:
  8346 ;;		_checkbatterylevel
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text43
  8351  003A9C                     __ptext43:
  8352                           	callstack 0
  8353  003A9C                     _ADC_getval:
  8354                           	callstack 22
  8355  003A9C                     
  8356                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  8357  003A9C  8060               	bsf	96,0,c	;volatile
  8358  003A9E                     l372:
  8359  003A9E  B060               	btfsc	96,0,c	;volatile
  8360  003AA0  EF54  F01D         	goto	u4181
  8361  003AA4  EF56  F01D         	goto	u4180
  8362  003AA8                     u4181:
  8363  003AA8  EF4F  F01D         	goto	l372
  8364  003AAC                     u4180:
  8365  003AAC                     
  8366                           ;ADC.c: 31:     tmpval = ADRESH;
  8367  003AAC  CF64 F009          	movff	3940,ADC_getval@tmpval	;volatile
  8368  003AB0                     
  8369                           ;ADC.c: 34:     return tmpval;
  8370  003AB0  5009               	movf	ADC_getval@tmpval^0,w,c
  8371  003AB2  0012               	return		;funcret
  8372  003AB4                     __end_of_ADC_getval:
  8373                           	callstack 0
  8374                           
  8375 ;; *************** function _USART4_init *****************
  8376 ;; Defined at:
  8377 ;;		line 8 in file "serial_comm.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;		None
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;		None
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      void 
  8384 ;; Registers used:
  8385 ;;		wreg, status,2
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;Total ram usage:        0 bytes
  8396 ;; Hardware stack levels used: 1
  8397 ;; Hardware stack levels required when called: 7
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_main
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text44
  8406  003A0E                     __ptext44:
  8407                           	callstack 0
  8408  003A0E                     _USART4_init:
  8409                           	callstack 23
  8410  003A0E                     
  8411                           ;serial_comm.c: 9:     RC0PPS = 0x12;
  8412  003A0E  0E12               	movlw	18
  8413  003A10  010E               	movlb	14	; () banked
  8414  003A12  6F62               	movwf	98,b	;volatile
  8415                           
  8416                           ;serial_comm.c: 10:     RX4PPS = 0x11;
  8417  003A14  0E11               	movlw	17
  8418  003A16  6F15               	movwf	21,b	;volatile
  8419  003A18                     
  8420                           ; BSR set to: 14
  8421                           ;serial_comm.c: 11:     TRISCbits.TRISC1 = 1;
  8422  003A18  8283               	bsf	131,1,c	;volatile
  8423  003A1A                     
  8424                           ; BSR set to: 14
  8425                           ;serial_comm.c: 13:     BAUD4CONbits.BRG16 = 0;
  8426  003A1A  97E9               	bcf	233,3,b	;volatile
  8427  003A1C                     
  8428                           ; BSR set to: 14
  8429                           ;serial_comm.c: 14:     TX4STAbits.BRGH = 0;
  8430  003A1C  95E8               	bcf	232,2,b	;volatile
  8431                           
  8432                           ;serial_comm.c: 15:     SP4BRGL = 51;
  8433  003A1E  0E33               	movlw	51
  8434  003A20  6FE5               	movwf	229,b	;volatile
  8435                           
  8436                           ;serial_comm.c: 16:     SP4BRGH = 0;
  8437  003A22  0E00               	movlw	0
  8438  003A24  6FE6               	movwf	230,b	;volatile
  8439  003A26                     
  8440                           ; BSR set to: 14
  8441                           ;serial_comm.c: 18:     RC4STAbits.CREN = 1;
  8442  003A26  89E7               	bsf	231,4,b	;volatile
  8443  003A28                     
  8444                           ; BSR set to: 14
  8445                           ;serial_comm.c: 19:     TX4STAbits.TXEN = 1;
  8446  003A28  8BE8               	bsf	232,5,b	;volatile
  8447  003A2A                     
  8448                           ; BSR set to: 14
  8449                           ;serial_comm.c: 20:     RC4STAbits.SPEN = 1;
  8450  003A2A  8FE7               	bsf	231,7,b	;volatile
  8451  003A2C                     
  8452                           ; BSR set to: 14
  8453  003A2C  0012               	return		;funcret
  8454  003A2E                     __end_of_USART4_init:
  8455                           	callstack 0
  8456                           
  8457 ;; *************** function _DCmotors_init *****************
  8458 ;; Defined at:
  8459 ;;		line 10 in file "DC_motors.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  PWMperiod       1    wreg     unsigned char 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  PWMperiod       1    8[COMRAM] unsigned char 
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      void 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8477 ;;Total ram usage:        1 bytes
  8478 ;; Hardware stack levels used: 1
  8479 ;; Hardware stack levels required when called: 8
  8480 ;; This function calls:
  8481 ;;		_buggyLEDs_init
  8482 ;;		_clicker2LEDs_init
  8483 ;;		_clicker2buttons_init
  8484 ;; This function is called by:
  8485 ;;		_main
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	text45
  8490  00373C                     __ptext45:
  8491                           	callstack 0
  8492  00373C                     _DCmotors_init:
  8493                           	callstack 22
  8494                           
  8495                           ; BSR set to: 14
  8496                           ;incstack = 0
  8497                           ;DCmotors_init@PWMperiod stored from wreg
  8498  00373C  6E09               	movwf	DCmotors_init@PWMperiod^0,c
  8499  00373E                     
  8500                           ;DC_motors.c: 12:     T2CONbits.CKPS=0b100;
  8501  00373E  50BD               	movf	189,w,c	;volatile
  8502  003740  0B8F               	andlw	-113
  8503  003742  0940               	iorlw	64
  8504  003744  6EBD               	movwf	189,c	;volatile
  8505                           
  8506                           ;DC_motors.c: 13:     T2HLTbits.MODE=0b00000;
  8507  003746  0EE0               	movlw	-32
  8508  003748  16BE               	andwf	190,f,c	;volatile
  8509                           
  8510                           ;DC_motors.c: 14:     T2CLKCONbits.CS=0b0001;
  8511  00374A  50BF               	movf	191,w,c	;volatile
  8512  00374C  0BF0               	andlw	-16
  8513  00374E  0901               	iorlw	1
  8514  003750  6EBF               	movwf	191,c	;volatile
  8515  003752                     
  8516                           ;DC_motors.c: 17:     T2PR=PWMperiod;
  8517  003752  C009  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  8518  003756                     
  8519                           ;DC_motors.c: 18:     T2CONbits.ON=1;
  8520  003756  8EBD               	bsf	189,7,c	;volatile
  8521  003758                     
  8522                           ;DC_motors.c: 21:     TRISEbits.TRISE2=0;
  8523  003758  9485               	bcf	133,2,c	;volatile
  8524  00375A                     
  8525                           ;DC_motors.c: 22:     TRISEbits.TRISE4=0;
  8526  00375A  9885               	bcf	133,4,c	;volatile
  8527  00375C                     
  8528                           ;DC_motors.c: 23:     TRISCbits.TRISC7=0;
  8529  00375C  9E83               	bcf	131,7,c	;volatile
  8530  00375E                     
  8531                           ;DC_motors.c: 24:     TRISGbits.TRISG6=0;
  8532  00375E  9C87               	bcf	135,6,c	;volatile
  8533  003760                     
  8534                           ;DC_motors.c: 26:     LATEbits.LATE2=0;
  8535  003760  947D               	bcf	125,2,c	;volatile
  8536  003762                     
  8537                           ;DC_motors.c: 27:     LATEbits.LATE4=0;
  8538  003762  987D               	bcf	125,4,c	;volatile
  8539  003764                     
  8540                           ;DC_motors.c: 28:     LATCbits.LATC7=0;
  8541  003764  9E7B               	bcf	123,7,c	;volatile
  8542  003766                     
  8543                           ;DC_motors.c: 29:     LATGbits.LATG6=0;
  8544  003766  9C7F               	bcf	127,6,c	;volatile
  8545                           
  8546                           ;DC_motors.c: 31:     PWM6DCH=0;
  8547  003768  0E00               	movlw	0
  8548  00376A  6EA3               	movwf	163,c	;volatile
  8549                           
  8550                           ;DC_motors.c: 32:     PWM7DCH=0;
  8551  00376C  0E00               	movlw	0
  8552  00376E  6EA0               	movwf	160,c	;volatile
  8553  003770                     
  8554                           ;DC_motors.c: 34:     PWM6CONbits.EN = 1;
  8555  003770  8EA4               	bsf	164,7,c	;volatile
  8556  003772                     
  8557                           ;DC_motors.c: 35:     PWM7CONbits.EN = 1;
  8558  003772  8EA1               	bsf	161,7,c	;volatile
  8559                           
  8560                           ;DC_motors.c: 37:     RE2PPS=0x0A;
  8561  003774  0E0A               	movlw	10
  8562  003776  010E               	movlb	14	; () banked
  8563  003778  6F74               	movwf	116,b	;volatile
  8564                           
  8565                           ;DC_motors.c: 38:     RC7PPS=0x0B;
  8566  00377A  0E0B               	movlw	11
  8567  00377C  6F69               	movwf	105,b	;volatile
  8568  00377E                     
  8569                           ; BSR set to: 14
  8570                           ;DC_motors.c: 41:     clicker2buttons_init();
  8571  00377E  EC72  F01D         	call	_clicker2buttons_init	;wreg free
  8572  003782                     
  8573                           ;DC_motors.c: 42:     clicker2LEDs_init();
  8574  003782  EC8D  F01D         	call	_clicker2LEDs_init	;wreg free
  8575  003786                     
  8576                           ;DC_motors.c: 43:     buggyLEDs_init();
  8577  003786  EC5A  F01D         	call	_buggyLEDs_init	;wreg free
  8578  00378A  0012               	return		;funcret
  8579  00378C                     __end_of_DCmotors_init:
  8580                           	callstack 0
  8581                           
  8582 ;; *************** function _clicker2buttons_init *****************
  8583 ;; Defined at:
  8584 ;;		line 8 in file "buttons_n_LEDs.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;		None
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		None
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;Total ram usage:        0 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; Hardware stack levels required when called: 7
  8605 ;; This function calls:
  8606 ;;		Nothing
  8607 ;; This function is called by:
  8608 ;;		_DCmotors_init
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text46
  8613  003AE4                     __ptext46:
  8614                           	callstack 0
  8615  003AE4                     _clicker2buttons_init:
  8616                           	callstack 22
  8617  003AE4                     
  8618                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
  8619  003AE4  8486               	bsf	134,2,c	;volatile
  8620                           
  8621                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
  8622  003AE6  8686               	bsf	134,3,c	;volatile
  8623                           
  8624                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  8625  003AE8  010E               	movlb	14	; () banked
  8626  003AEA  95B4               	bcf	180,2,b	;volatile
  8627                           
  8628                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  8629  003AEC  97B4               	bcf	180,3,b	;volatile
  8630  003AEE                     
  8631                           ; BSR set to: 14
  8632  003AEE  0012               	return		;funcret
  8633  003AF0                     __end_of_clicker2buttons_init:
  8634                           	callstack 0
  8635                           
  8636 ;; *************** function _clicker2LEDs_init *****************
  8637 ;; Defined at:
  8638 ;;		line 20 in file "buttons_n_LEDs.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		None
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8656 ;;Total ram usage:        0 bytes
  8657 ;; Hardware stack levels used: 1
  8658 ;; Hardware stack levels required when called: 7
  8659 ;; This function calls:
  8660 ;;		Nothing
  8661 ;; This function is called by:
  8662 ;;		_DCmotors_init
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           	psect	text47
  8667  003B1A                     __ptext47:
  8668                           	callstack 0
  8669  003B1A                     _clicker2LEDs_init:
  8670                           	callstack 22
  8671  003B1A                     
  8672                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
  8673  003B1A  9E84               	bcf	132,7,c	;volatile
  8674                           
  8675                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
  8676  003B1C  9688               	bcf	136,3,c	;volatile
  8677                           
  8678                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
  8679  003B1E  9E7C               	bcf	124,7,c	;volatile
  8680                           
  8681                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
  8682  003B20  9680               	bcf	128,3,c	;volatile
  8683  003B22  0012               	return		;funcret
  8684  003B24                     __end_of_clicker2LEDs_init:
  8685                           	callstack 0
  8686                           
  8687 ;; *************** function _buggyLEDs_init *****************
  8688 ;; Defined at:
  8689 ;;		line 77 in file "buttons_n_LEDs.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;		None
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;		None
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1    wreg      void 
  8696 ;; Registers used:
  8697 ;;		None
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;Total ram usage:        0 bytes
  8708 ;; Hardware stack levels used: 1
  8709 ;; Hardware stack levels required when called: 7
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_DCmotors_init
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text48
  8718  003AB4                     __ptext48:
  8719                           	callstack 0
  8720  003AB4                     _buggyLEDs_init:
  8721                           	callstack 22
  8722  003AB4                     
  8723                           ;buttons_n_LEDs.c: 78:     TRISHbits.TRISH1 = 0;
  8724  003AB4  9288               	bcf	136,1,c	;volatile
  8725                           
  8726                           ;buttons_n_LEDs.c: 79:     TRISDbits.TRISD3 = 0;
  8727  003AB6  9684               	bcf	132,3,c	;volatile
  8728                           
  8729                           ;buttons_n_LEDs.c: 80:     TRISDbits.TRISD4 = 0;
  8730  003AB8  9884               	bcf	132,4,c	;volatile
  8731                           
  8732                           ;buttons_n_LEDs.c: 81:     TRISFbits.TRISF0 = 0;
  8733  003ABA  9086               	bcf	134,0,c	;volatile
  8734                           
  8735                           ;buttons_n_LEDs.c: 82:     TRISHbits.TRISH0 = 0;
  8736  003ABC  9088               	bcf	136,0,c	;volatile
  8737                           
  8738                           ;buttons_n_LEDs.c: 84:     LATHbits.LATH1 = 0;
  8739  003ABE  9280               	bcf	128,1,c	;volatile
  8740                           
  8741                           ;buttons_n_LEDs.c: 85:     LATDbits.LATD3 = 0;
  8742  003AC0  967C               	bcf	124,3,c	;volatile
  8743                           
  8744                           ;buttons_n_LEDs.c: 86:     LATDbits.LATD4 = 0;
  8745  003AC2  987C               	bcf	124,4,c	;volatile
  8746                           
  8747                           ;buttons_n_LEDs.c: 87:     LATFbits.LATF0 = 0;
  8748  003AC4  907E               	bcf	126,0,c	;volatile
  8749                           
  8750                           ;buttons_n_LEDs.c: 88:     LATHbits.LATH0 = 0;
  8751  003AC6  9080               	bcf	128,0,c	;volatile
  8752  003AC8  0012               	return		;funcret
  8753  003ACA                     __end_of_buggyLEDs_init:
  8754                           	callstack 0
  8755                           
  8756 ;; *************** function _ADC_init *****************
  8757 ;; Defined at:
  8758 ;;		line 8 in file "ADC.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;Total ram usage:        0 bytes
  8777 ;; Hardware stack levels used: 1
  8778 ;; Hardware stack levels required when called: 7
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_main
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text49
  8787  003A68                     __ptext49:
  8788                           	callstack 0
  8789  003A68                     _ADC_init:
  8790                           	callstack 23
  8791  003A68                     
  8792                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  8793  003A68  8C86               	bsf	134,6,c	;volatile
  8794                           
  8795                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  8796  003A6A  010E               	movlb	14	; () banked
  8797  003A6C  8DB4               	bsf	180,6,b	;volatile
  8798                           
  8799                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  8800  003A6E  010F               	movlb	15	; () banked
  8801  003A70  9958               	bcf	88,4,b	;volatile
  8802  003A72                     
  8803                           ; BSR set to: 15
  8804                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  8805  003A72  0EFC               	movlw	-4
  8806  003A74  1758               	andwf	88,f,b	;volatile
  8807                           
  8808                           ;ADC.c: 16:     ADPCH=0b101110;
  8809  003A76  0E2E               	movlw	46
  8810  003A78  6F5F               	movwf	95,b	;volatile
  8811  003A7A                     
  8812                           ; BSR set to: 15
  8813                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  8814  003A7A  9460               	bcf	96,2,c	;volatile
  8815  003A7C                     
  8816                           ; BSR set to: 15
  8817                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  8818  003A7C  8860               	bsf	96,4,c	;volatile
  8819  003A7E                     
  8820                           ; BSR set to: 15
  8821                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  8822  003A7E  8E60               	bsf	96,7,c	;volatile
  8823  003A80                     
  8824                           ; BSR set to: 15
  8825  003A80  0012               	return		;funcret
  8826  003A82                     __end_of_ADC_init:
  8827                           	callstack 0
  8828                           
  8829 ;; *************** function _LowISR *****************
  8830 ;; Defined at:
  8831 ;;		line 77 in file "interrupts.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;		None
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8849 ;;Total ram usage:        3 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; Hardware stack levels required when called: 6
  8852 ;; This function calls:
  8853 ;;		Nothing
  8854 ;; This function is called by:
  8855 ;;		Interrupt level 1
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           	psect	intcodelo
  8860  000018                     __pintcodelo:
  8861                           	callstack 0
  8862  000018                     _LowISR:
  8863                           	callstack 17
  8864                           
  8865                           ; BSR set to: 15
  8866                           ;incstack = 0
  8867  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8868  00001A  CFD8 F006          	movff	status,??_LowISR
  8869  00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8870  000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8871  000026                     
  8872                           ;interrupts.c: 78:     if (PIR0bits.TMR0IF) {
  8873  000026  010E               	movlb	14	; () banked
  8874  000028  AB33               	btfss	51,5,b	;volatile
  8875  00002A  EF19  F000         	goto	i1u441_21
  8876  00002E  EF1B  F000         	goto	i1u441_20
  8877  000032                     i1u441_21:
  8878  000032  EF26  F000         	goto	i1l142
  8879  000036                     i1u441_20:
  8880  000036                     
  8881                           ; BSR set to: 14
  8882                           ;interrupts.c: 79:         returnhome_flag = 1;
  8883  000036  0E01               	movlw	1
  8884  000038  0100               	movlb	0	; () banked
  8885  00003A  6FBB               	movwf	_returnhome_flag& (0+255),b	;volatile
  8886                           
  8887                           ;interrupts.c: 80:         overtime_flag = 1;
  8888  00003C  0E01               	movlw	1
  8889  00003E  6FBA               	movwf	_overtime_flag& (0+255),b	;volatile
  8890                           
  8891                           ;interrupts.c: 81:         TMR0H=0b1011;
  8892  000040  0E0B               	movlw	11
  8893  000042  6ED4               	movwf	212,c	;volatile
  8894                           
  8895                           ;interrupts.c: 82:         TMR0L=0b11011011;
  8896  000044  0EDB               	movlw	219
  8897  000046  6ED3               	movwf	211,c	;volatile
  8898  000048                     
  8899                           ; BSR set to: 0
  8900                           ;interrupts.c: 83:         PIR0bits.TMR0IF = 0;
  8901  000048  010E               	movlb	14	; () banked
  8902  00004A  9B33               	bcf	51,5,b	;volatile
  8903  00004C                     i1l142:
  8904                           
  8905                           ; BSR set to: 14
  8906  00004C  C008  FFE0         	movff	??_LowISR+2,bsr
  8907  000050  C007  FFE8         	movff	??_LowISR+1,wreg
  8908  000054  C006  FFD8         	movff	??_LowISR,status
  8909  000058  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8910  00005A  0010               	retfie	
  8911  00005C                     __end_of_LowISR:
  8912                           	callstack 0
  8913                           
  8914 ;; *************** function _HighISR *****************
  8915 ;; Defined at:
  8916 ;;		line 64 in file "interrupts.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;		None
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;		None
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  1    wreg      void 
  8923 ;; Registers used:
  8924 ;;		wreg, status,2, status,0, cstack
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8934 ;;Total ram usage:        0 bytes
  8935 ;; Hardware stack levels used: 1
  8936 ;; Hardware stack levels required when called: 5
  8937 ;; This function calls:
  8938 ;;		i2_interrupts_clear
  8939 ;; This function is called by:
  8940 ;;		Interrupt level 2
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	intcode
  8945  000008                     __pintcode:
  8946                           	callstack 0
  8947  000008                     _HighISR:
  8948                           	callstack 17
  8949                           
  8950                           ; BSR set to: 14
  8951                           ;incstack = 0
  8952  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8953  00000A  EFD6  F01C         	goto	int_func
  8954                           
  8955                           	psect	intcode_body
  8956  0039AC                     __pintcode_body:
  8957                           	callstack 17
  8958  0039AC                     int_func:
  8959                           	callstack 17
  8960  0039AC                     
  8961                           ;interrupts.c: 65:     if (PIR0bits.INT1IF) {
  8962  0039AC  010E               	movlb	14	; () banked
  8963  0039AE  A333               	btfss	51,1,b	;volatile
  8964  0039B0  EFDC  F01C         	goto	i2u440_41
  8965  0039B4  EFDE  F01C         	goto	i2u440_40
  8966  0039B8                     i2u440_41:
  8967  0039B8  EFE5  F01C         	goto	i2l136
  8968  0039BC                     i2u440_40:
  8969  0039BC                     
  8970                           ; BSR set to: 14
  8971                           ;interrupts.c: 66:         colourcard_flag = 1;
  8972  0039BC  0E01               	movlw	1
  8973  0039BE  0100               	movlb	0	; () banked
  8974  0039C0  6FBD               	movwf	_colourcard_flag& (0+255),b	;volatile
  8975  0039C2                     
  8976                           ; BSR set to: 0
  8977                           ;interrupts.c: 68:         interrupts_clear();
  8978  0039C2  EC41  F01D         	call	i2_interrupts_clear	;wreg free
  8979  0039C6                     
  8980                           ;interrupts.c: 69:         PIR0bits.INT1IF = 0;
  8981  0039C6  010E               	movlb	14	; () banked
  8982  0039C8  9333               	bcf	51,1,b	;volatile
  8983  0039CA                     i2l136:
  8984                           
  8985                           ; BSR set to: 14
  8986  0039CA  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8987  0039CC  0011               	retfie		f
  8988  0039CE                     __end_of_HighISR:
  8989                           	callstack 0
  8990                           
  8991 ;; *************** function i2_interrupts_clear *****************
  8992 ;; Defined at:
  8993 ;;		line 37 in file "interrupts.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;		None
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;Total ram usage:        0 bytes
  9012 ;; Hardware stack levels used: 1
  9013 ;; Hardware stack levels required when called: 4
  9014 ;; This function calls:
  9015 ;;		i2_I2C_2_Master_Start
  9016 ;;		i2_I2C_2_Master_Stop
  9017 ;;		i2_I2C_2_Master_Write
  9018 ;;		i2_interrupts_colourclick
  9019 ;; This function is called by:
  9020 ;;		_HighISR
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text52
  9025  003A82                     __ptext52:
  9026                           	callstack 0
  9027  003A82                     i2_interrupts_clear:
  9028                           	callstack 17
  9029  003A82                     
  9030                           ;interrupts.c: 38:     I2C_2_Master_Start();
  9031  003A82  EC97  F01D         	call	i2_I2C_2_Master_Start	;wreg free
  9032                           
  9033                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  9034  003A86  0E52               	movlw	82
  9035  003A88  EC78  F01D         	call	i2_I2C_2_Master_Write
  9036                           
  9037                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  9038  003A8C  0EE6               	movlw	230
  9039  003A8E  EC78  F01D         	call	i2_I2C_2_Master_Write
  9040                           
  9041                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  9042  003A92  EC92  F01D         	call	i2_I2C_2_Master_Stop	;wreg free
  9043                           
  9044                           ;interrupts.c: 43:     interrupts_colourclick();
  9045  003A96  ECED  F01B         	call	i2_interrupts_colourclick	;wreg free
  9046  003A9A  0012               	return		;funcret
  9047  003A9C                     __end_ofi2_interrupts_clear:
  9048                           	callstack 0
  9049                           
  9050 ;; *************** function i2_interrupts_colourclick *****************
  9051 ;; Defined at:
  9052 ;;		line 50 in file "interrupts.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2, status,0, cstack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9070 ;;Total ram usage:        1 bytes
  9071 ;; Hardware stack levels used: 1
  9072 ;; Hardware stack levels required when called: 3
  9073 ;; This function calls:
  9074 ;;		i2_colourclick_writetoaddr
  9075 ;; This function is called by:
  9076 ;;		i2_interrupts_clear
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text53
  9081  0037DA                     __ptext53:
  9082                           	callstack 0
  9083  0037DA                     i2_interrupts_colourclick:
  9084                           	callstack 17
  9085  0037DA                     
  9086                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  9087  0037DA  0E13               	movlw	19
  9088  0037DC  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9089  0037DE  0E00               	movlw	0
  9090  0037E0  EC17  F01D         	call	i2_colourclick_writetoaddr
  9091  0037E4                     
  9092                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9093  0037E4  0E3F               	movlw	63
  9094  0037E6  6E05               	movwf	??i2_interrupts_colourclick^0,c
  9095  0037E8  0E55               	movlw	85
  9096  0037EA                     i2u640_47:
  9097  0037EA  2EE8               	decfsz	wreg,f,c
  9098  0037EC  D7FE               	bra	i2u640_47
  9099  0037EE  2E05               	decfsz	??i2_interrupts_colourclick^0,f,c
  9100  0037F0  D7FC               	bra	i2u640_47
  9101  0037F2  F000               	nop	
  9102  0037F4                     
  9103                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  9104  0037F4  0E04               	movlw	4
  9105  0037F6  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9106  0037F8  0E0C               	movlw	12
  9107  0037FA  EC17  F01D         	call	i2_colourclick_writetoaddr
  9108  0037FE                     
  9109                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  9110  0037FE  C055  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
  9111  003802  0E04               	movlw	4
  9112  003804  EC17  F01D         	call	i2_colourclick_writetoaddr
  9113  003808                     
  9114                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  9115  003808  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  9116  00380A  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9117  00380C  0E05               	movlw	5
  9118  00380E  EC17  F01D         	call	i2_colourclick_writetoaddr
  9119  003812                     
  9120                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  9121  003812  C053  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
  9122  003816  0E06               	movlw	6
  9123  003818  EC17  F01D         	call	i2_colourclick_writetoaddr
  9124  00381C                     
  9125                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  9126  00381C  5054               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  9127  00381E  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9128  003820  0E07               	movlw	7
  9129  003822  EC17  F01D         	call	i2_colourclick_writetoaddr
  9130  003826  0012               	return		;funcret
  9131  003828                     __end_ofi2_interrupts_colourclick:
  9132                           	callstack 0
  9133                           
  9134 ;; *************** function i2_colourclick_writetoaddr *****************
  9135 ;; Defined at:
  9136 ;;		line 33 in file "colour_click.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  address         1    wreg     unsigned char 
  9139 ;;  value           1    2[COMRAM] unsigned char 
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  address         1    3[COMRAM] unsigned char 
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  1    wreg      void 
  9144 ;; Registers used:
  9145 ;;		wreg, status,2, status,0, cstack
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9155 ;;Total ram usage:        2 bytes
  9156 ;; Hardware stack levels used: 1
  9157 ;; Hardware stack levels required when called: 2
  9158 ;; This function calls:
  9159 ;;		i2_I2C_2_Master_Start
  9160 ;;		i2_I2C_2_Master_Stop
  9161 ;;		i2_I2C_2_Master_Write
  9162 ;; This function is called by:
  9163 ;;		i2_interrupts_colourclick
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text54
  9168  003A2E                     __ptext54:
  9169                           	callstack 0
  9170  003A2E                     i2_colourclick_writetoaddr:
  9171                           	callstack 17
  9172                           
  9173                           ;incstack = 0
  9174                           ;i2colourclick_writetoaddr@address stored from wreg
  9175  003A2E  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
  9176  003A30                     
  9177                           ;colour_click.c: 34:     I2C_2_Master_Start();
  9178  003A30  EC97  F01D         	call	i2_I2C_2_Master_Start	;wreg free
  9179                           
  9180                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  9181  003A34  0E52               	movlw	82
  9182  003A36  EC78  F01D         	call	i2_I2C_2_Master_Write
  9183                           
  9184                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  9185  003A3A  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
  9186  003A3C  0980               	iorlw	128
  9187  003A3E  EC78  F01D         	call	i2_I2C_2_Master_Write
  9188                           
  9189                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  9190  003A42  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
  9191  003A44  EC78  F01D         	call	i2_I2C_2_Master_Write
  9192                           
  9193                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  9194  003A48  EC92  F01D         	call	i2_I2C_2_Master_Stop	;wreg free
  9195  003A4C  0012               	return		;funcret
  9196  003A4E                     __end_ofi2_colourclick_writetoaddr:
  9197                           	callstack 0
  9198                           
  9199 ;; *************** function i2_I2C_2_Master_Write *****************
  9200 ;; Defined at:
  9201 ;;		line 64 in file "I2C.c"
  9202 ;; Parameters:    Size  Location     Type
  9203 ;;  data_byte       1    wreg     unsigned char 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  data_byte       1    1[COMRAM] unsigned char 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  1    wreg      void 
  9208 ;; Registers used:
  9209 ;;		wreg, status,2, status,0, cstack
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9219 ;;Total ram usage:        1 bytes
  9220 ;; Hardware stack levels used: 1
  9221 ;; Hardware stack levels required when called: 1
  9222 ;; This function calls:
  9223 ;;		i2_I2C_2_Master_Idle
  9224 ;; This function is called by:
  9225 ;;		i2_interrupts_clear
  9226 ;;		i2_colourclick_writetoaddr
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text55
  9231  003AF0                     __ptext55:
  9232                           	callstack 0
  9233  003AF0                     i2_I2C_2_Master_Write:
  9234                           	callstack 17
  9235                           
  9236                           ;incstack = 0
  9237                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9238  003AF0  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9239  003AF2                     
  9240                           ;I2C.c: 65:   I2C_2_Master_Idle();
  9241  003AF2  EC7A  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  9242  003AF6                     
  9243                           ;I2C.c: 66:   SSP2BUF = data_byte;
  9244  003AF6  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9245  003AFA  0012               	return		;funcret
  9246  003AFC                     __end_ofi2_I2C_2_Master_Write:
  9247                           	callstack 0
  9248                           
  9249 ;; *************** function i2_I2C_2_Master_Stop *****************
  9250 ;; Defined at:
  9251 ;;		line 55 in file "I2C.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;		None
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, status,2, status,0, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9269 ;;Total ram usage:        0 bytes
  9270 ;; Hardware stack levels used: 1
  9271 ;; Hardware stack levels required when called: 1
  9272 ;; This function calls:
  9273 ;;		i2_I2C_2_Master_Idle
  9274 ;; This function is called by:
  9275 ;;		i2_interrupts_clear
  9276 ;;		i2_colourclick_writetoaddr
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text56
  9281  003B24                     __ptext56:
  9282                           	callstack 0
  9283  003B24                     i2_I2C_2_Master_Stop:
  9284                           	callstack 17
  9285  003B24                     
  9286                           ;I2C.c: 56:   I2C_2_Master_Idle();
  9287  003B24  EC7A  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  9288  003B28                     
  9289                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  9290  003B28  010E               	movlb	14	; () banked
  9291  003B2A  85DA               	bsf	218,2,b	;volatile
  9292  003B2C                     
  9293                           ; BSR set to: 14
  9294  003B2C  0012               	return		;funcret
  9295  003B2E                     __end_ofi2_I2C_2_Master_Stop:
  9296                           	callstack 0
  9297                           
  9298 ;; *************** function i2_I2C_2_Master_Start *****************
  9299 ;; Defined at:
  9300 ;;		line 37 in file "I2C.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;		None
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;		None
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, status,2, status,0, cstack
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;Total ram usage:        0 bytes
  9319 ;; Hardware stack levels used: 1
  9320 ;; Hardware stack levels required when called: 1
  9321 ;; This function calls:
  9322 ;;		i2_I2C_2_Master_Idle
  9323 ;; This function is called by:
  9324 ;;		i2_interrupts_clear
  9325 ;;		i2_colourclick_writetoaddr
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text57
  9330  003B2E                     __ptext57:
  9331                           	callstack 0
  9332  003B2E                     i2_I2C_2_Master_Start:
  9333                           	callstack 17
  9334  003B2E                     
  9335                           ;I2C.c: 38:   I2C_2_Master_Idle();
  9336  003B2E  EC7A  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  9337  003B32                     
  9338                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  9339  003B32  010E               	movlb	14	; () banked
  9340  003B34  81DA               	bsf	218,0,b	;volatile
  9341  003B36                     
  9342                           ; BSR set to: 14
  9343  003B36  0012               	return		;funcret
  9344  003B38                     __end_ofi2_I2C_2_Master_Start:
  9345                           	callstack 0
  9346                           
  9347 ;; *************** function i2_I2C_2_Master_Idle *****************
  9348 ;; Defined at:
  9349 ;;		line 29 in file "I2C.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;		None
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		wreg, status,2, status,0
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9367 ;;Total ram usage:        1 bytes
  9368 ;; Hardware stack levels used: 1
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		i2_I2C_2_Master_Start
  9373 ;;		i2_I2C_2_Master_Stop
  9374 ;;		i2_I2C_2_Master_Write
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text58
  9379  0038F4                     __ptext58:
  9380                           	callstack 0
  9381  0038F4                     i2_I2C_2_Master_Idle:
  9382                           	callstack 17
  9383  0038F4                     i2l449:
  9384  0038F4  010E               	movlb	14	; () banked
  9385  0038F6  B5D8               	btfsc	216,2,b	;volatile
  9386  0038F8  EF80  F01C         	goto	i2u371_41
  9387  0038FC  EF82  F01C         	goto	i2u371_40
  9388  003900                     i2u371_41:
  9389  003900  EF7A  F01C         	goto	i2l449
  9390  003904                     i2u371_40:
  9391  003904                     
  9392                           ; BSR set to: 14
  9393  003904  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9394  003908  0E1F               	movlw	31
  9395  00390A  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9396  00390C  A4D8               	btfss	status,2,c
  9397  00390E  EF8B  F01C         	goto	i2u372_41
  9398  003912  EF8D  F01C         	goto	i2u372_40
  9399  003916                     i2u372_41:
  9400  003916  EF7A  F01C         	goto	i2l449
  9401  00391A                     i2u372_40:
  9402  00391A                     
  9403                           ; BSR set to: 14
  9404  00391A  0012               	return		;funcret
  9405  00391C                     __end_ofi2_I2C_2_Master_Idle:
  9406                           	callstack 0
  9407                           
  9408                           	psect	rparam
  9409  0000                     
  9410                           	psect	temp
  9411  000057                     btemp:
  9412                           	callstack 0
  9413  000057                     	ds	1
  9414  0000                     int$flags	set	btemp
  9415  0000                     wtemp8	set	btemp+1
  9416  0000                     ttemp5	set	btemp+1
  9417  0000                     ttemp6	set	btemp+4
  9418  0000                     ttemp7	set	btemp+8
  9419                           
  9420                           	psect	idloc
  9421                           
  9422                           ;Config register IDLOC0 @ 0x200000
  9423                           ;	unspecified, using default values
  9424  200000                     	org	2097152
  9425  200000  0FFF               	dw	4095
  9426                           
  9427                           ;Config register IDLOC1 @ 0x200002
  9428                           ;	unspecified, using default values
  9429  200002                     	org	2097154
  9430  200002  0FFF               	dw	4095
  9431                           
  9432                           ;Config register IDLOC2 @ 0x200004
  9433                           ;	unspecified, using default values
  9434  200004                     	org	2097156
  9435  200004  0FFF               	dw	4095
  9436                           
  9437                           ;Config register IDLOC3 @ 0x200006
  9438                           ;	unspecified, using default values
  9439  200006                     	org	2097158
  9440  200006  0FFF               	dw	4095
  9441                           
  9442                           ;Config register IDLOC4 @ 0x200008
  9443                           ;	unspecified, using default values
  9444  200008                     	org	2097160
  9445  200008  0FFF               	dw	4095
  9446                           
  9447                           ;Config register IDLOC5 @ 0x20000A
  9448                           ;	unspecified, using default values
  9449  20000A                     	org	2097162
  9450  20000A  0FFF               	dw	4095
  9451                           
  9452                           ;Config register IDLOC6 @ 0x20000C
  9453                           ;	unspecified, using default values
  9454  20000C                     	org	2097164
  9455  20000C  0FFF               	dw	4095
  9456                           
  9457                           ;Config register IDLOC7 @ 0x20000E
  9458                           ;	unspecified, using default values
  9459  20000E                     	org	2097166
  9460  20000E  0FFF               	dw	4095
  9461                           
  9462                           	psect	config
  9463                           
  9464                           ;Config register CONFIG1L @ 0x300000
  9465                           ;	External Oscillator mode Selection bits
  9466                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9467                           ;	Power-up default value for COSC bits
  9468                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9469  300000                     	org	3145728
  9470  300000  AA                 	db	170
  9471                           
  9472                           ;Config register CONFIG1H @ 0x300001
  9473                           ;	unspecified, using default values
  9474                           ;	Clock Out Enable bit
  9475                           ;	CLKOUTEN = 0x1, unprogrammed default
  9476                           ;	Clock Switch Enable bit
  9477                           ;	CSWEN = 0x1, unprogrammed default
  9478                           ;	Fail-Safe Clock Monitor Enable bit
  9479                           ;	FCMEN = 0x1, unprogrammed default
  9480  300001                     	org	3145729
  9481  300001  FF                 	db	255
  9482                           
  9483                           ;Config register CONFIG2L @ 0x300002
  9484                           ;	unspecified, using default values
  9485                           ;	Master Clear Enable bit
  9486                           ;	MCLRE = 0x1, unprogrammed default
  9487                           ;	Power-up Timer Enable bit
  9488                           ;	PWRTE = 0x1, unprogrammed default
  9489                           ;	Low-power BOR enable bit
  9490                           ;	LPBOREN = 0x1, unprogrammed default
  9491                           ;	Brown-out Reset Enable bits
  9492                           ;	BOREN = 0x3, unprogrammed default
  9493  300002                     	org	3145730
  9494  300002  FF                 	db	255
  9495                           
  9496                           ;Config register CONFIG2H @ 0x300003
  9497                           ;	unspecified, using default values
  9498                           ;	Brown Out Reset Voltage selection bits
  9499                           ;	BORV = 0x3, unprogrammed default
  9500                           ;	ZCD Disable bit
  9501                           ;	ZCD = 0x1, unprogrammed default
  9502                           ;	PPSLOCK bit One-Way Set Enable bit
  9503                           ;	PPS1WAY = 0x1, unprogrammed default
  9504                           ;	Stack Full/Underflow Reset Enable bit
  9505                           ;	STVREN = 0x1, unprogrammed default
  9506                           ;	Debugger Enable bit
  9507                           ;	DEBUG = 0x1, unprogrammed default
  9508                           ;	Extended Instruction Set Enable bit
  9509                           ;	XINST = 0x1, unprogrammed default
  9510  300003                     	org	3145731
  9511  300003  FF                 	db	255
  9512                           
  9513                           ;Config register CONFIG3L @ 0x300004
  9514                           ;	WDT Period Select bits
  9515                           ;	WDTCPS = 0x1F, unprogrammed default
  9516                           ;	WDT operating mode
  9517                           ;	WDTE = OFF, WDT Disabled
  9518  300004                     	org	3145732
  9519  300004  9F                 	db	159
  9520                           
  9521                           ;Config register CONFIG3H @ 0x300005
  9522                           ;	unspecified, using default values
  9523                           ;	WDT Window Select bits
  9524                           ;	WDTCWS = 0x7, unprogrammed default
  9525                           ;	WDT input clock selector
  9526                           ;	WDTCCS = 0x7, unprogrammed default
  9527  300005                     	org	3145733
  9528  300005  FF                 	db	255
  9529                           
  9530                           ;Config register CONFIG4L @ 0x300006
  9531                           ;	unspecified, using default values
  9532                           ;	Write Protection Block 0
  9533                           ;	WRT0 = 0x1, unprogrammed default
  9534                           ;	Write Protection Block 1
  9535                           ;	WRT1 = 0x1, unprogrammed default
  9536                           ;	Write Protection Block 2
  9537                           ;	WRT2 = 0x1, unprogrammed default
  9538                           ;	Write Protection Block 3
  9539                           ;	WRT3 = 0x1, unprogrammed default
  9540                           ;	Write Protection Block 3
  9541                           ;	WRT4 = 0x1, unprogrammed default
  9542                           ;	Write Protection Block 3
  9543                           ;	WRT5 = 0x1, unprogrammed default
  9544                           ;	Write Protection Block 3
  9545                           ;	WRT6 = 0x1, unprogrammed default
  9546                           ;	Write Protection Block 3
  9547                           ;	WRT7 = 0x1, unprogrammed default
  9548  300006                     	org	3145734
  9549  300006  FF                 	db	255
  9550                           
  9551                           ;Config register CONFIG4H @ 0x300007
  9552                           ;	unspecified, using default values
  9553                           ;	Configuration Register Write Protection bit
  9554                           ;	WRTC = 0x1, unprogrammed default
  9555                           ;	Boot Block Write Protection bit
  9556                           ;	WRTB = 0x1, unprogrammed default
  9557                           ;	Data EEPROM Write Protection bit
  9558                           ;	WRTD = 0x1, unprogrammed default
  9559                           ;	Scanner Enable bit
  9560                           ;	SCANE = 0x1, unprogrammed default
  9561                           ;	Low Voltage Programming Enable bit
  9562                           ;	LVP = 0x1, unprogrammed default
  9563  300007                     	org	3145735
  9564  300007  FF                 	db	255
  9565                           
  9566                           ;Config register CONFIG5L @ 0x300008
  9567                           ;	unspecified, using default values
  9568                           ;	UserNVM Program Memory Code Protection bit
  9569                           ;	CP = 0x1, unprogrammed default
  9570                           ;	DataNVM Memory Code Protection bit
  9571                           ;	CPD = 0x1, unprogrammed default
  9572  300008                     	org	3145736
  9573  300008  FF                 	db	255
  9574                           
  9575                           ;Config register CONFIG5H @ 0x300009
  9576                           ;	unspecified, using default values
  9577  300009                     	org	3145737
  9578  300009  FF                 	db	255
  9579                           
  9580                           ;Config register CONFIG6L @ 0x30000A
  9581                           ;	unspecified, using default values
  9582                           ;	Table Read Protection Block 0
  9583                           ;	EBTR0 = 0x1, unprogrammed default
  9584                           ;	Table Read Protection Block 1
  9585                           ;	EBTR1 = 0x1, unprogrammed default
  9586                           ;	Table Read Protection Block 2
  9587                           ;	EBTR2 = 0x1, unprogrammed default
  9588                           ;	Table Read Protection Block 3
  9589                           ;	EBTR3 = 0x1, unprogrammed default
  9590                           ;	Table Read Protection Block 4
  9591                           ;	EBTR4 = 0x1, unprogrammed default
  9592                           ;	Table Read Protection Block 5
  9593                           ;	EBTR5 = 0x1, unprogrammed default
  9594                           ;	Table Read Protection Block 6
  9595                           ;	EBTR6 = 0x1, unprogrammed default
  9596                           ;	Table Read Protection Block 7
  9597                           ;	EBTR7 = 0x1, unprogrammed default
  9598  30000A                     	org	3145738
  9599  30000A  FF                 	db	255
  9600                           
  9601                           ;Config register CONFIG6H @ 0x30000B
  9602                           ;	unspecified, using default values
  9603                           ;	Boot Block Table Read Protection bit
  9604                           ;	EBTRB = 0x1, unprogrammed default
  9605  30000B                     	org	3145739
  9606  30000B  FF                 	db	255
  9607                           tosu	equ	0xFFF
  9608                           tosh	equ	0xFFE
  9609                           tosl	equ	0xFFD
  9610                           stkptr	equ	0xFFC
  9611                           pclatu	equ	0xFFB
  9612                           pclath	equ	0xFFA
  9613                           pcl	equ	0xFF9
  9614                           tblptru	equ	0xFF8
  9615                           tblptrh	equ	0xFF7
  9616                           tblptrl	equ	0xFF6
  9617                           tablat	equ	0xFF5
  9618                           prodh	equ	0xFF4
  9619                           prodl	equ	0xFF3
  9620                           indf0	equ	0xFEF
  9621                           postinc0	equ	0xFEE
  9622                           postdec0	equ	0xFED
  9623                           preinc0	equ	0xFEC
  9624                           plusw0	equ	0xFEB
  9625                           fsr0h	equ	0xFEA
  9626                           fsr0l	equ	0xFE9
  9627                           wreg	equ	0xFE8
  9628                           indf1	equ	0xFE7
  9629                           postinc1	equ	0xFE6
  9630                           postdec1	equ	0xFE5
  9631                           preinc1	equ	0xFE4
  9632                           plusw1	equ	0xFE3
  9633                           fsr1h	equ	0xFE2
  9634                           fsr1l	equ	0xFE1
  9635                           bsr	equ	0xFE0
  9636                           indf2	equ	0xFDF
  9637                           postinc2	equ	0xFDE
  9638                           postdec2	equ	0xFDD
  9639                           preinc2	equ	0xFDC
  9640                           plusw2	equ	0xFDB
  9641                           fsr2h	equ	0xFDA
  9642                           fsr2l	equ	0xFD9
  9643                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         8
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     90      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2946_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC2@buf(BANK0[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC2@buf(BANK0[100]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    clearance@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    clearance@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC2@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_testingRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_testingRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_testingRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S29$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S29$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_colourcards_readRGBC
    _interrupts_clear->_interrupts_colourclick
    _interrupts_colourclick->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourcards_testingRGBC->_colourcards_readRGBC
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->___fldiv
    _left->___fldiv
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fladd->___flmul
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___fladd
    _clearance->_stop
    _stop->_DCmotors_setPWM
    _reverse->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul
    _checkbatterylevel->_colourclickLEDs_RGB

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colourclick
    i2_interrupts_colourclick->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourcards_testingRGBC
    _colourcards_testingRGBC->_colourcards_readRGBC
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->___fldiv
    _left->___fldiv
    _colourcards_normaliseRGBC->___fldiv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  240865
                                             61 BANK0     29    29      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
            _colourcards_testingRGBC
                  _colourclickLEDs_C
                   _colourclick_init
               _colourclick_readRGBC
                            _forward
                    _interrupts_init
                            _reverse
                               _stop
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
             _interrupts_colourclick
 ---------------------------------------------------------------------------------
 (3) _interrupts_colourclick                               1     1      0     750
                                             12 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     816
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourcards_testingRGBC                              8     2      6  112721
                                             53 BANK0      8     2      6
               _colourcards_readRGBC
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _colourcards_readRGBC                                20    14      6  112292
                                             76 COMRAM     2     2      0
                                             35 BANK0     18    12      6
                             ___flge
                          _clearance
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (3) _turnright                                            6     0      6   36622
                                             29 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _turnleft                                             6     0      6   36352
                                             29 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (4) _right                                               17    11      6   16868
                                             75 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _left                                                17    11      6   16868
                                             75 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2200
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    5958
                                             22 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2540
                                             47 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _forward                                              5     1      4    2575
                                             33 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _colourclick_readRGBC2                                5     2      3    2258
                                             21 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourclick_readRGBC                                 2     0      2    1148
                                             19 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (2) _colourclick_readR                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readG                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readC                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readB                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourcards_normaliseRGBC                           12     8      4    5096
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1234
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                             63 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _clearance                                            6     2      4   10058
                                             39 COMRAM     6     2      4
                            _reverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    6179
                                             33 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _reverse                                              5     1      4    2879
                                             33 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    1943
                                             22 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             14 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    2     2      0      46
                                             10 COMRAM     2     2      0
                         _ADC_getval
                _colourclickLEDs_RGB
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_RGB                                  2     2      0       0
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              8 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     244
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (10) i2_interrupts_clear                                  0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
           i2_interrupts_colourclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_colourclick                            1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (12) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
     _colourclickLEDs_RGB
   _colourcards_readRGBC
     ___flge
       ___xxtofl (ARG)
     _clearance
       _reverse
         _DCmotors_setPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _DCmotors_setPWM
     _colourcards_normaliseRGBC
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _reverse
     _stop
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
       _right
         _DCmotors_setPWM
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
     _turnright
       _left
       _right
   _colourcards_testingRGBC
     _colourcards_readRGBC
     _colourclickLEDs_C
   _colourclickLEDs_C
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colourclick_readRGBC
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colourclick
         _colourclick_writetoaddr
   _reverse
   _stop
   _timer0_init

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colourclick
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5A      5E       5       58.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4       8        0.0%
DATA                 0      0      B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 04:38:24 2021

      colourcards_normaliseRGBC@rel 006F         colourclick_readRGBC2@tmpval 0016  
                      ___fldiv@aexp 006C                        ___fldiv@bexp 006B  
                      ___fldiv@sign 0064                                  l71 236C  
                                l67 2350               __end_of_DCmotors_init 378C  
                      ___awdiv@sign 0014                                  bsr 000FE0  
               ___wmul@multiplicand 000B                                 l130 37D8  
                               l220 1608                                 l124 3988  
                               l223 1612                                 l127 3A66  
                               l312 38A0                                 l321 369A  
                               l330 34FC                                 l410 3AD6  
                               l227 344A                                 l315 3A0C  
                               l404 3AEE                                 l324 373A  
                               l413 329A                                 l318 364A  
                               l407 3B22                                 l327 36EA  
                               l416 39AA                                 l338 2F3E  
                               l419 3AC8                                 l372 3A9E  
                               l452 38F2                                 l605 33B6  
                               l269 2DE8                                 l461 3B04  
                               l374 3AAC                                 l446 38CA  
                               l375 3AB2                                 l455 3B0E  
                               l616 3440                                 l608 355A  
                               l464 3AE2                                 l369 3A80  
                               l449 38CC                                 l458 3B18  
                               l626 28E2                                 l467 3868  
                               l627 28E4                                 l643 35FA  
                               l492 3A2C                                 l637 26DC  
                               l582 2AB8                                 l638 26DE  
                               l575 378A                                 l648 35AA  
                               l760 39EC                                 l763 3940  
                               l589 3138                                 l597 3328  
                               l994 31FC                                 wreg 000FE8  
                      ___flmul@aexp 0028                        ___flmul@bexp 0029  
                      ___flmul@sign 0023                        ___flmul@temp 002E  
             ?_colourclick_readRGBC 0014                        ___flmul@prod 002A  
               __size_of_ADC_getval 0018                                l1033 3042  
                              l1300 1AD2                                l1028 2FFC  
                              l1308 191C                                l1421 2C6C  
                              l3101 3B00                                l1317 19EC  
                              l1350 20BC                                l1318 19DA  
                              l3111 3836                                l3103 3B10  
                              l1432 2C04                                l3121 391C  
                              l3201 29AA                                l1345 2298  
                              l1425 2BA8                                l3113 383E  
                              l3105 3B14                                l1418 2B10  
                              l3131 314C                                l3123 3938  
                              l3203 29CA                                l1347 20F8  
                              l3115 3864                                l3107 382A  
                              l1291 1802                                l3211 1620  
                              l1356 213E                                l1292 17F0  
                              l3141 3172                                l3133 3154  
                              l3205 29E6                                l3117 3866  
                              l3109 382E                                l3301 17D4  
                              l1293 17B6                                l3221 1660  
                              l3213 162E                                l1381 1EFC  
                              l4101 3A4E                                l1358 21B6  
                              l3151 31AA                                l3143 317A  
                              l3135 3158                                l3127 313A  
                              l3207 2A50                                l1359 21A4  
                              l3311 1820                                l3303 17E2  
                              l3231 1692                                l3223 1662  
                              l3215 1630                                l4111 38B6  
                              l4103 38A2                                l1384 1D8E  
                              l4201 3766                                l4121 3AB0  
                              l3161 31D6                                l3153 31B0  
                              l3145 318C                                l3137 3166  
                              l3129 313E                                l3401 1AAC  
                              l3321 1860                                l3305 17E4  
                              l3241 16BA                                l3233 1694  
                              l3217 1640                                l3225 166A  
                              l3209 1614                                l1377 1B98  
                              l4113 38B8                                l4105 38AC  
                              l1394 1EBE                                l1386 1E06  
                              l4211 3786                                l4203 3770  
                              l4131 3200                                l3155 31C6  
                              l3147 3194                                l3163 31DC  
                              l3139 316E                                l3411 1EFE  
                              l3091 3B06                                l3171 35FC  
                              l3403 1AB2                                l3331 188A  
                              l3323 186C                                l3315 1834  
                              l3307 17EE                                l3251 16F4  
                              l3243 16CA                                l3235 169A  
                              l3227 167A                                l3219 1650  
                              l1387 1DF4                                l4107 38B2  
                              l4115 3ACA                                l4125 3AE4  
                              l4205 3772                                l4221 3A0E  
                              l4141 3280                                l4133 3218  
                              l3165 31EC                                l3157 31CE  
                              l3149 319C                                l3501 212E  
                              l3421 1F3C                                l3413 1F0C  
                              l3093 3B0A                                l3173 3642  
                              l3405 1AC0                                l3341 18FC  
                              l3325 1870                                l3317 1844  
                              l3309 1810                                l3333 1890  
                              l3261 1720                                l3253 1706  
                              l3245 16DA                                l3237 16A8  
                              l3229 1680                                l4109 38B4  
                              l4117 3AD0                                l4213 39CE  
                              l4143 3AB4                                l4127 3B1A  
                              l4207 377E                                l4231 3A28  
                              l4223 3A18                                l4119 3A9C  
                              l4135 3232                                l3167 31F4  
                              l3159 31D0                                l3511 216E  
                              l3503 213C                                l3431 1F6C  
                              l3423 1F4C                                l3415 1F1A  
                              l3087 38CC                                l3095 3ADA  
                              l3183 36EC                                l3191 36E2  
                              l3407 1AC2                                l3351 1956  
                              l3335 18B6                                l3343 190C  
                              l3327 187E                                l3319 1852  
                              l3271 1734                                l3263 1724  
                              l3255 1714                                l3247 16DC  
                              l3239 16AA                                l4215 39D6  
                              l4161 3A72                                l4209 3782  
                              l4233 3A2A                                l4225 3A1A  
                              l4137 324C                                l4129 31FE  
                              l4241 3120                                l3521 21E0  
                              l3513 219C                                l3505 214E  
                              l3441 1FA2                                l3433 1F72  
                              l3425 1F4E                                l3417 1F1C  
                              l3089 38DC                                l3097 3ADE  
                              l3185 3732                                l3177 364C  
                              l3361 1986                                l3353 1960  
                              l3345 1932                                l3337 18EA  
                              l3329 1880                                l3281 1748  
                              l3273 1738                                l3265 1728  
                              l3257 1718                                l3249 16E4  
                              l3601 1C28                                l4217 39E0  
                              l4163 3A7A                                l4227 3A1C  
                              l4139 3266                                l4243 3124  
                              l4235 3044                                l3195 28E6  
                              l3531 2258                                l3523 220A  
                              l3507 215C                                l3451 1FE2  
                              l3443 1FB2                                l3435 1F80  
                              l3419 1F2C                                l3427 1F56  
                              l3099 3AFC                                l3179 3692  
                              l3371 19AE                                l3363 198A  
                              l3355 196E                                l3347 1942  
                              l3339 18EC                                l3291 1782  
                              l3283 174C                                l3275 173C  
                              l3267 172C                                l3259 171C  
                              l3611 1C6A                                l3603 1C34  
                              l4171 386E                                l4219 39EA  
                              l4165 3A7C                                l4181 373E  
                              l4229 3A26                                l4237 304A  
                              l3197 2902                                l3541 228E  
                              l3533 2274                                l3517 21C6  
                              l3525 220E                                l3509 2160  
                              l3453 1FF2                                l3461 2012  
                              l3445 1FB4                                l3437 1F82  
                              l3429 1F66                                l3701 2ABC  
                              l3189 369C                                l3381 1A08  
                              l3373 19BC                                l3365 199A  
                              l3357 1970                                l3293 179E  
                              l3285 1750                                l3277 1740  
                              l3269 1730                                l3621 1CCC  
                              l3613 1C7A                                l3605 1C42  
                              l4173 3878                                l4261 3976  
                              l4167 3A7E                                l4159 3A68  
                              l4191 375C                                l4183 3752  
                              l4239 305A                                l3199 2964  
                              l3535 2278                                l3527 2228  
                              l3519 21D2                                l3471 2050  
                              l3463 2022                                l3455 1FFA  
                              l3439 1F92                                l3447 1FBC  
                              l3703 2ACC                                l3391 1A72  
                              l3383 1A16                                l3375 19D2  
                              l3359 197E                                l3367 199C  
                              l3295 17AE                                l3279 1744  
                              l3287 1754                                l3631 1D74  
                              l3623 1CE8                                l3615 1C94  
                              l3607 1C4E                                l3551 1AE0  
                              l4175 3888                                l4271 3982  
                              l4263 3978                                l4255 3966  
                              l4193 375E                                l4185 3756  
                              l3537 2286                                l3529 223E  
                              l3481 2098                                l3473 2060  
                              l3465 2022                                l3457 1FFE  
                              l3449 1FCC                                l3721 2B92  
                              l3713 2B4A                                l3705 2ADA  
                              l3393 1A92                                l3385 1A50  
                              l3369 19AA                                l3297 17C4  
                              l3289 1758                                l3641 1DB0  
                              l3633 1D7E                                l3625 1D12  
                              l3617 1CA4                                l3609 1C5E  
                              l3561 1B20                                l3553 1AEE  
                              l4177 3892                                l4169 386A  
                              l4273 3984                                l4265 397A  
                              l4257 396C                                l4195 3760  
                              l4187 3758                                l3539 228C  
                              l3491 20E6                                l3483 20AC  
                              l3475 2070                                l3731 2C12  
                              l3723 2B9E                                l3715 2B52  
                              l3707 2B20                                l3395 1A96  
                              l3379 19FC                                l3387 1A52  
                              l3299 17D0                                l3651 1E22  
                              l3643 1DBE                                l3635 1D8C  
                              l3627 1D48                                l3619 1CC0  
                              l3571 1B50                                l3563 1B26  
                              l3555 1AF0                                l4179 389C  
                              l4275 3986                                l4267 397C  
                              l4259 3972                                l4197 3762  
                              l4189 375A                                l3493 20F6  
                              l3485 20BA                                l3477 2080  
                              l3469 2036                                l3741 2C5A  
                              l3733 2C14                                l3725 2BDA  
                              l3717 2B5E                                l3709 2B36  
                              l4701 2CBC                                l3397 1AA4  
                              l3389 1A62                                l3661 1E8C  
                              l3653 1E30                                l3645 1DEC  
                              l3637 1D9E                                l3629 1D56  
                              l3581 1B88                                l3573 1B52  
                              l3565 1B36                                l3557 1B00  
                              l3549 1AD4                                l4269 3980  
                              l4199 3764                                l3495 2108  
                              l3487 20C6                                l3479 2088  
                              l3743 2C5C                                l3735 2C18  
                              l3727 2BE6                                l3719 2B90  
                              l4703 2D1C                                l3751 398C  
                              l3911 2DEA                                l3399 1AAA  
                              l3671 1EE2                                l3663 1EA6  
                              l3655 1E5A                                l3639 1DAC  
                              l3591 1BD8                                l3583 1BA8  
                              l3575 1B62                                l3567 1B3C  
                              l3559 1B10                                l4631 27DC  
                              l4711 358E                                l3761 33EE  
                              l3753 33B8                                l3497 211E  
                              l3489 20E4                                l3737 2C3C  
                              l3729 2BF4                                l4705 2D82  
                              l3921 2E32                                l3913 2DF0  
                              l3681 2F6E                                l3665 1EC2  
                              l3673 1EE8                                l3649 1E16  
                              l3657 1E5E                                l3593 1BE2  
                              l3585 1BB8                                l3577 1B72  
                              l3569 1B42                                l4641 282A  
                              l4633 27E2                                l4625 26E0  
                              l4713 35AC                                l4721 0EA8  
                              l3771 332A                                l3755 33BE  
                              l3763 33F6                                l3499 2124  
                              l3739 2C4C                                l3931 2E86  
                              l3923 2E3E                                l3915 2E08  
                              l3691 2FDC                                l3683 2F7E  
                              l3675 1EEC                                l3667 1ED2  
                              l3659 1E78                                l3595 1BF8  
                              l3579 1B82                                l4651 287A  
                              l4643 2836                                l4635 27FA  
                              l4627 27BA                                l4715 35BE  
                              l4707 355C                                l4811 154E  
                              l4803 14AA                                l4731 0F86  
                              l4723 0ECA                                l3773 334E  
                              l3781 3386                                l3765 340E  
                              l3757 33D6                                l3933 2E88  
                              l3925 2E56                                l3917 2E18  
                              l3693 2FEA                                l3685 2FAC  
                              l3669 1EE0                                l3597 1C04  
                              l3589 1BCC                                l4653 2888  
                              l4645 2842                                l4637 2806  
                              l4629 27CC                                l4661 25B4  
                              l4717 35DE                                l4709 356E  
                              l4821 15CC                                l4813 1566  
                              l4805 14DC                                l4733 0FB8  
                              l4725 0EFC                                l4741 1052  
                              l4901 243A                                l3783 339E  
                              l3775 3366                                l3767 3426  
                              l3759 33E2                                l3951 2F02  
                              l3935 2EA0                                l3943 2ECA  
                              l3927 2E58                                l3919 2E1A  
                              l3871 32C0                                l3695 303A  
                              l3687 2FBC                                l3679 2F40  
                              l3599 1C1C                                l4655 2898  
                              l4639 281E                                l4647 284A  
                              l4671 2600                                l4663 25C6  
                              l4823 15EE                                l4815 157A  
                              l4807 150E                                l4751 1140  
                              l4743 1084                                l4735 0FFE  
                              l4727 0F2E                                l4719 0EA4  
                              l4911 249C                                l4903 243C  
                              l3777 3372                                l3769 343E  
                              l3961 34FE                                l3785 34A0  
                              l3953 2F1A                                l3945 2EDC  
                              l3937 2EAC                                l3929 2E74  
                              l3881 3310                                l3873 32D8  
                              l3697 3040                                l3689 2FCA  
                              l4657 289E                                l4649 2862  
                              l4673 2618                                l4681 2644  
                              l4665 25D6                                l4825 15FE  
                              l4817 159C                                l4809 1540  
                              l4745 10B6                                l4833 160E  
                              l4737 1008                                l4729 0F60  
                              l4841 3466                                l4913 24AA  
                              l4905 2458                                l3779 337E  
                              l3963 3500                                l3947 2EDE  
                              l3939 2EC4                                l3875 32E4  
                              l4691 2698                                l4683 265C  
                              l4675 2624                                l4667 25DC  
                              l4659 24DA                                l4827 1600  
                              l4819 15A8                                l4771 12DA  
                              l4763 122C                                l4755 118A  
                              l4747 10E8                                l4843 347E  
                              l4835 3442                                l3787 39F0  
                              l3891 37BA                                l3883 378C  
                              l4915 24B6                                l4907 2476  
                              l4851 22EC                                l3965 3514  
                              l4693 2C6E                                l3949 2EF6  
                              l3957 2F20                                l3877 32F0  
                              l3869 329C                                l4685 2674  
                              l4677 2630                                l4669 25F4  
                              l4829 160A                                l4781 1382  
                              l4773 130C                                l4757 11B0  
                              l4749 110E                                l4837 3444  
                              l3893 37C4                                l3885 3796  
                              l4909 2490                                l4917 24BE  
                              l4861 231C                                l4853 22FC  
                              l4845 229A                                l3967 352C  
                              l4695 2C7E                                l3959 2F26  
                              l3879 32F8                                l4687 2682  
                              l4679 263C                                l4791 1430  
                              l4775 1320                                l4759 11E2  
                              l4767 1276                                l4839 3458  
                              l3895 37CE                                l3887 37A6  
                              l4871 2332                                l4863 2320  
                              l4855 2304                                l4847 22D8  
                              l3969 3558                                l4697 2C94  
                              l4689 2692                                l4793 1444  
                              l4777 1338                                l4769 12A8  
                              l4785 139A                                l3889 37B0  
                              l4881 2392                                l4873 235E  
                              l4865 2326                                l4857 2310  
                              l4849 22E0                                l4699 2CA8  
                              l4795 145C                                l4787 13CC  
                              l4779 1364                                l4891 23E0  
                              l4883 23A4                                l4875 236E  
                              l4867 232A                                l4859 2318  
                              l4797 1488                                l4789 13FE  
                              l4893 23F4                                l4885 23B4  
                              l4877 2374                                l4869 232E  
                              l4895 23F6                                l4887 23C0  
                              l4879 238E                                l4897 240C  
                              l4889 23D0                                l4899 2426  
                              STR_1 0E01                                STR_2 0E9F  
                              STR_4 0E80                                STR_6 0E94  
                              u3000 197E                                u3001 197A  
                              u3010 199A                                u3011 1996  
                              u3100 1A72                                u3020 19AA  
                              u3101 1A6E                                u3021 19A6  
                              u3110 1A92                                u3030 19BC  
                              u3111 1A8E                                u3031 19B8  
                              u3200 1FE2                                u3120 1AA4  
                              u3040 19D2                        _BAUD4CONbits 000EE9  
                              u3201 1FDE                                u3121 1AA0  
                              u3041 19CE                                _LATE 000F7D  
                              u3210 2022                                u3130 1AC0  
                              u3050 19E8                                u3211 201E  
                              u3131 1ABC                                u3051 19E4  
                              _LATG 000F7F                                u3300 219C  
                              u3220 2098                                u3140 1F1A  
                              u3060 19FC                                u3301 2198  
                              u3221 2094                                u3141 1F16  
                              u3061 19F8                                u3310 21B2  
                              u3230 20BA                                u3150 1F2C  
                              u3070 1A16                                u3311 21AE  
                              u3231 20B6                                u3151 1F28  
                              u3071 1A12                                u4200 306C  
                              u3320 21C6                                u3240 20E4  
                              u3160 1F3C                                u3080 1A50  
                              u3400 1B50                                u4201 3064  
                              u3321 21C2                                u3241 20E0  
                              u3161 1F38                                u3081 1A4C  
                              u3401 1B4C                                u3330 21E0  
                              u3250 2108                                u3170 1F80  
                              u2610 38DC                                u3090 1A62  
                              u3410 1B62                                _T2PR 000FBC  
                              u3331 21DC                                u3251 2104  
                              u3171 1F7C                                u2611 38D8  
                              u3091 1A5E                                u3411 1B5E  
                              u4300 3114                                u4220 308E  
                              u2700 31EC                                u3340 2228  
                              u3260 211E                                u3180 1F92  
                              u2620 38F2                                u3500 1E02  
                              u3420 1B72                                u5100 265C  
                              u4301 310C                                u4221 3086  
                              u2701 31E8                                u3341 2224  
                              u3261 211A                                u3181 1F8E  
                              u2621 38EE                                u3501 1DFE  
                              u3421 1B6E                                u5101 2658  
                              u2710 2902                                u3350 2258  
                              u3270 213C                                u3190 1FA2  
                              u2630 3852                                u3510 1E16  
                              u3430 1BA8                                u5030 27FA  
                              u5110 2674                                u2711 28FE  
                              u3351 2254                                u3271 2138  
                              u3191 1F9E                                u2631 384A  
                              u3511 1E12                                u3431 1BA4  
                              u5031 27F6                                u5111 2670  
                              u4240 30B2                                u2720 29E6  
                              u3360 2286                                u3280 215C  
                              u2800 16BA                                u3600 303A  
                              u3520 1E30                                u3440 1BB8  
                              u5040 281E                                u5120 26DC  
                              u5200 10B6                                u4241 30AA  
                              u2721 29E2                                u3361 2282  
                              u3281 2158                                u2801 16B6  
                              u3601 3036                                u3521 1E2C  
                              u3441 1BB4                                u5041 281A  
                              u5121 26D8                                u5201 10B2  
                              u4218 306E                                u2650 314C  
                              u3290 216E                                u3610 2ACC  
                              u2810 16CA                                u3530 1E78  
                              u3450 1D32                                u3370 1AEE  
                              u5050 2862                                u5130 356E  
                              u5210 10E8                                u2651 3148  
                              u3291 216A                                u3611 2AC8  
                              u2811 16C6                                u3531 1E74  
                              u3371 1AEA                                u5051 285E  
                              u5131 356A                                u5211 10E4  
                              u4180 3AAC                                u4260 30D6  
                              u2660 3166                                u3700 2C5A  
                              u3620 2ADA                                u2900 1810  
                              u2820 1706                                u3540 1EA6  
                              u3460 1D8C                                u3380 1B00  
                              u5060 287A                                u5140 35BE  
                              u5300 14DC                                u5220 1140  
                              u4181 3AA8                                u4261 30CE  
                              u2661 3162                                u3701 2C56  
                              u3621 2AD6                                u2901 180C  
                              u2821 1702                                u3541 1EA2  
                              u3461 1D88                                u3381 1AFC  
                              u5061 2876                                u5141 35BA  
                              u5301 14D8                                u5221 113C  
                              u4318 3116                                u4238 3090  
                              u4190 305A                                u2670 318C  
                              u2734 2A40                                u3630 2B36  
                              u2910 1820                                u2830 1714  
                              u2750 162E                                u3550 1EE0  
                              u3470 1DAC                                u3390 1B10  
                              u5070 28E2                                u5310 150E  
                              u5230 11E2                                u5150 0EFC  
                              u4191 3056                                u2671 3188  
                              u2735 2A3C                                u3631 2B32  
                              u2911 181C                                u2831 1710  
                              u2751 162A                                u3551 1EDC  
                              u3471 1DA8                                u3455 1D28  
                              u3391 1B0C                                u5071 28DE  
                              u5311 150A                                u5231 11DE  
                              u5151 0EF8                                u4280 30F6  
                              u2680 31AA                                u2744 2AAA  
                              u3640 2B8C                                u2648 3854  
                              u2920 1852                                u2840 1782  
                              u2760 1640                                u3560 2F6E  
                              u3480 1DBE                                u5080 25F4  
                              u5320 1540                                u5240 12A8  
                              u5160 0F2E                                u5400 23A4  
                              u4281 30EE                                u2681 31A6  
                              u2745 2AA6                                u3641 2B88  
                              u2921 184E                                u2841 177E  
                              u2761 163C                                u3561 2F6A  
                              u3481 1DBA                                u5081 25F0  
                              u5321 153C                                u5241 12A4  
                              u5161 0F2A                                u5401 23A0  
                              u6017 2380                                u4258 30B4  
                              u2690 31C6                                u3650 2BD6  
                              u2930 1860                                u2850 179A  
                              u2770 1650                                u3570 2FAC  
                              u3490 1DEC                                u5090 2618  
                              u5330 15CC                                u5250 12DA  
                              u5170 0F60                                u5410 23B4  
                              u2691 31C2                                u3651 2BD2  
                              u2931 185C                                u2851 1794  
                              u2771 164C                                u3571 2FA8  
                              u3491 1DE8                                u5091 2614  
                              u5331 15C8                                u6107 144E  
                              u5251 12D6                                u5171 0F5C  
                              u6027 2418                                u5411 23B0  
                              u3660 2BF4                                u3900 3310  
                              u2940 187E                                u2860 179C  
                              u2780 1692                                u3580 2FCA  
                              u5340 15EE                                u5260 130C  
                              u5180 0FB8                                u5420 23D0  
                              u3661 2BF0                                u3901 330C  
                              u2941 187A                                u2781 168E  
                              u3581 2FC6                                u5341 15EA  
                              u6117 147A                                u5261 1308  
                              u5181 0FB4                                u6037 244A  
                              u5421 23CC                                u4278 30D8  
                              u3670 2C04                                u3910 3328  
                              u2950 18B6                                u2870 17C4  
                              u2790 16A8                                u3590 2FEA  
                              u5350 15FE                                u5270 13CC  
                              u5190 1084                                u5430 23E0  
                              u3671 2C00                                u3735 3994  
                              u6207 2E24                                u3911 3324  
                              u2951 18B2                                u2871 17C0  
                              u2791 16A4                                u3591 2FE6  
                              u5351 15FA                                u6127 1558  
                              u5271 13C8                                u5191 1080  
                              u6047 2482                                u5431 23DC  
                              u3760 340E                                u3680 2C12  
                              u3736 3996                                u3920 2E18  
                              u2960 18FC                                u2880 17E2  
                              u5280 13FE                                u5360 3458  
                              u3761 340A                                u3681 2C0E  
                              u3745 399E                                u6217 2E48  
                              u3921 2E14                                u2961 18F8  
                              u2881 17DE                                u6137 1580  
                              u5281 13FA                                u5361 3454  
                              u6057 379C                                u4298 30F8  
                              u3770 3426                                u3690 2C4C  
                              u3746 39A0                                u3930 2E86  
                              u2970 1932                                u2890 1802  
                              u5290 1430                                u5370 3466  
                              u3771 3422                                u6307 33F0  
                              u3691 2C48                                u3755 39A8  
                              u3931 2E82                                u6227 2E62  
                              u2971 192E                                u2891 17FE  
                              u6147 263E                                u5291 142C  
                              u5371 3462                                u6067 387E  
                              u3780 339E                                u3756 39AA  
                              u3940 2EDC                                u2980 1942  
                              u5380 235E                                u3781 339A  
                              u6317 3430                                u3941 2ED8  
                              u6237 2E92                                u2981 193E  
                              u6157 2688                                u6077 3472  
                              u5381 235A                                u3790 33B6  
                              u2990 196E                                u5390 236C  
                              u3791 33B2                                u6327 3380  
                              u6247 2EB6                                u2991 196A  
                              u6167 2844                                u6087 132A  
                              u5391 2368                                u6337 312A  
                              u6257 2EE8                                u6177 288E  
                              u6097 1356                                u6347 320A  
                              u6267 2F0C                                u6187 32F2  
                              u6357 3224                                u6277 2F30  
                              u6197 2DFA                                u6367 323E  
                              u6287 351E                                u6377 3258  
                              u6297 354A                                u6387 3272  
                              u6397 328C                         main@current 00A0  
           __end_of_interrupts_init 398A             __end_of_DCmotors_setPWM 2ABA  
                              _main 229A                                _left 26E0  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 0057                                _stop 33B8  
                              prodh 000FF4                                prodl 000FF3  
                              start 005C                    __end_of_ADC_init 3A82  
                   ___fldiv@new_exp 0065                     __end_of_HighISR 39CE  
                      ___param_bank 000000              ?_colourclick_readRGBC2 0016  
            ??_clicker2buttons_init 0009                     __end_of___fladd 1AD4  
                             ?_main 0001                               ?_left 006D  
                             _ADPCH 000F5F                     __end_of___fldiv 229A  
                   __end_of___awdiv 31FE                               STR_10 0E6D  
                             STR_12 0E87                               STR_14 0E9A  
                             STR_16 0E8E                               STR_18 0E78  
                             STR_19 0E41                     __end_of___flmul 1EFE  
                             ?_stop 0022                     ___awdiv@divisor 0011  
                             i1l142 004C                               i2l130 3826  
                             i2l127 3A9A                               i2l136 39CA  
                             i2l315 3A4C                               i2l452 391A  
                             i2l461 3B2C                               i2l455 3B36  
                             i2l464 3AFA                               i2l449 38F4  
        ?i2_colourclick_writetoaddr 0003             _colourclick_writetoaddr 39EE  
                   ___awdiv@counter 0013                               _TMR0H 000FD4  
                             _TMR0L 000FD3            __end_of_interrupts_clear 3A68  
        __end_of_I2C_2_Master_Start 3B10          __end_of_I2C_2_Master_Write 3AE4  
                   __end_of_forward 332A                colourclickLEDs_C@tog 0009  
                             _right 24DA                   _clicker2LEDs_init 3B1A  
                             left@i 007B     __size_of_interrupts_colourclick 004E  
                   __end_of_reverse 33B8              DCmotors_init@PWMperiod 0009  
                ?_clicker2LEDs_init 0001                               ttemp5 0058  
                             ttemp6 005B                               ttemp7 005F  
                             status 000FD8                               wtemp8 0058  
           _colourcards_testingRGBC 3442               _I2C_2_Master_RepStart 3B10  
                   __initialization 3942                 ??_clicker2LEDs_init 0009  
                      __end_of_main 24DA                        __end_of_left 28E6  
                      __end_of_stop 3442  __size_of_colourcards_normaliseRGBC 017C  
     __size_of_colourcards_readRGBC 0770                              ??_main 009D  
                            ??_left 004C                              ??_stop 0026  
                     __activetblptr 000001        __size_ofi2_I2C_2_Master_Idle 0028  
 __end_ofi2_colourclick_writetoaddr 3A4E              ??_colourclick_readRGBC 0016  
      __size_ofi2_I2C_2_Master_Stop 000A           __end_of_clicker2LEDs_init 3B24  
                   _colourcard_flag 00BD                              _ADRESH 000F64  
         __size_of_colourclick_init 0038                              ?_right 006D  
                  ___awdiv@dividend 000F                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              i1l4361 0026  
                            i1l4363 0036                              i1l4365 0048  
                            i2l4151 37FE                              i2l4153 3808  
                            i2l4145 37DA                              i2l4155 3812  
                            i2l4147 37E4                              i2l4157 381C  
                            i2l4149 37F4                              i2l4353 39AC  
                            i2l4355 39BC                              i2l4277 3A82  
                            i2l4357 39C2                              i2l4359 39C6  
                            i2l3747 38F4                              i2l3749 3904  
                            i2l3861 3B24                              i2l3863 3B28  
                            i2l3857 3B2E                              i2l3865 3AF2  
                            i2l3859 3B32                              i2l3867 3AF6  
                            i2l3983 3A30                    ?_interrupts_init 0001  
                  ?_DCmotors_setPWM 0017                           ??_HighISR 0006  
                            _RX4PPS 000E15      i2colourclick_writetoaddr@value 0003  
                            _TX4REG 000EE4                    __end_of___xxtofl 2C6E  
                            _LowISR 0018                        ??_ADC_getval 0009  
                            ___flge 2F40              colourcards_readRGBC@mL 0085  
            colourcards_readRGBC@mR 0087                           ??___fladd 0038  
                            ___wmul 391C                           ??___fldiv 0048  
                         ??___awdiv 0013                           ??___flmul 001F  
 __size_ofi2_interrupts_colourclick 004E                        ?_timer0_init 0001  
         ?i2_interrupts_colourclick 0001              _interrupts_colourclick 378C  
                  ??_buggyLEDs_init 0009                  i2_interrupts_clear 3A82  
         ??_colourclick_writetoaddr 000C                    ___awdiv@quotient 0015  
                            isa$std 000001   __end_of_colourcards_normaliseRGBC 2DEA  
                            left@mL 006D                              left@mR 006F  
                         ??_forward 0026                 ?i2_interrupts_clear 0001  
                            right@i 007B                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptru 000FF8  
                         ?_ADC_init 0001                           ??_reverse 0026  
                            stop@mL 0022                              stop@mR 0024  
                __end_of_ADC_getval 3AB4                        ?_USART4_init 0001  
         ??_colourcards_testingRGBC 009B                          ___flge@ff1 0017  
                        ___flge@ff2 001B                        ___xxtofl@arg 0013  
                      ___xxtofl@exp 0012                        ___xxtofl@val 0009  
                  __end_of_turnleft 35FC                          __accesstop 0060  
           __end_of__initialization 3954              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                ??i2_interrupts_clear 0006  
                    __pcstackCOMRAM 0001                       __end_of_right 26E0  
                __size_of_clearance 005E         __end_of_colourclickLEDs_RGB 329C  
     checkbatterylevel@batterylevel 000C                          ??_ADC_init 0009  
        __size_of_clicker2LEDs_init 000A                             ??_right 004C  
     __size_of_colourclickLEDs_init 000E     __end_of_colourclick_writetoaddr 3A0E  
                        __pbssBANK0 00BA                          __pnvCOMRAM 004F  
                 _checkbatterylevel 3044             ??_colourclick_readRGBC2 0019  
     __size_ofi2_I2C_2_Master_Start 000A       __size_ofi2_I2C_2_Master_Write 000C  
                ?_checkbatterylevel 0001                             ?_LowISR 0001  
                      _T2CLKCONbits 000FBF                             ?___flge 0017  
                           ?___wmul 0009     __end_of_colourcards_testingRGBC 34A0  
               ??_checkbatterylevel 000B                             _INT1PPS 000DF1  
       ??i2_colourclick_writetoaddr 0004                           ?___xxtofl 0009  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                 ?_interrupts_clear 0001                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5                  ??_interrupts_clear 000E  
                  _colourclick_init 386A           __end_of_checkbatterylevel 313A  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
                 __end_of_clearance 355C                           _ADREFbits 000F58  
                _I2C_2_Master_Start 3B06                 i2_I2C_2_Master_Idle 38F4  
                _I2C_2_Master_Write 3AD8                             __Hparam 0000  
               i2_I2C_2_Master_Stop 3B24                  __size_of_turnright 0050  
                           __Lparam 0000                     __size_of_LowISR 0044  
                   __size_of___flge 0104                             ___fladd 1614  
                           ___fldiv 1EFE                             ___awdiv 313A  
           colourcards_readRGBC@abs 0083                             ___flmul 1AD4  
           colourcards_readRGBC@rel 0089                     __size_of___wmul 0026  
               ?_I2C_2_Master_Start 0001                 ?_I2C_2_Master_Write 0001  
                      __psmallconst 0E00                             __pcinit 3942  
                           __ramtop 0E00                __size_of_timer0_init 0020  
                           __ptext0 229A                             __ptext1 39CE  
                           __ptext2 3966                             __ptext3 3A4E  
                           __ptext4 378C                             __ptext5 386A  
                           __ptext6 39EE                             __ptext7 3ACA  
                           __ptext8 38A2                             __ptext9 3442  
     __size_of_clicker2buttons_init 000C                           ?_turnleft 007D  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                           _forward 329C                          ??___xxtofl 000D  
              ?i2_I2C_2_Master_Stop 0001                          _right$3194 0077  
                         _T2HLTbits 000FBE                             _reverse 332A  
              ??_I2C_2_Master_Start 000A                             left@deg 0071  
              ??_I2C_2_Master_Write 000A                      __pintcode_body 39AC  
              end_of_initialization 3954        __end_of_colourcards_readRGBC 1614  
                  ADC_getval@tmpval 0009    __end_ofi2_interrupts_colourclick 3828  
              __size_of_USART4_init 0020                             int_func 39AC  
         i2_colourclick_writetoaddr 3A2E                             right@mL 006D  
                           right@mR 006F             ?_interrupts_colourclick 0001  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc1 000FE6                             postinc2 000FDE  
      colourclick_writetoaddr@value 000B                       _DCmotors_init 373C  
                         _PORTFbits 000F8E                          ??_turnleft 004D  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
                       ___fladd@grs 003F                       ___xxtofl@sign 0011  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                   __end_of_turnright 35AC  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0067  
                       ___fldiv@rem 0060       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 000A  
              colourclick_readB@tmp 0012                colourclick_readC@tmp 0012  
        __size_of_checkbatterylevel 00F6                colourclick_readG@tmp 0012  
              colourclick_readR@tmp 0012                         ___flmul@grs 0024  
    __end_of_interrupts_colourclick 37DA                          main@motorL 00A8  
                        main@motorR 00B1                      __end_of_LowISR 005C  
          __size_of_interrupts_init 0024            __size_of_DCmotors_setPWM 01D4  
                    __end_of___flge 3044          colourclick_readRGBC@tmpval 0014  
                    ?_DCmotors_init 0001                      __end_of___wmul 3942  
        ?_colourcards_normaliseRGBC 006D                 start_initialization 3942  
                  _unknowncard_flag 00BC                     _returnhome_flag 00BB  
       __size_ofi2_interrupts_clear 001A                            ??_LowISR 0006  
          i2_interrupts_colourclick 37DA                        turnright@deg 0081  
    __size_of_colourclick_readRGBC2 0156       __end_of_colourclick_readRGBC2 2F40  
          ?_colourclick_writetoaddr 000B          colourcards_normaliseRGBC@B 0075  
        colourcards_normaliseRGBC@C 0077          colourcards_normaliseRGBC@G 0073  
        colourcards_normaliseRGBC@R 0071                            ??___flge 001F  
      __end_of_colourclickLEDs_init 3AD8                            ??___wmul 000D  
          __end_of_colourclick_init 38A2       i2I2C_2_Master_Write@data_byte 0002  
              _colourcards_readRGBC 0EA4        __end_ofi2_I2C_2_Master_Start 3B38  
      __end_ofi2_I2C_2_Master_Write 3AFC                           ___fladd@a 0034  
                         ___fladd@b 0030                           ___fldiv@a 0044  
                         ___fldiv@b 0040                           ___flmul@a 001B  
                         ___flmul@b 0017                         __pbssCOMRAM 0053  
                     __pcstackBANK0 0060            ?_colourcards_testingRGBC 0095  
           __size_of_buggyLEDs_init 0016                   __size_of___xxtofl 01B4  
                          ?_HighISR 0001        __size_of_colourclickLEDs_RGB 009E  
         __size_of_interrupts_clear 001A                           _clearance 34FE  
                         _left$3193 0077                           __pintcode 0008  
                   ??_DCmotors_init 0009                            ?___fladd 0030  
                          ?___fldiv 0040                            ?___awdiv 000F  
                          ?___flmul 0017  __size_ofi2_colourclick_writetoaddr 0020  
             ?_colourcards_readRGBC 0083                         __pintcodelo 0018  
                        right@delay 0073                I2C_2_Master_Read@ack 000B  
                 ??_interrupts_init 000E                   ??_DCmotors_setPWM 0019  
              I2C_2_Master_Read@tmp 000C               _interrupts_lowerbound 0055  
                       __smallconst 0E00                            ?_forward 0022  
                 _I2C_2_Master_Idle 38CC                   _I2C_2_Master_Init 38A2  
                 _I2C_2_Master_Read 3828                   _I2C_2_Master_Stop 3AFC  
                 __size_of_turnleft 0050                            _ADC_init 3A68  
                          ?_reverse 0022                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                ?_I2C_2_Master_Stop 0001                      __size_of_right 0206  
      __end_of_clicker2buttons_init 3AF0                 ??_I2C_2_Master_Idle 0009  
               ??_I2C_2_Master_Init 0009                 ??_I2C_2_Master_Read 000A  
                    ___wmul@product 000D                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 000A                            _LATCbits 000F7B  
                 _colourclickLEDs_C 398A                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                ?_colourclickLEDs_C 0001                            i1u441_20 0036  
                          i1u441_21 0032                            _PIR0bits 000E33  
                          i2u440_40 39BC                            i2u440_41 39B8  
                          i2u371_40 3904                            i2u371_41 3900  
                          i2u372_40 391A                            i2u372_41 3916  
                          _PIR4bits 000E37                          ?_clearance 0028  
                          i2u640_47 37EA                       ??_timer0_init 0009  
                          _SSP2CON2 000EDA              DCmotors_setPWM@PWMduty 0020  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 0009  
                 _colourclick_readB 36EC                   _colourclick_readC 369C  
                 _colourclick_readG 364C                   _colourclick_readR 35FC  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 38F4  
         __end_of_I2C_2_Master_Init 38CC           __end_of_I2C_2_Master_Read 386A  
                 ___wmul@multiplier 0009                  ?_colourclick_readB 000D  
                ?_colourclick_readC 000D                  ?_colourclick_readG 000D  
                ?_colourclick_readR 000D           __end_of_I2C_2_Master_Stop 3B06  
             _interrupts_upperbound 0053         I2C_2_Master_Write@data_byte 000A  
                         main@start 009F                           left@delay 0073  
               ??_colourclick_readB 000F                 ??_colourclick_readC 000F  
               ??_colourclick_readG 000F                 ??_colourclick_readR 000F  
                     ??_USART4_init 0009         __size_of_I2C_2_Master_Start 000A  
              _colourclickLEDs_init 3ACA         __size_of_I2C_2_Master_Write 000C  
                         _turnright 355C           __end_of_colourclickLEDs_C 39AC  
                       turnleft@deg 0081      __size_of_I2C_2_Master_RepStart 000A  
     __end_of_I2C_2_Master_RepStart 3B1A                    __size_of_HighISR 39C6  
              i2_I2C_2_Master_Start 3B2E                i2_I2C_2_Master_Write 3AF0  
                          __Hrparam 0000                         turnright@mL 007D  
                       turnright@mR 007F                          _ADC_getval 3A9C  
      __end_of_colourclick_readRGBC 34FE                            __Lrparam 0000  
                      __Lsmallconst 0E00           __end_of_colourclick_readB 373C  
         __end_of_colourclick_readC 36EC           __end_of_colourclick_readG 369C  
         __end_of_colourclick_readR 364C                           forward@mL 0022  
                         forward@mR 0024              ??_colourcards_readRGBC 004D  
       __end_ofi2_I2C_2_Master_Idle 391C                    __size_of___fladd 04C0  
       __end_ofi2_I2C_2_Master_Stop 3B2E                    __size_of___fldiv 039C  
                  __size_of___awdiv 00C4           colourcards_testingRGBC@mL 0097  
         colourcards_testingRGBC@mR 0099                    __size_of___flmul 042A  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                 __end_of_timer0_init 39EE  
       ??_colourcards_normaliseRGBC 004C                            ___xxtofl 2ABA  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
                    _buggyLEDs_init 3AB4                    __size_of_forward 008E  
                          __ptext10 0EA4                            __ptext11 355C  
                          __ptext20 34A0                            __ptext12 35AC  
                          __ptext21 35FC                            __ptext13 24DA  
                          __ptext30 38CC                            __ptext22 364C  
                          __ptext14 26E0                            __ptext31 398A  
                          __ptext23 369C                            __ptext15 1AD4  
                          __ptext40 313A                            __ptext32 2C6E  
                          __ptext24 36EC                            __ptext16 2F40  
                          __ptext41 3044                            __ptext33 2ABA  
                          __ptext25 3AD8                            __ptext17 1614  
                          __ptext42 31FE                            __ptext34 1EFE  
                          __ptext26 3AFC                            __ptext18 329C  
                          __ptext43 3A9C                            __ptext35 34FE  
                          __ptext27 3B06                            __ptext19 2DEA  
                          __ptext52 3A82                            __ptext44 3A0E  
                          __ptext36 33B8                            __ptext28 3B10  
                          __ptext53 37DA                            __ptext45 373C  
                          __ptext37 332A                            __ptext29 3828  
                          __ptext54 3A2E                            __ptext46 3AE4  
                          __ptext38 28E6                            __ptext55 3AF0  
                          __ptext47 3B1A                            __ptext39 391C  
                          __ptext56 3B24                            __ptext48 3AB4  
                          __ptext57 3B2E                            __ptext49 3A68  
                          __ptext58 38F4                    __size_of_reverse 008E  
             ?_colourclickLEDs_init 0001                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA          ??i2_interrupts_colourclick 0005  
                        ?_turnright 007D                       __size_of_main 0240  
                     __size_of_left 0206                       __size_of_stop 008A  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
               __end_of_USART4_init 3A2E                    _interrupts_clear 3A4E  
                         reverse@mL 0022                           reverse@mR 0024  
                       ??_clearance 002C                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0057  
                 ?_colourclick_init 0001                 _colourclickLEDs_RGB 31FE  
                ??_colourclick_init 000D          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  DCmotors_setPWM@m 0017                _clicker2buttons_init 3AE4  
        __size_of_I2C_2_Master_Stop 000A                            _turnleft 35AC  
                        turnleft@mL 007D                          turnleft@mR 007F  
            __end_of_buggyLEDs_init 3ACA                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 0020                         clearance@mL 0028  
                       clearance@mR 002A      colourclick_writetoaddr@address 000C  
  i2colourclick_writetoaddr@address 0004                         _PWM6CONbits 000FA4  
     colourcards_testingRGBC@tmpval 0095                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
        __size_of_colourclickLEDs_C 0022                ?_colourclickLEDs_RGB 0001  
        __end_ofi2_interrupts_clear 3A9C                  _turnright_calangle 004F  
                          right@deg 0071           _colourcards_normaliseRGBC 2C6E  
                 _turnleft_calangle 0051    __size_of_colourcards_testingRGBC 005E  
                   _interrupts_init 3966                     _DCmotors_setPWM 28E6  
                       ?_ADC_getval 0001          __size_of_colourclick_readB 0050  
        __size_of_colourclick_readC 0050          __size_of_colourclick_readG 0050  
        __size_of_colourclick_readR 0050               _colourclick_readRGBC2 2DEA  
                       _timer0_init 39CE               ?_clicker2buttons_init 0001  
         colourclick_readRGBC2@mode 0018                     ?_buggyLEDs_init 0001  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
            ??_colourclickLEDs_init 000A                _colourclick_readRGBC 34A0  
                     ___fladd@signs 003C                         _USART4_init 3A0E  
          ??_interrupts_colourclick 000D                          _TX4STAbits 000EE8  
                       ??_turnright 004D               ??_colourclickLEDs_RGB 0009  
            ??i2_I2C_2_Master_Start 0002                       _overtime_flag 00BA  
                      ___fladd@aexp 003D              ??i2_I2C_2_Master_Write 0002  
                      ___fladd@bexp 003E        colourcards_normaliseRGBC@abs 006D  
