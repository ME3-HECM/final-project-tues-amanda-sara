

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 09:26:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81  0000                     
    82                           ; Version 2.20
    83                           ; Generated 05/05/2020 GMT
    84                           ; 
    85                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F67K40 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	nvCOMRAM
   118  00004F                     __pnvCOMRAM:
   119                           	callstack 0
   120  00004F                     _turnright_calangle:
   121                           	callstack 0
   122  00004F                     	ds	2
   123  000051                     _turnleft_calangle:
   124                           	callstack 0
   125  000051                     	ds	2
   126  0000                     _INT1PPS	set	3569
   127  0000                     _RC7PPS	set	3689
   128  0000                     _RE2PPS	set	3700
   129  0000                     _TX4REG	set	3812
   130  0000                     _RC4REG	set	3811
   131  0000                     _PIR4bits	set	3639
   132  0000                     _RC4STAbits	set	3815
   133  0000                     _SP4BRGH	set	3814
   134  0000                     _SP4BRGL	set	3813
   135  0000                     _TX4STAbits	set	3816
   136  0000                     _BAUD4CONbits	set	3817
   137  0000                     _RX4PPS	set	3605
   138  0000                     _RC0PPS	set	3682
   139  0000                     _SSP2BUF	set	3797
   140  0000                     _SSP2CON2bits	set	3802
   141  0000                     _SSP2CON2	set	3802
   142  0000                     _SSP2STAT	set	3800
   143  0000                     _RD6PPS	set	3696
   144  0000                     _RD5PPS	set	3695
   145  0000                     _SSP2CLKPPS	set	3612
   146  0000                     _SSP2DATPPS	set	3613
   147  0000                     _ANSELDbits	set	3751
   148  0000                     _SSP2ADD	set	3798
   149  0000                     _SSP2CON1bits	set	3801
   150  0000                     _ANSELFbits	set	3764
   151  0000                     _PIR0bits	set	3635
   152  0000                     _IPR0bits	set	3615
   153  0000                     _PIE0bits	set	3625
   154  0000                     _ANSELBbits	set	3738
   155  0000                     _ADPCH	set	3935
   156  0000                     _ADREFbits	set	3928
   157  0000                     _T0CON0bits	set	4053
   158  0000                     _T0CON1bits	set	4054
   159  0000                     _PWM7CONbits	set	4001
   160  0000                     _PWM6CONbits	set	4004
   161  0000                     _LATCbits	set	3963
   162  0000                     _LATEbits	set	3965
   163  0000                     _TRISEbits	set	3973
   164  0000                     _T2PR	set	4028
   165  0000                     _T2CLKCONbits	set	4031
   166  0000                     _T2HLTbits	set	4030
   167  0000                     _T2CONbits	set	4029
   168  0000                     _TRISCbits	set	3971
   169  0000                     _TRISAbits	set	3969
   170  0000                     _TRISGbits	set	3975
   171  0000                     _TRISHbits	set	3976
   172  0000                     _TRISDbits	set	3972
   173  0000                     _ADRESH	set	3940
   174  0000                     _ADCON0bits	set	3936
   175  0000                     _TRISFbits	set	3974
   176  0000                     _LATFbits	set	3966
   177  0000                     _LATAbits	set	3961
   178  0000                     _LATGbits	set	3967
   179  0000                     _TMR0L	set	4051
   180  0000                     _TMR0H	set	4052
   181  0000                     _INTCONbits	set	4082
   182  0000                     _TRISBbits	set	3970
   183  0000                     _LATHbits	set	3968
   184  0000                     _LATDbits	set	3964
   185  0000                     _PORTFbits	set	3982
   186  0000                     _LATG	set	3967
   187  0000                     _PWM7DCH	set	4000
   188  0000                     _LATE	set	3965
   189  0000                     _PWM6DCH	set	4003
   190                           
   191                           	psect	smallconst
   192  000E00                     __psmallconst:
   193                           	callstack 0
   194  000E00  00                 	db	0
   195  000E01                     STR_1:
   196                           
   197                           ; BSR set to: 14
   198  000E01  52                 	db	82	;'R'
   199  000E02  47                 	db	71	;'G'
   200  000E03  42                 	db	66	;'B'
   201  000E04  43                 	db	67	;'C'
   202  000E05  3A                 	db	58	;':'
   203  000E06  20                 	db	32
   204  000E07  25                 	db	37
   205  000E08  69                 	db	105	;'i'
   206  000E09  20                 	db	32
   207  000E0A  25                 	db	37
   208  000E0B  69                 	db	105	;'i'
   209  000E0C  20                 	db	32
   210  000E0D  25                 	db	37
   211  000E0E  69                 	db	105	;'i'
   212  000E0F  20                 	db	32
   213  000E10  25                 	db	37
   214  000E11  69                 	db	105	;'i'
   215  000E12  20                 	db	32
   216  000E13  20                 	db	32
   217  000E14  20                 	db	32
   218  000E15  20                 	db	32
   219  000E16  20                 	db	32
   220  000E17  52                 	db	82	;'R'
   221  000E18  47                 	db	71	;'G'
   222  000E19  42                 	db	66	;'B'
   223  000E1A  43                 	db	67	;'C'
   224  000E1B  5F                 	db	95	;'_'
   225  000E1C  72                 	db	114	;'r'
   226  000E1D  65                 	db	101	;'e'
   227  000E1E  6C                 	db	108	;'l'
   228  000E1F  3A                 	db	58	;':'
   229  000E20  20                 	db	32
   230  000E21  25                 	db	37
   231  000E22  2E                 	db	46
   232  000E23  33                 	db	51	;'3'
   233  000E24  66                 	db	102	;'f'
   234  000E25  20                 	db	32
   235  000E26  25                 	db	37
   236  000E27  2E                 	db	46
   237  000E28  33                 	db	51	;'3'
   238  000E29  66                 	db	102	;'f'
   239  000E2A  20                 	db	32
   240  000E2B  25                 	db	37
   241  000E2C  2E                 	db	46
   242  000E2D  33                 	db	51	;'3'
   243  000E2E  66                 	db	102	;'f'
   244  000E2F  20                 	db	32
   245  000E30  20                 	db	32
   246  000E31  20                 	db	32
   247  000E32  20                 	db	32
   248  000E33  20                 	db	32
   249  000E34  43                 	db	67	;'C'
   250  000E35  6F                 	db	111	;'o'
   251  000E36  6C                 	db	108	;'l'
   252  000E37  6F                 	db	111	;'o'
   253  000E38  75                 	db	117	;'u'
   254  000E39  72                 	db	114	;'r'
   255  000E3A  3A                 	db	58	;':'
   256  000E3B  20                 	db	32
   257  000E3C  25                 	db	37
   258  000E3D  73                 	db	115	;'s'
   259  000E3E  0A                 	db	10
   260  000E3F  0D                 	db	13
   261  000E40  00                 	db	0
   262  000E41                     
   263                           ; BSR set to: 14
   264  000E41  52                 	db	82	;'R'
   265  000E42  47                 	db	71	;'G'
   266  000E43  42                 	db	66	;'B'
   267  000E44  43                 	db	67	;'C'
   268  000E45  3A                 	db	58	;':'
   269  000E46  20                 	db	32
   270  000E47  25                 	db	37
   271  000E48  69                 	db	105	;'i'
   272  000E49  20                 	db	32
   273  000E4A  25                 	db	37
   274  000E4B  69                 	db	105	;'i'
   275  000E4C  20                 	db	32
   276  000E4D  25                 	db	37
   277  000E4E  69                 	db	105	;'i'
   278  000E4F  20                 	db	32
   279  000E50  25                 	db	37
   280  000E51  69                 	db	105	;'i'
   281  000E52  20                 	db	32
   282  000E53  20                 	db	32
   283  000E54  20                 	db	32
   284  000E55  20                 	db	32
   285  000E56  20                 	db	32
   286  000E57  54                 	db	84	;'T'
   287  000E58  68                 	db	104	;'h'
   288  000E59  72                 	db	114	;'r'
   289  000E5A  65                 	db	101	;'e'
   290  000E5B  73                 	db	115	;'s'
   291  000E5C  68                 	db	104	;'h'
   292  000E5D  6F                 	db	111	;'o'
   293  000E5E  6C                 	db	108	;'l'
   294  000E5F  64                 	db	100	;'d'
   295  000E60  3A                 	db	58	;':'
   296  000E61  20                 	db	32
   297  000E62  25                 	db	37
   298  000E63  69                 	db	105	;'i'
   299  000E64  20                 	db	32
   300  000E65  25                 	db	37
   301  000E66  69                 	db	105	;'i'
   302  000E67  20                 	db	32
   303  000E68  25                 	db	37
   304  000E69  69                 	db	105	;'i'
   305  000E6A  0A                 	db	10
   306  000E6B  0D                 	db	13
   307  000E6C  00                 	db	0
   308  000E6D                     STR_10:
   309                           
   310                           ; BSR set to: 14
   311  000E6D  6C                 	db	108	;'l'
   312  000E6E  69                 	db	105	;'i'
   313  000E6F  67                 	db	103	;'g'
   314  000E70  68                 	db	104	;'h'
   315  000E71  74                 	db	116	;'t'
   316  000E72  20                 	db	32
   317  000E73  62                 	db	98	;'b'
   318  000E74  6C                 	db	108	;'l'
   319  000E75  75                 	db	117	;'u'
   320  000E76  65                 	db	101	;'e'
   321  000E77  00                 	db	0
   322  000E78                     
   323                           ; BSR set to: 14
   324  000E78  75                 	db	117	;'u'
   325  000E79  6E                 	db	110	;'n'
   326  000E7A  6B                 	db	107	;'k'
   327  000E7B  6E                 	db	110	;'n'
   328  000E7C  6F                 	db	111	;'o'
   329  000E7D  77                 	db	119	;'w'
   330  000E7E  6E                 	db	110	;'n'
   331  000E7F  00                 	db	0
   332  000E80                     
   333                           ; BSR set to: 14
   334  000E80  6F                 	db	111	;'o'
   335  000E81  72                 	db	114	;'r'
   336  000E82  61                 	db	97	;'a'
   337  000E83  6E                 	db	110	;'n'
   338  000E84  67                 	db	103	;'g'
   339  000E85  65                 	db	101	;'e'
   340  000E86  00                 	db	0
   341  000E87                     
   342                           ; BSR set to: 14
   343  000E87  79                 	db	121	;'y'
   344  000E88  65                 	db	101	;'e'
   345  000E89  6C                 	db	108	;'l'
   346  000E8A  6C                 	db	108	;'l'
   347  000E8B  6F                 	db	111	;'o'
   348  000E8C  77                 	db	119	;'w'
   349  000E8D  00                 	db	0
   350  000E8E                     
   351                           ; BSR set to: 14
   352  000E8E  77                 	db	119	;'w'
   353  000E8F  68                 	db	104	;'h'
   354  000E90  69                 	db	105	;'i'
   355  000E91  74                 	db	116	;'t'
   356  000E92  65                 	db	101	;'e'
   357  000E93  00                 	db	0
   358  000E94                     
   359                           ; BSR set to: 14
   360  000E94  67                 	db	103	;'g'
   361  000E95  72                 	db	114	;'r'
   362  000E96  65                 	db	101	;'e'
   363  000E97  65                 	db	101	;'e'
   364  000E98  6E                 	db	110	;'n'
   365  000E99  00                 	db	0
   366  000E9A                     
   367                           ; BSR set to: 14
   368  000E9A  70                 	db	112	;'p'
   369  000E9B  69                 	db	105	;'i'
   370  000E9C  6E                 	db	110	;'n'
   371  000E9D  6B                 	db	107	;'k'
   372  000E9E  00                 	db	0
   373  000E9F                     
   374                           ; BSR set to: 14
   375  000E9F  72                 	db	114	;'r'
   376  000EA0  65                 	db	101	;'e'
   377  000EA1  64                 	db	100	;'d'
   378  000EA2  00                 	db	0
   379  000EA3  00                 	db	0	; dummy byte at the end
   380  0000                     
   381                           ; #config settings
   382                           
   383                           	psect	cinit
   384  0041E6                     __pcinit:
   385                           	callstack 0
   386  0041E6                     start_initialization:
   387                           	callstack 0
   388  0041E6                     __initialization:
   389                           	callstack 0
   390                           
   391                           ; Clear objects allocated to BANK1 (40 bytes)
   392  0041E6  EE01  F000         	lfsr	0,__pbssBANK1
   393  0041EA  0E28               	movlw	40
   394  0041EC                     clear_0:
   395  0041EC  6AEE               	clrf	postinc0,c
   396  0041EE  06E8               	decf	wreg,f,c
   397  0041F0  E1FD               	bnz	clear_0
   398                           
   399                           ; Clear objects allocated to BANK0 (47 bytes)
   400  0041F2  EE00  F0B3         	lfsr	0,__pbssBANK0
   401  0041F6  0E2F               	movlw	47
   402  0041F8                     clear_1:
   403  0041F8  6AEE               	clrf	postinc0,c
   404  0041FA  06E8               	decf	wreg,f,c
   405  0041FC  E1FD               	bnz	clear_1
   406                           
   407                           ; Clear objects allocated to COMRAM (4 bytes)
   408  0041FE  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   409  004200  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   410  004202  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   411  004204  6A53               	clrf	__pbssCOMRAM& (0+255),c
   412  004206                     end_of_initialization:
   413                           	callstack 0
   414  004206                     __end_of__initialization:
   415                           	callstack 0
   416  004206  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   417  004208  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   418  00420A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   419  00420C  6EF8               	movwf	tblptru,c
   420  00420E  0E0E               	movlw	high __Lsmallconst
   421  004210  6EF7               	movwf	tblptrh,c
   422  004212  0100               	movlb	0
   423  004214  EFC6  F014         	goto	_main	;jump to C main() function
   424                           
   425                           	psect	bssCOMRAM
   426  000053                     __pbssCOMRAM:
   427                           	callstack 0
   428  000053                     _interrupts_upperbound:
   429                           	callstack 0
   430  000053                     	ds	2
   431  000055                     _interrupts_lowerbound:
   432                           	callstack 0
   433  000055                     	ds	2
   434                           
   435                           	psect	bssBANK0
   436  0000B3                     __pbssBANK0:
   437                           	callstack 0
   438  0000B3                     _instr:
   439                           	callstack 0
   440  0000B3                     	ds	40
   441  0000DB                     _tmp:
   442                           	callstack 0
   443  0000DB                     	ds	2
   444  0000DD                     _returnhome_flag:
   445                           	callstack 0
   446  0000DD                     	ds	1
   447  0000DE                     _unknowncard_flag:
   448                           	callstack 0
   449  0000DE                     	ds	1
   450  0000DF                     _colourcard_flag:
   451                           	callstack 0
   452  0000DF                     	ds	1
   453  0000E0                     _dur_counter:
   454                           	callstack 0
   455  0000E0                     	ds	1
   456  0000E1                     _instr_counter:
   457                           	callstack 0
   458  0000E1                     	ds	1
   459                           
   460                           	psect	bssBANK1
   461  000100                     __pbssBANK1:
   462                           	callstack 0
   463  000100                     _dur:
   464                           	callstack 0
   465  000100                     	ds	40
   466                           
   467                           	psect	cstackBANK0
   468  000060                     __pcstackBANK0:
   469                           	callstack 0
   470  000060                     ___fldiv@rem:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474  000060                     	ds	4
   475  000064                     ___fldiv@sign:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x4
   479  000064                     	ds	1
   480  000065                     ___fldiv@new_exp:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x5
   484  000065                     	ds	2
   485  000067                     ___fldiv@grs:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x7
   489  000067                     	ds	4
   490  00006B                     ___fldiv@bexp:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0xB
   494  00006B                     	ds	1
   495  00006C                     ___fldiv@aexp:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0xC
   499  00006C                     	ds	1
   500  00006D                     colourcards_normaliseRGBC@abs:
   501                           	callstack 0
   502  00006D                     turnleft@mL:
   503                           	callstack 0
   504  00006D                     turnright@mL:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xD
   508  00006D                     	ds	2
   509  00006F                     colourcards_normaliseRGBC@rel:
   510                           	callstack 0
   511  00006F                     turnleft@mR:
   512                           	callstack 0
   513  00006F                     turnright@mR:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0xF
   517  00006F                     	ds	2
   518  000071                     colourcards_normaliseRGBC@R:
   519                           	callstack 0
   520  000071                     turnleft@deg:
   521                           	callstack 0
   522  000071                     turnright@deg:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x11
   526  000071                     	ds	2
   527  000073                     colourcards_normaliseRGBC@G:
   528                           	callstack 0
   529  000073                     turnleft@delay:
   530                           	callstack 0
   531  000073                     turnright@delay:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x13
   535  000073                     	ds	2
   536  000075                     colourcards_normaliseRGBC@B:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x15
   540  000075                     	ds	2
   541  000077                     colourcards_normaliseRGBC@C:
   542                           	callstack 0
   543  000077                     _turnleft$3219:
   544                           	callstack 0
   545  000077                     _turnright$3220:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x17
   549  000077                     	ds	4
   550  00007B                     turnleft@i:
   551                           	callstack 0
   552  00007B                     turnright@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1B
   556  00007B                     	ds	2
   557  00007D                     instructions@mL:
   558                           	callstack 0
   559  00007D                     DCmotors_calibration@mL:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x1D
   563  00007D                     	ds	2
   564  00007F                     instructions@mR:
   565                           	callstack 0
   566  00007F                     DCmotors_calibration@mR:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x1F
   570  00007F                     	ds	2
   571  000081                     instructions@num:
   572                           	callstack 0
   573  000081                     DCmotors_calibration@okay:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x21
   577  000081                     	ds	1
   578  000082                     colourcards_readRGBC@abs:
   579                           	callstack 0
   580  000082                     reverseinstructions@mL:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x22
   584  000082                     	ds	2
   585  000084                     colourcards_readRGBC@mL:
   586                           	callstack 0
   587  000084                     reverseinstructions@mR:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x24
   591  000084                     	ds	2
   592  000086                     ??_reverseinstructions:
   593  000086                     colourcards_readRGBC@mR:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x26
   597  000086                     	ds	2
   598  000088                     ??_colourcards_readRGBC:
   599  000088                     returnhome@mL:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x28
   603  000088                     	ds	2
   604  00008A                     returnhome@mR:
   605                           	callstack 0
   606  00008A                     colourcards_readRGBC@rel:
   607                           	callstack 0
   608                           
   609                           ; 12 bytes @ 0x2A
   610  00008A                     	ds	2
   611  00008C                     ??_returnhome:
   612                           
   613                           ; 1 bytes @ 0x2C
   614  00008C                     	ds	2
   615  00008E                     returnhome@i:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x2E
   619  00008E                     	ds	1
   620  00008F                     returnhome@j:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x2F
   624  00008F                     	ds	1
   625  000090                     returnhome@k:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x30
   629  000090                     	ds	6
   630  000096                     ??_main:
   631                           
   632                           ; 1 bytes @ 0x36
   633  000096                     	ds	2
   634  000098                     main@start:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x38
   638  000098                     	ds	1
   639  000099                     main@current:
   640                           	callstack 0
   641                           
   642                           ; 8 bytes @ 0x39
   643  000099                     	ds	8
   644  0000A1                     main@motorL:
   645                           	callstack 0
   646                           
   647                           ; 9 bytes @ 0x41
   648  0000A1                     	ds	9
   649  0000AA                     main@motorR:
   650                           	callstack 0
   651                           
   652                           ; 9 bytes @ 0x4A
   653  0000AA                     	ds	9
   654                           
   655                           	psect	cstackCOMRAM
   656  000001                     __pcstackCOMRAM:
   657                           	callstack 0
   658  000001                     ??i2_I2C_2_Master_Idle:
   659  000001                     
   660                           ; 1 bytes @ 0x0
   661  000001                     	ds	1
   662  000002                     i2I2C_2_Master_Write@data_byte:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x1
   666  000002                     	ds	1
   667  000003                     i2colourclick_writetoaddr@value:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x2
   671  000003                     	ds	1
   672  000004                     i2colourclick_writetoaddr@address:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x3
   676  000004                     	ds	1
   677  000005                     ??i2_interrupts_colourclick:
   678                           
   679                           ; 1 bytes @ 0x4
   680  000005                     	ds	1
   681  000006                     ??_LowISR:
   682  000006                     
   683                           ; 1 bytes @ 0x5
   684  000006                     	ds	3
   685  000009                     ??_adjdelay:
   686  000009                     ??_colourclickLEDs_RGB:
   687  000009                     ??_I2C_2_Master_Idle:
   688  000009                     ?___wmul:
   689                           	callstack 0
   690  000009                     ?___xxtofl:
   691                           	callstack 0
   692  000009                     ADC_getval@tmpval:
   693                           	callstack 0
   694  000009                     colourclickLEDs_C@tog:
   695                           	callstack 0
   696  000009                     DCmotors_init@PWMperiod:
   697                           	callstack 0
   698  000009                     ___wmul@multiplier:
   699                           	callstack 0
   700  000009                     ___xxtofl@val:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0x8
   704  000009                     	ds	1
   705  00000A                     ??_I2C_2_Master_Read:
   706  00000A                     I2C_2_Master_Write@data_byte:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x9
   710  00000A                     	ds	1
   711  00000B                     ??_checkbatterylevel:
   712  00000B                     colourclick_writetoaddr@value:
   713                           	callstack 0
   714  00000B                     I2C_2_Master_Read@ack:
   715                           	callstack 0
   716  00000B                     adjdelay@mode:
   717                           	callstack 0
   718  00000B                     ___wmul@multiplicand:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0xA
   722  00000B                     	ds	1
   723  00000C                     colourclick_writetoaddr@address:
   724                           	callstack 0
   725  00000C                     I2C_2_Master_Read@tmp:
   726                           	callstack 0
   727  00000C                     checkbatterylevel@batterylevel:
   728                           	callstack 0
   729  00000C                     adjdelay@i:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0xB
   733  00000C                     	ds	1
   734  00000D                     ??_colourclick_init:
   735  00000D                     ??_interrupts_colourclick:
   736  00000D                     ??___xxtofl:
   737  00000D                     ?_colourclick_readR:
   738                           	callstack 0
   739  00000D                     ?_colourclick_readG:
   740                           	callstack 0
   741  00000D                     ?_colourclick_readB:
   742                           	callstack 0
   743  00000D                     ?_colourclick_readC:
   744                           	callstack 0
   745  00000D                     ___wmul@product:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0xC
   749  00000D                     	ds	1
   750  00000E                     
   751                           ; 1 bytes @ 0xD
   752  00000E                     	ds	1
   753  00000F                     ??_colourclick_readR:
   754  00000F                     ??_colourclick_readG:
   755  00000F                     ??_colourclick_readB:
   756  00000F                     ??_colourclick_readC:
   757  00000F                     ?___awdiv:
   758                           	callstack 0
   759  00000F                     ___awdiv@dividend:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0xE
   763  00000F                     	ds	2
   764  000011                     ___xxtofl@sign:
   765                           	callstack 0
   766  000011                     ___awdiv@divisor:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x10
   770  000011                     	ds	1
   771  000012                     ___xxtofl@exp:
   772                           	callstack 0
   773  000012                     colourclick_readR@tmp:
   774                           	callstack 0
   775  000012                     colourclick_readG@tmp:
   776                           	callstack 0
   777  000012                     colourclick_readB@tmp:
   778                           	callstack 0
   779  000012                     colourclick_readC@tmp:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x11
   783  000012                     	ds	1
   784  000013                     ___awdiv@counter:
   785                           	callstack 0
   786  000013                     ___xxtofl@arg:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x12
   790  000013                     	ds	1
   791  000014                     ___awdiv@sign:
   792                           	callstack 0
   793  000014                     colourclick_readRGBC@tmpval:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x13
   797  000014                     	ds	1
   798  000015                     ___awdiv@quotient:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x14
   802  000015                     	ds	1
   803  000016                     ??_colourclick_calibration:
   804  000016                     colourclick_readRGBC2@tmpval:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x15
   808  000016                     	ds	1
   809  000017                     ?___flmul:
   810                           	callstack 0
   811  000017                     DCmotors_setPWM@m:
   812                           	callstack 0
   813  000017                     ___flge@ff1:
   814                           	callstack 0
   815  000017                     ___flmul@b:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x16
   819  000017                     	ds	1
   820  000018                     colourclick_readRGBC2@mode:
   821                           	callstack 0
   822  000018                     colourclick_calibration@initial:
   823                           	callstack 0
   824                           
   825                           ; 8 bytes @ 0x17
   826  000018                     	ds	1
   827  000019                     ??_colourclick_readRGBC2:
   828  000019                     ??_DCmotors_setPWM:
   829                           
   830                           ; 1 bytes @ 0x18
   831  000019                     	ds	2
   832  00001B                     ___flge@ff2:
   833                           	callstack 0
   834  00001B                     ___flmul@a:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x1A
   838  00001B                     	ds	4
   839  00001F                     ??___flmul:
   840  00001F                     ??___flge:
   841                           
   842                           ; 1 bytes @ 0x1E
   843  00001F                     	ds	1
   844  000020                     DCmotors_setPWM@PWMduty:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x1F
   848  000020                     	ds	2
   849  000022                     forward@mL:
   850                           	callstack 0
   851  000022                     reverse@mL:
   852                           	callstack 0
   853  000022                     stop@mL:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x21
   857  000022                     	ds	1
   858  000023                     ___flmul@sign:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x22
   862  000023                     	ds	1
   863  000024                     forward@mR:
   864                           	callstack 0
   865  000024                     reverse@mR:
   866                           	callstack 0
   867  000024                     stop@mR:
   868                           	callstack 0
   869  000024                     ___flmul@grs:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x23
   873  000024                     	ds	2
   874  000026                     ??_stop:
   875  000026                     
   876                           ; 1 bytes @ 0x25
   877  000026                     	ds	2
   878  000028                     ___flmul@aexp:
   879                           	callstack 0
   880  000028                     clearance@mL:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x27
   884  000028                     	ds	1
   885  000029                     ___flmul@bexp:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x28
   889  000029                     	ds	1
   890  00002A                     clearance@mR:
   891                           	callstack 0
   892  00002A                     ___flmul@prod:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x29
   896  00002A                     	ds	2
   897  00002C                     ??_clearance:
   898                           
   899                           ; 1 bytes @ 0x2B
   900  00002C                     	ds	2
   901  00002E                     ___flmul@temp:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x2D
   905  00002E                     	ds	2
   906  000030                     ?___fladd:
   907                           	callstack 0
   908  000030                     ___fladd@b:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x2F
   912  000030                     	ds	4
   913  000034                     ___fladd@a:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x33
   917  000034                     	ds	4
   918  000038                     ??___fladd:
   919                           
   920                           ; 1 bytes @ 0x37
   921  000038                     	ds	4
   922  00003C                     ___fladd@signs:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x3B
   926  00003C                     	ds	1
   927  00003D                     ___fladd@aexp:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x3C
   931  00003D                     	ds	1
   932  00003E                     ___fladd@bexp:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x3D
   936  00003E                     	ds	1
   937  00003F                     ___fladd@grs:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x3E
   941  00003F                     	ds	1
   942  000040                     ?___fldiv:
   943                           	callstack 0
   944  000040                     ___fldiv@b:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x3F
   948  000040                     	ds	4
   949  000044                     ___fldiv@a:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x43
   953  000044                     	ds	4
   954  000048                     ??___fldiv:
   955                           
   956                           ; 1 bytes @ 0x47
   957  000048                     	ds	4
   958  00004C                     ??_turnleft:
   959  00004C                     ??_turnright:
   960                           
   961                           ; 1 bytes @ 0x4B
   962  00004C                     	ds	1
   963  00004D                     ??_DCmotors_calibration:
   964  00004D                     ??_instructions:
   965                           
   966                           ; 1 bytes @ 0x4C
   967  00004D                     	ds	2
   968                           
   969 ;;
   970 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   971 ;;
   972 ;; *************** function _main *****************
   973 ;; Defined at:
   974 ;;		line 7 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  motorR          9   74[BANK0 ] struct .
   979 ;;  motorL          9   65[BANK0 ] struct .
   980 ;;  current         8   57[BANK0 ] struct .
   981 ;;  PWMperiod       1    0        unsigned char 
   982 ;;  start           1   56[BANK0 ] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   993 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;Total ram usage:       29 bytes
   997 ;; Hardware stack levels required when called: 14
   998 ;; This function calls:
   999 ;;		_ADC_init
  1000 ;;		_DCmotors_calibration
  1001 ;;		_DCmotors_init
  1002 ;;		_USART4_init
  1003 ;;		_checkbatterylevel
  1004 ;;		_colourcards_readRGBC
  1005 ;;		_colourclickLEDs_C
  1006 ;;		_colourclick_calibration
  1007 ;;		_colourclick_init
  1008 ;;		_colourclick_readRGBC
  1009 ;;		_forward
  1010 ;;		_interrupts_init
  1011 ;;		_returnhome
  1012 ;;		_reverse
  1013 ;;		_stop
  1014 ;;		_timer0_init
  1015 ;; This function is called by:
  1016 ;;		Startup code after reset
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text0
  1021  00298C                     __ptext0:
  1022                           	callstack 0
  1023  00298C                     _main:
  1024                           	callstack 17
  1025  00298C                     
  1026                           ;main.c: 11:     RGBC_val current;;main.c: 12:     unsigned char start = 0;
  1027  00298C  0E00               	movlw	0
  1028  00298E  0100               	movlb	0	; () banked
  1029  002990  6F98               	movwf	main@start& (0+255),b
  1030                           
  1031                           ;main.c: 14:     tmp = 0;
  1032  002992  0E00               	movlw	0
  1033  002994  6FDC               	movwf	(_tmp+1)& (0+255),b	;volatile
  1034  002996  0E00               	movlw	0
  1035  002998  6FDB               	movwf	_tmp& (0+255),b	;volatile
  1036                           
  1037                           ;main.c: 15:     instr_counter = 0;
  1038  00299A  0E00               	movlw	0
  1039  00299C  6FE1               	movwf	_instr_counter& (0+255),b	;volatile
  1040                           
  1041                           ;main.c: 16:     dur_counter = 0;
  1042  00299E  0E00               	movlw	0
  1043  0029A0  6FE0               	movwf	_dur_counter& (0+255),b	;volatile
  1044                           
  1045                           ;main.c: 17:     turnleft_calangle = 360;
  1046  0029A2  0E01               	movlw	1
  1047  0029A4  6E52               	movwf	(_turnleft_calangle+1)^0,c	;volatile
  1048  0029A6  0E68               	movlw	104
  1049  0029A8  6E51               	movwf	_turnleft_calangle^0,c	;volatile
  1050                           
  1051                           ;main.c: 18:     turnright_calangle = 360;
  1052  0029AA  0E01               	movlw	1
  1053  0029AC  6E50               	movwf	(_turnright_calangle+1)^0,c	;volatile
  1054  0029AE  0E68               	movlw	104
  1055  0029B0  6E4F               	movwf	_turnright_calangle^0,c	;volatile
  1056                           
  1057                           ;main.c: 19:     interrupts_lowerbound = 0;
  1058  0029B2  0E00               	movlw	0
  1059  0029B4  6E56               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1060  0029B6  0E00               	movlw	0
  1061  0029B8  6E55               	movwf	_interrupts_lowerbound^0,c	;volatile
  1062                           
  1063                           ;main.c: 20:     interrupts_upperbound = 0;
  1064  0029BA  0E00               	movlw	0
  1065  0029BC  6E54               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1066  0029BE  0E00               	movlw	0
  1067  0029C0  6E53               	movwf	_interrupts_upperbound^0,c	;volatile
  1068                           
  1069                           ;main.c: 21:     colourcard_flag = 0;
  1070  0029C2  0E00               	movlw	0
  1071  0029C4  6FDF               	movwf	_colourcard_flag& (0+255),b	;volatile
  1072                           
  1073                           ;main.c: 22:     unknowncard_flag = 0;
  1074  0029C6  0E00               	movlw	0
  1075  0029C8  6FDE               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1076                           
  1077                           ;main.c: 23:     returnhome_flag = 0;
  1078  0029CA  0E00               	movlw	0
  1079  0029CC  6FDD               	movwf	_returnhome_flag& (0+255),b	;volatile
  1080                           
  1081                           ;main.c: 25:     DC_motor motorL;;main.c: 26:     motorL.power=0;
  1082  0029CE  0E00               	movlw	0
  1083  0029D0  6FA1               	movwf	main@motorL& (0+255),b
  1084                           
  1085                           ;main.c: 27:     motorL.direction=1;
  1086  0029D2  0E01               	movlw	1
  1087  0029D4  6FA2               	movwf	(main@motorL+1)& (0+255),b
  1088  0029D6                     
  1089                           ; BSR set to: 0
  1090                           ;main.c: 28:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1091  0029D6  0EA3               	movlw	163
  1092  0029D8  6FA3               	movwf	(main@motorL+2)& (0+255),b
  1093  0029DA  0E0F               	movlw	15
  1094  0029DC  6FA4               	movwf	(main@motorL+3)& (0+255),b
  1095  0029DE                     
  1096                           ; BSR set to: 0
  1097                           ;main.c: 29:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1098  0029DE  0E7D               	movlw	125
  1099  0029E0  6FA5               	movwf	(main@motorL+4)& (0+255),b
  1100  0029E2  0E0F               	movlw	15
  1101  0029E4  6FA6               	movwf	(main@motorL+5)& (0+255),b
  1102                           
  1103                           ;main.c: 30:     motorL.dir_pin=4;
  1104  0029E6  0E04               	movlw	4
  1105  0029E8  6FA7               	movwf	(main@motorL+6)& (0+255),b
  1106  0029EA                     
  1107                           ; BSR set to: 0
  1108                           ;main.c: 31:     motorL.PWMperiod=PWMperiod;
  1109  0029EA  0E00               	movlw	0
  1110  0029EC  6FA9               	movwf	(main@motorL+8)& (0+255),b
  1111  0029EE  0E63               	movlw	99
  1112  0029F0  6FA8               	movwf	(main@motorL+7)& (0+255),b
  1113                           
  1114                           ;main.c: 33:     DC_motor motorR;;main.c: 34:     motorR.power=0;
  1115  0029F2  0E00               	movlw	0
  1116  0029F4  6FAA               	movwf	main@motorR& (0+255),b
  1117                           
  1118                           ;main.c: 35:     motorR.direction=1;
  1119  0029F6  0E01               	movlw	1
  1120  0029F8  6FAB               	movwf	(main@motorR+1)& (0+255),b
  1121  0029FA                     
  1122                           ; BSR set to: 0
  1123                           ;main.c: 36:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1124  0029FA  0EA0               	movlw	160
  1125  0029FC  6FAC               	movwf	(main@motorR+2)& (0+255),b
  1126  0029FE  0E0F               	movlw	15
  1127  002A00  6FAD               	movwf	(main@motorR+3)& (0+255),b
  1128  002A02                     
  1129                           ; BSR set to: 0
  1130                           ;main.c: 37:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1131  002A02  0E7F               	movlw	127
  1132  002A04  6FAE               	movwf	(main@motorR+4)& (0+255),b
  1133  002A06  0E0F               	movlw	15
  1134  002A08  6FAF               	movwf	(main@motorR+5)& (0+255),b
  1135                           
  1136                           ;main.c: 38:     motorR.dir_pin=6;
  1137  002A0A  0E06               	movlw	6
  1138  002A0C  6FB0               	movwf	(main@motorR+6)& (0+255),b
  1139  002A0E                     
  1140                           ; BSR set to: 0
  1141                           ;main.c: 39:     motorR.PWMperiod=PWMperiod;
  1142  002A0E  0E00               	movlw	0
  1143  002A10  6FB2               	movwf	(main@motorR+8)& (0+255),b
  1144  002A12  0E63               	movlw	99
  1145  002A14  6FB1               	movwf	(main@motorR+7)& (0+255),b
  1146  002A16                     
  1147                           ; BSR set to: 0
  1148                           ;main.c: 41:     ADC_init();
  1149  002A16  ECDD  F021         	call	_ADC_init	;wreg free
  1150  002A1A                     
  1151                           ;main.c: 42:     colourclick_init();
  1152  002A1A  ECD7  F020         	call	_colourclick_init	;wreg free
  1153  002A1E                     
  1154                           ;main.c: 43:     DCmotors_init(PWMperiod);
  1155  002A1E  0E63               	movlw	99
  1156  002A20  EC40  F020         	call	_DCmotors_init
  1157  002A24                     
  1158                           ;main.c: 44:     USART4_init();
  1159  002A24  ECB0  F021         	call	_USART4_init	;wreg free
  1160  002A28                     
  1161                           ;main.c: 45:     checkbatterylevel();
  1162  002A28  ECF0  F01C         	call	_checkbatterylevel	;wreg free
  1163  002A2C                     
  1164                           ;main.c: 50:     DCmotors_calibration(&motorL, &motorR);
  1165  002A2C  0EA1               	movlw	low main@motorL
  1166  002A2E  0100               	movlb	0	; () banked
  1167  002A30  6F7D               	movwf	DCmotors_calibration@mL& (0+255),b
  1168  002A32  0E00               	movlw	high main@motorL
  1169  002A34  6F7E               	movwf	(DCmotors_calibration@mL+1)& (0+255),b
  1170  002A36  0EAA               	movlw	low main@motorR
  1171  002A38  6F7F               	movwf	DCmotors_calibration@mR& (0+255),b
  1172  002A3A  0E00               	movlw	high main@motorR
  1173  002A3C  6F80               	movwf	(DCmotors_calibration@mR+1)& (0+255),b
  1174  002A3E  EC14  F012         	call	_DCmotors_calibration	;wreg free
  1175  002A42                     
  1176                           ;main.c: 56:     colourclick_calibration();
  1177  002A42  ECCD  F01D         	call	_colourclick_calibration	;wreg free
  1178  002A46                     l85:
  1179  002A46  A48E               	btfss	142,2,c	;volatile
  1180  002A48  EF28  F015         	goto	u6121
  1181  002A4C  EF2A  F015         	goto	u6120
  1182  002A50                     u6121:
  1183  002A50  EF31  F015         	goto	l89
  1184  002A54                     u6120:
  1185  002A54  B68E               	btfsc	142,3,c	;volatile
  1186  002A56  EF2F  F015         	goto	u6131
  1187  002A5A  EF31  F015         	goto	u6130
  1188  002A5E                     u6131:
  1189  002A5E  EF23  F015         	goto	l85
  1190  002A62                     u6130:
  1191  002A62                     l89:
  1192                           
  1193                           ;main.c: 64:     LATDbits.LATD3 = 1;
  1194  002A62  867C               	bsf	124,3,c	;volatile
  1195  002A64                     
  1196                           ;main.c: 65:     colourclickLEDs_C(1);
  1197  002A64  0E01               	movlw	1
  1198  002A66  EC6E  F021         	call	_colourclickLEDs_C
  1199  002A6A                     
  1200                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1201  002A6A  0E52               	movlw	82
  1202  002A6C  0100               	movlb	0	; () banked
  1203  002A6E  6F97               	movwf	(??_main+1)& (0+255),b
  1204  002A70  0E2B               	movlw	43
  1205  002A72  6F96               	movwf	??_main& (0+255),b
  1206  002A74  0E00               	movlw	0
  1207  002A76                     u6667:
  1208  002A76  2EE8               	decfsz	wreg,f,c
  1209  002A78  D7FE               	bra	u6667
  1210  002A7A  2F96               	decfsz	??_main& (0+255),f,b
  1211  002A7C  D7FC               	bra	u6667
  1212  002A7E  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1213  002A80  D7FA               	bra	u6667
  1214  002A82  F000               	nop	
  1215  002A84                     
  1216                           ;main.c: 67:     interrupts_init();
  1217  002A84  EC5C  F021         	call	_interrupts_init	;wreg free
  1218  002A88                     
  1219                           ;main.c: 68:     timer0_init();
  1220  002A88  EC90  F021         	call	_timer0_init	;wreg free
  1221  002A8C                     l5403:
  1222                           
  1223                           ;main.c: 74:         checkbatterylevel();
  1224  002A8C  ECF0  F01C         	call	_checkbatterylevel	;wreg free
  1225                           
  1226                           ;main.c: 76:         if (start<1 && colourcard_flag==1) {
  1227  002A90  0100               	movlb	0	; () banked
  1228  002A92  5198               	movf	main@start& (0+255),w,b
  1229  002A94  A4D8               	btfss	status,2,c
  1230  002A96  EF4F  F015         	goto	u6141
  1231  002A9A  EF51  F015         	goto	u6140
  1232  002A9E                     u6141:
  1233  002A9E  EF5F  F015         	goto	l5409
  1234  002AA2                     u6140:
  1235  002AA2                     
  1236                           ; BSR set to: 0
  1237  002AA2  05DF               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1238  002AA4  A4D8               	btfss	status,2,c
  1239  002AA6  EF57  F015         	goto	u6151
  1240  002AAA  EF59  F015         	goto	u6150
  1241  002AAE                     u6151:
  1242  002AAE  EF5F  F015         	goto	l5409
  1243  002AB2                     u6150:
  1244  002AB2                     
  1245                           ; BSR set to: 0
  1246                           ;main.c: 77:             colourcard_flag = 0;
  1247  002AB2  0E00               	movlw	0
  1248  002AB4  6FDF               	movwf	_colourcard_flag& (0+255),b	;volatile
  1249                           
  1250                           ;main.c: 78:             start = 1;
  1251  002AB6  0E01               	movlw	1
  1252  002AB8  6F98               	movwf	main@start& (0+255),b
  1253                           
  1254                           ;main.c: 79:         } else if (start>0 && colourcard_flag==1) {
  1255  002ABA  EF46  F015         	goto	l5403
  1256  002ABE                     l5409:
  1257                           
  1258                           ; BSR set to: 0
  1259  002ABE  5198               	movf	main@start& (0+255),w,b
  1260  002AC0  B4D8               	btfsc	status,2,c
  1261  002AC2  EF65  F015         	goto	u6161
  1262  002AC6  EF67  F015         	goto	u6160
  1263  002ACA                     u6161:
  1264  002ACA  EFDE  F015         	goto	l5439
  1265  002ACE                     u6160:
  1266  002ACE                     
  1267                           ; BSR set to: 0
  1268  002ACE  05DF               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1269  002AD0  A4D8               	btfss	status,2,c
  1270  002AD2  EF6D  F015         	goto	u6171
  1271  002AD6  EF6F  F015         	goto	u6170
  1272  002ADA                     u6171:
  1273  002ADA  EFDE  F015         	goto	l5439
  1274  002ADE                     u6170:
  1275  002ADE                     
  1276                           ; BSR set to: 0
  1277                           ;main.c: 80:             stop(&motorL, &motorR);
  1278  002ADE  0EA1               	movlw	low main@motorL
  1279  002AE0  6E22               	movwf	stop@mL^0,c
  1280  002AE2  0E00               	movlw	high main@motorL
  1281  002AE4  6E23               	movwf	(stop@mL+1)^0,c
  1282  002AE6  0EAA               	movlw	low main@motorR
  1283  002AE8  6E24               	movwf	stop@mR^0,c
  1284  002AEA  0E00               	movlw	high main@motorR
  1285  002AEC  6E25               	movwf	(stop@mR+1)^0,c
  1286  002AEE  ECFD  F01E         	call	_stop	;wreg free
  1287  002AF2                     
  1288                           ;main.c: 81:             LATDbits.LATD7 = 1;
  1289  002AF2  8E7C               	bsf	124,7,c	;volatile
  1290  002AF4                     
  1291                           ;main.c: 82:             LATHbits.LATH3 = 1;
  1292  002AF4  8680               	bsf	128,3,c	;volatile
  1293                           
  1294                           ;main.c: 83:             reverse(&motorL, &motorR);
  1295  002AF6  0EA1               	movlw	low main@motorL
  1296  002AF8  6E22               	movwf	reverse@mL^0,c
  1297  002AFA  0E00               	movlw	high main@motorL
  1298  002AFC  6E23               	movwf	(reverse@mL+1)^0,c
  1299  002AFE  0EAA               	movlw	low main@motorR
  1300  002B00  6E24               	movwf	reverse@mR^0,c
  1301  002B02  0E00               	movlw	high main@motorR
  1302  002B04  6E25               	movwf	(reverse@mR+1)^0,c
  1303  002B06  EC6F  F01E         	call	_reverse	;wreg free
  1304  002B0A                     
  1305                           ;main.c: 84:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1306  002B0A  0E09               	movlw	9
  1307  002B0C  0100               	movlb	0	; () banked
  1308  002B0E  6F97               	movwf	(??_main+1)& (0+255),b
  1309  002B10  0E1E               	movlw	30
  1310  002B12  6F96               	movwf	??_main& (0+255),b
  1311  002B14  0EE4               	movlw	228
  1312  002B16                     u6677:
  1313  002B16  2EE8               	decfsz	wreg,f,c
  1314  002B18  D7FE               	bra	u6677
  1315  002B1A  2F96               	decfsz	??_main& (0+255),f,b
  1316  002B1C  D7FC               	bra	u6677
  1317  002B1E  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1318  002B20  D7FA               	bra	u6677
  1319  002B22  F000               	nop	
  1320  002B24                     
  1321                           ;main.c: 85:             stop(&motorL, &motorR);
  1322  002B24  0EA1               	movlw	low main@motorL
  1323  002B26  6E22               	movwf	stop@mL^0,c
  1324  002B28  0E00               	movlw	high main@motorL
  1325  002B2A  6E23               	movwf	(stop@mL+1)^0,c
  1326  002B2C  0EAA               	movlw	low main@motorR
  1327  002B2E  6E24               	movwf	stop@mR^0,c
  1328  002B30  0E00               	movlw	high main@motorR
  1329  002B32  6E25               	movwf	(stop@mR+1)^0,c
  1330  002B34  ECFD  F01E         	call	_stop	;wreg free
  1331  002B38                     
  1332                           ;main.c: 86:             LATDbits.LATD7 = 0;
  1333  002B38  9E7C               	bcf	124,7,c	;volatile
  1334  002B3A                     
  1335                           ;main.c: 87:             LATHbits.LATH3 = 0;
  1336  002B3A  9680               	bcf	128,3,c	;volatile
  1337                           
  1338                           ;main.c: 88:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1339  002B3C  0E52               	movlw	82
  1340  002B3E  0100               	movlb	0	; () banked
  1341  002B40  6F97               	movwf	(??_main+1)& (0+255),b
  1342  002B42  0E2B               	movlw	43
  1343  002B44  6F96               	movwf	??_main& (0+255),b
  1344  002B46  0E00               	movlw	0
  1345  002B48                     u6687:
  1346  002B48  2EE8               	decfsz	wreg,f,c
  1347  002B4A  D7FE               	bra	u6687
  1348  002B4C  2F96               	decfsz	??_main& (0+255),f,b
  1349  002B4E  D7FC               	bra	u6687
  1350  002B50  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1351  002B52  D7FA               	bra	u6687
  1352  002B54  F000               	nop	
  1353  002B56                     
  1354                           ;main.c: 90:             colourcards_readRGBC(&current, &motorL, &motorR);
  1355  002B56  0E99               	movlw	low main@current
  1356  002B58  0100               	movlb	0	; () banked
  1357  002B5A  6F82               	movwf	colourcards_readRGBC@abs& (0+255),b
  1358  002B5C  0E00               	movlw	high main@current
  1359  002B5E  6F83               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1360  002B60  0EA1               	movlw	low main@motorL
  1361  002B62  6F84               	movwf	colourcards_readRGBC@mL& (0+255),b
  1362  002B64  0E00               	movlw	high main@motorL
  1363  002B66  6F85               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1364  002B68  0EAA               	movlw	low main@motorR
  1365  002B6A  6F86               	movwf	colourcards_readRGBC@mR& (0+255),b
  1366  002B6C  0E00               	movlw	high main@motorR
  1367  002B6E  6F87               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1368  002B70  EC52  F007         	call	_colourcards_readRGBC	;wreg free
  1369  002B74                     
  1370                           ;main.c: 92:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1371  002B74  0E52               	movlw	82
  1372  002B76  0100               	movlb	0	; () banked
  1373  002B78  6F97               	movwf	(??_main+1)& (0+255),b
  1374  002B7A  0E2B               	movlw	43
  1375  002B7C  6F96               	movwf	??_main& (0+255),b
  1376  002B7E  0E00               	movlw	0
  1377  002B80                     u6697:
  1378  002B80  2EE8               	decfsz	wreg,f,c
  1379  002B82  D7FE               	bra	u6697
  1380  002B84  2F96               	decfsz	??_main& (0+255),f,b
  1381  002B86  D7FC               	bra	u6697
  1382  002B88  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1383  002B8A  D7FA               	bra	u6697
  1384  002B8C  F000               	nop	
  1385  002B8E                     
  1386                           ;main.c: 93:             colourclick_readRGBC(&current);
  1387  002B8E  0E99               	movlw	low main@current
  1388  002B90  6E14               	movwf	colourclick_readRGBC@tmpval^0,c
  1389  002B92  0E00               	movlw	high main@current
  1390  002B94  6E15               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1391  002B96  EC71  F01F         	call	_colourclick_readRGBC	;wreg free
  1392  002B9A                     
  1393                           ;main.c: 94:             interrupts_lowerbound = current.C - 150;
  1394  002B9A  0E6A               	movlw	106
  1395  002B9C  0100               	movlb	0	; () banked
  1396  002B9E  259F               	addwf	(main@current+6)& (0+255),w,b
  1397  002BA0  6E55               	movwf	_interrupts_lowerbound^0,c	;volatile
  1398  002BA2  0EFF               	movlw	255
  1399  002BA4  21A0               	addwfc	(main@current+7)& (0+255),w,b
  1400  002BA6  6E56               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1401  002BA8                     
  1402                           ; BSR set to: 0
  1403                           ;main.c: 95:             interrupts_upperbound = current.C + 100;
  1404  002BA8  0E64               	movlw	100
  1405  002BAA  259F               	addwf	(main@current+6)& (0+255),w,b
  1406  002BAC  6E53               	movwf	_interrupts_upperbound^0,c	;volatile
  1407  002BAE  0E00               	movlw	0
  1408  002BB0  21A0               	addwfc	(main@current+7)& (0+255),w,b
  1409  002BB2  6E54               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1410  002BB4                     
  1411                           ; BSR set to: 0
  1412                           ;main.c: 97:             colourcard_flag = 0;
  1413  002BB4  0E00               	movlw	0
  1414  002BB6  6FDF               	movwf	_colourcard_flag& (0+255),b	;volatile
  1415                           
  1416                           ;main.c: 98:         } else if (returnhome_flag==1) {
  1417  002BB8  EF46  F015         	goto	l5403
  1418  002BBC                     l5439:
  1419                           
  1420                           ; BSR set to: 0
  1421  002BBC  05DD               	decf	_returnhome_flag& (0+255),w,b	;volatile
  1422  002BBE  A4D8               	btfss	status,2,c
  1423  002BC0  EFE4  F015         	goto	u6181
  1424  002BC4  EFE6  F015         	goto	u6180
  1425  002BC8                     u6181:
  1426  002BC8  EFF5  F015         	goto	l5445
  1427  002BCC                     u6180:
  1428  002BCC                     
  1429                           ; BSR set to: 0
  1430                           ;main.c: 99:             returnhome(&motorL, &motorR);
  1431  002BCC  0EA1               	movlw	low main@motorL
  1432  002BCE  6F88               	movwf	returnhome@mL& (0+255),b
  1433  002BD0  0E00               	movlw	high main@motorL
  1434  002BD2  6F89               	movwf	(returnhome@mL+1)& (0+255),b
  1435  002BD4  0EAA               	movlw	low main@motorR
  1436  002BD6  6F8A               	movwf	returnhome@mR& (0+255),b
  1437  002BD8  0E00               	movlw	high main@motorR
  1438  002BDA  6F8B               	movwf	(returnhome@mR+1)& (0+255),b
  1439  002BDC  EC74  F01C         	call	_returnhome	;wreg free
  1440  002BE0                     
  1441                           ;main.c: 100:             returnhome_flag=2;
  1442  002BE0  0E02               	movlw	2
  1443  002BE2  0100               	movlb	0	; () banked
  1444  002BE4  6FDD               	movwf	_returnhome_flag& (0+255),b	;volatile
  1445                           
  1446                           ;main.c: 101:         } else if (returnhome_flag==0) {
  1447  002BE6  EF46  F015         	goto	l5403
  1448  002BEA                     l5445:
  1449                           
  1450                           ; BSR set to: 0
  1451  002BEA  51DD               	movf	_returnhome_flag& (0+255),w,b	;volatile
  1452  002BEC  A4D8               	btfss	status,2,c
  1453  002BEE  EFFB  F015         	goto	u6191
  1454  002BF2  EFFD  F015         	goto	u6190
  1455  002BF6                     u6191:
  1456  002BF6  EF09  F016         	goto	l92
  1457  002BFA                     u6190:
  1458  002BFA                     
  1459                           ; BSR set to: 0
  1460                           ;main.c: 102:             forward(&motorL, &motorR);
  1461  002BFA  0EA1               	movlw	low main@motorL
  1462  002BFC  6E22               	movwf	forward@mL^0,c
  1463  002BFE  0E00               	movlw	high main@motorL
  1464  002C00  6E23               	movwf	(forward@mL+1)^0,c
  1465  002C02  0EAA               	movlw	low main@motorR
  1466  002C04  6E24               	movwf	forward@mR^0,c
  1467  002C06  0E00               	movlw	high main@motorR
  1468  002C08  6E25               	movwf	(forward@mR+1)^0,c
  1469  002C0A  ECB6  F01E         	call	_forward	;wreg free
  1470  002C0E  EF46  F015         	goto	l5403
  1471  002C12                     l92:
  1472                           
  1473                           ; BSR set to: 0
  1474  002C12  EF46  F015         	goto	l5403
  1475  002C16  EF2C  F000         	goto	start
  1476  002C1A                     __end_of_main:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _timer0_init *****************
  1480 ;; Defined at:
  1481 ;;		line 8 in file "timers.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 7
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text1
  1510  004320                     __ptext1:
  1511                           	callstack 0
  1512  004320                     _timer0_init:
  1513                           	callstack 23
  1514  004320                     
  1515                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1516  004320  50D6               	movf	214,w,c	;volatile
  1517  004322  0B1F               	andlw	-225
  1518  004324  0940               	iorlw	64
  1519  004326  6ED6               	movwf	214,c	;volatile
  1520  004328                     
  1521                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1522  004328  88D6               	bsf	214,4,c	;volatile
  1523                           
  1524                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
  1525  00432A  50D6               	movf	214,w,c	;volatile
  1526  00432C  0BF0               	andlw	-16
  1527  00432E  0905               	iorlw	5
  1528  004330  6ED6               	movwf	214,c	;volatile
  1529  004332                     
  1530                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  1531  004332  88D5               	bsf	213,4,c	;volatile
  1532                           
  1533                           ;timers.c: 14:     TMR0H=0b00111100;
  1534  004334  0E3C               	movlw	60
  1535  004336  6ED4               	movwf	212,c	;volatile
  1536                           
  1537                           ;timers.c: 15:     TMR0L=0b10101111;
  1538  004338  0EAF               	movlw	175
  1539  00433A  6ED3               	movwf	211,c	;volatile
  1540  00433C                     
  1541                           ;timers.c: 16:     T0CON0bits.T0EN=1;
  1542  00433C  8ED5               	bsf	213,7,c	;volatile
  1543  00433E  0012               	return		;funcret
  1544  004340                     __end_of_timer0_init:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _returnhome *****************
  1548 ;; Defined at:
  1549 ;;		line 309 in file "DC_motors.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  mL              2   40[BANK0 ] PTR struct .
  1552 ;;		 -> main@motorL(9), 
  1553 ;;  mR              2   42[BANK0 ] PTR struct .
  1554 ;;		 -> main@motorR(9), 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  k               1   48[BANK0 ] unsigned char 
  1557 ;;  j               1   47[BANK0 ] unsigned char 
  1558 ;;  i               1   46[BANK0 ] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1568 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;Total ram usage:        9 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 13
  1575 ;; This function calls:
  1576 ;;		_reverse
  1577 ;;		_reverseinstructions
  1578 ;;		_stop
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text2
  1585  0038E8                     __ptext2:
  1586                           	callstack 0
  1587  0038E8                     _returnhome:
  1588                           	callstack 17
  1589  0038E8                     
  1590                           ;DC_motors.c: 310:     INTCONbits.GIE = 1;
  1591  0038E8  8EF2               	bsf	242,7,c	;volatile
  1592                           
  1593                           ;DC_motors.c: 312:     unsigned char i=instr_counter;
  1594  0038EA  C0E1  F08E         	movff	_instr_counter,returnhome@i	;volatile
  1595  0038EE                     
  1596                           ;DC_motors.c: 313:     unsigned char j,k;;DC_motors.c: 314:     for (j=0; j<=i; j++) {
  1597  0038EE  0E00               	movlw	0
  1598  0038F0  0100               	movlb	0	; () banked
  1599  0038F2  6F8F               	movwf	returnhome@j& (0+255),b
  1600  0038F4  EFB8  F01C         	goto	l5349
  1601  0038F8                     l5329:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;DC_motors.c: 315:         reverse(mL, mR);
  1605  0038F8  C088  F022         	movff	returnhome@mL,reverse@mL
  1606  0038FC  C089  F023         	movff	returnhome@mL+1,reverse@mL+1
  1607  003900  C08A  F024         	movff	returnhome@mR,reverse@mR
  1608  003904  C08B  F025         	movff	returnhome@mR+1,reverse@mR+1
  1609  003908  EC6F  F01E         	call	_reverse	;wreg free
  1610  00390C                     
  1611                           ;DC_motors.c: 316:         for (k=0; k<=5; k++) {_delay((unsigned long)((100)*(64000000/
      +                          4000.0)));}
  1612  00390C  0E00               	movlw	0
  1613  00390E  0100               	movlb	0	; () banked
  1614  003910  6F90               	movwf	returnhome@k& (0+255),b
  1615  003912                     l5337:
  1616                           
  1617                           ; BSR set to: 0
  1618  003912  0E09               	movlw	9
  1619  003914  0100               	movlb	0	; () banked
  1620  003916  6F8D               	movwf	(??_returnhome+1)& (0+255),b
  1621  003918  0E1E               	movlw	30
  1622  00391A  6F8C               	movwf	??_returnhome& (0+255),b
  1623  00391C  0EE4               	movlw	228
  1624  00391E                     u6707:
  1625  00391E  2EE8               	decfsz	wreg,f,c
  1626  003920  D7FE               	bra	u6707
  1627  003922  2F8C               	decfsz	??_returnhome& (0+255),f,b
  1628  003924  D7FC               	bra	u6707
  1629  003926  2F8D               	decfsz	(??_returnhome+1)& (0+255),f,b
  1630  003928  D7FA               	bra	u6707
  1631  00392A  F000               	nop	
  1632  00392C  0100               	movlb	0	; () banked
  1633  00392E  2B90               	incf	returnhome@k& (0+255),f,b
  1634  003930  0E05               	movlw	5
  1635  003932  6590               	cpfsgt	returnhome@k& (0+255),b
  1636  003934  EF9E  F01C         	goto	u6091
  1637  003938  EFA0  F01C         	goto	u6090
  1638  00393C                     u6091:
  1639  00393C  EF89  F01C         	goto	l5337
  1640  003940                     u6090:
  1641  003940                     
  1642                           ; BSR set to: 0
  1643                           ;DC_motors.c: 317:         stop(mL, mR);
  1644  003940  C088  F022         	movff	returnhome@mL,stop@mL
  1645  003944  C089  F023         	movff	returnhome@mL+1,stop@mL+1
  1646  003948  C08A  F024         	movff	returnhome@mR,stop@mR
  1647  00394C  C08B  F025         	movff	returnhome@mR+1,stop@mR+1
  1648  003950  ECFD  F01E         	call	_stop	;wreg free
  1649                           
  1650                           ;DC_motors.c: 319:         reverseinstructions(mL, mR);
  1651  003954  C088  F082         	movff	returnhome@mL,reverseinstructions@mL
  1652  003958  C089  F083         	movff	returnhome@mL+1,reverseinstructions@mL+1
  1653  00395C  C08A  F084         	movff	returnhome@mR,reverseinstructions@mR
  1654  003960  C08B  F085         	movff	returnhome@mR+1,reverseinstructions@mR+1
  1655  003964  EC79  F013         	call	_reverseinstructions	;wreg free
  1656  003968                     
  1657                           ;DC_motors.c: 321:         dur_counter--;
  1658  003968  0100               	movlb	0	; () banked
  1659  00396A  07E0               	decf	_dur_counter& (0+255),f,b	;volatile
  1660  00396C                     
  1661                           ; BSR set to: 0
  1662                           ;DC_motors.c: 322:         instr_counter--;
  1663  00396C  07E1               	decf	_instr_counter& (0+255),f,b	;volatile
  1664  00396E                     
  1665                           ; BSR set to: 0
  1666                           ;DC_motors.c: 323:     }
  1667  00396E  2B8F               	incf	returnhome@j& (0+255),f,b
  1668  003970                     l5349:
  1669                           
  1670                           ; BSR set to: 0
  1671  003970  518F               	movf	returnhome@j& (0+255),w,b
  1672  003972  5D8E               	subwf	returnhome@i& (0+255),w,b
  1673  003974  B0D8               	btfsc	status,0,c
  1674  003976  EFBF  F01C         	goto	u6101
  1675  00397A  EFC1  F01C         	goto	u6100
  1676  00397E                     u6101:
  1677  00397E  EF7C  F01C         	goto	l5329
  1678  003982                     u6100:
  1679  003982                     
  1680                           ; BSR set to: 0
  1681                           ;DC_motors.c: 324:     reverse(mL, mR);
  1682  003982  C088  F022         	movff	returnhome@mL,reverse@mL
  1683  003986  C089  F023         	movff	returnhome@mL+1,reverse@mL+1
  1684  00398A  C08A  F024         	movff	returnhome@mR,reverse@mR
  1685  00398E  C08B  F025         	movff	returnhome@mR+1,reverse@mR+1
  1686  003992  EC6F  F01E         	call	_reverse	;wreg free
  1687  003996                     
  1688                           ;DC_motors.c: 325:     for (k=0; k<=5; k++) {_delay((unsigned long)((100)*(64000000/4000
      +                          .0)));}
  1689  003996  0E00               	movlw	0
  1690  003998  0100               	movlb	0	; () banked
  1691  00399A  6F90               	movwf	returnhome@k& (0+255),b
  1692  00399C                     l5359:
  1693                           
  1694                           ; BSR set to: 0
  1695  00399C  0E09               	movlw	9
  1696  00399E  0100               	movlb	0	; () banked
  1697  0039A0  6F8D               	movwf	(??_returnhome+1)& (0+255),b
  1698  0039A2  0E1E               	movlw	30
  1699  0039A4  6F8C               	movwf	??_returnhome& (0+255),b
  1700  0039A6  0EE4               	movlw	228
  1701  0039A8                     u6717:
  1702  0039A8  2EE8               	decfsz	wreg,f,c
  1703  0039AA  D7FE               	bra	u6717
  1704  0039AC  2F8C               	decfsz	??_returnhome& (0+255),f,b
  1705  0039AE  D7FC               	bra	u6717
  1706  0039B0  2F8D               	decfsz	(??_returnhome+1)& (0+255),f,b
  1707  0039B2  D7FA               	bra	u6717
  1708  0039B4  F000               	nop	
  1709  0039B6  0100               	movlb	0	; () banked
  1710  0039B8  2B90               	incf	returnhome@k& (0+255),f,b
  1711  0039BA  0E05               	movlw	5
  1712  0039BC  6590               	cpfsgt	returnhome@k& (0+255),b
  1713  0039BE  EFE3  F01C         	goto	u6111
  1714  0039C2  EFE5  F01C         	goto	u6110
  1715  0039C6                     u6111:
  1716  0039C6  EFCE  F01C         	goto	l5359
  1717  0039CA                     u6110:
  1718  0039CA                     
  1719                           ; BSR set to: 0
  1720                           ;DC_motors.c: 326:     stop(mL, mR);
  1721  0039CA  C088  F022         	movff	returnhome@mL,stop@mL
  1722  0039CE  C089  F023         	movff	returnhome@mL+1,stop@mL+1
  1723  0039D2  C08A  F024         	movff	returnhome@mR,stop@mR
  1724  0039D6  C08B  F025         	movff	returnhome@mR+1,stop@mR+1
  1725  0039DA  ECFD  F01E         	call	_stop	;wreg free
  1726  0039DE  0012               	return		;funcret
  1727  0039E0                     __end_of_returnhome:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _reverseinstructions *****************
  1731 ;; Defined at:
  1732 ;;		line 281 in file "DC_motors.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  mL              2   34[BANK0 ] PTR struct .
  1735 ;;		 -> main@motorL(9), 
  1736 ;;  mR              2   36[BANK0 ] PTR struct .
  1737 ;;		 -> main@motorR(9), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1749 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;Total ram usage:        6 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 12
  1756 ;; This function calls:
  1757 ;;		_forward
  1758 ;;		_instructions
  1759 ;;		_stop
  1760 ;;		_turnleft
  1761 ;;		_turnright
  1762 ;; This function is called by:
  1763 ;;		_returnhome
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text3
  1768  0026F2                     __ptext3:
  1769                           	callstack 0
  1770  0026F2                     _reverseinstructions:
  1771                           	callstack 17
  1772  0026F2                     
  1773                           ;DC_motors.c: 282:     if (instr[instr_counter]==1) {instructions(mL, mR, 2);}
  1774  0026F2  0100               	movlb	0	; () banked
  1775  0026F4  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1776  0026F6  0D02               	mullw	2
  1777  0026F8  0EB3               	movlw	low _instr
  1778  0026FA  24F3               	addwf	243,w,c
  1779  0026FC  6ED9               	movwf	fsr2l,c
  1780  0026FE  0E00               	movlw	high _instr
  1781  002700  20F4               	addwfc	prodh,w,c
  1782  002702  6EDA               	movwf	fsr2h,c
  1783  002704  04DE               	decf	postinc2,w,c
  1784  002706  10DE               	iorwf	postinc2,w,c
  1785  002708  A4D8               	btfss	status,2,c
  1786  00270A  EF89  F013         	goto	u5681
  1787  00270E  EF8B  F013         	goto	u5680
  1788  002712                     u5681:
  1789  002712  EF99  F013         	goto	l5121
  1790  002716                     u5680:
  1791  002716                     
  1792                           ; BSR set to: 0
  1793  002716  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  1794  00271A  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  1795  00271E  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  1796  002722  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  1797  002726  0E02               	movlw	2
  1798  002728  6F81               	movwf	instructions@num& (0+255),b
  1799  00272A  EC7D  F010         	call	_instructions	;wreg free
  1800  00272E  EFC5  F014         	goto	l718
  1801  002732                     l5121:
  1802                           
  1803                           ; BSR set to: 0
  1804  002732  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1805  002734  0D02               	mullw	2
  1806  002736  0EB3               	movlw	low _instr
  1807  002738  24F3               	addwf	243,w,c
  1808  00273A  6ED9               	movwf	fsr2l,c
  1809  00273C  0E00               	movlw	high _instr
  1810  00273E  20F4               	addwfc	prodh,w,c
  1811  002740  6EDA               	movwf	fsr2h,c
  1812  002742  0E02               	movlw	2
  1813  002744  18DE               	xorwf	postinc2,w,c
  1814  002746  10DE               	iorwf	postinc2,w,c
  1815  002748  A4D8               	btfss	status,2,c
  1816  00274A  EFA9  F013         	goto	u5691
  1817  00274E  EFAB  F013         	goto	u5690
  1818  002752                     u5691:
  1819  002752  EFB9  F013         	goto	l5125
  1820  002756                     u5690:
  1821  002756                     
  1822                           ; BSR set to: 0
  1823  002756  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  1824  00275A  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  1825  00275E  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  1826  002762  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  1827  002766  0E01               	movlw	1
  1828  002768  6F81               	movwf	instructions@num& (0+255),b
  1829  00276A  EC7D  F010         	call	_instructions	;wreg free
  1830  00276E  EFC5  F014         	goto	l718
  1831  002772                     l5125:
  1832                           
  1833                           ; BSR set to: 0
  1834  002772  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1835  002774  0D02               	mullw	2
  1836  002776  0EB3               	movlw	low _instr
  1837  002778  24F3               	addwf	243,w,c
  1838  00277A  6ED9               	movwf	fsr2l,c
  1839  00277C  0E00               	movlw	high _instr
  1840  00277E  20F4               	addwfc	prodh,w,c
  1841  002780  6EDA               	movwf	fsr2h,c
  1842  002782  0E03               	movlw	3
  1843  002784  18DE               	xorwf	postinc2,w,c
  1844  002786  10DE               	iorwf	postinc2,w,c
  1845  002788  A4D8               	btfss	status,2,c
  1846  00278A  EFC9  F013         	goto	u5701
  1847  00278E  EFCB  F013         	goto	u5700
  1848  002792                     u5701:
  1849  002792  EFD9  F013         	goto	l5129
  1850  002796                     u5700:
  1851  002796                     
  1852                           ; BSR set to: 0
  1853  002796  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  1854  00279A  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  1855  00279E  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  1856  0027A2  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  1857  0027A6  0E03               	movlw	3
  1858  0027A8  6F81               	movwf	instructions@num& (0+255),b
  1859  0027AA  EC7D  F010         	call	_instructions	;wreg free
  1860  0027AE  EFC5  F014         	goto	l718
  1861  0027B2                     l5129:
  1862                           
  1863                           ; BSR set to: 0
  1864  0027B2  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1865  0027B4  0D02               	mullw	2
  1866  0027B6  0EB3               	movlw	low _instr
  1867  0027B8  24F3               	addwf	243,w,c
  1868  0027BA  6ED9               	movwf	fsr2l,c
  1869  0027BC  0E00               	movlw	high _instr
  1870  0027BE  20F4               	addwfc	prodh,w,c
  1871  0027C0  6EDA               	movwf	fsr2h,c
  1872  0027C2  0E04               	movlw	4
  1873  0027C4  18DE               	xorwf	postinc2,w,c
  1874  0027C6  10DE               	iorwf	postinc2,w,c
  1875  0027C8  A4D8               	btfss	status,2,c
  1876  0027CA  EFE9  F013         	goto	u5711
  1877  0027CE  EFEB  F013         	goto	u5710
  1878  0027D2                     u5711:
  1879  0027D2  EF34  F014         	goto	l5141
  1880  0027D6                     u5710:
  1881  0027D6                     
  1882                           ; BSR set to: 0
  1883                           ;DC_motors.c: 286:         forward(mL, mR);
  1884  0027D6  C082  F022         	movff	reverseinstructions@mL,forward@mL
  1885  0027DA  C083  F023         	movff	reverseinstructions@mL+1,forward@mL+1
  1886  0027DE  C084  F024         	movff	reverseinstructions@mR,forward@mR
  1887  0027E2  C085  F025         	movff	reverseinstructions@mR+1,forward@mR+1
  1888  0027E6  ECB6  F01E         	call	_forward	;wreg free
  1889  0027EA                     
  1890                           ;DC_motors.c: 287:         _delay((unsigned long)((2500)*(64000000/4000.0)));
  1891  0027EA  0ECB               	movlw	203
  1892  0027EC  0100               	movlb	0	; () banked
  1893  0027EE  6F87               	movwf	(??_reverseinstructions+1)& (0+255),b
  1894  0027F0  0EEC               	movlw	236
  1895  0027F2  6F86               	movwf	??_reverseinstructions& (0+255),b
  1896  0027F4  0E84               	movlw	132
  1897  0027F6                     u6727:
  1898  0027F6  2EE8               	decfsz	wreg,f,c
  1899  0027F8  D7FE               	bra	u6727
  1900  0027FA  2F86               	decfsz	??_reverseinstructions& (0+255),f,b
  1901  0027FC  D7FC               	bra	u6727
  1902  0027FE  2F87               	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1903  002800  D7FA               	bra	u6727
  1904  002802  F000               	nop	
  1905  002804                     
  1906                           ;DC_motors.c: 288:         stop(mL, mR);
  1907  002804  C082  F022         	movff	reverseinstructions@mL,stop@mL
  1908  002808  C083  F023         	movff	reverseinstructions@mL+1,stop@mL+1
  1909  00280C  C084  F024         	movff	reverseinstructions@mR,stop@mR
  1910  002810  C085  F025         	movff	reverseinstructions@mR+1,stop@mR+1
  1911  002814  ECFD  F01E         	call	_stop	;wreg free
  1912                           
  1913                           ;DC_motors.c: 289:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1914  002818  0E09               	movlw	9
  1915  00281A  0100               	movlb	0	; () banked
  1916  00281C  6F87               	movwf	(??_reverseinstructions+1)& (0+255),b
  1917  00281E  0E1E               	movlw	30
  1918  002820  6F86               	movwf	??_reverseinstructions& (0+255),b
  1919  002822  0EE4               	movlw	228
  1920  002824                     u6737:
  1921  002824  2EE8               	decfsz	wreg,f,c
  1922  002826  D7FE               	bra	u6737
  1923  002828  2F86               	decfsz	??_reverseinstructions& (0+255),f,b
  1924  00282A  D7FC               	bra	u6737
  1925  00282C  2F87               	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1926  00282E  D7FA               	bra	u6737
  1927  002830  F000               	nop	
  1928  002832                     
  1929                           ;DC_motors.c: 290:         turnleft(mL, mR, 90);
  1930  002832  C082  F06D         	movff	reverseinstructions@mL,turnleft@mL
  1931  002836  C083  F06E         	movff	reverseinstructions@mL+1,turnleft@mL+1
  1932  00283A  C084  F06F         	movff	reverseinstructions@mR,turnleft@mR
  1933  00283E  C085  F070         	movff	reverseinstructions@mR+1,turnleft@mR+1
  1934  002842  0E00               	movlw	0
  1935  002844  0100               	movlb	0	; () banked
  1936  002846  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  1937  002848  0E5A               	movlw	90
  1938  00284A  6F71               	movwf	turnleft@deg& (0+255),b
  1939  00284C  EC10  F017         	call	_turnleft	;wreg free
  1940  002850                     l5139:
  1941                           
  1942                           ;DC_motors.c: 291:         stop(mL, mR);
  1943  002850  C082  F022         	movff	reverseinstructions@mL,stop@mL
  1944  002854  C083  F023         	movff	reverseinstructions@mL+1,stop@mL+1
  1945  002858  C084  F024         	movff	reverseinstructions@mR,stop@mR
  1946  00285C  C085  F025         	movff	reverseinstructions@mR+1,stop@mR+1
  1947  002860  ECFD  F01E         	call	_stop	;wreg free
  1948                           
  1949                           ;DC_motors.c: 292:     }
  1950  002864  EFC5  F014         	goto	l718
  1951  002868                     l5141:
  1952                           
  1953                           ; BSR set to: 0
  1954  002868  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1955  00286A  0D02               	mullw	2
  1956  00286C  0EB3               	movlw	low _instr
  1957  00286E  24F3               	addwf	243,w,c
  1958  002870  6ED9               	movwf	fsr2l,c
  1959  002872  0E00               	movlw	high _instr
  1960  002874  20F4               	addwfc	prodh,w,c
  1961  002876  6EDA               	movwf	fsr2h,c
  1962  002878  0E05               	movlw	5
  1963  00287A  18DE               	xorwf	postinc2,w,c
  1964  00287C  10DE               	iorwf	postinc2,w,c
  1965  00287E  A4D8               	btfss	status,2,c
  1966  002880  EF44  F014         	goto	u5721
  1967  002884  EF46  F014         	goto	u5720
  1968  002888                     u5721:
  1969  002888  EF85  F014         	goto	l5153
  1970  00288C                     u5720:
  1971  00288C                     
  1972                           ; BSR set to: 0
  1973                           ;DC_motors.c: 294:         forward(mL, mR);
  1974  00288C  C082  F022         	movff	reverseinstructions@mL,forward@mL
  1975  002890  C083  F023         	movff	reverseinstructions@mL+1,forward@mL+1
  1976  002894  C084  F024         	movff	reverseinstructions@mR,forward@mR
  1977  002898  C085  F025         	movff	reverseinstructions@mR+1,forward@mR+1
  1978  00289C  ECB6  F01E         	call	_forward	;wreg free
  1979  0028A0                     
  1980                           ;DC_motors.c: 295:         _delay((unsigned long)((2500)*(64000000/4000.0)));
  1981  0028A0  0ECB               	movlw	203
  1982  0028A2  0100               	movlb	0	; () banked
  1983  0028A4  6F87               	movwf	(??_reverseinstructions+1)& (0+255),b
  1984  0028A6  0EEC               	movlw	236
  1985  0028A8  6F86               	movwf	??_reverseinstructions& (0+255),b
  1986  0028AA  0E84               	movlw	132
  1987  0028AC                     u6747:
  1988  0028AC  2EE8               	decfsz	wreg,f,c
  1989  0028AE  D7FE               	bra	u6747
  1990  0028B0  2F86               	decfsz	??_reverseinstructions& (0+255),f,b
  1991  0028B2  D7FC               	bra	u6747
  1992  0028B4  2F87               	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1993  0028B6  D7FA               	bra	u6747
  1994  0028B8  F000               	nop	
  1995  0028BA                     
  1996                           ;DC_motors.c: 296:         stop(mL, mR);
  1997  0028BA  C082  F022         	movff	reverseinstructions@mL,stop@mL
  1998  0028BE  C083  F023         	movff	reverseinstructions@mL+1,stop@mL+1
  1999  0028C2  C084  F024         	movff	reverseinstructions@mR,stop@mR
  2000  0028C6  C085  F025         	movff	reverseinstructions@mR+1,stop@mR+1
  2001  0028CA  ECFD  F01E         	call	_stop	;wreg free
  2002                           
  2003                           ;DC_motors.c: 297:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2004  0028CE  0E09               	movlw	9
  2005  0028D0  0100               	movlb	0	; () banked
  2006  0028D2  6F87               	movwf	(??_reverseinstructions+1)& (0+255),b
  2007  0028D4  0E1E               	movlw	30
  2008  0028D6  6F86               	movwf	??_reverseinstructions& (0+255),b
  2009  0028D8  0EE4               	movlw	228
  2010  0028DA                     u6757:
  2011  0028DA  2EE8               	decfsz	wreg,f,c
  2012  0028DC  D7FE               	bra	u6757
  2013  0028DE  2F86               	decfsz	??_reverseinstructions& (0+255),f,b
  2014  0028E0  D7FC               	bra	u6757
  2015  0028E2  2F87               	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  2016  0028E4  D7FA               	bra	u6757
  2017  0028E6  F000               	nop	
  2018  0028E8                     
  2019                           ;DC_motors.c: 298:         turnright(mL, mR, 90);
  2020  0028E8  C082  F06D         	movff	reverseinstructions@mL,turnright@mL
  2021  0028EC  C083  F06E         	movff	reverseinstructions@mL+1,turnright@mL+1
  2022  0028F0  C084  F06F         	movff	reverseinstructions@mR,turnright@mR
  2023  0028F4  C085  F070         	movff	reverseinstructions@mR+1,turnright@mR+1
  2024  0028F8  0E00               	movlw	0
  2025  0028FA  0100               	movlb	0	; () banked
  2026  0028FC  6F72               	movwf	(turnright@deg+1)& (0+255),b
  2027  0028FE  0E5A               	movlw	90
  2028  002900  6F71               	movwf	turnright@deg& (0+255),b
  2029  002902  EC0D  F016         	call	_turnright	;wreg free
  2030  002906  EF28  F014         	goto	l5139
  2031  00290A                     l5153:
  2032                           
  2033                           ; BSR set to: 0
  2034  00290A  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  2035  00290C  0D02               	mullw	2
  2036  00290E  0EB3               	movlw	low _instr
  2037  002910  24F3               	addwf	243,w,c
  2038  002912  6ED9               	movwf	fsr2l,c
  2039  002914  0E00               	movlw	high _instr
  2040  002916  20F4               	addwfc	prodh,w,c
  2041  002918  6EDA               	movwf	fsr2h,c
  2042  00291A  0E06               	movlw	6
  2043  00291C  18DE               	xorwf	postinc2,w,c
  2044  00291E  10DE               	iorwf	postinc2,w,c
  2045  002920  A4D8               	btfss	status,2,c
  2046  002922  EF95  F014         	goto	u5731
  2047  002926  EF97  F014         	goto	u5730
  2048  00292A                     u5731:
  2049  00292A  EFA5  F014         	goto	l5157
  2050  00292E                     u5730:
  2051  00292E                     
  2052                           ; BSR set to: 0
  2053  00292E  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  2054  002932  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  2055  002936  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  2056  00293A  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  2057  00293E  0E07               	movlw	7
  2058  002940  6F81               	movwf	instructions@num& (0+255),b
  2059  002942  EC7D  F010         	call	_instructions	;wreg free
  2060  002946  EFC5  F014         	goto	l718
  2061  00294A                     l5157:
  2062                           
  2063                           ; BSR set to: 0
  2064  00294A  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  2065  00294C  0D02               	mullw	2
  2066  00294E  0EB3               	movlw	low _instr
  2067  002950  24F3               	addwf	243,w,c
  2068  002952  6ED9               	movwf	fsr2l,c
  2069  002954  0E00               	movlw	high _instr
  2070  002956  20F4               	addwfc	prodh,w,c
  2071  002958  6EDA               	movwf	fsr2h,c
  2072  00295A  0E07               	movlw	7
  2073  00295C  18DE               	xorwf	postinc2,w,c
  2074  00295E  10DE               	iorwf	postinc2,w,c
  2075  002960  A4D8               	btfss	status,2,c
  2076  002962  EFB5  F014         	goto	u5741
  2077  002966  EFB7  F014         	goto	u5740
  2078  00296A                     u5741:
  2079  00296A  EFC5  F014         	goto	l712
  2080  00296E                     u5740:
  2081  00296E                     
  2082                           ; BSR set to: 0
  2083  00296E  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  2084  002972  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  2085  002976  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  2086  00297A  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  2087  00297E  0E06               	movlw	6
  2088  002980  6F81               	movwf	instructions@num& (0+255),b
  2089  002982  EC7D  F010         	call	_instructions	;wreg free
  2090  002986  EFC5  F014         	goto	l718
  2091  00298A                     l712:
  2092  00298A                     l718:
  2093  00298A  0012               	return		;funcret
  2094  00298C                     __end_of_reverseinstructions:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _interrupts_init *****************
  2098 ;; Defined at:
  2099 ;;		line 12 in file "interrupts.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 12
  2120 ;; This function calls:
  2121 ;;		_interrupts_clear
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text4
  2128  0042B8                     __ptext4:
  2129                           	callstack 0
  2130  0042B8                     _interrupts_init:
  2131                           	callstack 18
  2132  0042B8                     
  2133                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  2134  0042B8  8282               	bsf	130,1,c	;volatile
  2135                           
  2136                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  2137  0042BA  010E               	movlb	14	; () banked
  2138  0042BC  939A               	bcf	154,1,b	;volatile
  2139  0042BE                     
  2140                           ; BSR set to: 14
  2141                           ;interrupts.c: 15:     INT1PPS=0x09;
  2142  0042BE  0E09               	movlw	9
  2143  0042C0  010D               	movlb	13	; () banked
  2144  0042C2  6FF1               	movwf	241,b	;volatile
  2145  0042C4                     
  2146                           ; BSR set to: 13
  2147                           ;interrupts.c: 17:     PIE0bits.INT1IE = 1;
  2148  0042C4  010E               	movlb	14	; () banked
  2149  0042C6  8329               	bsf	41,1,b	;volatile
  2150  0042C8                     
  2151                           ; BSR set to: 14
  2152                           ;interrupts.c: 18:     PIE0bits.TMR0IE = 1;
  2153  0042C8  8B29               	bsf	41,5,b	;volatile
  2154  0042CA                     
  2155                           ; BSR set to: 14
  2156                           ;interrupts.c: 20:     IPR0bits.INT1IP = 1;
  2157  0042CA  831F               	bsf	31,1,b	;volatile
  2158  0042CC                     
  2159                           ; BSR set to: 14
  2160                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 0;
  2161  0042CC  9B1F               	bcf	31,5,b	;volatile
  2162  0042CE                     
  2163                           ; BSR set to: 14
  2164                           ;interrupts.c: 23:     interrupts_clear();
  2165  0042CE  ECD0  F021         	call	_interrupts_clear	;wreg free
  2166  0042D2                     
  2167                           ;interrupts.c: 25:     INTCONbits.INT1EDG = 0;
  2168  0042D2  92F2               	bcf	242,1,c	;volatile
  2169  0042D4                     
  2170                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  2171  0042D4  8AF2               	bsf	242,5,c	;volatile
  2172  0042D6                     
  2173                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  2174  0042D6  8CF2               	bsf	242,6,c	;volatile
  2175  0042D8                     
  2176                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  2177  0042D8  8EF2               	bsf	242,7,c	;volatile
  2178  0042DA  0012               	return		;funcret
  2179  0042DC                     __end_of_interrupts_init:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _interrupts_clear *****************
  2183 ;; Defined at:
  2184 ;;		line 37 in file "interrupts.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 11
  2205 ;; This function calls:
  2206 ;;		_I2C_2_Master_Start
  2207 ;;		_I2C_2_Master_Stop
  2208 ;;		_I2C_2_Master_Write
  2209 ;;		_interrupts_colourclick
  2210 ;; This function is called by:
  2211 ;;		_interrupts_init
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text5
  2216  0043A0                     __ptext5:
  2217                           	callstack 0
  2218  0043A0                     _interrupts_clear:
  2219                           	callstack 18
  2220  0043A0                     
  2221                           ;interrupts.c: 38:     I2C_2_Master_Start();
  2222  0043A0  EC2C  F022         	call	_I2C_2_Master_Start	;wreg free
  2223                           
  2224                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2225  0043A4  0E52               	movlw	82
  2226  0043A6  EC15  F022         	call	_I2C_2_Master_Write
  2227                           
  2228                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  2229  0043AA  0EE6               	movlw	230
  2230  0043AC  EC15  F022         	call	_I2C_2_Master_Write
  2231                           
  2232                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  2233  0043B0  EC27  F022         	call	_I2C_2_Master_Stop	;wreg free
  2234                           
  2235                           ;interrupts.c: 43:     interrupts_colourclick();
  2236  0043B4  EC68  F020         	call	_interrupts_colourclick	;wreg free
  2237  0043B8  0012               	return		;funcret
  2238  0043BA                     __end_of_interrupts_clear:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _interrupts_colourclick *****************
  2242 ;; Defined at:
  2243 ;;		line 50 in file "interrupts.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;Total ram usage:        1 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 10
  2264 ;; This function calls:
  2265 ;;		_colourclick_writetoaddr
  2266 ;; This function is called by:
  2267 ;;		_interrupts_clear
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text6
  2272  0040D0                     __ptext6:
  2273                           	callstack 0
  2274  0040D0                     _interrupts_colourclick:
  2275                           	callstack 18
  2276  0040D0                     
  2277                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  2278  0040D0  0E13               	movlw	19
  2279  0040D2  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2280  0040D4  0E00               	movlw	0
  2281  0040D6  ECA0  F021         	call	_colourclick_writetoaddr
  2282  0040DA                     
  2283                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2284  0040DA  0E3F               	movlw	63
  2285  0040DC  6E0D               	movwf	??_interrupts_colourclick^0,c
  2286  0040DE  0E55               	movlw	85
  2287  0040E0                     u6767:
  2288  0040E0  2EE8               	decfsz	wreg,f,c
  2289  0040E2  D7FE               	bra	u6767
  2290  0040E4  2E0D               	decfsz	??_interrupts_colourclick^0,f,c
  2291  0040E6  D7FC               	bra	u6767
  2292  0040E8  F000               	nop	
  2293  0040EA                     
  2294                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  2295  0040EA  0E04               	movlw	4
  2296  0040EC  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2297  0040EE  0E0C               	movlw	12
  2298  0040F0  ECA0  F021         	call	_colourclick_writetoaddr
  2299  0040F4                     
  2300                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  2301  0040F4  C055  F00B         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  2302  0040F8  0E04               	movlw	4
  2303  0040FA  ECA0  F021         	call	_colourclick_writetoaddr
  2304  0040FE                     
  2305                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  2306  0040FE  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2307  004100  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2308  004102  0E05               	movlw	5
  2309  004104  ECA0  F021         	call	_colourclick_writetoaddr
  2310  004108                     
  2311                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  2312  004108  C053  F00B         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  2313  00410C  0E06               	movlw	6
  2314  00410E  ECA0  F021         	call	_colourclick_writetoaddr
  2315  004112                     
  2316                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  2317  004112  5054               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2318  004114  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2319  004116  0E07               	movlw	7
  2320  004118  ECA0  F021         	call	_colourclick_writetoaddr
  2321  00411C  0012               	return		;funcret
  2322  00411E                     __end_of_interrupts_colourclick:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function _colourclick_init *****************
  2326 ;; Defined at:
  2327 ;;		line 12 in file "colour_click.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;Total ram usage:        1 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 10
  2348 ;; This function calls:
  2349 ;;		_I2C_2_Master_Init
  2350 ;;		_colourclickLEDs_init
  2351 ;;		_colourclick_writetoaddr
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text7
  2358  0041AE                     __ptext7:
  2359                           	callstack 0
  2360  0041AE                     _colourclick_init:
  2361                           	callstack 20
  2362  0041AE                     
  2363                           ;colour_click.c: 14:     I2C_2_Master_Init();
  2364  0041AE  EC0C  F021         	call	_I2C_2_Master_Init	;wreg free
  2365  0041B2                     
  2366                           ;colour_click.c: 17:   colourclick_writetoaddr(0x00, 0x01);
  2367  0041B2  0E01               	movlw	1
  2368  0041B4  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2369  0041B6  0E00               	movlw	0
  2370  0041B8  ECA0  F021         	call	_colourclick_writetoaddr
  2371  0041BC                     
  2372                           ;colour_click.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2373  0041BC  0E3F               	movlw	63
  2374  0041BE  6E0D               	movwf	??_colourclick_init^0,c
  2375  0041C0  0E55               	movlw	85
  2376  0041C2                     u6777:
  2377  0041C2  2EE8               	decfsz	wreg,f,c
  2378  0041C4  D7FE               	bra	u6777
  2379  0041C6  2E0D               	decfsz	??_colourclick_init^0,f,c
  2380  0041C8  D7FC               	bra	u6777
  2381  0041CA  F000               	nop	
  2382  0041CC                     
  2383                           ;colour_click.c: 21:  colourclick_writetoaddr(0x00, 0x03);
  2384  0041CC  0E03               	movlw	3
  2385  0041CE  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2386  0041D0  0E00               	movlw	0
  2387  0041D2  ECA0  F021         	call	_colourclick_writetoaddr
  2388  0041D6                     
  2389                           ;colour_click.c: 24:  colourclick_writetoaddr(0x01, 0xD5);
  2390  0041D6  0ED5               	movlw	213
  2391  0041D8  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2392  0041DA  0E01               	movlw	1
  2393  0041DC  ECA0  F021         	call	_colourclick_writetoaddr
  2394  0041E0                     
  2395                           ;colour_click.c: 26:     colourclickLEDs_init();
  2396  0041E0  EC0E  F022         	call	_colourclickLEDs_init	;wreg free
  2397  0041E4  0012               	return		;funcret
  2398  0041E6                     __end_of_colourclick_init:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _colourclick_writetoaddr *****************
  2402 ;; Defined at:
  2403 ;;		line 33 in file "colour_click.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  address         1    wreg     unsigned char 
  2406 ;;  value           1   10[COMRAM] unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  address         1   11[COMRAM] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2418 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 9
  2425 ;; This function calls:
  2426 ;;		_I2C_2_Master_Start
  2427 ;;		_I2C_2_Master_Stop
  2428 ;;		_I2C_2_Master_Write
  2429 ;; This function is called by:
  2430 ;;		_interrupts_colourclick
  2431 ;;		_colourclick_init
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text8
  2436  004340                     __ptext8:
  2437                           	callstack 0
  2438  004340                     _colourclick_writetoaddr:
  2439                           	callstack 18
  2440                           
  2441                           ;incstack = 0
  2442                           ;colourclick_writetoaddr@address stored from wreg
  2443  004340  6E0C               	movwf	colourclick_writetoaddr@address^0,c
  2444  004342                     
  2445                           ;colour_click.c: 34:     I2C_2_Master_Start();
  2446  004342  EC2C  F022         	call	_I2C_2_Master_Start	;wreg free
  2447                           
  2448                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  2449  004346  0E52               	movlw	82
  2450  004348  EC15  F022         	call	_I2C_2_Master_Write
  2451                           
  2452                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  2453  00434C  500C               	movf	colourclick_writetoaddr@address^0,w,c
  2454  00434E  0980               	iorlw	128
  2455  004350  EC15  F022         	call	_I2C_2_Master_Write
  2456                           
  2457                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  2458  004354  500B               	movf	colourclick_writetoaddr@value^0,w,c
  2459  004356  EC15  F022         	call	_I2C_2_Master_Write
  2460                           
  2461                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  2462  00435A  EC27  F022         	call	_I2C_2_Master_Stop	;wreg free
  2463  00435E  0012               	return		;funcret
  2464  004360                     __end_of_colourclick_writetoaddr:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _colourclickLEDs_init *****************
  2468 ;; Defined at:
  2469 ;;		line 32 in file "buttons_n_LEDs.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 8
  2490 ;; This function calls:
  2491 ;;		_colourclickLEDs_C
  2492 ;; This function is called by:
  2493 ;;		_colourclick_init
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text9
  2498  00441C                     __ptext9:
  2499                           	callstack 0
  2500  00441C                     _colourclickLEDs_init:
  2501                           	callstack 21
  2502  00441C                     
  2503                           ;buttons_n_LEDs.c: 34:     TRISGbits.TRISG1 = 0;
  2504  00441C  9287               	bcf	135,1,c	;volatile
  2505                           
  2506                           ;buttons_n_LEDs.c: 35:     TRISAbits.TRISA4 = 0;
  2507  00441E  9881               	bcf	129,4,c	;volatile
  2508                           
  2509                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF7 = 0;
  2510  004420  9E86               	bcf	134,7,c	;volatile
  2511  004422                     
  2512                           ;buttons_n_LEDs.c: 39:     colourclickLEDs_C(0);
  2513  004422  0E00               	movlw	0
  2514  004424  EC6E  F021         	call	_colourclickLEDs_C
  2515  004428  0012               	return		;funcret
  2516  00442A                     __end_of_colourclickLEDs_init:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _I2C_2_Master_Init *****************
  2520 ;; Defined at:
  2521 ;;		line 8 in file "I2C.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 7
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_colourclick_init
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text10
  2550  004218                     __ptext10:
  2551                           	callstack 0
  2552  004218                     _I2C_2_Master_Init:
  2553                           	callstack 22
  2554  004218                     
  2555                           ;I2C.c: 10:   SSP2CON1bits.SSPM= 0b1000;
  2556  004218  010E               	movlb	14	; () banked
  2557  00421A  51D9               	movf	217,w,b	;volatile
  2558  00421C  0BF0               	andlw	-16
  2559  00421E  0908               	iorlw	8
  2560  004220  6FD9               	movwf	217,b	;volatile
  2561  004222                     
  2562                           ; BSR set to: 14
  2563                           ;I2C.c: 11:   SSP2CON1bits.SSPEN = 1;
  2564  004222  8BD9               	bsf	217,5,b	;volatile
  2565                           
  2566                           ;I2C.c: 12:   SSP2ADD = (64000000/(4*100000))-1;
  2567  004224  0E9F               	movlw	159
  2568  004226  6FD6               	movwf	214,b	;volatile
  2569  004228                     
  2570                           ; BSR set to: 14
  2571                           ;I2C.c: 15:   TRISDbits.TRISD5 = 1;
  2572  004228  8A84               	bsf	132,5,c	;volatile
  2573  00422A                     
  2574                           ; BSR set to: 14
  2575                           ;I2C.c: 16:   TRISDbits.TRISD6 = 1;
  2576  00422A  8C84               	bsf	132,6,c	;volatile
  2577  00422C                     
  2578                           ; BSR set to: 14
  2579                           ;I2C.c: 17:   ANSELDbits.ANSELD5=0;
  2580  00422C  9BA7               	bcf	167,5,b	;volatile
  2581  00422E                     
  2582                           ; BSR set to: 14
  2583                           ;I2C.c: 18:   ANSELDbits.ANSELD6=0;
  2584  00422E  9DA7               	bcf	167,6,b	;volatile
  2585                           
  2586                           ;I2C.c: 19:   SSP2DATPPS=0x1D;
  2587  004230  0E1D               	movlw	29
  2588  004232  6F1D               	movwf	29,b	;volatile
  2589                           
  2590                           ;I2C.c: 20:   SSP2CLKPPS=0x1E;
  2591  004234  0E1E               	movlw	30
  2592  004236  6F1C               	movwf	28,b	;volatile
  2593                           
  2594                           ;I2C.c: 21:   RD5PPS=0x1C;
  2595  004238  0E1C               	movlw	28
  2596  00423A  6F6F               	movwf	111,b	;volatile
  2597                           
  2598                           ;I2C.c: 22:   RD6PPS=0x1B;
  2599  00423C  0E1B               	movlw	27
  2600  00423E  6F70               	movwf	112,b	;volatile
  2601  004240                     
  2602                           ; BSR set to: 14
  2603  004240  0012               	return		;funcret
  2604  004242                     __end_of_I2C_2_Master_Init:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _colourclick_calibration *****************
  2608 ;; Defined at:
  2609 ;;		line 159 in file "colour_click.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  initial         8   23[COMRAM] struct .
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;Total ram usage:       10 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 11
  2630 ;; This function calls:
  2631 ;;		_colourclickLEDs_C
  2632 ;;		_colourclick_readRGBC
  2633 ;; This function is called by:
  2634 ;;		_main
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text11
  2639  003B9A                     __ptext11:
  2640                           	callstack 0
  2641  003B9A                     _colourclick_calibration:
  2642                           	callstack 19
  2643  003B9A                     l378:
  2644  003B9A  A48E               	btfss	142,2,c	;volatile
  2645  003B9C  EFD2  F01D         	goto	u4661
  2646  003BA0  EFD4  F01D         	goto	u4660
  2647  003BA4                     u4661:
  2648  003BA4  EFDB  F01D         	goto	l382
  2649  003BA8                     u4660:
  2650  003BA8  B68E               	btfsc	142,3,c	;volatile
  2651  003BAA  EFD9  F01D         	goto	u4671
  2652  003BAE  EFDB  F01D         	goto	u4670
  2653  003BB2                     u4671:
  2654  003BB2  EFCD  F01D         	goto	l378
  2655  003BB6                     u4670:
  2656  003BB6                     l382:
  2657                           
  2658                           ;colour_click.c: 162:     if (!PORTFbits.RF2) {LATDbits.LATD7=1;}
  2659  003BB6  B48E               	btfsc	142,2,c	;volatile
  2660  003BB8  EFE0  F01D         	goto	u4681
  2661  003BBC  EFE2  F01D         	goto	u4680
  2662  003BC0                     u4681:
  2663  003BC0  EFE3  F01D         	goto	l383
  2664  003BC4                     u4680:
  2665  003BC4  8E7C               	bsf	124,7,c	;volatile
  2666  003BC6                     l383:
  2667                           
  2668                           ;colour_click.c: 163:     if (!PORTFbits.RF3) {LATHbits.LATH3=1;}
  2669  003BC6  B68E               	btfsc	142,3,c	;volatile
  2670  003BC8  EFE8  F01D         	goto	u4691
  2671  003BCC  EFEA  F01D         	goto	u4690
  2672  003BD0                     u4691:
  2673  003BD0  EFEB  F01D         	goto	l384
  2674  003BD4                     u4690:
  2675  003BD4  8680               	bsf	128,3,c	;volatile
  2676  003BD6                     l384:
  2677                           
  2678                           ;colour_click.c: 164:     LATDbits.LATD3 = 1;
  2679  003BD6  867C               	bsf	124,3,c	;volatile
  2680  003BD8                     
  2681                           ;colour_click.c: 165:     colourclickLEDs_C(1);
  2682  003BD8  0E01               	movlw	1
  2683  003BDA  EC6E  F021         	call	_colourclickLEDs_C
  2684  003BDE                     
  2685                           ;colour_click.c: 166:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2686  003BDE  0E52               	movlw	82
  2687  003BE0  6E17               	movwf	(??_colourclick_calibration+1)^0,c
  2688  003BE2  0E2B               	movlw	43
  2689  003BE4  6E16               	movwf	??_colourclick_calibration^0,c
  2690  003BE6  0E00               	movlw	0
  2691  003BE8                     u6787:
  2692  003BE8  2EE8               	decfsz	wreg,f,c
  2693  003BEA  D7FE               	bra	u6787
  2694  003BEC  2E16               	decfsz	??_colourclick_calibration^0,f,c
  2695  003BEE  D7FC               	bra	u6787
  2696  003BF0  2E17               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2697  003BF2  D7FA               	bra	u6787
  2698  003BF4  D000               	nop2	
  2699  003BF6                     
  2700                           ;colour_click.c: 168:     colourclick_readRGBC(&initial);
  2701  003BF6  0E18               	movlw	low colourclick_calibration@initial
  2702  003BF8  6E14               	movwf	colourclick_readRGBC@tmpval^0,c
  2703  003BFA  0E00               	movlw	high colourclick_calibration@initial
  2704  003BFC  6E15               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2705  003BFE  EC71  F01F         	call	_colourclick_readRGBC	;wreg free
  2706  003C02                     
  2707                           ;colour_click.c: 170:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2708  003C02  0E52               	movlw	82
  2709  003C04  6E17               	movwf	(??_colourclick_calibration+1)^0,c
  2710  003C06  0E2B               	movlw	43
  2711  003C08  6E16               	movwf	??_colourclick_calibration^0,c
  2712  003C0A  0E00               	movlw	0
  2713  003C0C                     u6797:
  2714  003C0C  2EE8               	decfsz	wreg,f,c
  2715  003C0E  D7FE               	bra	u6797
  2716  003C10  2E16               	decfsz	??_colourclick_calibration^0,f,c
  2717  003C12  D7FC               	bra	u6797
  2718  003C14  2E17               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2719  003C16  D7FA               	bra	u6797
  2720  003C18  D000               	nop2	
  2721  003C1A                     
  2722                           ;colour_click.c: 171:     LATDbits.LATD3 = 0;
  2723  003C1A  967C               	bcf	124,3,c	;volatile
  2724  003C1C                     
  2725                           ;colour_click.c: 172:     colourclickLEDs_C(0);
  2726  003C1C  0E00               	movlw	0
  2727  003C1E  EC6E  F021         	call	_colourclickLEDs_C
  2728  003C22                     
  2729                           ;colour_click.c: 173:     LATDbits.LATD7 = 0;
  2730  003C22  9E7C               	bcf	124,7,c	;volatile
  2731  003C24                     
  2732                           ;colour_click.c: 174:     LATHbits.LATH3 = 0;
  2733  003C24  9680               	bcf	128,3,c	;volatile
  2734  003C26                     
  2735                           ;colour_click.c: 176:     interrupts_lowerbound = initial.C - 150;
  2736  003C26  0E6A               	movlw	106
  2737  003C28  241E               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2738  003C2A  6E55               	movwf	_interrupts_lowerbound^0,c	;volatile
  2739  003C2C  0EFF               	movlw	255
  2740  003C2E  201F               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2741  003C30  6E56               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  2742  003C32                     
  2743                           ;colour_click.c: 177:     interrupts_upperbound = initial.C + 100;
  2744  003C32  0E64               	movlw	100
  2745  003C34  241E               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2746  003C36  6E53               	movwf	_interrupts_upperbound^0,c	;volatile
  2747  003C38  0E00               	movlw	0
  2748  003C3A  201F               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2749  003C3C  6E54               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  2750  003C3E  0012               	return		;funcret
  2751  003C40                     __end_of_colourclick_calibration:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _colourcards_readRGBC *****************
  2755 ;; Defined at:
  2756 ;;		line 13 in file "colour_cards.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  abs             2   34[BANK0 ] PTR struct .
  2759 ;;		 -> main@current(8), 
  2760 ;;  mL              2   36[BANK0 ] PTR struct .
  2761 ;;		 -> main@motorL(9), 
  2762 ;;  mR              2   38[BANK0 ] PTR struct .
  2763 ;;		 -> main@motorR(9), 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  rel            12   42[BANK0 ] struct .
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2775 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2776 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;Total ram usage:       20 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 12
  2782 ;; This function calls:
  2783 ;;		___flge
  2784 ;;		_colourcards_normaliseRGBC
  2785 ;;		_colourclick_readRGBC
  2786 ;;		_colourclick_readRGBC2
  2787 ;;		_forward
  2788 ;;		_instructions
  2789 ;;		_stop
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;;		_colourcards_testingRGBC
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text12
  2797  000EA4                     __ptext12:
  2798                           	callstack 0
  2799  000EA4                     _colourcards_readRGBC:
  2800                           	callstack 18
  2801  000EA4                     
  2802                           ;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  2803  000EA4  010E               	movlb	14	; () banked
  2804  000EA6  9329               	bcf	41,1,b	;volatile
  2805  000EA8                     
  2806                           ; BSR set to: 14
  2807                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  2808  000EA8  C082  F014         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2809  000EAC  C083  F015         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2810  000EB0  EC71  F01F         	call	_colourclick_readRGBC	;wreg free
  2811                           
  2812                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  2813  000EB4  C082  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2814  000EB8  C083  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2815  000EBC  0E8A               	movlw	low colourcards_readRGBC@rel
  2816  000EBE  0100               	movlb	0	; () banked
  2817  000EC0  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2818  000EC2  0E00               	movlw	high colourcards_readRGBC@rel
  2819  000EC4  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2820  000EC6  ECD7  F019         	call	_colourcards_normaliseRGBC	;wreg free
  2821  000ECA                     
  2822                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  2823  000ECA  0E71               	movlw	113
  2824  000ECC  6E17               	movwf	___flge@ff1^0,c
  2825  000ECE  0E3D               	movlw	61
  2826  000ED0  6E18               	movwf	(___flge@ff1+1)^0,c
  2827  000ED2  0E0A               	movlw	10
  2828  000ED4  6E19               	movwf	(___flge@ff1+2)^0,c
  2829  000ED6  0E3F               	movlw	63
  2830  000ED8  6E1A               	movwf	(___flge@ff1+3)^0,c
  2831  000EDA  C08A  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  2832  000EDE  C08B  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2833  000EE2  C08C  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2834  000EE6  C08D  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2835  000EEA  ECF2  F01B         	call	___flge	;wreg free
  2836  000EEE  B0D8               	btfsc	status,0,c
  2837  000EF0  EF7C  F007         	goto	u5881
  2838  000EF4  EF7E  F007         	goto	u5880
  2839  000EF8                     u5881:
  2840  000EF8  EFFA  F007         	goto	l5257
  2841  000EFC                     u5880:
  2842  000EFC  C08E  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2843  000F00  C08F  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2844  000F04  C090  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2845  000F08  C091  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2846  000F0C  0E48               	movlw	72
  2847  000F0E  6E1B               	movwf	___flge@ff2^0,c
  2848  000F10  0EE1               	movlw	225
  2849  000F12  6E1C               	movwf	(___flge@ff2+1)^0,c
  2850  000F14  0E7A               	movlw	122
  2851  000F16  6E1D               	movwf	(___flge@ff2+2)^0,c
  2852  000F18  0E3E               	movlw	62
  2853  000F1A  6E1E               	movwf	(___flge@ff2+3)^0,c
  2854  000F1C  ECF2  F01B         	call	___flge	;wreg free
  2855  000F20  B0D8               	btfsc	status,0,c
  2856  000F22  EF95  F007         	goto	u5891
  2857  000F26  EF97  F007         	goto	u5890
  2858  000F2A                     u5891:
  2859  000F2A  EFFA  F007         	goto	l5257
  2860  000F2E                     u5890:
  2861  000F2E  C092  F017         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2862  000F32  C093  F018         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2863  000F36  C094  F019         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2864  000F3A  C095  F01A         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2865  000F3E  0EEC               	movlw	236
  2866  000F40  6E1B               	movwf	___flge@ff2^0,c
  2867  000F42  0E51               	movlw	81
  2868  000F44  6E1C               	movwf	(___flge@ff2+1)^0,c
  2869  000F46  0E38               	movlw	56
  2870  000F48  6E1D               	movwf	(___flge@ff2+2)^0,c
  2871  000F4A  0E3E               	movlw	62
  2872  000F4C  6E1E               	movwf	(___flge@ff2+3)^0,c
  2873  000F4E  ECF2  F01B         	call	___flge	;wreg free
  2874  000F52  B0D8               	btfsc	status,0,c
  2875  000F54  EFAE  F007         	goto	u5901
  2876  000F58  EFB0  F007         	goto	u5900
  2877  000F5C                     u5901:
  2878  000F5C  EFFA  F007         	goto	l5257
  2879  000F60                     u5900:
  2880  000F60                     
  2881                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  2882  000F60  C082  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2883  000F64  C083  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2884  000F68  0E03               	movlw	3
  2885  000F6A  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  2886  000F6C  EC47  F01B         	call	_colourclick_readRGBC2	;wreg free
  2887                           
  2888                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  2889  000F70  C082  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2890  000F74  C083  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2891  000F78  0E8A               	movlw	low colourcards_readRGBC@rel
  2892  000F7A  0100               	movlb	0	; () banked
  2893  000F7C  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2894  000F7E  0E00               	movlw	high colourcards_readRGBC@rel
  2895  000F80  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2896  000F82  ECD7  F019         	call	_colourcards_normaliseRGBC	;wreg free
  2897  000F86                     
  2898                           ;colour_cards.c: 27:         if (rel.G<0.185) {
  2899  000F86  C08E  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2900  000F8A  C08F  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2901  000F8E  C090  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2902  000F92  C091  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2903  000F96  0EA4               	movlw	164
  2904  000F98  6E1B               	movwf	___flge@ff2^0,c
  2905  000F9A  0E70               	movlw	112
  2906  000F9C  6E1C               	movwf	(___flge@ff2+1)^0,c
  2907  000F9E  0E3D               	movlw	61
  2908  000FA0  6E1D               	movwf	(___flge@ff2+2)^0,c
  2909  000FA2  0E3E               	movlw	62
  2910  000FA4  6E1E               	movwf	(___flge@ff2+3)^0,c
  2911  000FA6  ECF2  F01B         	call	___flge	;wreg free
  2912  000FAA  B0D8               	btfsc	status,0,c
  2913  000FAC  EFDA  F007         	goto	u5911
  2914  000FB0  EFDC  F007         	goto	u5910
  2915  000FB4                     u5911:
  2916  000FB4  EFEB  F007         	goto	l5255
  2917  000FB8                     u5910:
  2918  000FB8                     
  2919                           ;colour_cards.c: 29:             instructions(mL, mR, 1);
  2920  000FB8  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  2921  000FBC  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  2922  000FC0  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  2923  000FC4  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  2924  000FC8  0E01               	movlw	1
  2925  000FCA  0100               	movlb	0	; () banked
  2926  000FCC  6F81               	movwf	instructions@num& (0+255),b
  2927  000FCE  EC7D  F010         	call	_instructions	;wreg free
  2928                           
  2929                           ;colour_cards.c: 30:         } else {
  2930  000FD2  EF37  F00A         	goto	l5323
  2931  000FD6                     l5255:
  2932                           
  2933                           ;colour_cards.c: 32:             instructions(mL, mR, 6);
  2934  000FD6  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  2935  000FDA  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  2936  000FDE  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  2937  000FE2  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  2938  000FE6  0E06               	movlw	6
  2939  000FE8  0100               	movlb	0	; () banked
  2940  000FEA  6F81               	movwf	instructions@num& (0+255),b
  2941  000FEC  EC7D  F010         	call	_instructions	;wreg free
  2942  000FF0  EF37  F00A         	goto	l5323
  2943  000FF4                     l5257:
  2944  000FF4  C08A  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  2945  000FF8  C08B  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2946  000FFC  C08C  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2947  001000  C08D  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2948  001004  0EAE               	movlw	174
  2949  001006  6E1B               	movwf	___flge@ff2^0,c
  2950  001008  0E47               	movlw	71
  2951  00100A  6E1C               	movwf	(___flge@ff2+1)^0,c
  2952  00100C  0EE1               	movlw	225
  2953  00100E  6E1D               	movwf	(___flge@ff2+2)^0,c
  2954  001010  0E3E               	movlw	62
  2955  001012  6E1E               	movwf	(___flge@ff2+3)^0,c
  2956  001014  ECF2  F01B         	call	___flge	;wreg free
  2957  001018  B0D8               	btfsc	status,0,c
  2958  00101A  EF11  F008         	goto	u5921
  2959  00101E  EF13  F008         	goto	u5920
  2960  001022                     u5921:
  2961  001022  EFCA  F008         	goto	l5277
  2962  001026                     u5920:
  2963  001026  0E9A               	movlw	154
  2964  001028  6E17               	movwf	___flge@ff1^0,c
  2965  00102A  0E99               	movlw	153
  2966  00102C  6E18               	movwf	(___flge@ff1+1)^0,c
  2967  00102E  0E99               	movlw	153
  2968  001030  6E19               	movwf	(___flge@ff1+2)^0,c
  2969  001032  0E3E               	movlw	62
  2970  001034  6E1A               	movwf	(___flge@ff1+3)^0,c
  2971  001036  C08E  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2972  00103A  C08F  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2973  00103E  C090  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2974  001042  C091  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2975  001046  ECF2  F01B         	call	___flge	;wreg free
  2976  00104A  B0D8               	btfsc	status,0,c
  2977  00104C  EF2A  F008         	goto	u5931
  2978  001050  EF2C  F008         	goto	u5930
  2979  001054                     u5931:
  2980  001054  EFCA  F008         	goto	l5277
  2981  001058                     u5930:
  2982  001058  0E14               	movlw	20
  2983  00105A  6E17               	movwf	___flge@ff1^0,c
  2984  00105C  0EAE               	movlw	174
  2985  00105E  6E18               	movwf	(___flge@ff1+1)^0,c
  2986  001060  0E47               	movlw	71
  2987  001062  6E19               	movwf	(___flge@ff1+2)^0,c
  2988  001064  0E3E               	movlw	62
  2989  001066  6E1A               	movwf	(___flge@ff1+3)^0,c
  2990  001068  C092  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2991  00106C  C093  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2992  001070  C094  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2993  001074  C095  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2994  001078  ECF2  F01B         	call	___flge	;wreg free
  2995  00107C  B0D8               	btfsc	status,0,c
  2996  00107E  EF43  F008         	goto	u5941
  2997  001082  EF45  F008         	goto	u5940
  2998  001086                     u5941:
  2999  001086  EFCA  F008         	goto	l5277
  3000  00108A                     u5940:
  3001  00108A                     
  3002                           ;colour_cards.c: 37:         colourclick_readRGBC2(abs, 1);
  3003  00108A  C082  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  3004  00108E  C083  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  3005  001092  0E01               	movlw	1
  3006  001094  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  3007  001096  EC47  F01B         	call	_colourclick_readRGBC2	;wreg free
  3008                           
  3009                           ;colour_cards.c: 38:         colourcards_normaliseRGBC(abs, &rel);
  3010  00109A  C082  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  3011  00109E  C083  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  3012  0010A2  0E8A               	movlw	low colourcards_readRGBC@rel
  3013  0010A4  0100               	movlb	0	; () banked
  3014  0010A6  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  3015  0010A8  0E00               	movlw	high colourcards_readRGBC@rel
  3016  0010AA  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  3017  0010AC  ECD7  F019         	call	_colourcards_normaliseRGBC	;wreg free
  3018  0010B0                     
  3019                           ;colour_cards.c: 39:         if (rel.B<0.125) {
  3020  0010B0  C092  F017         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  3021  0010B4  C093  F018         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  3022  0010B8  C094  F019         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  3023  0010BC  C095  F01A         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  3024  0010C0  0E00               	movlw	0
  3025  0010C2  6E1B               	movwf	___flge@ff2^0,c
  3026  0010C4  0E00               	movlw	0
  3027  0010C6  6E1C               	movwf	(___flge@ff2+1)^0,c
  3028  0010C8  0E00               	movlw	0
  3029  0010CA  6E1D               	movwf	(___flge@ff2+2)^0,c
  3030  0010CC  0E3E               	movlw	62
  3031  0010CE  6E1E               	movwf	(___flge@ff2+3)^0,c
  3032  0010D0  ECF2  F01B         	call	___flge	;wreg free
  3033  0010D4  B0D8               	btfsc	status,0,c
  3034  0010D6  EF6F  F008         	goto	u5951
  3035  0010DA  EF71  F008         	goto	u5950
  3036  0010DE                     u5951:
  3037  0010DE  EF80  F008         	goto	l5269
  3038  0010E2                     u5950:
  3039  0010E2                     
  3040                           ;colour_cards.c: 41:             instructions(mL, mR, 2);
  3041  0010E2  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3042  0010E6  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3043  0010EA  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3044  0010EE  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3045  0010F2  0E02               	movlw	2
  3046  0010F4  0100               	movlb	0	; () banked
  3047  0010F6  6F81               	movwf	instructions@num& (0+255),b
  3048  0010F8  EC7D  F010         	call	_instructions	;wreg free
  3049                           
  3050                           ;colour_cards.c: 42:         } else {
  3051  0010FC  EF37  F00A         	goto	l5323
  3052  001100                     l5269:
  3053                           
  3054                           ;colour_cards.c: 43:             colourclick_readRGBC2(abs, 2);
  3055  001100  C082  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  3056  001104  C083  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  3057  001108  0E02               	movlw	2
  3058  00110A  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  3059  00110C  EC47  F01B         	call	_colourclick_readRGBC2	;wreg free
  3060                           
  3061                           ;colour_cards.c: 44:             colourcards_normaliseRGBC(abs, &rel);
  3062  001110  C082  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  3063  001114  C083  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  3064  001118  0E8A               	movlw	low colourcards_readRGBC@rel
  3065  00111A  0100               	movlb	0	; () banked
  3066  00111C  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  3067  00111E  0E00               	movlw	high colourcards_readRGBC@rel
  3068  001120  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  3069  001122  ECD7  F019         	call	_colourcards_normaliseRGBC	;wreg free
  3070  001126                     
  3071                           ;colour_cards.c: 45:             if (rel.R<0.115) {
  3072  001126  C08A  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  3073  00112A  C08B  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  3074  00112E  C08C  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  3075  001132  C08D  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  3076  001136  0E1F               	movlw	31
  3077  001138  6E1B               	movwf	___flge@ff2^0,c
  3078  00113A  0E85               	movlw	133
  3079  00113C  6E1C               	movwf	(___flge@ff2+1)^0,c
  3080  00113E  0EEB               	movlw	235
  3081  001140  6E1D               	movwf	(___flge@ff2+2)^0,c
  3082  001142  0E3D               	movlw	61
  3083  001144  6E1E               	movwf	(___flge@ff2+3)^0,c
  3084  001146  ECF2  F01B         	call	___flge	;wreg free
  3085  00114A  B0D8               	btfsc	status,0,c
  3086  00114C  EFAA  F008         	goto	u5961
  3087  001150  EFAC  F008         	goto	u5960
  3088  001154                     u5961:
  3089  001154  EFBB  F008         	goto	l5275
  3090  001158                     u5960:
  3091  001158                     
  3092                           ;colour_cards.c: 47:                 instructions(mL, mR, 3);
  3093  001158  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3094  00115C  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3095  001160  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3096  001164  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3097  001168  0E03               	movlw	3
  3098  00116A  0100               	movlb	0	; () banked
  3099  00116C  6F81               	movwf	instructions@num& (0+255),b
  3100  00116E  EC7D  F010         	call	_instructions	;wreg free
  3101                           
  3102                           ;colour_cards.c: 48:             } else {
  3103  001172  EF37  F00A         	goto	l5323
  3104  001176                     l5275:
  3105                           
  3106                           ;colour_cards.c: 50:                 instructions(mL, mR, 7);
  3107  001176  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3108  00117A  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3109  00117E  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3110  001182  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3111  001186  0E07               	movlw	7
  3112  001188  0100               	movlb	0	; () banked
  3113  00118A  6F81               	movwf	instructions@num& (0+255),b
  3114  00118C  EC7D  F010         	call	_instructions	;wreg free
  3115  001190  EF37  F00A         	goto	l5323
  3116  001194                     l5277:
  3117  001194  0E48               	movlw	72
  3118  001196  6E17               	movwf	___flge@ff1^0,c
  3119  001198  0EE1               	movlw	225
  3120  00119A  6E18               	movwf	(___flge@ff1+1)^0,c
  3121  00119C  0EFA               	movlw	250
  3122  00119E  6E19               	movwf	(___flge@ff1+2)^0,c
  3123  0011A0  0E3E               	movlw	62
  3124  0011A2  6E1A               	movwf	(___flge@ff1+3)^0,c
  3125  0011A4  C08A  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  3126  0011A8  C08B  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  3127  0011AC  C08C  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  3128  0011B0  C08D  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  3129  0011B4  ECF2  F01B         	call	___flge	;wreg free
  3130  0011B8  B0D8               	btfsc	status,0,c
  3131  0011BA  EFE1  F008         	goto	u5971
  3132  0011BE  EFE3  F008         	goto	u5970
  3133  0011C2                     u5971:
  3134  0011C2  EF24  F009         	goto	l5285
  3135  0011C6                     u5970:
  3136  0011C6  0E85               	movlw	133
  3137  0011C8  6E17               	movwf	___flge@ff1^0,c
  3138  0011CA  0EEB               	movlw	235
  3139  0011CC  6E18               	movwf	(___flge@ff1+1)^0,c
  3140  0011CE  0E91               	movlw	145
  3141  0011D0  6E19               	movwf	(___flge@ff1+2)^0,c
  3142  0011D2  0E3E               	movlw	62
  3143  0011D4  6E1A               	movwf	(___flge@ff1+3)^0,c
  3144  0011D6  C08E  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  3145  0011DA  C08F  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  3146  0011DE  C090  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  3147  0011E2  C091  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  3148  0011E6  ECF2  F01B         	call	___flge	;wreg free
  3149  0011EA  B0D8               	btfsc	status,0,c
  3150  0011EC  EFFA  F008         	goto	u5981
  3151  0011F0  EFFC  F008         	goto	u5980
  3152  0011F4                     u5981:
  3153  0011F4  EF24  F009         	goto	l5285
  3154  0011F8                     u5980:
  3155  0011F8  0EEC               	movlw	236
  3156  0011FA  6E17               	movwf	___flge@ff1^0,c
  3157  0011FC  0E51               	movlw	81
  3158  0011FE  6E18               	movwf	(___flge@ff1+1)^0,c
  3159  001200  0E38               	movlw	56
  3160  001202  6E19               	movwf	(___flge@ff1+2)^0,c
  3161  001204  0E3E               	movlw	62
  3162  001206  6E1A               	movwf	(___flge@ff1+3)^0,c
  3163  001208  C092  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3164  00120C  C093  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3165  001210  C094  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3166  001214  C095  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3167  001218  ECF2  F01B         	call	___flge	;wreg free
  3168  00121C  B0D8               	btfsc	status,0,c
  3169  00121E  EF13  F009         	goto	u5991
  3170  001222  EF15  F009         	goto	u5990
  3171  001226                     u5991:
  3172  001226  EF24  F009         	goto	l5285
  3173  00122A                     u5990:
  3174  00122A                     
  3175                           ;colour_cards.c: 56:         instructions(mL, mR, 4);
  3176  00122A  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3177  00122E  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3178  001232  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3179  001236  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3180  00123A  0E04               	movlw	4
  3181  00123C  0100               	movlb	0	; () banked
  3182  00123E  6F81               	movwf	instructions@num& (0+255),b
  3183  001240  EC7D  F010         	call	_instructions	;wreg free
  3184                           
  3185                           ;colour_cards.c: 58:     } else if ((rel.R>0.49) && (rel.G<0.275) && (rel.B>0.195)) {
  3186  001244  EF37  F00A         	goto	l5323
  3187  001248                     l5285:
  3188  001248  0E48               	movlw	72
  3189  00124A  6E17               	movwf	___flge@ff1^0,c
  3190  00124C  0EE1               	movlw	225
  3191  00124E  6E18               	movwf	(___flge@ff1+1)^0,c
  3192  001250  0EFA               	movlw	250
  3193  001252  6E19               	movwf	(___flge@ff1+2)^0,c
  3194  001254  0E3E               	movlw	62
  3195  001256  6E1A               	movwf	(___flge@ff1+3)^0,c
  3196  001258  C08A  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  3197  00125C  C08B  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  3198  001260  C08C  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  3199  001264  C08D  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  3200  001268  ECF2  F01B         	call	___flge	;wreg free
  3201  00126C  B0D8               	btfsc	status,0,c
  3202  00126E  EF3B  F009         	goto	u6001
  3203  001272  EF3D  F009         	goto	u6000
  3204  001276                     u6001:
  3205  001276  EF7E  F009         	goto	l5293
  3206  00127A                     u6000:
  3207  00127A  C08E  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  3208  00127E  C08F  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  3209  001282  C090  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  3210  001286  C091  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  3211  00128A  0ECD               	movlw	205
  3212  00128C  6E1B               	movwf	___flge@ff2^0,c
  3213  00128E  0ECC               	movlw	204
  3214  001290  6E1C               	movwf	(___flge@ff2+1)^0,c
  3215  001292  0E8C               	movlw	140
  3216  001294  6E1D               	movwf	(___flge@ff2+2)^0,c
  3217  001296  0E3E               	movlw	62
  3218  001298  6E1E               	movwf	(___flge@ff2+3)^0,c
  3219  00129A  ECF2  F01B         	call	___flge	;wreg free
  3220  00129E  B0D8               	btfsc	status,0,c
  3221  0012A0  EF54  F009         	goto	u6011
  3222  0012A4  EF56  F009         	goto	u6010
  3223  0012A8                     u6011:
  3224  0012A8  EF7E  F009         	goto	l5293
  3225  0012AC                     u6010:
  3226  0012AC  0E14               	movlw	20
  3227  0012AE  6E17               	movwf	___flge@ff1^0,c
  3228  0012B0  0EAE               	movlw	174
  3229  0012B2  6E18               	movwf	(___flge@ff1+1)^0,c
  3230  0012B4  0E47               	movlw	71
  3231  0012B6  6E19               	movwf	(___flge@ff1+2)^0,c
  3232  0012B8  0E3E               	movlw	62
  3233  0012BA  6E1A               	movwf	(___flge@ff1+3)^0,c
  3234  0012BC  C092  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3235  0012C0  C093  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3236  0012C4  C094  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3237  0012C8  C095  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3238  0012CC  ECF2  F01B         	call	___flge	;wreg free
  3239  0012D0  B0D8               	btfsc	status,0,c
  3240  0012D2  EF6D  F009         	goto	u6021
  3241  0012D6  EF6F  F009         	goto	u6020
  3242  0012DA                     u6021:
  3243  0012DA  EF7E  F009         	goto	l5293
  3244  0012DE                     u6020:
  3245  0012DE                     
  3246                           ;colour_cards.c: 60:         instructions(mL, mR, 5);
  3247  0012DE  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3248  0012E2  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3249  0012E6  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3250  0012EA  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3251  0012EE  0E05               	movlw	5
  3252  0012F0  0100               	movlb	0	; () banked
  3253  0012F2  6F81               	movwf	instructions@num& (0+255),b
  3254  0012F4  EC7D  F010         	call	_instructions	;wreg free
  3255                           
  3256                           ;colour_cards.c: 62:     } else if ((rel.R<0.47) && (rel.G>0.295) && (rel.B>0.21)) {
  3257  0012F8  EF37  F00A         	goto	l5323
  3258  0012FC                     l5293:
  3259  0012FC  C08A  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  3260  001300  C08B  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  3261  001304  C08C  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  3262  001308  C08D  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  3263  00130C  0ED7               	movlw	215
  3264  00130E  6E1B               	movwf	___flge@ff2^0,c
  3265  001310  0EA3               	movlw	163
  3266  001312  6E1C               	movwf	(___flge@ff2+1)^0,c
  3267  001314  0EF0               	movlw	240
  3268  001316  6E1D               	movwf	(___flge@ff2+2)^0,c
  3269  001318  0E3E               	movlw	62
  3270  00131A  6E1E               	movwf	(___flge@ff2+3)^0,c
  3271  00131C  ECF2  F01B         	call	___flge	;wreg free
  3272  001320  B0D8               	btfsc	status,0,c
  3273  001322  EF95  F009         	goto	u6031
  3274  001326  EF97  F009         	goto	u6030
  3275  00132A                     u6031:
  3276  00132A  EFD0  F009         	goto	l5301
  3277  00132E                     u6030:
  3278  00132E  0E3D               	movlw	61
  3279  001330  6E17               	movwf	___flge@ff1^0,c
  3280  001332  0E0A               	movlw	10
  3281  001334  6E18               	movwf	(___flge@ff1+1)^0,c
  3282  001336  0E97               	movlw	151
  3283  001338  6E19               	movwf	(___flge@ff1+2)^0,c
  3284  00133A  0E3E               	movlw	62
  3285  00133C  6E1A               	movwf	(___flge@ff1+3)^0,c
  3286  00133E  C08E  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  3287  001342  C08F  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  3288  001346  C090  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  3289  00134A  C091  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  3290  00134E  ECF2  F01B         	call	___flge	;wreg free
  3291  001352  B0D8               	btfsc	status,0,c
  3292  001354  EFAE  F009         	goto	u6041
  3293  001358  EFB0  F009         	goto	u6040
  3294  00135C                     u6041:
  3295  00135C  EFD0  F009         	goto	l5301
  3296  001360                     u6040:
  3297  001360  0E3D               	movlw	61
  3298  001362  6E17               	movwf	___flge@ff1^0,c
  3299  001364  0E0A               	movlw	10
  3300  001366  6E18               	movwf	(___flge@ff1+1)^0,c
  3301  001368  0E57               	movlw	87
  3302  00136A  6E19               	movwf	(___flge@ff1+2)^0,c
  3303  00136C  0E3E               	movlw	62
  3304  00136E  6E1A               	movwf	(___flge@ff1+3)^0,c
  3305  001370  C092  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3306  001374  C093  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3307  001378  C094  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3308  00137C  C095  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3309  001380  ECF2  F01B         	call	___flge	;wreg free
  3310  001384  B0D8               	btfsc	status,0,c
  3311  001386  EFC7  F009         	goto	u6051
  3312  00138A  EFC9  F009         	goto	u6050
  3313  00138E                     u6051:
  3314  00138E  EFD0  F009         	goto	l5301
  3315  001392                     u6050:
  3316  001392                     
  3317                           ;colour_cards.c: 64:         unknowncard_flag = 0;
  3318  001392  0E00               	movlw	0
  3319  001394  0100               	movlb	0	; () banked
  3320  001396  6FDE               	movwf	_unknowncard_flag& (0+255),b	;volatile
  3321                           
  3322                           ;colour_cards.c: 65:         returnhome_flag = 1;
  3323  001398  0E01               	movlw	1
  3324  00139A  6FDD               	movwf	_returnhome_flag& (0+255),b	;volatile
  3325                           
  3326                           ;colour_cards.c: 67:     } else {
  3327  00139C  EF37  F00A         	goto	l5323
  3328  0013A0                     l5301:
  3329                           
  3330                           ;colour_cards.c: 69:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3331  0013A0  0E52               	movlw	82
  3332  0013A2  0100               	movlb	0	; () banked
  3333  0013A4  6F89               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  3334  0013A6  0E2B               	movlw	43
  3335  0013A8  6F88               	movwf	??_colourcards_readRGBC& (0+255),b
  3336  0013AA  0E00               	movlw	0
  3337  0013AC                     u6807:
  3338  0013AC  2EE8               	decfsz	wreg,f,c
  3339  0013AE  D7FE               	bra	u6807
  3340  0013B0  2F88               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  3341  0013B2  D7FC               	bra	u6807
  3342  0013B4  2F89               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  3343  0013B6  D7FA               	bra	u6807
  3344  0013B8  F000               	nop	
  3345  0013BA                     
  3346                           ;colour_cards.c: 70:         forward(mL, mR);
  3347  0013BA  C084  F022         	movff	colourcards_readRGBC@mL,forward@mL
  3348  0013BE  C085  F023         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  3349  0013C2  C086  F024         	movff	colourcards_readRGBC@mR,forward@mR
  3350  0013C6  C087  F025         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  3351  0013CA  ECB6  F01E         	call	_forward	;wreg free
  3352  0013CE                     
  3353                           ;colour_cards.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3354  0013CE  0ED0               	movlw	208
  3355  0013D0  0100               	movlb	0	; () banked
  3356  0013D2  6F88               	movwf	??_colourcards_readRGBC& (0+255),b
  3357  0013D4  0EC9               	movlw	201
  3358  0013D6                     u6817:
  3359  0013D6  2EE8               	decfsz	wreg,f,c
  3360  0013D8  D7FE               	bra	u6817
  3361  0013DA  2F88               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  3362  0013DC  D7FC               	bra	u6817
  3363  0013DE  D000               	nop2	
  3364                           
  3365                           ;colour_cards.c: 72:         stop(mL, mR);
  3366  0013E0  C084  F022         	movff	colourcards_readRGBC@mL,stop@mL
  3367  0013E4  C085  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  3368  0013E8  C086  F024         	movff	colourcards_readRGBC@mR,stop@mR
  3369  0013EC  C087  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  3370  0013F0  ECFD  F01E         	call	_stop	;wreg free
  3371  0013F4                     
  3372                           ;colour_cards.c: 73:         colourclick_readRGBC(abs);
  3373  0013F4  C082  F014         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  3374  0013F8  C083  F015         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  3375  0013FC  EC71  F01F         	call	_colourclick_readRGBC	;wreg free
  3376  001400                     
  3377                           ;colour_cards.c: 74:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrupt
      +                          s_upperbound)) {
  3378  001400  0100               	movlb	0	; () banked
  3379  001402  EE20 F006          	lfsr	2,6
  3380  001406  5182               	movf	colourcards_readRGBC@abs& (0+255),w,b
  3381  001408  26D9               	addwf	fsr2l,f,c
  3382  00140A  5183               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  3383  00140C  22DA               	addwfc	fsr2h,f,c
  3384  00140E  5055               	movf	_interrupts_lowerbound^0,w,c	;volatile
  3385  001410  5CDE               	subwf	postinc2,w,c
  3386  001412  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  3387  001414  58DE               	subwfb	postinc2,w,c
  3388  001416  A0D8               	btfss	status,0,c
  3389  001418  EF10  F00A         	goto	u6061
  3390  00141C  EF12  F00A         	goto	u6060
  3391  001420                     u6061:
  3392  001420  EF23  F00A         	goto	l5313
  3393  001424                     u6060:
  3394  001424                     
  3395                           ; BSR set to: 0
  3396  001424  EE20 F006          	lfsr	2,6
  3397  001428  5182               	movf	colourcards_readRGBC@abs& (0+255),w,b
  3398  00142A  26D9               	addwf	fsr2l,f,c
  3399  00142C  5183               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  3400  00142E  22DA               	addwfc	fsr2h,f,c
  3401  001430  50DE               	movf	postinc2,w,c
  3402  001432  5C53               	subwf	_interrupts_upperbound^0,w,c	;volatile
  3403  001434  50DE               	movf	postinc2,w,c
  3404  001436  5854               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  3405  001438  B0D8               	btfsc	status,0,c
  3406  00143A  EF21  F00A         	goto	u6071
  3407  00143E  EF23  F00A         	goto	u6070
  3408  001442                     u6071:
  3409  001442  EF35  F00A         	goto	l5321
  3410  001446                     u6070:
  3411  001446                     l5313:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;colour_cards.c: 75:             if (unknowncard_flag<3) {
  3415  001446  0E03               	movlw	3
  3416  001448  61DE               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  3417  00144A  EF29  F00A         	goto	u6081
  3418  00144E  EF2B  F00A         	goto	u6080
  3419  001452                     u6081:
  3420  001452  EF30  F00A         	goto	l257
  3421  001456                     u6080:
  3422  001456                     
  3423                           ; BSR set to: 0
  3424                           ;colour_cards.c: 76:                 unknowncard_flag++;
  3425  001456  2BDE               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  3426  001458                     
  3427                           ; BSR set to: 0
  3428                           ;colour_cards.c: 77:                 PIR0bits.INT1IF = 1;
  3429  001458  010E               	movlb	14	; () banked
  3430  00145A  8333               	bsf	51,1,b	;volatile
  3431                           
  3432                           ;colour_cards.c: 78:             } else {
  3433  00145C  EF37  F00A         	goto	l5323
  3434  001460                     l257:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;colour_cards.c: 79:                 LATHbits.LATH3 = 1;
  3438  001460  8680               	bsf	128,3,c	;volatile
  3439  001462                     
  3440                           ; BSR set to: 0
  3441                           ;colour_cards.c: 80:                 returnhome_flag = 1;
  3442  001462  0E01               	movlw	1
  3443  001464  6FDD               	movwf	_returnhome_flag& (0+255),b	;volatile
  3444  001466  EF37  F00A         	goto	l5323
  3445  00146A                     l5321:
  3446                           
  3447                           ; BSR set to: 0
  3448  00146A  0E00               	movlw	0
  3449  00146C  6FDE               	movwf	_unknowncard_flag& (0+255),b	;volatile
  3450  00146E                     l5323:
  3451                           
  3452                           ;colour_cards.c: 86:     PIE0bits.INT1IE = 1;
  3453  00146E  010E               	movlb	14	; () banked
  3454  001470  8329               	bsf	41,1,b	;volatile
  3455  001472                     
  3456                           ; BSR set to: 14
  3457  001472  0012               	return		;funcret
  3458  001474                     __end_of_colourcards_readRGBC:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _instructions *****************
  3462 ;; Defined at:
  3463 ;;		line 226 in file "DC_motors.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  mL              2   29[BANK0 ] PTR struct .
  3466 ;;		 -> main@motorL(9), 
  3467 ;;  mR              2   31[BANK0 ] PTR struct .
  3468 ;;		 -> main@motorR(9), 
  3469 ;;  num             1   33[BANK0 ] unsigned char 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3481 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;Total ram usage:        7 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 11
  3488 ;; This function calls:
  3489 ;;		_clearance
  3490 ;;		_reverse
  3491 ;;		_stop
  3492 ;;		_turnleft
  3493 ;;		_turnright
  3494 ;; This function is called by:
  3495 ;;		_colourcards_readRGBC
  3496 ;;		_reverseinstructions
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text13
  3501  0020FA                     __ptext13:
  3502                           	callstack 0
  3503  0020FA                     _instructions:
  3504                           	callstack 17
  3505  0020FA                     
  3506                           ;DC_motors.c: 227:     if (returnhome_flag==0) {
  3507  0020FA  0100               	movlb	0	; () banked
  3508  0020FC  51DD               	movf	_returnhome_flag& (0+255),w,b	;volatile
  3509  0020FE  A4D8               	btfss	status,2,c
  3510  002100  EF84  F010         	goto	u5601
  3511  002104  EF86  F010         	goto	u5600
  3512  002108                     u5601:
  3513  002108  EF98  F010         	goto	l5059
  3514  00210C                     u5600:
  3515  00210C                     
  3516                           ; BSR set to: 0
  3517                           ;DC_motors.c: 228:         unknowncard_flag = 0;
  3518  00210C  0E00               	movlw	0
  3519  00210E  6FDE               	movwf	_unknowncard_flag& (0+255),b	;volatile
  3520  002110                     
  3521                           ; BSR set to: 0
  3522                           ;DC_motors.c: 229:         instr[instr_counter] = num;
  3523  002110  5181               	movf	instructions@num& (0+255),w,b
  3524  002112  6E4D               	movwf	??_instructions^0,c
  3525  002114  6A4E               	clrf	(??_instructions+1)^0,c
  3526  002116  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  3527  002118  0D02               	mullw	2
  3528  00211A  0EB3               	movlw	low _instr
  3529  00211C  24F3               	addwf	243,w,c
  3530  00211E  6ED9               	movwf	fsr2l,c
  3531  002120  0E00               	movlw	high _instr
  3532  002122  20F4               	addwfc	prodh,w,c
  3533  002124  6EDA               	movwf	fsr2h,c
  3534  002126  C04D  FFDE         	movff	??_instructions,postinc2
  3535  00212A  C04E  FFDD         	movff	??_instructions+1,postdec2
  3536  00212E                     
  3537                           ; BSR set to: 0
  3538                           ;DC_motors.c: 230:         instr_counter++;
  3539  00212E  2BE1               	incf	_instr_counter& (0+255),f,b	;volatile
  3540  002130                     l5059:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;DC_motors.c: 233:     if (num==1) {
  3544  002130  0581               	decf	instructions@num& (0+255),w,b
  3545  002132  A4D8               	btfss	status,2,c
  3546  002134  EF9E  F010         	goto	u5611
  3547  002138  EFA0  F010         	goto	u5610
  3548  00213C                     u5611:
  3549  00213C  EFC5  F010         	goto	l5063
  3550  002140                     u5610:
  3551  002140                     
  3552                           ; BSR set to: 0
  3553                           ;DC_motors.c: 235:         clearance(mL, mR);
  3554  002140  C07D  F028         	movff	instructions@mL,clearance@mL
  3555  002144  C07E  F029         	movff	instructions@mL+1,clearance@mL+1
  3556  002148  C07F  F02A         	movff	instructions@mR,clearance@mR
  3557  00214C  C080  F02B         	movff	instructions@mR+1,clearance@mR+1
  3558  002150  EC42  F01F         	call	_clearance	;wreg free
  3559                           
  3560                           ;DC_motors.c: 236:         turnright(mL, mR, 90);
  3561  002154  C07D  F06D         	movff	instructions@mL,turnright@mL
  3562  002158  C07E  F06E         	movff	instructions@mL+1,turnright@mL+1
  3563  00215C  C07F  F06F         	movff	instructions@mR,turnright@mR
  3564  002160  C080  F070         	movff	instructions@mR+1,turnright@mR+1
  3565  002164  0E00               	movlw	0
  3566  002166  0100               	movlb	0	; () banked
  3567  002168  6F72               	movwf	(turnright@deg+1)& (0+255),b
  3568  00216A  0E5A               	movlw	90
  3569  00216C  6F71               	movwf	turnright@deg& (0+255),b
  3570  00216E  EC0D  F016         	call	_turnright	;wreg free
  3571                           
  3572                           ;DC_motors.c: 237:         stop(mL, mR);
  3573  002172  C07D  F022         	movff	instructions@mL,stop@mL
  3574  002176  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3575  00217A  C07F  F024         	movff	instructions@mR,stop@mR
  3576  00217E  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3577  002182  ECFD  F01E         	call	_stop	;wreg free
  3578                           
  3579                           ;DC_motors.c: 238:     } else if (num==2) {
  3580  002186  EF13  F012         	goto	l702
  3581  00218A                     l5063:
  3582                           
  3583                           ; BSR set to: 0
  3584  00218A  0E02               	movlw	2
  3585  00218C  1981               	xorwf	instructions@num& (0+255),w,b
  3586  00218E  A4D8               	btfss	status,2,c
  3587  002190  EFCC  F010         	goto	u5621
  3588  002194  EFCE  F010         	goto	u5620
  3589  002198                     u5621:
  3590  002198  EFF3  F010         	goto	l5067
  3591  00219C                     u5620:
  3592  00219C                     
  3593                           ; BSR set to: 0
  3594                           ;DC_motors.c: 240:         clearance(mL, mR);
  3595  00219C  C07D  F028         	movff	instructions@mL,clearance@mL
  3596  0021A0  C07E  F029         	movff	instructions@mL+1,clearance@mL+1
  3597  0021A4  C07F  F02A         	movff	instructions@mR,clearance@mR
  3598  0021A8  C080  F02B         	movff	instructions@mR+1,clearance@mR+1
  3599  0021AC  EC42  F01F         	call	_clearance	;wreg free
  3600                           
  3601                           ;DC_motors.c: 241:         turnleft(mL, mR, 90);
  3602  0021B0  C07D  F06D         	movff	instructions@mL,turnleft@mL
  3603  0021B4  C07E  F06E         	movff	instructions@mL+1,turnleft@mL+1
  3604  0021B8  C07F  F06F         	movff	instructions@mR,turnleft@mR
  3605  0021BC  C080  F070         	movff	instructions@mR+1,turnleft@mR+1
  3606  0021C0  0E00               	movlw	0
  3607  0021C2  0100               	movlb	0	; () banked
  3608  0021C4  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  3609  0021C6  0E5A               	movlw	90
  3610  0021C8  6F71               	movwf	turnleft@deg& (0+255),b
  3611  0021CA  EC10  F017         	call	_turnleft	;wreg free
  3612                           
  3613                           ;DC_motors.c: 242:         stop(mL, mR);
  3614  0021CE  C07D  F022         	movff	instructions@mL,stop@mL
  3615  0021D2  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3616  0021D6  C07F  F024         	movff	instructions@mR,stop@mR
  3617  0021DA  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3618  0021DE  ECFD  F01E         	call	_stop	;wreg free
  3619                           
  3620                           ;DC_motors.c: 243:     } else if (num==3) {
  3621  0021E2  EF13  F012         	goto	l702
  3622  0021E6                     l5067:
  3623                           
  3624                           ; BSR set to: 0
  3625  0021E6  0E03               	movlw	3
  3626  0021E8  1981               	xorwf	instructions@num& (0+255),w,b
  3627  0021EA  A4D8               	btfss	status,2,c
  3628  0021EC  EFFA  F010         	goto	u5631
  3629  0021F0  EFFC  F010         	goto	u5630
  3630  0021F4                     u5631:
  3631  0021F4  EF21  F011         	goto	l5071
  3632  0021F8                     u5630:
  3633  0021F8                     
  3634                           ; BSR set to: 0
  3635                           ;DC_motors.c: 245:         clearance(mL, mR);
  3636  0021F8  C07D  F028         	movff	instructions@mL,clearance@mL
  3637  0021FC  C07E  F029         	movff	instructions@mL+1,clearance@mL+1
  3638  002200  C07F  F02A         	movff	instructions@mR,clearance@mR
  3639  002204  C080  F02B         	movff	instructions@mR+1,clearance@mR+1
  3640  002208  EC42  F01F         	call	_clearance	;wreg free
  3641                           
  3642                           ;DC_motors.c: 246:         turnright(mL, mR, 180);
  3643  00220C  C07D  F06D         	movff	instructions@mL,turnright@mL
  3644  002210  C07E  F06E         	movff	instructions@mL+1,turnright@mL+1
  3645  002214  C07F  F06F         	movff	instructions@mR,turnright@mR
  3646  002218  C080  F070         	movff	instructions@mR+1,turnright@mR+1
  3647  00221C  0E00               	movlw	0
  3648  00221E  0100               	movlb	0	; () banked
  3649  002220  6F72               	movwf	(turnright@deg+1)& (0+255),b
  3650  002222  0EB4               	movlw	180
  3651  002224  6F71               	movwf	turnright@deg& (0+255),b
  3652  002226  EC0D  F016         	call	_turnright	;wreg free
  3653                           
  3654                           ;DC_motors.c: 247:         stop(mL, mR);
  3655  00222A  C07D  F022         	movff	instructions@mL,stop@mL
  3656  00222E  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3657  002232  C07F  F024         	movff	instructions@mR,stop@mR
  3658  002236  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3659  00223A  ECFD  F01E         	call	_stop	;wreg free
  3660                           
  3661                           ;DC_motors.c: 248:     } else if (num==4) {
  3662  00223E  EF13  F012         	goto	l702
  3663  002242                     l5071:
  3664                           
  3665                           ; BSR set to: 0
  3666  002242  0E04               	movlw	4
  3667  002244  1981               	xorwf	instructions@num& (0+255),w,b
  3668  002246  A4D8               	btfss	status,2,c
  3669  002248  EF28  F011         	goto	u5641
  3670  00224C  EF2A  F011         	goto	u5640
  3671  002250                     u5641:
  3672  002250  EF71  F011         	goto	l5083
  3673  002254                     u5640:
  3674  002254                     
  3675                           ; BSR set to: 0
  3676                           ;DC_motors.c: 250:         reverse(mL, mR);
  3677  002254  C07D  F022         	movff	instructions@mL,reverse@mL
  3678  002258  C07E  F023         	movff	instructions@mL+1,reverse@mL+1
  3679  00225C  C07F  F024         	movff	instructions@mR,reverse@mR
  3680  002260  C080  F025         	movff	instructions@mR+1,reverse@mR+1
  3681  002264  EC6F  F01E         	call	_reverse	;wreg free
  3682  002268                     
  3683                           ;DC_motors.c: 251:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  3684  002268  0E72               	movlw	114
  3685  00226A  6E4E               	movwf	(??_instructions+1)^0,c
  3686  00226C  0EA3               	movlw	163
  3687  00226E  6E4D               	movwf	??_instructions^0,c
  3688  002270  0E9B               	movlw	155
  3689  002272                     u6827:
  3690  002272  2EE8               	decfsz	wreg,f,c
  3691  002274  D7FE               	bra	u6827
  3692  002276  2E4D               	decfsz	??_instructions^0,f,c
  3693  002278  D7FC               	bra	u6827
  3694  00227A  2E4E               	decfsz	(??_instructions+1)^0,f,c
  3695  00227C  D7FA               	bra	u6827
  3696  00227E  F000               	nop	
  3697  002280                     
  3698                           ;DC_motors.c: 252:         stop(mL, mR);
  3699  002280  C07D  F022         	movff	instructions@mL,stop@mL
  3700  002284  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3701  002288  C07F  F024         	movff	instructions@mR,stop@mR
  3702  00228C  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3703  002290  ECFD  F01E         	call	_stop	;wreg free
  3704                           
  3705                           ;DC_motors.c: 253:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3706  002294  0E09               	movlw	9
  3707  002296  6E4E               	movwf	(??_instructions+1)^0,c
  3708  002298  0E1E               	movlw	30
  3709  00229A  6E4D               	movwf	??_instructions^0,c
  3710  00229C  0EE4               	movlw	228
  3711  00229E                     u6837:
  3712  00229E  2EE8               	decfsz	wreg,f,c
  3713  0022A0  D7FE               	bra	u6837
  3714  0022A2  2E4D               	decfsz	??_instructions^0,f,c
  3715  0022A4  D7FC               	bra	u6837
  3716  0022A6  2E4E               	decfsz	(??_instructions+1)^0,f,c
  3717  0022A8  D7FA               	bra	u6837
  3718  0022AA  D000               	nop2	
  3719  0022AC                     
  3720                           ;DC_motors.c: 254:         turnright(mL, mR, 90);
  3721  0022AC  C07D  F06D         	movff	instructions@mL,turnright@mL
  3722  0022B0  C07E  F06E         	movff	instructions@mL+1,turnright@mL+1
  3723  0022B4  C07F  F06F         	movff	instructions@mR,turnright@mR
  3724  0022B8  C080  F070         	movff	instructions@mR+1,turnright@mR+1
  3725  0022BC  0E00               	movlw	0
  3726  0022BE  0100               	movlb	0	; () banked
  3727  0022C0  6F72               	movwf	(turnright@deg+1)& (0+255),b
  3728  0022C2  0E5A               	movlw	90
  3729  0022C4  6F71               	movwf	turnright@deg& (0+255),b
  3730  0022C6  EC0D  F016         	call	_turnright	;wreg free
  3731  0022CA                     l5081:
  3732                           
  3733                           ;DC_motors.c: 255:         stop(mL, mR);
  3734  0022CA  C07D  F022         	movff	instructions@mL,stop@mL
  3735  0022CE  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3736  0022D2  C07F  F024         	movff	instructions@mR,stop@mR
  3737  0022D6  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3738  0022DA  ECFD  F01E         	call	_stop	;wreg free
  3739                           
  3740                           ;DC_motors.c: 256:     } else if (num==5) {
  3741  0022DE  EF13  F012         	goto	l702
  3742  0022E2                     l5083:
  3743                           
  3744                           ; BSR set to: 0
  3745  0022E2  0E05               	movlw	5
  3746  0022E4  1981               	xorwf	instructions@num& (0+255),w,b
  3747  0022E6  A4D8               	btfss	status,2,c
  3748  0022E8  EF78  F011         	goto	u5651
  3749  0022EC  EF7A  F011         	goto	u5650
  3750  0022F0                     u5651:
  3751  0022F0  EFB7  F011         	goto	l5095
  3752  0022F4                     u5650:
  3753  0022F4                     
  3754                           ; BSR set to: 0
  3755                           ;DC_motors.c: 258:         reverse(mL, mR);
  3756  0022F4  C07D  F022         	movff	instructions@mL,reverse@mL
  3757  0022F8  C07E  F023         	movff	instructions@mL+1,reverse@mL+1
  3758  0022FC  C07F  F024         	movff	instructions@mR,reverse@mR
  3759  002300  C080  F025         	movff	instructions@mR+1,reverse@mR+1
  3760  002304  EC6F  F01E         	call	_reverse	;wreg free
  3761  002308                     
  3762                           ;DC_motors.c: 259:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  3763  002308  0E72               	movlw	114
  3764  00230A  6E4E               	movwf	(??_instructions+1)^0,c
  3765  00230C  0EA3               	movlw	163
  3766  00230E  6E4D               	movwf	??_instructions^0,c
  3767  002310  0E9B               	movlw	155
  3768  002312                     u6847:
  3769  002312  2EE8               	decfsz	wreg,f,c
  3770  002314  D7FE               	bra	u6847
  3771  002316  2E4D               	decfsz	??_instructions^0,f,c
  3772  002318  D7FC               	bra	u6847
  3773  00231A  2E4E               	decfsz	(??_instructions+1)^0,f,c
  3774  00231C  D7FA               	bra	u6847
  3775  00231E  F000               	nop	
  3776  002320                     
  3777                           ;DC_motors.c: 260:         stop(mL, mR);
  3778  002320  C07D  F022         	movff	instructions@mL,stop@mL
  3779  002324  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3780  002328  C07F  F024         	movff	instructions@mR,stop@mR
  3781  00232C  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3782  002330  ECFD  F01E         	call	_stop	;wreg free
  3783                           
  3784                           ;DC_motors.c: 261:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3785  002334  0E09               	movlw	9
  3786  002336  6E4E               	movwf	(??_instructions+1)^0,c
  3787  002338  0E1E               	movlw	30
  3788  00233A  6E4D               	movwf	??_instructions^0,c
  3789  00233C  0EE4               	movlw	228
  3790  00233E                     u6857:
  3791  00233E  2EE8               	decfsz	wreg,f,c
  3792  002340  D7FE               	bra	u6857
  3793  002342  2E4D               	decfsz	??_instructions^0,f,c
  3794  002344  D7FC               	bra	u6857
  3795  002346  2E4E               	decfsz	(??_instructions+1)^0,f,c
  3796  002348  D7FA               	bra	u6857
  3797  00234A  D000               	nop2	
  3798  00234C                     
  3799                           ;DC_motors.c: 262:         turnleft(mL, mR, 90);
  3800  00234C  C07D  F06D         	movff	instructions@mL,turnleft@mL
  3801  002350  C07E  F06E         	movff	instructions@mL+1,turnleft@mL+1
  3802  002354  C07F  F06F         	movff	instructions@mR,turnleft@mR
  3803  002358  C080  F070         	movff	instructions@mR+1,turnleft@mR+1
  3804  00235C  0E00               	movlw	0
  3805  00235E  0100               	movlb	0	; () banked
  3806  002360  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  3807  002362  0E5A               	movlw	90
  3808  002364  6F71               	movwf	turnleft@deg& (0+255),b
  3809  002366  EC10  F017         	call	_turnleft	;wreg free
  3810  00236A  EF65  F011         	goto	l5081
  3811  00236E                     l5095:
  3812                           
  3813                           ; BSR set to: 0
  3814  00236E  0E06               	movlw	6
  3815  002370  1981               	xorwf	instructions@num& (0+255),w,b
  3816  002372  A4D8               	btfss	status,2,c
  3817  002374  EFBE  F011         	goto	u5661
  3818  002378  EFC0  F011         	goto	u5660
  3819  00237C                     u5661:
  3820  00237C  EFE5  F011         	goto	l5099
  3821  002380                     u5660:
  3822  002380                     
  3823                           ; BSR set to: 0
  3824                           ;DC_motors.c: 266:         clearance(mL, mR);
  3825  002380  C07D  F028         	movff	instructions@mL,clearance@mL
  3826  002384  C07E  F029         	movff	instructions@mL+1,clearance@mL+1
  3827  002388  C07F  F02A         	movff	instructions@mR,clearance@mR
  3828  00238C  C080  F02B         	movff	instructions@mR+1,clearance@mR+1
  3829  002390  EC42  F01F         	call	_clearance	;wreg free
  3830                           
  3831                           ;DC_motors.c: 267:         turnright(mL, mR, 135);
  3832  002394  C07D  F06D         	movff	instructions@mL,turnright@mL
  3833  002398  C07E  F06E         	movff	instructions@mL+1,turnright@mL+1
  3834  00239C  C07F  F06F         	movff	instructions@mR,turnright@mR
  3835  0023A0  C080  F070         	movff	instructions@mR+1,turnright@mR+1
  3836  0023A4  0E00               	movlw	0
  3837  0023A6  0100               	movlb	0	; () banked
  3838  0023A8  6F72               	movwf	(turnright@deg+1)& (0+255),b
  3839  0023AA  0E87               	movlw	135
  3840  0023AC  6F71               	movwf	turnright@deg& (0+255),b
  3841  0023AE  EC0D  F016         	call	_turnright	;wreg free
  3842                           
  3843                           ;DC_motors.c: 268:         stop(mL, mR);
  3844  0023B2  C07D  F022         	movff	instructions@mL,stop@mL
  3845  0023B6  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3846  0023BA  C07F  F024         	movff	instructions@mR,stop@mR
  3847  0023BE  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3848  0023C2  ECFD  F01E         	call	_stop	;wreg free
  3849                           
  3850                           ;DC_motors.c: 269:     } else if (num==7) {
  3851  0023C6  EF13  F012         	goto	l702
  3852  0023CA                     l5099:
  3853                           
  3854                           ; BSR set to: 0
  3855  0023CA  0E07               	movlw	7
  3856  0023CC  1981               	xorwf	instructions@num& (0+255),w,b
  3857  0023CE  A4D8               	btfss	status,2,c
  3858  0023D0  EFEC  F011         	goto	u5671
  3859  0023D4  EFEE  F011         	goto	u5670
  3860  0023D8                     u5671:
  3861  0023D8  EF13  F012         	goto	l696
  3862  0023DC                     u5670:
  3863  0023DC                     
  3864                           ; BSR set to: 0
  3865                           ;DC_motors.c: 271:         clearance(mL, mR);
  3866  0023DC  C07D  F028         	movff	instructions@mL,clearance@mL
  3867  0023E0  C07E  F029         	movff	instructions@mL+1,clearance@mL+1
  3868  0023E4  C07F  F02A         	movff	instructions@mR,clearance@mR
  3869  0023E8  C080  F02B         	movff	instructions@mR+1,clearance@mR+1
  3870  0023EC  EC42  F01F         	call	_clearance	;wreg free
  3871                           
  3872                           ;DC_motors.c: 272:         turnleft(mL, mR, 135);
  3873  0023F0  C07D  F06D         	movff	instructions@mL,turnleft@mL
  3874  0023F4  C07E  F06E         	movff	instructions@mL+1,turnleft@mL+1
  3875  0023F8  C07F  F06F         	movff	instructions@mR,turnleft@mR
  3876  0023FC  C080  F070         	movff	instructions@mR+1,turnleft@mR+1
  3877  002400  0E00               	movlw	0
  3878  002402  0100               	movlb	0	; () banked
  3879  002404  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  3880  002406  0E87               	movlw	135
  3881  002408  6F71               	movwf	turnleft@deg& (0+255),b
  3882  00240A  EC10  F017         	call	_turnleft	;wreg free
  3883                           
  3884                           ;DC_motors.c: 273:         stop(mL, mR);
  3885  00240E  C07D  F022         	movff	instructions@mL,stop@mL
  3886  002412  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3887  002416  C07F  F024         	movff	instructions@mR,stop@mR
  3888  00241A  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3889  00241E  ECFD  F01E         	call	_stop	;wreg free
  3890  002422  EF13  F012         	goto	l702
  3891  002426                     l696:
  3892  002426                     l702:
  3893  002426  0012               	return		;funcret
  3894  002428                     __end_of_instructions:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _clearance *****************
  3898 ;; Defined at:
  3899 ;;		line 132 in file "DC_motors.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  mL              2   39[COMRAM] PTR struct .
  3902 ;;		 -> main@motorL(9), 
  3903 ;;  mR              2   41[COMRAM] PTR struct .
  3904 ;;		 -> main@motorR(9), 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;Total ram usage:        6 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 10
  3923 ;; This function calls:
  3924 ;;		_reverse
  3925 ;;		_stop
  3926 ;; This function is called by:
  3927 ;;		_instructions
  3928 ;;		_DCmotors_testing
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text14
  3933  003E84                     __ptext14:
  3934                           	callstack 0
  3935  003E84                     _clearance:
  3936                           	callstack 17
  3937  003E84                     
  3938                           ;DC_motors.c: 133:     LATDbits.LATD3 = 0;
  3939  003E84  967C               	bcf	124,3,c	;volatile
  3940  003E86                     
  3941                           ;DC_motors.c: 134:     reverse(mL, mR);
  3942  003E86  C028  F022         	movff	clearance@mL,reverse@mL
  3943  003E8A  C029  F023         	movff	clearance@mL+1,reverse@mL+1
  3944  003E8E  C02A  F024         	movff	clearance@mR,reverse@mR
  3945  003E92  C02B  F025         	movff	clearance@mR+1,reverse@mR+1
  3946  003E96  EC6F  F01E         	call	_reverse	;wreg free
  3947  003E9A                     
  3948                           ;DC_motors.c: 135:     _delay((unsigned long)((350)*(64000000/4000.0)));
  3949  003E9A  0E1D               	movlw	29
  3950  003E9C  6E2D               	movwf	(??_clearance+1)^0,c
  3951  003E9E  0E69               	movlw	105
  3952  003EA0  6E2C               	movwf	??_clearance^0,c
  3953  003EA2  0EA5               	movlw	165
  3954  003EA4                     u6867:
  3955  003EA4  2EE8               	decfsz	wreg,f,c
  3956  003EA6  D7FE               	bra	u6867
  3957  003EA8  2E2C               	decfsz	??_clearance^0,f,c
  3958  003EAA  D7FC               	bra	u6867
  3959  003EAC  2E2D               	decfsz	(??_clearance+1)^0,f,c
  3960  003EAE  D7FA               	bra	u6867
  3961  003EB0  F000               	nop	
  3962  003EB2                     
  3963                           ;DC_motors.c: 136:     stop(mL, mR);
  3964  003EB2  C028  F022         	movff	clearance@mL,stop@mL
  3965  003EB6  C029  F023         	movff	clearance@mL+1,stop@mL+1
  3966  003EBA  C02A  F024         	movff	clearance@mR,stop@mR
  3967  003EBE  C02B  F025         	movff	clearance@mR+1,stop@mR+1
  3968  003EC2  ECFD  F01E         	call	_stop	;wreg free
  3969                           
  3970                           ;DC_motors.c: 137:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  3971  003EC6  0E52               	movlw	82
  3972  003EC8  6E2D               	movwf	(??_clearance+1)^0,c
  3973  003ECA  0E2B               	movlw	43
  3974  003ECC  6E2C               	movwf	??_clearance^0,c
  3975  003ECE  0E00               	movlw	0
  3976  003ED0                     u6877:
  3977  003ED0  2EE8               	decfsz	wreg,f,c
  3978  003ED2  D7FE               	bra	u6877
  3979  003ED4  2E2C               	decfsz	??_clearance^0,f,c
  3980  003ED6  D7FC               	bra	u6877
  3981  003ED8  2E2D               	decfsz	(??_clearance+1)^0,f,c
  3982  003EDA  D7FA               	bra	u6877
  3983  003EDC  D000               	nop2	
  3984  003EDE                     
  3985                           ;DC_motors.c: 138:     LATDbits.LATD3 = 0;
  3986  003EDE  967C               	bcf	124,3,c	;volatile
  3987  003EE0  0012               	return		;funcret
  3988  003EE2                     __end_of_clearance:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _reverse *****************
  3992 ;; Defined at:
  3993 ;;		line 112 in file "DC_motors.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  mL              2   33[COMRAM] PTR struct .
  3996 ;;		 -> main@motorL(9), 
  3997 ;;  mR              2   35[COMRAM] PTR struct .
  3998 ;;		 -> main@motorR(9), 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;Total ram usage:        5 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 9
  4017 ;; This function calls:
  4018 ;;		_DCmotors_setPWM
  4019 ;; This function is called by:
  4020 ;;		_main
  4021 ;;		_clearance
  4022 ;;		_instructions
  4023 ;;		_returnhome
  4024 ;;		_DCmotors_testing
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text15
  4029  003CDE                     __ptext15:
  4030                           	callstack 0
  4031  003CDE                     _reverse:
  4032                           	callstack 21
  4033  003CDE                     
  4034                           ;DC_motors.c: 114:     mL->direction = 0;
  4035  003CDE  EE20 F001          	lfsr	2,1
  4036  003CE2  5022               	movf	reverse@mL^0,w,c
  4037  003CE4  26D9               	addwf	fsr2l,f,c
  4038  003CE6  5023               	movf	(reverse@mL+1)^0,w,c
  4039  003CE8  22DA               	addwfc	fsr2h,f,c
  4040  003CEA  0E00               	movlw	0
  4041  003CEC  6EDF               	movwf	indf2,c
  4042                           
  4043                           ;DC_motors.c: 115:     mR->direction = 0;
  4044  003CEE  EE20 F001          	lfsr	2,1
  4045  003CF2  5024               	movf	reverse@mR^0,w,c
  4046  003CF4  26D9               	addwf	fsr2l,f,c
  4047  003CF6  5025               	movf	(reverse@mR+1)^0,w,c
  4048  003CF8  22DA               	addwfc	fsr2h,f,c
  4049  003CFA  0E00               	movlw	0
  4050  003CFC  6EDF               	movwf	indf2,c
  4051                           
  4052                           ;DC_motors.c: 118:     while((mL->power < 50) && (mR->power < 50)){
  4053  003CFE  EF9D  F01E         	goto	l3371
  4054  003D02                     l3363:
  4055                           
  4056                           ;DC_motors.c: 119:         mL->power += 10;
  4057  003D02  C022  FFD9         	movff	reverse@mL,fsr2l
  4058  003D06  C023  FFDA         	movff	reverse@mL+1,fsr2h
  4059  003D0A  0E0A               	movlw	10
  4060  003D0C  26DF               	addwf	indf2,f,c
  4061                           
  4062                           ;DC_motors.c: 120:         mR->power += 10;
  4063  003D0E  C024  FFD9         	movff	reverse@mR,fsr2l
  4064  003D12  C025  FFDA         	movff	reverse@mR+1,fsr2h
  4065  003D16  0E0A               	movlw	10
  4066  003D18  26DF               	addwf	indf2,f,c
  4067  003D1A                     
  4068                           ;DC_motors.c: 122:         DCmotors_setPWM(mL);
  4069  003D1A  C022  F017         	movff	reverse@mL,DCmotors_setPWM@m
  4070  003D1E  C023  F018         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  4071  003D22  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  4072  003D26                     
  4073                           ;DC_motors.c: 123:         DCmotors_setPWM(mR);
  4074  003D26  C024  F017         	movff	reverse@mR,DCmotors_setPWM@m
  4075  003D2A  C025  F018         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  4076  003D2E  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  4077  003D32                     
  4078                           ;DC_motors.c: 124:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  4079  003D32  0EA0               	movlw	160
  4080  003D34                     u6887:
  4081  003D34  D000               	nop2	
  4082  003D36  2EE8               	decfsz	wreg,f,c
  4083  003D38  D7FD               	bra	u6887
  4084  003D3A                     l3371:
  4085                           
  4086                           ;DC_motors.c: 118:     while((mL->power < 50) && (mR->power < 50)){
  4087  003D3A  C022  FFD9         	movff	reverse@mL,fsr2l
  4088  003D3E  C023  FFDA         	movff	reverse@mL+1,fsr2h
  4089  003D42  0E32               	movlw	50
  4090  003D44  60DF               	cpfslt	indf2,c
  4091  003D46  EFA7  F01E         	goto	u2931
  4092  003D4A  EFA9  F01E         	goto	u2930
  4093  003D4E                     u2931:
  4094  003D4E  EFB5  F01E         	goto	l652
  4095  003D52                     u2930:
  4096  003D52  C024  FFD9         	movff	reverse@mR,fsr2l
  4097  003D56  C025  FFDA         	movff	reverse@mR+1,fsr2h
  4098  003D5A  0E31               	movlw	49
  4099  003D5C  64DF               	cpfsgt	indf2,c
  4100  003D5E  EFB3  F01E         	goto	u2941
  4101  003D62  EFB5  F01E         	goto	u2940
  4102  003D66                     u2941:
  4103  003D66  EF81  F01E         	goto	l3363
  4104  003D6A                     u2940:
  4105  003D6A                     l652:
  4106  003D6A  0012               	return		;funcret
  4107  003D6C                     __end_of_reverse:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _forward *****************
  4111 ;; Defined at:
  4112 ;;		line 93 in file "DC_motors.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  mL              2   33[COMRAM] PTR struct .
  4115 ;;		 -> main@motorL(9), 
  4116 ;;  mR              2   35[COMRAM] PTR struct .
  4117 ;;		 -> main@motorR(9), 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;Total ram usage:        5 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 9
  4136 ;; This function calls:
  4137 ;;		_DCmotors_setPWM
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;;		_colourcards_readRGBC
  4141 ;;		_reverseinstructions
  4142 ;;		_DCmotors_testing
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text16
  4147  003D6C                     __ptext16:
  4148                           	callstack 0
  4149  003D6C                     _forward:
  4150                           	callstack 19
  4151  003D6C                     
  4152                           ;DC_motors.c: 94:     mL->direction = 1;
  4153  003D6C  EE20 F001          	lfsr	2,1
  4154  003D70  5022               	movf	forward@mL^0,w,c
  4155  003D72  26D9               	addwf	fsr2l,f,c
  4156  003D74  5023               	movf	(forward@mL+1)^0,w,c
  4157  003D76  22DA               	addwfc	fsr2h,f,c
  4158  003D78  0E01               	movlw	1
  4159  003D7A  6EDF               	movwf	indf2,c
  4160                           
  4161                           ;DC_motors.c: 95:     mR->direction = 1;
  4162  003D7C  EE20 F001          	lfsr	2,1
  4163  003D80  5024               	movf	forward@mR^0,w,c
  4164  003D82  26D9               	addwf	fsr2l,f,c
  4165  003D84  5025               	movf	(forward@mR+1)^0,w,c
  4166  003D86  22DA               	addwfc	fsr2h,f,c
  4167  003D88  0E01               	movlw	1
  4168  003D8A  6EDF               	movwf	indf2,c
  4169                           
  4170                           ;DC_motors.c: 98:     while((mL->power < 20) && (mR->power < 20)){
  4171  003D8C  EFE4  F01E         	goto	l4077
  4172  003D90                     l4069:
  4173                           
  4174                           ;DC_motors.c: 99:         mL->power += 10;
  4175  003D90  C022  FFD9         	movff	forward@mL,fsr2l
  4176  003D94  C023  FFDA         	movff	forward@mL+1,fsr2h
  4177  003D98  0E0A               	movlw	10
  4178  003D9A  26DF               	addwf	indf2,f,c
  4179                           
  4180                           ;DC_motors.c: 100:         mR->power += 10;
  4181  003D9C  C024  FFD9         	movff	forward@mR,fsr2l
  4182  003DA0  C025  FFDA         	movff	forward@mR+1,fsr2h
  4183  003DA4  0E0A               	movlw	10
  4184  003DA6  26DF               	addwf	indf2,f,c
  4185  003DA8                     
  4186                           ;DC_motors.c: 102:         DCmotors_setPWM(mL);
  4187  003DA8  C022  F017         	movff	forward@mL,DCmotors_setPWM@m
  4188  003DAC  C023  F018         	movff	forward@mL+1,DCmotors_setPWM@m+1
  4189  003DB0  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  4190  003DB4                     
  4191                           ;DC_motors.c: 103:         DCmotors_setPWM(mR);
  4192  003DB4  C024  F017         	movff	forward@mR,DCmotors_setPWM@m
  4193  003DB8  C025  F018         	movff	forward@mR+1,DCmotors_setPWM@m+1
  4194  003DBC  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  4195  003DC0                     
  4196                           ;DC_motors.c: 104:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  4197  003DC0  0EA0               	movlw	160
  4198  003DC2                     u6897:
  4199  003DC2  D000               	nop2	
  4200  003DC4  2EE8               	decfsz	wreg,f,c
  4201  003DC6  D7FD               	bra	u6897
  4202  003DC8                     l4077:
  4203                           
  4204                           ;DC_motors.c: 98:     while((mL->power < 20) && (mR->power < 20)){
  4205  003DC8  C022  FFD9         	movff	forward@mL,fsr2l
  4206  003DCC  C023  FFDA         	movff	forward@mL+1,fsr2h
  4207  003DD0  0E14               	movlw	20
  4208  003DD2  60DF               	cpfslt	indf2,c
  4209  003DD4  EFEE  F01E         	goto	u4081
  4210  003DD8  EFF0  F01E         	goto	u4080
  4211  003DDC                     u4081:
  4212  003DDC  EFFC  F01E         	goto	l644
  4213  003DE0                     u4080:
  4214  003DE0  C024  FFD9         	movff	forward@mR,fsr2l
  4215  003DE4  C025  FFDA         	movff	forward@mR+1,fsr2h
  4216  003DE8  0E13               	movlw	19
  4217  003DEA  64DF               	cpfsgt	indf2,c
  4218  003DEC  EFFA  F01E         	goto	u4091
  4219  003DF0  EFFC  F01E         	goto	u4090
  4220  003DF4                     u4091:
  4221  003DF4  EFC8  F01E         	goto	l4069
  4222  003DF8                     u4090:
  4223  003DF8                     l644:
  4224  003DF8  0012               	return		;funcret
  4225  003DFA                     __end_of_forward:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _colourclick_readRGBC2 *****************
  4229 ;; Defined at:
  4230 ;;		line 124 in file "colour_click.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  tmpval          2   21[COMRAM] PTR struct .
  4233 ;;		 -> colourcards_testingRGBC2@abs(8), main@current(8), 
  4234 ;;  mode            1   23[COMRAM] unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4246 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;Total ram usage:        5 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 11
  4253 ;; This function calls:
  4254 ;;		_colourclickLEDs_C
  4255 ;;		_colourclick_readRGBC
  4256 ;; This function is called by:
  4257 ;;		_colourcards_readRGBC
  4258 ;;		_colourcards_testingRGBC2
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text17
  4263  00368E                     __ptext17:
  4264                           	callstack 0
  4265  00368E                     _colourclick_readRGBC2:
  4266                           	callstack 18
  4267  00368E                     
  4268                           ;colour_click.c: 125:     colourclickLEDs_C(0);
  4269  00368E  0E00               	movlw	0
  4270  003690  EC6E  F021         	call	_colourclickLEDs_C
  4271  003694                     
  4272                           ;colour_click.c: 126:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4273  003694  0E09               	movlw	9
  4274  003696  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4275  003698  0E1E               	movlw	30
  4276  00369A  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4277  00369C  0EE4               	movlw	228
  4278  00369E                     u6907:
  4279  00369E  2EE8               	decfsz	wreg,f,c
  4280  0036A0  D7FE               	bra	u6907
  4281  0036A2  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4282  0036A4  D7FC               	bra	u6907
  4283  0036A6  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4284  0036A8  D7FA               	bra	u6907
  4285  0036AA  D000               	nop2	
  4286  0036AC                     
  4287                           ;colour_click.c: 128:     if (mode==1) {
  4288  0036AC  0418               	decf	colourclick_readRGBC2@mode^0,w,c
  4289  0036AE  A4D8               	btfss	status,2,c
  4290  0036B0  EF5C  F01B         	goto	u4181
  4291  0036B4  EF5E  F01B         	goto	u4180
  4292  0036B8                     u4181:
  4293  0036B8  EF8C  F01B         	goto	l4183
  4294  0036BC                     u4180:
  4295  0036BC                     
  4296                           ;colour_click.c: 129:         LATGbits.LATG1 = 1;
  4297  0036BC  827F               	bsf	127,1,c	;volatile
  4298  0036BE                     
  4299                           ;colour_click.c: 130:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4300  0036BE  0E52               	movlw	82
  4301  0036C0  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4302  0036C2  0E2B               	movlw	43
  4303  0036C4  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4304  0036C6  0E00               	movlw	0
  4305  0036C8                     u6917:
  4306  0036C8  2EE8               	decfsz	wreg,f,c
  4307  0036CA  D7FE               	bra	u6917
  4308  0036CC  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4309  0036CE  D7FC               	bra	u6917
  4310  0036D0  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4311  0036D2  D7FA               	bra	u6917
  4312  0036D4  D000               	nop2	
  4313  0036D6                     
  4314                           ;colour_click.c: 131:         colourclick_readRGBC(tmpval);
  4315  0036D6  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  4316  0036DA  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  4317  0036DE  EC71  F01F         	call	_colourclick_readRGBC	;wreg free
  4318  0036E2                     
  4319                           ;colour_click.c: 132:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4320  0036E2  0E52               	movlw	82
  4321  0036E4  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4322  0036E6  0E2B               	movlw	43
  4323  0036E8  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4324  0036EA  0E00               	movlw	0
  4325  0036EC                     u6927:
  4326  0036EC  2EE8               	decfsz	wreg,f,c
  4327  0036EE  D7FE               	bra	u6927
  4328  0036F0  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4329  0036F2  D7FC               	bra	u6927
  4330  0036F4  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4331  0036F6  D7FA               	bra	u6927
  4332  0036F8  D000               	nop2	
  4333  0036FA                     
  4334                           ;colour_click.c: 133:         LATGbits.LATG1 = 0;
  4335  0036FA  927F               	bcf	127,1,c	;volatile
  4336  0036FC                     l4181:
  4337                           
  4338                           ;colour_click.c: 134:         _delay((unsigned long)((20)*(64000000/4000.0)));
  4339  0036FC  0E02               	movlw	2
  4340  0036FE  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4341  003700  0EA0               	movlw	160
  4342  003702  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4343  003704  0E92               	movlw	146
  4344  003706                     u6937:
  4345  003706  2EE8               	decfsz	wreg,f,c
  4346  003708  D7FE               	bra	u6937
  4347  00370A  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4348  00370C  D7FC               	bra	u6937
  4349  00370E  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4350  003710  D7FA               	bra	u6937
  4351  003712  D000               	nop2	
  4352                           
  4353                           ;colour_click.c: 135:     } else if (mode==2) {
  4354  003714  EFE2  F01B         	goto	l4211
  4355  003718                     l4183:
  4356  003718  0E02               	movlw	2
  4357  00371A  1818               	xorwf	colourclick_readRGBC2@mode^0,w,c
  4358  00371C  A4D8               	btfss	status,2,c
  4359  00371E  EF93  F01B         	goto	u4191
  4360  003722  EF95  F01B         	goto	u4190
  4361  003726                     u4191:
  4362  003726  EFB7  F01B         	goto	l4197
  4363  00372A                     u4190:
  4364  00372A                     
  4365                           ;colour_click.c: 136:         LATAbits.LATA4 = 1;
  4366  00372A  8879               	bsf	121,4,c	;volatile
  4367  00372C                     
  4368                           ;colour_click.c: 137:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4369  00372C  0E52               	movlw	82
  4370  00372E  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4371  003730  0E2B               	movlw	43
  4372  003732  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4373  003734  0E00               	movlw	0
  4374  003736                     u6947:
  4375  003736  2EE8               	decfsz	wreg,f,c
  4376  003738  D7FE               	bra	u6947
  4377  00373A  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4378  00373C  D7FC               	bra	u6947
  4379  00373E  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4380  003740  D7FA               	bra	u6947
  4381  003742  D000               	nop2	
  4382  003744                     
  4383                           ;colour_click.c: 138:         colourclick_readRGBC(tmpval);
  4384  003744  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  4385  003748  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  4386  00374C  EC71  F01F         	call	_colourclick_readRGBC	;wreg free
  4387  003750                     
  4388                           ;colour_click.c: 139:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4389  003750  0E52               	movlw	82
  4390  003752  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4391  003754  0E2B               	movlw	43
  4392  003756  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4393  003758  0E00               	movlw	0
  4394  00375A                     u6957:
  4395  00375A  2EE8               	decfsz	wreg,f,c
  4396  00375C  D7FE               	bra	u6957
  4397  00375E  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4398  003760  D7FC               	bra	u6957
  4399  003762  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4400  003764  D7FA               	bra	u6957
  4401  003766  D000               	nop2	
  4402  003768                     
  4403                           ;colour_click.c: 140:         LATAbits.LATA4 = 0;
  4404  003768  9879               	bcf	121,4,c	;volatile
  4405  00376A  EF7E  F01B         	goto	l4181
  4406  00376E                     l4197:
  4407  00376E  0E03               	movlw	3
  4408  003770  1818               	xorwf	colourclick_readRGBC2@mode^0,w,c
  4409  003772  A4D8               	btfss	status,2,c
  4410  003774  EFBE  F01B         	goto	u4201
  4411  003778  EFC0  F01B         	goto	u4200
  4412  00377C                     u4201:
  4413  00377C  EFE2  F01B         	goto	l4211
  4414  003780                     u4200:
  4415  003780                     
  4416                           ;colour_click.c: 143:         LATFbits.LATF7 = 1;
  4417  003780  8E7E               	bsf	126,7,c	;volatile
  4418  003782                     
  4419                           ;colour_click.c: 144:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4420  003782  0E52               	movlw	82
  4421  003784  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4422  003786  0E2B               	movlw	43
  4423  003788  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4424  00378A  0E00               	movlw	0
  4425  00378C                     u6967:
  4426  00378C  2EE8               	decfsz	wreg,f,c
  4427  00378E  D7FE               	bra	u6967
  4428  003790  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4429  003792  D7FC               	bra	u6967
  4430  003794  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4431  003796  D7FA               	bra	u6967
  4432  003798  D000               	nop2	
  4433  00379A                     
  4434                           ;colour_click.c: 145:         colourclick_readRGBC(tmpval);
  4435  00379A  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  4436  00379E  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  4437  0037A2  EC71  F01F         	call	_colourclick_readRGBC	;wreg free
  4438  0037A6                     
  4439                           ;colour_click.c: 146:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  4440  0037A6  0E52               	movlw	82
  4441  0037A8  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4442  0037AA  0E2B               	movlw	43
  4443  0037AC  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4444  0037AE  0E00               	movlw	0
  4445  0037B0                     u6977:
  4446  0037B0  2EE8               	decfsz	wreg,f,c
  4447  0037B2  D7FE               	bra	u6977
  4448  0037B4  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4449  0037B6  D7FC               	bra	u6977
  4450  0037B8  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4451  0037BA  D7FA               	bra	u6977
  4452  0037BC  D000               	nop2	
  4453  0037BE                     
  4454                           ;colour_click.c: 147:         LATFbits.LATF7 = 0;
  4455  0037BE  9E7E               	bcf	126,7,c	;volatile
  4456  0037C0  EF7E  F01B         	goto	l4181
  4457  0037C4                     l4211:
  4458                           
  4459                           ;colour_click.c: 151:     colourclickLEDs_C(1);
  4460  0037C4  0E01               	movlw	1
  4461  0037C6  EC6E  F021         	call	_colourclickLEDs_C
  4462  0037CA                     
  4463                           ;colour_click.c: 152:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4464  0037CA  0E09               	movlw	9
  4465  0037CC  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  4466  0037CE  0E1E               	movlw	30
  4467  0037D0  6E19               	movwf	??_colourclick_readRGBC2^0,c
  4468  0037D2  0EE4               	movlw	228
  4469  0037D4                     u6987:
  4470  0037D4  2EE8               	decfsz	wreg,f,c
  4471  0037D6  D7FE               	bra	u6987
  4472  0037D8  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  4473  0037DA  D7FC               	bra	u6987
  4474  0037DC  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  4475  0037DE  D7FA               	bra	u6987
  4476  0037E0  D000               	nop2	
  4477  0037E2  0012               	return		;funcret
  4478  0037E4                     __end_of_colourclick_readRGBC2:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function _colourclick_readRGBC *****************
  4482 ;; Defined at:
  4483 ;;		line 113 in file "colour_click.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  tmpval          2   19[COMRAM] PTR struct .
  4486 ;;		 -> colourclick_calibration@initial(8), colourcards_testingRGBC2@abs(8), main@current(8), 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;Total ram usage:        2 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 10
  4505 ;; This function calls:
  4506 ;;		_colourclick_readB
  4507 ;;		_colourclick_readC
  4508 ;;		_colourclick_readG
  4509 ;;		_colourclick_readR
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;;		_colourcards_readRGBC
  4513 ;;		_colourclick_readRGBC2
  4514 ;;		_colourclick_calibration
  4515 ;;		_colourcards_testingRGBC2
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text18
  4520  003EE2                     __ptext18:
  4521                           	callstack 0
  4522  003EE2                     _colourclick_readRGBC:
  4523                           	callstack 20
  4524  003EE2                     
  4525                           ;colour_click.c: 114:     tmpval->R = colourclick_readR();
  4526  003EE2  ECA0  F01F         	call	_colourclick_readR	;wreg free
  4527  003EE6  C014  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  4528  003EEA  C015  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  4529  003EEE  C00D  FFDE         	movff	?_colourclick_readR,postinc2
  4530  003EF2  C00E  FFDD         	movff	?_colourclick_readR+1,postdec2
  4531                           
  4532                           ;colour_click.c: 115:     tmpval->G = colourclick_readG();
  4533  003EF6  ECC8  F01F         	call	_colourclick_readG	;wreg free
  4534  003EFA  EE20 F002          	lfsr	2,2
  4535  003EFE  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  4536  003F00  26D9               	addwf	fsr2l,f,c
  4537  003F02  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  4538  003F04  22DA               	addwfc	fsr2h,f,c
  4539  003F06  C00D  FFDE         	movff	?_colourclick_readG,postinc2
  4540  003F0A  C00E  FFDD         	movff	?_colourclick_readG+1,postdec2
  4541                           
  4542                           ;colour_click.c: 116:     tmpval->B = colourclick_readB();
  4543  003F0E  EC18  F020         	call	_colourclick_readB	;wreg free
  4544  003F12  EE20 F004          	lfsr	2,4
  4545  003F16  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  4546  003F18  26D9               	addwf	fsr2l,f,c
  4547  003F1A  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  4548  003F1C  22DA               	addwfc	fsr2h,f,c
  4549  003F1E  C00D  FFDE         	movff	?_colourclick_readB,postinc2
  4550  003F22  C00E  FFDD         	movff	?_colourclick_readB+1,postdec2
  4551                           
  4552                           ;colour_click.c: 117:     tmpval->C = colourclick_readC();
  4553  003F26  ECF0  F01F         	call	_colourclick_readC	;wreg free
  4554  003F2A  EE20 F006          	lfsr	2,6
  4555  003F2E  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  4556  003F30  26D9               	addwf	fsr2l,f,c
  4557  003F32  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  4558  003F34  22DA               	addwfc	fsr2h,f,c
  4559  003F36  C00D  FFDE         	movff	?_colourclick_readC,postinc2
  4560  003F3A  C00E  FFDD         	movff	?_colourclick_readC+1,postdec2
  4561  003F3E  0012               	return		;funcret
  4562  003F40                     __end_of_colourclick_readRGBC:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function _colourclick_readR *****************
  4566 ;; Defined at:
  4567 ;;		line 45 in file "colour_click.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  tmp             2   17[COMRAM] unsigned int 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  2   12[COMRAM] unsigned int 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4584 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4585 ;;Total ram usage:        7 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 9
  4588 ;; This function calls:
  4589 ;;		_I2C_2_Master_Read
  4590 ;;		_I2C_2_Master_RepStart
  4591 ;;		_I2C_2_Master_Start
  4592 ;;		_I2C_2_Master_Stop
  4593 ;;		_I2C_2_Master_Write
  4594 ;; This function is called by:
  4595 ;;		_colourclick_readRGBC
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text19
  4600  003F40                     __ptext19:
  4601                           	callstack 0
  4602  003F40                     _colourclick_readR:
  4603                           	callstack 20
  4604  003F40                     
  4605                           ;colour_click.c: 46:  unsigned int tmp;;colour_click.c: 47:  I2C_2_Master_Start();
  4606  003F40  EC2C  F022         	call	_I2C_2_Master_Start	;wreg free
  4607                           
  4608                           ;colour_click.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  4609  003F44  0E52               	movlw	82
  4610  003F46  EC15  F022         	call	_I2C_2_Master_Write
  4611                           
  4612                           ;colour_click.c: 49:  I2C_2_Master_Write(0xA0 | 0x16);
  4613  003F4A  0EB6               	movlw	182
  4614  003F4C  EC15  F022         	call	_I2C_2_Master_Write
  4615                           
  4616                           ;colour_click.c: 50:  I2C_2_Master_RepStart();
  4617  003F50  EC31  F022         	call	_I2C_2_Master_RepStart	;wreg free
  4618                           
  4619                           ;colour_click.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  4620  003F54  0E53               	movlw	83
  4621  003F56  EC15  F022         	call	_I2C_2_Master_Write
  4622                           
  4623                           ;colour_click.c: 52:  tmp=I2C_2_Master_Read(1);
  4624  003F5A  0E01               	movlw	1
  4625  003F5C  ECB6  F020         	call	_I2C_2_Master_Read
  4626  003F60  6E0F               	movwf	??_colourclick_readR^0,c
  4627  003F62  500F               	movf	??_colourclick_readR^0,w,c
  4628  003F64  6E12               	movwf	colourclick_readR@tmp^0,c
  4629  003F66  6A13               	clrf	(colourclick_readR@tmp+1)^0,c
  4630                           
  4631                           ;colour_click.c: 53:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  4632  003F68  0E00               	movlw	0
  4633  003F6A  ECB6  F020         	call	_I2C_2_Master_Read
  4634  003F6E  6E0F               	movwf	??_colourclick_readR^0,c
  4635  003F70  500F               	movf	??_colourclick_readR^0,w,c
  4636  003F72  6E11               	movwf	(??_colourclick_readR+2)^0,c
  4637  003F74  6A10               	clrf	(??_colourclick_readR+1)^0,c
  4638  003F76  5012               	movf	colourclick_readR@tmp^0,w,c
  4639  003F78  1010               	iorwf	(??_colourclick_readR+1)^0,w,c
  4640  003F7A  6E12               	movwf	colourclick_readR@tmp^0,c
  4641  003F7C  5013               	movf	(colourclick_readR@tmp+1)^0,w,c
  4642  003F7E  1011               	iorwf	(??_colourclick_readR+2)^0,w,c
  4643  003F80  6E13               	movwf	(colourclick_readR@tmp+1)^0,c
  4644                           
  4645                           ;colour_click.c: 54:  I2C_2_Master_Stop();
  4646  003F82  EC27  F022         	call	_I2C_2_Master_Stop	;wreg free
  4647  003F86                     
  4648                           ;colour_click.c: 55:  return tmp;
  4649  003F86  C012  F00D         	movff	colourclick_readR@tmp,?_colourclick_readR
  4650  003F8A  C013  F00E         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  4651  003F8E  0012               	return		;funcret
  4652  003F90                     __end_of_colourclick_readR:
  4653                           	callstack 0
  4654                           
  4655 ;; *************** function _colourclick_readG *****************
  4656 ;; Defined at:
  4657 ;;		line 62 in file "colour_click.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  tmp             2   17[COMRAM] unsigned int 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  2   12[COMRAM] unsigned int 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;Total ram usage:        7 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; Hardware stack levels required when called: 9
  4678 ;; This function calls:
  4679 ;;		_I2C_2_Master_Read
  4680 ;;		_I2C_2_Master_RepStart
  4681 ;;		_I2C_2_Master_Start
  4682 ;;		_I2C_2_Master_Stop
  4683 ;;		_I2C_2_Master_Write
  4684 ;; This function is called by:
  4685 ;;		_colourclick_readRGBC
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text20
  4690  003F90                     __ptext20:
  4691                           	callstack 0
  4692  003F90                     _colourclick_readG:
  4693                           	callstack 20
  4694  003F90                     
  4695                           ;colour_click.c: 63:  unsigned int tmp;;colour_click.c: 64:  I2C_2_Master_Start();
  4696  003F90  EC2C  F022         	call	_I2C_2_Master_Start	;wreg free
  4697                           
  4698                           ;colour_click.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  4699  003F94  0E52               	movlw	82
  4700  003F96  EC15  F022         	call	_I2C_2_Master_Write
  4701                           
  4702                           ;colour_click.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  4703  003F9A  0EB8               	movlw	184
  4704  003F9C  EC15  F022         	call	_I2C_2_Master_Write
  4705                           
  4706                           ;colour_click.c: 67:  I2C_2_Master_RepStart();
  4707  003FA0  EC31  F022         	call	_I2C_2_Master_RepStart	;wreg free
  4708                           
  4709                           ;colour_click.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  4710  003FA4  0E53               	movlw	83
  4711  003FA6  EC15  F022         	call	_I2C_2_Master_Write
  4712                           
  4713                           ;colour_click.c: 69:  tmp=I2C_2_Master_Read(1);
  4714  003FAA  0E01               	movlw	1
  4715  003FAC  ECB6  F020         	call	_I2C_2_Master_Read
  4716  003FB0  6E0F               	movwf	??_colourclick_readG^0,c
  4717  003FB2  500F               	movf	??_colourclick_readG^0,w,c
  4718  003FB4  6E12               	movwf	colourclick_readG@tmp^0,c
  4719  003FB6  6A13               	clrf	(colourclick_readG@tmp+1)^0,c
  4720                           
  4721                           ;colour_click.c: 70:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  4722  003FB8  0E00               	movlw	0
  4723  003FBA  ECB6  F020         	call	_I2C_2_Master_Read
  4724  003FBE  6E0F               	movwf	??_colourclick_readG^0,c
  4725  003FC0  500F               	movf	??_colourclick_readG^0,w,c
  4726  003FC2  6E11               	movwf	(??_colourclick_readG+2)^0,c
  4727  003FC4  6A10               	clrf	(??_colourclick_readG+1)^0,c
  4728  003FC6  5012               	movf	colourclick_readG@tmp^0,w,c
  4729  003FC8  1010               	iorwf	(??_colourclick_readG+1)^0,w,c
  4730  003FCA  6E12               	movwf	colourclick_readG@tmp^0,c
  4731  003FCC  5013               	movf	(colourclick_readG@tmp+1)^0,w,c
  4732  003FCE  1011               	iorwf	(??_colourclick_readG+2)^0,w,c
  4733  003FD0  6E13               	movwf	(colourclick_readG@tmp+1)^0,c
  4734                           
  4735                           ;colour_click.c: 71:  I2C_2_Master_Stop();
  4736  003FD2  EC27  F022         	call	_I2C_2_Master_Stop	;wreg free
  4737  003FD6                     
  4738                           ;colour_click.c: 72:  return tmp;
  4739  003FD6  C012  F00D         	movff	colourclick_readG@tmp,?_colourclick_readG
  4740  003FDA  C013  F00E         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  4741  003FDE  0012               	return		;funcret
  4742  003FE0                     __end_of_colourclick_readG:
  4743                           	callstack 0
  4744                           
  4745 ;; *************** function _colourclick_readC *****************
  4746 ;; Defined at:
  4747 ;;		line 96 in file "colour_click.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  tmp             2   17[COMRAM] unsigned int 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2   12[COMRAM] unsigned int 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4763 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;Total ram usage:        7 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 9
  4768 ;; This function calls:
  4769 ;;		_I2C_2_Master_Read
  4770 ;;		_I2C_2_Master_RepStart
  4771 ;;		_I2C_2_Master_Start
  4772 ;;		_I2C_2_Master_Stop
  4773 ;;		_I2C_2_Master_Write
  4774 ;; This function is called by:
  4775 ;;		_colourclick_readRGBC
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text21
  4780  003FE0                     __ptext21:
  4781                           	callstack 0
  4782  003FE0                     _colourclick_readC:
  4783                           	callstack 20
  4784  003FE0                     
  4785                           ;colour_click.c: 97:  unsigned int tmp;;colour_click.c: 98:  I2C_2_Master_Start();
  4786  003FE0  EC2C  F022         	call	_I2C_2_Master_Start	;wreg free
  4787                           
  4788                           ;colour_click.c: 99:  I2C_2_Master_Write(0x52 | 0x00);
  4789  003FE4  0E52               	movlw	82
  4790  003FE6  EC15  F022         	call	_I2C_2_Master_Write
  4791                           
  4792                           ;colour_click.c: 100:  I2C_2_Master_Write(0xA0 | 0x14);
  4793  003FEA  0EB4               	movlw	180
  4794  003FEC  EC15  F022         	call	_I2C_2_Master_Write
  4795                           
  4796                           ;colour_click.c: 101:  I2C_2_Master_RepStart();
  4797  003FF0  EC31  F022         	call	_I2C_2_Master_RepStart	;wreg free
  4798                           
  4799                           ;colour_click.c: 102:  I2C_2_Master_Write(0x52 | 0x01);
  4800  003FF4  0E53               	movlw	83
  4801  003FF6  EC15  F022         	call	_I2C_2_Master_Write
  4802                           
  4803                           ;colour_click.c: 103:  tmp=I2C_2_Master_Read(1);
  4804  003FFA  0E01               	movlw	1
  4805  003FFC  ECB6  F020         	call	_I2C_2_Master_Read
  4806  004000  6E0F               	movwf	??_colourclick_readC^0,c
  4807  004002  500F               	movf	??_colourclick_readC^0,w,c
  4808  004004  6E12               	movwf	colourclick_readC@tmp^0,c
  4809  004006  6A13               	clrf	(colourclick_readC@tmp+1)^0,c
  4810                           
  4811                           ;colour_click.c: 104:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  4812  004008  0E00               	movlw	0
  4813  00400A  ECB6  F020         	call	_I2C_2_Master_Read
  4814  00400E  6E0F               	movwf	??_colourclick_readC^0,c
  4815  004010  500F               	movf	??_colourclick_readC^0,w,c
  4816  004012  6E11               	movwf	(??_colourclick_readC+2)^0,c
  4817  004014  6A10               	clrf	(??_colourclick_readC+1)^0,c
  4818  004016  5012               	movf	colourclick_readC@tmp^0,w,c
  4819  004018  1010               	iorwf	(??_colourclick_readC+1)^0,w,c
  4820  00401A  6E12               	movwf	colourclick_readC@tmp^0,c
  4821  00401C  5013               	movf	(colourclick_readC@tmp+1)^0,w,c
  4822  00401E  1011               	iorwf	(??_colourclick_readC+2)^0,w,c
  4823  004020  6E13               	movwf	(colourclick_readC@tmp+1)^0,c
  4824                           
  4825                           ;colour_click.c: 105:  I2C_2_Master_Stop();
  4826  004022  EC27  F022         	call	_I2C_2_Master_Stop	;wreg free
  4827  004026                     
  4828                           ;colour_click.c: 106:  return tmp;
  4829  004026  C012  F00D         	movff	colourclick_readC@tmp,?_colourclick_readC
  4830  00402A  C013  F00E         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  4831  00402E  0012               	return		;funcret
  4832  004030                     __end_of_colourclick_readC:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _colourclick_readB *****************
  4836 ;; Defined at:
  4837 ;;		line 79 in file "colour_click.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  tmp             2   17[COMRAM] unsigned int 
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  2   12[COMRAM] unsigned int 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;Total ram usage:        7 bytes
  4856 ;; Hardware stack levels used: 1
  4857 ;; Hardware stack levels required when called: 9
  4858 ;; This function calls:
  4859 ;;		_I2C_2_Master_Read
  4860 ;;		_I2C_2_Master_RepStart
  4861 ;;		_I2C_2_Master_Start
  4862 ;;		_I2C_2_Master_Stop
  4863 ;;		_I2C_2_Master_Write
  4864 ;; This function is called by:
  4865 ;;		_colourclick_readRGBC
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text22
  4870  004030                     __ptext22:
  4871                           	callstack 0
  4872  004030                     _colourclick_readB:
  4873                           	callstack 20
  4874  004030                     
  4875                           ;colour_click.c: 80:  unsigned int tmp;;colour_click.c: 81:  I2C_2_Master_Start();
  4876  004030  EC2C  F022         	call	_I2C_2_Master_Start	;wreg free
  4877                           
  4878                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  4879  004034  0E52               	movlw	82
  4880  004036  EC15  F022         	call	_I2C_2_Master_Write
  4881                           
  4882                           ;colour_click.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  4883  00403A  0EBA               	movlw	186
  4884  00403C  EC15  F022         	call	_I2C_2_Master_Write
  4885                           
  4886                           ;colour_click.c: 84:  I2C_2_Master_RepStart();
  4887  004040  EC31  F022         	call	_I2C_2_Master_RepStart	;wreg free
  4888                           
  4889                           ;colour_click.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  4890  004044  0E53               	movlw	83
  4891  004046  EC15  F022         	call	_I2C_2_Master_Write
  4892                           
  4893                           ;colour_click.c: 86:  tmp=I2C_2_Master_Read(1);
  4894  00404A  0E01               	movlw	1
  4895  00404C  ECB6  F020         	call	_I2C_2_Master_Read
  4896  004050  6E0F               	movwf	??_colourclick_readB^0,c
  4897  004052  500F               	movf	??_colourclick_readB^0,w,c
  4898  004054  6E12               	movwf	colourclick_readB@tmp^0,c
  4899  004056  6A13               	clrf	(colourclick_readB@tmp+1)^0,c
  4900                           
  4901                           ;colour_click.c: 87:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  4902  004058  0E00               	movlw	0
  4903  00405A  ECB6  F020         	call	_I2C_2_Master_Read
  4904  00405E  6E0F               	movwf	??_colourclick_readB^0,c
  4905  004060  500F               	movf	??_colourclick_readB^0,w,c
  4906  004062  6E11               	movwf	(??_colourclick_readB+2)^0,c
  4907  004064  6A10               	clrf	(??_colourclick_readB+1)^0,c
  4908  004066  5012               	movf	colourclick_readB@tmp^0,w,c
  4909  004068  1010               	iorwf	(??_colourclick_readB+1)^0,w,c
  4910  00406A  6E12               	movwf	colourclick_readB@tmp^0,c
  4911  00406C  5013               	movf	(colourclick_readB@tmp+1)^0,w,c
  4912  00406E  1011               	iorwf	(??_colourclick_readB+2)^0,w,c
  4913  004070  6E13               	movwf	(colourclick_readB@tmp+1)^0,c
  4914                           
  4915                           ;colour_click.c: 88:  I2C_2_Master_Stop();
  4916  004072  EC27  F022         	call	_I2C_2_Master_Stop	;wreg free
  4917  004076                     
  4918                           ;colour_click.c: 89:  return tmp;
  4919  004076  C012  F00D         	movff	colourclick_readB@tmp,?_colourclick_readB
  4920  00407A  C013  F00E         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  4921  00407E  0012               	return		;funcret
  4922  004080                     __end_of_colourclick_readB:
  4923                           	callstack 0
  4924                           
  4925 ;; *************** function _I2C_2_Master_Write *****************
  4926 ;; Defined at:
  4927 ;;		line 64 in file "I2C.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  data_byte       1    wreg     unsigned char 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  data_byte       1    9[COMRAM] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      void 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;Total ram usage:        1 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 8
  4948 ;; This function calls:
  4949 ;;		_I2C_2_Master_Idle
  4950 ;; This function is called by:
  4951 ;;		_interrupts_clear
  4952 ;;		_colourclick_writetoaddr
  4953 ;;		_colourclick_readR
  4954 ;;		_colourclick_readG
  4955 ;;		_colourclick_readB
  4956 ;;		_colourclick_readC
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text23
  4961  00442A                     __ptext23:
  4962                           	callstack 0
  4963  00442A                     _I2C_2_Master_Write:
  4964                           	callstack 18
  4965                           
  4966                           ;incstack = 0
  4967                           ;I2C_2_Master_Write@data_byte stored from wreg
  4968  00442A  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  4969  00442C                     
  4970                           ;I2C.c: 65:   I2C_2_Master_Idle();
  4971  00442C  EC21  F021         	call	_I2C_2_Master_Idle	;wreg free
  4972  004430                     
  4973                           ;I2C.c: 66:   SSP2BUF = data_byte;
  4974  004430  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4975  004434  0012               	return		;funcret
  4976  004436                     __end_of_I2C_2_Master_Write:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function _I2C_2_Master_Stop *****************
  4980 ;; Defined at:
  4981 ;;		line 55 in file "I2C.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;Total ram usage:        0 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; Hardware stack levels required when called: 8
  5002 ;; This function calls:
  5003 ;;		_I2C_2_Master_Idle
  5004 ;; This function is called by:
  5005 ;;		_interrupts_clear
  5006 ;;		_colourclick_writetoaddr
  5007 ;;		_colourclick_readR
  5008 ;;		_colourclick_readG
  5009 ;;		_colourclick_readB
  5010 ;;		_colourclick_readC
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text24
  5015  00444E                     __ptext24:
  5016                           	callstack 0
  5017  00444E                     _I2C_2_Master_Stop:
  5018                           	callstack 18
  5019  00444E                     
  5020                           ;I2C.c: 56:   I2C_2_Master_Idle();
  5021  00444E  EC21  F021         	call	_I2C_2_Master_Idle	;wreg free
  5022  004452                     
  5023                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  5024  004452  010E               	movlb	14	; () banked
  5025  004454  85DA               	bsf	218,2,b	;volatile
  5026  004456                     
  5027                           ; BSR set to: 14
  5028  004456  0012               	return		;funcret
  5029  004458                     __end_of_I2C_2_Master_Stop:
  5030                           	callstack 0
  5031                           
  5032 ;; *************** function _I2C_2_Master_Start *****************
  5033 ;; Defined at:
  5034 ;;		line 37 in file "I2C.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;Total ram usage:        0 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 8
  5055 ;; This function calls:
  5056 ;;		_I2C_2_Master_Idle
  5057 ;; This function is called by:
  5058 ;;		_interrupts_clear
  5059 ;;		_colourclick_writetoaddr
  5060 ;;		_colourclick_readR
  5061 ;;		_colourclick_readG
  5062 ;;		_colourclick_readB
  5063 ;;		_colourclick_readC
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text25
  5068  004458                     __ptext25:
  5069                           	callstack 0
  5070  004458                     _I2C_2_Master_Start:
  5071                           	callstack 18
  5072  004458                     
  5073                           ;I2C.c: 38:   I2C_2_Master_Idle();
  5074  004458  EC21  F021         	call	_I2C_2_Master_Idle	;wreg free
  5075  00445C                     
  5076                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  5077  00445C  010E               	movlb	14	; () banked
  5078  00445E  81DA               	bsf	218,0,b	;volatile
  5079  004460                     
  5080                           ; BSR set to: 14
  5081  004460  0012               	return		;funcret
  5082  004462                     __end_of_I2C_2_Master_Start:
  5083                           	callstack 0
  5084                           
  5085 ;; *************** function _I2C_2_Master_RepStart *****************
  5086 ;; Defined at:
  5087 ;;		line 46 in file "I2C.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; Hardware stack levels required when called: 8
  5108 ;; This function calls:
  5109 ;;		_I2C_2_Master_Idle
  5110 ;; This function is called by:
  5111 ;;		_colourclick_readR
  5112 ;;		_colourclick_readG
  5113 ;;		_colourclick_readB
  5114 ;;		_colourclick_readC
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text26
  5119  004462                     __ptext26:
  5120                           	callstack 0
  5121  004462                     _I2C_2_Master_RepStart:
  5122                           	callstack 20
  5123  004462                     
  5124                           ;I2C.c: 47:   I2C_2_Master_Idle();
  5125  004462  EC21  F021         	call	_I2C_2_Master_Idle	;wreg free
  5126  004466                     
  5127                           ;I2C.c: 48:   SSP2CON2bits.RSEN = 1;
  5128  004466  010E               	movlb	14	; () banked
  5129  004468  83DA               	bsf	218,1,b	;volatile
  5130  00446A                     
  5131                           ; BSR set to: 14
  5132  00446A  0012               	return		;funcret
  5133  00446C                     __end_of_I2C_2_Master_RepStart:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function _I2C_2_Master_Read *****************
  5137 ;; Defined at:
  5138 ;;		line 73 in file "I2C.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  ack             1    wreg     unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  ack             1   10[COMRAM] unsigned char 
  5143 ;;  tmp             1   11[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      unsigned char 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;Total ram usage:        3 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; Hardware stack levels required when called: 8
  5160 ;; This function calls:
  5161 ;;		_I2C_2_Master_Idle
  5162 ;; This function is called by:
  5163 ;;		_colourclick_readR
  5164 ;;		_colourclick_readG
  5165 ;;		_colourclick_readB
  5166 ;;		_colourclick_readC
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text27
  5171  00416C                     __ptext27:
  5172                           	callstack 0
  5173  00416C                     _I2C_2_Master_Read:
  5174                           	callstack 20
  5175                           
  5176                           ; BSR set to: 14
  5177                           ;incstack = 0
  5178                           ;I2C_2_Master_Read@ack stored from wreg
  5179  00416C  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  5180  00416E                     
  5181                           ;I2C.c: 74:   unsigned char tmp;;I2C.c: 75:   I2C_2_Master_Idle();
  5182  00416E  EC21  F021         	call	_I2C_2_Master_Idle	;wreg free
  5183  004172                     
  5184                           ;I2C.c: 76:   SSP2CON2bits.RCEN = 1;
  5185  004172  010E               	movlb	14	; () banked
  5186  004174  87DA               	bsf	218,3,b	;volatile
  5187                           
  5188                           ;I2C.c: 77:   I2C_2_Master_Idle();
  5189  004176  EC21  F021         	call	_I2C_2_Master_Idle	;wreg free
  5190  00417A                     
  5191                           ;I2C.c: 78:   tmp = SSP2BUF;
  5192  00417A  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5193                           
  5194                           ;I2C.c: 79:   I2C_2_Master_Idle();
  5195  00417E  EC21  F021         	call	_I2C_2_Master_Idle	;wreg free
  5196  004182                     
  5197                           ;I2C.c: 80:   SSP2CON2bits.ACKDT = !ack;
  5198  004182  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  5199  004184  B4D8               	btfsc	status,2,c
  5200  004186  EFC7  F020         	goto	u2951
  5201  00418A  EFCB  F020         	goto	u2950
  5202  00418E                     u2951:
  5203  00418E  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  5204  004190  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  5205  004192  EFCC  F020         	goto	u2968
  5206  004196                     u2950:
  5207  004196  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  5208  004198                     u2968:
  5209  004198  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  5210  00419A  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  5211  00419C  010E               	movlb	14	; () banked
  5212  00419E  51DA               	movf	218,w,b	;volatile
  5213  0041A0  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  5214  0041A2  0BDF               	andlw	-33
  5215  0041A4  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  5216  0041A6  6FDA               	movwf	218,b	;volatile
  5217  0041A8                     
  5218                           ; BSR set to: 14
  5219                           ;I2C.c: 81:   SSP2CON2bits.ACKEN = 1;
  5220  0041A8  89DA               	bsf	218,4,b	;volatile
  5221  0041AA                     
  5222                           ; BSR set to: 14
  5223                           ;I2C.c: 82:   return tmp;
  5224  0041AA  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  5225  0041AC                     
  5226                           ; BSR set to: 14
  5227  0041AC  0012               	return		;funcret
  5228  0041AE                     __end_of_I2C_2_Master_Read:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _I2C_2_Master_Idle *****************
  5232 ;; Defined at:
  5233 ;;		line 29 in file "I2C.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:        1 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 7
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_I2C_2_Master_Start
  5258 ;;		_I2C_2_Master_RepStart
  5259 ;;		_I2C_2_Master_Stop
  5260 ;;		_I2C_2_Master_Write
  5261 ;;		_I2C_2_Master_Read
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text28
  5266  004242                     __ptext28:
  5267                           	callstack 0
  5268  004242                     _I2C_2_Master_Idle:
  5269                           	callstack 18
  5270  004242                     l486:
  5271  004242  010E               	movlb	14	; () banked
  5272  004244  B5D8               	btfsc	216,2,b	;volatile
  5273  004246  EF27  F021         	goto	u2851
  5274  00424A  EF29  F021         	goto	u2850
  5275  00424E                     u2851:
  5276  00424E  EF21  F021         	goto	l486
  5277  004252                     u2850:
  5278  004252                     
  5279                           ; BSR set to: 14
  5280  004252  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5281  004256  0E1F               	movlw	31
  5282  004258  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  5283  00425A  A4D8               	btfss	status,2,c
  5284  00425C  EF32  F021         	goto	u2861
  5285  004260  EF34  F021         	goto	u2860
  5286  004264                     u2861:
  5287  004264  EF21  F021         	goto	l486
  5288  004268                     u2860:
  5289  004268                     
  5290                           ; BSR set to: 14
  5291  004268  0012               	return		;funcret
  5292  00426A                     __end_of_I2C_2_Master_Idle:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function _colourclickLEDs_C *****************
  5296 ;; Defined at:
  5297 ;;		line 67 in file "buttons_n_LEDs.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  tog             1    wreg     unsigned char 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  tog             1    8[COMRAM] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5315 ;;Total ram usage:        1 bytes
  5316 ;; Hardware stack levels used: 1
  5317 ;; Hardware stack levels required when called: 7
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_main
  5322 ;;		_colourclick_readRGBC2
  5323 ;;		_colourclick_calibration
  5324 ;;		_colourclickLEDs_init
  5325 ;;		_colourcards_testingRGBC
  5326 ;;		_colourcards_testingRGBC2
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text29
  5331  0042DC                     __ptext29:
  5332                           	callstack 0
  5333  0042DC                     _colourclickLEDs_C:
  5334                           	callstack 21
  5335                           
  5336                           ; BSR set to: 14
  5337                           ;incstack = 0
  5338                           ;colourclickLEDs_C@tog stored from wreg
  5339  0042DC  6E09               	movwf	colourclickLEDs_C@tog^0,c
  5340  0042DE                     
  5341                           ;buttons_n_LEDs.c: 68:     LATGbits.LATG1 = tog;
  5342  0042DE  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  5343  0042E0  D002               	bra	u4055
  5344  0042E2  927F               	bcf	127,1,c	;volatile
  5345  0042E4  D001               	bra	u4056
  5346  0042E6                     u4055:
  5347  0042E6  827F               	bsf	127,1,c	;volatile
  5348  0042E8                     u4056:
  5349                           
  5350                           ;buttons_n_LEDs.c: 69:     LATAbits.LATA4 = tog;
  5351  0042E8  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  5352  0042EA  D002               	bra	u4065
  5353  0042EC  9879               	bcf	121,4,c	;volatile
  5354  0042EE  D001               	bra	u4066
  5355  0042F0                     u4065:
  5356  0042F0  8879               	bsf	121,4,c	;volatile
  5357  0042F2                     u4066:
  5358                           
  5359                           ;buttons_n_LEDs.c: 70:     LATFbits.LATF7 = tog;
  5360  0042F2  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  5361  0042F4  D002               	bra	u4075
  5362  0042F6  9E7E               	bcf	126,7,c	;volatile
  5363  0042F8  D001               	bra	u4076
  5364  0042FA                     u4075:
  5365  0042FA  8E7E               	bsf	126,7,c	;volatile
  5366  0042FC                     u4076:
  5367  0042FC  0012               	return		;funcret
  5368  0042FE                     __end_of_colourclickLEDs_C:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _colourcards_normaliseRGBC *****************
  5372 ;; Defined at:
  5373 ;;		line 186 in file "colour_cards.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  abs             2   13[BANK0 ] PTR struct .
  5376 ;;		 -> colourcards_testingRGBC2@abs(8), main@current(8), 
  5377 ;;  rel             2   15[BANK0 ] PTR struct .
  5378 ;;		 -> colourcards_testingRGBC2@rel(12), colourcards_readRGBC@rel(12), 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  C               2   23[BANK0 ] unsigned int 
  5381 ;;  B               2   21[BANK0 ] unsigned int 
  5382 ;;  G               2   19[BANK0 ] unsigned int 
  5383 ;;  R               2   17[BANK0 ] unsigned int 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;Total ram usage:       12 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; Hardware stack levels required when called: 8
  5400 ;; This function calls:
  5401 ;;		___fldiv
  5402 ;;		___xxtofl
  5403 ;; This function is called by:
  5404 ;;		_colourcards_readRGBC
  5405 ;;		_colourcards_testingRGBC2
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text30
  5410  0033AE                     __ptext30:
  5411                           	callstack 0
  5412  0033AE                     _colourcards_normaliseRGBC:
  5413                           	callstack 21
  5414  0033AE                     
  5415                           ;colour_cards.c: 187:     unsigned int R = abs->R;
  5416  0033AE  C06D  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
  5417  0033B2  C06E  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
  5418  0033B6  CFDE F071          	movff	postinc2,colourcards_normaliseRGBC@R
  5419  0033BA  CFDD F072          	movff	postdec2,colourcards_normaliseRGBC@R+1
  5420  0033BE                     
  5421                           ;colour_cards.c: 188:     unsigned int G = abs->G;
  5422  0033BE  0100               	movlb	0	; () banked
  5423  0033C0  EE20 F002          	lfsr	2,2
  5424  0033C4  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  5425  0033C6  26D9               	addwf	fsr2l,f,c
  5426  0033C8  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  5427  0033CA  22DA               	addwfc	fsr2h,f,c
  5428  0033CC  CFDE F073          	movff	postinc2,colourcards_normaliseRGBC@G
  5429  0033D0  CFDD F074          	movff	postdec2,colourcards_normaliseRGBC@G+1
  5430  0033D4                     
  5431                           ; BSR set to: 0
  5432                           ;colour_cards.c: 189:     unsigned int B = abs->B;
  5433  0033D4  EE20 F004          	lfsr	2,4
  5434  0033D8  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  5435  0033DA  26D9               	addwf	fsr2l,f,c
  5436  0033DC  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  5437  0033DE  22DA               	addwfc	fsr2h,f,c
  5438  0033E0  CFDE F075          	movff	postinc2,colourcards_normaliseRGBC@B
  5439  0033E4  CFDD F076          	movff	postdec2,colourcards_normaliseRGBC@B+1
  5440  0033E8                     
  5441                           ; BSR set to: 0
  5442                           ;colour_cards.c: 190:     unsigned int C = abs->C;
  5443  0033E8  EE20 F006          	lfsr	2,6
  5444  0033EC  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  5445  0033EE  26D9               	addwf	fsr2l,f,c
  5446  0033F0  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  5447  0033F2  22DA               	addwfc	fsr2h,f,c
  5448  0033F4  CFDE F077          	movff	postinc2,colourcards_normaliseRGBC@C
  5449  0033F8  CFDD F078          	movff	postdec2,colourcards_normaliseRGBC@C+1
  5450  0033FC                     
  5451                           ; BSR set to: 0
  5452                           ;colour_cards.c: 192:     rel->R = (float)R/(float)C;
  5453  0033FC  C071  F009         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
  5454  003400  C072  F00A         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
  5455  003404  6A0B               	clrf	(___xxtofl@val+2)^0,c
  5456  003406  6A0C               	clrf	(___xxtofl@val+3)^0,c
  5457  003408  0E00               	movlw	0
  5458  00340A  ECFD  F018         	call	___xxtofl
  5459  00340E  C009  F040         	movff	?___xxtofl,___fldiv@b
  5460  003412  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  5461  003416  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  5462  00341A  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  5463  00341E  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  5464  003422  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  5465  003426  6A0B               	clrf	(___xxtofl@val+2)^0,c
  5466  003428  6A0C               	clrf	(___xxtofl@val+3)^0,c
  5467  00342A  0E00               	movlw	0
  5468  00342C  ECFD  F018         	call	___xxtofl
  5469  003430  C009  F044         	movff	?___xxtofl,___fldiv@a
  5470  003434  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  5471  003438  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  5472  00343C  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  5473  003440  ECAF  F00E         	call	___fldiv	;wreg free
  5474  003444  C06F  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
  5475  003448  C070  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
  5476  00344C  C040  FFDE         	movff	?___fldiv,postinc2
  5477  003450  C041  FFDE         	movff	?___fldiv+1,postinc2
  5478  003454  C042  FFDE         	movff	?___fldiv+2,postinc2
  5479  003458  C043  FFDE         	movff	?___fldiv+3,postinc2
  5480  00345C                     
  5481                           ;colour_cards.c: 193:     rel->G = (float)G/(float)C;
  5482  00345C  C073  F009         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
  5483  003460  C074  F00A         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
  5484  003464  6A0B               	clrf	(___xxtofl@val+2)^0,c
  5485  003466  6A0C               	clrf	(___xxtofl@val+3)^0,c
  5486  003468  0E00               	movlw	0
  5487  00346A  ECFD  F018         	call	___xxtofl
  5488  00346E  C009  F040         	movff	?___xxtofl,___fldiv@b
  5489  003472  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  5490  003476  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  5491  00347A  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  5492  00347E  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  5493  003482  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  5494  003486  6A0B               	clrf	(___xxtofl@val+2)^0,c
  5495  003488  6A0C               	clrf	(___xxtofl@val+3)^0,c
  5496  00348A  0E00               	movlw	0
  5497  00348C  ECFD  F018         	call	___xxtofl
  5498  003490  C009  F044         	movff	?___xxtofl,___fldiv@a
  5499  003494  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  5500  003498  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  5501  00349C  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  5502  0034A0  ECAF  F00E         	call	___fldiv	;wreg free
  5503  0034A4  0100               	movlb	0	; () banked
  5504  0034A6  EE20 F004          	lfsr	2,4
  5505  0034AA  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  5506  0034AC  26D9               	addwf	fsr2l,f,c
  5507  0034AE  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  5508  0034B0  22DA               	addwfc	fsr2h,f,c
  5509  0034B2  C040  FFDE         	movff	?___fldiv,postinc2
  5510  0034B6  C041  FFDE         	movff	?___fldiv+1,postinc2
  5511  0034BA  C042  FFDE         	movff	?___fldiv+2,postinc2
  5512  0034BE  C043  FFDE         	movff	?___fldiv+3,postinc2
  5513  0034C2                     
  5514                           ; BSR set to: 0
  5515                           ;colour_cards.c: 194:     rel->B = (float)B/(float)C;
  5516  0034C2  C075  F009         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
  5517  0034C6  C076  F00A         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
  5518  0034CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  5519  0034CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  5520  0034CE  0E00               	movlw	0
  5521  0034D0  ECFD  F018         	call	___xxtofl
  5522  0034D4  C009  F040         	movff	?___xxtofl,___fldiv@b
  5523  0034D8  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  5524  0034DC  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  5525  0034E0  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  5526  0034E4  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  5527  0034E8  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  5528  0034EC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  5529  0034EE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  5530  0034F0  0E00               	movlw	0
  5531  0034F2  ECFD  F018         	call	___xxtofl
  5532  0034F6  C009  F044         	movff	?___xxtofl,___fldiv@a
  5533  0034FA  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  5534  0034FE  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  5535  003502  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  5536  003506  ECAF  F00E         	call	___fldiv	;wreg free
  5537  00350A  0100               	movlb	0	; () banked
  5538  00350C  EE20 F008          	lfsr	2,8
  5539  003510  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  5540  003512  26D9               	addwf	fsr2l,f,c
  5541  003514  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  5542  003516  22DA               	addwfc	fsr2h,f,c
  5543  003518  C040  FFDE         	movff	?___fldiv,postinc2
  5544  00351C  C041  FFDE         	movff	?___fldiv+1,postinc2
  5545  003520  C042  FFDE         	movff	?___fldiv+2,postinc2
  5546  003524  C043  FFDE         	movff	?___fldiv+3,postinc2
  5547  003528                     
  5548                           ; BSR set to: 0
  5549  003528  0012               	return		;funcret
  5550  00352A                     __end_of_colourcards_normaliseRGBC:
  5551                           	callstack 0
  5552                           
  5553 ;; *************** function _checkbatterylevel *****************
  5554 ;; Defined at:
  5555 ;;		line 72 in file "DC_motors.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;		None
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  batterylevel    1   11[COMRAM] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5573 ;;Total ram usage:        2 bytes
  5574 ;; Hardware stack levels used: 1
  5575 ;; Hardware stack levels required when called: 8
  5576 ;; This function calls:
  5577 ;;		_ADC_getval
  5578 ;;		_colourclickLEDs_RGB
  5579 ;; This function is called by:
  5580 ;;		_main
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text31
  5585  0039E0                     __ptext31:
  5586                           	callstack 0
  5587  0039E0                     _checkbatterylevel:
  5588                           	callstack 22
  5589  0039E0                     
  5590                           ;DC_motors.c: 73:     unsigned char batterylevel;;DC_motors.c: 74:     batterylevel = AD
      +                          C_getval();
  5591  0039E0  ECF7  F021         	call	_ADC_getval	;wreg free
  5592  0039E4  6E0C               	movwf	checkbatterylevel@batterylevel^0,c
  5593  0039E6                     
  5594                           ;DC_motors.c: 75:     if (batterylevel<50) {
  5595  0039E6  0E32               	movlw	50
  5596  0039E8  600C               	cpfslt	checkbatterylevel@batterylevel^0,c
  5597  0039EA  EFF9  F01C         	goto	u4401
  5598  0039EE  EFFB  F01C         	goto	u4400
  5599  0039F2                     u4401:
  5600  0039F2  EF6A  F01D         	goto	l636
  5601  0039F6                     u4400:
  5602  0039F6                     l4449:
  5603                           
  5604                           ;DC_motors.c: 77:             LATDbits.LATD7 = !LATDbits.LATD7;
  5605  0039F6  AE7C               	btfss	124,7,c	;volatile
  5606  0039F8  EF00  F01D         	goto	u4411
  5607  0039FC  EF04  F01D         	goto	u4410
  5608  003A00                     u4411:
  5609  003A00  6A0B               	clrf	??_checkbatterylevel^0,c
  5610  003A02  2A0B               	incf	??_checkbatterylevel^0,f,c
  5611  003A04  EF05  F01D         	goto	u4428
  5612  003A08                     u4410:
  5613  003A08  6A0B               	clrf	??_checkbatterylevel^0,c
  5614  003A0A                     u4428:
  5615  003A0A  320B               	rrcf	??_checkbatterylevel^0,f,c
  5616  003A0C  320B               	rrcf	??_checkbatterylevel^0,f,c
  5617  003A0E  507C               	movf	124,w,c	;volatile
  5618  003A10  180B               	xorwf	??_checkbatterylevel^0,w,c
  5619  003A12  0B7F               	andlw	-129
  5620  003A14  180B               	xorwf	??_checkbatterylevel^0,w,c
  5621  003A16  6E7C               	movwf	124,c	;volatile
  5622                           
  5623                           ;DC_motors.c: 78:             LATHbits.LATH3 = !LATHbits.LATH3;
  5624  003A18  A680               	btfss	128,3,c	;volatile
  5625  003A1A  EF11  F01D         	goto	u4431
  5626  003A1E  EF15  F01D         	goto	u4430
  5627  003A22                     u4431:
  5628  003A22  6A0B               	clrf	??_checkbatterylevel^0,c
  5629  003A24  2A0B               	incf	??_checkbatterylevel^0,f,c
  5630  003A26  EF16  F01D         	goto	u4448
  5631  003A2A                     u4430:
  5632  003A2A  6A0B               	clrf	??_checkbatterylevel^0,c
  5633  003A2C                     u4448:
  5634  003A2C  460B               	rlncf	??_checkbatterylevel^0,f,c
  5635  003A2E  460B               	rlncf	??_checkbatterylevel^0,f,c
  5636  003A30  460B               	rlncf	??_checkbatterylevel^0,f,c
  5637  003A32  5080               	movf	128,w,c	;volatile
  5638  003A34  180B               	xorwf	??_checkbatterylevel^0,w,c
  5639  003A36  0BF7               	andlw	-9
  5640  003A38  180B               	xorwf	??_checkbatterylevel^0,w,c
  5641  003A3A  6E80               	movwf	128,c	;volatile
  5642                           
  5643                           ;DC_motors.c: 79:             LATDbits.LATD3 = !LATDbits.LATD3;
  5644  003A3C  A67C               	btfss	124,3,c	;volatile
  5645  003A3E  EF23  F01D         	goto	u4451
  5646  003A42  EF27  F01D         	goto	u4450
  5647  003A46                     u4451:
  5648  003A46  6A0B               	clrf	??_checkbatterylevel^0,c
  5649  003A48  2A0B               	incf	??_checkbatterylevel^0,f,c
  5650  003A4A  EF28  F01D         	goto	u4468
  5651  003A4E                     u4450:
  5652  003A4E  6A0B               	clrf	??_checkbatterylevel^0,c
  5653  003A50                     u4468:
  5654  003A50  460B               	rlncf	??_checkbatterylevel^0,f,c
  5655  003A52  460B               	rlncf	??_checkbatterylevel^0,f,c
  5656  003A54  460B               	rlncf	??_checkbatterylevel^0,f,c
  5657  003A56  507C               	movf	124,w,c	;volatile
  5658  003A58  180B               	xorwf	??_checkbatterylevel^0,w,c
  5659  003A5A  0BF7               	andlw	-9
  5660  003A5C  180B               	xorwf	??_checkbatterylevel^0,w,c
  5661  003A5E  6E7C               	movwf	124,c	;volatile
  5662                           
  5663                           ;DC_motors.c: 80:             LATDbits.LATD4 = !LATDbits.LATD4;
  5664  003A60  A87C               	btfss	124,4,c	;volatile
  5665  003A62  EF35  F01D         	goto	u4471
  5666  003A66  EF39  F01D         	goto	u4470
  5667  003A6A                     u4471:
  5668  003A6A  6A0B               	clrf	??_checkbatterylevel^0,c
  5669  003A6C  2A0B               	incf	??_checkbatterylevel^0,f,c
  5670  003A6E  EF3A  F01D         	goto	u4488
  5671  003A72                     u4470:
  5672  003A72  6A0B               	clrf	??_checkbatterylevel^0,c
  5673  003A74                     u4488:
  5674  003A74  3A0B               	swapf	??_checkbatterylevel^0,f,c
  5675  003A76  507C               	movf	124,w,c	;volatile
  5676  003A78  180B               	xorwf	??_checkbatterylevel^0,w,c
  5677  003A7A  0BEF               	andlw	-17
  5678  003A7C  180B               	xorwf	??_checkbatterylevel^0,w,c
  5679  003A7E  6E7C               	movwf	124,c	;volatile
  5680                           
  5681                           ;DC_motors.c: 81:             LATFbits.LATF0 = !LATFbits.LATF0;
  5682  003A80  A07E               	btfss	126,0,c	;volatile
  5683  003A82  EF45  F01D         	goto	u4491
  5684  003A86  EF49  F01D         	goto	u4490
  5685  003A8A                     u4491:
  5686  003A8A  6A0B               	clrf	??_checkbatterylevel^0,c
  5687  003A8C  2A0B               	incf	??_checkbatterylevel^0,f,c
  5688  003A8E  EF4A  F01D         	goto	u4508
  5689  003A92                     u4490:
  5690  003A92  6A0B               	clrf	??_checkbatterylevel^0,c
  5691  003A94                     u4508:
  5692  003A94  507E               	movf	126,w,c	;volatile
  5693  003A96  180B               	xorwf	??_checkbatterylevel^0,w,c
  5694  003A98  0BFE               	andlw	-2
  5695  003A9A  180B               	xorwf	??_checkbatterylevel^0,w,c
  5696  003A9C  6E7E               	movwf	126,c	;volatile
  5697                           
  5698                           ;DC_motors.c: 82:             LATHbits.LATH0 = !LATHbits.LATH0;
  5699  003A9E  A080               	btfss	128,0,c	;volatile
  5700  003AA0  EF54  F01D         	goto	u4511
  5701  003AA4  EF58  F01D         	goto	u4510
  5702  003AA8                     u4511:
  5703  003AA8  6A0B               	clrf	??_checkbatterylevel^0,c
  5704  003AAA  2A0B               	incf	??_checkbatterylevel^0,f,c
  5705  003AAC  EF59  F01D         	goto	u4528
  5706  003AB0                     u4510:
  5707  003AB0  6A0B               	clrf	??_checkbatterylevel^0,c
  5708  003AB2                     u4528:
  5709  003AB2  5080               	movf	128,w,c	;volatile
  5710  003AB4  180B               	xorwf	??_checkbatterylevel^0,w,c
  5711  003AB6  0BFE               	andlw	-2
  5712  003AB8  180B               	xorwf	??_checkbatterylevel^0,w,c
  5713  003ABA  6E80               	movwf	128,c	;volatile
  5714  003ABC                     
  5715                           ;DC_motors.c: 83:             colourclickLEDs_RGB();
  5716  003ABC  EC20  F01E         	call	_colourclickLEDs_RGB	;wreg free
  5717  003AC0                     
  5718                           ;DC_motors.c: 84:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5719  003AC0  0E68               	movlw	104
  5720  003AC2  6E0B               	movwf	??_checkbatterylevel^0,c
  5721  003AC4  0EE4               	movlw	228
  5722  003AC6                     u6997:
  5723  003AC6  2EE8               	decfsz	wreg,f,c
  5724  003AC8  D7FE               	bra	u6997
  5725  003ACA  2E0B               	decfsz	??_checkbatterylevel^0,f,c
  5726  003ACC  D7FC               	bra	u6997
  5727  003ACE  D000               	nop2	
  5728  003AD0  EFFB  F01C         	goto	l4449
  5729  003AD4                     l636:
  5730  003AD4  0012               	return		;funcret
  5731  003AD6                     __end_of_checkbatterylevel:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function _colourclickLEDs_RGB *****************
  5735 ;; Defined at:
  5736 ;;		line 46 in file "buttons_n_LEDs.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      void 
  5743 ;; Registers used:
  5744 ;;		wreg
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;Total ram usage:        2 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 7
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_checkbatterylevel
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text32
  5765  003C40                     __ptext32:
  5766                           	callstack 0
  5767  003C40                     _colourclickLEDs_RGB:
  5768                           	callstack 22
  5769  003C40                     
  5770                           ;buttons_n_LEDs.c: 47:     LATGbits.LATG1 = 1;
  5771  003C40  827F               	bsf	127,1,c	;volatile
  5772  003C42                     
  5773                           ;buttons_n_LEDs.c: 48:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5774  003C42  0E02               	movlw	2
  5775  003C44  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5776  003C46  0EA0               	movlw	160
  5777  003C48  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  5778  003C4A  0E92               	movlw	146
  5779  003C4C                     u7007:
  5780  003C4C  2EE8               	decfsz	wreg,f,c
  5781  003C4E  D7FE               	bra	u7007
  5782  003C50  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  5783  003C52  D7FC               	bra	u7007
  5784  003C54  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5785  003C56  D7FA               	bra	u7007
  5786  003C58  D000               	nop2	
  5787  003C5A                     
  5788                           ;buttons_n_LEDs.c: 49:     LATGbits.LATG1 = 0;
  5789  003C5A  927F               	bcf	127,1,c	;volatile
  5790                           
  5791                           ;buttons_n_LEDs.c: 50:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5792  003C5C  0E02               	movlw	2
  5793  003C5E  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5794  003C60  0EA0               	movlw	160
  5795  003C62  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  5796  003C64  0E92               	movlw	146
  5797  003C66                     u7017:
  5798  003C66  2EE8               	decfsz	wreg,f,c
  5799  003C68  D7FE               	bra	u7017
  5800  003C6A  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  5801  003C6C  D7FC               	bra	u7017
  5802  003C6E  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5803  003C70  D7FA               	bra	u7017
  5804  003C72  D000               	nop2	
  5805  003C74                     
  5806                           ;buttons_n_LEDs.c: 52:     LATAbits.LATA4 = 1;
  5807  003C74  8879               	bsf	121,4,c	;volatile
  5808                           
  5809                           ;buttons_n_LEDs.c: 53:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5810  003C76  0E02               	movlw	2
  5811  003C78  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5812  003C7A  0EA0               	movlw	160
  5813  003C7C  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  5814  003C7E  0E92               	movlw	146
  5815  003C80                     u7027:
  5816  003C80  2EE8               	decfsz	wreg,f,c
  5817  003C82  D7FE               	bra	u7027
  5818  003C84  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  5819  003C86  D7FC               	bra	u7027
  5820  003C88  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5821  003C8A  D7FA               	bra	u7027
  5822  003C8C  D000               	nop2	
  5823  003C8E                     
  5824                           ;buttons_n_LEDs.c: 54:     LATAbits.LATA4 = 0;
  5825  003C8E  9879               	bcf	121,4,c	;volatile
  5826                           
  5827                           ;buttons_n_LEDs.c: 55:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5828  003C90  0E02               	movlw	2
  5829  003C92  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5830  003C94  0EA0               	movlw	160
  5831  003C96  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  5832  003C98  0E92               	movlw	146
  5833  003C9A                     u7037:
  5834  003C9A  2EE8               	decfsz	wreg,f,c
  5835  003C9C  D7FE               	bra	u7037
  5836  003C9E  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  5837  003CA0  D7FC               	bra	u7037
  5838  003CA2  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5839  003CA4  D7FA               	bra	u7037
  5840  003CA6  D000               	nop2	
  5841  003CA8                     
  5842                           ;buttons_n_LEDs.c: 57:     LATFbits.LATF7 = 1;
  5843  003CA8  8E7E               	bsf	126,7,c	;volatile
  5844                           
  5845                           ;buttons_n_LEDs.c: 58:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5846  003CAA  0E02               	movlw	2
  5847  003CAC  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5848  003CAE  0EA0               	movlw	160
  5849  003CB0  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  5850  003CB2  0E92               	movlw	146
  5851  003CB4                     u7047:
  5852  003CB4  2EE8               	decfsz	wreg,f,c
  5853  003CB6  D7FE               	bra	u7047
  5854  003CB8  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  5855  003CBA  D7FC               	bra	u7047
  5856  003CBC  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5857  003CBE  D7FA               	bra	u7047
  5858  003CC0  D000               	nop2	
  5859  003CC2                     
  5860                           ;buttons_n_LEDs.c: 59:     LATFbits.LATF7 = 0;
  5861  003CC2  9E7E               	bcf	126,7,c	;volatile
  5862                           
  5863                           ;buttons_n_LEDs.c: 60:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5864  003CC4  0E02               	movlw	2
  5865  003CC6  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  5866  003CC8  0EA0               	movlw	160
  5867  003CCA  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  5868  003CCC  0E92               	movlw	146
  5869  003CCE                     u7057:
  5870  003CCE  2EE8               	decfsz	wreg,f,c
  5871  003CD0  D7FE               	bra	u7057
  5872  003CD2  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  5873  003CD4  D7FC               	bra	u7057
  5874  003CD6  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  5875  003CD8  D7FA               	bra	u7057
  5876  003CDA  D000               	nop2	
  5877  003CDC  0012               	return		;funcret
  5878  003CDE                     __end_of_colourclickLEDs_RGB:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function _ADC_getval *****************
  5882 ;; Defined at:
  5883 ;;		line 26 in file "ADC.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  tmpval          1    8[COMRAM] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      unsigned char 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;Total ram usage:        1 bytes
  5902 ;; Hardware stack levels used: 1
  5903 ;; Hardware stack levels required when called: 7
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_checkbatterylevel
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text33
  5912  0043EE                     __ptext33:
  5913                           	callstack 0
  5914  0043EE                     _ADC_getval:
  5915                           	callstack 22
  5916  0043EE                     
  5917                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  5918  0043EE  8060               	bsf	96,0,c	;volatile
  5919  0043F0                     l409:
  5920  0043F0  B060               	btfsc	96,0,c	;volatile
  5921  0043F2  EFFD  F021         	goto	u4211
  5922  0043F6  EFFF  F021         	goto	u4210
  5923  0043FA                     u4211:
  5924  0043FA  EFF8  F021         	goto	l409
  5925  0043FE                     u4210:
  5926  0043FE                     
  5927                           ;ADC.c: 31:     tmpval = ADRESH;
  5928  0043FE  CF64 F009          	movff	3940,ADC_getval@tmpval	;volatile
  5929  004402                     
  5930                           ;ADC.c: 34:     return tmpval;
  5931  004402  5009               	movf	ADC_getval@tmpval^0,w,c
  5932  004404  0012               	return		;funcret
  5933  004406                     __end_of_ADC_getval:
  5934                           	callstack 0
  5935                           
  5936 ;; *************** function _USART4_init *****************
  5937 ;; Defined at:
  5938 ;;		line 8 in file "serial_comm.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;Total ram usage:        0 bytes
  5957 ;; Hardware stack levels used: 1
  5958 ;; Hardware stack levels required when called: 7
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_main
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text34
  5967  004360                     __ptext34:
  5968                           	callstack 0
  5969  004360                     _USART4_init:
  5970                           	callstack 23
  5971  004360                     
  5972                           ;serial_comm.c: 9:     RC0PPS = 0x12;
  5973  004360  0E12               	movlw	18
  5974  004362  010E               	movlb	14	; () banked
  5975  004364  6F62               	movwf	98,b	;volatile
  5976                           
  5977                           ;serial_comm.c: 10:     RX4PPS = 0x11;
  5978  004366  0E11               	movlw	17
  5979  004368  6F15               	movwf	21,b	;volatile
  5980  00436A                     
  5981                           ; BSR set to: 14
  5982                           ;serial_comm.c: 11:     TRISCbits.TRISC1 = 1;
  5983  00436A  8283               	bsf	131,1,c	;volatile
  5984  00436C                     
  5985                           ; BSR set to: 14
  5986                           ;serial_comm.c: 13:     BAUD4CONbits.BRG16 = 0;
  5987  00436C  97E9               	bcf	233,3,b	;volatile
  5988  00436E                     
  5989                           ; BSR set to: 14
  5990                           ;serial_comm.c: 14:     TX4STAbits.BRGH = 0;
  5991  00436E  95E8               	bcf	232,2,b	;volatile
  5992                           
  5993                           ;serial_comm.c: 15:     SP4BRGL = 51;
  5994  004370  0E33               	movlw	51
  5995  004372  6FE5               	movwf	229,b	;volatile
  5996                           
  5997                           ;serial_comm.c: 16:     SP4BRGH = 0;
  5998  004374  0E00               	movlw	0
  5999  004376  6FE6               	movwf	230,b	;volatile
  6000  004378                     
  6001                           ; BSR set to: 14
  6002                           ;serial_comm.c: 18:     RC4STAbits.CREN = 1;
  6003  004378  89E7               	bsf	231,4,b	;volatile
  6004  00437A                     
  6005                           ; BSR set to: 14
  6006                           ;serial_comm.c: 19:     TX4STAbits.TXEN = 1;
  6007  00437A  8BE8               	bsf	232,5,b	;volatile
  6008  00437C                     
  6009                           ; BSR set to: 14
  6010                           ;serial_comm.c: 20:     RC4STAbits.SPEN = 1;
  6011  00437C  8FE7               	bsf	231,7,b	;volatile
  6012  00437E                     
  6013                           ; BSR set to: 14
  6014  00437E  0012               	return		;funcret
  6015  004380                     __end_of_USART4_init:
  6016                           	callstack 0
  6017                           
  6018 ;; *************** function _DCmotors_init *****************
  6019 ;; Defined at:
  6020 ;;		line 10 in file "DC_motors.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  PWMperiod       1    wreg     unsigned char 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  PWMperiod       1    8[COMRAM] unsigned char 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      void 
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6038 ;;Total ram usage:        1 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; Hardware stack levels required when called: 8
  6041 ;; This function calls:
  6042 ;;		_buggyLEDs_init
  6043 ;;		_clicker2LEDs_init
  6044 ;;		_clicker2buttons_init
  6045 ;; This function is called by:
  6046 ;;		_main
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text35
  6051  004080                     __ptext35:
  6052                           	callstack 0
  6053  004080                     _DCmotors_init:
  6054                           	callstack 22
  6055                           
  6056                           ; BSR set to: 14
  6057                           ;incstack = 0
  6058                           ;DCmotors_init@PWMperiod stored from wreg
  6059  004080  6E09               	movwf	DCmotors_init@PWMperiod^0,c
  6060  004082                     
  6061                           ;DC_motors.c: 12:     T2CONbits.CKPS=0b100;
  6062  004082  50BD               	movf	189,w,c	;volatile
  6063  004084  0B8F               	andlw	-113
  6064  004086  0940               	iorlw	64
  6065  004088  6EBD               	movwf	189,c	;volatile
  6066                           
  6067                           ;DC_motors.c: 13:     T2HLTbits.MODE=0b00000;
  6068  00408A  0EE0               	movlw	-32
  6069  00408C  16BE               	andwf	190,f,c	;volatile
  6070                           
  6071                           ;DC_motors.c: 14:     T2CLKCONbits.CS=0b0001;
  6072  00408E  50BF               	movf	191,w,c	;volatile
  6073  004090  0BF0               	andlw	-16
  6074  004092  0901               	iorlw	1
  6075  004094  6EBF               	movwf	191,c	;volatile
  6076  004096                     
  6077                           ;DC_motors.c: 17:     T2PR=PWMperiod;
  6078  004096  C009  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  6079  00409A                     
  6080                           ;DC_motors.c: 18:     T2CONbits.ON=1;
  6081  00409A  8EBD               	bsf	189,7,c	;volatile
  6082  00409C                     
  6083                           ;DC_motors.c: 21:     TRISEbits.TRISE2=0;
  6084  00409C  9485               	bcf	133,2,c	;volatile
  6085  00409E                     
  6086                           ;DC_motors.c: 22:     TRISEbits.TRISE4=0;
  6087  00409E  9885               	bcf	133,4,c	;volatile
  6088  0040A0                     
  6089                           ;DC_motors.c: 23:     TRISCbits.TRISC7=0;
  6090  0040A0  9E83               	bcf	131,7,c	;volatile
  6091  0040A2                     
  6092                           ;DC_motors.c: 24:     TRISGbits.TRISG6=0;
  6093  0040A2  9C87               	bcf	135,6,c	;volatile
  6094  0040A4                     
  6095                           ;DC_motors.c: 26:     LATEbits.LATE2=0;
  6096  0040A4  947D               	bcf	125,2,c	;volatile
  6097  0040A6                     
  6098                           ;DC_motors.c: 27:     LATEbits.LATE4=0;
  6099  0040A6  987D               	bcf	125,4,c	;volatile
  6100  0040A8                     
  6101                           ;DC_motors.c: 28:     LATCbits.LATC7=0;
  6102  0040A8  9E7B               	bcf	123,7,c	;volatile
  6103  0040AA                     
  6104                           ;DC_motors.c: 29:     LATGbits.LATG6=0;
  6105  0040AA  9C7F               	bcf	127,6,c	;volatile
  6106                           
  6107                           ;DC_motors.c: 31:     PWM6DCH=0;
  6108  0040AC  0E00               	movlw	0
  6109  0040AE  6EA3               	movwf	163,c	;volatile
  6110                           
  6111                           ;DC_motors.c: 32:     PWM7DCH=0;
  6112  0040B0  0E00               	movlw	0
  6113  0040B2  6EA0               	movwf	160,c	;volatile
  6114  0040B4                     
  6115                           ;DC_motors.c: 34:     PWM6CONbits.EN = 1;
  6116  0040B4  8EA4               	bsf	164,7,c	;volatile
  6117  0040B6                     
  6118                           ;DC_motors.c: 35:     PWM7CONbits.EN = 1;
  6119  0040B6  8EA1               	bsf	161,7,c	;volatile
  6120                           
  6121                           ;DC_motors.c: 37:     RE2PPS=0x0A;
  6122  0040B8  0E0A               	movlw	10
  6123  0040BA  010E               	movlb	14	; () banked
  6124  0040BC  6F74               	movwf	116,b	;volatile
  6125                           
  6126                           ;DC_motors.c: 38:     RC7PPS=0x0B;
  6127  0040BE  0E0B               	movlw	11
  6128  0040C0  6F69               	movwf	105,b	;volatile
  6129  0040C2                     
  6130                           ; BSR set to: 14
  6131                           ;DC_motors.c: 41:     clicker2buttons_init();
  6132  0040C2  EC1B  F022         	call	_clicker2buttons_init	;wreg free
  6133  0040C6                     
  6134                           ;DC_motors.c: 42:     clicker2LEDs_init();
  6135  0040C6  EC36  F022         	call	_clicker2LEDs_init	;wreg free
  6136  0040CA                     
  6137                           ;DC_motors.c: 43:     buggyLEDs_init();
  6138  0040CA  EC03  F022         	call	_buggyLEDs_init	;wreg free
  6139  0040CE  0012               	return		;funcret
  6140  0040D0                     __end_of_DCmotors_init:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function _clicker2buttons_init *****************
  6144 ;; Defined at:
  6145 ;;		line 8 in file "buttons_n_LEDs.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		None
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; Hardware stack levels required when called: 7
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_DCmotors_init
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text36
  6174  004436                     __ptext36:
  6175                           	callstack 0
  6176  004436                     _clicker2buttons_init:
  6177                           	callstack 22
  6178  004436                     
  6179                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
  6180  004436  8486               	bsf	134,2,c	;volatile
  6181                           
  6182                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
  6183  004438  8686               	bsf	134,3,c	;volatile
  6184                           
  6185                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  6186  00443A  010E               	movlb	14	; () banked
  6187  00443C  95B4               	bcf	180,2,b	;volatile
  6188                           
  6189                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  6190  00443E  97B4               	bcf	180,3,b	;volatile
  6191  004440                     
  6192                           ; BSR set to: 14
  6193  004440  0012               	return		;funcret
  6194  004442                     __end_of_clicker2buttons_init:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function _clicker2LEDs_init *****************
  6198 ;; Defined at:
  6199 ;;		line 20 in file "buttons_n_LEDs.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		None
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6217 ;;Total ram usage:        0 bytes
  6218 ;; Hardware stack levels used: 1
  6219 ;; Hardware stack levels required when called: 7
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		_DCmotors_init
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text37
  6228  00446C                     __ptext37:
  6229                           	callstack 0
  6230  00446C                     _clicker2LEDs_init:
  6231                           	callstack 22
  6232  00446C                     
  6233                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
  6234  00446C  9E84               	bcf	132,7,c	;volatile
  6235                           
  6236                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
  6237  00446E  9688               	bcf	136,3,c	;volatile
  6238                           
  6239                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
  6240  004470  9E7C               	bcf	124,7,c	;volatile
  6241                           
  6242                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
  6243  004472  9680               	bcf	128,3,c	;volatile
  6244  004474  0012               	return		;funcret
  6245  004476                     __end_of_clicker2LEDs_init:
  6246                           	callstack 0
  6247                           
  6248 ;; *************** function _buggyLEDs_init *****************
  6249 ;; Defined at:
  6250 ;;		line 77 in file "buttons_n_LEDs.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;		None
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		None
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6268 ;;Total ram usage:        0 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 7
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_DCmotors_init
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text38
  6279  004406                     __ptext38:
  6280                           	callstack 0
  6281  004406                     _buggyLEDs_init:
  6282                           	callstack 22
  6283  004406                     
  6284                           ;buttons_n_LEDs.c: 78:     TRISHbits.TRISH1 = 0;
  6285  004406  9288               	bcf	136,1,c	;volatile
  6286                           
  6287                           ;buttons_n_LEDs.c: 79:     TRISDbits.TRISD3 = 0;
  6288  004408  9684               	bcf	132,3,c	;volatile
  6289                           
  6290                           ;buttons_n_LEDs.c: 80:     TRISDbits.TRISD4 = 0;
  6291  00440A  9884               	bcf	132,4,c	;volatile
  6292                           
  6293                           ;buttons_n_LEDs.c: 81:     TRISFbits.TRISF0 = 0;
  6294  00440C  9086               	bcf	134,0,c	;volatile
  6295                           
  6296                           ;buttons_n_LEDs.c: 82:     TRISHbits.TRISH0 = 0;
  6297  00440E  9088               	bcf	136,0,c	;volatile
  6298                           
  6299                           ;buttons_n_LEDs.c: 84:     LATHbits.LATH1 = 0;
  6300  004410  9280               	bcf	128,1,c	;volatile
  6301                           
  6302                           ;buttons_n_LEDs.c: 85:     LATDbits.LATD3 = 0;
  6303  004412  967C               	bcf	124,3,c	;volatile
  6304                           
  6305                           ;buttons_n_LEDs.c: 86:     LATDbits.LATD4 = 0;
  6306  004414  987C               	bcf	124,4,c	;volatile
  6307                           
  6308                           ;buttons_n_LEDs.c: 87:     LATFbits.LATF0 = 0;
  6309  004416  907E               	bcf	126,0,c	;volatile
  6310                           
  6311                           ;buttons_n_LEDs.c: 88:     LATHbits.LATH0 = 0;
  6312  004418  9080               	bcf	128,0,c	;volatile
  6313  00441A  0012               	return		;funcret
  6314  00441C                     __end_of_buggyLEDs_init:
  6315                           	callstack 0
  6316                           
  6317 ;; *************** function _DCmotors_calibration *****************
  6318 ;; Defined at:
  6319 ;;		line 333 in file "DC_motors.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  mL              2   29[BANK0 ] PTR struct .
  6322 ;;		 -> main@motorL(9), 
  6323 ;;  mR              2   31[BANK0 ] PTR struct .
  6324 ;;		 -> main@motorR(9), 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  okay            1   33[BANK0 ] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1    wreg      void 
  6329 ;; Registers used:
  6330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6336 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6339 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6340 ;;Total ram usage:        7 bytes
  6341 ;; Hardware stack levels used: 1
  6342 ;; Hardware stack levels required when called: 10
  6343 ;; This function calls:
  6344 ;;		_adjdelay
  6345 ;;		_stop
  6346 ;;		_turnleft
  6347 ;;		_turnright
  6348 ;; This function is called by:
  6349 ;;		_main
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text39
  6354  002428                     __ptext39:
  6355                           	callstack 0
  6356  002428                     _DCmotors_calibration:
  6357                           	callstack 20
  6358  002428                     
  6359                           ;DC_motors.c: 334:     unsigned char okay = 0;
  6360  002428  0E00               	movlw	0
  6361  00242A  0100               	movlb	0	; () banked
  6362  00242C  6F81               	movwf	DCmotors_calibration@okay& (0+255),b
  6363  00242E                     l731:
  6364  00242E  A48E               	btfss	142,2,c	;volatile
  6365  002430  EF1C  F012         	goto	u5751
  6366  002434  EF1E  F012         	goto	u5750
  6367  002438                     u5751:
  6368  002438  EF6F  F013         	goto	l736
  6369  00243C                     u5750:
  6370  00243C  B68E               	btfsc	142,3,c	;volatile
  6371  00243E  EF23  F012         	goto	u5761
  6372  002442  EF25  F012         	goto	u5760
  6373  002446                     u5761:
  6374  002446  EF17  F012         	goto	l731
  6375  00244A                     u5760:
  6376  00244A  EF6F  F013         	goto	l736
  6377  00244E                     l737:
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;DC_motors.c: 338:         LATDbits.LATD3 = 1;
  6381  00244E  867C               	bsf	124,3,c	;volatile
  6382  002450                     
  6383                           ; BSR set to: 0
  6384                           ;DC_motors.c: 339:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6385  002450  0E09               	movlw	9
  6386  002452  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6387  002454  0E1E               	movlw	30
  6388  002456  6E4D               	movwf	??_DCmotors_calibration^0,c
  6389  002458  0EE4               	movlw	228
  6390  00245A                     u7067:
  6391  00245A  2EE8               	decfsz	wreg,f,c
  6392  00245C  D7FE               	bra	u7067
  6393  00245E  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6394  002460  D7FC               	bra	u7067
  6395  002462  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6396  002464  D7FA               	bra	u7067
  6397  002466  D000               	nop2	
  6398  002468                     
  6399                           ;DC_motors.c: 340:         turnright(mL, mR, 360);
  6400  002468  C07D  F06D         	movff	DCmotors_calibration@mL,turnright@mL
  6401  00246C  C07E  F06E         	movff	DCmotors_calibration@mL+1,turnright@mL+1
  6402  002470  C07F  F06F         	movff	DCmotors_calibration@mR,turnright@mR
  6403  002474  C080  F070         	movff	DCmotors_calibration@mR+1,turnright@mR+1
  6404  002478  0E01               	movlw	1
  6405  00247A  0100               	movlb	0	; () banked
  6406  00247C  6F72               	movwf	(turnright@deg+1)& (0+255),b
  6407  00247E  0E68               	movlw	104
  6408  002480  6F71               	movwf	turnright@deg& (0+255),b
  6409  002482  EC0D  F016         	call	_turnright	;wreg free
  6410  002486                     
  6411                           ;DC_motors.c: 341:         stop(mL, mR);
  6412  002486  C07D  F022         	movff	DCmotors_calibration@mL,stop@mL
  6413  00248A  C07E  F023         	movff	DCmotors_calibration@mL+1,stop@mL+1
  6414  00248E  C07F  F024         	movff	DCmotors_calibration@mR,stop@mR
  6415  002492  C080  F025         	movff	DCmotors_calibration@mR+1,stop@mR+1
  6416  002496  ECFD  F01E         	call	_stop	;wreg free
  6417  00249A                     l738:
  6418  00249A  A48E               	btfss	142,2,c	;volatile
  6419  00249C  EF52  F012         	goto	u5771
  6420  0024A0  EF54  F012         	goto	u5770
  6421  0024A4                     u5771:
  6422  0024A4  EF5B  F012         	goto	l742
  6423  0024A8                     u5770:
  6424  0024A8  B68E               	btfsc	142,3,c	;volatile
  6425  0024AA  EF59  F012         	goto	u5781
  6426  0024AE  EF5B  F012         	goto	u5780
  6427  0024B2                     u5781:
  6428  0024B2  EF4D  F012         	goto	l738
  6429  0024B6                     u5780:
  6430  0024B6                     l742:
  6431                           
  6432                           ;DC_motors.c: 344:         LATDbits.LATD3 = 0;
  6433  0024B6  967C               	bcf	124,3,c	;volatile
  6434  0024B8                     
  6435                           ;DC_motors.c: 345:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6436  0024B8  0E52               	movlw	82
  6437  0024BA  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6438  0024BC  0E2B               	movlw	43
  6439  0024BE  6E4D               	movwf	??_DCmotors_calibration^0,c
  6440  0024C0  0E00               	movlw	0
  6441  0024C2                     u7077:
  6442  0024C2  2EE8               	decfsz	wreg,f,c
  6443  0024C4  D7FE               	bra	u7077
  6444  0024C6  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6445  0024C8  D7FC               	bra	u7077
  6446  0024CA  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6447  0024CC  D7FA               	bra	u7077
  6448  0024CE  D000               	nop2	
  6449  0024D0                     
  6450                           ;DC_motors.c: 346:         adjdelay(1);
  6451  0024D0  0E01               	movlw	1
  6452  0024D2  EC95  F01A         	call	_adjdelay
  6453  0024D6                     
  6454                           ;DC_motors.c: 347:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6455  0024D6  0E52               	movlw	82
  6456  0024D8  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6457  0024DA  0E2B               	movlw	43
  6458  0024DC  6E4D               	movwf	??_DCmotors_calibration^0,c
  6459  0024DE  0E00               	movlw	0
  6460  0024E0                     u7087:
  6461  0024E0  2EE8               	decfsz	wreg,f,c
  6462  0024E2  D7FE               	bra	u7087
  6463  0024E4  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6464  0024E6  D7FC               	bra	u7087
  6465  0024E8  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6466  0024EA  D7FA               	bra	u7087
  6467  0024EC  D000               	nop2	
  6468  0024EE                     
  6469                           ;DC_motors.c: 349:         LATDbits.LATD3 = 1;
  6470  0024EE  867C               	bsf	124,3,c	;volatile
  6471  0024F0                     
  6472                           ;DC_motors.c: 350:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6473  0024F0  0E09               	movlw	9
  6474  0024F2  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6475  0024F4  0E1E               	movlw	30
  6476  0024F6  6E4D               	movwf	??_DCmotors_calibration^0,c
  6477  0024F8  0EE4               	movlw	228
  6478  0024FA                     u7097:
  6479  0024FA  2EE8               	decfsz	wreg,f,c
  6480  0024FC  D7FE               	bra	u7097
  6481  0024FE  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6482  002500  D7FC               	bra	u7097
  6483  002502  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6484  002504  D7FA               	bra	u7097
  6485  002506  D000               	nop2	
  6486  002508                     
  6487                           ;DC_motors.c: 351:         turnleft(mL, mR, 360);
  6488  002508  C07D  F06D         	movff	DCmotors_calibration@mL,turnleft@mL
  6489  00250C  C07E  F06E         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
  6490  002510  C07F  F06F         	movff	DCmotors_calibration@mR,turnleft@mR
  6491  002514  C080  F070         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
  6492  002518  0E01               	movlw	1
  6493  00251A  0100               	movlb	0	; () banked
  6494  00251C  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  6495  00251E  0E68               	movlw	104
  6496  002520  6F71               	movwf	turnleft@deg& (0+255),b
  6497  002522  EC10  F017         	call	_turnleft	;wreg free
  6498  002526                     
  6499                           ;DC_motors.c: 352:         stop(mL, mR);
  6500  002526  C07D  F022         	movff	DCmotors_calibration@mL,stop@mL
  6501  00252A  C07E  F023         	movff	DCmotors_calibration@mL+1,stop@mL+1
  6502  00252E  C07F  F024         	movff	DCmotors_calibration@mR,stop@mR
  6503  002532  C080  F025         	movff	DCmotors_calibration@mR+1,stop@mR+1
  6504  002536  ECFD  F01E         	call	_stop	;wreg free
  6505  00253A                     l743:
  6506  00253A  A48E               	btfss	142,2,c	;volatile
  6507  00253C  EFA2  F012         	goto	u5791
  6508  002540  EFA4  F012         	goto	u5790
  6509  002544                     u5791:
  6510  002544  EFAB  F012         	goto	l747
  6511  002548                     u5790:
  6512  002548  B68E               	btfsc	142,3,c	;volatile
  6513  00254A  EFA9  F012         	goto	u5801
  6514  00254E  EFAB  F012         	goto	u5800
  6515  002552                     u5801:
  6516  002552  EF9D  F012         	goto	l743
  6517  002556                     u5800:
  6518  002556                     l747:
  6519                           
  6520                           ;DC_motors.c: 355:         LATDbits.LATD3 = 0;
  6521  002556  967C               	bcf	124,3,c	;volatile
  6522  002558                     
  6523                           ;DC_motors.c: 356:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6524  002558  0E52               	movlw	82
  6525  00255A  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6526  00255C  0E2B               	movlw	43
  6527  00255E  6E4D               	movwf	??_DCmotors_calibration^0,c
  6528  002560  0E00               	movlw	0
  6529  002562                     u7107:
  6530  002562  2EE8               	decfsz	wreg,f,c
  6531  002564  D7FE               	bra	u7107
  6532  002566  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6533  002568  D7FC               	bra	u7107
  6534  00256A  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6535  00256C  D7FA               	bra	u7107
  6536  00256E  D000               	nop2	
  6537  002570                     
  6538                           ;DC_motors.c: 357:         adjdelay(2);
  6539  002570  0E02               	movlw	2
  6540  002572  EC95  F01A         	call	_adjdelay
  6541  002576                     
  6542                           ;DC_motors.c: 358:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6543  002576  0E52               	movlw	82
  6544  002578  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6545  00257A  0E2B               	movlw	43
  6546  00257C  6E4D               	movwf	??_DCmotors_calibration^0,c
  6547  00257E  0E00               	movlw	0
  6548  002580                     u7117:
  6549  002580  2EE8               	decfsz	wreg,f,c
  6550  002582  D7FE               	bra	u7117
  6551  002584  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6552  002586  D7FC               	bra	u7117
  6553  002588  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6554  00258A  D7FA               	bra	u7117
  6555  00258C  D000               	nop2	
  6556  00258E                     
  6557                           ;DC_motors.c: 361:         LATDbits.LATD3 = 1;
  6558  00258E  867C               	bsf	124,3,c	;volatile
  6559  002590                     
  6560                           ;DC_motors.c: 362:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6561  002590  0E09               	movlw	9
  6562  002592  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6563  002594  0E1E               	movlw	30
  6564  002596  6E4D               	movwf	??_DCmotors_calibration^0,c
  6565  002598  0EE4               	movlw	228
  6566  00259A                     u7127:
  6567  00259A  2EE8               	decfsz	wreg,f,c
  6568  00259C  D7FE               	bra	u7127
  6569  00259E  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6570  0025A0  D7FC               	bra	u7127
  6571  0025A2  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6572  0025A4  D7FA               	bra	u7127
  6573  0025A6  D000               	nop2	
  6574  0025A8                     
  6575                           ;DC_motors.c: 363:         turnright(mL, mR, 90);
  6576  0025A8  C07D  F06D         	movff	DCmotors_calibration@mL,turnright@mL
  6577  0025AC  C07E  F06E         	movff	DCmotors_calibration@mL+1,turnright@mL+1
  6578  0025B0  C07F  F06F         	movff	DCmotors_calibration@mR,turnright@mR
  6579  0025B4  C080  F070         	movff	DCmotors_calibration@mR+1,turnright@mR+1
  6580  0025B8  0E00               	movlw	0
  6581  0025BA  0100               	movlb	0	; () banked
  6582  0025BC  6F72               	movwf	(turnright@deg+1)& (0+255),b
  6583  0025BE  0E5A               	movlw	90
  6584  0025C0  6F71               	movwf	turnright@deg& (0+255),b
  6585  0025C2  EC0D  F016         	call	_turnright	;wreg free
  6586  0025C6                     
  6587                           ;DC_motors.c: 364:         stop(mL, mR);
  6588  0025C6  C07D  F022         	movff	DCmotors_calibration@mL,stop@mL
  6589  0025CA  C07E  F023         	movff	DCmotors_calibration@mL+1,stop@mL+1
  6590  0025CE  C07F  F024         	movff	DCmotors_calibration@mR,stop@mR
  6591  0025D2  C080  F025         	movff	DCmotors_calibration@mR+1,stop@mR+1
  6592  0025D6  ECFD  F01E         	call	_stop	;wreg free
  6593  0025DA                     
  6594                           ;DC_motors.c: 365:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6595  0025DA  0E52               	movlw	82
  6596  0025DC  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6597  0025DE  0E2B               	movlw	43
  6598  0025E0  6E4D               	movwf	??_DCmotors_calibration^0,c
  6599  0025E2  0E00               	movlw	0
  6600  0025E4                     u7137:
  6601  0025E4  2EE8               	decfsz	wreg,f,c
  6602  0025E6  D7FE               	bra	u7137
  6603  0025E8  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6604  0025EA  D7FC               	bra	u7137
  6605  0025EC  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6606  0025EE  D7FA               	bra	u7137
  6607  0025F0  D000               	nop2	
  6608  0025F2                     
  6609                           ;DC_motors.c: 367:         turnleft(mL, mR, 90);
  6610  0025F2  C07D  F06D         	movff	DCmotors_calibration@mL,turnleft@mL
  6611  0025F6  C07E  F06E         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
  6612  0025FA  C07F  F06F         	movff	DCmotors_calibration@mR,turnleft@mR
  6613  0025FE  C080  F070         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
  6614  002602  0E00               	movlw	0
  6615  002604  0100               	movlb	0	; () banked
  6616  002606  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  6617  002608  0E5A               	movlw	90
  6618  00260A  6F71               	movwf	turnleft@deg& (0+255),b
  6619  00260C  EC10  F017         	call	_turnleft	;wreg free
  6620  002610                     
  6621                           ;DC_motors.c: 368:         stop(mL, mR);
  6622  002610  C07D  F022         	movff	DCmotors_calibration@mL,stop@mL
  6623  002614  C07E  F023         	movff	DCmotors_calibration@mL+1,stop@mL+1
  6624  002618  C07F  F024         	movff	DCmotors_calibration@mR,stop@mR
  6625  00261C  C080  F025         	movff	DCmotors_calibration@mR+1,stop@mR+1
  6626  002620  ECFD  F01E         	call	_stop	;wreg free
  6627  002624                     
  6628                           ;DC_motors.c: 369:         LATDbits.LATD3 = 0;
  6629  002624  967C               	bcf	124,3,c	;volatile
  6630  002626                     
  6631                           ;DC_motors.c: 370:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6632  002626  0E52               	movlw	82
  6633  002628  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6634  00262A  0E2B               	movlw	43
  6635  00262C  6E4D               	movwf	??_DCmotors_calibration^0,c
  6636  00262E  0E00               	movlw	0
  6637  002630                     u7147:
  6638  002630  2EE8               	decfsz	wreg,f,c
  6639  002632  D7FE               	bra	u7147
  6640  002634  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6641  002636  D7FC               	bra	u7147
  6642  002638  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6643  00263A  D7FA               	bra	u7147
  6644  00263C  D000               	nop2	
  6645  00263E                     
  6646                           ;DC_motors.c: 373:         LATHbits.LATH3 = 1;
  6647  00263E  8680               	bsf	128,3,c	;volatile
  6648  002640                     
  6649                           ;DC_motors.c: 374:         LATDbits.LATD7 = 1;
  6650  002640  8E7C               	bsf	124,7,c	;volatile
  6651  002642                     l748:
  6652  002642  A48E               	btfss	142,2,c	;volatile
  6653  002644  EF26  F013         	goto	u5811
  6654  002648  EF28  F013         	goto	u5810
  6655  00264C                     u5811:
  6656  00264C  EF2F  F013         	goto	l752
  6657  002650                     u5810:
  6658  002650  B68E               	btfsc	142,3,c	;volatile
  6659  002652  EF2D  F013         	goto	u5821
  6660  002656  EF2F  F013         	goto	u5820
  6661  00265A                     u5821:
  6662  00265A  EF21  F013         	goto	l748
  6663  00265E                     u5820:
  6664  00265E                     l752:
  6665                           
  6666                           ;DC_motors.c: 376:         if(!PORTFbits.RF2 && PORTFbits.RF3){
  6667  00265E  B48E               	btfsc	142,2,c	;volatile
  6668  002660  EF34  F013         	goto	u5831
  6669  002664  EF36  F013         	goto	u5830
  6670  002668                     u5831:
  6671  002668  EF43  F013         	goto	l753
  6672  00266C                     u5830:
  6673  00266C  A68E               	btfss	142,3,c	;volatile
  6674  00266E  EF3B  F013         	goto	u5841
  6675  002672  EF3D  F013         	goto	u5840
  6676  002676                     u5841:
  6677  002676  EF43  F013         	goto	l753
  6678  00267A                     u5840:
  6679  00267A                     
  6680                           ;DC_motors.c: 377:             LATDbits.LATD7 = 0;
  6681  00267A  9E7C               	bcf	124,7,c	;volatile
  6682  00267C                     
  6683                           ;DC_motors.c: 378:             okay = 1;
  6684  00267C  0E01               	movlw	1
  6685  00267E  0100               	movlb	0	; () banked
  6686  002680  6F81               	movwf	DCmotors_calibration@okay& (0+255),b
  6687                           
  6688                           ;DC_motors.c: 379:         } else if(!PORTFbits.RF3 && PORTFbits.RF2){
  6689  002682  EF55  F013         	goto	l5231
  6690  002686                     l753:
  6691  002686  B68E               	btfsc	142,3,c	;volatile
  6692  002688  EF48  F013         	goto	u5851
  6693  00268C  EF4A  F013         	goto	u5850
  6694  002690                     u5851:
  6695  002690  EF55  F013         	goto	l5231
  6696  002694                     u5850:
  6697  002694  A48E               	btfss	142,2,c	;volatile
  6698  002696  EF4F  F013         	goto	u5861
  6699  00269A  EF51  F013         	goto	u5860
  6700  00269E                     u5861:
  6701  00269E  EF55  F013         	goto	l5231
  6702  0026A2                     u5860:
  6703  0026A2                     
  6704                           ;DC_motors.c: 380:             LATHbits.LATH3 = 0;
  6705  0026A2  9680               	bcf	128,3,c	;volatile
  6706  0026A4                     
  6707                           ;DC_motors.c: 381:             okay = 0;
  6708  0026A4  0E00               	movlw	0
  6709  0026A6  0100               	movlb	0	; () banked
  6710  0026A8  6F81               	movwf	DCmotors_calibration@okay& (0+255),b
  6711  0026AA                     l5231:
  6712                           
  6713                           ;DC_motors.c: 383:         _delay((unsigned long)((200)*(64000000/4000.0)));
  6714  0026AA  0E11               	movlw	17
  6715  0026AC  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6716  0026AE  0E3C               	movlw	60
  6717  0026B0  6E4D               	movwf	??_DCmotors_calibration^0,c
  6718  0026B2  0ECB               	movlw	203
  6719  0026B4                     u7157:
  6720  0026B4  2EE8               	decfsz	wreg,f,c
  6721  0026B6  D7FE               	bra	u7157
  6722  0026B8  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6723  0026BA  D7FC               	bra	u7157
  6724  0026BC  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6725  0026BE  D7FA               	bra	u7157
  6726  0026C0  F000               	nop	
  6727  0026C2                     
  6728                           ;DC_motors.c: 384:         LATHbits.LATH3 = 0;
  6729  0026C2  9680               	bcf	128,3,c	;volatile
  6730  0026C4                     
  6731                           ;DC_motors.c: 385:         LATDbits.LATD7 = 0;
  6732  0026C4  9E7C               	bcf	124,7,c	;volatile
  6733  0026C6                     
  6734                           ;DC_motors.c: 386:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6735  0026C6  0E52               	movlw	82
  6736  0026C8  6E4E               	movwf	(??_DCmotors_calibration+1)^0,c
  6737  0026CA  0E2B               	movlw	43
  6738  0026CC  6E4D               	movwf	??_DCmotors_calibration^0,c
  6739  0026CE  0E00               	movlw	0
  6740  0026D0                     u7167:
  6741  0026D0  2EE8               	decfsz	wreg,f,c
  6742  0026D2  D7FE               	bra	u7167
  6743  0026D4  2E4D               	decfsz	??_DCmotors_calibration^0,f,c
  6744  0026D6  D7FC               	bra	u7167
  6745  0026D8  2E4E               	decfsz	(??_DCmotors_calibration+1)^0,f,c
  6746  0026DA  D7FA               	bra	u7167
  6747  0026DC  D000               	nop2	
  6748  0026DE                     l736:
  6749                           
  6750                           ;DC_motors.c: 336:     while(okay<1){
  6751  0026DE  0100               	movlb	0	; () banked
  6752  0026E0  5181               	movf	DCmotors_calibration@okay& (0+255),w,b
  6753  0026E2  B4D8               	btfsc	status,2,c
  6754  0026E4  EF76  F013         	goto	u5871
  6755  0026E8  EF78  F013         	goto	u5870
  6756  0026EC                     u5871:
  6757  0026EC  EF27  F012         	goto	l737
  6758  0026F0                     u5870:
  6759  0026F0                     
  6760                           ; BSR set to: 0
  6761  0026F0  0012               	return		;funcret
  6762  0026F2                     __end_of_DCmotors_calibration:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function _turnright *****************
  6766 ;; Defined at:
  6767 ;;		line 195 in file "DC_motors.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  mL              2   13[BANK0 ] PTR struct .
  6770 ;;		 -> main@motorL(9), 
  6771 ;;  mR              2   15[BANK0 ] PTR struct .
  6772 ;;		 -> main@motorR(9), 
  6773 ;;  deg             2   17[BANK0 ] unsigned int 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  delay           4   19[BANK0 ] unsigned int 
  6776 ;;  i               2   27[BANK0 ] unsigned int 
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6786 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;Total ram usage:       17 bytes
  6791 ;; Hardware stack levels used: 1
  6792 ;; Hardware stack levels required when called: 9
  6793 ;; This function calls:
  6794 ;;		_DCmotors_setPWM
  6795 ;;		___fladd
  6796 ;;		___fldiv
  6797 ;;		___flge
  6798 ;;		___flmul
  6799 ;;		___xxtofl
  6800 ;; This function is called by:
  6801 ;;		_instructions
  6802 ;;		_reverseinstructions
  6803 ;;		_DCmotors_calibration
  6804 ;;		_DCmotors_testing
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text40
  6809  002C1A                     __ptext40:
  6810                           	callstack 0
  6811  002C1A                     _turnright:
  6812                           	callstack 19
  6813  002C1A                     
  6814                           ;DC_motors.c: 197:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  6815  002C1A  0E23               	movlw	35
  6816  002C1C  6E34               	movwf	___fladd@a^0,c
  6817  002C1E  0EDB               	movlw	219
  6818  002C20  6E35               	movwf	(___fladd@a+1)^0,c
  6819  002C22  0E7B               	movlw	123
  6820  002C24  6E36               	movwf	(___fladd@a+2)^0,c
  6821  002C26  0E42               	movlw	66
  6822  002C28  6E37               	movwf	(___fladd@a+3)^0,c
  6823  002C2A  0E6F               	movlw	111
  6824  002C2C  6E1B               	movwf	___flmul@a^0,c
  6825  002C2E  0EF0               	movlw	240
  6826  002C30  6E1C               	movwf	(___flmul@a+1)^0,c
  6827  002C32  0E01               	movlw	1
  6828  002C34  6E1D               	movwf	(___flmul@a+2)^0,c
  6829  002C36  0E40               	movlw	64
  6830  002C38  6E1E               	movwf	(___flmul@a+3)^0,c
  6831  002C3A  C071  F009         	movff	turnright@deg,___xxtofl@val
  6832  002C3E  C072  F00A         	movff	turnright@deg+1,___xxtofl@val+1
  6833  002C42  6A0B               	clrf	(___xxtofl@val+2)^0,c
  6834  002C44  6A0C               	clrf	(___xxtofl@val+3)^0,c
  6835  002C46  0E00               	movlw	0
  6836  002C48  ECFD  F018         	call	___xxtofl
  6837  002C4C  C009  F017         	movff	?___xxtofl,___flmul@b
  6838  002C50  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  6839  002C54  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  6840  002C58  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  6841  002C5C  EC9A  F00C         	call	___flmul	;wreg free
  6842  002C60  C017  F030         	movff	?___flmul,___fladd@b
  6843  002C64  C018  F031         	movff	?___flmul+1,___fladd@b+1
  6844  002C68  C019  F032         	movff	?___flmul+2,___fladd@b+2
  6845  002C6C  C01A  F033         	movff	?___flmul+3,___fladd@b+3
  6846  002C70  EC3A  F00A         	call	___fladd	;wreg free
  6847  002C74  C030  F077         	movff	?___fladd,_turnright$3220
  6848  002C78  C031  F078         	movff	?___fladd+1,_turnright$3220+1
  6849  002C7C  C032  F079         	movff	?___fladd+2,_turnright$3220+2
  6850  002C80  C033  F07A         	movff	?___fladd+3,_turnright$3220+3
  6851                           
  6852                           ;DC_motors.c: 197:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  6853  002C84  0E00               	movlw	0
  6854  002C86  6E1B               	movwf	___flmul@a^0,c
  6855  002C88  0E00               	movlw	0
  6856  002C8A  6E1C               	movwf	(___flmul@a+1)^0,c
  6857  002C8C  0EB4               	movlw	180
  6858  002C8E  6E1D               	movwf	(___flmul@a+2)^0,c
  6859  002C90  0E43               	movlw	67
  6860  002C92  6E1E               	movwf	(___flmul@a+3)^0,c
  6861  002C94  C077  F017         	movff	_turnright$3220,___flmul@b
  6862  002C98  C078  F018         	movff	_turnright$3220+1,___flmul@b+1
  6863  002C9C  C079  F019         	movff	_turnright$3220+2,___flmul@b+2
  6864  002CA0  C07A  F01A         	movff	_turnright$3220+3,___flmul@b+3
  6865  002CA4  EC9A  F00C         	call	___flmul	;wreg free
  6866  002CA8  C017  F040         	movff	?___flmul,___fldiv@b
  6867  002CAC  C018  F041         	movff	?___flmul+1,___fldiv@b+1
  6868  002CB0  C019  F042         	movff	?___flmul+2,___fldiv@b+2
  6869  002CB4  C01A  F043         	movff	?___flmul+3,___fldiv@b+3
  6870  002CB8  C04F  F009         	movff	_turnright_calangle,___xxtofl@val	;volatile
  6871  002CBC  C050  F00A         	movff	_turnright_calangle+1,___xxtofl@val+1	;volatile
  6872  002CC0  0E00               	movlw	0
  6873  002CC2  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  6874  002CC4  0EFF               	movlw	-1
  6875  002CC6  6E0B               	movwf	(___xxtofl@val+2)^0,c
  6876  002CC8  6E0C               	movwf	(___xxtofl@val+3)^0,c
  6877  002CCA  0E01               	movlw	1
  6878  002CCC  ECFD  F018         	call	___xxtofl
  6879  002CD0  C009  F044         	movff	?___xxtofl,___fldiv@a
  6880  002CD4  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  6881  002CD8  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  6882  002CDC  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  6883  002CE0  ECAF  F00E         	call	___fldiv	;wreg free
  6884  002CE4  C040  F073         	movff	?___fldiv,turnright@delay
  6885  002CE8  C041  F074         	movff	?___fldiv+1,turnright@delay+1
  6886  002CEC  C042  F075         	movff	?___fldiv+2,turnright@delay+2
  6887  002CF0  C043  F076         	movff	?___fldiv+3,turnright@delay+3
  6888  002CF4                     
  6889                           ;DC_motors.c: 200:     mL->direction = 1;
  6890  002CF4  0100               	movlb	0	; () banked
  6891  002CF6  EE20 F001          	lfsr	2,1
  6892  002CFA  516D               	movf	turnright@mL& (0+255),w,b
  6893  002CFC  26D9               	addwf	fsr2l,f,c
  6894  002CFE  516E               	movf	(turnright@mL+1)& (0+255),w,b
  6895  002D00  22DA               	addwfc	fsr2h,f,c
  6896  002D02  0E01               	movlw	1
  6897  002D04  6EDF               	movwf	indf2,c
  6898  002D06                     
  6899                           ; BSR set to: 0
  6900                           ;DC_motors.c: 201:     mR->direction = 0;
  6901  002D06  EE20 F001          	lfsr	2,1
  6902  002D0A  516F               	movf	turnright@mR& (0+255),w,b
  6903  002D0C  26D9               	addwf	fsr2l,f,c
  6904  002D0E  5170               	movf	(turnright@mR+1)& (0+255),w,b
  6905  002D10  22DA               	addwfc	fsr2h,f,c
  6906  002D12  0E00               	movlw	0
  6907  002D14  6EDF               	movwf	indf2,c
  6908  002D16                     
  6909                           ; BSR set to: 0
  6910                           ;DC_motors.c: 204:     LATHbits.LATH0 = 1;
  6911  002D16  8080               	bsf	128,0,c	;volatile
  6912                           
  6913                           ;DC_motors.c: 205:     while((mL->power < 70) || (mR->power < 70)){
  6914  002D18  EFC2  F016         	goto	l5039
  6915  002D1C                     l5025:
  6916                           
  6917                           ;DC_motors.c: 207:         if (mL->power < 70) {mL->power += 10;}
  6918  002D1C  C06D  FFD9         	movff	turnright@mL,fsr2l
  6919  002D20  C06E  FFDA         	movff	turnright@mL+1,fsr2h
  6920  002D24  0E46               	movlw	70
  6921  002D26  60DF               	cpfslt	indf2,c
  6922  002D28  EF98  F016         	goto	u5551
  6923  002D2C  EF9A  F016         	goto	u5550
  6924  002D30                     u5551:
  6925  002D30  EFA0  F016         	goto	l5029
  6926  002D34                     u5550:
  6927  002D34  C06D  FFD9         	movff	turnright@mL,fsr2l
  6928  002D38  C06E  FFDA         	movff	turnright@mL+1,fsr2h
  6929  002D3C  0E0A               	movlw	10
  6930  002D3E  26DF               	addwf	indf2,f,c
  6931  002D40                     l5029:
  6932                           
  6933                           ;DC_motors.c: 208:         if (mR->power < 70) {mR->power += 10;}
  6934  002D40  C06F  FFD9         	movff	turnright@mR,fsr2l
  6935  002D44  C070  FFDA         	movff	turnright@mR+1,fsr2h
  6936  002D48  0E46               	movlw	70
  6937  002D4A  60DF               	cpfslt	indf2,c
  6938  002D4C  EFAA  F016         	goto	u5561
  6939  002D50  EFAC  F016         	goto	u5560
  6940  002D54                     u5561:
  6941  002D54  EFB2  F016         	goto	l5033
  6942  002D58                     u5560:
  6943  002D58  C06F  FFD9         	movff	turnright@mR,fsr2l
  6944  002D5C  C070  FFDA         	movff	turnright@mR+1,fsr2h
  6945  002D60  0E0A               	movlw	10
  6946  002D62  26DF               	addwf	indf2,f,c
  6947  002D64                     l5033:
  6948                           
  6949                           ;DC_motors.c: 211:         DCmotors_setPWM(mL);
  6950  002D64  C06D  F017         	movff	turnright@mL,DCmotors_setPWM@m
  6951  002D68  C06E  F018         	movff	turnright@mL+1,DCmotors_setPWM@m+1
  6952  002D6C  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  6953  002D70                     
  6954                           ;DC_motors.c: 212:         DCmotors_setPWM(mR);
  6955  002D70  C06F  F017         	movff	turnright@mR,DCmotors_setPWM@m
  6956  002D74  C070  F018         	movff	turnright@mR+1,DCmotors_setPWM@m+1
  6957  002D78  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  6958  002D7C                     
  6959                           ;DC_motors.c: 213:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6960  002D7C  0EA0               	movlw	160
  6961  002D7E                     u7177:
  6962  002D7E  D000               	nop2	
  6963  002D80  2EE8               	decfsz	wreg,f,c
  6964  002D82  D7FD               	bra	u7177
  6965  002D84                     l5039:
  6966                           
  6967                           ;DC_motors.c: 205:     while((mL->power < 70) || (mR->power < 70)){
  6968  002D84  C06D  FFD9         	movff	turnright@mL,fsr2l
  6969  002D88  C06E  FFDA         	movff	turnright@mL+1,fsr2h
  6970  002D8C  0E45               	movlw	69
  6971  002D8E  64DF               	cpfsgt	indf2,c
  6972  002D90  EFCC  F016         	goto	u5571
  6973  002D94  EFCE  F016         	goto	u5570
  6974  002D98                     u5571:
  6975  002D98  EF8E  F016         	goto	l5025
  6976  002D9C                     u5570:
  6977  002D9C  C06F  FFD9         	movff	turnright@mR,fsr2l
  6978  002DA0  C070  FFDA         	movff	turnright@mR+1,fsr2h
  6979  002DA4  0E45               	movlw	69
  6980  002DA6  64DF               	cpfsgt	indf2,c
  6981  002DA8  EFD8  F016         	goto	u5581
  6982  002DAC  EFDA  F016         	goto	u5580
  6983  002DB0                     u5581:
  6984  002DB0  EF8E  F016         	goto	l5025
  6985  002DB4                     u5580:
  6986  002DB4                     
  6987                           ;DC_motors.c: 216:     unsigned int i;;DC_motors.c: 217:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  6988  002DB4  0E00               	movlw	0
  6989  002DB6  0100               	movlb	0	; () banked
  6990  002DB8  6F7C               	movwf	(turnright@i+1)& (0+255),b
  6991  002DBA  0E00               	movlw	0
  6992  002DBC  6F7B               	movwf	turnright@i& (0+255),b
  6993  002DBE  EFEC  F016         	goto	l5049
  6994  002DC2                     l5045:
  6995  002DC2  0E15               	movlw	21
  6996  002DC4  6E4C               	movwf	??_turnright^0,c
  6997  002DC6  0EC6               	movlw	198
  6998  002DC8                     u7187:
  6999  002DC8  2EE8               	decfsz	wreg,f,c
  7000  002DCA  D7FE               	bra	u7187
  7001  002DCC  2E4C               	decfsz	??_turnright^0,f,c
  7002  002DCE  D7FC               	bra	u7187
  7003  002DD0  D000               	nop2	
  7004  002DD2  0100               	movlb	0	; () banked
  7005  002DD4  4B7B               	infsnz	turnright@i& (0+255),f,b
  7006  002DD6  2B7C               	incf	(turnright@i+1)& (0+255),f,b
  7007  002DD8                     l5049:
  7008                           
  7009                           ; BSR set to: 0
  7010  002DD8  C07B  F009         	movff	turnright@i,___xxtofl@val
  7011  002DDC  C07C  F00A         	movff	turnright@i+1,___xxtofl@val+1
  7012  002DE0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7013  002DE2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7014  002DE4  0E00               	movlw	0
  7015  002DE6  ECFD  F018         	call	___xxtofl
  7016  002DEA  C009  F017         	movff	?___xxtofl,___flge@ff1
  7017  002DEE  C00A  F018         	movff	?___xxtofl+1,___flge@ff1+1
  7018  002DF2  C00B  F019         	movff	?___xxtofl+2,___flge@ff1+2
  7019  002DF6  C00C  F01A         	movff	?___xxtofl+3,___flge@ff1+3
  7020  002DFA  C073  F01B         	movff	turnright@delay,___flge@ff2
  7021  002DFE  C074  F01C         	movff	turnright@delay+1,___flge@ff2+1
  7022  002E02  C075  F01D         	movff	turnright@delay+2,___flge@ff2+2
  7023  002E06  C076  F01E         	movff	turnright@delay+3,___flge@ff2+3
  7024  002E0A  ECF2  F01B         	call	___flge	;wreg free
  7025  002E0E  A0D8               	btfss	status,0,c
  7026  002E10  EF0C  F017         	goto	u5591
  7027  002E14  EF0E  F017         	goto	u5590
  7028  002E18                     u5591:
  7029  002E18  EFE1  F016         	goto	l5045
  7030  002E1C                     u5590:
  7031  002E1C                     
  7032                           ;DC_motors.c: 219:     LATHbits.LATH0 = 0;
  7033  002E1C  9080               	bcf	128,0,c	;volatile
  7034  002E1E  0012               	return		;funcret
  7035  002E20                     __end_of_turnright:
  7036                           	callstack 0
  7037                           
  7038 ;; *************** function _turnleft *****************
  7039 ;; Defined at:
  7040 ;;		line 165 in file "DC_motors.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  mL              2   13[BANK0 ] PTR struct .
  7043 ;;		 -> main@motorL(9), 
  7044 ;;  mR              2   15[BANK0 ] PTR struct .
  7045 ;;		 -> main@motorR(9), 
  7046 ;;  deg             2   17[BANK0 ] unsigned int 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  delay           4   19[BANK0 ] unsigned int 
  7049 ;;  i               2   27[BANK0 ] unsigned int 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7059 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;Total ram usage:       17 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 9
  7066 ;; This function calls:
  7067 ;;		_DCmotors_setPWM
  7068 ;;		___fladd
  7069 ;;		___fldiv
  7070 ;;		___flge
  7071 ;;		___flmul
  7072 ;;		___xxtofl
  7073 ;; This function is called by:
  7074 ;;		_instructions
  7075 ;;		_reverseinstructions
  7076 ;;		_DCmotors_calibration
  7077 ;;		_DCmotors_testing
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text41
  7082  002E20                     __ptext41:
  7083                           	callstack 0
  7084  002E20                     _turnleft:
  7085                           	callstack 19
  7086  002E20                     
  7087                           ;DC_motors.c: 167:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  7088  002E20  0E4A               	movlw	74
  7089  002E22  6E34               	movwf	___fladd@a^0,c
  7090  002E24  0E0C               	movlw	12
  7091  002E26  6E35               	movwf	(___fladd@a+1)^0,c
  7092  002E28  0EFC               	movlw	252
  7093  002E2A  6E36               	movwf	(___fladd@a+2)^0,c
  7094  002E2C  0E41               	movlw	65
  7095  002E2E  6E37               	movwf	(___fladd@a+3)^0,c
  7096  002E30  0E7D               	movlw	125
  7097  002E32  6E1B               	movwf	___flmul@a^0,c
  7098  002E34  0E3F               	movlw	63
  7099  002E36  6E1C               	movwf	(___flmul@a+1)^0,c
  7100  002E38  0E15               	movlw	21
  7101  002E3A  6E1D               	movwf	(___flmul@a+2)^0,c
  7102  002E3C  0E40               	movlw	64
  7103  002E3E  6E1E               	movwf	(___flmul@a+3)^0,c
  7104  002E40  C071  F009         	movff	turnleft@deg,___xxtofl@val
  7105  002E44  C072  F00A         	movff	turnleft@deg+1,___xxtofl@val+1
  7106  002E48  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7107  002E4A  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7108  002E4C  0E00               	movlw	0
  7109  002E4E  ECFD  F018         	call	___xxtofl
  7110  002E52  C009  F017         	movff	?___xxtofl,___flmul@b
  7111  002E56  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  7112  002E5A  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  7113  002E5E  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  7114  002E62  EC9A  F00C         	call	___flmul	;wreg free
  7115  002E66  C017  F030         	movff	?___flmul,___fladd@b
  7116  002E6A  C018  F031         	movff	?___flmul+1,___fladd@b+1
  7117  002E6E  C019  F032         	movff	?___flmul+2,___fladd@b+2
  7118  002E72  C01A  F033         	movff	?___flmul+3,___fladd@b+3
  7119  002E76  EC3A  F00A         	call	___fladd	;wreg free
  7120  002E7A  C030  F077         	movff	?___fladd,_turnleft$3219
  7121  002E7E  C031  F078         	movff	?___fladd+1,_turnleft$3219+1
  7122  002E82  C032  F079         	movff	?___fladd+2,_turnleft$3219+2
  7123  002E86  C033  F07A         	movff	?___fladd+3,_turnleft$3219+3
  7124                           
  7125                           ;DC_motors.c: 167:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  7126  002E8A  0E00               	movlw	0
  7127  002E8C  6E1B               	movwf	___flmul@a^0,c
  7128  002E8E  0E00               	movlw	0
  7129  002E90  6E1C               	movwf	(___flmul@a+1)^0,c
  7130  002E92  0EB4               	movlw	180
  7131  002E94  6E1D               	movwf	(___flmul@a+2)^0,c
  7132  002E96  0E43               	movlw	67
  7133  002E98  6E1E               	movwf	(___flmul@a+3)^0,c
  7134  002E9A  C077  F017         	movff	_turnleft$3219,___flmul@b
  7135  002E9E  C078  F018         	movff	_turnleft$3219+1,___flmul@b+1
  7136  002EA2  C079  F019         	movff	_turnleft$3219+2,___flmul@b+2
  7137  002EA6  C07A  F01A         	movff	_turnleft$3219+3,___flmul@b+3
  7138  002EAA  EC9A  F00C         	call	___flmul	;wreg free
  7139  002EAE  C017  F040         	movff	?___flmul,___fldiv@b
  7140  002EB2  C018  F041         	movff	?___flmul+1,___fldiv@b+1
  7141  002EB6  C019  F042         	movff	?___flmul+2,___fldiv@b+2
  7142  002EBA  C01A  F043         	movff	?___flmul+3,___fldiv@b+3
  7143  002EBE  C051  F009         	movff	_turnleft_calangle,___xxtofl@val	;volatile
  7144  002EC2  C052  F00A         	movff	_turnleft_calangle+1,___xxtofl@val+1	;volatile
  7145  002EC6  0E00               	movlw	0
  7146  002EC8  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  7147  002ECA  0EFF               	movlw	-1
  7148  002ECC  6E0B               	movwf	(___xxtofl@val+2)^0,c
  7149  002ECE  6E0C               	movwf	(___xxtofl@val+3)^0,c
  7150  002ED0  0E01               	movlw	1
  7151  002ED2  ECFD  F018         	call	___xxtofl
  7152  002ED6  C009  F044         	movff	?___xxtofl,___fldiv@a
  7153  002EDA  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  7154  002EDE  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  7155  002EE2  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  7156  002EE6  ECAF  F00E         	call	___fldiv	;wreg free
  7157  002EEA  C040  F073         	movff	?___fldiv,turnleft@delay
  7158  002EEE  C041  F074         	movff	?___fldiv+1,turnleft@delay+1
  7159  002EF2  C042  F075         	movff	?___fldiv+2,turnleft@delay+2
  7160  002EF6  C043  F076         	movff	?___fldiv+3,turnleft@delay+3
  7161  002EFA                     
  7162                           ;DC_motors.c: 170:     mL->direction = 0;
  7163  002EFA  0100               	movlb	0	; () banked
  7164  002EFC  EE20 F001          	lfsr	2,1
  7165  002F00  516D               	movf	turnleft@mL& (0+255),w,b
  7166  002F02  26D9               	addwf	fsr2l,f,c
  7167  002F04  516E               	movf	(turnleft@mL+1)& (0+255),w,b
  7168  002F06  22DA               	addwfc	fsr2h,f,c
  7169  002F08  0E00               	movlw	0
  7170  002F0A  6EDF               	movwf	indf2,c
  7171  002F0C                     
  7172                           ; BSR set to: 0
  7173                           ;DC_motors.c: 171:     mR->direction = 1;
  7174  002F0C  EE20 F001          	lfsr	2,1
  7175  002F10  516F               	movf	turnleft@mR& (0+255),w,b
  7176  002F12  26D9               	addwf	fsr2l,f,c
  7177  002F14  5170               	movf	(turnleft@mR+1)& (0+255),w,b
  7178  002F16  22DA               	addwfc	fsr2h,f,c
  7179  002F18  0E01               	movlw	1
  7180  002F1A  6EDF               	movwf	indf2,c
  7181  002F1C                     
  7182                           ; BSR set to: 0
  7183                           ;DC_motors.c: 174:     LATFbits.LATF0 = 1;
  7184  002F1C  807E               	bsf	126,0,c	;volatile
  7185                           
  7186                           ;DC_motors.c: 175:     while((mL->power < 70) || (mR->power < 70)){
  7187  002F1E  EFC5  F017         	goto	l5005
  7188  002F22                     l4991:
  7189                           
  7190                           ;DC_motors.c: 177:         if (mL->power < 70) {mL->power += 10;}
  7191  002F22  C06D  FFD9         	movff	turnleft@mL,fsr2l
  7192  002F26  C06E  FFDA         	movff	turnleft@mL+1,fsr2h
  7193  002F2A  0E46               	movlw	70
  7194  002F2C  60DF               	cpfslt	indf2,c
  7195  002F2E  EF9B  F017         	goto	u5501
  7196  002F32  EF9D  F017         	goto	u5500
  7197  002F36                     u5501:
  7198  002F36  EFA3  F017         	goto	l4995
  7199  002F3A                     u5500:
  7200  002F3A  C06D  FFD9         	movff	turnleft@mL,fsr2l
  7201  002F3E  C06E  FFDA         	movff	turnleft@mL+1,fsr2h
  7202  002F42  0E0A               	movlw	10
  7203  002F44  26DF               	addwf	indf2,f,c
  7204  002F46                     l4995:
  7205                           
  7206                           ;DC_motors.c: 178:         if (mR->power < 70) {mR->power += 10;}
  7207  002F46  C06F  FFD9         	movff	turnleft@mR,fsr2l
  7208  002F4A  C070  FFDA         	movff	turnleft@mR+1,fsr2h
  7209  002F4E  0E46               	movlw	70
  7210  002F50  60DF               	cpfslt	indf2,c
  7211  002F52  EFAD  F017         	goto	u5511
  7212  002F56  EFAF  F017         	goto	u5510
  7213  002F5A                     u5511:
  7214  002F5A  EFB5  F017         	goto	l4999
  7215  002F5E                     u5510:
  7216  002F5E  C06F  FFD9         	movff	turnleft@mR,fsr2l
  7217  002F62  C070  FFDA         	movff	turnleft@mR+1,fsr2h
  7218  002F66  0E0A               	movlw	10
  7219  002F68  26DF               	addwf	indf2,f,c
  7220  002F6A                     l4999:
  7221                           
  7222                           ;DC_motors.c: 181:         DCmotors_setPWM(mL);
  7223  002F6A  C06D  F017         	movff	turnleft@mL,DCmotors_setPWM@m
  7224  002F6E  C06E  F018         	movff	turnleft@mL+1,DCmotors_setPWM@m+1
  7225  002F72  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  7226  002F76                     
  7227                           ;DC_motors.c: 182:         DCmotors_setPWM(mR);
  7228  002F76  C06F  F017         	movff	turnleft@mR,DCmotors_setPWM@m
  7229  002F7A  C070  F018         	movff	turnleft@mR+1,DCmotors_setPWM@m+1
  7230  002F7E  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  7231  002F82                     
  7232                           ;DC_motors.c: 183:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7233  002F82  0EA0               	movlw	160
  7234  002F84                     u7197:
  7235  002F84  D000               	nop2	
  7236  002F86  2EE8               	decfsz	wreg,f,c
  7237  002F88  D7FD               	bra	u7197
  7238  002F8A                     l5005:
  7239                           
  7240                           ;DC_motors.c: 175:     while((mL->power < 70) || (mR->power < 70)){
  7241  002F8A  C06D  FFD9         	movff	turnleft@mL,fsr2l
  7242  002F8E  C06E  FFDA         	movff	turnleft@mL+1,fsr2h
  7243  002F92  0E45               	movlw	69
  7244  002F94  64DF               	cpfsgt	indf2,c
  7245  002F96  EFCF  F017         	goto	u5521
  7246  002F9A  EFD1  F017         	goto	u5520
  7247  002F9E                     u5521:
  7248  002F9E  EF91  F017         	goto	l4991
  7249  002FA2                     u5520:
  7250  002FA2  C06F  FFD9         	movff	turnleft@mR,fsr2l
  7251  002FA6  C070  FFDA         	movff	turnleft@mR+1,fsr2h
  7252  002FAA  0E45               	movlw	69
  7253  002FAC  64DF               	cpfsgt	indf2,c
  7254  002FAE  EFDB  F017         	goto	u5531
  7255  002FB2  EFDD  F017         	goto	u5530
  7256  002FB6                     u5531:
  7257  002FB6  EF91  F017         	goto	l4991
  7258  002FBA                     u5530:
  7259  002FBA                     
  7260                           ;DC_motors.c: 186:     unsigned int i;;DC_motors.c: 187:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  7261  002FBA  0E00               	movlw	0
  7262  002FBC  0100               	movlb	0	; () banked
  7263  002FBE  6F7C               	movwf	(turnleft@i+1)& (0+255),b
  7264  002FC0  0E00               	movlw	0
  7265  002FC2  6F7B               	movwf	turnleft@i& (0+255),b
  7266  002FC4  EFEF  F017         	goto	l5015
  7267  002FC8                     l5011:
  7268  002FC8  0E15               	movlw	21
  7269  002FCA  6E4C               	movwf	??_turnleft^0,c
  7270  002FCC  0EC6               	movlw	198
  7271  002FCE                     u7207:
  7272  002FCE  2EE8               	decfsz	wreg,f,c
  7273  002FD0  D7FE               	bra	u7207
  7274  002FD2  2E4C               	decfsz	??_turnleft^0,f,c
  7275  002FD4  D7FC               	bra	u7207
  7276  002FD6  D000               	nop2	
  7277  002FD8  0100               	movlb	0	; () banked
  7278  002FDA  4B7B               	infsnz	turnleft@i& (0+255),f,b
  7279  002FDC  2B7C               	incf	(turnleft@i+1)& (0+255),f,b
  7280  002FDE                     l5015:
  7281                           
  7282                           ; BSR set to: 0
  7283  002FDE  C07B  F009         	movff	turnleft@i,___xxtofl@val
  7284  002FE2  C07C  F00A         	movff	turnleft@i+1,___xxtofl@val+1
  7285  002FE6  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7286  002FE8  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7287  002FEA  0E00               	movlw	0
  7288  002FEC  ECFD  F018         	call	___xxtofl
  7289  002FF0  C009  F017         	movff	?___xxtofl,___flge@ff1
  7290  002FF4  C00A  F018         	movff	?___xxtofl+1,___flge@ff1+1
  7291  002FF8  C00B  F019         	movff	?___xxtofl+2,___flge@ff1+2
  7292  002FFC  C00C  F01A         	movff	?___xxtofl+3,___flge@ff1+3
  7293  003000  C073  F01B         	movff	turnleft@delay,___flge@ff2
  7294  003004  C074  F01C         	movff	turnleft@delay+1,___flge@ff2+1
  7295  003008  C075  F01D         	movff	turnleft@delay+2,___flge@ff2+2
  7296  00300C  C076  F01E         	movff	turnleft@delay+3,___flge@ff2+3
  7297  003010  ECF2  F01B         	call	___flge	;wreg free
  7298  003014  A0D8               	btfss	status,0,c
  7299  003016  EF0F  F018         	goto	u5541
  7300  00301A  EF11  F018         	goto	u5540
  7301  00301E                     u5541:
  7302  00301E  EFE4  F017         	goto	l5011
  7303  003022                     u5540:
  7304  003022                     
  7305                           ;DC_motors.c: 188:     LATFbits.LATF0 = 0;
  7306  003022  907E               	bcf	126,0,c	;volatile
  7307  003024  0012               	return		;funcret
  7308  003026                     __end_of_turnleft:
  7309                           	callstack 0
  7310                           
  7311 ;; *************** function ___xxtofl *****************
  7312 ;; Defined at:
  7313 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  sign            1    wreg     unsigned char 
  7316 ;;  val             4    8[COMRAM] long 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  sign            1   16[COMRAM] unsigned char 
  7319 ;;  arg             4   18[COMRAM] unsigned long 
  7320 ;;  exp             1   17[COMRAM] unsigned char 
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  4    8[COMRAM] unsigned char 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7331 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7333 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;Total ram usage:       14 bytes
  7335 ;; Hardware stack levels used: 1
  7336 ;; Hardware stack levels required when called: 7
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_colourcards_normaliseRGBC
  7341 ;;		_turnleft
  7342 ;;		_turnright
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text42
  7347  0031FA                     __ptext42:
  7348                           	callstack 0
  7349  0031FA                     ___xxtofl:
  7350                           	callstack 20
  7351                           
  7352                           ;incstack = 0
  7353                           ;___xxtofl@sign stored from wreg
  7354  0031FA  6E11               	movwf	___xxtofl@sign^0,c
  7355  0031FC  5011               	movf	___xxtofl@sign^0,w,c
  7356  0031FE  B4D8               	btfsc	status,2,c
  7357  003200  EF04  F019         	goto	u3831
  7358  003204  EF06  F019         	goto	u3830
  7359  003208                     u3831:
  7360  003208  EF28  F019         	goto	l1498
  7361  00320C                     u3830:
  7362  00320C  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  7363  00320E  EF0D  F019         	goto	u3840
  7364  003212  EF0B  F019         	goto	u3841
  7365  003216                     u3841:
  7366  003216  EF28  F019         	goto	l1498
  7367  00321A                     u3840:
  7368  00321A  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  7369  00321E  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  7370  003222  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  7371  003226  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  7372  00322A  1E0D               	comf	??___xxtofl^0,f,c
  7373  00322C  1E0E               	comf	(??___xxtofl+1)^0,f,c
  7374  00322E  1E0F               	comf	(??___xxtofl+2)^0,f,c
  7375  003230  1E10               	comf	(??___xxtofl+3)^0,f,c
  7376  003232  2A0D               	incf	??___xxtofl^0,f,c
  7377  003234  0E00               	movlw	0
  7378  003236  220E               	addwfc	(??___xxtofl+1)^0,f,c
  7379  003238  220F               	addwfc	(??___xxtofl+2)^0,f,c
  7380  00323A  2210               	addwfc	(??___xxtofl+3)^0,f,c
  7381  00323C  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  7382  003240  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  7383  003244  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  7384  003248  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  7385  00324C  EF30  F019         	goto	l3903
  7386  003250                     l1498:
  7387  003250  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  7388  003254  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7389  003258  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7390  00325C  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7391  003260                     l3903:
  7392  003260  5009               	movf	___xxtofl@val^0,w,c
  7393  003262  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  7394  003264  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  7395  003266  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  7396  003268  A4D8               	btfss	status,2,c
  7397  00326A  EF39  F019         	goto	u3851
  7398  00326E  EF3B  F019         	goto	u3850
  7399  003272                     u3851:
  7400  003272  EF45  F019         	goto	l3909
  7401  003276                     u3850:
  7402  003276  0E00               	movlw	0
  7403  003278  6E09               	movwf	?___xxtofl^0,c
  7404  00327A  0E00               	movlw	0
  7405  00327C  6E0A               	movwf	(?___xxtofl+1)^0,c
  7406  00327E  0E00               	movlw	0
  7407  003280  6E0B               	movwf	(?___xxtofl+2)^0,c
  7408  003282  0E00               	movlw	0
  7409  003284  6E0C               	movwf	(?___xxtofl+3)^0,c
  7410  003286  EFD6  F019         	goto	l1501
  7411  00328A                     l3909:
  7412  00328A  0E96               	movlw	150
  7413  00328C  6E12               	movwf	___xxtofl@exp^0,c
  7414  00328E  EF4F  F019         	goto	l3913
  7415  003292                     l3911:
  7416  003292  2A12               	incf	___xxtofl@exp^0,f,c
  7417  003294  90D8               	bcf	status,0,c
  7418  003296  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  7419  003298  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  7420  00329A  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  7421  00329C  3213               	rrcf	___xxtofl@arg^0,f,c
  7422  00329E                     l3913:
  7423  00329E  0E00               	movlw	0
  7424  0032A0  1413               	andwf	___xxtofl@arg^0,w,c
  7425  0032A2  6E0D               	movwf	??___xxtofl^0,c
  7426  0032A4  0E00               	movlw	0
  7427  0032A6  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  7428  0032A8  6E0E               	movwf	(??___xxtofl+1)^0,c
  7429  0032AA  0E00               	movlw	0
  7430  0032AC  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  7431  0032AE  6E0F               	movwf	(??___xxtofl+2)^0,c
  7432  0032B0  0EFE               	movlw	254
  7433  0032B2  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  7434  0032B4  6E10               	movwf	(??___xxtofl+3)^0,c
  7435  0032B6  500D               	movf	??___xxtofl^0,w,c
  7436  0032B8  100E               	iorwf	(??___xxtofl+1)^0,w,c
  7437  0032BA  100F               	iorwf	(??___xxtofl+2)^0,w,c
  7438  0032BC  1010               	iorwf	(??___xxtofl+3)^0,w,c
  7439  0032BE  A4D8               	btfss	status,2,c
  7440  0032C0  EF64  F019         	goto	u3861
  7441  0032C4  EF66  F019         	goto	u3860
  7442  0032C8                     u3861:
  7443  0032C8  EF49  F019         	goto	l3911
  7444  0032CC                     u3860:
  7445  0032CC  EF74  F019         	goto	l1505
  7446  0032D0                     l3915:
  7447  0032D0  2A12               	incf	___xxtofl@exp^0,f,c
  7448  0032D2  0E01               	movlw	1
  7449  0032D4  2613               	addwf	___xxtofl@arg^0,f,c
  7450  0032D6  0E00               	movlw	0
  7451  0032D8  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  7452  0032DA  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  7453  0032DC  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  7454  0032DE  90D8               	bcf	status,0,c
  7455  0032E0  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  7456  0032E2  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  7457  0032E4  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  7458  0032E6  3213               	rrcf	___xxtofl@arg^0,f,c
  7459  0032E8                     l1505:
  7460  0032E8  0E00               	movlw	0
  7461  0032EA  1413               	andwf	___xxtofl@arg^0,w,c
  7462  0032EC  6E0D               	movwf	??___xxtofl^0,c
  7463  0032EE  0E00               	movlw	0
  7464  0032F0  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  7465  0032F2  6E0E               	movwf	(??___xxtofl+1)^0,c
  7466  0032F4  0E00               	movlw	0
  7467  0032F6  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  7468  0032F8  6E0F               	movwf	(??___xxtofl+2)^0,c
  7469  0032FA  0EFF               	movlw	255
  7470  0032FC  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  7471  0032FE  6E10               	movwf	(??___xxtofl+3)^0,c
  7472  003300  500D               	movf	??___xxtofl^0,w,c
  7473  003302  100E               	iorwf	(??___xxtofl+1)^0,w,c
  7474  003304  100F               	iorwf	(??___xxtofl+2)^0,w,c
  7475  003306  1010               	iorwf	(??___xxtofl+3)^0,w,c
  7476  003308  A4D8               	btfss	status,2,c
  7477  00330A  EF89  F019         	goto	u3871
  7478  00330E  EF8B  F019         	goto	u3870
  7479  003312                     u3871:
  7480  003312  EF68  F019         	goto	l3915
  7481  003316                     u3870:
  7482  003316  EF93  F019         	goto	l3923
  7483  00331A                     l3921:
  7484  00331A  0612               	decf	___xxtofl@exp^0,f,c
  7485  00331C  90D8               	bcf	status,0,c
  7486  00331E  3613               	rlcf	___xxtofl@arg^0,f,c
  7487  003320  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  7488  003322  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  7489  003324  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  7490  003326                     l3923:
  7491  003326  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  7492  003328  EF98  F019         	goto	u3881
  7493  00332C  EF9A  F019         	goto	u3880
  7494  003330                     u3881:
  7495  003330  EFA2  F019         	goto	l1512
  7496  003334                     u3880:
  7497  003334  0E02               	movlw	2
  7498  003336  6012               	cpfslt	___xxtofl@exp^0,c
  7499  003338  EFA0  F019         	goto	u3891
  7500  00333C  EFA2  F019         	goto	u3890
  7501  003340                     u3891:
  7502  003340  EF8D  F019         	goto	l3921
  7503  003344                     u3890:
  7504  003344                     l1512:
  7505  003344  B012               	btfsc	___xxtofl@exp^0,0,c
  7506  003346  EFA7  F019         	goto	u3901
  7507  00334A  EFA9  F019         	goto	u3900
  7508  00334E                     u3901:
  7509  00334E  EFAA  F019         	goto	l3929
  7510  003352                     u3900:
  7511  003352  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  7512  003354                     l3929:
  7513  003354  90D8               	bcf	status,0,c
  7514  003356  3212               	rrcf	___xxtofl@exp^0,f,c
  7515  003358  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  7516  00335C  6A0E               	clrf	(??___xxtofl+1)^0,c
  7517  00335E  6A0F               	clrf	(??___xxtofl+2)^0,c
  7518  003360  6A10               	clrf	(??___xxtofl+3)^0,c
  7519  003362  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  7520  003366  6A0F               	clrf	(??___xxtofl+2)^0,c
  7521  003368  6A0E               	clrf	(??___xxtofl+1)^0,c
  7522  00336A  6A0D               	clrf	??___xxtofl^0,c
  7523  00336C  500D               	movf	??___xxtofl^0,w,c
  7524  00336E  1213               	iorwf	___xxtofl@arg^0,f,c
  7525  003370  500E               	movf	(??___xxtofl+1)^0,w,c
  7526  003372  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  7527  003374  500F               	movf	(??___xxtofl+2)^0,w,c
  7528  003376  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  7529  003378  5010               	movf	(??___xxtofl+3)^0,w,c
  7530  00337A  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  7531  00337C  5011               	movf	___xxtofl@sign^0,w,c
  7532  00337E  B4D8               	btfsc	status,2,c
  7533  003380  EFC4  F019         	goto	u3911
  7534  003384  EFC6  F019         	goto	u3910
  7535  003388                     u3911:
  7536  003388  EFCE  F019         	goto	l3939
  7537  00338C                     u3910:
  7538  00338C  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  7539  00338E  EFCD  F019         	goto	u3920
  7540  003392  EFCB  F019         	goto	u3921
  7541  003396                     u3921:
  7542  003396  EFCE  F019         	goto	l3939
  7543  00339A                     u3920:
  7544  00339A  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  7545  00339C                     l3939:
  7546  00339C  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  7547  0033A0  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  7548  0033A4  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  7549  0033A8  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  7550  0033AC                     l1501:
  7551  0033AC  0012               	return		;funcret
  7552  0033AE                     __end_of___xxtofl:
  7553                           	callstack 0
  7554                           
  7555 ;; *************** function ___flmul *****************
  7556 ;; Defined at:
  7557 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  b               4   22[COMRAM] unsigned char 
  7560 ;;  a               4   26[COMRAM] unsigned char 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  prod            4   41[COMRAM] struct .
  7563 ;;  grs             4   35[COMRAM] unsigned long 
  7564 ;;  temp            2   45[COMRAM] struct .
  7565 ;;  bexp            1   40[COMRAM] unsigned char 
  7566 ;;  aexp            1   39[COMRAM] unsigned char 
  7567 ;;  sign            1   34[COMRAM] unsigned char 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  4   22[COMRAM] unsigned char 
  7570 ;; Registers used:
  7571 ;;		wreg, status,2, status,0, prodl, prodh
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7577 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7581 ;;Total ram usage:       25 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; Hardware stack levels required when called: 7
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_turnleft
  7588 ;;		_turnright
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text43
  7593  001934                     __ptext43:
  7594                           	callstack 0
  7595  001934                     ___flmul:
  7596                           	callstack 20
  7597  001934  501A               	movf	(___flmul@b+3)^0,w,c
  7598  001936  0B80               	andlw	128
  7599  001938  6E23               	movwf	___flmul@sign^0,c
  7600  00193A  501A               	movf	(___flmul@b+3)^0,w,c
  7601  00193C  241A               	addwf	(___flmul@b+3)^0,w,c
  7602  00193E  6E29               	movwf	___flmul@bexp^0,c
  7603  001940  AE19               	btfss	(___flmul@b+2)^0,7,c
  7604  001942  EFA5  F00C         	goto	u3591
  7605  001946  EFA7  F00C         	goto	u3590
  7606  00194A                     u3591:
  7607  00194A  EFA8  F00C         	goto	l3751
  7608  00194E                     u3590:
  7609  00194E  8029               	bsf	___flmul@bexp^0,0,c
  7610  001950                     l3751:
  7611  001950  5029               	movf	___flmul@bexp^0,w,c
  7612  001952  B4D8               	btfsc	status,2,c
  7613  001954  EFAE  F00C         	goto	u3601
  7614  001958  EFB0  F00C         	goto	u3600
  7615  00195C                     u3601:
  7616  00195C  EFC3  F00C         	goto	l3759
  7617  001960                     u3600:
  7618  001960  2829               	incf	___flmul@bexp^0,w,c
  7619  001962  A4D8               	btfss	status,2,c
  7620  001964  EFB6  F00C         	goto	u3611
  7621  001968  EFB8  F00C         	goto	u3610
  7622  00196C                     u3611:
  7623  00196C  EFC0  F00C         	goto	l3757
  7624  001970                     u3610:
  7625  001970  0E00               	movlw	0
  7626  001972  6E17               	movwf	___flmul@b^0,c
  7627  001974  0E00               	movlw	0
  7628  001976  6E18               	movwf	(___flmul@b+1)^0,c
  7629  001978  0E00               	movlw	0
  7630  00197A  6E19               	movwf	(___flmul@b+2)^0,c
  7631  00197C  0E00               	movlw	0
  7632  00197E  6E1A               	movwf	(___flmul@b+3)^0,c
  7633  001980                     l3757:
  7634  001980  8E19               	bsf	(___flmul@b+2)^0,7,c
  7635  001982  EFCB  F00C         	goto	l3761
  7636  001986                     l3759:
  7637  001986  0E00               	movlw	0
  7638  001988  6E17               	movwf	___flmul@b^0,c
  7639  00198A  0E00               	movlw	0
  7640  00198C  6E18               	movwf	(___flmul@b+1)^0,c
  7641  00198E  0E00               	movlw	0
  7642  001990  6E19               	movwf	(___flmul@b+2)^0,c
  7643  001992  0E00               	movlw	0
  7644  001994  6E1A               	movwf	(___flmul@b+3)^0,c
  7645  001996                     l3761:
  7646  001996  501E               	movf	(___flmul@a+3)^0,w,c
  7647  001998  0B80               	andlw	128
  7648  00199A  1A23               	xorwf	___flmul@sign^0,f,c
  7649  00199C  501E               	movf	(___flmul@a+3)^0,w,c
  7650  00199E  241E               	addwf	(___flmul@a+3)^0,w,c
  7651  0019A0  6E28               	movwf	___flmul@aexp^0,c
  7652  0019A2  AE1D               	btfss	(___flmul@a+2)^0,7,c
  7653  0019A4  EFD6  F00C         	goto	u3621
  7654  0019A8  EFD8  F00C         	goto	u3620
  7655  0019AC                     u3621:
  7656  0019AC  EFD9  F00C         	goto	l3769
  7657  0019B0                     u3620:
  7658  0019B0  8028               	bsf	___flmul@aexp^0,0,c
  7659  0019B2                     l3769:
  7660  0019B2  5028               	movf	___flmul@aexp^0,w,c
  7661  0019B4  B4D8               	btfsc	status,2,c
  7662  0019B6  EFDF  F00C         	goto	u3631
  7663  0019BA  EFE1  F00C         	goto	u3630
  7664  0019BE                     u3631:
  7665  0019BE  EFF4  F00C         	goto	l3777
  7666  0019C2                     u3630:
  7667  0019C2  2828               	incf	___flmul@aexp^0,w,c
  7668  0019C4  A4D8               	btfss	status,2,c
  7669  0019C6  EFE7  F00C         	goto	u3641
  7670  0019CA  EFE9  F00C         	goto	u3640
  7671  0019CE                     u3641:
  7672  0019CE  EFF1  F00C         	goto	l3775
  7673  0019D2                     u3640:
  7674  0019D2  0E00               	movlw	0
  7675  0019D4  6E1B               	movwf	___flmul@a^0,c
  7676  0019D6  0E00               	movlw	0
  7677  0019D8  6E1C               	movwf	(___flmul@a+1)^0,c
  7678  0019DA  0E00               	movlw	0
  7679  0019DC  6E1D               	movwf	(___flmul@a+2)^0,c
  7680  0019DE  0E00               	movlw	0
  7681  0019E0  6E1E               	movwf	(___flmul@a+3)^0,c
  7682  0019E2                     l3775:
  7683  0019E2  8E1D               	bsf	(___flmul@a+2)^0,7,c
  7684  0019E4  EFFC  F00C         	goto	l1457
  7685  0019E8                     l3777:
  7686  0019E8  0E00               	movlw	0
  7687  0019EA  6E1B               	movwf	___flmul@a^0,c
  7688  0019EC  0E00               	movlw	0
  7689  0019EE  6E1C               	movwf	(___flmul@a+1)^0,c
  7690  0019F0  0E00               	movlw	0
  7691  0019F2  6E1D               	movwf	(___flmul@a+2)^0,c
  7692  0019F4  0E00               	movlw	0
  7693  0019F6  6E1E               	movwf	(___flmul@a+3)^0,c
  7694  0019F8                     l1457:
  7695  0019F8  5028               	movf	___flmul@aexp^0,w,c
  7696  0019FA  B4D8               	btfsc	status,2,c
  7697  0019FC  EF02  F00D         	goto	u3651
  7698  001A00  EF04  F00D         	goto	u3650
  7699  001A04                     u3651:
  7700  001A04  EF0C  F00D         	goto	l3781
  7701  001A08                     u3650:
  7702  001A08  5029               	movf	___flmul@bexp^0,w,c
  7703  001A0A  A4D8               	btfss	status,2,c
  7704  001A0C  EF0A  F00D         	goto	u3661
  7705  001A10  EF0C  F00D         	goto	u3660
  7706  001A14                     u3661:
  7707  001A14  EF16  F00D         	goto	l3785
  7708  001A18                     u3660:
  7709  001A18                     l3781:
  7710  001A18  0E00               	movlw	0
  7711  001A1A  6E17               	movwf	?___flmul^0,c
  7712  001A1C  0E00               	movlw	0
  7713  001A1E  6E18               	movwf	(?___flmul+1)^0,c
  7714  001A20  0E00               	movlw	0
  7715  001A22  6E19               	movwf	(?___flmul+2)^0,c
  7716  001A24  0E00               	movlw	0
  7717  001A26  6E1A               	movwf	(?___flmul+3)^0,c
  7718  001A28  EFAE  F00E         	goto	l1461
  7719  001A2C                     l3785:
  7720  001A2C  501D               	movf	(___flmul@a+2)^0,w,c
  7721  001A2E  0217               	mulwf	___flmul@b^0,c
  7722  001A30  CFF3 F02E          	movff	prodl,___flmul@temp
  7723  001A34  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7724  001A38  502E               	movf	___flmul@temp^0,w,c
  7725  001A3A  6E24               	movwf	___flmul@grs^0,c
  7726  001A3C  6A25               	clrf	(___flmul@grs+1)^0,c
  7727  001A3E  6A26               	clrf	(___flmul@grs+2)^0,c
  7728  001A40  6A27               	clrf	(___flmul@grs+3)^0,c
  7729  001A42  502F               	movf	(___flmul@temp+1)^0,w,c
  7730  001A44  6E2A               	movwf	___flmul@prod^0,c
  7731  001A46  6A2B               	clrf	(___flmul@prod+1)^0,c
  7732  001A48  6A2C               	clrf	(___flmul@prod+2)^0,c
  7733  001A4A  6A2D               	clrf	(___flmul@prod+3)^0,c
  7734  001A4C  501C               	movf	(___flmul@a+1)^0,w,c
  7735  001A4E  0218               	mulwf	(___flmul@b+1)^0,c
  7736  001A50  CFF3 F02E          	movff	prodl,___flmul@temp
  7737  001A54  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7738  001A58  502E               	movf	___flmul@temp^0,w,c
  7739  001A5A  2624               	addwf	___flmul@grs^0,f,c
  7740  001A5C  0E00               	movlw	0
  7741  001A5E  2225               	addwfc	(___flmul@grs+1)^0,f,c
  7742  001A60  2226               	addwfc	(___flmul@grs+2)^0,f,c
  7743  001A62  2227               	addwfc	(___flmul@grs+3)^0,f,c
  7744  001A64  502F               	movf	(___flmul@temp+1)^0,w,c
  7745  001A66  262A               	addwf	___flmul@prod^0,f,c
  7746  001A68  0E00               	movlw	0
  7747  001A6A  222B               	addwfc	(___flmul@prod+1)^0,f,c
  7748  001A6C  222C               	addwfc	(___flmul@prod+2)^0,f,c
  7749  001A6E  222D               	addwfc	(___flmul@prod+3)^0,f,c
  7750  001A70  501B               	movf	___flmul@a^0,w,c
  7751  001A72  0219               	mulwf	(___flmul@b+2)^0,c
  7752  001A74  CFF3 F02E          	movff	prodl,___flmul@temp
  7753  001A78  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7754  001A7C  502E               	movf	___flmul@temp^0,w,c
  7755  001A7E  2624               	addwf	___flmul@grs^0,f,c
  7756  001A80  0E00               	movlw	0
  7757  001A82  2225               	addwfc	(___flmul@grs+1)^0,f,c
  7758  001A84  2226               	addwfc	(___flmul@grs+2)^0,f,c
  7759  001A86  2227               	addwfc	(___flmul@grs+3)^0,f,c
  7760  001A88  502F               	movf	(___flmul@temp+1)^0,w,c
  7761  001A8A  262A               	addwf	___flmul@prod^0,f,c
  7762  001A8C  0E00               	movlw	0
  7763  001A8E  222B               	addwfc	(___flmul@prod+1)^0,f,c
  7764  001A90  222C               	addwfc	(___flmul@prod+2)^0,f,c
  7765  001A92  222D               	addwfc	(___flmul@prod+3)^0,f,c
  7766  001A94  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  7767  001A98  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  7768  001A9C  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  7769  001AA0  6A24               	clrf	___flmul@grs^0,c
  7770  001AA2  501B               	movf	___flmul@a^0,w,c
  7771  001AA4  0218               	mulwf	(___flmul@b+1)^0,c
  7772  001AA6  CFF3 F02E          	movff	prodl,___flmul@temp
  7773  001AAA  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7774  001AAE  502E               	movf	___flmul@temp^0,w,c
  7775  001AB0  2624               	addwf	___flmul@grs^0,f,c
  7776  001AB2  502F               	movf	(___flmul@temp+1)^0,w,c
  7777  001AB4  2225               	addwfc	(___flmul@grs+1)^0,f,c
  7778  001AB6  0E00               	movlw	0
  7779  001AB8  2226               	addwfc	(___flmul@grs+2)^0,f,c
  7780  001ABA  0E00               	movlw	0
  7781  001ABC  2227               	addwfc	(___flmul@grs+3)^0,f,c
  7782  001ABE  501C               	movf	(___flmul@a+1)^0,w,c
  7783  001AC0  0217               	mulwf	___flmul@b^0,c
  7784  001AC2  CFF3 F02E          	movff	prodl,___flmul@temp
  7785  001AC6  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7786  001ACA  502E               	movf	___flmul@temp^0,w,c
  7787  001ACC  2624               	addwf	___flmul@grs^0,f,c
  7788  001ACE  502F               	movf	(___flmul@temp+1)^0,w,c
  7789  001AD0  2225               	addwfc	(___flmul@grs+1)^0,f,c
  7790  001AD2  0E00               	movlw	0
  7791  001AD4  2226               	addwfc	(___flmul@grs+2)^0,f,c
  7792  001AD6  0E00               	movlw	0
  7793  001AD8  2227               	addwfc	(___flmul@grs+3)^0,f,c
  7794  001ADA  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  7795  001ADE  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  7796  001AE2  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  7797  001AE6  6A24               	clrf	___flmul@grs^0,c
  7798  001AE8  501B               	movf	___flmul@a^0,w,c
  7799  001AEA  0217               	mulwf	___flmul@b^0,c
  7800  001AEC  CFF3 F02E          	movff	prodl,___flmul@temp
  7801  001AF0  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7802  001AF4  502E               	movf	___flmul@temp^0,w,c
  7803  001AF6  2624               	addwf	___flmul@grs^0,f,c
  7804  001AF8  502F               	movf	(___flmul@temp+1)^0,w,c
  7805  001AFA  2225               	addwfc	(___flmul@grs+1)^0,f,c
  7806  001AFC  0E00               	movlw	0
  7807  001AFE  2226               	addwfc	(___flmul@grs+2)^0,f,c
  7808  001B00  0E00               	movlw	0
  7809  001B02  2227               	addwfc	(___flmul@grs+3)^0,f,c
  7810  001B04  501D               	movf	(___flmul@a+2)^0,w,c
  7811  001B06  0218               	mulwf	(___flmul@b+1)^0,c
  7812  001B08  CFF3 F02E          	movff	prodl,___flmul@temp
  7813  001B0C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7814  001B10  502E               	movf	___flmul@temp^0,w,c
  7815  001B12  262A               	addwf	___flmul@prod^0,f,c
  7816  001B14  502F               	movf	(___flmul@temp+1)^0,w,c
  7817  001B16  222B               	addwfc	(___flmul@prod+1)^0,f,c
  7818  001B18  0E00               	movlw	0
  7819  001B1A  222C               	addwfc	(___flmul@prod+2)^0,f,c
  7820  001B1C  0E00               	movlw	0
  7821  001B1E  222D               	addwfc	(___flmul@prod+3)^0,f,c
  7822  001B20  501C               	movf	(___flmul@a+1)^0,w,c
  7823  001B22  0219               	mulwf	(___flmul@b+2)^0,c
  7824  001B24  CFF3 F02E          	movff	prodl,___flmul@temp
  7825  001B28  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7826  001B2C  502E               	movf	___flmul@temp^0,w,c
  7827  001B2E  262A               	addwf	___flmul@prod^0,f,c
  7828  001B30  502F               	movf	(___flmul@temp+1)^0,w,c
  7829  001B32  222B               	addwfc	(___flmul@prod+1)^0,f,c
  7830  001B34  0E00               	movlw	0
  7831  001B36  222C               	addwfc	(___flmul@prod+2)^0,f,c
  7832  001B38  0E00               	movlw	0
  7833  001B3A  222D               	addwfc	(___flmul@prod+3)^0,f,c
  7834  001B3C  501D               	movf	(___flmul@a+2)^0,w,c
  7835  001B3E  0219               	mulwf	(___flmul@b+2)^0,c
  7836  001B40  CFF3 F02E          	movff	prodl,___flmul@temp
  7837  001B44  CFF4 F02F          	movff	prodh,___flmul@temp+1
  7838  001B48  502E               	movf	___flmul@temp^0,w,c
  7839  001B4A  6E1F               	movwf	??___flmul^0,c
  7840  001B4C  502F               	movf	(___flmul@temp+1)^0,w,c
  7841  001B4E  6E20               	movwf	(??___flmul+1)^0,c
  7842  001B50  6A21               	clrf	(??___flmul+2)^0,c
  7843  001B52  6A22               	clrf	(??___flmul+3)^0,c
  7844  001B54  C021  F022         	movff	??___flmul+2,??___flmul+3
  7845  001B58  C020  F021         	movff	??___flmul+1,??___flmul+2
  7846  001B5C  C01F  F020         	movff	??___flmul,??___flmul+1
  7847  001B60  6A1F               	clrf	??___flmul^0,c
  7848  001B62  501F               	movf	??___flmul^0,w,c
  7849  001B64  262A               	addwf	___flmul@prod^0,f,c
  7850  001B66  5020               	movf	(??___flmul+1)^0,w,c
  7851  001B68  222B               	addwfc	(___flmul@prod+1)^0,f,c
  7852  001B6A  5021               	movf	(??___flmul+2)^0,w,c
  7853  001B6C  222C               	addwfc	(___flmul@prod+2)^0,f,c
  7854  001B6E  5022               	movf	(??___flmul+3)^0,w,c
  7855  001B70  222D               	addwfc	(___flmul@prod+3)^0,f,c
  7856  001B72  C024  F01F         	movff	___flmul@grs,??___flmul
  7857  001B76  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  7858  001B7A  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  7859  001B7E  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  7860  001B82  0E19               	movlw	25
  7861  001B84  EFC9  F00D         	goto	u3670
  7862  001B88                     u3675:
  7863  001B88  90D8               	bcf	status,0,c
  7864  001B8A  3222               	rrcf	(??___flmul+3)^0,f,c
  7865  001B8C  3221               	rrcf	(??___flmul+2)^0,f,c
  7866  001B8E  3220               	rrcf	(??___flmul+1)^0,f,c
  7867  001B90  321F               	rrcf	??___flmul^0,f,c
  7868  001B92                     u3670:
  7869  001B92  2EE8               	decfsz	wreg,f,c
  7870  001B94  EFC4  F00D         	goto	u3675
  7871  001B98  501F               	movf	??___flmul^0,w,c
  7872  001B9A  262A               	addwf	___flmul@prod^0,f,c
  7873  001B9C  5020               	movf	(??___flmul+1)^0,w,c
  7874  001B9E  222B               	addwfc	(___flmul@prod+1)^0,f,c
  7875  001BA0  5021               	movf	(??___flmul+2)^0,w,c
  7876  001BA2  222C               	addwfc	(___flmul@prod+2)^0,f,c
  7877  001BA4  5022               	movf	(??___flmul+3)^0,w,c
  7878  001BA6  222D               	addwfc	(___flmul@prod+3)^0,f,c
  7879  001BA8  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  7880  001BAC  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  7881  001BB0  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  7882  001BB4  6A24               	clrf	___flmul@grs^0,c
  7883  001BB6  5028               	movf	___flmul@aexp^0,w,c
  7884  001BB8  C029  F01F         	movff	___flmul@bexp,??___flmul
  7885  001BBC  6A20               	clrf	(??___flmul+1)^0,c
  7886  001BBE  261F               	addwf	??___flmul^0,f,c
  7887  001BC0  0E00               	movlw	0
  7888  001BC2  2220               	addwfc	(??___flmul+1)^0,f,c
  7889  001BC4  0E82               	movlw	130
  7890  001BC6  241F               	addwf	??___flmul^0,w,c
  7891  001BC8  6E2E               	movwf	___flmul@temp^0,c
  7892  001BCA  0EFF               	movlw	255
  7893  001BCC  2020               	addwfc	(??___flmul+1)^0,w,c
  7894  001BCE  6E2F               	movwf	(___flmul@temp+1)^0,c
  7895  001BD0  EFFF  F00D         	goto	l3833
  7896  001BD4                     l3827:
  7897  001BD4  90D8               	bcf	status,0,c
  7898  001BD6  362A               	rlcf	___flmul@prod^0,f,c
  7899  001BD8  362B               	rlcf	(___flmul@prod+1)^0,f,c
  7900  001BDA  362C               	rlcf	(___flmul@prod+2)^0,f,c
  7901  001BDC  362D               	rlcf	(___flmul@prod+3)^0,f,c
  7902  001BDE  AE27               	btfss	(___flmul@grs+3)^0,7,c
  7903  001BE0  EFF4  F00D         	goto	u3681
  7904  001BE4  EFF6  F00D         	goto	u3680
  7905  001BE8                     u3681:
  7906  001BE8  EFF7  F00D         	goto	l1464
  7907  001BEC                     u3680:
  7908  001BEC  802A               	bsf	___flmul@prod^0,0,c
  7909  001BEE                     l1464:
  7910  001BEE  90D8               	bcf	status,0,c
  7911  001BF0  3624               	rlcf	___flmul@grs^0,f,c
  7912  001BF2  3625               	rlcf	(___flmul@grs+1)^0,f,c
  7913  001BF4  3626               	rlcf	(___flmul@grs+2)^0,f,c
  7914  001BF6  3627               	rlcf	(___flmul@grs+3)^0,f,c
  7915  001BF8  062E               	decf	___flmul@temp^0,f,c
  7916  001BFA  A0D8               	btfss	status,0,c
  7917  001BFC  062F               	decf	(___flmul@temp+1)^0,f,c
  7918  001BFE                     l3833:
  7919  001BFE  AE2C               	btfss	(___flmul@prod+2)^0,7,c
  7920  001C00  EF04  F00E         	goto	u3691
  7921  001C04  EF06  F00E         	goto	u3690
  7922  001C08                     u3691:
  7923  001C08  EFEA  F00D         	goto	l3827
  7924  001C0C                     u3690:
  7925  001C0C  0E00               	movlw	0
  7926  001C0E  6E28               	movwf	___flmul@aexp^0,c
  7927  001C10  AE27               	btfss	(___flmul@grs+3)^0,7,c
  7928  001C12  EF0D  F00E         	goto	u3701
  7929  001C16  EF0F  F00E         	goto	u3700
  7930  001C1A                     u3701:
  7931  001C1A  EF33  F00E         	goto	l1466
  7932  001C1E                     u3700:
  7933  001C1E  0EFF               	movlw	255
  7934  001C20  1424               	andwf	___flmul@grs^0,w,c
  7935  001C22  6E1F               	movwf	??___flmul^0,c
  7936  001C24  0EFF               	movlw	255
  7937  001C26  1425               	andwf	(___flmul@grs+1)^0,w,c
  7938  001C28  6E20               	movwf	(??___flmul+1)^0,c
  7939  001C2A  0EFF               	movlw	255
  7940  001C2C  1426               	andwf	(___flmul@grs+2)^0,w,c
  7941  001C2E  6E21               	movwf	(??___flmul+2)^0,c
  7942  001C30  0E7F               	movlw	127
  7943  001C32  1427               	andwf	(___flmul@grs+3)^0,w,c
  7944  001C34  6E22               	movwf	(??___flmul+3)^0,c
  7945  001C36  501F               	movf	??___flmul^0,w,c
  7946  001C38  1020               	iorwf	(??___flmul+1)^0,w,c
  7947  001C3A  1021               	iorwf	(??___flmul+2)^0,w,c
  7948  001C3C  1022               	iorwf	(??___flmul+3)^0,w,c
  7949  001C3E  B4D8               	btfsc	status,2,c
  7950  001C40  EF24  F00E         	goto	u3711
  7951  001C44  EF26  F00E         	goto	u3710
  7952  001C48                     u3711:
  7953  001C48  EF2A  F00E         	goto	l1467
  7954  001C4C                     u3710:
  7955  001C4C                     l3841:
  7956  001C4C  0E01               	movlw	1
  7957  001C4E  6E28               	movwf	___flmul@aexp^0,c
  7958  001C50  EF33  F00E         	goto	l1466
  7959  001C54                     l1467:
  7960  001C54  A02A               	btfss	___flmul@prod^0,0,c
  7961  001C56  EF2F  F00E         	goto	u3721
  7962  001C5A  EF31  F00E         	goto	u3720
  7963  001C5E                     u3721:
  7964  001C5E  EF33  F00E         	goto	l1466
  7965  001C62                     u3720:
  7966  001C62  EF26  F00E         	goto	l3841
  7967  001C66                     l1466:
  7968  001C66  5028               	movf	___flmul@aexp^0,w,c
  7969  001C68  B4D8               	btfsc	status,2,c
  7970  001C6A  EF39  F00E         	goto	u3731
  7971  001C6E  EF3B  F00E         	goto	u3730
  7972  001C72                     u3731:
  7973  001C72  EF5F  F00E         	goto	l3853
  7974  001C76                     u3730:
  7975  001C76  0E01               	movlw	1
  7976  001C78  262A               	addwf	___flmul@prod^0,f,c
  7977  001C7A  0E00               	movlw	0
  7978  001C7C  222B               	addwfc	(___flmul@prod+1)^0,f,c
  7979  001C7E  222C               	addwfc	(___flmul@prod+2)^0,f,c
  7980  001C80  222D               	addwfc	(___flmul@prod+3)^0,f,c
  7981  001C82  A02D               	btfss	(___flmul@prod+3)^0,0,c
  7982  001C84  EF46  F00E         	goto	u3741
  7983  001C88  EF48  F00E         	goto	u3740
  7984  001C8C                     u3741:
  7985  001C8C  EF5F  F00E         	goto	l3853
  7986  001C90                     u3740:
  7987  001C90  C02A  F01F         	movff	___flmul@prod,??___flmul
  7988  001C94  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  7989  001C98  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  7990  001C9C  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  7991  001CA0  3422               	rlcf	(??___flmul+3)^0,w,c
  7992  001CA2  3222               	rrcf	(??___flmul+3)^0,f,c
  7993  001CA4  3221               	rrcf	(??___flmul+2)^0,f,c
  7994  001CA6  3220               	rrcf	(??___flmul+1)^0,f,c
  7995  001CA8  321F               	rrcf	??___flmul^0,f,c
  7996  001CAA  C01F  F02A         	movff	??___flmul,___flmul@prod
  7997  001CAE  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  7998  001CB2  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  7999  001CB6  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  8000  001CBA  4A2E               	infsnz	___flmul@temp^0,f,c
  8001  001CBC  2A2F               	incf	(___flmul@temp+1)^0,f,c
  8002  001CBE                     l3853:
  8003  001CBE  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  8004  001CC0  EF6A  F00E         	goto	u3751
  8005  001CC4  502F               	movf	(___flmul@temp+1)^0,w,c
  8006  001CC6  E108               	bnz	u3750
  8007  001CC8  282E               	incf	___flmul@temp^0,w,c
  8008  001CCA  A0D8               	btfss	status,0,c
  8009  001CCC  EF6A  F00E         	goto	u3751
  8010  001CD0  EF6C  F00E         	goto	u3750
  8011  001CD4                     u3751:
  8012  001CD4  EF76  F00E         	goto	l3857
  8013  001CD8                     u3750:
  8014  001CD8  0E00               	movlw	0
  8015  001CDA  6E2A               	movwf	___flmul@prod^0,c
  8016  001CDC  0E00               	movlw	0
  8017  001CDE  6E2B               	movwf	(___flmul@prod+1)^0,c
  8018  001CE0  0E80               	movlw	128
  8019  001CE2  6E2C               	movwf	(___flmul@prod+2)^0,c
  8020  001CE4  0E7F               	movlw	127
  8021  001CE6  6E2D               	movwf	(___flmul@prod+3)^0,c
  8022  001CE8  EFA4  F00E         	goto	l3869
  8023  001CEC                     l3857:
  8024  001CEC  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  8025  001CEE  EF83  F00E         	goto	u3760
  8026  001CF2  502F               	movf	(___flmul@temp+1)^0,w,c
  8027  001CF4  E106               	bnz	u3761
  8028  001CF6  042E               	decf	___flmul@temp^0,w,c
  8029  001CF8  B0D8               	btfsc	status,0,c
  8030  001CFA  EF81  F00E         	goto	u3761
  8031  001CFE  EF83  F00E         	goto	u3760
  8032  001D02                     u3761:
  8033  001D02  EF8F  F00E         	goto	l1474
  8034  001D06                     u3760:
  8035  001D06  0E00               	movlw	0
  8036  001D08  6E2A               	movwf	___flmul@prod^0,c
  8037  001D0A  0E00               	movlw	0
  8038  001D0C  6E2B               	movwf	(___flmul@prod+1)^0,c
  8039  001D0E  0E00               	movlw	0
  8040  001D10  6E2C               	movwf	(___flmul@prod+2)^0,c
  8041  001D12  0E00               	movlw	0
  8042  001D14  6E2D               	movwf	(___flmul@prod+3)^0,c
  8043  001D16  0E00               	movlw	0
  8044  001D18  6E23               	movwf	___flmul@sign^0,c
  8045  001D1A  EFA4  F00E         	goto	l3869
  8046  001D1E                     l1474:
  8047  001D1E  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  8048  001D22  0EFF               	movlw	255
  8049  001D24  162A               	andwf	___flmul@prod^0,f,c
  8050  001D26  0EFF               	movlw	255
  8051  001D28  162B               	andwf	(___flmul@prod+1)^0,f,c
  8052  001D2A  0E7F               	movlw	127
  8053  001D2C  162C               	andwf	(___flmul@prod+2)^0,f,c
  8054  001D2E  0E00               	movlw	0
  8055  001D30  162D               	andwf	(___flmul@prod+3)^0,f,c
  8056  001D32  A029               	btfss	___flmul@bexp^0,0,c
  8057  001D34  EF9E  F00E         	goto	u3771
  8058  001D38  EFA0  F00E         	goto	u3770
  8059  001D3C                     u3771:
  8060  001D3C  EFA1  F00E         	goto	l3867
  8061  001D40                     u3770:
  8062  001D40  8E2C               	bsf	(___flmul@prod+2)^0,7,c
  8063  001D42                     l3867:
  8064  001D42  90D8               	bcf	status,0,c
  8065  001D44  3029               	rrcf	___flmul@bexp^0,w,c
  8066  001D46  6E2D               	movwf	(___flmul@prod+3)^0,c
  8067  001D48                     l3869:
  8068  001D48  5023               	movf	___flmul@sign^0,w,c
  8069  001D4A  122D               	iorwf	(___flmul@prod+3)^0,f,c
  8070  001D4C  C02A  F017         	movff	___flmul@prod,?___flmul
  8071  001D50  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  8072  001D54  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  8073  001D58  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  8074  001D5C                     l1461:
  8075  001D5C  0012               	return		;funcret
  8076  001D5E                     __end_of___flmul:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function ___flge *****************
  8080 ;; Defined at:
  8081 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  ff1             4   22[COMRAM] unsigned char 
  8084 ;;  ff2             4   26[COMRAM] unsigned char 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;		None               void
  8089 ;; Registers used:
  8090 ;;		wreg, status,2, status,0
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8096 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;Total ram usage:       12 bytes
  8101 ;; Hardware stack levels used: 1
  8102 ;; Hardware stack levels required when called: 7
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_colourcards_readRGBC
  8107 ;;		_turnleft
  8108 ;;		_turnright
  8109 ;;		_colourcards_testingRGBC2
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text44
  8114  0037E4                     __ptext44:
  8115                           	callstack 0
  8116  0037E4                     ___flge:
  8117                           	callstack 20
  8118  0037E4  0E00               	movlw	0
  8119  0037E6  1417               	andwf	___flge@ff1^0,w,c
  8120  0037E8  6E1F               	movwf	??___flge^0,c
  8121  0037EA  0E00               	movlw	0
  8122  0037EC  1418               	andwf	(___flge@ff1+1)^0,w,c
  8123  0037EE  6E20               	movwf	(??___flge+1)^0,c
  8124  0037F0  0E80               	movlw	128
  8125  0037F2  1419               	andwf	(___flge@ff1+2)^0,w,c
  8126  0037F4  6E21               	movwf	(??___flge+2)^0,c
  8127  0037F6  0E7F               	movlw	127
  8128  0037F8  141A               	andwf	(___flge@ff1+3)^0,w,c
  8129  0037FA  6E22               	movwf	(??___flge+3)^0,c
  8130  0037FC  501F               	movf	??___flge^0,w,c
  8131  0037FE  1020               	iorwf	(??___flge+1)^0,w,c
  8132  003800  1021               	iorwf	(??___flge+2)^0,w,c
  8133  003802  1022               	iorwf	(??___flge+3)^0,w,c
  8134  003804  A4D8               	btfss	status,2,c
  8135  003806  EF07  F01C         	goto	u3781
  8136  00380A  EF09  F01C         	goto	u3780
  8137  00380E                     u3781:
  8138  00380E  EF11  F01C         	goto	l3879
  8139  003812                     u3780:
  8140  003812  0E00               	movlw	0
  8141  003814  6E17               	movwf	___flge@ff1^0,c
  8142  003816  0E00               	movlw	0
  8143  003818  6E18               	movwf	(___flge@ff1+1)^0,c
  8144  00381A  0E00               	movlw	0
  8145  00381C  6E19               	movwf	(___flge@ff1+2)^0,c
  8146  00381E  0E00               	movlw	0
  8147  003820  6E1A               	movwf	(___flge@ff1+3)^0,c
  8148  003822                     l3879:
  8149  003822  0E00               	movlw	0
  8150  003824  141B               	andwf	___flge@ff2^0,w,c
  8151  003826  6E1F               	movwf	??___flge^0,c
  8152  003828  0E00               	movlw	0
  8153  00382A  141C               	andwf	(___flge@ff2+1)^0,w,c
  8154  00382C  6E20               	movwf	(??___flge+1)^0,c
  8155  00382E  0E80               	movlw	128
  8156  003830  141D               	andwf	(___flge@ff2+2)^0,w,c
  8157  003832  6E21               	movwf	(??___flge+2)^0,c
  8158  003834  0E7F               	movlw	127
  8159  003836  141E               	andwf	(___flge@ff2+3)^0,w,c
  8160  003838  6E22               	movwf	(??___flge+3)^0,c
  8161  00383A  501F               	movf	??___flge^0,w,c
  8162  00383C  1020               	iorwf	(??___flge+1)^0,w,c
  8163  00383E  1021               	iorwf	(??___flge+2)^0,w,c
  8164  003840  1022               	iorwf	(??___flge+3)^0,w,c
  8165  003842  A4D8               	btfss	status,2,c
  8166  003844  EF26  F01C         	goto	u3791
  8167  003848  EF28  F01C         	goto	u3790
  8168  00384C                     u3791:
  8169  00384C  EF30  F01C         	goto	l3883
  8170  003850                     u3790:
  8171  003850  0E00               	movlw	0
  8172  003852  6E1B               	movwf	___flge@ff2^0,c
  8173  003854  0E00               	movlw	0
  8174  003856  6E1C               	movwf	(___flge@ff2+1)^0,c
  8175  003858  0E00               	movlw	0
  8176  00385A  6E1D               	movwf	(___flge@ff2+2)^0,c
  8177  00385C  0E00               	movlw	0
  8178  00385E  6E1E               	movwf	(___flge@ff2+3)^0,c
  8179  003860                     l3883:
  8180  003860  AE1A               	btfss	(___flge@ff1+3)^0,7,c
  8181  003862  EF35  F01C         	goto	u3801
  8182  003866  EF37  F01C         	goto	u3800
  8183  00386A                     u3801:
  8184  00386A  EF40  F01C         	goto	l3887
  8185  00386E                     u3800:
  8186  00386E  6C17               	negf	___flge@ff1^0,c
  8187  003870  1E18               	comf	(___flge@ff1+1)^0,f,c
  8188  003872  B0D8               	btfsc	status,0,c
  8189  003874  2A18               	incf	(___flge@ff1+1)^0,f,c
  8190  003876  1E19               	comf	(___flge@ff1+2)^0,f,c
  8191  003878  B0D8               	btfsc	status,0,c
  8192  00387A  2A19               	incf	(___flge@ff1+2)^0,f,c
  8193  00387C  0E80               	movlw	128
  8194  00387E  561A               	subfwb	(___flge@ff1+3)^0,f,c
  8195  003880                     l3887:
  8196  003880  AE1E               	btfss	(___flge@ff2+3)^0,7,c
  8197  003882  EF45  F01C         	goto	u3811
  8198  003886  EF47  F01C         	goto	u3810
  8199  00388A                     u3811:
  8200  00388A  EF50  F01C         	goto	l1108
  8201  00388E                     u3810:
  8202  00388E  6C1B               	negf	___flge@ff2^0,c
  8203  003890  1E1C               	comf	(___flge@ff2+1)^0,f,c
  8204  003892  B0D8               	btfsc	status,0,c
  8205  003894  2A1C               	incf	(___flge@ff2+1)^0,f,c
  8206  003896  1E1D               	comf	(___flge@ff2+2)^0,f,c
  8207  003898  B0D8               	btfsc	status,0,c
  8208  00389A  2A1D               	incf	(___flge@ff2+2)^0,f,c
  8209  00389C  0E80               	movlw	128
  8210  00389E  561E               	subfwb	(___flge@ff2+3)^0,f,c
  8211  0038A0                     l1108:
  8212  0038A0  0E00               	movlw	0
  8213  0038A2  1A17               	xorwf	___flge@ff1^0,f,c
  8214  0038A4  0E00               	movlw	0
  8215  0038A6  1A18               	xorwf	(___flge@ff1+1)^0,f,c
  8216  0038A8  0E00               	movlw	0
  8217  0038AA  1A19               	xorwf	(___flge@ff1+2)^0,f,c
  8218  0038AC  0E80               	movlw	128
  8219  0038AE  1A1A               	xorwf	(___flge@ff1+3)^0,f,c
  8220  0038B0  0E00               	movlw	0
  8221  0038B2  1A1B               	xorwf	___flge@ff2^0,f,c
  8222  0038B4  0E00               	movlw	0
  8223  0038B6  1A1C               	xorwf	(___flge@ff2+1)^0,f,c
  8224  0038B8  0E00               	movlw	0
  8225  0038BA  1A1D               	xorwf	(___flge@ff2+2)^0,f,c
  8226  0038BC  0E80               	movlw	128
  8227  0038BE  1A1E               	xorwf	(___flge@ff2+3)^0,f,c
  8228  0038C0  501B               	movf	___flge@ff2^0,w,c
  8229  0038C2  5C17               	subwf	___flge@ff1^0,w,c
  8230  0038C4  501C               	movf	(___flge@ff2+1)^0,w,c
  8231  0038C6  5818               	subwfb	(___flge@ff1+1)^0,w,c
  8232  0038C8  501D               	movf	(___flge@ff2+2)^0,w,c
  8233  0038CA  5819               	subwfb	(___flge@ff1+2)^0,w,c
  8234  0038CC  501E               	movf	(___flge@ff2+3)^0,w,c
  8235  0038CE  581A               	subwfb	(___flge@ff1+3)^0,w,c
  8236  0038D0  B0D8               	btfsc	status,0,c
  8237  0038D2  EF6D  F01C         	goto	u3821
  8238  0038D6  EF6F  F01C         	goto	u3820
  8239  0038DA                     u3821:
  8240  0038DA  EF72  F01C         	goto	l3893
  8241  0038DE                     u3820:
  8242  0038DE  90D8               	bcf	status,0,c
  8243  0038E0  EF73  F01C         	goto	l1113
  8244  0038E4                     l3893:
  8245  0038E4  80D8               	bsf	status,0,c
  8246  0038E6                     l1113:
  8247  0038E6  0012               	return		;funcret
  8248  0038E8                     __end_of___flge:
  8249                           	callstack 0
  8250                           
  8251 ;; *************** function ___fldiv *****************
  8252 ;; Defined at:
  8253 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  b               4   63[COMRAM] unsigned char 
  8256 ;;  a               4   67[COMRAM] unsigned char 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  grs             4    7[BANK0 ] unsigned long 
  8259 ;;  rem             4    0[BANK0 ] unsigned long 
  8260 ;;  new_exp         2    5[BANK0 ] short 
  8261 ;;  aexp            1   12[BANK0 ] unsigned char 
  8262 ;;  bexp            1   11[BANK0 ] unsigned char 
  8263 ;;  sign            1    4[BANK0 ] unsigned char 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  4   63[COMRAM] unsigned char 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8274 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8276 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;Total ram usage:       25 bytes
  8278 ;; Hardware stack levels used: 1
  8279 ;; Hardware stack levels required when called: 7
  8280 ;; This function calls:
  8281 ;;		Nothing
  8282 ;; This function is called by:
  8283 ;;		_colourcards_normaliseRGBC
  8284 ;;		_turnleft
  8285 ;;		_turnright
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text45
  8290  001D5E                     __ptext45:
  8291                           	callstack 0
  8292  001D5E                     ___fldiv:
  8293                           	callstack 20
  8294  001D5E  5043               	movf	(___fldiv@b+3)^0,w,c
  8295  001D60  0B80               	andlw	128
  8296  001D62  0100               	movlb	0	; () banked
  8297  001D64  6F64               	movwf	___fldiv@sign& (0+255),b
  8298  001D66  5043               	movf	(___fldiv@b+3)^0,w,c
  8299  001D68  2443               	addwf	(___fldiv@b+3)^0,w,c
  8300  001D6A  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8301  001D6C                     
  8302                           ; BSR set to: 0
  8303  001D6C  AE42               	btfss	(___fldiv@b+2)^0,7,c
  8304  001D6E  EFBB  F00E         	goto	u3361
  8305  001D72  EFBD  F00E         	goto	u3360
  8306  001D76                     u3361:
  8307  001D76  EFBE  F00E         	goto	l3613
  8308  001D7A                     u3360:
  8309  001D7A                     
  8310                           ; BSR set to: 0
  8311  001D7A  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8312  001D7C                     l3613:
  8313                           
  8314                           ; BSR set to: 0
  8315  001D7C  516B               	movf	___fldiv@bexp& (0+255),w,b
  8316  001D7E  B4D8               	btfsc	status,2,c
  8317  001D80  EFC4  F00E         	goto	u3371
  8318  001D84  EFC6  F00E         	goto	u3370
  8319  001D88                     u3371:
  8320  001D88  EFDB  F00E         	goto	l3623
  8321  001D8C                     u3370:
  8322  001D8C                     
  8323                           ; BSR set to: 0
  8324  001D8C  296B               	incf	___fldiv@bexp& (0+255),w,b
  8325  001D8E  A4D8               	btfss	status,2,c
  8326  001D90  EFCC  F00E         	goto	u3381
  8327  001D94  EFCE  F00E         	goto	u3380
  8328  001D98                     u3381:
  8329  001D98  EFD6  F00E         	goto	l3619
  8330  001D9C                     u3380:
  8331  001D9C                     
  8332                           ; BSR set to: 0
  8333  001D9C  0E00               	movlw	0
  8334  001D9E  6E40               	movwf	___fldiv@b^0,c
  8335  001DA0  0E00               	movlw	0
  8336  001DA2  6E41               	movwf	(___fldiv@b+1)^0,c
  8337  001DA4  0E00               	movlw	0
  8338  001DA6  6E42               	movwf	(___fldiv@b+2)^0,c
  8339  001DA8  0E00               	movlw	0
  8340  001DAA  6E43               	movwf	(___fldiv@b+3)^0,c
  8341  001DAC                     l3619:
  8342                           
  8343                           ; BSR set to: 0
  8344  001DAC  8E42               	bsf	(___fldiv@b+2)^0,7,c
  8345  001DAE                     
  8346                           ; BSR set to: 0
  8347  001DAE  0E00               	movlw	0
  8348  001DB0  6E43               	movwf	(___fldiv@b+3)^0,c
  8349  001DB2  EFE3  F00E         	goto	l3625
  8350  001DB6                     l3623:
  8351                           
  8352                           ; BSR set to: 0
  8353  001DB6  0E00               	movlw	0
  8354  001DB8  6E40               	movwf	___fldiv@b^0,c
  8355  001DBA  0E00               	movlw	0
  8356  001DBC  6E41               	movwf	(___fldiv@b+1)^0,c
  8357  001DBE  0E00               	movlw	0
  8358  001DC0  6E42               	movwf	(___fldiv@b+2)^0,c
  8359  001DC2  0E00               	movlw	0
  8360  001DC4  6E43               	movwf	(___fldiv@b+3)^0,c
  8361  001DC6                     l3625:
  8362                           
  8363                           ; BSR set to: 0
  8364  001DC6  5047               	movf	(___fldiv@a+3)^0,w,c
  8365  001DC8  0B80               	andlw	128
  8366  001DCA  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  8367  001DCC                     
  8368                           ; BSR set to: 0
  8369  001DCC  5047               	movf	(___fldiv@a+3)^0,w,c
  8370  001DCE  2447               	addwf	(___fldiv@a+3)^0,w,c
  8371  001DD0  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8372  001DD2                     
  8373                           ; BSR set to: 0
  8374  001DD2  AE46               	btfss	(___fldiv@a+2)^0,7,c
  8375  001DD4  EFEE  F00E         	goto	u3391
  8376  001DD8  EFF0  F00E         	goto	u3390
  8377  001DDC                     u3391:
  8378  001DDC  EFF1  F00E         	goto	l3633
  8379  001DE0                     u3390:
  8380  001DE0                     
  8381                           ; BSR set to: 0
  8382  001DE0  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8383  001DE2                     l3633:
  8384                           
  8385                           ; BSR set to: 0
  8386  001DE2  516C               	movf	___fldiv@aexp& (0+255),w,b
  8387  001DE4  B4D8               	btfsc	status,2,c
  8388  001DE6  EFF7  F00E         	goto	u3401
  8389  001DEA  EFF9  F00E         	goto	u3400
  8390  001DEE                     u3401:
  8391  001DEE  EF0E  F00F         	goto	l3643
  8392  001DF2                     u3400:
  8393  001DF2                     
  8394                           ; BSR set to: 0
  8395  001DF2  296C               	incf	___fldiv@aexp& (0+255),w,b
  8396  001DF4  A4D8               	btfss	status,2,c
  8397  001DF6  EFFF  F00E         	goto	u3411
  8398  001DFA  EF01  F00F         	goto	u3410
  8399  001DFE                     u3411:
  8400  001DFE  EF09  F00F         	goto	l3639
  8401  001E02                     u3410:
  8402  001E02                     
  8403                           ; BSR set to: 0
  8404  001E02  0E00               	movlw	0
  8405  001E04  6E44               	movwf	___fldiv@a^0,c
  8406  001E06  0E00               	movlw	0
  8407  001E08  6E45               	movwf	(___fldiv@a+1)^0,c
  8408  001E0A  0E00               	movlw	0
  8409  001E0C  6E46               	movwf	(___fldiv@a+2)^0,c
  8410  001E0E  0E00               	movlw	0
  8411  001E10  6E47               	movwf	(___fldiv@a+3)^0,c
  8412  001E12                     l3639:
  8413                           
  8414                           ; BSR set to: 0
  8415  001E12  8E46               	bsf	(___fldiv@a+2)^0,7,c
  8416  001E14                     
  8417                           ; BSR set to: 0
  8418  001E14  0E00               	movlw	0
  8419  001E16  6E47               	movwf	(___fldiv@a+3)^0,c
  8420  001E18  EF16  F00F         	goto	l3645
  8421  001E1C                     l3643:
  8422                           
  8423                           ; BSR set to: 0
  8424  001E1C  0E00               	movlw	0
  8425  001E1E  6E44               	movwf	___fldiv@a^0,c
  8426  001E20  0E00               	movlw	0
  8427  001E22  6E45               	movwf	(___fldiv@a+1)^0,c
  8428  001E24  0E00               	movlw	0
  8429  001E26  6E46               	movwf	(___fldiv@a+2)^0,c
  8430  001E28  0E00               	movlw	0
  8431  001E2A  6E47               	movwf	(___fldiv@a+3)^0,c
  8432  001E2C                     l3645:
  8433                           
  8434                           ; BSR set to: 0
  8435  001E2C  5044               	movf	___fldiv@a^0,w,c
  8436  001E2E  1045               	iorwf	(___fldiv@a+1)^0,w,c
  8437  001E30  1046               	iorwf	(___fldiv@a+2)^0,w,c
  8438  001E32  1047               	iorwf	(___fldiv@a+3)^0,w,c
  8439  001E34  A4D8               	btfss	status,2,c
  8440  001E36  EF1F  F00F         	goto	u3421
  8441  001E3A  EF21  F00F         	goto	u3420
  8442  001E3E                     u3421:
  8443  001E3E  EF39  F00F         	goto	l3657
  8444  001E42                     u3420:
  8445  001E42                     
  8446                           ; BSR set to: 0
  8447  001E42  0E00               	movlw	0
  8448  001E44  6E40               	movwf	___fldiv@b^0,c
  8449  001E46  0E00               	movlw	0
  8450  001E48  6E41               	movwf	(___fldiv@b+1)^0,c
  8451  001E4A  0E00               	movlw	0
  8452  001E4C  6E42               	movwf	(___fldiv@b+2)^0,c
  8453  001E4E  0E00               	movlw	0
  8454  001E50  6E43               	movwf	(___fldiv@b+3)^0,c
  8455  001E52                     
  8456                           ; BSR set to: 0
  8457  001E52  0E80               	movlw	128
  8458  001E54  1242               	iorwf	(___fldiv@b+2)^0,f,c
  8459  001E56  0E7F               	movlw	127
  8460  001E58  1243               	iorwf	(___fldiv@b+3)^0,f,c
  8461  001E5A                     l3651:
  8462                           
  8463                           ; BSR set to: 0
  8464  001E5A  5164               	movf	___fldiv@sign& (0+255),w,b
  8465  001E5C  1243               	iorwf	(___fldiv@b+3)^0,f,c
  8466  001E5E                     
  8467                           ; BSR set to: 0
  8468  001E5E  C040  F040         	movff	___fldiv@b,?___fldiv
  8469  001E62  C041  F041         	movff	___fldiv@b+1,?___fldiv+1
  8470  001E66  C042  F042         	movff	___fldiv@b+2,?___fldiv+2
  8471  001E6A  C043  F043         	movff	___fldiv@b+3,?___fldiv+3
  8472  001E6E  EF7C  F010         	goto	l1425
  8473  001E72                     l3657:
  8474                           
  8475                           ; BSR set to: 0
  8476  001E72  516B               	movf	___fldiv@bexp& (0+255),w,b
  8477  001E74  A4D8               	btfss	status,2,c
  8478  001E76  EF3F  F00F         	goto	u3431
  8479  001E7A  EF41  F00F         	goto	u3430
  8480  001E7E                     u3431:
  8481  001E7E  EF4B  F00F         	goto	l3665
  8482  001E82                     u3430:
  8483  001E82                     
  8484                           ; BSR set to: 0
  8485  001E82  0E00               	movlw	0
  8486  001E84  6E40               	movwf	?___fldiv^0,c
  8487  001E86  0E00               	movlw	0
  8488  001E88  6E41               	movwf	(?___fldiv+1)^0,c
  8489  001E8A  0E00               	movlw	0
  8490  001E8C  6E42               	movwf	(?___fldiv+2)^0,c
  8491  001E8E  0E00               	movlw	0
  8492  001E90  6E43               	movwf	(?___fldiv+3)^0,c
  8493  001E92  EF7C  F010         	goto	l1425
  8494  001E96                     l3665:
  8495                           
  8496                           ; BSR set to: 0
  8497  001E96  516C               	movf	___fldiv@aexp& (0+255),w,b
  8498  001E98  C06B  F048         	movff	___fldiv@bexp,??___fldiv
  8499  001E9C  6A49               	clrf	(??___fldiv+1)^0,c
  8500  001E9E  5E48               	subwf	??___fldiv^0,f,c
  8501  001EA0  0E00               	movlw	0
  8502  001EA2  5A49               	subwfb	(??___fldiv+1)^0,f,c
  8503  001EA4  0E7F               	movlw	127
  8504  001EA6  2448               	addwf	??___fldiv^0,w,c
  8505  001EA8  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8506  001EAA  0E00               	movlw	0
  8507  001EAC  2049               	addwfc	(??___fldiv+1)^0,w,c
  8508  001EAE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8509  001EB0                     
  8510                           ; BSR set to: 0
  8511  001EB0  C040  F060         	movff	___fldiv@b,___fldiv@rem
  8512  001EB4  C041  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  8513  001EB8  C042  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  8514  001EBC  C043  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  8515  001EC0                     
  8516                           ; BSR set to: 0
  8517  001EC0  0E00               	movlw	0
  8518  001EC2  6E40               	movwf	___fldiv@b^0,c
  8519  001EC4  0E00               	movlw	0
  8520  001EC6  6E41               	movwf	(___fldiv@b+1)^0,c
  8521  001EC8  0E00               	movlw	0
  8522  001ECA  6E42               	movwf	(___fldiv@b+2)^0,c
  8523  001ECC  0E00               	movlw	0
  8524  001ECE  6E43               	movwf	(___fldiv@b+3)^0,c
  8525  001ED0                     
  8526                           ; BSR set to: 0
  8527  001ED0  0E00               	movlw	0
  8528  001ED2  6F67               	movwf	___fldiv@grs& (0+255),b
  8529  001ED4  0E00               	movlw	0
  8530  001ED6  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8531  001ED8  0E00               	movlw	0
  8532  001EDA  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  8533  001EDC  0E00               	movlw	0
  8534  001EDE  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  8535  001EE0                     
  8536                           ; BSR set to: 0
  8537  001EE0  0E00               	movlw	0
  8538  001EE2  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8539  001EE4  EFAC  F00F         	goto	l1427
  8540  001EE8                     l3675:
  8541                           
  8542                           ; BSR set to: 0
  8543  001EE8  516C               	movf	___fldiv@aexp& (0+255),w,b
  8544  001EEA  B4D8               	btfsc	status,2,c
  8545  001EEC  EF7A  F00F         	goto	u3441
  8546  001EF0  EF7C  F00F         	goto	u3440
  8547  001EF4                     u3441:
  8548  001EF4  EF93  F00F         	goto	l3683
  8549  001EF8                     u3440:
  8550  001EF8                     
  8551                           ; BSR set to: 0
  8552  001EF8  90D8               	bcf	status,0,c
  8553  001EFA  3760               	rlcf	___fldiv@rem& (0+255),f,b
  8554  001EFC  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8555  001EFE  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8556  001F00  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8557  001F02  90D8               	bcf	status,0,c
  8558  001F04  3640               	rlcf	___fldiv@b^0,f,c
  8559  001F06  3641               	rlcf	(___fldiv@b+1)^0,f,c
  8560  001F08  3642               	rlcf	(___fldiv@b+2)^0,f,c
  8561  001F0A  3643               	rlcf	(___fldiv@b+3)^0,f,c
  8562  001F0C                     
  8563                           ; BSR set to: 0
  8564  001F0C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8565  001F0E  EF8B  F00F         	goto	u3451
  8566  001F12  EF8D  F00F         	goto	u3450
  8567  001F16                     u3451:
  8568  001F16  EF8E  F00F         	goto	l1430
  8569  001F1A                     u3450:
  8570  001F1A                     
  8571                           ; BSR set to: 0
  8572  001F1A  8040               	bsf	___fldiv@b^0,0,c
  8573  001F1C                     l1430:
  8574                           
  8575                           ; BSR set to: 0
  8576  001F1C  90D8               	bcf	status,0,c
  8577  001F1E  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8578  001F20  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8579  001F22  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8580  001F24  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8581  001F26                     l3683:
  8582                           
  8583                           ; BSR set to: 0
  8584  001F26  5044               	movf	___fldiv@a^0,w,c
  8585  001F28  5D60               	subwf	___fldiv@rem& (0+255),w,b
  8586  001F2A  5045               	movf	(___fldiv@a+1)^0,w,c
  8587  001F2C  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8588  001F2E  5046               	movf	(___fldiv@a+2)^0,w,c
  8589  001F30  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8590  001F32  5047               	movf	(___fldiv@a+3)^0,w,c
  8591  001F34  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8592  001F36  A0D8               	btfss	status,0,c
  8593  001F38  EFA0  F00F         	goto	u3461
  8594  001F3C  EFA2  F00F         	goto	u3460
  8595  001F40                     u3461:
  8596  001F40  EFAB  F00F         	goto	l3689
  8597  001F44                     u3460:
  8598  001F44                     
  8599                           ; BSR set to: 0
  8600  001F44  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8601  001F46                     
  8602                           ; BSR set to: 0
  8603  001F46  5044               	movf	___fldiv@a^0,w,c
  8604  001F48  5F60               	subwf	___fldiv@rem& (0+255),f,b
  8605  001F4A  5045               	movf	(___fldiv@a+1)^0,w,c
  8606  001F4C  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8607  001F4E  5046               	movf	(___fldiv@a+2)^0,w,c
  8608  001F50  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8609  001F52  5047               	movf	(___fldiv@a+3)^0,w,c
  8610  001F54  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8611  001F56                     l3689:
  8612                           
  8613                           ; BSR set to: 0
  8614  001F56  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  8615  001F58                     l1427:
  8616                           
  8617                           ; BSR set to: 0
  8618  001F58  0E19               	movlw	25
  8619  001F5A  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  8620  001F5C  EFB2  F00F         	goto	u3471
  8621  001F60  EFB4  F00F         	goto	u3470
  8622  001F64                     u3471:
  8623  001F64  EF74  F00F         	goto	l3675
  8624  001F68                     u3470:
  8625  001F68                     
  8626                           ; BSR set to: 0
  8627  001F68  5160               	movf	___fldiv@rem& (0+255),w,b
  8628  001F6A  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8629  001F6C  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8630  001F6E  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8631  001F70  B4D8               	btfsc	status,2,c
  8632  001F72  EFBD  F00F         	goto	u3481
  8633  001F76  EFBF  F00F         	goto	u3480
  8634  001F7A                     u3481:
  8635  001F7A  EFD7  F00F         	goto	l3701
  8636  001F7E                     u3480:
  8637  001F7E                     
  8638                           ; BSR set to: 0
  8639  001F7E  8167               	bsf	___fldiv@grs& (0+255),0,b
  8640  001F80  EFD7  F00F         	goto	l3701
  8641  001F84                     l3695:
  8642                           
  8643                           ; BSR set to: 0
  8644  001F84  90D8               	bcf	status,0,c
  8645  001F86  3640               	rlcf	___fldiv@b^0,f,c
  8646  001F88  3641               	rlcf	(___fldiv@b+1)^0,f,c
  8647  001F8A  3642               	rlcf	(___fldiv@b+2)^0,f,c
  8648  001F8C  3643               	rlcf	(___fldiv@b+3)^0,f,c
  8649  001F8E                     
  8650                           ; BSR set to: 0
  8651  001F8E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8652  001F90  EFCC  F00F         	goto	u3491
  8653  001F94  EFCE  F00F         	goto	u3490
  8654  001F98                     u3491:
  8655  001F98  EFCF  F00F         	goto	l1436
  8656  001F9C                     u3490:
  8657  001F9C                     
  8658                           ; BSR set to: 0
  8659  001F9C  8040               	bsf	___fldiv@b^0,0,c
  8660  001F9E                     l1436:
  8661                           
  8662                           ; BSR set to: 0
  8663  001F9E  90D8               	bcf	status,0,c
  8664  001FA0  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8665  001FA2  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8666  001FA4  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8667  001FA6  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8668  001FA8  0765               	decf	___fldiv@new_exp& (0+255),f,b
  8669  001FAA  A0D8               	btfss	status,0,c
  8670  001FAC  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8671  001FAE                     l3701:
  8672                           
  8673                           ; BSR set to: 0
  8674  001FAE  AE42               	btfss	(___fldiv@b+2)^0,7,c
  8675  001FB0  EFDC  F00F         	goto	u3501
  8676  001FB4  EFDE  F00F         	goto	u3500
  8677  001FB8                     u3501:
  8678  001FB8  EFC2  F00F         	goto	l3695
  8679  001FBC                     u3500:
  8680  001FBC                     
  8681                           ; BSR set to: 0
  8682  001FBC  0E00               	movlw	0
  8683  001FBE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8684  001FC0                     
  8685                           ; BSR set to: 0
  8686  001FC0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8687  001FC2  EFE5  F00F         	goto	u3511
  8688  001FC6  EFE7  F00F         	goto	u3510
  8689  001FCA                     u3511:
  8690  001FCA  EF0B  F010         	goto	l1438
  8691  001FCE                     u3510:
  8692  001FCE                     
  8693                           ; BSR set to: 0
  8694  001FCE  0EFF               	movlw	255
  8695  001FD0  1567               	andwf	___fldiv@grs& (0+255),w,b
  8696  001FD2  6E48               	movwf	??___fldiv^0,c
  8697  001FD4  0EFF               	movlw	255
  8698  001FD6  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8699  001FD8  6E49               	movwf	(??___fldiv+1)^0,c
  8700  001FDA  0EFF               	movlw	255
  8701  001FDC  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8702  001FDE  6E4A               	movwf	(??___fldiv+2)^0,c
  8703  001FE0  0E7F               	movlw	127
  8704  001FE2  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8705  001FE4  6E4B               	movwf	(??___fldiv+3)^0,c
  8706  001FE6  5048               	movf	??___fldiv^0,w,c
  8707  001FE8  1049               	iorwf	(??___fldiv+1)^0,w,c
  8708  001FEA  104A               	iorwf	(??___fldiv+2)^0,w,c
  8709  001FEC  104B               	iorwf	(??___fldiv+3)^0,w,c
  8710  001FEE  B4D8               	btfsc	status,2,c
  8711  001FF0  EFFC  F00F         	goto	u3521
  8712  001FF4  EFFE  F00F         	goto	u3520
  8713  001FF8                     u3521:
  8714  001FF8  EF02  F010         	goto	l1439
  8715  001FFC                     u3520:
  8716  001FFC                     l3709:
  8717                           
  8718                           ; BSR set to: 0
  8719  001FFC  0E01               	movlw	1
  8720  001FFE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8721  002000  EF0B  F010         	goto	l1438
  8722  002004                     l1439:
  8723                           
  8724                           ; BSR set to: 0
  8725  002004  A040               	btfss	___fldiv@b^0,0,c
  8726  002006  EF07  F010         	goto	u3531
  8727  00200A  EF09  F010         	goto	u3530
  8728  00200E                     u3531:
  8729  00200E  EF0B  F010         	goto	l1438
  8730  002012                     u3530:
  8731  002012  EFFE  F00F         	goto	l3709
  8732  002016                     l1438:
  8733                           
  8734                           ; BSR set to: 0
  8735  002016  516C               	movf	___fldiv@aexp& (0+255),w,b
  8736  002018  B4D8               	btfsc	status,2,c
  8737  00201A  EF11  F010         	goto	u3541
  8738  00201E  EF13  F010         	goto	u3540
  8739  002022                     u3541:
  8740  002022  EF37  F010         	goto	l3721
  8741  002026                     u3540:
  8742  002026                     
  8743                           ; BSR set to: 0
  8744  002026  0E01               	movlw	1
  8745  002028  2640               	addwf	___fldiv@b^0,f,c
  8746  00202A  0E00               	movlw	0
  8747  00202C  2241               	addwfc	(___fldiv@b+1)^0,f,c
  8748  00202E  2242               	addwfc	(___fldiv@b+2)^0,f,c
  8749  002030  2243               	addwfc	(___fldiv@b+3)^0,f,c
  8750  002032                     
  8751                           ; BSR set to: 0
  8752  002032  A043               	btfss	(___fldiv@b+3)^0,0,c
  8753  002034  EF1E  F010         	goto	u3551
  8754  002038  EF20  F010         	goto	u3550
  8755  00203C                     u3551:
  8756  00203C  EF37  F010         	goto	l3721
  8757  002040                     u3550:
  8758  002040                     
  8759                           ; BSR set to: 0
  8760  002040  C040  F048         	movff	___fldiv@b,??___fldiv
  8761  002044  C041  F049         	movff	___fldiv@b+1,??___fldiv+1
  8762  002048  C042  F04A         	movff	___fldiv@b+2,??___fldiv+2
  8763  00204C  C043  F04B         	movff	___fldiv@b+3,??___fldiv+3
  8764  002050  344B               	rlcf	(??___fldiv+3)^0,w,c
  8765  002052  324B               	rrcf	(??___fldiv+3)^0,f,c
  8766  002054  324A               	rrcf	(??___fldiv+2)^0,f,c
  8767  002056  3249               	rrcf	(??___fldiv+1)^0,f,c
  8768  002058  3248               	rrcf	??___fldiv^0,f,c
  8769  00205A  C048  F040         	movff	??___fldiv,___fldiv@b
  8770  00205E  C049  F041         	movff	??___fldiv+1,___fldiv@b+1
  8771  002062  C04A  F042         	movff	??___fldiv+2,___fldiv@b+2
  8772  002066  C04B  F043         	movff	??___fldiv+3,___fldiv@b+3
  8773  00206A                     
  8774                           ; BSR set to: 0
  8775  00206A  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  8776  00206C  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8777  00206E                     l3721:
  8778                           
  8779                           ; BSR set to: 0
  8780  00206E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8781  002070  EF42  F010         	goto	u3561
  8782  002074  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8783  002076  E108               	bnz	u3560
  8784  002078  2965               	incf	___fldiv@new_exp& (0+255),w,b
  8785  00207A  A0D8               	btfss	status,0,c
  8786  00207C  EF42  F010         	goto	u3561
  8787  002080  EF44  F010         	goto	u3560
  8788  002084                     u3561:
  8789  002084  EF4F  F010         	goto	l3725
  8790  002088                     u3560:
  8791  002088                     
  8792                           ; BSR set to: 0
  8793  002088  0E00               	movlw	0
  8794  00208A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8795  00208C  6965               	setf	___fldiv@new_exp& (0+255),b
  8796  00208E  0E00               	movlw	0
  8797  002090  6E40               	movwf	___fldiv@b^0,c
  8798  002092  0E00               	movlw	0
  8799  002094  6E41               	movwf	(___fldiv@b+1)^0,c
  8800  002096  0E00               	movlw	0
  8801  002098  6E42               	movwf	(___fldiv@b+2)^0,c
  8802  00209A  0E00               	movlw	0
  8803  00209C  6E43               	movwf	(___fldiv@b+3)^0,c
  8804  00209E                     l3725:
  8805                           
  8806                           ; BSR set to: 0
  8807  00209E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8808  0020A0  EF5C  F010         	goto	u3570
  8809  0020A4  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8810  0020A6  E106               	bnz	u3571
  8811  0020A8  0565               	decf	___fldiv@new_exp& (0+255),w,b
  8812  0020AA  B0D8               	btfsc	status,0,c
  8813  0020AC  EF5A  F010         	goto	u3571
  8814  0020B0  EF5C  F010         	goto	u3570
  8815  0020B4                     u3571:
  8816  0020B4  EF6A  F010         	goto	l3729
  8817  0020B8                     u3570:
  8818  0020B8                     
  8819                           ; BSR set to: 0
  8820  0020B8  0E00               	movlw	0
  8821  0020BA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8822  0020BC  0E00               	movlw	0
  8823  0020BE  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8824  0020C0  0E00               	movlw	0
  8825  0020C2  6E40               	movwf	___fldiv@b^0,c
  8826  0020C4  0E00               	movlw	0
  8827  0020C6  6E41               	movwf	(___fldiv@b+1)^0,c
  8828  0020C8  0E00               	movlw	0
  8829  0020CA  6E42               	movwf	(___fldiv@b+2)^0,c
  8830  0020CC  0E00               	movlw	0
  8831  0020CE  6E43               	movwf	(___fldiv@b+3)^0,c
  8832  0020D0  0E00               	movlw	0
  8833  0020D2  6F64               	movwf	___fldiv@sign& (0+255),b
  8834  0020D4                     l3729:
  8835                           
  8836                           ; BSR set to: 0
  8837  0020D4  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  8838  0020D8                     
  8839                           ; BSR set to: 0
  8840  0020D8  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  8841  0020DA  EF71  F010         	goto	u3581
  8842  0020DE  EF73  F010         	goto	u3580
  8843  0020E2                     u3581:
  8844  0020E2  EF76  F010         	goto	l3735
  8845  0020E6                     u3580:
  8846  0020E6                     
  8847                           ; BSR set to: 0
  8848  0020E6  8E42               	bsf	(___fldiv@b+2)^0,7,c
  8849  0020E8  EF77  F010         	goto	l3737
  8850  0020EC                     l3735:
  8851                           
  8852                           ; BSR set to: 0
  8853  0020EC  9E42               	bcf	(___fldiv@b+2)^0,7,c
  8854  0020EE                     l3737:
  8855                           
  8856                           ; BSR set to: 0
  8857  0020EE  90D8               	bcf	status,0,c
  8858  0020F0  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  8859  0020F2  6E43               	movwf	(___fldiv@b+3)^0,c
  8860  0020F4  EF2D  F00F         	goto	l3651
  8861  0020F8                     l1425:
  8862                           
  8863                           ; BSR set to: 0
  8864  0020F8  0012               	return		;funcret
  8865  0020FA                     __end_of___fldiv:
  8866                           	callstack 0
  8867                           
  8868 ;; *************** function ___fladd *****************
  8869 ;; Defined at:
  8870 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  b               4   47[COMRAM] unsigned char 
  8873 ;;  a               4   51[COMRAM] unsigned char 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  grs             1   62[COMRAM] unsigned char 
  8876 ;;  bexp            1   61[COMRAM] unsigned char 
  8877 ;;  aexp            1   60[COMRAM] unsigned char 
  8878 ;;  signs           1   59[COMRAM] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  4   47[COMRAM] unsigned char 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8888 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;Total ram usage:       16 bytes
  8893 ;; Hardware stack levels used: 1
  8894 ;; Hardware stack levels required when called: 7
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_turnleft
  8899 ;;		_turnright
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text46
  8904  001474                     __ptext46:
  8905                           	callstack 0
  8906  001474                     ___fladd:
  8907                           	callstack 20
  8908  001474  5033               	movf	(___fladd@b+3)^0,w,c
  8909  001476  0B80               	andlw	128
  8910  001478  6E3C               	movwf	___fladd@signs^0,c
  8911  00147A  5033               	movf	(___fladd@b+3)^0,w,c
  8912  00147C  2433               	addwf	(___fladd@b+3)^0,w,c
  8913  00147E  6E3E               	movwf	___fladd@bexp^0,c
  8914  001480  AE32               	btfss	(___fladd@b+2)^0,7,c
  8915  001482  EF45  F00A         	goto	u2971
  8916  001486  EF47  F00A         	goto	u2970
  8917  00148A                     u2971:
  8918  00148A  EF48  F00A         	goto	l3411
  8919  00148E                     u2970:
  8920  00148E  803E               	bsf	___fladd@bexp^0,0,c
  8921  001490                     l3411:
  8922  001490  503E               	movf	___fladd@bexp^0,w,c
  8923  001492  B4D8               	btfsc	status,2,c
  8924  001494  EF4E  F00A         	goto	u2981
  8925  001498  EF50  F00A         	goto	u2980
  8926  00149C                     u2981:
  8927  00149C  EF65  F00A         	goto	l3421
  8928  0014A0                     u2980:
  8929  0014A0  283E               	incf	___fladd@bexp^0,w,c
  8930  0014A2  A4D8               	btfss	status,2,c
  8931  0014A4  EF56  F00A         	goto	u2991
  8932  0014A8  EF58  F00A         	goto	u2990
  8933  0014AC                     u2991:
  8934  0014AC  EF60  F00A         	goto	l3417
  8935  0014B0                     u2990:
  8936  0014B0  0E00               	movlw	0
  8937  0014B2  6E30               	movwf	___fladd@b^0,c
  8938  0014B4  0E00               	movlw	0
  8939  0014B6  6E31               	movwf	(___fladd@b+1)^0,c
  8940  0014B8  0E00               	movlw	0
  8941  0014BA  6E32               	movwf	(___fladd@b+2)^0,c
  8942  0014BC  0E00               	movlw	0
  8943  0014BE  6E33               	movwf	(___fladd@b+3)^0,c
  8944  0014C0                     l3417:
  8945  0014C0  8E32               	bsf	(___fladd@b+2)^0,7,c
  8946  0014C2  0E00               	movlw	0
  8947  0014C4  6E33               	movwf	(___fladd@b+3)^0,c
  8948  0014C6  EF6D  F00A         	goto	l3423
  8949  0014CA                     l3421:
  8950  0014CA  0E00               	movlw	0
  8951  0014CC  6E30               	movwf	___fladd@b^0,c
  8952  0014CE  0E00               	movlw	0
  8953  0014D0  6E31               	movwf	(___fladd@b+1)^0,c
  8954  0014D2  0E00               	movlw	0
  8955  0014D4  6E32               	movwf	(___fladd@b+2)^0,c
  8956  0014D6  0E00               	movlw	0
  8957  0014D8  6E33               	movwf	(___fladd@b+3)^0,c
  8958  0014DA                     l3423:
  8959  0014DA  5037               	movf	(___fladd@a+3)^0,w,c
  8960  0014DC  0B80               	andlw	128
  8961  0014DE  6E3D               	movwf	___fladd@aexp^0,c
  8962  0014E0  503C               	movf	___fladd@signs^0,w,c
  8963  0014E2  183D               	xorwf	___fladd@aexp^0,w,c
  8964  0014E4  B4D8               	btfsc	status,2,c
  8965  0014E6  EF77  F00A         	goto	u3001
  8966  0014EA  EF79  F00A         	goto	u3000
  8967  0014EE                     u3001:
  8968  0014EE  EF7A  F00A         	goto	l3429
  8969  0014F2                     u3000:
  8970  0014F2  8C3C               	bsf	___fladd@signs^0,6,c
  8971  0014F4                     l3429:
  8972  0014F4  5037               	movf	(___fladd@a+3)^0,w,c
  8973  0014F6  2437               	addwf	(___fladd@a+3)^0,w,c
  8974  0014F8  6E3D               	movwf	___fladd@aexp^0,c
  8975  0014FA  AE36               	btfss	(___fladd@a+2)^0,7,c
  8976  0014FC  EF82  F00A         	goto	u3011
  8977  001500  EF84  F00A         	goto	u3010
  8978  001504                     u3011:
  8979  001504  EF85  F00A         	goto	l3435
  8980  001508                     u3010:
  8981  001508  803D               	bsf	___fladd@aexp^0,0,c
  8982  00150A                     l3435:
  8983  00150A  503D               	movf	___fladd@aexp^0,w,c
  8984  00150C  B4D8               	btfsc	status,2,c
  8985  00150E  EF8B  F00A         	goto	u3021
  8986  001512  EF8D  F00A         	goto	u3020
  8987  001516                     u3021:
  8988  001516  EFA2  F00A         	goto	l3445
  8989  00151A                     u3020:
  8990  00151A  283D               	incf	___fladd@aexp^0,w,c
  8991  00151C  A4D8               	btfss	status,2,c
  8992  00151E  EF93  F00A         	goto	u3031
  8993  001522  EF95  F00A         	goto	u3030
  8994  001526                     u3031:
  8995  001526  EF9D  F00A         	goto	l3441
  8996  00152A                     u3030:
  8997  00152A  0E00               	movlw	0
  8998  00152C  6E34               	movwf	___fladd@a^0,c
  8999  00152E  0E00               	movlw	0
  9000  001530  6E35               	movwf	(___fladd@a+1)^0,c
  9001  001532  0E00               	movlw	0
  9002  001534  6E36               	movwf	(___fladd@a+2)^0,c
  9003  001536  0E00               	movlw	0
  9004  001538  6E37               	movwf	(___fladd@a+3)^0,c
  9005  00153A                     l3441:
  9006  00153A  8E36               	bsf	(___fladd@a+2)^0,7,c
  9007  00153C  0E00               	movlw	0
  9008  00153E  6E37               	movwf	(___fladd@a+3)^0,c
  9009  001540  EFAA  F00A         	goto	l3447
  9010  001544                     l3445:
  9011  001544  0E00               	movlw	0
  9012  001546  6E34               	movwf	___fladd@a^0,c
  9013  001548  0E00               	movlw	0
  9014  00154A  6E35               	movwf	(___fladd@a+1)^0,c
  9015  00154C  0E00               	movlw	0
  9016  00154E  6E36               	movwf	(___fladd@a+2)^0,c
  9017  001550  0E00               	movlw	0
  9018  001552  6E37               	movwf	(___fladd@a+3)^0,c
  9019  001554                     l3447:
  9020  001554  503E               	movf	___fladd@bexp^0,w,c
  9021  001556  5C3D               	subwf	___fladd@aexp^0,w,c
  9022  001558  B0D8               	btfsc	status,0,c
  9023  00155A  EFB1  F00A         	goto	u3041
  9024  00155E  EFB3  F00A         	goto	u3040
  9025  001562                     u3041:
  9026  001562  EFDA  F00A         	goto	l3483
  9027  001566                     u3040:
  9028  001566  AC3C               	btfss	___fladd@signs^0,6,c
  9029  001568  EFB8  F00A         	goto	u3051
  9030  00156C  EFBA  F00A         	goto	u3050
  9031  001570                     u3051:
  9032  001570  EFBC  F00A         	goto	l3453
  9033  001574                     u3050:
  9034  001574  0E80               	movlw	128
  9035  001576  1A3C               	xorwf	___fladd@signs^0,f,c
  9036  001578                     l3453:
  9037  001578  C03E  F03F         	movff	___fladd@bexp,___fladd@grs
  9038  00157C  C03D  F03E         	movff	___fladd@aexp,___fladd@bexp
  9039  001580  C03F  F03D         	movff	___fladd@grs,___fladd@aexp
  9040  001584  C030  F03F         	movff	___fladd@b,___fladd@grs
  9041  001588  C034  F030         	movff	___fladd@a,___fladd@b
  9042  00158C  C03F  F034         	movff	___fladd@grs,___fladd@a
  9043  001590  C031  F03F         	movff	___fladd@b+1,___fladd@grs
  9044  001594  C035  F031         	movff	___fladd@a+1,___fladd@b+1
  9045  001598  C03F  F035         	movff	___fladd@grs,___fladd@a+1
  9046  00159C  C032  F03F         	movff	___fladd@b+2,___fladd@grs
  9047  0015A0  C036  F032         	movff	___fladd@a+2,___fladd@b+2
  9048  0015A4  C03F  F036         	movff	___fladd@grs,___fladd@a+2
  9049  0015A8  C033  F03F         	movff	___fladd@b+3,___fladd@grs
  9050  0015AC  C037  F033         	movff	___fladd@a+3,___fladd@b+3
  9051  0015B0  C03F  F037         	movff	___fladd@grs,___fladd@a+3
  9052  0015B4                     l3483:
  9053  0015B4  0E00               	movlw	0
  9054  0015B6  6E3F               	movwf	___fladd@grs^0,c
  9055  0015B8  503E               	movf	___fladd@bexp^0,w,c
  9056  0015BA  C03D  F038         	movff	___fladd@aexp,??___fladd
  9057  0015BE  6A39               	clrf	(??___fladd+1)^0,c
  9058  0015C0  5E38               	subwf	??___fladd^0,f,c
  9059  0015C2  0E00               	movlw	0
  9060  0015C4  5A39               	subwfb	(??___fladd+1)^0,f,c
  9061  0015C6  BE39               	btfsc	(??___fladd+1)^0,7,c
  9062  0015C8  EFEF  F00A         	goto	u3061
  9063  0015CC  5039               	movf	(??___fladd+1)^0,w,c
  9064  0015CE  E109               	bnz	u3060
  9065  0015D0  0E1A               	movlw	26
  9066  0015D2  5C38               	subwf	??___fladd^0,w,c
  9067  0015D4  A0D8               	btfss	status,0,c
  9068  0015D6  EFEF  F00A         	goto	u3061
  9069  0015DA  EFF1  F00A         	goto	u3060
  9070  0015DE                     u3061:
  9071  0015DE  EF28  F00B         	goto	l1372
  9072  0015E2                     u3060:
  9073  0015E2  5030               	movf	___fladd@b^0,w,c
  9074  0015E4  1031               	iorwf	(___fladd@b+1)^0,w,c
  9075  0015E6  1032               	iorwf	(___fladd@b+2)^0,w,c
  9076  0015E8  1033               	iorwf	(___fladd@b+3)^0,w,c
  9077  0015EA  A4D8               	btfss	status,2,c
  9078  0015EC  EFFA  F00A         	goto	u3071
  9079  0015F0  EFFD  F00A         	goto	u3070
  9080  0015F4                     u3071:
  9081  0015F4  0E01               	movlw	1
  9082  0015F6  EFFE  F00A         	goto	u3080
  9083  0015FA                     u3070:
  9084  0015FA  0E00               	movlw	0
  9085  0015FC                     u3080:
  9086  0015FC  6E3F               	movwf	___fladd@grs^0,c
  9087  0015FE  0E00               	movlw	0
  9088  001600  6E30               	movwf	___fladd@b^0,c
  9089  001602  0E00               	movlw	0
  9090  001604  6E31               	movwf	(___fladd@b+1)^0,c
  9091  001606  0E00               	movlw	0
  9092  001608  6E32               	movwf	(___fladd@b+2)^0,c
  9093  00160A  0E00               	movlw	0
  9094  00160C  6E33               	movwf	(___fladd@b+3)^0,c
  9095  00160E  C03D  F03E         	movff	___fladd@aexp,___fladd@bexp
  9096  001612  EF31  F00B         	goto	l1371
  9097  001616                     l1373:
  9098  001616  A03F               	btfss	___fladd@grs^0,0,c
  9099  001618  EF10  F00B         	goto	u3091
  9100  00161C  EF12  F00B         	goto	u3090
  9101  001620                     u3091:
  9102  001620  EF18  F00B         	goto	l3495
  9103  001624                     u3090:
  9104  001624  90D8               	bcf	status,0,c
  9105  001626  303F               	rrcf	___fladd@grs^0,w,c
  9106  001628  0901               	iorlw	1
  9107  00162A  6E3F               	movwf	___fladd@grs^0,c
  9108  00162C  EF1A  F00B         	goto	l3497
  9109  001630                     l3495:
  9110  001630  90D8               	bcf	status,0,c
  9111  001632  323F               	rrcf	___fladd@grs^0,f,c
  9112  001634                     l3497:
  9113  001634  A030               	btfss	___fladd@b^0,0,c
  9114  001636  EF1F  F00B         	goto	u3101
  9115  00163A  EF21  F00B         	goto	u3100
  9116  00163E                     u3101:
  9117  00163E  EF22  F00B         	goto	l3501
  9118  001642                     u3100:
  9119  001642  8E3F               	bsf	___fladd@grs^0,7,c
  9120  001644                     l3501:
  9121  001644  3433               	rlcf	(___fladd@b+3)^0,w,c
  9122  001646  3233               	rrcf	(___fladd@b+3)^0,f,c
  9123  001648  3232               	rrcf	(___fladd@b+2)^0,f,c
  9124  00164A  3231               	rrcf	(___fladd@b+1)^0,f,c
  9125  00164C  3230               	rrcf	___fladd@b^0,f,c
  9126  00164E  2A3E               	incf	___fladd@bexp^0,f,c
  9127  001650                     l1372:
  9128  001650  503D               	movf	___fladd@aexp^0,w,c
  9129  001652  5C3E               	subwf	___fladd@bexp^0,w,c
  9130  001654  A0D8               	btfss	status,0,c
  9131  001656  EF2F  F00B         	goto	u3111
  9132  00165A  EF31  F00B         	goto	u3110
  9133  00165E                     u3111:
  9134  00165E  EF0B  F00B         	goto	l1373
  9135  001662                     u3110:
  9136  001662                     l1371:
  9137  001662  BC3C               	btfsc	___fladd@signs^0,6,c
  9138  001664  EF36  F00B         	goto	u3121
  9139  001668  EF38  F00B         	goto	u3120
  9140  00166C                     u3121:
  9141  00166C  EF78  F00B         	goto	l3529
  9142  001670                     u3120:
  9143  001670  503E               	movf	___fladd@bexp^0,w,c
  9144  001672  A4D8               	btfss	status,2,c
  9145  001674  EF3E  F00B         	goto	u3131
  9146  001678  EF40  F00B         	goto	u3130
  9147  00167C                     u3131:
  9148  00167C  EF4A  F00B         	goto	l3511
  9149  001680                     u3130:
  9150  001680  0E00               	movlw	0
  9151  001682  6E30               	movwf	?___fladd^0,c
  9152  001684  0E00               	movlw	0
  9153  001686  6E31               	movwf	(?___fladd+1)^0,c
  9154  001688  0E00               	movlw	0
  9155  00168A  6E32               	movwf	(?___fladd+2)^0,c
  9156  00168C  0E00               	movlw	0
  9157  00168E  6E33               	movwf	(?___fladd+3)^0,c
  9158  001690  EF99  F00C         	goto	l1380
  9159  001694                     l3511:
  9160  001694  5034               	movf	___fladd@a^0,w,c
  9161  001696  2630               	addwf	___fladd@b^0,f,c
  9162  001698  5035               	movf	(___fladd@a+1)^0,w,c
  9163  00169A  2231               	addwfc	(___fladd@b+1)^0,f,c
  9164  00169C  5036               	movf	(___fladd@a+2)^0,w,c
  9165  00169E  2232               	addwfc	(___fladd@b+2)^0,f,c
  9166  0016A0  5037               	movf	(___fladd@a+3)^0,w,c
  9167  0016A2  2233               	addwfc	(___fladd@b+3)^0,f,c
  9168  0016A4  A033               	btfss	(___fladd@b+3)^0,0,c
  9169  0016A6  EF57  F00B         	goto	u3141
  9170  0016AA  EF59  F00B         	goto	u3140
  9171  0016AE                     u3141:
  9172  0016AE  EF05  F00C         	goto	l3565
  9173  0016B2                     u3140:
  9174  0016B2  A03F               	btfss	___fladd@grs^0,0,c
  9175  0016B4  EF5E  F00B         	goto	u3151
  9176  0016B8  EF60  F00B         	goto	u3150
  9177  0016BC                     u3151:
  9178  0016BC  EF66  F00B         	goto	l3519
  9179  0016C0                     u3150:
  9180  0016C0  90D8               	bcf	status,0,c
  9181  0016C2  303F               	rrcf	___fladd@grs^0,w,c
  9182  0016C4  0901               	iorlw	1
  9183  0016C6  6E3F               	movwf	___fladd@grs^0,c
  9184  0016C8  EF68  F00B         	goto	l3521
  9185  0016CC                     l3519:
  9186  0016CC  90D8               	bcf	status,0,c
  9187  0016CE  323F               	rrcf	___fladd@grs^0,f,c
  9188  0016D0                     l3521:
  9189  0016D0  A030               	btfss	___fladd@b^0,0,c
  9190  0016D2  EF6D  F00B         	goto	u3161
  9191  0016D6  EF6F  F00B         	goto	u3160
  9192  0016DA                     u3161:
  9193  0016DA  EF70  F00B         	goto	l3525
  9194  0016DE                     u3160:
  9195  0016DE  8E3F               	bsf	___fladd@grs^0,7,c
  9196  0016E0                     l3525:
  9197  0016E0  3433               	rlcf	(___fladd@b+3)^0,w,c
  9198  0016E2  3233               	rrcf	(___fladd@b+3)^0,f,c
  9199  0016E4  3232               	rrcf	(___fladd@b+2)^0,f,c
  9200  0016E6  3231               	rrcf	(___fladd@b+1)^0,f,c
  9201  0016E8  3230               	rrcf	___fladd@b^0,f,c
  9202  0016EA  2A3E               	incf	___fladd@bexp^0,f,c
  9203  0016EC  EF05  F00C         	goto	l3565
  9204  0016F0                     l3529:
  9205  0016F0  5034               	movf	___fladd@a^0,w,c
  9206  0016F2  5C30               	subwf	___fladd@b^0,w,c
  9207  0016F4  5035               	movf	(___fladd@a+1)^0,w,c
  9208  0016F6  5831               	subwfb	(___fladd@b+1)^0,w,c
  9209  0016F8  5036               	movf	(___fladd@a+2)^0,w,c
  9210  0016FA  5832               	subwfb	(___fladd@b+2)^0,w,c
  9211  0016FC  5033               	movf	(___fladd@b+3)^0,w,c
  9212  0016FE  0A80               	xorlw	128
  9213  001700  6E38               	movwf	??___fladd^0,c
  9214  001702  5037               	movf	(___fladd@a+3)^0,w,c
  9215  001704  0A80               	xorlw	128
  9216  001706  5838               	subwfb	??___fladd^0,w,c
  9217  001708  B0D8               	btfsc	status,0,c
  9218  00170A  EF89  F00B         	goto	u3171
  9219  00170E  EF8B  F00B         	goto	u3170
  9220  001712                     u3171:
  9221  001712  EFB6  F00B         	goto	l3539
  9222  001716                     u3170:
  9223  001716  5030               	movf	___fladd@b^0,w,c
  9224  001718  5C34               	subwf	___fladd@a^0,w,c
  9225  00171A  6E38               	movwf	??___fladd^0,c
  9226  00171C  5031               	movf	(___fladd@b+1)^0,w,c
  9227  00171E  5835               	subwfb	(___fladd@a+1)^0,w,c
  9228  001720  6E39               	movwf	(??___fladd+1)^0,c
  9229  001722  5032               	movf	(___fladd@b+2)^0,w,c
  9230  001724  5836               	subwfb	(___fladd@a+2)^0,w,c
  9231  001726  6E3A               	movwf	(??___fladd+2)^0,c
  9232  001728  5033               	movf	(___fladd@b+3)^0,w,c
  9233  00172A  5837               	subwfb	(___fladd@a+3)^0,w,c
  9234  00172C  6E3B               	movwf	(??___fladd+3)^0,c
  9235  00172E  0EFF               	movlw	255
  9236  001730  2438               	addwf	??___fladd^0,w,c
  9237  001732  6E30               	movwf	___fladd@b^0,c
  9238  001734  0EFF               	movlw	255
  9239  001736  2039               	addwfc	(??___fladd+1)^0,w,c
  9240  001738  6E31               	movwf	(___fladd@b+1)^0,c
  9241  00173A  0EFF               	movlw	255
  9242  00173C  203A               	addwfc	(??___fladd+2)^0,w,c
  9243  00173E  6E32               	movwf	(___fladd@b+2)^0,c
  9244  001740  0EFF               	movlw	255
  9245  001742  203B               	addwfc	(??___fladd+3)^0,w,c
  9246  001744  6E33               	movwf	(___fladd@b+3)^0,c
  9247  001746  0E80               	movlw	128
  9248  001748  1A3C               	xorwf	___fladd@signs^0,f,c
  9249  00174A  6C3F               	negf	___fladd@grs^0,c
  9250  00174C  503F               	movf	___fladd@grs^0,w,c
  9251  00174E  A4D8               	btfss	status,2,c
  9252  001750  EFAC  F00B         	goto	u3181
  9253  001754  EFAE  F00B         	goto	u3180
  9254  001758                     u3181:
  9255  001758  EFBE  F00B         	goto	l1388
  9256  00175C                     u3180:
  9257  00175C  0E01               	movlw	1
  9258  00175E  2630               	addwf	___fladd@b^0,f,c
  9259  001760  0E00               	movlw	0
  9260  001762  2231               	addwfc	(___fladd@b+1)^0,f,c
  9261  001764  2232               	addwfc	(___fladd@b+2)^0,f,c
  9262  001766  2233               	addwfc	(___fladd@b+3)^0,f,c
  9263  001768  EFBE  F00B         	goto	l1388
  9264  00176C                     l3539:
  9265  00176C  5034               	movf	___fladd@a^0,w,c
  9266  00176E  5E30               	subwf	___fladd@b^0,f,c
  9267  001770  5035               	movf	(___fladd@a+1)^0,w,c
  9268  001772  5A31               	subwfb	(___fladd@b+1)^0,f,c
  9269  001774  5036               	movf	(___fladd@a+2)^0,w,c
  9270  001776  5A32               	subwfb	(___fladd@b+2)^0,f,c
  9271  001778  5037               	movf	(___fladd@a+3)^0,w,c
  9272  00177A  5A33               	subwfb	(___fladd@b+3)^0,f,c
  9273  00177C                     l1388:
  9274  00177C  5030               	movf	___fladd@b^0,w,c
  9275  00177E  1031               	iorwf	(___fladd@b+1)^0,w,c
  9276  001780  1032               	iorwf	(___fladd@b+2)^0,w,c
  9277  001782  1033               	iorwf	(___fladd@b+3)^0,w,c
  9278  001784  A4D8               	btfss	status,2,c
  9279  001786  EFC7  F00B         	goto	u3191
  9280  00178A  EFC9  F00B         	goto	u3190
  9281  00178E                     u3191:
  9282  00178E  EFFE  F00B         	goto	l3563
  9283  001792                     u3190:
  9284  001792  503F               	movf	___fladd@grs^0,w,c
  9285  001794  A4D8               	btfss	status,2,c
  9286  001796  EFCF  F00B         	goto	u3201
  9287  00179A  EFD1  F00B         	goto	u3200
  9288  00179E                     u3201:
  9289  00179E  EFFE  F00B         	goto	l3563
  9290  0017A2                     u3200:
  9291  0017A2  0E00               	movlw	0
  9292  0017A4  6E30               	movwf	?___fladd^0,c
  9293  0017A6  0E00               	movlw	0
  9294  0017A8  6E31               	movwf	(?___fladd+1)^0,c
  9295  0017AA  0E00               	movlw	0
  9296  0017AC  6E32               	movwf	(?___fladd+2)^0,c
  9297  0017AE  0E00               	movlw	0
  9298  0017B0  6E33               	movwf	(?___fladd+3)^0,c
  9299  0017B2  EF99  F00C         	goto	l1380
  9300  0017B6                     l3547:
  9301  0017B6  90D8               	bcf	status,0,c
  9302  0017B8  3630               	rlcf	___fladd@b^0,f,c
  9303  0017BA  3631               	rlcf	(___fladd@b+1)^0,f,c
  9304  0017BC  3632               	rlcf	(___fladd@b+2)^0,f,c
  9305  0017BE  3633               	rlcf	(___fladd@b+3)^0,f,c
  9306  0017C0  AE3F               	btfss	___fladd@grs^0,7,c
  9307  0017C2  EFE5  F00B         	goto	u3211
  9308  0017C6  EFE7  F00B         	goto	u3210
  9309  0017CA                     u3211:
  9310  0017CA  EFE8  F00B         	goto	l3553
  9311  0017CE                     u3210:
  9312  0017CE  8030               	bsf	___fladd@b^0,0,c
  9313  0017D0                     l3553:
  9314  0017D0  A03F               	btfss	___fladd@grs^0,0,c
  9315  0017D2  EFED  F00B         	goto	u3221
  9316  0017D6  EFEF  F00B         	goto	u3220
  9317  0017DA                     u3221:
  9318  0017DA  EFF3  F00B         	goto	l3557
  9319  0017DE                     u3220:
  9320  0017DE  80D8               	bsf	status,0,c
  9321  0017E0  363F               	rlcf	___fladd@grs^0,f,c
  9322  0017E2  EFF5  F00B         	goto	l3559
  9323  0017E6                     l3557:
  9324  0017E6  90D8               	bcf	status,0,c
  9325  0017E8  363F               	rlcf	___fladd@grs^0,f,c
  9326  0017EA                     l3559:
  9327  0017EA  503E               	movf	___fladd@bexp^0,w,c
  9328  0017EC  B4D8               	btfsc	status,2,c
  9329  0017EE  EFFB  F00B         	goto	u3231
  9330  0017F2  EFFD  F00B         	goto	u3230
  9331  0017F6                     u3231:
  9332  0017F6  EFFE  F00B         	goto	l3563
  9333  0017FA                     u3230:
  9334  0017FA  063E               	decf	___fladd@bexp^0,f,c
  9335  0017FC                     l3563:
  9336  0017FC  AE32               	btfss	(___fladd@b+2)^0,7,c
  9337  0017FE  EF03  F00C         	goto	u3241
  9338  001802  EF05  F00C         	goto	u3240
  9339  001806                     u3241:
  9340  001806  EFDB  F00B         	goto	l3547
  9341  00180A                     u3240:
  9342  00180A                     l3565:
  9343  00180A  0E00               	movlw	0
  9344  00180C  6E3D               	movwf	___fladd@aexp^0,c
  9345  00180E  AE3F               	btfss	___fladd@grs^0,7,c
  9346  001810  EF0C  F00C         	goto	u3251
  9347  001814  EF0E  F00C         	goto	u3250
  9348  001818                     u3251:
  9349  001818  EF26  F00C         	goto	l1397
  9350  00181C                     u3250:
  9351  00181C  C03F  F038         	movff	___fladd@grs,??___fladd
  9352  001820  0E7F               	movlw	127
  9353  001822  1638               	andwf	??___fladd^0,f,c
  9354  001824  B4D8               	btfsc	status,2,c
  9355  001826  EF17  F00C         	goto	u3261
  9356  00182A  EF19  F00C         	goto	u3260
  9357  00182E                     u3261:
  9358  00182E  EF1D  F00C         	goto	l1398
  9359  001832                     u3260:
  9360  001832                     l3571:
  9361  001832  0E01               	movlw	1
  9362  001834  6E3D               	movwf	___fladd@aexp^0,c
  9363  001836  EF26  F00C         	goto	l1397
  9364  00183A                     l1398:
  9365  00183A  A030               	btfss	___fladd@b^0,0,c
  9366  00183C  EF22  F00C         	goto	u3271
  9367  001840  EF24  F00C         	goto	u3270
  9368  001844                     u3271:
  9369  001844  EF26  F00C         	goto	l1397
  9370  001848                     u3270:
  9371  001848  EF19  F00C         	goto	l3571
  9372  00184C                     l1397:
  9373  00184C  503D               	movf	___fladd@aexp^0,w,c
  9374  00184E  B4D8               	btfsc	status,2,c
  9375  001850  EF2C  F00C         	goto	u3281
  9376  001854  EF2E  F00C         	goto	u3280
  9377  001858                     u3281:
  9378  001858  EF59  F00C         	goto	l3583
  9379  00185C                     u3280:
  9380  00185C  0E01               	movlw	1
  9381  00185E  2630               	addwf	___fladd@b^0,f,c
  9382  001860  0E00               	movlw	0
  9383  001862  2231               	addwfc	(___fladd@b+1)^0,f,c
  9384  001864  2232               	addwfc	(___fladd@b+2)^0,f,c
  9385  001866  2233               	addwfc	(___fladd@b+3)^0,f,c
  9386  001868  A033               	btfss	(___fladd@b+3)^0,0,c
  9387  00186A  EF39  F00C         	goto	u3291
  9388  00186E  EF3B  F00C         	goto	u3290
  9389  001872                     u3291:
  9390  001872  EF59  F00C         	goto	l3583
  9391  001876                     u3290:
  9392  001876  C030  F038         	movff	___fladd@b,??___fladd
  9393  00187A  C031  F039         	movff	___fladd@b+1,??___fladd+1
  9394  00187E  C032  F03A         	movff	___fladd@b+2,??___fladd+2
  9395  001882  C033  F03B         	movff	___fladd@b+3,??___fladd+3
  9396  001886  343B               	rlcf	(??___fladd+3)^0,w,c
  9397  001888  323B               	rrcf	(??___fladd+3)^0,f,c
  9398  00188A  323A               	rrcf	(??___fladd+2)^0,f,c
  9399  00188C  3239               	rrcf	(??___fladd+1)^0,f,c
  9400  00188E  3238               	rrcf	??___fladd^0,f,c
  9401  001890  C038  F030         	movff	??___fladd,___fladd@b
  9402  001894  C039  F031         	movff	??___fladd+1,___fladd@b+1
  9403  001898  C03A  F032         	movff	??___fladd+2,___fladd@b+2
  9404  00189C  C03B  F033         	movff	??___fladd+3,___fladd@b+3
  9405  0018A0  283E               	incf	___fladd@bexp^0,w,c
  9406  0018A2  B4D8               	btfsc	status,2,c
  9407  0018A4  EF56  F00C         	goto	u3301
  9408  0018A8  EF58  F00C         	goto	u3300
  9409  0018AC                     u3301:
  9410  0018AC  EF59  F00C         	goto	l3583
  9411  0018B0                     u3300:
  9412  0018B0  2A3E               	incf	___fladd@bexp^0,f,c
  9413  0018B2                     l3583:
  9414  0018B2  283E               	incf	___fladd@bexp^0,w,c
  9415  0018B4  B4D8               	btfsc	status,2,c
  9416  0018B6  EF5F  F00C         	goto	u3311
  9417  0018BA  EF61  F00C         	goto	u3310
  9418  0018BE                     u3311:
  9419  0018BE  EF69  F00C         	goto	l3587
  9420  0018C2                     u3310:
  9421  0018C2  503E               	movf	___fladd@bexp^0,w,c
  9422  0018C4  A4D8               	btfss	status,2,c
  9423  0018C6  EF67  F00C         	goto	u3321
  9424  0018CA  EF69  F00C         	goto	u3320
  9425  0018CE                     u3321:
  9426  0018CE  EF7B  F00C         	goto	l3591
  9427  0018D2                     u3320:
  9428  0018D2                     l3587:
  9429  0018D2  0E00               	movlw	0
  9430  0018D4  6E30               	movwf	___fladd@b^0,c
  9431  0018D6  0E00               	movlw	0
  9432  0018D8  6E31               	movwf	(___fladd@b+1)^0,c
  9433  0018DA  0E00               	movlw	0
  9434  0018DC  6E32               	movwf	(___fladd@b+2)^0,c
  9435  0018DE  0E00               	movlw	0
  9436  0018E0  6E33               	movwf	(___fladd@b+3)^0,c
  9437  0018E2  503E               	movf	___fladd@bexp^0,w,c
  9438  0018E4  A4D8               	btfss	status,2,c
  9439  0018E6  EF77  F00C         	goto	u3331
  9440  0018EA  EF79  F00C         	goto	u3330
  9441  0018EE                     u3331:
  9442  0018EE  EF7B  F00C         	goto	l3591
  9443  0018F2                     u3330:
  9444  0018F2  0E00               	movlw	0
  9445  0018F4  6E3C               	movwf	___fladd@signs^0,c
  9446  0018F6                     l3591:
  9447  0018F6  A03E               	btfss	___fladd@bexp^0,0,c
  9448  0018F8  EF80  F00C         	goto	u3341
  9449  0018FC  EF82  F00C         	goto	u3340
  9450  001900                     u3341:
  9451  001900  EF85  F00C         	goto	l3595
  9452  001904                     u3340:
  9453  001904  8E32               	bsf	(___fladd@b+2)^0,7,c
  9454  001906  EF86  F00C         	goto	l3597
  9455  00190A                     l3595:
  9456  00190A  9E32               	bcf	(___fladd@b+2)^0,7,c
  9457  00190C                     l3597:
  9458  00190C  90D8               	bcf	status,0,c
  9459  00190E  303E               	rrcf	___fladd@bexp^0,w,c
  9460  001910  6E33               	movwf	(___fladd@b+3)^0,c
  9461  001912  AE3C               	btfss	___fladd@signs^0,7,c
  9462  001914  EF8E  F00C         	goto	u3351
  9463  001918  EF90  F00C         	goto	u3350
  9464  00191C                     u3351:
  9465  00191C  EF91  F00C         	goto	l3603
  9466  001920                     u3350:
  9467  001920  8E33               	bsf	(___fladd@b+3)^0,7,c
  9468  001922                     l3603:
  9469  001922  C030  F030         	movff	___fladd@b,?___fladd
  9470  001926  C031  F031         	movff	___fladd@b+1,?___fladd+1
  9471  00192A  C032  F032         	movff	___fladd@b+2,?___fladd+2
  9472  00192E  C033  F033         	movff	___fladd@b+3,?___fladd+3
  9473  001932                     l1380:
  9474  001932  0012               	return		;funcret
  9475  001934                     __end_of___fladd:
  9476                           	callstack 0
  9477                           
  9478 ;; *************** function _stop *****************
  9479 ;; Defined at:
  9480 ;;		line 145 in file "DC_motors.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  mL              2   33[COMRAM] PTR struct .
  9483 ;;		 -> main@motorL(9), 
  9484 ;;  mR              2   35[COMRAM] PTR struct .
  9485 ;;		 -> main@motorR(9), 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;		None
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9501 ;;Total ram usage:        6 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; Hardware stack levels required when called: 9
  9504 ;; This function calls:
  9505 ;;		_DCmotors_setPWM
  9506 ;; This function is called by:
  9507 ;;		_main
  9508 ;;		_colourcards_readRGBC
  9509 ;;		_clearance
  9510 ;;		_instructions
  9511 ;;		_reverseinstructions
  9512 ;;		_returnhome
  9513 ;;		_DCmotors_calibration
  9514 ;;		_DCmotors_testing
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text47
  9519  003DFA                     __ptext47:
  9520                           	callstack 0
  9521  003DFA                     _stop:
  9522                           	callstack 21
  9523  003DFA                     
  9524                           ;DC_motors.c: 146:     LATDbits.LATD4 = 1;
  9525  003DFA  887C               	bsf	124,4,c	;volatile
  9526                           
  9527                           ;DC_motors.c: 148:     while((mL->power > 0) && (mR->power > 0)){
  9528  003DFC  EF1C  F01F         	goto	l3353
  9529  003E00                     l3345:
  9530                           
  9531                           ;DC_motors.c: 149:         mL->power -= 10;
  9532  003E00  C022  FFD9         	movff	stop@mL,fsr2l
  9533  003E04  C023  FFDA         	movff	stop@mL+1,fsr2h
  9534  003E08  0E0A               	movlw	10
  9535  003E0A  5EDF               	subwf	indf2,f,c
  9536                           
  9537                           ;DC_motors.c: 150:         mR->power -= 10;
  9538  003E0C  C024  FFD9         	movff	stop@mR,fsr2l
  9539  003E10  C025  FFDA         	movff	stop@mR+1,fsr2h
  9540  003E14  0E0A               	movlw	10
  9541  003E16  5EDF               	subwf	indf2,f,c
  9542  003E18                     
  9543                           ;DC_motors.c: 153:         DCmotors_setPWM(mL);
  9544  003E18  C022  F017         	movff	stop@mL,DCmotors_setPWM@m
  9545  003E1C  C023  F018         	movff	stop@mL+1,DCmotors_setPWM@m+1
  9546  003E20  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  9547  003E24                     
  9548                           ;DC_motors.c: 154:         DCmotors_setPWM(mR);
  9549  003E24  C024  F017         	movff	stop@mR,DCmotors_setPWM@m
  9550  003E28  C025  F018         	movff	stop@mR+1,DCmotors_setPWM@m+1
  9551  003E2C  EC13  F018         	call	_DCmotors_setPWM	;wreg free
  9552  003E30                     
  9553                           ;DC_motors.c: 155:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  9554  003E30  0EA0               	movlw	160
  9555  003E32                     u7217:
  9556  003E32  D000               	nop2	
  9557  003E34  2EE8               	decfsz	wreg,f,c
  9558  003E36  D7FD               	bra	u7217
  9559  003E38                     l3353:
  9560                           
  9561                           ;DC_motors.c: 148:     while((mL->power > 0) && (mR->power > 0)){
  9562  003E38  C022  FFD9         	movff	stop@mL,fsr2l
  9563  003E3C  C023  FFDA         	movff	stop@mL+1,fsr2h
  9564  003E40  50DF               	movf	indf2,w,c
  9565  003E42  B4D8               	btfsc	status,2,c
  9566  003E44  EF26  F01F         	goto	u2911
  9567  003E48  EF28  F01F         	goto	u2910
  9568  003E4C                     u2911:
  9569  003E4C  EF34  F01F         	goto	l3357
  9570  003E50                     u2910:
  9571  003E50  C024  FFD9         	movff	stop@mR,fsr2l
  9572  003E54  C025  FFDA         	movff	stop@mR+1,fsr2h
  9573  003E58  50DF               	movf	indf2,w,c
  9574  003E5A  A4D8               	btfss	status,2,c
  9575  003E5C  EF32  F01F         	goto	u2921
  9576  003E60  EF34  F01F         	goto	u2920
  9577  003E64                     u2921:
  9578  003E64  EF00  F01F         	goto	l3345
  9579  003E68                     u2920:
  9580  003E68                     l3357:
  9581                           
  9582                           ;DC_motors.c: 157:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9583  003E68  0E29               	movlw	41
  9584  003E6A  6E27               	movwf	(??_stop+1)^0,c
  9585  003E6C  0E96               	movlw	150
  9586  003E6E  6E26               	movwf	??_stop^0,c
  9587  003E70  0E7F               	movlw	127
  9588  003E72                     u7227:
  9589  003E72  2EE8               	decfsz	wreg,f,c
  9590  003E74  D7FE               	bra	u7227
  9591  003E76  2E26               	decfsz	??_stop^0,f,c
  9592  003E78  D7FC               	bra	u7227
  9593  003E7A  2E27               	decfsz	(??_stop+1)^0,f,c
  9594  003E7C  D7FA               	bra	u7227
  9595  003E7E  F000               	nop	
  9596  003E80                     
  9597                           ;DC_motors.c: 158:     LATDbits.LATD4 = 0;
  9598  003E80  987C               	bcf	124,4,c	;volatile
  9599  003E82  0012               	return		;funcret
  9600  003E84                     __end_of_stop:
  9601                           	callstack 0
  9602                           
  9603 ;; *************** function _DCmotors_setPWM *****************
  9604 ;; Defined at:
  9605 ;;		line 50 in file "DC_motors.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  m               2   22[COMRAM] PTR struct .
  9608 ;;		 -> main@motorR(9), main@motorL(9), 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  PWMduty         2   31[COMRAM] int 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      void 
  9613 ;; Registers used:
  9614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9622 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9623 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9624 ;;Total ram usage:       11 bytes
  9625 ;; Hardware stack levels used: 1
  9626 ;; Hardware stack levels required when called: 8
  9627 ;; This function calls:
  9628 ;;		___awdiv
  9629 ;;		___wmul
  9630 ;; This function is called by:
  9631 ;;		_forward
  9632 ;;		_reverse
  9633 ;;		_stop
  9634 ;;		_turnleft
  9635 ;;		_turnright
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text48
  9640  003026                     __ptext48:
  9641                           	callstack 0
  9642  003026                     _DCmotors_setPWM:
  9643                           	callstack 21
  9644  003026                     
  9645                           ;DC_motors.c: 51:  int PWMduty;;DC_motors.c: 53:  if (m->direction){
  9646  003026  EE20 F001          	lfsr	2,1
  9647  00302A  5017               	movf	DCmotors_setPWM@m^0,w,c
  9648  00302C  26D9               	addwf	fsr2l,f,c
  9649  00302E  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9650  003030  22DA               	addwfc	fsr2h,f,c
  9651  003032  50DF               	movf	indf2,w,c
  9652  003034  B4D8               	btfsc	status,2,c
  9653  003036  EF1F  F018         	goto	u2871
  9654  00303A  EF21  F018         	goto	u2870
  9655  00303E                     u2871:
  9656  00303E  EF52  F018         	goto	l3333
  9657  003042                     u2870:
  9658  003042                     
  9659                           ;DC_motors.c: 54:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
  9660  003042  C017  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  9661  003046  C018  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  9662  00304A  50DF               	movf	indf2,w,c
  9663  00304C  6E19               	movwf	??_DCmotors_setPWM^0,c
  9664  00304E  5019               	movf	??_DCmotors_setPWM^0,w,c
  9665  003050  6E09               	movwf	___wmul@multiplier^0,c
  9666  003052  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  9667  003054  EE20 F007          	lfsr	2,7
  9668  003058  5017               	movf	DCmotors_setPWM@m^0,w,c
  9669  00305A  26D9               	addwf	fsr2l,f,c
  9670  00305C  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9671  00305E  22DA               	addwfc	fsr2h,f,c
  9672  003060  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  9673  003064  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  9674  003068  EC49  F021         	call	___wmul	;wreg free
  9675  00306C  C009  F00F         	movff	?___wmul,___awdiv@dividend
  9676  003070  C00A  F010         	movff	?___wmul+1,___awdiv@dividend+1
  9677  003074  0E00               	movlw	0
  9678  003076  6E12               	movwf	(___awdiv@divisor+1)^0,c
  9679  003078  0E64               	movlw	100
  9680  00307A  6E11               	movwf	___awdiv@divisor^0,c
  9681  00307C  EC6B  F01D         	call	___awdiv	;wreg free
  9682  003080  EE20 F007          	lfsr	2,7
  9683  003084  5017               	movf	DCmotors_setPWM@m^0,w,c
  9684  003086  26D9               	addwf	fsr2l,f,c
  9685  003088  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9686  00308A  22DA               	addwfc	fsr2h,f,c
  9687  00308C  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM+1
  9688  003090  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+2
  9689  003094  500F               	movf	?___awdiv^0,w,c
  9690  003096  5C1A               	subwf	(??_DCmotors_setPWM+1)^0,w,c
  9691  003098  6E20               	movwf	DCmotors_setPWM@PWMduty^0,c
  9692  00309A  5010               	movf	(?___awdiv+1)^0,w,c
  9693  00309C  581B               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  9694  00309E  6E21               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  9695                           
  9696                           ;DC_motors.c: 55:  } else {
  9697  0030A0  EF75  F018         	goto	l3335
  9698  0030A4                     l3333:
  9699                           
  9700                           ;DC_motors.c: 56:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  9701  0030A4  C017  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  9702  0030A8  C018  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  9703  0030AC  50DF               	movf	indf2,w,c
  9704  0030AE  6E19               	movwf	??_DCmotors_setPWM^0,c
  9705  0030B0  5019               	movf	??_DCmotors_setPWM^0,w,c
  9706  0030B2  6E09               	movwf	___wmul@multiplier^0,c
  9707  0030B4  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  9708  0030B6  EE20 F007          	lfsr	2,7
  9709  0030BA  5017               	movf	DCmotors_setPWM@m^0,w,c
  9710  0030BC  26D9               	addwf	fsr2l,f,c
  9711  0030BE  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9712  0030C0  22DA               	addwfc	fsr2h,f,c
  9713  0030C2  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  9714  0030C6  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  9715  0030CA  EC49  F021         	call	___wmul	;wreg free
  9716  0030CE  C009  F00F         	movff	?___wmul,___awdiv@dividend
  9717  0030D2  C00A  F010         	movff	?___wmul+1,___awdiv@dividend+1
  9718  0030D6  0E00               	movlw	0
  9719  0030D8  6E12               	movwf	(___awdiv@divisor+1)^0,c
  9720  0030DA  0E64               	movlw	100
  9721  0030DC  6E11               	movwf	___awdiv@divisor^0,c
  9722  0030DE  EC6B  F01D         	call	___awdiv	;wreg free
  9723  0030E2  C00F  F020         	movff	?___awdiv,DCmotors_setPWM@PWMduty
  9724  0030E6  C010  F021         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  9725  0030EA                     l3335:
  9726                           
  9727                           ;DC_motors.c: 59:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  9728  0030EA  EE20 F002          	lfsr	2,2
  9729  0030EE  5017               	movf	DCmotors_setPWM@m^0,w,c
  9730  0030F0  26D9               	addwf	fsr2l,f,c
  9731  0030F2  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9732  0030F4  22DA               	addwfc	fsr2h,f,c
  9733  0030F6  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  9734  0030FA  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  9735  0030FE  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  9736  003102  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  9737  003106  C020  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  9738  00310A                     
  9739                           ;DC_motors.c: 61:  if (m->direction){
  9740  00310A  EE20 F001          	lfsr	2,1
  9741  00310E  5017               	movf	DCmotors_setPWM@m^0,w,c
  9742  003110  26D9               	addwf	fsr2l,f,c
  9743  003112  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9744  003114  22DA               	addwfc	fsr2h,f,c
  9745  003116  50DF               	movf	indf2,w,c
  9746  003118  B4D8               	btfsc	status,2,c
  9747  00311A  EF91  F018         	goto	u2881
  9748  00311E  EF93  F018         	goto	u2880
  9749  003122                     u2881:
  9750  003122  EFC8  F018         	goto	l3341
  9751  003126                     u2880:
  9752  003126                     
  9753                           ;DC_motors.c: 62:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  9754  003126  EE20 F004          	lfsr	2,4
  9755  00312A  5017               	movf	DCmotors_setPWM@m^0,w,c
  9756  00312C  26D9               	addwf	fsr2l,f,c
  9757  00312E  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9758  003130  22DA               	addwfc	fsr2h,f,c
  9759  003132  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  9760  003136  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  9761  00313A  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  9762  00313E  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  9763  003142  EE10 F004          	lfsr	1,4
  9764  003146  5017               	movf	DCmotors_setPWM@m^0,w,c
  9765  003148  26E1               	addwf	fsr1l,f,c
  9766  00314A  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9767  00314C  22E2               	addwfc	fsr1h,f,c
  9768  00314E  CFE6 F01B          	movff	postinc1,??_DCmotors_setPWM+2
  9769  003152  CFE5 F01C          	movff	postdec1,??_DCmotors_setPWM+3
  9770  003156  C01B  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  9771  00315A  C01C  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  9772  00315E  50E7               	movf	indf1,w,c
  9773  003160  6E1D               	movwf	(??_DCmotors_setPWM+4)^0,c
  9774  003162  EE10 F006          	lfsr	1,6
  9775  003166  5017               	movf	DCmotors_setPWM@m^0,w,c
  9776  003168  26E1               	addwf	fsr1l,f,c
  9777  00316A  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9778  00316C  22E2               	addwfc	fsr1h,f,c
  9779  00316E  50E7               	movf	indf1,w,c
  9780  003170  6E1E               	movwf	(??_DCmotors_setPWM+5)^0,c
  9781  003172  0E01               	movlw	1
  9782  003174  6E1F               	movwf	(??_DCmotors_setPWM+6)^0,c
  9783  003176  2A1E               	incf	(??_DCmotors_setPWM+5)^0,f,c
  9784  003178  EFC0  F018         	goto	u2894
  9785  00317C                     u2895:
  9786  00317C  90D8               	bcf	status,0,c
  9787  00317E  361F               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  9788  003180                     u2894:
  9789  003180  2E1E               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  9790  003182  EFBE  F018         	goto	u2895
  9791  003186  501F               	movf	(??_DCmotors_setPWM+6)^0,w,c
  9792  003188  101D               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  9793  00318A  6EDF               	movwf	indf2,c
  9794                           
  9795                           ;DC_motors.c: 63:  } else {
  9796  00318C  EFFC  F018         	goto	l629
  9797  003190                     l3341:
  9798                           
  9799                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
  9800  003190  EE20 F004          	lfsr	2,4
  9801  003194  5017               	movf	DCmotors_setPWM@m^0,w,c
  9802  003196  26D9               	addwf	fsr2l,f,c
  9803  003198  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9804  00319A  22DA               	addwfc	fsr2h,f,c
  9805  00319C  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  9806  0031A0  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  9807  0031A4  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  9808  0031A8  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  9809  0031AC  EE10 F004          	lfsr	1,4
  9810  0031B0  5017               	movf	DCmotors_setPWM@m^0,w,c
  9811  0031B2  26E1               	addwf	fsr1l,f,c
  9812  0031B4  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9813  0031B6  22E2               	addwfc	fsr1h,f,c
  9814  0031B8  CFE6 F01B          	movff	postinc1,??_DCmotors_setPWM+2
  9815  0031BC  CFE5 F01C          	movff	postdec1,??_DCmotors_setPWM+3
  9816  0031C0  C01B  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  9817  0031C4  C01C  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  9818  0031C8  50E7               	movf	indf1,w,c
  9819  0031CA  6E1D               	movwf	(??_DCmotors_setPWM+4)^0,c
  9820  0031CC  EE10 F006          	lfsr	1,6
  9821  0031D0  5017               	movf	DCmotors_setPWM@m^0,w,c
  9822  0031D2  26E1               	addwf	fsr1l,f,c
  9823  0031D4  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  9824  0031D6  22E2               	addwfc	fsr1h,f,c
  9825  0031D8  50E7               	movf	indf1,w,c
  9826  0031DA  6E1E               	movwf	(??_DCmotors_setPWM+5)^0,c
  9827  0031DC  0E01               	movlw	1
  9828  0031DE  6E1F               	movwf	(??_DCmotors_setPWM+6)^0,c
  9829  0031E0  2A1E               	incf	(??_DCmotors_setPWM+5)^0,f,c
  9830  0031E2  EFF5  F018         	goto	u2904
  9831  0031E6                     u2905:
  9832  0031E6  90D8               	bcf	status,0,c
  9833  0031E8  361F               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  9834  0031EA                     u2904:
  9835  0031EA  2E1E               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  9836  0031EC  EFF3  F018         	goto	u2905
  9837  0031F0  501F               	movf	(??_DCmotors_setPWM+6)^0,w,c
  9838  0031F2  0AFF               	xorlw	255
  9839  0031F4  141D               	andwf	(??_DCmotors_setPWM+4)^0,w,c
  9840  0031F6  6EDF               	movwf	indf2,c
  9841  0031F8                     l629:
  9842  0031F8  0012               	return		;funcret
  9843  0031FA                     __end_of_DCmotors_setPWM:
  9844                           	callstack 0
  9845                           
  9846 ;; *************** function ___wmul *****************
  9847 ;; Defined at:
  9848 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;  multiplier      2    8[COMRAM] unsigned int 
  9851 ;;  multiplicand    2   10[COMRAM] unsigned int 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;  product         2   12[COMRAM] unsigned int 
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  2    8[COMRAM] unsigned int 
  9856 ;; Registers used:
  9857 ;;		wreg, status,2, status,0, prodl, prodh
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9866 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9867 ;;Total ram usage:        6 bytes
  9868 ;; Hardware stack levels used: 1
  9869 ;; Hardware stack levels required when called: 7
  9870 ;; This function calls:
  9871 ;;		Nothing
  9872 ;; This function is called by:
  9873 ;;		_DCmotors_setPWM
  9874 ;; This function uses a non-reentrant model
  9875 ;;
  9876                           
  9877                           	psect	text49
  9878  004292                     __ptext49:
  9879                           	callstack 0
  9880  004292                     ___wmul:
  9881                           	callstack 21
  9882  004292  5009               	movf	___wmul@multiplier^0,w,c
  9883  004294  020B               	mulwf	___wmul@multiplicand^0,c
  9884  004296  CFF3 F00D          	movff	prodl,___wmul@product
  9885  00429A  CFF4 F00E          	movff	prodh,___wmul@product+1
  9886  00429E  5009               	movf	___wmul@multiplier^0,w,c
  9887  0042A0  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  9888  0042A2  50F3               	movf	243,w,c
  9889  0042A4  260E               	addwf	(___wmul@product+1)^0,f,c
  9890  0042A6  500A               	movf	(___wmul@multiplier+1)^0,w,c
  9891  0042A8  020B               	mulwf	___wmul@multiplicand^0,c
  9892  0042AA  50F3               	movf	243,w,c
  9893  0042AC  260E               	addwf	(___wmul@product+1)^0,f,c
  9894  0042AE  C00D  F009         	movff	___wmul@product,?___wmul
  9895  0042B2  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  9896  0042B6  0012               	return		;funcret
  9897  0042B8                     __end_of___wmul:
  9898                           	callstack 0
  9899                           
  9900 ;; *************** function ___awdiv *****************
  9901 ;; Defined at:
  9902 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  dividend        2   14[COMRAM] int 
  9905 ;;  divisor         2   16[COMRAM] int 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  quotient        2   20[COMRAM] int 
  9908 ;;  sign            1   19[COMRAM] unsigned char 
  9909 ;;  counter         1   18[COMRAM] unsigned char 
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  2   14[COMRAM] int 
  9912 ;; Registers used:
  9913 ;;		wreg, status,2, status,0
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;Total ram usage:        8 bytes
  9924 ;; Hardware stack levels used: 1
  9925 ;; Hardware stack levels required when called: 7
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		_DCmotors_setPWM
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text50
  9934  003AD6                     __ptext50:
  9935                           	callstack 0
  9936  003AD6                     ___awdiv:
  9937                           	callstack 21
  9938  003AD6  0E00               	movlw	0
  9939  003AD8  6E14               	movwf	___awdiv@sign^0,c
  9940  003ADA  BE12               	btfsc	(___awdiv@divisor+1)^0,7,c
  9941  003ADC  EF74  F01D         	goto	u2790
  9942  003AE0  EF72  F01D         	goto	u2791
  9943  003AE4                     u2791:
  9944  003AE4  EF7A  F01D         	goto	l3289
  9945  003AE8                     u2790:
  9946  003AE8  6C11               	negf	___awdiv@divisor^0,c
  9947  003AEA  1E12               	comf	(___awdiv@divisor+1)^0,f,c
  9948  003AEC  B0D8               	btfsc	status,0,c
  9949  003AEE  2A12               	incf	(___awdiv@divisor+1)^0,f,c
  9950  003AF0  0E01               	movlw	1
  9951  003AF2  6E14               	movwf	___awdiv@sign^0,c
  9952  003AF4                     l3289:
  9953  003AF4  BE10               	btfsc	(___awdiv@dividend+1)^0,7,c
  9954  003AF6  EF81  F01D         	goto	u2800
  9955  003AFA  EF7F  F01D         	goto	u2801
  9956  003AFE                     u2801:
  9957  003AFE  EF87  F01D         	goto	l3295
  9958  003B02                     u2800:
  9959  003B02  6C0F               	negf	___awdiv@dividend^0,c
  9960  003B04  1E10               	comf	(___awdiv@dividend+1)^0,f,c
  9961  003B06  B0D8               	btfsc	status,0,c
  9962  003B08  2A10               	incf	(___awdiv@dividend+1)^0,f,c
  9963  003B0A  0E01               	movlw	1
  9964  003B0C  1A14               	xorwf	___awdiv@sign^0,f,c
  9965  003B0E                     l3295:
  9966  003B0E  0E00               	movlw	0
  9967  003B10  6E16               	movwf	(___awdiv@quotient+1)^0,c
  9968  003B12  0E00               	movlw	0
  9969  003B14  6E15               	movwf	___awdiv@quotient^0,c
  9970  003B16  5011               	movf	___awdiv@divisor^0,w,c
  9971  003B18  1012               	iorwf	(___awdiv@divisor+1)^0,w,c
  9972  003B1A  B4D8               	btfsc	status,2,c
  9973  003B1C  EF92  F01D         	goto	u2811
  9974  003B20  EF94  F01D         	goto	u2810
  9975  003B24                     u2811:
  9976  003B24  EFBC  F01D         	goto	l3317
  9977  003B28                     u2810:
  9978  003B28  0E01               	movlw	1
  9979  003B2A  6E13               	movwf	___awdiv@counter^0,c
  9980  003B2C  EF9C  F01D         	goto	l3303
  9981  003B30                     l3301:
  9982  003B30  90D8               	bcf	status,0,c
  9983  003B32  3611               	rlcf	___awdiv@divisor^0,f,c
  9984  003B34  3612               	rlcf	(___awdiv@divisor+1)^0,f,c
  9985  003B36  2A13               	incf	___awdiv@counter^0,f,c
  9986  003B38                     l3303:
  9987  003B38  AE12               	btfss	(___awdiv@divisor+1)^0,7,c
  9988  003B3A  EFA1  F01D         	goto	u2821
  9989  003B3E  EFA3  F01D         	goto	u2820
  9990  003B42                     u2821:
  9991  003B42  EF98  F01D         	goto	l3301
  9992  003B46                     u2820:
  9993  003B46                     l3305:
  9994  003B46  90D8               	bcf	status,0,c
  9995  003B48  3615               	rlcf	___awdiv@quotient^0,f,c
  9996  003B4A  3616               	rlcf	(___awdiv@quotient+1)^0,f,c
  9997  003B4C  5011               	movf	___awdiv@divisor^0,w,c
  9998  003B4E  5C0F               	subwf	___awdiv@dividend^0,w,c
  9999  003B50  5012               	movf	(___awdiv@divisor+1)^0,w,c
 10000  003B52  5810               	subwfb	(___awdiv@dividend+1)^0,w,c
 10001  003B54  A0D8               	btfss	status,0,c
 10002  003B56  EFAF  F01D         	goto	u2831
 10003  003B5A  EFB1  F01D         	goto	u2830
 10004  003B5E                     u2831:
 10005  003B5E  EFB6  F01D         	goto	l3313
 10006  003B62                     u2830:
 10007  003B62  5011               	movf	___awdiv@divisor^0,w,c
 10008  003B64  5E0F               	subwf	___awdiv@dividend^0,f,c
 10009  003B66  5012               	movf	(___awdiv@divisor+1)^0,w,c
 10010  003B68  5A10               	subwfb	(___awdiv@dividend+1)^0,f,c
 10011  003B6A  8015               	bsf	___awdiv@quotient^0,0,c
 10012  003B6C                     l3313:
 10013  003B6C  90D8               	bcf	status,0,c
 10014  003B6E  3212               	rrcf	(___awdiv@divisor+1)^0,f,c
 10015  003B70  3211               	rrcf	___awdiv@divisor^0,f,c
 10016  003B72  2E13               	decfsz	___awdiv@counter^0,f,c
 10017  003B74  EFA3  F01D         	goto	l3305
 10018  003B78                     l3317:
 10019  003B78  5014               	movf	___awdiv@sign^0,w,c
 10020  003B7A  B4D8               	btfsc	status,2,c
 10021  003B7C  EFC2  F01D         	goto	u2841
 10022  003B80  EFC4  F01D         	goto	u2840
 10023  003B84                     u2841:
 10024  003B84  EFC8  F01D         	goto	l3321
 10025  003B88                     u2840:
 10026  003B88  6C15               	negf	___awdiv@quotient^0,c
 10027  003B8A  1E16               	comf	(___awdiv@quotient+1)^0,f,c
 10028  003B8C  B0D8               	btfsc	status,0,c
 10029  003B8E  2A16               	incf	(___awdiv@quotient+1)^0,f,c
 10030  003B90                     l3321:
 10031  003B90  C015  F00F         	movff	___awdiv@quotient,?___awdiv
 10032  003B94  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
 10033  003B98  0012               	return		;funcret
 10034  003B9A                     __end_of___awdiv:
 10035                           	callstack 0
 10036                           
 10037 ;; *************** function _adjdelay *****************
 10038 ;; Defined at:
 10039 ;;		line 394 in file "DC_motors.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;  mode            1    wreg     unsigned char 
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;  mode            1   10[COMRAM] unsigned char 
 10044 ;;  i               1   11[COMRAM] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      void 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2, status,0
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10058 ;;Total ram usage:        4 bytes
 10059 ;; Hardware stack levels used: 1
 10060 ;; Hardware stack levels required when called: 7
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_DCmotors_calibration
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068                           	psect	text51
 10069  00352A                     __ptext51:
 10070                           	callstack 0
 10071  00352A                     _adjdelay:
 10072                           	callstack 22
 10073                           
 10074                           ;incstack = 0
 10075                           ;adjdelay@mode stored from wreg
 10076  00352A  6E0B               	movwf	adjdelay@mode^0,c
 10077  00352C                     
 10078                           ;DC_motors.c: 395:     unsigned char i;;DC_motors.c: 396:     for (i=0; i<10; i++) {
 10079  00352C  0E00               	movlw	0
 10080  00352E  6E0C               	movwf	adjdelay@i^0,c
 10081  003530                     l4307:
 10082                           
 10083                           ;DC_motors.c: 397:         if (mode==1){
 10084  003530  040B               	decf	adjdelay@mode^0,w,c
 10085  003532  A4D8               	btfss	status,2,c
 10086  003534  EF9E  F01A         	goto	u4291
 10087  003538  EFA0  F01A         	goto	u4290
 10088  00353C                     u4291:
 10089  00353C  EFF0  F01A         	goto	l4333
 10090  003540                     u4290:
 10091  003540                     
 10092                           ;DC_motors.c: 398:             if (!PORTFbits.RF2 && PORTFbits.RF3) {
 10093  003540  B48E               	btfsc	142,2,c	;volatile
 10094  003542  EFA5  F01A         	goto	u4301
 10095  003546  EFA7  F01A         	goto	u4300
 10096  00354A                     u4301:
 10097  00354A  EFC2  F01A         	goto	l763
 10098  00354E                     u4300:
 10099  00354E  A68E               	btfss	142,3,c	;volatile
 10100  003550  EFAC  F01A         	goto	u4311
 10101  003554  EFAE  F01A         	goto	u4310
 10102  003558                     u4311:
 10103  003558  EFC2  F01A         	goto	l763
 10104  00355C                     u4310:
 10105  00355C                     
 10106                           ;DC_motors.c: 399:                 LATDbits.LATD7 = 1;
 10107  00355C  8E7C               	bsf	124,7,c	;volatile
 10108  00355E                     
 10109                           ;DC_motors.c: 400:                 turnright_calangle -= 5;
 10110  00355E  0EFB               	movlw	251
 10111  003560  264F               	addwf	_turnright_calangle^0,f,c	;volatile
 10112  003562  0EFF               	movlw	255
 10113  003564  2250               	addwfc	(_turnright_calangle+1)^0,f,c	;volatile
 10114  003566                     
 10115                           ;DC_motors.c: 401:                 _delay((unsigned long)((800)*(64000000/4000.0)));
 10116  003566  0E41               	movlw	65
 10117  003568  6E0A               	movwf	(??_adjdelay+1)^0,c
 10118  00356A  0EF0               	movlw	240
 10119  00356C  6E09               	movwf	??_adjdelay^0,c
 10120  00356E  0E33               	movlw	51
 10121  003570                     u7237:
 10122  003570  2EE8               	decfsz	wreg,f,c
 10123  003572  D7FE               	bra	u7237
 10124  003574  2E09               	decfsz	??_adjdelay^0,f,c
 10125  003576  D7FC               	bra	u7237
 10126  003578  2E0A               	decfsz	(??_adjdelay+1)^0,f,c
 10127  00357A  D7FA               	bra	u7237
 10128  00357C  F000               	nop	
 10129  00357E                     
 10130                           ;DC_motors.c: 402:                 LATDbits.LATD7 = 0;
 10131  00357E  9E7C               	bcf	124,7,c	;volatile
 10132                           
 10133                           ;DC_motors.c: 403:             } else if (!PORTFbits.RF3 && PORTFbits.RF2) {
 10134  003580  EFE2  F01A         	goto	l4331
 10135  003584                     l763:
 10136  003584  B68E               	btfsc	142,3,c	;volatile
 10137  003586  EFC7  F01A         	goto	u4321
 10138  00358A  EFC9  F01A         	goto	u4320
 10139  00358E                     u4321:
 10140  00358E  EFE2  F01A         	goto	l4331
 10141  003592                     u4320:
 10142  003592  A48E               	btfss	142,2,c	;volatile
 10143  003594  EFCE  F01A         	goto	u4331
 10144  003598  EFD0  F01A         	goto	u4330
 10145  00359C                     u4331:
 10146  00359C  EFE2  F01A         	goto	l4331
 10147  0035A0                     u4330:
 10148  0035A0                     
 10149                           ;DC_motors.c: 404:                 LATHbits.LATH3 = 1;
 10150  0035A0  8680               	bsf	128,3,c	;volatile
 10151  0035A2                     
 10152                           ;DC_motors.c: 405:                 turnright_calangle += 5;
 10153  0035A2  0E05               	movlw	5
 10154  0035A4  264F               	addwf	_turnright_calangle^0,f,c	;volatile
 10155  0035A6  0E00               	movlw	0
 10156  0035A8  2250               	addwfc	(_turnright_calangle+1)^0,f,c	;volatile
 10157  0035AA                     
 10158                           ;DC_motors.c: 406:                 _delay((unsigned long)((800)*(64000000/4000.0)));
 10159  0035AA  0E41               	movlw	65
 10160  0035AC  6E0A               	movwf	(??_adjdelay+1)^0,c
 10161  0035AE  0EF0               	movlw	240
 10162  0035B0  6E09               	movwf	??_adjdelay^0,c
 10163  0035B2  0E33               	movlw	51
 10164  0035B4                     u7247:
 10165  0035B4  2EE8               	decfsz	wreg,f,c
 10166  0035B6  D7FE               	bra	u7247
 10167  0035B8  2E09               	decfsz	??_adjdelay^0,f,c
 10168  0035BA  D7FC               	bra	u7247
 10169  0035BC  2E0A               	decfsz	(??_adjdelay+1)^0,f,c
 10170  0035BE  D7FA               	bra	u7247
 10171  0035C0  F000               	nop	
 10172  0035C2                     
 10173                           ;DC_motors.c: 407:                 LATHbits.LATH3 = 0;
 10174  0035C2  9680               	bcf	128,3,c	;volatile
 10175  0035C4                     l4331:
 10176                           
 10177                           ;DC_motors.c: 409:             _delay((unsigned long)((200)*(64000000/4000.0)));
 10178  0035C4  0E11               	movlw	17
 10179  0035C6  6E0A               	movwf	(??_adjdelay+1)^0,c
 10180  0035C8  0E3C               	movlw	60
 10181  0035CA  6E09               	movwf	??_adjdelay^0,c
 10182  0035CC  0ECB               	movlw	203
 10183  0035CE                     u7257:
 10184  0035CE  2EE8               	decfsz	wreg,f,c
 10185  0035D0  D7FE               	bra	u7257
 10186  0035D2  2E09               	decfsz	??_adjdelay^0,f,c
 10187  0035D4  D7FC               	bra	u7257
 10188  0035D6  2E0A               	decfsz	(??_adjdelay+1)^0,f,c
 10189  0035D8  D7FA               	bra	u7257
 10190  0035DA  F000               	nop	
 10191                           
 10192                           ;DC_motors.c: 411:         } else if (mode==2) {
 10193  0035DC  EF3D  F01B         	goto	l4359
 10194  0035E0                     l4333:
 10195  0035E0  0E02               	movlw	2
 10196  0035E2  180B               	xorwf	adjdelay@mode^0,w,c
 10197  0035E4  A4D8               	btfss	status,2,c
 10198  0035E6  EFF7  F01A         	goto	u4341
 10199  0035EA  EFF9  F01A         	goto	u4340
 10200  0035EE                     u4341:
 10201  0035EE  EF3D  F01B         	goto	l4359
 10202  0035F2                     u4340:
 10203  0035F2                     
 10204                           ;DC_motors.c: 412:             if (!PORTFbits.RF3 && PORTFbits.RF2) {
 10205  0035F2  B68E               	btfsc	142,3,c	;volatile
 10206  0035F4  EFFE  F01A         	goto	u4351
 10207  0035F8  EF00  F01B         	goto	u4350
 10208  0035FC                     u4351:
 10209  0035FC  EF1B  F01B         	goto	l768
 10210  003600                     u4350:
 10211  003600  A48E               	btfss	142,2,c	;volatile
 10212  003602  EF05  F01B         	goto	u4361
 10213  003606  EF07  F01B         	goto	u4360
 10214  00360A                     u4361:
 10215  00360A  EF1B  F01B         	goto	l768
 10216  00360E                     u4360:
 10217  00360E                     
 10218                           ;DC_motors.c: 413:                 LATHbits.LATH3 = 1;
 10219  00360E  8680               	bsf	128,3,c	;volatile
 10220  003610                     
 10221                           ;DC_motors.c: 414:                 turnleft_calangle -= 5;
 10222  003610  0EFB               	movlw	251
 10223  003612  2651               	addwf	_turnleft_calangle^0,f,c	;volatile
 10224  003614  0EFF               	movlw	255
 10225  003616  2252               	addwfc	(_turnleft_calangle+1)^0,f,c	;volatile
 10226  003618                     
 10227                           ;DC_motors.c: 415:                 _delay((unsigned long)((800)*(64000000/4000.0)));
 10228  003618  0E41               	movlw	65
 10229  00361A  6E0A               	movwf	(??_adjdelay+1)^0,c
 10230  00361C  0EF0               	movlw	240
 10231  00361E  6E09               	movwf	??_adjdelay^0,c
 10232  003620  0E33               	movlw	51
 10233  003622                     u7267:
 10234  003622  2EE8               	decfsz	wreg,f,c
 10235  003624  D7FE               	bra	u7267
 10236  003626  2E09               	decfsz	??_adjdelay^0,f,c
 10237  003628  D7FC               	bra	u7267
 10238  00362A  2E0A               	decfsz	(??_adjdelay+1)^0,f,c
 10239  00362C  D7FA               	bra	u7267
 10240  00362E  F000               	nop	
 10241  003630                     
 10242                           ;DC_motors.c: 416:                 LATHbits.LATH3 = 0;
 10243  003630  9680               	bcf	128,3,c	;volatile
 10244                           
 10245                           ;DC_motors.c: 417:             } else if (!PORTFbits.RF2 && PORTFbits.RF3) {
 10246  003632  EFE2  F01A         	goto	l4331
 10247  003636                     l768:
 10248  003636  B48E               	btfsc	142,2,c	;volatile
 10249  003638  EF20  F01B         	goto	u4371
 10250  00363C  EF22  F01B         	goto	u4370
 10251  003640                     u4371:
 10252  003640  EFE2  F01A         	goto	l4331
 10253  003644                     u4370:
 10254  003644  A68E               	btfss	142,3,c	;volatile
 10255  003646  EF27  F01B         	goto	u4381
 10256  00364A  EF29  F01B         	goto	u4380
 10257  00364E                     u4381:
 10258  00364E  EFE2  F01A         	goto	l4331
 10259  003652                     u4380:
 10260  003652                     
 10261                           ;DC_motors.c: 418:                 LATDbits.LATD7 = 1;
 10262  003652  8E7C               	bsf	124,7,c	;volatile
 10263  003654                     
 10264                           ;DC_motors.c: 419:                 turnleft_calangle += 5;
 10265  003654  0E05               	movlw	5
 10266  003656  2651               	addwf	_turnleft_calangle^0,f,c	;volatile
 10267  003658  0E00               	movlw	0
 10268  00365A  2252               	addwfc	(_turnleft_calangle+1)^0,f,c	;volatile
 10269  00365C                     
 10270                           ;DC_motors.c: 420:                 _delay((unsigned long)((800)*(64000000/4000.0)));
 10271  00365C  0E41               	movlw	65
 10272  00365E  6E0A               	movwf	(??_adjdelay+1)^0,c
 10273  003660  0EF0               	movlw	240
 10274  003662  6E09               	movwf	??_adjdelay^0,c
 10275  003664  0E33               	movlw	51
 10276  003666                     u7277:
 10277  003666  2EE8               	decfsz	wreg,f,c
 10278  003668  D7FE               	bra	u7277
 10279  00366A  2E09               	decfsz	??_adjdelay^0,f,c
 10280  00366C  D7FC               	bra	u7277
 10281  00366E  2E0A               	decfsz	(??_adjdelay+1)^0,f,c
 10282  003670  D7FA               	bra	u7277
 10283  003672  F000               	nop	
 10284  003674                     
 10285                           ;DC_motors.c: 421:                 LATDbits.LATD7 = 0;
 10286  003674  9E7C               	bcf	124,7,c	;volatile
 10287  003676  EFE2  F01A         	goto	l4331
 10288  00367A                     l4359:
 10289                           
 10290                           ;DC_motors.c: 425:     }
 10291  00367A  2A0C               	incf	adjdelay@i^0,f,c
 10292  00367C  0E09               	movlw	9
 10293  00367E  640C               	cpfsgt	adjdelay@i^0,c
 10294  003680  EF44  F01B         	goto	u4391
 10295  003684  EF46  F01B         	goto	u4390
 10296  003688                     u4391:
 10297  003688  EF98  F01A         	goto	l4307
 10298  00368C                     u4390:
 10299  00368C  0012               	return		;funcret
 10300  00368E                     __end_of_adjdelay:
 10301                           	callstack 0
 10302                           
 10303 ;; *************** function _ADC_init *****************
 10304 ;; Defined at:
 10305 ;;		line 8 in file "ADC.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used: 1
 10325 ;; Hardware stack levels required when called: 7
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_main
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text52
 10334  0043BA                     __ptext52:
 10335                           	callstack 0
 10336  0043BA                     _ADC_init:
 10337                           	callstack 23
 10338  0043BA                     
 10339                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 10340  0043BA  8C86               	bsf	134,6,c	;volatile
 10341                           
 10342                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 10343  0043BC  010E               	movlb	14	; () banked
 10344  0043BE  8DB4               	bsf	180,6,b	;volatile
 10345                           
 10346                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 10347  0043C0  010F               	movlb	15	; () banked
 10348  0043C2  9958               	bcf	88,4,b	;volatile
 10349  0043C4                     
 10350                           ; BSR set to: 15
 10351                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 10352  0043C4  0EFC               	movlw	-4
 10353  0043C6  1758               	andwf	88,f,b	;volatile
 10354                           
 10355                           ;ADC.c: 16:     ADPCH=0b101110;
 10356  0043C8  0E2E               	movlw	46
 10357  0043CA  6F5F               	movwf	95,b	;volatile
 10358  0043CC                     
 10359                           ; BSR set to: 15
 10360                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 10361  0043CC  9460               	bcf	96,2,c	;volatile
 10362  0043CE                     
 10363                           ; BSR set to: 15
 10364                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 10365  0043CE  8860               	bsf	96,4,c	;volatile
 10366  0043D0                     
 10367                           ; BSR set to: 15
 10368                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 10369  0043D0  8E60               	bsf	96,7,c	;volatile
 10370  0043D2                     
 10371                           ; BSR set to: 15
 10372  0043D2  0012               	return		;funcret
 10373  0043D4                     __end_of_ADC_init:
 10374                           	callstack 0
 10375                           
 10376 ;; *************** function _LowISR *****************
 10377 ;; Defined at:
 10378 ;;		line 77 in file "interrupts.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, status,2, status,0
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10394 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10395 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10396 ;;Total ram usage:        3 bytes
 10397 ;; Hardware stack levels used: 1
 10398 ;; Hardware stack levels required when called: 6
 10399 ;; This function calls:
 10400 ;;		Nothing
 10401 ;; This function is called by:
 10402 ;;		Interrupt level 1
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	intcodelo
 10407  000018                     __pintcodelo:
 10408                           	callstack 0
 10409  000018                     _LowISR:
 10410                           	callstack 17
 10411                           
 10412                           ; BSR set to: 15
 10413                           ;incstack = 0
 10414  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 10415  00001A  CFD8 F006          	movff	status,??_LowISR
 10416  00001E  CFE8 F007          	movff	wreg,??_LowISR+1
 10417  000022  CFE0 F008          	movff	bsr,??_LowISR+2
 10418  000026                     
 10419                           ;interrupts.c: 78:     if (PIR0bits.TMR0IF) {
 10420  000026  010E               	movlb	14	; () banked
 10421  000028  AB33               	btfss	51,5,b	;volatile
 10422  00002A  EF19  F000         	goto	i1u503_21
 10423  00002E  EF1B  F000         	goto	i1u503_20
 10424  000032                     i1u503_21:
 10425  000032  EF24  F000         	goto	i1l169
 10426  000036                     i1u503_20:
 10427  000036                     
 10428                           ; BSR set to: 14
 10429                           ;interrupts.c: 80:         tmp++;
 10430  000036  0100               	movlb	0	; () banked
 10431  000038  4BDB               	infsnz	_tmp& (0+255),f,b	;volatile
 10432  00003A  2BDC               	incf	(_tmp+1)& (0+255),f,b	;volatile
 10433  00003C                     
 10434                           ; BSR set to: 0
 10435                           ;interrupts.c: 81:         TMR0H=0b00111100;
 10436  00003C  0E3C               	movlw	60
 10437  00003E  6ED4               	movwf	212,c	;volatile
 10438  000040                     
 10439                           ; BSR set to: 0
 10440                           ;interrupts.c: 82:         TMR0L=0b10101111;
 10441  000040  0EAF               	movlw	175
 10442  000042  6ED3               	movwf	211,c	;volatile
 10443  000044                     
 10444                           ; BSR set to: 0
 10445                           ;interrupts.c: 83:         PIR0bits.TMR0IF = 0;
 10446  000044  010E               	movlb	14	; () banked
 10447  000046  9B33               	bcf	51,5,b	;volatile
 10448  000048                     i1l169:
 10449                           
 10450                           ; BSR set to: 14
 10451  000048  C008  FFE0         	movff	??_LowISR+2,bsr
 10452  00004C  C007  FFE8         	movff	??_LowISR+1,wreg
 10453  000050  C006  FFD8         	movff	??_LowISR,status
 10454  000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10455  000056  0010               	retfie	
 10456  000058                     __end_of_LowISR:
 10457                           	callstack 0
 10458                           
 10459 ;; *************** function _HighISR *****************
 10460 ;; Defined at:
 10461 ;;		line 64 in file "interrupts.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;		None
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      void 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0, cstack
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10479 ;;Total ram usage:        0 bytes
 10480 ;; Hardware stack levels used: 1
 10481 ;; Hardware stack levels required when called: 5
 10482 ;; This function calls:
 10483 ;;		i2_interrupts_clear
 10484 ;; This function is called by:
 10485 ;;		Interrupt level 2
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	intcode
 10490  000008                     __pintcode:
 10491                           	callstack 0
 10492  000008                     _HighISR:
 10493                           	callstack 17
 10494                           
 10495                           ; BSR set to: 14
 10496                           ;incstack = 0
 10497  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10498  00000A  EF7F  F021         	goto	int_func
 10499                           
 10500                           	psect	intcode_body
 10501  0042FE                     __pintcode_body:
 10502                           	callstack 17
 10503  0042FE                     int_func:
 10504                           	callstack 17
 10505  0042FE                     
 10506                           ;interrupts.c: 65:     if (PIR0bits.INT1IF) {
 10507  0042FE  010E               	movlb	14	; () banked
 10508  004300  A333               	btfss	51,1,b	;volatile
 10509  004302  EF85  F021         	goto	i2u502_41
 10510  004306  EF87  F021         	goto	i2u502_40
 10511  00430A                     i2u502_41:
 10512  00430A  EF8E  F021         	goto	i2l163
 10513  00430E                     i2u502_40:
 10514  00430E                     
 10515                           ; BSR set to: 14
 10516                           ;interrupts.c: 66:         colourcard_flag = 1;
 10517  00430E  0E01               	movlw	1
 10518  004310  0100               	movlb	0	; () banked
 10519  004312  6FDF               	movwf	_colourcard_flag& (0+255),b	;volatile
 10520  004314                     
 10521                           ; BSR set to: 0
 10522                           ;interrupts.c: 68:         interrupts_clear();
 10523  004314  ECEA  F021         	call	i2_interrupts_clear	;wreg free
 10524  004318                     
 10525                           ;interrupts.c: 69:         PIR0bits.INT1IF = 0;
 10526  004318  010E               	movlb	14	; () banked
 10527  00431A  9333               	bcf	51,1,b	;volatile
 10528  00431C                     i2l163:
 10529                           
 10530                           ; BSR set to: 14
 10531  00431C  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10532  00431E  0011               	retfie		f
 10533  004320                     __end_of_HighISR:
 10534                           	callstack 0
 10535                           
 10536 ;; *************** function i2_interrupts_clear *****************
 10537 ;; Defined at:
 10538 ;;		line 37 in file "interrupts.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;                  1    wreg      void 
 10545 ;; Registers used:
 10546 ;;		wreg, status,2, status,0, cstack
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10556 ;;Total ram usage:        0 bytes
 10557 ;; Hardware stack levels used: 1
 10558 ;; Hardware stack levels required when called: 4
 10559 ;; This function calls:
 10560 ;;		i2_I2C_2_Master_Start
 10561 ;;		i2_I2C_2_Master_Stop
 10562 ;;		i2_I2C_2_Master_Write
 10563 ;;		i2_interrupts_colourclick
 10564 ;; This function is called by:
 10565 ;;		_HighISR
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text55
 10570  0043D4                     __ptext55:
 10571                           	callstack 0
 10572  0043D4                     i2_interrupts_clear:
 10573                           	callstack 17
 10574  0043D4                     
 10575                           ;interrupts.c: 38:     I2C_2_Master_Start();
 10576  0043D4  EC40  F022         	call	i2_I2C_2_Master_Start	;wreg free
 10577                           
 10578                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
 10579  0043D8  0E52               	movlw	82
 10580  0043DA  EC21  F022         	call	i2_I2C_2_Master_Write
 10581                           
 10582                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
 10583  0043DE  0EE6               	movlw	230
 10584  0043E0  EC21  F022         	call	i2_I2C_2_Master_Write
 10585                           
 10586                           ;interrupts.c: 41:     I2C_2_Master_Stop();
 10587  0043E4  EC3B  F022         	call	i2_I2C_2_Master_Stop	;wreg free
 10588                           
 10589                           ;interrupts.c: 43:     interrupts_colourclick();
 10590  0043E8  EC8F  F020         	call	i2_interrupts_colourclick	;wreg free
 10591  0043EC  0012               	return		;funcret
 10592  0043EE                     __end_ofi2_interrupts_clear:
 10593                           	callstack 0
 10594                           
 10595 ;; *************** function i2_interrupts_colourclick *****************
 10596 ;; Defined at:
 10597 ;;		line 50 in file "interrupts.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;		None
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;		None
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      void 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0, cstack
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10615 ;;Total ram usage:        1 bytes
 10616 ;; Hardware stack levels used: 1
 10617 ;; Hardware stack levels required when called: 3
 10618 ;; This function calls:
 10619 ;;		i2_colourclick_writetoaddr
 10620 ;; This function is called by:
 10621 ;;		i2_interrupts_clear
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text56
 10626  00411E                     __ptext56:
 10627                           	callstack 0
 10628  00411E                     i2_interrupts_colourclick:
 10629                           	callstack 17
 10630  00411E                     
 10631                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
 10632  00411E  0E13               	movlw	19
 10633  004120  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 10634  004122  0E00               	movlw	0
 10635  004124  ECC0  F021         	call	i2_colourclick_writetoaddr
 10636  004128                     
 10637                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10638  004128  0E3F               	movlw	63
 10639  00412A  6E05               	movwf	??i2_interrupts_colourclick^0,c
 10640  00412C  0E55               	movlw	85
 10641  00412E                     i2u728_47:
 10642  00412E  2EE8               	decfsz	wreg,f,c
 10643  004130  D7FE               	bra	i2u728_47
 10644  004132  2E05               	decfsz	??i2_interrupts_colourclick^0,f,c
 10645  004134  D7FC               	bra	i2u728_47
 10646  004136  F000               	nop	
 10647  004138                     
 10648                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
 10649  004138  0E04               	movlw	4
 10650  00413A  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 10651  00413C  0E0C               	movlw	12
 10652  00413E  ECC0  F021         	call	i2_colourclick_writetoaddr
 10653  004142                     
 10654                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
 10655  004142  C055  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
 10656  004146  0E04               	movlw	4
 10657  004148  ECC0  F021         	call	i2_colourclick_writetoaddr
 10658  00414C                     
 10659                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
 10660  00414C  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
 10661  00414E  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 10662  004150  0E05               	movlw	5
 10663  004152  ECC0  F021         	call	i2_colourclick_writetoaddr
 10664  004156                     
 10665                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
 10666  004156  C053  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
 10667  00415A  0E06               	movlw	6
 10668  00415C  ECC0  F021         	call	i2_colourclick_writetoaddr
 10669  004160                     
 10670                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
 10671  004160  5054               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
 10672  004162  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 10673  004164  0E07               	movlw	7
 10674  004166  ECC0  F021         	call	i2_colourclick_writetoaddr
 10675  00416A  0012               	return		;funcret
 10676  00416C                     __end_ofi2_interrupts_colourclick:
 10677                           	callstack 0
 10678                           
 10679 ;; *************** function i2_colourclick_writetoaddr *****************
 10680 ;; Defined at:
 10681 ;;		line 33 in file "colour_click.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;  address         1    wreg     unsigned char 
 10684 ;;  value           1    2[COMRAM] unsigned char 
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;  address         1    3[COMRAM] unsigned char 
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      void 
 10689 ;; Registers used:
 10690 ;;		wreg, status,2, status,0, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10696 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10700 ;;Total ram usage:        2 bytes
 10701 ;; Hardware stack levels used: 1
 10702 ;; Hardware stack levels required when called: 2
 10703 ;; This function calls:
 10704 ;;		i2_I2C_2_Master_Start
 10705 ;;		i2_I2C_2_Master_Stop
 10706 ;;		i2_I2C_2_Master_Write
 10707 ;; This function is called by:
 10708 ;;		i2_interrupts_colourclick
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           	psect	text57
 10713  004380                     __ptext57:
 10714                           	callstack 0
 10715  004380                     i2_colourclick_writetoaddr:
 10716                           	callstack 17
 10717                           
 10718                           ;incstack = 0
 10719                           ;i2colourclick_writetoaddr@address stored from wreg
 10720  004380  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
 10721  004382                     
 10722                           ;colour_click.c: 34:     I2C_2_Master_Start();
 10723  004382  EC40  F022         	call	i2_I2C_2_Master_Start	;wreg free
 10724                           
 10725                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
 10726  004386  0E52               	movlw	82
 10727  004388  EC21  F022         	call	i2_I2C_2_Master_Write
 10728                           
 10729                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
 10730  00438C  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
 10731  00438E  0980               	iorlw	128
 10732  004390  EC21  F022         	call	i2_I2C_2_Master_Write
 10733                           
 10734                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
 10735  004394  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
 10736  004396  EC21  F022         	call	i2_I2C_2_Master_Write
 10737                           
 10738                           ;colour_click.c: 38:     I2C_2_Master_Stop();
 10739  00439A  EC3B  F022         	call	i2_I2C_2_Master_Stop	;wreg free
 10740  00439E  0012               	return		;funcret
 10741  0043A0                     __end_ofi2_colourclick_writetoaddr:
 10742                           	callstack 0
 10743                           
 10744 ;; *************** function i2_I2C_2_Master_Write *****************
 10745 ;; Defined at:
 10746 ;;		line 64 in file "I2C.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  data_byte       1    wreg     unsigned char 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;  data_byte       1    1[COMRAM] unsigned char 
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0, cstack
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10764 ;;Total ram usage:        1 bytes
 10765 ;; Hardware stack levels used: 1
 10766 ;; Hardware stack levels required when called: 1
 10767 ;; This function calls:
 10768 ;;		i2_I2C_2_Master_Idle
 10769 ;; This function is called by:
 10770 ;;		i2_interrupts_clear
 10771 ;;		i2_colourclick_writetoaddr
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text58
 10776  004442                     __ptext58:
 10777                           	callstack 0
 10778  004442                     i2_I2C_2_Master_Write:
 10779                           	callstack 17
 10780                           
 10781                           ;incstack = 0
 10782                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 10783  004442  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 10784  004444                     
 10785                           ;I2C.c: 65:   I2C_2_Master_Idle();
 10786  004444  EC35  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10787  004448                     
 10788                           ;I2C.c: 66:   SSP2BUF = data_byte;
 10789  004448  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 10790  00444C  0012               	return		;funcret
 10791  00444E                     __end_ofi2_I2C_2_Master_Write:
 10792                           	callstack 0
 10793                           
 10794 ;; *************** function i2_I2C_2_Master_Stop *****************
 10795 ;; Defined at:
 10796 ;;		line 55 in file "I2C.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;		None
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;		None
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  1    wreg      void 
 10803 ;; Registers used:
 10804 ;;		wreg, status,2, status,0, cstack
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10814 ;;Total ram usage:        0 bytes
 10815 ;; Hardware stack levels used: 1
 10816 ;; Hardware stack levels required when called: 1
 10817 ;; This function calls:
 10818 ;;		i2_I2C_2_Master_Idle
 10819 ;; This function is called by:
 10820 ;;		i2_interrupts_clear
 10821 ;;		i2_colourclick_writetoaddr
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text59
 10826  004476                     __ptext59:
 10827                           	callstack 0
 10828  004476                     i2_I2C_2_Master_Stop:
 10829                           	callstack 17
 10830  004476                     
 10831                           ;I2C.c: 56:   I2C_2_Master_Idle();
 10832  004476  EC35  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10833  00447A                     
 10834                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
 10835  00447A  010E               	movlb	14	; () banked
 10836  00447C  85DA               	bsf	218,2,b	;volatile
 10837  00447E                     
 10838                           ; BSR set to: 14
 10839  00447E  0012               	return		;funcret
 10840  004480                     __end_ofi2_I2C_2_Master_Stop:
 10841                           	callstack 0
 10842                           
 10843 ;; *************** function i2_I2C_2_Master_Start *****************
 10844 ;; Defined at:
 10845 ;;		line 37 in file "I2C.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;		None
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;		None
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  1    wreg      void 
 10852 ;; Registers used:
 10853 ;;		wreg, status,2, status,0, cstack
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/0
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10863 ;;Total ram usage:        0 bytes
 10864 ;; Hardware stack levels used: 1
 10865 ;; Hardware stack levels required when called: 1
 10866 ;; This function calls:
 10867 ;;		i2_I2C_2_Master_Idle
 10868 ;; This function is called by:
 10869 ;;		i2_interrupts_clear
 10870 ;;		i2_colourclick_writetoaddr
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           	psect	text60
 10875  004480                     __ptext60:
 10876                           	callstack 0
 10877  004480                     i2_I2C_2_Master_Start:
 10878                           	callstack 17
 10879  004480                     
 10880                           ;I2C.c: 38:   I2C_2_Master_Idle();
 10881  004480  EC35  F021         	call	i2_I2C_2_Master_Idle	;wreg free
 10882  004484                     
 10883                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
 10884  004484  010E               	movlb	14	; () banked
 10885  004486  81DA               	bsf	218,0,b	;volatile
 10886  004488                     
 10887                           ; BSR set to: 14
 10888  004488  0012               	return		;funcret
 10889  00448A                     __end_ofi2_I2C_2_Master_Start:
 10890                           	callstack 0
 10891                           
 10892 ;; *************** function i2_I2C_2_Master_Idle *****************
 10893 ;; Defined at:
 10894 ;;		line 29 in file "I2C.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;		None
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;		None
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  1    wreg      void 
 10901 ;; Registers used:
 10902 ;;		wreg, status,2, status,0
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10911 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10912 ;;Total ram usage:        1 bytes
 10913 ;; Hardware stack levels used: 1
 10914 ;; This function calls:
 10915 ;;		Nothing
 10916 ;; This function is called by:
 10917 ;;		i2_I2C_2_Master_Start
 10918 ;;		i2_I2C_2_Master_Stop
 10919 ;;		i2_I2C_2_Master_Write
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text61
 10924  00426A                     __ptext61:
 10925                           	callstack 0
 10926  00426A                     i2_I2C_2_Master_Idle:
 10927                           	callstack 17
 10928  00426A                     i2l486:
 10929  00426A  010E               	movlb	14	; () banked
 10930  00426C  B5D8               	btfsc	216,2,b	;volatile
 10931  00426E  EF3B  F021         	goto	i2u393_41
 10932  004272  EF3D  F021         	goto	i2u393_40
 10933  004276                     i2u393_41:
 10934  004276  EF35  F021         	goto	i2l486
 10935  00427A                     i2u393_40:
 10936  00427A                     
 10937                           ; BSR set to: 14
 10938  00427A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 10939  00427E  0E1F               	movlw	31
 10940  004280  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 10941  004282  A4D8               	btfss	status,2,c
 10942  004284  EF46  F021         	goto	i2u394_41
 10943  004288  EF48  F021         	goto	i2u394_40
 10944  00428C                     i2u394_41:
 10945  00428C  EF35  F021         	goto	i2l486
 10946  004290                     i2u394_40:
 10947  004290                     
 10948                           ; BSR set to: 14
 10949  004290  0012               	return		;funcret
 10950  004292                     __end_ofi2_I2C_2_Master_Idle:
 10951                           	callstack 0
 10952                           
 10953                           	psect	rparam
 10954  0000                     
 10955                           	psect	temp
 10956  000057                     btemp:
 10957                           	callstack 0
 10958  000057                     	ds	1
 10959  0000                     int$flags	set	btemp
 10960  0000                     wtemp8	set	btemp+1
 10961  0000                     ttemp5	set	btemp+1
 10962  0000                     ttemp6	set	btemp+4
 10963  0000                     ttemp7	set	btemp+8
 10964                           
 10965                           	psect	idloc
 10966                           
 10967                           ;Config register IDLOC0 @ 0x200000
 10968                           ;	unspecified, using default values
 10969  200000                     	org	2097152
 10970  200000  0FFF               	dw	4095
 10971                           
 10972                           ;Config register IDLOC1 @ 0x200002
 10973                           ;	unspecified, using default values
 10974  200002                     	org	2097154
 10975  200002  0FFF               	dw	4095
 10976                           
 10977                           ;Config register IDLOC2 @ 0x200004
 10978                           ;	unspecified, using default values
 10979  200004                     	org	2097156
 10980  200004  0FFF               	dw	4095
 10981                           
 10982                           ;Config register IDLOC3 @ 0x200006
 10983                           ;	unspecified, using default values
 10984  200006                     	org	2097158
 10985  200006  0FFF               	dw	4095
 10986                           
 10987                           ;Config register IDLOC4 @ 0x200008
 10988                           ;	unspecified, using default values
 10989  200008                     	org	2097160
 10990  200008  0FFF               	dw	4095
 10991                           
 10992                           ;Config register IDLOC5 @ 0x20000A
 10993                           ;	unspecified, using default values
 10994  20000A                     	org	2097162
 10995  20000A  0FFF               	dw	4095
 10996                           
 10997                           ;Config register IDLOC6 @ 0x20000C
 10998                           ;	unspecified, using default values
 10999  20000C                     	org	2097164
 11000  20000C  0FFF               	dw	4095
 11001                           
 11002                           ;Config register IDLOC7 @ 0x20000E
 11003                           ;	unspecified, using default values
 11004  20000E                     	org	2097166
 11005  20000E  0FFF               	dw	4095
 11006                           
 11007                           	psect	config
 11008                           
 11009                           ;Config register CONFIG1L @ 0x300000
 11010                           ;	External Oscillator mode Selection bits
 11011                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11012                           ;	Power-up default value for COSC bits
 11013                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11014  300000                     	org	3145728
 11015  300000  AA                 	db	170
 11016                           
 11017                           ;Config register CONFIG1H @ 0x300001
 11018                           ;	unspecified, using default values
 11019                           ;	Clock Out Enable bit
 11020                           ;	CLKOUTEN = 0x1, unprogrammed default
 11021                           ;	Clock Switch Enable bit
 11022                           ;	CSWEN = 0x1, unprogrammed default
 11023                           ;	Fail-Safe Clock Monitor Enable bit
 11024                           ;	FCMEN = 0x1, unprogrammed default
 11025  300001                     	org	3145729
 11026  300001  FF                 	db	255
 11027                           
 11028                           ;Config register CONFIG2L @ 0x300002
 11029                           ;	unspecified, using default values
 11030                           ;	Master Clear Enable bit
 11031                           ;	MCLRE = 0x1, unprogrammed default
 11032                           ;	Power-up Timer Enable bit
 11033                           ;	PWRTE = 0x1, unprogrammed default
 11034                           ;	Low-power BOR enable bit
 11035                           ;	LPBOREN = 0x1, unprogrammed default
 11036                           ;	Brown-out Reset Enable bits
 11037                           ;	BOREN = 0x3, unprogrammed default
 11038  300002                     	org	3145730
 11039  300002  FF                 	db	255
 11040                           
 11041                           ;Config register CONFIG2H @ 0x300003
 11042                           ;	unspecified, using default values
 11043                           ;	Brown Out Reset Voltage selection bits
 11044                           ;	BORV = 0x3, unprogrammed default
 11045                           ;	ZCD Disable bit
 11046                           ;	ZCD = 0x1, unprogrammed default
 11047                           ;	PPSLOCK bit One-Way Set Enable bit
 11048                           ;	PPS1WAY = 0x1, unprogrammed default
 11049                           ;	Stack Full/Underflow Reset Enable bit
 11050                           ;	STVREN = 0x1, unprogrammed default
 11051                           ;	Debugger Enable bit
 11052                           ;	DEBUG = 0x1, unprogrammed default
 11053                           ;	Extended Instruction Set Enable bit
 11054                           ;	XINST = 0x1, unprogrammed default
 11055  300003                     	org	3145731
 11056  300003  FF                 	db	255
 11057                           
 11058                           ;Config register CONFIG3L @ 0x300004
 11059                           ;	WDT Period Select bits
 11060                           ;	WDTCPS = 0x1F, unprogrammed default
 11061                           ;	WDT operating mode
 11062                           ;	WDTE = OFF, WDT Disabled
 11063  300004                     	org	3145732
 11064  300004  9F                 	db	159
 11065                           
 11066                           ;Config register CONFIG3H @ 0x300005
 11067                           ;	unspecified, using default values
 11068                           ;	WDT Window Select bits
 11069                           ;	WDTCWS = 0x7, unprogrammed default
 11070                           ;	WDT input clock selector
 11071                           ;	WDTCCS = 0x7, unprogrammed default
 11072  300005                     	org	3145733
 11073  300005  FF                 	db	255
 11074                           
 11075                           ;Config register CONFIG4L @ 0x300006
 11076                           ;	unspecified, using default values
 11077                           ;	Write Protection Block 0
 11078                           ;	WRT0 = 0x1, unprogrammed default
 11079                           ;	Write Protection Block 1
 11080                           ;	WRT1 = 0x1, unprogrammed default
 11081                           ;	Write Protection Block 2
 11082                           ;	WRT2 = 0x1, unprogrammed default
 11083                           ;	Write Protection Block 3
 11084                           ;	WRT3 = 0x1, unprogrammed default
 11085                           ;	Write Protection Block 3
 11086                           ;	WRT4 = 0x1, unprogrammed default
 11087                           ;	Write Protection Block 3
 11088                           ;	WRT5 = 0x1, unprogrammed default
 11089                           ;	Write Protection Block 3
 11090                           ;	WRT6 = 0x1, unprogrammed default
 11091                           ;	Write Protection Block 3
 11092                           ;	WRT7 = 0x1, unprogrammed default
 11093  300006                     	org	3145734
 11094  300006  FF                 	db	255
 11095                           
 11096                           ;Config register CONFIG4H @ 0x300007
 11097                           ;	unspecified, using default values
 11098                           ;	Configuration Register Write Protection bit
 11099                           ;	WRTC = 0x1, unprogrammed default
 11100                           ;	Boot Block Write Protection bit
 11101                           ;	WRTB = 0x1, unprogrammed default
 11102                           ;	Data EEPROM Write Protection bit
 11103                           ;	WRTD = 0x1, unprogrammed default
 11104                           ;	Scanner Enable bit
 11105                           ;	SCANE = 0x1, unprogrammed default
 11106                           ;	Low Voltage Programming Enable bit
 11107                           ;	LVP = 0x1, unprogrammed default
 11108  300007                     	org	3145735
 11109  300007  FF                 	db	255
 11110                           
 11111                           ;Config register CONFIG5L @ 0x300008
 11112                           ;	unspecified, using default values
 11113                           ;	UserNVM Program Memory Code Protection bit
 11114                           ;	CP = 0x1, unprogrammed default
 11115                           ;	DataNVM Memory Code Protection bit
 11116                           ;	CPD = 0x1, unprogrammed default
 11117  300008                     	org	3145736
 11118  300008  FF                 	db	255
 11119                           
 11120                           ;Config register CONFIG5H @ 0x300009
 11121                           ;	unspecified, using default values
 11122  300009                     	org	3145737
 11123  300009  FF                 	db	255
 11124                           
 11125                           ;Config register CONFIG6L @ 0x30000A
 11126                           ;	unspecified, using default values
 11127                           ;	Table Read Protection Block 0
 11128                           ;	EBTR0 = 0x1, unprogrammed default
 11129                           ;	Table Read Protection Block 1
 11130                           ;	EBTR1 = 0x1, unprogrammed default
 11131                           ;	Table Read Protection Block 2
 11132                           ;	EBTR2 = 0x1, unprogrammed default
 11133                           ;	Table Read Protection Block 3
 11134                           ;	EBTR3 = 0x1, unprogrammed default
 11135                           ;	Table Read Protection Block 4
 11136                           ;	EBTR4 = 0x1, unprogrammed default
 11137                           ;	Table Read Protection Block 5
 11138                           ;	EBTR5 = 0x1, unprogrammed default
 11139                           ;	Table Read Protection Block 6
 11140                           ;	EBTR6 = 0x1, unprogrammed default
 11141                           ;	Table Read Protection Block 7
 11142                           ;	EBTR7 = 0x1, unprogrammed default
 11143  30000A                     	org	3145738
 11144  30000A  FF                 	db	255
 11145                           
 11146                           ;Config register CONFIG6H @ 0x30000B
 11147                           ;	unspecified, using default values
 11148                           ;	Boot Block Table Read Protection bit
 11149                           ;	EBTRB = 0x1, unprogrammed default
 11150  30000B                     	org	3145739
 11151  30000B  FF                 	db	255
 11152                           tosu	equ	0xFFF
 11153                           tosh	equ	0xFFE
 11154                           tosl	equ	0xFFD
 11155                           stkptr	equ	0xFFC
 11156                           pclatu	equ	0xFFB
 11157                           pclath	equ	0xFFA
 11158                           pcl	equ	0xFF9
 11159                           tblptru	equ	0xFF8
 11160                           tblptrh	equ	0xFF7
 11161                           tblptrl	equ	0xFF6
 11162                           tablat	equ	0xFF5
 11163                           prodh	equ	0xFF4
 11164                           prodl	equ	0xFF3
 11165                           indf0	equ	0xFEF
 11166                           postinc0	equ	0xFEE
 11167                           postdec0	equ	0xFED
 11168                           preinc0	equ	0xFEC
 11169                           plusw0	equ	0xFEB
 11170                           fsr0h	equ	0xFEA
 11171                           fsr0l	equ	0xFE9
 11172                           wreg	equ	0xFE8
 11173                           indf1	equ	0xFE7
 11174                           postinc1	equ	0xFE6
 11175                           postdec1	equ	0xFE5
 11176                           preinc1	equ	0xFE4
 11177                           plusw1	equ	0xFE3
 11178                           fsr1h	equ	0xFE2
 11179                           fsr1l	equ	0xFE1
 11180                           bsr	equ	0xFE0
 11181                           indf2	equ	0xFDF
 11182                           postinc2	equ	0xFDE
 11183                           postdec2	equ	0xFDD
 11184                           preinc2	equ	0xFDC
 11185                           plusw2	equ	0xFDB
 11186                           fsr2h	equ	0xFDA
 11187                           fsr2l	equ	0xFD9
 11188                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         91
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     83     130
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2971_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC2@buf(BANK0[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC2@buf(BANK0[100]), 

    DCmotors_calibration@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    DCmotors_calibration@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    returnhome@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    returnhome@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseinstructions@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseinstructions@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    instructions@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    instructions@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnright@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnright@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnright@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnleft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnleft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    clearance@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    clearance@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC2@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S29$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S29$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_DCmotors_calibration
    _reverseinstructions->_instructions
    _interrupts_clear->_interrupts_colourclick
    _interrupts_colourclick->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourclick_calibration->_colourclick_readRGBC
    _colourcards_readRGBC->_instructions
    _instructions->_turnleft
    _instructions->_turnright
    _clearance->_stop
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    _checkbatterylevel->_colourclickLEDs_RGB
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->___fldiv
    _turnleft->___fldiv
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fldiv->___fladd
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colourclick
    i2_interrupts_colourclick->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourcards_readRGBC
    _returnhome->_reverseinstructions
    _reverseinstructions->_instructions
    _colourcards_readRGBC->_instructions
    _instructions->_turnleft
    _instructions->_turnright
    _colourcards_normaliseRGBC->___fldiv
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->___fldiv
    _turnleft->___fldiv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  281350
                                             54 BANK0     29    29      0
                           _ADC_init
               _DCmotors_calibration
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
               _colourclick_readRGBC
                            _forward
                    _interrupts_init
                         _returnhome
                            _reverse
                               _stop
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _returnhome                                           9     5      4  125041
                                             40 BANK0      9     5      4
                            _reverse
                _reverseinstructions
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseinstructions                                  6     2      4  114070
                                             34 BANK0      6     2      4
                            _forward
                       _instructions
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
             _interrupts_colourclick
 ---------------------------------------------------------------------------------
 (3) _interrupts_colourclick                               1     1      0     750
                                             12 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     816
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             10    10      0    1290
                                             21 COMRAM    10    10      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6   91393
                                             34 BANK0     20    14      6
                             ___flge
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                       _instructions
                               _stop
 ---------------------------------------------------------------------------------
 (3) _instructions                                         7     2      5   64788
                                             76 COMRAM     2     2      0
                                             29 BANK0      5     0      5
                          _clearance
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (4) _clearance                                            6     2      4   11274
                                             39 COMRAM     6     2      4
                            _reverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse                                              5     1      4    3183
                                             33 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _forward                                              5     1      4    2879
                                             33 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2258
                                             21 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourclick_readRGBC                                 2     0      2    1148
                                             19 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (2) _colourclick_readR                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readG                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readC                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readB                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    5096
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    2     2      0      46
                                             10 COMRAM     2     2      0
                         _ADC_getval
                _colourclickLEDs_RGB
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_RGB                                  2     2      0       0
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              8 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_calibration                                 7     3      4   46223
                                             76 COMRAM     2     2      0
                                             29 BANK0      5     1      4
                           _adjdelay
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (3) _turnright                                           17    11      6   19298
                                             75 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _turnleft                                            17    11      6   19028
                                             75 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1234
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2200
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    5958
                                             22 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2007
                                             63 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2540
                                             47 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    7091
                                             33 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    1943
                                             22 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             14 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _adjdelay                                             4     4      0      90
                                              8 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     244
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (10) i2_interrupts_clear                                  0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
           i2_interrupts_colourclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_colourclick                            1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (12) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_calibration
     _adjdelay
     _stop
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _turnleft
       _DCmotors_setPWM
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flge
         ___xxtofl (ARG)
       ___flmul
       ___xxtofl
     _turnright
       _DCmotors_setPWM
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___xxtofl
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
     _colourclickLEDs_RGB
   _colourcards_readRGBC
     ___flge
     _colourcards_normaliseRGBC
       ___fldiv
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _instructions
       _clearance
         _reverse
           _DCmotors_setPWM
         _stop
       _reverse
       _stop
       _turnleft
       _turnright
     _stop
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colourclick_readRGBC
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colourclick
         _colourclick_writetoaddr
   _returnhome
     _reverse
     _reverseinstructions
       _forward
       _instructions
       _stop
       _turnleft
       _turnright
     _stop
   _reverse
   _stop
   _timer0_init

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colourclick
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      82       5       81.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     100       8        0.0%
DATA                 0      0     100       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 09:26:10 2021

      colourcards_normaliseRGBC@rel 006F         colourclick_readRGBC2@tmpval 0016  
                      ___fldiv@aexp 006C                        ___fldiv@bexp 006B  
                      ___fldiv@sign 0064                                  l92 2C12  
                                l85 2A46                                  l89 2A62  
             __end_of_DCmotors_init 40D0                        ___awdiv@sign 0014  
                                bsr 000FE0                 ___wmul@multiplicand 000B  
                               l151 42DA                                 l306 3528  
                               l154 43B8                                 l411 43FE  
                               l412 4404                                 l260 1472  
                               l501 4434                                 l157 411C  
                               l406 43D2                                 l504 41AC  
                               l352 435E                                 l441 4440  
                               l409 43F0                                 l361 407E  
                               l257 1460                                 l450 3CDC  
                               l355 3F8E                                 l444 4474  
                               l364 402E                                 l453 42FC  
                               l349 41E4                                 l622 40CE  
                               l358 3FDE                                 l702 2426  
                               l382 3BB6                                 l367 3F3E  
                               l375 37E2                                 l383 3BC6  
                               l447 4428                                 l456 441A  
                               l384 3BD6                                 l712 298A  
                               l529 437E                                 l385 3C3E  
                               l378 3B9A                                 l731 242E  
                               l483 4240                                 l636 3AD4  
                               l492 4460                                 l644 3DF8  
                               l652 3D6A                                 l629 31F8  
                               l742 24B6                                 l486 4242  
                               l718 298A                                 l663 3E82  
                               l743 253A                                 l495 446A  
                               l655 3EE0                                 l752 265E  
                               l736 26DE                                 l728 39DE  
                               l840 433E                                 l673 3022  
                               l753 2686                                 l737 244E  
                               l489 4268                                 l674 3024  
                               l738 249A                                 l498 4456  
                               l771 368C                                 l763 3584  
                               l843 42B6                                 l747 2556  
                               l684 2E1C                                 l748 2642  
                               l685 2E1E                                 l757 26F0  
                               l768 3636                                 l696 2426  
                               _dur 0100                                 _tmp 00DB  
                      returnhome@mL 0088                        returnhome@mR 008A  
                               prod 000FF3                                 wreg 000FE8  
                      ___flmul@aexp 0028                        ___flmul@bexp 0029  
                      ___flmul@sign 0023                        ___flmul@temp 002E  
             ?_colourclick_readRGBC 0014                        ___flmul@prod 002A  
               __size_of_ADC_getval 0018                                l1113 38E6  
                              l1108 38A0                                l1074 3B98  
                              l1501 33AC                                l1430 1F1C  
                              l1512 3344                                l1425 20F8  
                              l1505 32E8                                l1371 1662  
                              l1427 1F58                                l1380 1932  
                              l1372 1650                                l1436 1F9E  
                              l3301 3B30                                l1373 1616  
                              l1461 1D5C                                l1438 2016  
                              l3311 3B6A                                l3303 3B38  
                              l1439 2004                                l1464 1BEE  
                              l3321 3B90                                l3313 3B6C  
                              l3305 3B46                                l1457 19F8  
                              l5001 2F76                                l3401 41AA  
                              l4201 3782                                l1474 1D1E  
                              l1466 1C66                                l3315 3B72  
                              l3307 3B4C                                l3331 3042  
                              l3411 1490                                l1467 1C54  
                              l5011 2FC8                                l5003 2F82  
                              l4203 379A                                l4211 37C4  
                              l1388 177C                                l4301 352C  
                              l3309 3B62                                l3317 3B78  
                              l3341 3190                                l3333 30A4  
                              l1397 184C                                l3501 1644  
                              l3413 14A0                                l3421 14CA  
                              l3405 1474                                l5013 2FD8  
                              l5005 2F8A                                l5021 2D06  
                              l3325 4242                                l4213 37CA  
                              l4205 37A6                                l5101 23DC  
                              l4221 422A                                l1398 183A  
                              l4311 354E                                l3319 3B88  
                              l3335 30EA                                l3351 3E30  
                              l3343 3DFA                                l3511 1694  
                              l3503 164E                                l3431 14FA  
                              l3423 14DA                                l3415 14B0  
                              l3407 1480                                l5015 2FDE  
                              l5007 2FA2                                l5031 2D58  
                              l5023 2D16                                l4231 43EE  
                              l5111 33FC                                l5103 33AE  
                              l4063 42DE                                l3327 4252  
                              l4207 37BE                                l4071 3DA8  
                              l4223 422C                                l4215 4218  
                              l4321 3592                                l4313 355C  
                              l3281 3AD6                                l3337 310A  
                              l3329 3026                                l3345 3E00  
                              l3353 3E38                                l3601 1920  
                              l3521 16D0                                l3513 16A4  
                              l3505 1670                                l3441 153A  
                              l3433 1508                                l3425 14E0  
                              l3417 14C0                                l3409 148E  
                              l5009 2FBA                                l5041 2D9C  
                              l5033 2D64                                l5025 2D1C  
                              l5017 2C1A                                l5201 25C6  
                              l4401 4096                                l4233 4402  
                              l4241 3C40                                l5113 345C  
                              l5105 33BE                                l4065 3EE2  
                              l4073 3DB4                                l3361 3CDE  
                              l4225 422E                                l4217 4222  
                              l4081 40D0                                l5121 2732  
                              l1498 3250                                l4323 35A0  
                              l4331 35C4                                l4315 355E  
                              l4307 3530                                l3291 3B02  
                              l3283 3ADA                                l3275 4292  
                              l3339 3126                                l3355 3E50  
                              l3347 3E18                                l3603 1922  
                              l3531 1716                                l3523 16DE  
                              l3515 16B2                                l3507 1680  
                              l3451 1574                                l3443 153C  
                              l3435 150A                                l3427 14F2  
                              l3419 14C2                                l3611 1D7A  
                              l5043 2DB4                                l5035 2D70  
                              l5027 2D34                                l5019 2CF4  
                              l5211 2626                                l5203 25DA  
                              l4411 40A2                                l4403 409A  
                              l4251 3CA8                                l4243 3C42  
                              l5115 34C2                                l5107 33D4  
                              l4171 36BC                                l4075 3DC0  
                              l4067 3D6C                                l3363 3D02  
                              l3371 3D3A                                l5051 20FA  
                              l4219 4228                                l4227 441C  
                              l4091 4108                                l4083 40DA  
                              l5131 27D6                                l5123 2756  
                              l4341 3610                                l4325 35A2  
                              l4317 3566                                l4309 3540  
                              l4333 35E0                                l3293 3B0A  
                              l3285 3AE8                                l3277 42AE  
                              l3357 3E68                                l3349 3E24  
                              l3541 1792                                l3533 174A  
                              l3525 16E0                                l3517 16C0  
                              l3461 1588                                l3453 1578  
                              l3437 151A                                l3445 1544  
                              l3429 14F4                                l3701 1FAE  
                              l3621 1DAE                                l3613 1D7C  
                              l5045 2DC2                                l5037 2D7C  
                              l5029 2D40                                l5221 267A  
                              l5213 263E                                l5205 25F2  
                              l4237 4436                                l4421 40B4  
                              l4413 40A4                                l4405 409C  
                              l4253 3CC2                                l4245 3C5A  
                              l5109 33E8                                l3381 4430  
                              l4181 36FC                                l4173 36BE  
                              l4165 368E                                l4069 3D90  
                              l4077 3DC8                                l3373 3D52  
                              l3365 3D1A                                l5061 2140  
                              l5053 210C                                l5301 13A0  
                              l4229 4422                                l4093 4112  
                              l4085 40EA                                l4149 43A0  
                              l5133 27EA                                l5141 2868  
                              l5125 2772                                l5117 26F2  
                              l4351 3654                                l4343 3618  
                              l4335 35F2                                l4327 35AA  
                              l4319 357E                                l3295 3B0E  
                              l3287 3AF0                                l3359 3E80  
                              l3551 17CE                                l3543 17A2  
                              l3535 174C                                l3527 16EA  
                              l3519 16CC                                l3471 159C  
                              l3463 158C                                l3455 157C  
                              l3447 1554                                l3439 152A  
                              l3703 1FBC                                l3631 1DE0  
                              l3615 1D8C                                l3623 1DB6  
                              l3607 1D5E                                l5047 2DD2  
                              l5039 2D84                                l5231 26AA  
                              l5223 267C                                l5215 2640  
                              l5207 2610                                l4255 4406  
                              l4239 446C                                l4423 40B6  
                              l4415 40A6                                l4407 409E  
                              l4431 4360                                l4247 3C74  
                              l3391 416E                                l3375 4458  
                              l3383 444E                                l4191 3750  
                              l4175 36D6                                l4183 3718  
                              l4167 3694                                l4079 3DE0  
                              l3367 3D26                                l5071 2242  
                              l5063 218A                                l5055 2110  
                              l5311 1424                                l5303 13BA  
                              l4087 40F4                                l5143 288C  
                              l5135 2804                                l5127 2796  
                              l5119 2716                                l4361 367C  
                              l4353 365C                                l4345 3630  
                              l4337 3600                                l4329 35C2  
                              l3297 3B16                                l3289 3AF4  
                              l3561 17FA                                l3553 17D0  
                              l3537 175C                                l3529 16F0  
                              l3481 15B0                                l3473 15A0  
                              l3465 1590                                l3457 1580  
                              l3449 1566                                l3713 2026  
                              l3721 206E                                l3705 1FC0  
                              l3641 1E14                                l3633 1DE2  
                              l3625 1DC6                                l3617 1D9C  
                              l3609 1D6C                                l3801 1AA2  
                              l5049 2DD8                                l5233 26C2  
                              l5225 2694                                l5217 2650  
                              l5209 2624                                l5161 2428  
                              l4425 40C2                                l4417 40A8  
                              l4409 40A0                                l4441 437A  
                              l4433 436A                                l4249 3C8E  
                              l3393 4172                                l3377 445C  
                              l3385 4452                                l4193 3768  
                              l4185 372A                                l4177 36E2  
                              l4169 36AC                                l3369 3D32  
                              l5081 22CA                                l5073 2254  
                              l5065 219C                                l5057 212E  
                              l5321 146A                                l5313 1446  
                              l5305 13CE                                l5241 0EA8  
                              l4089 40FE                                l5145 28A0  
                              l5153 290A                                l5137 2832  
                              l5129 27B2                                l5401 2A88  
                              l4355 3674                                l4347 3644  
                              l4339 360E                                l3299 3B28  
                              l3571 1832                                l3555 17DE  
                              l3547 17B6                                l3563 17FC  
                              l3539 176C                                l3491 160E  
                              l3475 15A4                                l3467 1594  
                              l3459 1584                                l3483 15B4  
                              l3731 20D8                                l3723 2088  
                              l3715 2032                                l3707 1FCE  
                              l3651 1E5A                                l3635 1DF2  
                              l3643 1E1C                                l3627 1DCC  
                              l3619 1DAC                                l3811 1AF4  
                              l3803 1AAE                                l5235 26C4  
                              l5227 26A2                                l5219 266C  
                              l5171 24A8                                l5163 243C  
                              l4427 40C6                                l4419 40AA  
                              l4443 437C                                l4435 436C  
                              l4451 3ABC                                l3395 417A  
                              l3387 4462                                l3379 442C  
                              l4187 372C                                l4179 36FA  
                              l5091 234C                                l5075 2268  
                              l5083 22E2                                l5067 21E6  
                              l5059 2130                                l5315 1456  
                              l5307 13F4                                l5323 146E  
                              l5251 0F86                                l5243 0ECA  
                              l5155 292E                                l5147 28BA  
                              l5139 2850                                l5331 390C  
                              l5411 2ACE                                l5403 2A8C  
                              l4381 43CC                                l4349 3652  
                              l3581 18B0                                l3557 17E6  
                              l3549 17C0                                l3565 180A  
                              l3493 1624                                l3485 15B8  
                              l3477 15A8                                l3469 1598  
                              l3733 20E6                                l3725 209E  
                              l3717 2040                                l3709 1FFC  
                              l3661 1E82                                l3653 1E5E  
                              l3645 1E2C                                l3637 1E02  
                              l3629 1DD2                                l3821 1B72  
                              l3813 1B04                                l3805 1ABE  
                              l3901 321A                                l5237 26C6  
                              l5229 26A4                                l5181 24F0  
                              l5173 24B8                                l5165 2450  
                              l4429 40CA                                l4437 436E  
                              l4453 3AC0                                l4445 39E0  
                              l3397 4182                                l3389 4466  
                              l4189 3744                                l4197 376E  
                              l5085 22F4                                l5077 2280  
                              l5069 21F8                                l5317 1458  
                              l5309 1400                                l5261 1058  
                              l5253 0FB8                                l5245 0EFC  
                              l4541 3BD8                                l4533 3B9A  
                              l5157 294A                                l5149 28E8  
                              l5341 3940                                l5325 38E8  
                              l5421 2B24                                l5413 2ADE  
                              l5405 2AA2                                l4383 43CE  
                              l4359 367A                                l3591 18F6  
                              l3575 185C                                l3583 18B2  
                              l3567 180E                                l3559 17EA  
                              l3495 1630                                l3487 15E2  
                              l3479 15AC                                l3735 20EC  
                              l3727 20B8                                l3719 206A  
                              l3671 1ED0                                l3647 1E42  
                              l3639 1E12                                l3831 1BEC  
                              l3823 1BA8                                l3815 1B20  
                              l3807 1ACA                                l3751 1950  
                              l3911 3292                                l3903 3260  
                              l5191 2570                                l5183 2508  
                              l5175 24D0                                l5167 2468  
                              l4439 4378                                l4447 39E6  
                              l3399 41A8                                l4199 3780  
                              l5087 2308                                l5095 236E  
                              l5079 22AC                                l5319 1462  
                              l5271 1126                                l5263 108A  
                              l5255 0FD6                                l5247 0F2E  
                              l5239 0EA4                                l4551 3C1C  
                              l4543 3BDE                                l4535 3BA8  
                              l4391 41BC                                l5159 296E  
                              l5351 3982                                l5343 3968  
                              l5327 38EE                                l5431 2B8E  
                              l5423 2B38                                l5415 2AF2  
                              l5407 2AB2                                l4385 43D0  
                              l4377 43BA                                l3593 1904  
                              l3585 18C2                                l3577 1868  
                              l3569 181C                                l3497 1634  
                              l3489 15FE                                l3737 20EE  
                              l3729 20D4                                l3681 1F1A  
                              l3673 1EE0                                l3665 1E96  
                              l3649 1E52                                l3657 1E72  
                              l3841 1C4C                                l3833 1BFE  
                              l3825 1BB6                                l3817 1B2C  
                              l3809 1ADA                                l3761 1996  
                              l3753 1960                                l3745 1934  
                              l3921 331A                                l3913 329E  
                              l3905 3276                                l5193 2576  
                              l5185 2526                                l5177 24D6  
                              l5169 2486                                l4449 39F6  
                              l5097 2380                                l5089 2320  
                              l5281 11F8                                l5273 1158  
                              l5265 10B0                                l5249 0F60  
                              l5257 0FF4                                l4553 3C22  
                              l4545 3BF6                                l4537 3BC4  
                              l4393 41CC                                l4561 42B8  
                              l5361 39B6                                l5353 3996  
                              l5345 396C                                l5337 3912  
                              l5329 38F8                                l5441 2BCC  
                              l5433 2B9A                                l5425 2B3A  
                              l5417 2AF4                                l5409 2ABE  
                              l4379 43C4                                l3595 190A  
                              l3587 18D2                                l3579 1876  
                              l3499 1642                                l3691 1F68  
                              l3683 1F26                                l3675 1EE8  
                              l3667 1EB0                                l3659 1E82  
                              l3851 1CBA                                l3835 1C0C  
                              l3827 1BD4                                l3819 1B48  
                              l3771 19C2                                l3763 199C  
                              l3755 1970                                l3747 1940  
                              l3931 3358                                l3923 3326  
                              l3915 32D0                                l5195 258E  
                              l5187 2548                                l5179 24EE  
                              l5099 23CA                                l5291 12DE  
                              l5283 122A                                l5275 1176  
                              l5267 10E2                                l5259 1026  
                              l4555 3C24                                l4547 3C02  
                              l4539 3BD4                                l4395 41D6  
                              l4387 41AE                                l4571 42CC  
                              l4563 42BE                                l5363 39CA  
                              l5347 396E                                l5339 392C  
                              l5443 2BE0                                l5435 2BA8  
                              l5427 2B56                                l5419 2B0A  
                              l5371 29EA                                l3597 190C  
                              l3589 18F2                                l3693 1F7E  
                              l3685 1F44                                l3677 1EF8  
                              l3669 1EC0                                l3861 1D22  
                              l3845 1C76                                l3853 1CBE  
                              l3837 1C10                                l3829 1BDE  
                              l3781 1A18                                l3773 19D2  
                              l3765 19A2                                l3757 1980  
                              l3749 194E                                l3933 337C  
                              l3925 3334                                l3917 32D2  
                              l3909 328A                                l5197 2590  
                              l5189 2558                                l5293 12FC  
                              l5285 1248                                l5269 1100  
                              l5277 1194                                l4557 3C26  
                              l4549 3C1A                                l4397 41E0  
                              l4389 41B2                                l4581 42D8  
                              l4573 42CE                                l4565 42C4  
                              l5349 3970                                l5445 2BEA  
                              l5437 2BB4                                l5429 2B74  
                              l5381 2A1A                                l5373 29FA  
                              l5365 298C                                l3599 1912  
                              l3695 1F84                                l3687 1F46  
                              l3679 1F0C                                l3871 1D4C  
                              l3863 1D32                                l3855 1CD8  
                              l3847 1C82                                l3839 1C1E  
                              l3791 1A58                                l3775 19E2  
                              l3767 19B0                                l3759 1986  
                              l3935 338C                                l3927 3352  
                              l3919 32DE                                l5199 25A8  
                              l4399 4082                                l3951 3F86  
                              l5295 132E                                l5287 127A  
                              l5279 11C6                                l4559 3C32  
                              l4575 42D2                                l4567 42C8  
                              l5359 399C                                l4583 4320  
                              l5447 2BFA                                l5439 2BBC  
                              l5391 2A42                                l5383 2A1E  
                              l5375 2A02                                l5367 29D6  
                              l3697 1F8E                                l3689 1F56  
                              l3881 3850                                l3865 1D40  
                              l3857 1CEC                                l3849 1C90  
                              l3793 1A64                                l3785 1A2C  
                              l3777 19E8                                l3769 19B2  
                              l3937 339A                                l3929 3354  
                              l3961 4030                                l5297 1360  
                              l5289 12AC                                l4577 42D4  
                              l4569 42CA                                l4585 4328  
                              l5393 2A54                                l5385 2A24  
                              l5377 2A0E                                l5369 29DE  
                              l3699 1F9C                                l3891 38DE  
                              l3883 3860                                l3875 37E4  
                              l3867 1D42                                l3859 1D06  
                              l3795 1A7C                                l3787 1A38  
                              l3779 1A08                                l3939 339C  
                              l3963 4076                                l3955 3F90  
                              l5299 1392                                l3947 4342  
                              l4579 42D6                                l4587 4332  
                              l5395 2A64                                l5387 2A28  
                              l5379 2A16                                l3893 38E4  
                              l3885 386E                                l3877 3812  
                              l3869 1D48                                l3797 1A88  
                              l3789 1A42                                l3957 3FD6  
                              l3949 3F40                                l3981 3EDE  
                              l3973 3E84                                l4589 433C  
                              l5397 2A6A                                l5389 2A2C  
                              l3887 3880                                l3879 3822  
                              l3799 1A94                                l3967 3FE0  
                              l3975 3E86                                l5399 2A84  
                              l3889 388E                                l3897 31FC  
                              l3969 4026                                l3977 3E9A  
                              l3899 320C                                l3979 3EB2  
                              l4991 2F22                                l4983 2E20  
                              l4993 2F3A                                l4985 2EFA  
                              l4995 2F46                                l4987 2F0C  
                              l4997 2F5E                                l4989 2F1C  
                              l4999 2F6A                                STR_1 0E01  
                              STR_2 0E9F                                STR_4 0E80  
                              STR_6 0E94                                u3000 14F2  
                              u3001 14EE                                u3010 1508  
                              u3011 1504                                u3100 1642  
                              u3020 151A                                u3101 163E  
                              u3021 1516                                u3110 1662  
                              u3030 152A                                u3111 165E  
                              u3031 1526                                u3200 17A2  
                              u3120 1670                                u3040 1566  
                      _BAUD4CONbits 000EE9                                u3201 179E  
                              u3121 166C                                u3041 1562  
                              _LATE 000F7D                                u3210 17CE  
                              u3130 1680                                u3050 1574  
                              u3211 17CA                                u3131 167C  
                              u3051 1570                                _LATG 000F7F  
                              u3300 18B0                                u3220 17DE  
                              u3140 16B2                                u3060 15E2  
                              u3301 18AC                                u3221 17DA  
                              u3141 16AE                                u3061 15DE  
                              u3310 18C2                                u3230 17FA  
                              u3150 16C0                                u3070 15FA  
                              u3311 18BE                                u3231 17F6  
                              u3151 16BC                                u3071 15F4  
                              u3320 18D2                                u3240 180A  
                              u3160 16DE                                u3080 15FC  
                              u3400 1DF2                                u4200 3780  
                              u3321 18CE                                u3241 1806  
                              u3161 16DA                                u3401 1DEE  
                              u4201 377C                                u3330 18F2  
                              u3250 181C                                u3170 1716  
                              u3090 1624                                u3410 1E02  
                              u4210 43FE                                _T2PR 000FBC  
                              u3331 18EE                                u3251 1818  
                              u3171 1712                                u3091 1620  
                              u3411 1DFE                                u4211 43FA  
                              u4300 354E                                u3340 1904  
                              u3260 1832                                u3180 175C  
                              u3500 1FBC                                u3420 1E42  
                              u4301 354A                                u3341 1900  
                              u3261 182E                                u3181 1758  
                              u3501 1FB8                                u3421 1E3E  
                              u4310 355C                                u3350 1920  
                              u3270 1848                                u3190 1792  
                              u3510 1FCE                                u3430 1E82  
                              u4311 3558                                u3351 191C  
                              u3271 1844                                u3191 178E  
                              u3511 1FCA                                u3431 1E7E  
                              u4055 42E6                                u4320 3592  
                              u2800 3B02                                u3280 185C  
                              u3520 1FFC                                u3440 1EF8  
                              u3360 1D7A                                u3600 1960  
                              u4400 39F6                                u4056 42E8  
                              u4080 3DE0                                u6000 127A  
                              u4321 358E                                u2801 3AFE  
                              u3281 1858                                u3521 1FF8  
                              u3441 1EF4                                u3361 1D76  
                              u3601 195C                                u4401 39F2  
                              u4065 42F0                                u4081 3DDC  
                              u6001 1276                                u4330 35A0  
                              u2810 3B28                                u3290 1876  
                              u3530 2012                                u3450 1F1A  
                              u3370 1D8C                                u3610 1970  
                              u4410 3A08                                u4066 42F2  
                              u4090 3DF8                                u6010 12AC  
                              u4331 359C                                u2811 3B24  
                              u3291 1872                                u3531 200E  
                              u3451 1F16                                u3371 1D88  
                              u3611 196C                                u4411 3A00  
                              u4075 42FA                                u4091 3DF4  
                              u6011 12A8                                u4340 35F2  
                              u2820 3B46                                u3540 2026  
                              u3460 1F44                                u3380 1D9C  
                              u3700 1C1E                                u3620 19B0  
                              u4076 42FC                                u4180 36BC  
                              u6020 12DE                                u6100 3982  
                              u4341 35EE                                u2821 3B42  
                              u3541 2022                                u3461 1F40  
                              u3381 1D98                                u3701 1C1A  
                              u3621 19AC                                u4181 36B8  
                              u6021 12DA                                u6101 397E  
                              u4350 3600                                u2830 3B62  
                              u2910 3E50                                u3550 2040  
                              u3470 1F68                                u3390 1DE0  
                              u3710 1C4C                                u3630 19C2  
                              u4510 3AB0                                u4430 3A2A  
                              u4190 372A                                u6030 132E  
                              u6110 39CA                                u4351 35FC  
                              u2831 3B5E                                u2911 3E4C  
                              u3551 203C                                u3471 1F64  
                              u3391 1DDC                                u3711 1C48  
                              u3631 19BE                                u4511 3AA8  
                              u4431 3A22                                u4191 3726  
                              u6031 132A                                u6111 39C6  
                              u4360 360E                                u2840 3B88  
                              u2904 31EA                                u2920 3E68  
                              u3560 2088                                u3480 1F7E  
                              u3800 386E                                u3720 1C62  
                              u3640 19D2                                u6040 1360  
                              u6120 2A54                                u4361 360A  
                              u2841 3B84                                u2905 31E6  
                              u2921 3E64                                u3561 2084  
                              u3481 1F7A                                u3801 386A  
                              u3721 1C5E                                u3641 19CE  
                              u6041 135C                                u6121 2A50  
                              u4370 3644                                u4290 3540  
                              u3570 20B8                                u3490 1F9C  
                              u3810 388E                                u3730 1C76  
                              u3650 1A08                                u4450 3A4E  
                              u2850 4252                                u2930 3D52  
                              u6050 1392                                u6130 2A62  
                              u4371 3640                                u4291 353C  
                              u3571 20B4                                u3491 1F98  
                              u3811 388A                                u3731 1C72  
                              u3651 1A04                                u4451 3A46  
                              u2851 424E                                u2931 3D4E  
                              u6051 138E                                u6131 2A5E  
                              u4380 3652                                u3580 20E6  
                              u3820 38DE                                u3740 1C90  
                              u3660 1A18                                u3900 3352  
                              u5500 2F3A                                u4508 3A94  
                              u4428 3A0A                                u2860 4268  
                              u2940 3D6A                                u6060 1424  
                              u6140 2AA2                                u4381 364E  
                              u3581 20E2                                u3821 38DA  
                              u3741 1C8C                                u3661 1A14  
                              u3901 334E                                u5501 2F36  
                              u2861 4264                                u2941 3D66  
                              u6061 1420                                u6141 2A9E  
                              u4390 368C                                u2790 3AE8  
                              u2870 3042                                u3750 1CD8  
                              u3670 1B92                                u3590 194E  
                              u3910 338C                                u3830 320C  
                              u5510 2F5E                                u4470 3A72  
                              u2950 4196                                u6070 1446  
                              u6150 2AB2                                u4391 3688  
                              u2791 3AE4                                u2871 303E  
                              u3751 1CD4                                u3591 194A  
                              u3911 3388                                u3831 3208  
                              u5511 2F5A                                u7007 3C4C  
                              u4471 3A6A                                u2951 418E  
                              u6071 1442                                u6151 2AAE  
                              u2880 3126                                u3760 1D06  
                              u3680 1BEC                                u3920 339A  
                              u3840 321A                                u5520 2FA2  
                              u4528 3AB2                                u4448 3A2C  
                              u5600 210C                                u6080 1456  
                              u6160 2ACE                                u2881 3122  
                              u3761 1D02                                u3681 1BE8  
                              u3921 3396                                u3841 3216  
                              u5521 2F9E                                u7017 3C66  
                              u5601 2108                                u6081 1452  
                              u6161 2ACA                                u2970 148E  
                              u3770 1D40                                u3690 1C0C  
                              u3850 3276                                u5530 2FBA  
                              u4490 3A92                                u5610 2140  
                              u6090 3940                                u6170 2ADE  
                              u2971 148A                                u3771 1D3C  
                              u3691 1C08                                u3675 1B88  
                              u3851 3272                                u5531 2FB6  
                              u7107 2562                                u7027 3C80  
                              u4491 3A8A                                u5611 213C  
                              u6091 393C                                u6171 2ADA  
                              u2980 14A0                                u3780 3812  
                              u3860 32CC                                u5540 3022  
                              u4468 3A50                                u5620 219C  
                              u4660 3BA8                                u5700 2796  
                              u6180 2BCC                                u2981 149C  
                              u3781 380E                                u3861 32C8  
                              u5541 301E                                u7117 2580  
                              u7037 3C9A                                u5621 2198  
                              u4661 3BA4                                u5701 2792  
                              u6181 2BC8                                u2894 3180  
                              u2990 14B0                                u3790 3850  
                              u3870 3316                                u5550 2D34  
                              u5630 21F8                                u4670 3BB6  
                              u5710 27D6                                u6190 2BFA  
                              u2895 317C                                u2991 14AC  
                              u3791 384C                                u3871 3312  
                              u7207 2FCE                                u5551 2D30  
                              u7127 259A                                u7047 3CB4  
                              u5631 21F4                                u4671 3BB2  
                              u5711 27D2                                u6191 2BF6  
                              u3880 3334                                u5560 2D58  
                              u5800 2556                                u4488 3A74  
                              u2968 4198                                u5640 2254  
                              u4680 3BC4                                u5720 288C  
                              u7217 3E32                                u3881 3330  
                              u5561 2D54                                u7137 25E4  
                              u5801 2552                                u7057 3CCE  
                              u5641 2250                                u4681 3BC0  
                              u5721 2888                                u3890 3344  
                              u5570 2D9C                                u5810 2650  
                              u5650 22F4                                u4690 3BD4  
                              u5730 292E                                u7227 3E72  
                              u3891 3340                                u5571 2D98  
                              u5811 264C                                u7147 2630  
                              u7067 245A                                u5651 22F0  
                              u4691 3BD0                                u5731 292A  
                              u5580 2DB4                                u5820 265E  
                              u5660 2380                                u5900 0F60  
                              u5740 296E                                u7237 3570  
                              u5581 2DB0                                u7157 26B4  
                              u5821 265A                                u7077 24C2  
                              u5661 237C                                u5901 0F5C  
                              u5741 296A                                u5590 2E1C  
                              u5830 266C                                u5750 243C  
                              u5670 23DC                                u5910 0FB8  
                              u7247 35B4                                u5591 2E18  
                              u7167 26D0                                u5831 2668  
                              u7087 24E0                                u5751 2438  
                              u5671 23D8                                u5911 0FB4  
                              u5840 267A                                u5760 244A  
                              u5920 1026                                u5680 2716  
                              u7257 35CE                                u7177 2D7E  
                              u5841 2676                                u7097 24FA  
                              u5761 2446                                u5921 1022  
                              u5681 2712                                u5850 2694  
                              u5770 24A8                                u5930 1058  
                              u5690 2756                                u7267 3622  
                              u7187 2DC8                                u5851 2690  
                              u5771 24A4                                u5931 1054  
                              u5691 2752                                u6707 391E  
                              u5860 26A2                                u5780 24B6  
                              u5940 108A                                u7277 3666  
                              u7197 2F84                                u5861 269E  
                              u5781 24B2                                u5941 1086  
                              u6717 39A8                                u5870 26F0  
                              u5790 2548                                u5950 10E2  
                              u5871 26EC                                u5791 2544  
                              u6807 13AC                                u5951 10DE  
                              u6727 27F6                                u5960 1158  
                              u5880 0EFC                                u6817 13D6  
                              u5961 1154                                u5881 0EF8  
                              u6737 2824                                u5970 11C6  
                              u5890 0F2E                                u6907 369E  
                              u6827 2272                                u5971 11C2  
                              u5891 0F2A                                u6747 28AC  
                              u6667 2A76                                u5980 11F8  
                              u6917 36C8                                u6837 229E  
                              u5981 11F4                                u6757 28DA  
                              u6677 2B16                                u5990 122A  
                              u6927 36EC                                u6847 2312  
                              u5991 1226                                u6767 40E0  
                              u6687 2B48                                u6937 3706  
                              u6857 233E                                u6777 41C2  
                              u6697 2B80                                u6947 3736  
                              u6867 3EA4                                u6787 3BE8  
                              u6957 375A                                u6877 3ED0  
                              u6797 3C0C                                u6967 378C  
                              u6887 3D34                                u6977 37B0  
                              u6897 3DC2                                u6987 37D4  
                              u6997 3AC6                         main@current 0099  
           __end_of_interrupts_init 42DC             __end_of_DCmotors_setPWM 31FA  
                              _main 298C                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0057  
                              _stop 3DFA                                prodh 000FF4  
                              prodl 000FF3                                start 0058  
                  __end_of_ADC_init 43D4                     ___fldiv@new_exp 0065  
                   __end_of_HighISR 4320                        ___param_bank 000000  
            ?_colourclick_readRGBC2 0016              ??_clicker2buttons_init 0009  
                   __end_of___fladd 1934                               ?_main 0001  
                             _ADPCH 000F5F                     __end_of___fldiv 20FA  
                   __end_of___awdiv 3B9A                               STR_10 0E6D  
                             STR_12 0E87                               STR_14 0E9A  
                             STR_16 0E8E                               STR_18 0E78  
                             STR_19 0E41                     __end_of___flmul 1D5E  
                             ?_stop 0022                     ___awdiv@divisor 0011  
                             i1l169 0048                               i2l154 43EC  
                             i2l163 431C                               i2l501 444C  
                             i2l157 416A                               i2l352 439E  
        ?i2_colourclick_writetoaddr 0003             _colourclick_writetoaddr 4340  
                             i2l492 4488                               i2l486 426A  
                             i2l489 4290                               i2l498 447E  
                   ___awdiv@counter 0013                               _TMR0H 000FD4  
                             _TMR0L 000FD3            __end_of_interrupts_clear 43BA  
        __end_of_I2C_2_Master_Start 4462          __end_of_I2C_2_Master_Write 4436  
     __size_of_DCmotors_calibration 02CA            ?_colourclick_calibration 0001  
                   __end_of_forward 3DFA                               _instr 00B3  
              colourclickLEDs_C@tog 0009                   _clicker2LEDs_init 446C  
   __size_of_interrupts_colourclick 004E                     __end_of_reverse 3D6C  
            DCmotors_init@PWMperiod 0009                  ?_clicker2LEDs_init 0001  
                             ttemp5 0058                               ttemp6 005B  
                             ttemp7 005F                               status 000FD8  
                     turnleft@delay 0073                               wtemp8 0058  
             _I2C_2_Master_RepStart 4462                     __initialization 41E6  
               ??_clicker2LEDs_init 0009                        __end_of_main 2C1A  
                      __end_of_stop 3E84  __size_of_colourcards_normaliseRGBC 017C  
     __size_of_colourcards_readRGBC 05D0                              ??_main 0096  
                            ??_stop 0026                       __activetblptr 000001  
      __size_ofi2_I2C_2_Master_Idle 0028   __end_ofi2_colourclick_writetoaddr 43A0  
            ??_colourclick_readRGBC 0016        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 4476        __size_of_reverseinstructions 029A  
                   _colourcard_flag 00DF                              _ADRESH 000F64  
         __size_of_colourclick_init 0038                    ___awdiv@dividend 000F  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            i1l4811 0026                              i1l4813 0036  
                            i1l4815 003C                              i1l4817 0040  
                            i2l4051 4480                              i1l4819 0044  
                            i2l4053 4484                              i2l4061 4448  
                            i2l4055 4476                              i2l4057 447A  
                            i2l4059 4444                              i2l4147 4382  
                            i2l4371 414C                              i2l4363 411E  
                            i2l4373 4156                              i2l4365 4128  
                            i2l4375 4160                              i2l4367 4138  
                            i2l4369 4142                              i2l4803 42FE  
                            i2l4717 43D4                              i2l4805 430E  
                            i2l3943 426A                              i2l4807 4314  
                            i2l3945 427A                              i2l4809 4318  
                  __end_of_adjdelay 368E                    ?_interrupts_init 0001  
                  ?_DCmotors_setPWM 0017                           ??_HighISR 0006  
                            _RX4PPS 000E15      i2colourclick_writetoaddr@value 0003  
                            _TX4REG 000EE4                    __end_of___xxtofl 33AE  
                            _LowISR 0018                        ??_ADC_getval 0009  
                            ___flge 37E4              colourcards_readRGBC@mL 0084  
            colourcards_readRGBC@mR 0086                           ??___fladd 0038  
                            ___wmul 4292                           ??___fldiv 0048  
                         ??___awdiv 0013                           ??___flmul 001F  
 __size_ofi2_interrupts_colourclick 004E                        ?_timer0_init 0001  
         ?i2_interrupts_colourclick 0001              _interrupts_colourclick 40D0  
                  ??_buggyLEDs_init 0009                  i2_interrupts_clear 43D4  
         ??_colourclick_writetoaddr 000C                              clear_0 41EC  
                            clear_1 41F8                    ___awdiv@quotient 0015  
                            isa$std 000001   __end_of_colourcards_normaliseRGBC 352A  
                         ??_forward 0026                 ?i2_interrupts_clear 0001  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptru 000FF8                           ?_ADC_init 0001  
                         ??_reverse 0026                              stop@mL 0022  
                            stop@mR 0024                  __end_of_ADC_getval 4406  
                      ?_USART4_init 0001                          ___flge@ff1 0017  
                        ___flge@ff2 001B                        ___xxtofl@arg 0013  
                      ___xxtofl@exp 0012                        ___xxtofl@val 0009  
                  __end_of_turnleft 3026                          __accesstop 0060  
           __end_of__initialization 4206              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                ??i2_interrupts_clear 0006  
                    __pcstackCOMRAM 0001                  __size_of_clearance 005E  
       __end_of_colourclickLEDs_RGB 3CDE       checkbatterylevel@batterylevel 000C  
                        ??_ADC_init 0009          __size_of_clicker2LEDs_init 000A  
     __size_of_colourclickLEDs_init 000E     __end_of_colourclick_writetoaddr 4360  
                        __pbssBANK0 00B3                          __pbssBANK1 0100  
                        __pnvCOMRAM 004F            DCmotors_calibration@okay 0081  
                 _checkbatterylevel 39E0                       ?_instructions 007D  
           ??_colourclick_readRGBC2 0019       __size_ofi2_I2C_2_Master_Start 000A  
     __size_ofi2_I2C_2_Master_Write 000C                  ?_checkbatterylevel 0001  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
                           ?___flge 0017                             ?___wmul 0009  
               ??_checkbatterylevel 000B                           ?_adjdelay 0001  
                           _INT1PPS 000DF1         ??i2_colourclick_writetoaddr 0004  
                         ?___xxtofl 0009                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                   ?_interrupts_clear 0001  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
             reverseinstructions@mL 0082               reverseinstructions@mR 0084  
                ??_interrupts_clear 000E                    _colourclick_init 41AE  
         __end_of_checkbatterylevel 3AD6              __size_of_DCmotors_init 0050  
                           _HighISR 0008                      ??_instructions 004D  
                 __end_of_clearance 3EE2                      turnright@delay 0073  
                         _ADREFbits 000F58                  _I2C_2_Master_Start 4458  
               i2_I2C_2_Master_Idle 426A                  _I2C_2_Master_Write 442A  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 4476  
      __end_of_DCmotors_calibration 26F2                  __size_of_turnright 0206  
  __size_of_colourclick_calibration 00A6                             __Lparam 0000  
                   __size_of_LowISR 0040                 _reverseinstructions 26F2  
                     _turnleft$3219 0077                     __size_of___flge 0104  
                           ___fladd 1474                             ___fldiv 1D5E  
                           ___awdiv 3AD6             colourcards_readRGBC@abs 0082  
                           ___flmul 1934             colourcards_readRGBC@rel 008A  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                        __psmallconst 0E00  
                           __pcinit 41E6                             __ramtop 0E00  
              __size_of_timer0_init 0020                             __ptext0 298C  
                           __ptext1 4320                             __ptext2 38E8  
                           __ptext3 26F2                             __ptext4 42B8  
                           __ptext5 43A0                             __ptext6 40D0  
                           __ptext7 41AE                             __ptext8 4340  
                           __ptext9 441C       __size_of_clicker2buttons_init 000C  
                         ?_turnleft 006D                          ??_adjdelay 0009  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                           _forward 3D6C                          ??___xxtofl 000D  
              ?i2_I2C_2_Master_Stop 0001                           _T2HLTbits 000FBE  
                           _reverse 3CDE                ?_reverseinstructions 0082  
              ??_I2C_2_Master_Start 000A                ??_I2C_2_Master_Write 000A  
                    __pintcode_body 42FE                end_of_initialization 4206  
      __end_of_colourcards_readRGBC 1474                    ADC_getval@tmpval 0009  
  __end_ofi2_interrupts_colourclick 416C                __size_of_USART4_init 0020  
                           int_func 42FE           i2_colourclick_writetoaddr 4380  
                      adjdelay@mode 000B             ?_interrupts_colourclick 0001  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE      colourclick_calibration@initial 0018  
      colourclick_writetoaddr@value 000B                       _DCmotors_init 4080  
                         _PORTFbits 000F8E                          _returnhome 38E8  
                        ??_turnleft 004C               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002                         ___fladd@grs 003F  
                     ___xxtofl@sign 0011                           _TRISAbits 000F81  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                 __end_of_turnright 2E20               ??_reverseinstructions 0086  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0067  
                       ___fldiv@rem 0060       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 000A  
              colourclick_readB@tmp 0012                colourclick_readC@tmp 0012  
        __size_of_checkbatterylevel 00F6                colourclick_readG@tmp 0012  
                       returnhome@i 008E                         returnhome@j 008F  
                       returnhome@k 0090                colourclick_readR@tmp 0012  
                       ___flmul@grs 0024      __end_of_interrupts_colourclick 411E  
                        main@motorL 00A1                          main@motorR 00AA  
                     _instr_counter 00E1                      __end_of_LowISR 0058  
          __size_of_interrupts_init 0024            __size_of_DCmotors_setPWM 01D4  
                    __end_of___flge 38E8          colourclick_readRGBC@tmpval 0014  
                    ?_DCmotors_init 0001                      __end_of___wmul 42B8  
              __end_of_instructions 2428          ?_colourcards_normaliseRGBC 006D  
               start_initialization 41E6                _DCmotors_calibration 2428  
                  _unknowncard_flag 00DE                     _returnhome_flag 00DD  
           _colourclick_calibration 3B9A         __size_ofi2_interrupts_clear 001A  
                          ??_LowISR 0006            i2_interrupts_colourclick 411E  
                      turnright@deg 0071      __size_of_colourclick_readRGBC2 0156  
     __end_of_colourclick_readRGBC2 37E4            ?_colourclick_writetoaddr 000B  
        colourcards_normaliseRGBC@B 0075          colourcards_normaliseRGBC@C 0077  
        colourcards_normaliseRGBC@G 0073          colourcards_normaliseRGBC@R 0071  
                          ??___flge 001F        __end_of_colourclickLEDs_init 442A  
                          ??___wmul 000D            __end_of_colourclick_init 41E6  
     i2I2C_2_Master_Write@data_byte 0002                _colourcards_readRGBC 0EA4  
                       ?_returnhome 0088        __end_ofi2_I2C_2_Master_Start 448A  
      __end_ofi2_I2C_2_Master_Write 444E                           ___fladd@a 0034  
                         ___fladd@b 0030                           ___fldiv@a 0044  
                         ___fldiv@b 0040                           ___flmul@a 001B  
                         ___flmul@b 0017                         __pbssCOMRAM 0053  
                     __pcstackBANK0 0060                   __size_of_adjdelay 0164  
             ?_DCmotors_calibration 007D             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4                            ?_HighISR 0001  
      __size_of_colourclickLEDs_RGB 009E           __size_of_interrupts_clear 001A  
                         _clearance 3E84                           __pintcode 0008  
                   ??_DCmotors_init 0009                            ?___fladd 0030  
                          ?___fldiv 0040                            ?___awdiv 000F  
                          ?___flmul 0017  __size_ofi2_colourclick_writetoaddr 0020  
             ?_colourcards_readRGBC 0082                         __pintcodelo 0018  
                         adjdelay@i 000C                I2C_2_Master_Read@ack 000B  
                 ??_interrupts_init 000E                   ??_DCmotors_setPWM 0019  
              I2C_2_Master_Read@tmp 000C               _interrupts_lowerbound 0055  
                       __smallconst 0E00                            ?_forward 0022  
                 _I2C_2_Master_Idle 4242                   _I2C_2_Master_Init 4218  
                 _I2C_2_Master_Read 416C                   _I2C_2_Master_Stop 444E  
                 __size_of_turnleft 0206                            _ADC_init 43BA  
                          ?_reverse 0022                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                ?_I2C_2_Master_Stop 0001           ??_colourclick_calibration 0016  
                   instructions@num 0081        __end_of_clicker2buttons_init 4442  
               ??_I2C_2_Master_Idle 0009                 ??_I2C_2_Master_Init 0009  
               ??_I2C_2_Master_Read 000A                      ___wmul@product 000D  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 000A  
                          _LATCbits 000F7B                   _colourclickLEDs_C 42DC  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
               __size_of_returnhome 00F8                            _PIE0bits 000E29  
                ?_colourclickLEDs_C 0001                            i1u503_20 0036  
                          i1u503_21 0032                            i2u502_40 430E  
                          i2u502_41 430A                            _PIR0bits 000E33  
                          _PIR4bits 000E37                          ?_clearance 0028  
                          i2u393_40 427A                            i2u393_41 4276  
                          i2u394_40 4290                            i2u394_41 428C  
                          i2u728_47 412E                       ??_timer0_init 0009  
                          _SSP2CON2 000EDA               __size_of_instructions 032E  
            DCmotors_setPWM@PWMduty 0020                            _SSP2STAT 000ED8  
               ??_colourclickLEDs_C 0009                   _colourclick_readB 4030  
                 _colourclick_readC 3FE0                   _colourclick_readG 3F90  
                 _colourclick_readR 3F40                          _ADCON0bits 000F60  
         __end_of_I2C_2_Master_Idle 426A           __end_of_I2C_2_Master_Init 4242  
         __end_of_I2C_2_Master_Read 41AE                   ___wmul@multiplier 0009  
                ?_colourclick_readB 000D                  ?_colourclick_readC 000D  
                ?_colourclick_readG 000D                  ?_colourclick_readR 000D  
         __end_of_I2C_2_Master_Stop 4458               _interrupts_upperbound 0053  
       I2C_2_Master_Write@data_byte 000A              ??_DCmotors_calibration 004D  
                         main@start 0098                 ??_colourclick_readB 000F  
               ??_colourclick_readC 000F                 ??_colourclick_readG 000F  
               ??_colourclick_readR 000F                       ??_USART4_init 0009  
       __size_of_I2C_2_Master_Start 000A                _colourclickLEDs_init 441C  
       __size_of_I2C_2_Master_Write 000C                           _turnright 2C1A  
         __end_of_colourclickLEDs_C 42FE                         turnleft@deg 0071  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 446C  
                  __size_of_HighISR 4318                        _instructions 20FA  
              i2_I2C_2_Master_Start 4480                i2_I2C_2_Master_Write 4442  
                          __Hrparam 0000                         turnright@mL 006D  
                       turnright@mR 006F                          _ADC_getval 43EE  
      __end_of_colourclick_readRGBC 3F40                            __Lrparam 0000  
                      __Lsmallconst 0E00           __end_of_colourclick_readB 4080  
         __end_of_colourclick_readC 4030           __end_of_colourclick_readG 3FE0  
         __end_of_colourclick_readR 3F90                           forward@mL 0022  
                         forward@mR 0024                         _dur_counter 00E0  
            ??_colourcards_readRGBC 0088         __end_ofi2_I2C_2_Master_Idle 4292  
                  __size_of___fladd 04C0         __end_ofi2_I2C_2_Master_Stop 4480  
                  __size_of___fldiv 039C                    __size_of___awdiv 00C4  
                  __size_of___flmul 042A     __end_of_colourclick_calibration 3C40  
       __end_of_reverseinstructions 298C                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                            _adjdelay 352A  
                        _ANSELFbits 000EB4                 __end_of_timer0_init 4340  
       ??_colourcards_normaliseRGBC 004C                            ___xxtofl 31FA  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
            DCmotors_calibration@mL 007D              DCmotors_calibration@mR 007F  
                    _buggyLEDs_init 4406                    __size_of_forward 008E  
                          __ptext10 4218                            __ptext11 3B9A  
                          __ptext20 3F90                            __ptext12 0EA4  
                          __ptext21 3FE0                            __ptext13 20FA  
                          __ptext30 33AE                            __ptext22 4030  
                          __ptext14 3E84                            __ptext31 39E0  
                          __ptext23 442A                            __ptext15 3CDE  
                          __ptext40 2C1A                            __ptext32 3C40  
                          __ptext24 444E                            __ptext16 3D6C  
                          __ptext41 2E20                            __ptext33 43EE  
                          __ptext25 4458                            __ptext17 368E  
                          __ptext50 3AD6                            __ptext42 31FA  
                          __ptext34 4360                            __ptext26 4462  
                          __ptext18 3EE2                            __ptext51 352A  
                          __ptext43 1934                            __ptext35 4080  
                          __ptext27 416C                            __ptext19 3F40  
                          __ptext60 4480                            __ptext52 43BA  
                          __ptext44 37E4                            __ptext36 4436  
                          __ptext28 4242                            __ptext61 426A  
                          __ptext45 1D5E                            __ptext37 446C  
                          __ptext29 42DC                            __ptext46 1474  
                          __ptext38 4406                            __ptext55 43D4  
                          __ptext47 3DFA                            __ptext39 2428  
                          __ptext56 411E                            __ptext48 3026  
                          __ptext57 4380                            __ptext49 4292  
                          __ptext58 4442                            __ptext59 4476  
                  __size_of_reverse 008E               ?_colourclickLEDs_init 0001  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
        ??i2_interrupts_colourclick 0005                          ?_turnright 006D  
                     __size_of_main 028E                       __size_of_stop 008A  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
                    instructions@mL 007D                      instructions@mR 007F  
               __end_of_USART4_init 4380                    _interrupts_clear 43A0  
                         reverse@mL 0022                           reverse@mR 0024  
                       ??_clearance 002C                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0057  
                 ?_colourclick_init 0001                 _colourclickLEDs_RGB 3C40  
                ??_colourclick_init 000D                        ??_returnhome 008C  
        __size_of_I2C_2_Master_Idle 0028          __size_of_I2C_2_Master_Init 002A  
        __size_of_I2C_2_Master_Read 0042                    DCmotors_setPWM@m 0017  
              _clicker2buttons_init 4436          __size_of_I2C_2_Master_Stop 000A  
                          _turnleft 2E20                          turnleft@mL 006D  
                        turnleft@mR 006F              __end_of_buggyLEDs_init 441C  
                        _INTCONbits 000FF2    __size_of_colourclick_writetoaddr 0020  
                       clearance@mL 0028                         clearance@mR 002A  
                        turnright@i 007B      colourclick_writetoaddr@address 000C  
  i2colourclick_writetoaddr@address 0004                      _turnright$3220 0077  
                       _PWM6CONbits 000FA4                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
        __size_of_colourclickLEDs_C 0022                ?_colourclickLEDs_RGB 0001  
        __end_ofi2_interrupts_clear 43EE                  _turnright_calangle 004F  
         _colourcards_normaliseRGBC 33AE                   _turnleft_calangle 0051  
                __end_of_returnhome 39E0                     _interrupts_init 42B8  
                   _DCmotors_setPWM 3026                         ?_ADC_getval 0001  
        __size_of_colourclick_readB 0050          __size_of_colourclick_readC 0050  
        __size_of_colourclick_readG 0050          __size_of_colourclick_readR 0050  
             _colourclick_readRGBC2 368E                         _timer0_init 4320  
                         turnleft@i 007B               ?_clicker2buttons_init 0001  
         colourclick_readRGBC2@mode 0018                     ?_buggyLEDs_init 0001  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
            ??_colourclickLEDs_init 000A                _colourclick_readRGBC 3EE2  
                     ___fladd@signs 003C                         _USART4_init 4360  
          ??_interrupts_colourclick 000D                          _TX4STAbits 000EE8  
                       ??_turnright 004C               ??_colourclickLEDs_RGB 0009  
            ??i2_I2C_2_Master_Start 0002                        ___fladd@aexp 003D  
            ??i2_I2C_2_Master_Write 0002                        ___fladd@bexp 003E  
      colourcards_normaliseRGBC@abs 006D  
