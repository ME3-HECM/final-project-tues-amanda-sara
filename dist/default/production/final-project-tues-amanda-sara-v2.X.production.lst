

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 13:53:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83  0000                     
    84                           ; Version 2.20
    85                           ; Generated 05/05/2020 GMT
    86                           ; 
    87                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F67K40 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataBANK1
   120  00550E                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for stoa@F1163
   124  00550E  28                 	db	40
   125  00550F  6E                 	db	110
   126  005510  75                 	db	117
   127  005511  6C                 	db	108
   128  005512  6C                 	db	108
   129  005513  29                 	db	41
   130  005514  00                 	db	0
   131                           
   132                           	psect	nvBANK0
   133  0000FB                     __pnvBANK0:
   134                           	callstack 0
   135  0000FB                     _interrupts_upper:
   136                           	callstack 0
   137  0000FB                     	ds	2
   138  0000FD                     _DCmotors_upper:
   139                           	callstack 0
   140  0000FD                     	ds	1
   141  0000FE                     _DCmotors_lower:
   142                           	callstack 0
   143  0000FE                     	ds	1
   144  0000                     _CM1CON1bits	set	3793
   145  0000                     _CM1CON0bits	set	3792
   146  0000                     _CM1PCHbits	set	3795
   147  0000                     _CM1NCHbits	set	3794
   148  0000                     _DAC1CON1bits	set	3783
   149  0000                     _DAC1CON0bits	set	3782
   150  0000                     _RC7PPS	set	3689
   151  0000                     _RE2PPS	set	3700
   152  0000                     _PIE4bits	set	3629
   153  0000                     _TX4REG	set	3812
   154  0000                     _RC4REG	set	3811
   155  0000                     _PIR4bits	set	3639
   156  0000                     _RC4STAbits	set	3815
   157  0000                     _SP4BRGH	set	3814
   158  0000                     _SP4BRGL	set	3813
   159  0000                     _TX4STAbits	set	3816
   160  0000                     _BAUD4CONbits	set	3817
   161  0000                     _RX4PPS	set	3605
   162  0000                     _RC0PPS	set	3682
   163  0000                     _SSP2BUF	set	3797
   164  0000                     _SSP2CON2bits	set	3802
   165  0000                     _SSP2CON2	set	3802
   166  0000                     _SSP2STAT	set	3800
   167  0000                     _RD6PPS	set	3696
   168  0000                     _RD5PPS	set	3695
   169  0000                     _SSP2CLKPPS	set	3612
   170  0000                     _SSP2DATPPS	set	3613
   171  0000                     _ANSELDbits	set	3751
   172  0000                     _SSP2ADD	set	3798
   173  0000                     _SSP2CON1bits	set	3801
   174  0000                     _ANSELFbits	set	3764
   175  0000                     _PIR0bits	set	3635
   176  0000                     _PIE0bits	set	3625
   177  0000                     _ADPCH	set	3935
   178  0000                     _ADREFbits	set	3928
   179  0000                     _PWM7CONbits	set	4001
   180  0000                     _PWM6CONbits	set	4004
   181  0000                     _LATCbits	set	3963
   182  0000                     _LATEbits	set	3965
   183  0000                     _TRISEbits	set	3973
   184  0000                     _T2PR	set	4028
   185  0000                     _T2CLKCONbits	set	4031
   186  0000                     _T2HLTbits	set	4030
   187  0000                     _T2CONbits	set	4029
   188  0000                     _TRISCbits	set	3971
   189  0000                     _TRISAbits	set	3969
   190  0000                     _TRISGbits	set	3975
   191  0000                     _TRISHbits	set	3976
   192  0000                     _TRISDbits	set	3972
   193  0000                     _ADRESH	set	3940
   194  0000                     _ADCON0bits	set	3936
   195  0000                     _TRISFbits	set	3974
   196  0000                     _LATFbits	set	3966
   197  0000                     _LATAbits	set	3961
   198  0000                     _LATGbits	set	3967
   199  0000                     _INTCONbits	set	4082
   200  0000                     _LATHbits	set	3968
   201  0000                     _LATDbits	set	3964
   202  0000                     _PORTFbits	set	3982
   203  0000                     _LATG	set	3967
   204  0000                     _PWM7DCH	set	4000
   205  0000                     _LATE	set	3965
   206  0000                     _PWM6DCH	set	4003
   207                           
   208                           	psect	smallconst
   209  000E00                     __psmallconst:
   210                           	callstack 0
   211  000E00  00                 	db	0
   212  000E01                     STR_1:
   213                           
   214                           ; BSR set to: 15
   215  000E01  52                 	db	82	;'R'
   216  000E02  47                 	db	71	;'G'
   217  000E03  42                 	db	66	;'B'
   218  000E04  43                 	db	67	;'C'
   219  000E05  3A                 	db	58	;':'
   220  000E06  20                 	db	32
   221  000E07  25                 	db	37
   222  000E08  69                 	db	105	;'i'
   223  000E09  20                 	db	32
   224  000E0A  25                 	db	37
   225  000E0B  69                 	db	105	;'i'
   226  000E0C  20                 	db	32
   227  000E0D  25                 	db	37
   228  000E0E  69                 	db	105	;'i'
   229  000E0F  20                 	db	32
   230  000E10  25                 	db	37
   231  000E11  69                 	db	105	;'i'
   232  000E12  20                 	db	32
   233  000E13  20                 	db	32
   234  000E14  20                 	db	32
   235  000E15  20                 	db	32
   236  000E16  20                 	db	32
   237  000E17  52                 	db	82	;'R'
   238  000E18  47                 	db	71	;'G'
   239  000E19  42                 	db	66	;'B'
   240  000E1A  43                 	db	67	;'C'
   241  000E1B  5F                 	db	95	;'_'
   242  000E1C  72                 	db	114	;'r'
   243  000E1D  65                 	db	101	;'e'
   244  000E1E  6C                 	db	108	;'l'
   245  000E1F  3A                 	db	58	;':'
   246  000E20  20                 	db	32
   247  000E21  25                 	db	37
   248  000E22  2E                 	db	46
   249  000E23  33                 	db	51	;'3'
   250  000E24  66                 	db	102	;'f'
   251  000E25  20                 	db	32
   252  000E26  25                 	db	37
   253  000E27  2E                 	db	46
   254  000E28  33                 	db	51	;'3'
   255  000E29  66                 	db	102	;'f'
   256  000E2A  20                 	db	32
   257  000E2B  25                 	db	37
   258  000E2C  2E                 	db	46
   259  000E2D  33                 	db	51	;'3'
   260  000E2E  66                 	db	102	;'f'
   261  000E2F  20                 	db	32
   262  000E30  20                 	db	32
   263  000E31  20                 	db	32
   264  000E32  20                 	db	32
   265  000E33  20                 	db	32
   266  000E34  43                 	db	67	;'C'
   267  000E35  6F                 	db	111	;'o'
   268  000E36  6C                 	db	108	;'l'
   269  000E37  6F                 	db	111	;'o'
   270  000E38  75                 	db	117	;'u'
   271  000E39  72                 	db	114	;'r'
   272  000E3A  3A                 	db	58	;':'
   273  000E3B  20                 	db	32
   274  000E3C  25                 	db	37
   275  000E3D  73                 	db	115	;'s'
   276  000E3E  0A                 	db	10
   277  000E3F  0D                 	db	13
   278  000E40  00                 	db	0
   279  000E41                     STR_14:
   280                           
   281                           ; BSR set to: 15
   282  000E41  6C                 	db	108	;'l'
   283  000E42  69                 	db	105	;'i'
   284  000E43  67                 	db	103	;'g'
   285  000E44  68                 	db	104	;'h'
   286  000E45  74                 	db	116	;'t'
   287  000E46  20                 	db	32
   288  000E47  62                 	db	98	;'b'
   289  000E48  6C                 	db	108	;'l'
   290  000E49  75                 	db	117	;'u'
   291  000E4A  65                 	db	101	;'e'
   292  000E4B  00                 	db	0
   293  000E4C                     STR_18:
   294                           
   295                           ; BSR set to: 15
   296  000E4C  75                 	db	117	;'u'
   297  000E4D  6E                 	db	110	;'n'
   298  000E4E  6B                 	db	107	;'k'
   299  000E4F  6E                 	db	110	;'n'
   300  000E50  6F                 	db	111	;'o'
   301  000E51  77                 	db	119	;'w'
   302  000E52  6E                 	db	110	;'n'
   303  000E53  00                 	db	0
   304  000E54                     STR_12:
   305                           
   306                           ; BSR set to: 15
   307  000E54  6F                 	db	111	;'o'
   308  000E55  72                 	db	114	;'r'
   309  000E56  61                 	db	97	;'a'
   310  000E57  6E                 	db	110	;'n'
   311  000E58  67                 	db	103	;'g'
   312  000E59  65                 	db	101	;'e'
   313  000E5A  00                 	db	0
   314  000E5B                     STR_8:
   315                           
   316                           ; BSR set to: 15
   317  000E5B  79                 	db	121	;'y'
   318  000E5C  65                 	db	101	;'e'
   319  000E5D  6C                 	db	108	;'l'
   320  000E5E  6C                 	db	108	;'l'
   321  000E5F  6F                 	db	111	;'o'
   322  000E60  77                 	db	119	;'w'
   323  000E61  00                 	db	0
   324  000E62                     STR_16:
   325                           
   326                           ; BSR set to: 15
   327  000E62  77                 	db	119	;'w'
   328  000E63  68                 	db	104	;'h'
   329  000E64  69                 	db	105	;'i'
   330  000E65  74                 	db	116	;'t'
   331  000E66  65                 	db	101	;'e'
   332  000E67  00                 	db	0
   333  000E68                     STR_4:
   334                           
   335                           ; BSR set to: 15
   336  000E68  67                 	db	103	;'g'
   337  000E69  72                 	db	114	;'r'
   338  000E6A  65                 	db	101	;'e'
   339  000E6B  65                 	db	101	;'e'
   340  000E6C  6E                 	db	110	;'n'
   341  000E6D  00                 	db	0
   342  000E6E                     STR_10:
   343                           
   344                           ; BSR set to: 15
   345  000E6E  70                 	db	112	;'p'
   346  000E6F  69                 	db	105	;'i'
   347  000E70  6E                 	db	110	;'n'
   348  000E71  6B                 	db	107	;'k'
   349  000E72  00                 	db	0
   350  000E73                     STR_19:
   351                           
   352                           ; BSR set to: 15
   353  000E73  49                 	db	73	;'I'
   354  000E74  4E                 	db	78	;'N'
   355  000E75  46                 	db	70	;'F'
   356  000E76  00                 	db	0
   357  000E77                     STR_23:
   358                           
   359                           ; BSR set to: 15
   360  000E77  4E                 	db	78	;'N'
   361  000E78  41                 	db	65	;'A'
   362  000E79  4E                 	db	78	;'N'
   363  000E7A  00                 	db	0
   364  000E7B                     STR_20:
   365                           
   366                           ; BSR set to: 15
   367  000E7B  69                 	db	105	;'i'
   368  000E7C  6E                 	db	110	;'n'
   369  000E7D  66                 	db	102	;'f'
   370  000E7E  00                 	db	0
   371  000E7F                     STR_24:
   372                           
   373                           ; BSR set to: 15
   374  000E7F  6E                 	db	110	;'n'
   375  000E80  61                 	db	97	;'a'
   376  000E81  6E                 	db	110	;'n'
   377  000E82  00                 	db	0
   378  000E83                     STR_2:
   379                           
   380                           ; BSR set to: 15
   381  000E83  72                 	db	114	;'r'
   382  000E84  65                 	db	101	;'e'
   383  000E85  64                 	db	100	;'d'
   384  000E86  00                 	db	0
   385  000E87                     STR_27:
   386                           
   387                           ; BSR set to: 15
   388  000E87  6C                 	db	108	;'l'
   389  000E88  66                 	db	102	;'f'
   390  000E89  00                 	db	0
   391  000E8A  00                 	db	0	; dummy byte at the end
   392  0000                     
   393                           ; #config settings
   394                           
   395                           	psect	cinit
   396  005100                     __pcinit:
   397                           	callstack 0
   398  005100                     start_initialization:
   399                           	callstack 0
   400  005100                     __initialization:
   401                           	callstack 0
   402                           
   403                           ; Initialize objects allocated to BANK1 (7 bytes)
   404                           ; load TBLPTR registers with __pidataBANK1
   405  005100  0E0E               	movlw	low __pidataBANK1
   406  005102  6EF6               	movwf	tblptrl,c
   407  005104  0E55               	movlw	high __pidataBANK1
   408  005106  6EF7               	movwf	tblptrh,c
   409  005108  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   410  00510A  6EF8               	movwf	tblptru,c
   411  00510C  EE01  F0E8         	lfsr	0,__pdataBANK1
   412  005110  EE10 F007          	lfsr	1,7
   413  005114                     copy_data0:
   414  005114  0009               	tblrd		*+
   415  005116  CFF5 FFEE          	movff	tablat,postinc0
   416  00511A  50E5               	movf	postdec1,w,c
   417  00511C  50E1               	movf	fsr1l,w,c
   418  00511E  E1FA               	bnz	copy_data0
   419                           
   420                           ; Clear objects allocated to BANK2 (60 bytes)
   421  005120  EE02  F000         	lfsr	0,__pbssBANK2
   422  005124  0E3C               	movlw	60
   423  005126                     clear_0:
   424  005126  6AEE               	clrf	postinc0,c
   425  005128  06E8               	decf	wreg,f,c
   426  00512A  E1FD               	bnz	clear_0
   427                           
   428                           ; Clear objects allocated to BANK1 (112 bytes)
   429  00512C  EE01  F078         	lfsr	0,__pbssBANK1
   430  005130  0E70               	movlw	112
   431  005132                     clear_1:
   432  005132  6AEE               	clrf	postinc0,c
   433  005134  06E8               	decf	wreg,f,c
   434  005136  E1FD               	bnz	clear_1
   435                           
   436                           ; Clear objects allocated to BANK0 (17 bytes)
   437  005138  EE00  F0EA         	lfsr	0,__pbssBANK0
   438  00513C  0E11               	movlw	17
   439  00513E                     clear_2:
   440  00513E  6AEE               	clrf	postinc0,c
   441  005140  06E8               	decf	wreg,f,c
   442  005142  E1FD               	bnz	clear_2
   443  005144                     end_of_initialization:
   444                           	callstack 0
   445  005144                     __end_of__initialization:
   446                           	callstack 0
   447  005144  0100               	movlb	0
   448  005146  EF3E  F024         	goto	_main	;jump to C main() function
   449                           
   450                           	psect	bssBANK0
   451  0000EA                     __pbssBANK0:
   452                           	callstack 0
   453  0000EA                     _nout:
   454                           	callstack 0
   455  0000EA                     	ds	2
   456  0000EC                     _width:
   457                           	callstack 0
   458  0000EC                     	ds	2
   459  0000EE                     _prec:
   460                           	callstack 0
   461  0000EE                     	ds	2
   462  0000F0                     _flags:
   463                           	callstack 0
   464  0000F0                     	ds	2
   465  0000F2                     _interrupts_lower:
   466                           	callstack 0
   467  0000F2                     	ds	2
   468  0000F4                     _returnhome_flag:
   469                           	callstack 0
   470  0000F4                     	ds	1
   471  0000F5                     _unknowncard_flag:
   472                           	callstack 0
   473  0000F5                     	ds	1
   474  0000F6                     _colourcard_flag:
   475                           	callstack 0
   476  0000F6                     	ds	1
   477  0000F7                     _TxBufReadCnt:
   478                           	callstack 0
   479  0000F7                     	ds	1
   480  0000F8                     _TxBufWriteCnt:
   481                           	callstack 0
   482  0000F8                     	ds	1
   483  0000F9                     _RxBufReadCnt:
   484                           	callstack 0
   485  0000F9                     	ds	1
   486  0000FA                     _RxBufWriteCnt:
   487                           	callstack 0
   488  0000FA                     	ds	1
   489                           
   490                           	psect	bssBANK1
   491  000178                     __pbssBANK1:
   492                           	callstack 0
   493  000178                     _EUSART4RXbuf:
   494                           	callstack 0
   495  000178                     	ds	20
   496  00018C                     floorf@F527:
   497                           	callstack 0
   498  00018C                     	ds	4
   499  000190                     ___fpclassifyf@F465:
   500                           	callstack 0
   501  000190                     	ds	4
   502  000194                     _clear_upper:
   503                           	callstack 0
   504  000194                     	ds	2
   505  000196                     _clear_lower:
   506                           	callstack 0
   507  000196                     	ds	2
   508  000198                     _dbuf:
   509                           	callstack 0
   510  000198                     	ds	80
   511                           
   512                           	psect	dataBANK1
   513  0001E8                     __pdataBANK1:
   514                           	callstack 0
   515  0001E8                     stoa@F1163:
   516                           	callstack 0
   517  0001E8                     	ds	7
   518                           
   519                           	psect	bssBANK2
   520  000200                     __pbssBANK2:
   521                           	callstack 0
   522  000200                     _EUSART4TXbuf:
   523                           	callstack 0
   524  000200                     	ds	60
   525                           
   526                           	psect	cstackBANK1
   527  000100                     __pcstackBANK1:
   528                           	callstack 0
   529  000100                     colourcards_testing@buf1:
   530                           	callstack 0
   531                           
   532                           ; 100 bytes @ 0x0
   533  000100                     	ds	100
   534  000164                     colourcards_testing@R:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x64
   538  000164                     	ds	2
   539  000166                     colourcards_testing@G:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x66
   543  000166                     	ds	2
   544  000168                     colourcards_testing@B:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x68
   548  000168                     	ds	2
   549  00016A                     colourcards_testing@C:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x6A
   553  00016A                     	ds	2
   554  00016C                     colourcards_testing@R_rel:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x6C
   558  00016C                     	ds	4
   559  000170                     colourcards_testing@G_rel:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x70
   563  000170                     	ds	4
   564  000174                     colourcards_testing@B_rel:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x74
   568  000174                     	ds	4
   569                           
   570                           	psect	cstackBANK0
   571  000060                     __pcstackBANK0:
   572                           	callstack 0
   573  000060                     _efgtoa$2961:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x0
   577  000060                     	ds	2
   578  000062                     _efgtoa$2962:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x2
   582  000062                     	ds	2
   583  000064                     _efgtoa$2966:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x4
   587  000064                     	ds	2
   588  000066                     _efgtoa$2970:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x6
   592  000066                     	ds	2
   593  000068                     _efgtoa$2971:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x8
   597  000068                     	ds	2
   598  00006A                     _efgtoa$2972:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0xA
   602  00006A                     	ds	2
   603  00006C                     efgtoa@t:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0xC
   607  00006C                     	ds	2
   608  00006E                     efgtoa@pp:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0xE
   612  00006E                     	ds	2
   613  000070                     efgtoa@ne:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x10
   617  000070                     	ds	2
   618  000072                     efgtoa@m:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x12
   622  000072                     	ds	2
   623  000074                     efgtoa@ou:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x14
   627  000074                     	ds	4
   628  000078                     efgtoa@d:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x18
   632  000078                     	ds	2
   633  00007A                     efgtoa@sign:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x1A
   637  00007A                     	ds	2
   638  00007C                     efgtoa@p:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x1C
   642  00007C                     	ds	2
   643  00007E                     efgtoa@w:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x1E
   647  00007E                     	ds	2
   648  000080                     efgtoa@nmode:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x20
   652  000080                     	ds	1
   653  000081                     efgtoa@mode:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x21
   657  000081                     	ds	1
   658  000082                     efgtoa@h:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x22
   662  000082                     	ds	4
   663  000086                     efgtoa@l:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x26
   667  000086                     	ds	4
   668  00008A                     efgtoa@i:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x2A
   672  00008A                     	ds	2
   673  00008C                     efgtoa@g:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x2C
   677  00008C                     	ds	4
   678  000090                     efgtoa@e:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x30
   682  000090                     	ds	2
   683  000092                     efgtoa@n:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x32
   687  000092                     	ds	2
   688  000094                     efgtoa@u:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x34
   692  000094                     	ds	4
   693  000098                     vfpfcnvrt@ll:
   694                           	callstack 0
   695                           
   696                           ; 8 bytes @ 0x38
   697  000098                     	ds	8
   698  0000A0                     vfpfcnvrt@cp:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x40
   702  0000A0                     	ds	2
   703  0000A2                     _vfpfcnvrt$2997:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x42
   707  0000A2                     	ds	2
   708  0000A4                     _vfpfcnvrt$3002:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x44
   712  0000A4                     	ds	2
   713  0000A6                     vfpfcnvrt@f:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x46
   717  0000A6                     	ds	4
   718  0000AA                     vfpfcnvrt@ct:
   719                           	callstack 0
   720                           
   721                           ; 3 bytes @ 0x4A
   722  0000AA                     	ds	3
   723  0000AD                     vfpfcnvrt@c:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x4D
   727  0000AD                     	ds	1
   728  0000AE                     ?_sprintf:
   729                           	callstack 0
   730  0000AE                     sprintf@s:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x4E
   734  0000AE                     	ds	2
   735  0000B0                     sprintf@fmt:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x50
   739  0000B0                     	ds	24
   740  0000C8                     sprintf@ap:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x68
   744  0000C8                     	ds	2
   745  0000CA                     sprintf@f:
   746                           	callstack 0
   747                           
   748                           ; 6 bytes @ 0x6A
   749  0000CA                     	ds	6
   750  0000D0                     main@current:
   751                           	callstack 0
   752                           
   753                           ; 8 bytes @ 0x70
   754  0000D0                     	ds	8
   755  0000D8                     main@motorL:
   756                           	callstack 0
   757                           
   758                           ; 9 bytes @ 0x78
   759  0000D8                     	ds	9
   760  0000E1                     main@motorR:
   761                           	callstack 0
   762                           
   763                           ; 9 bytes @ 0x81
   764  0000E1                     	ds	9
   765                           
   766                           	psect	cstackCOMRAM
   767  000001                     __pcstackCOMRAM:
   768                           	callstack 0
   769  000001                     ??_I2C_2_Master_Idle:
   770  000001                     ?_strlen:
   771                           	callstack 0
   772  000001                     ?___fpclassifyf:
   773                           	callstack 0
   774  000001                     ?_isupper:
   775                           	callstack 0
   776  000001                     ?_isdigit:
   777                           	callstack 0
   778  000001                     ?_strncmp:
   779                           	callstack 0
   780  000001                     ?_isspace:
   781                           	callstack 0
   782  000001                     ?___wmul:
   783                           	callstack 0
   784  000001                     ?___awdiv:
   785                           	callstack 0
   786  000001                     ?___awmod:
   787                           	callstack 0
   788  000001                     ?___fladd:
   789                           	callstack 0
   790  000001                     ?___flmul:
   791                           	callstack 0
   792  000001                     ?___flneg:
   793                           	callstack 0
   794  000001                     ?___fltol:
   795                           	callstack 0
   796  000001                     ?___xxtofl:
   797                           	callstack 0
   798  000001                     ?___aodiv:
   799                           	callstack 0
   800  000001                     ?___aomod:
   801                           	callstack 0
   802  000001                     ADC_getval@tmpval:
   803                           	callstack 0
   804  000001                     colourclickLEDs_C@tog:
   805                           	callstack 0
   806  000001                     sendCharSerial4@charToSend:
   807                           	callstack 0
   808  000001                     DCmotors_init@PWMperiod:
   809                           	callstack 0
   810  000001                     ___wmul@multiplier:
   811                           	callstack 0
   812  000001                     ___awdiv@dividend:
   813                           	callstack 0
   814  000001                     ___awmod@dividend:
   815                           	callstack 0
   816  000001                     isdigit@c:
   817                           	callstack 0
   818  000001                     isspace@c:
   819                           	callstack 0
   820  000001                     isupper@c:
   821                           	callstack 0
   822  000001                     fputc@c:
   823                           	callstack 0
   824  000001                     strcpy@dest:
   825                           	callstack 0
   826  000001                     strlen@s:
   827                           	callstack 0
   828  000001                     strncmp@_l:
   829                           	callstack 0
   830  000001                     ___fleq@ff1:
   831                           	callstack 0
   832  000001                     ___flneg@f1:
   833                           	callstack 0
   834  000001                     ___fltol@f1:
   835                           	callstack 0
   836  000001                     ___fladd@b:
   837                           	callstack 0
   838  000001                     ___flmul@b:
   839                           	callstack 0
   840  000001                     ___xxtofl@val:
   841                           	callstack 0
   842  000001                     ___fpclassifyf@x:
   843                           	callstack 0
   844  000001                     ___aodiv@dividend:
   845                           	callstack 0
   846  000001                     ___aomod@dividend:
   847                           	callstack 0
   848                           
   849                           ; 8 bytes @ 0x0
   850  000001                     	ds	1
   851  000002                     ??_I2C_2_Master_Read:
   852  000002                     I2C_2_Master_Write@data_byte:
   853                           	callstack 0
   854  000002                     checkbatterylevel@batterylevel:
   855                           	callstack 0
   856  000002                     sendStringSerial4@string:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x1
   860  000002                     	ds	1
   861  000003                     ??_isupper:
   862  000003                     ??_isdigit:
   863  000003                     ??_isspace:
   864  000003                     colourclick_writetoaddr@value:
   865                           	callstack 0
   866  000003                     I2C_2_Master_Read@ack:
   867                           	callstack 0
   868  000003                     ___wmul@multiplicand:
   869                           	callstack 0
   870  000003                     ___awdiv@divisor:
   871                           	callstack 0
   872  000003                     ___awmod@divisor:
   873                           	callstack 0
   874  000003                     fputc@fp:
   875                           	callstack 0
   876  000003                     strcpy@src:
   877                           	callstack 0
   878  000003                     strlen@a:
   879                           	callstack 0
   880  000003                     strncmp@_r:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x2
   884  000003                     	ds	1
   885  000004                     colourclick_writetoaddr@address:
   886                           	callstack 0
   887  000004                     I2C_2_Master_Read@tmp:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x3
   891  000004                     	ds	1
   892  000005                     ??_colourclick_init:
   893  000005                     ??_fputc:
   894  000005                     ??___fpclassifyf:
   895  000005                     ??_strcpy:
   896  000005                     ??___fltol:
   897  000005                     ??___xxtofl:
   898  000005                     ?_colourclick_readR:
   899                           	callstack 0
   900  000005                     ?_colourclick_readG:
   901                           	callstack 0
   902  000005                     ?_colourclick_readB:
   903                           	callstack 0
   904  000005                     ?_colourclick_readC:
   905                           	callstack 0
   906  000005                     ___awdiv@counter:
   907                           	callstack 0
   908  000005                     ___awmod@counter:
   909                           	callstack 0
   910  000005                     ___wmul@product:
   911                           	callstack 0
   912  000005                     strncmp@n:
   913                           	callstack 0
   914  000005                     ___fleq@ff2:
   915                           	callstack 0
   916  000005                     ___fladd@a:
   917                           	callstack 0
   918  000005                     ___flmul@a:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x4
   922  000005                     	ds	1
   923  000006                     ___awdiv@sign:
   924                           	callstack 0
   925  000006                     ___awmod@sign:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x5
   929  000006                     	ds	1
   930  000007                     ??_strncmp:
   931  000007                     ??_colourclick_readR:
   932  000007                     ??_colourclick_readG:
   933  000007                     ??_colourclick_readB:
   934  000007                     ??_colourclick_readC:
   935  000007                     ?_tolower:
   936                           	callstack 0
   937  000007                     _isspace$3070:
   938                           	callstack 0
   939  000007                     ___awdiv@quotient:
   940                           	callstack 0
   941  000007                     strcpy@s:
   942                           	callstack 0
   943  000007                     tolower@c:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x6
   947  000007                     	ds	1
   948  000008                     ?_atoi:
   949                           	callstack 0
   950  000008                     atoi@s:
   951                           	callstack 0
   952  000008                     strncmp@l:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x7
   956  000008                     	ds	1
   957  000009                     ??___fladd:
   958  000009                     ??___flmul:
   959  000009                     ??_tolower:
   960  000009                     ??___fleq:
   961  000009                     ___fltol@sign1:
   962                           	callstack 0
   963  000009                     ___xxtofl@sign:
   964                           	callstack 0
   965  000009                     ___fpclassifyf@e:
   966                           	callstack 0
   967  000009                     strcpy@d:
   968                           	callstack 0
   969  000009                     ___aodiv@divisor:
   970                           	callstack 0
   971  000009                     ___aomod@divisor:
   972                           	callstack 0
   973                           
   974                           ; 8 bytes @ 0x8
   975  000009                     	ds	1
   976  00000A                     ??_atoi:
   977  00000A                     ?_stoa:
   978                           	callstack 0
   979  00000A                     ___fltol@exp1:
   980                           	callstack 0
   981  00000A                     ___xxtofl@exp:
   982                           	callstack 0
   983  00000A                     colourclick_readR@tmp:
   984                           	callstack 0
   985  00000A                     colourclick_readG@tmp:
   986                           	callstack 0
   987  00000A                     colourclick_readB@tmp:
   988                           	callstack 0
   989  00000A                     colourclick_readC@tmp:
   990                           	callstack 0
   991  00000A                     stoa@fp:
   992                           	callstack 0
   993  00000A                     fputs@s:
   994                           	callstack 0
   995  00000A                     strncmp@r:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x9
   999  00000A                     	ds	1
  1000  00000B                     ___xxtofl@arg:
  1001                           	callstack 0
  1002  00000B                     ___fpclassifyf@u:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0xA
  1006  00000B                     	ds	1
  1007  00000C                     colourclick_readRGBC@tmpval:
  1008                           	callstack 0
  1009  00000C                     stoa@s:
  1010                           	callstack 0
  1011  00000C                     fputs@fp:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0xB
  1015  00000C                     	ds	1
  1016  00000D                     ___fladd@signs:
  1017                           	callstack 0
  1018  00000D                     ___flmul@sign:
  1019                           	callstack 0
  1020  00000D                     _tolower$3133:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0xC
  1024  00000D                     	ds	1
  1025  00000E                     ??_stoa:
  1026  00000E                     ___fladd@aexp:
  1027                           	callstack 0
  1028  00000E                     fputs@c:
  1029                           	callstack 0
  1030  00000E                     atoi@neg:
  1031                           	callstack 0
  1032  00000E                     ___flmul@grs:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0xD
  1036  00000E                     	ds	1
  1037  00000F                     ?___fldiv:
  1038                           	callstack 0
  1039  00000F                     ___fladd@bexp:
  1040                           	callstack 0
  1041  00000F                     fputs@i:
  1042                           	callstack 0
  1043  00000F                     ___fldiv@b:
  1044                           	callstack 0
  1045  00000F                     stoa@nuls:
  1046                           	callstack 0
  1047                           
  1048                           ; 7 bytes @ 0xE
  1049  00000F                     	ds	1
  1050  000010                     ___fladd@grs:
  1051                           	callstack 0
  1052  000010                     _atoi$3039:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0xF
  1056  000010                     	ds	1
  1057  000011                     ?_pad:
  1058                           	callstack 0
  1059  000011                     ___aodiv@counter:
  1060                           	callstack 0
  1061  000011                     ___aomod@counter:
  1062                           	callstack 0
  1063  000011                     pad@fp:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x10
  1067  000011                     	ds	1
  1068  000012                     ___aodiv@sign:
  1069                           	callstack 0
  1070  000012                     ___aomod@sign:
  1071                           	callstack 0
  1072  000012                     ___flmul@aexp:
  1073                           	callstack 0
  1074  000012                     _atoi$3041:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x11
  1078  000012                     	ds	1
  1079  000013                     ?_abs:
  1080                           	callstack 0
  1081  000013                     ___flmul@bexp:
  1082                           	callstack 0
  1083  000013                     pad@buf:
  1084                           	callstack 0
  1085  000013                     abs@a:
  1086                           	callstack 0
  1087  000013                     ___fldiv@a:
  1088                           	callstack 0
  1089  000013                     ___aodiv@quotient:
  1090                           	callstack 0
  1091                           
  1092                           ; 8 bytes @ 0x12
  1093  000013                     	ds	1
  1094  000014                     _atoi$3040:
  1095                           	callstack 0
  1096  000014                     ___flmul@prod:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x13
  1100  000014                     	ds	1
  1101  000015                     ??_abs:
  1102  000015                     pad@p:
  1103                           	callstack 0
  1104  000015                     atoi@n:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x14
  1108  000015                     	ds	1
  1109  000016                     stoa@i:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x15
  1113  000016                     	ds	1
  1114  000017                     ??___fldiv:
  1115  000017                     ??_pad:
  1116                           
  1117                           ; 1 bytes @ 0x16
  1118  000017                     	ds	1
  1119  000018                     ___flmul@temp:
  1120                           	callstack 0
  1121  000018                     pad@i:
  1122                           	callstack 0
  1123  000018                     stoa@w:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x17
  1127  000018                     	ds	2
  1128  00001A                     ?___flsub:
  1129                           	callstack 0
  1130  00001A                     pad@w:
  1131                           	callstack 0
  1132  00001A                     stoa@cp:
  1133                           	callstack 0
  1134  00001A                     ___flge@ff1:
  1135                           	callstack 0
  1136  00001A                     ___flsub@b:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x19
  1140  00001A                     	ds	1
  1141  00001B                     ___fldiv@rem:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x1A
  1145  00001B                     	ds	1
  1146  00001C                     ?_dtoa:
  1147                           	callstack 0
  1148  00001C                     dtoa@fp:
  1149                           	callstack 0
  1150  00001C                     stoa@p:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x1B
  1154  00001C                     	ds	2
  1155  00001E                     stoa@l:
  1156                           	callstack 0
  1157  00001E                     ___flge@ff2:
  1158                           	callstack 0
  1159  00001E                     ___flsub@a:
  1160                           	callstack 0
  1161  00001E                     dtoa@d:
  1162                           	callstack 0
  1163                           
  1164                           ; 8 bytes @ 0x1D
  1165  00001E                     	ds	1
  1166  00001F                     ___fldiv@sign:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x1E
  1170  00001F                     	ds	1
  1171  000020                     ___fldiv@new_exp:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x1F
  1175  000020                     	ds	2
  1176  000022                     ??___flge:
  1177  000022                     ___fldiv@grs:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x21
  1181  000022                     	ds	4
  1182  000026                     ??_dtoa:
  1183  000026                     ___fldiv@bexp:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x25
  1187  000026                     	ds	1
  1188  000027                     ___fldiv@aexp:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x26
  1192  000027                     	ds	1
  1193  000028                     ?_floorf:
  1194                           	callstack 0
  1195  000028                     floorf@x:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x27
  1199  000028                     	ds	4
  1200  00002C                     ??_floorf:
  1201                           
  1202                           ; 1 bytes @ 0x2B
  1203  00002C                     	ds	2
  1204  00002E                     _dtoa$2937:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x2D
  1208  00002E                     	ds	2
  1209  000030                     dtoa@p:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x2F
  1213  000030                     	ds	2
  1214  000032                     dtoa@w:
  1215                           	callstack 0
  1216  000032                     floorf@m:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x31
  1220  000032                     	ds	2
  1221  000034                     dtoa@s:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x33
  1225  000034                     	ds	2
  1226  000036                     floorf@e:
  1227                           	callstack 0
  1228  000036                     dtoa@n:
  1229                           	callstack 0
  1230                           
  1231                           ; 8 bytes @ 0x35
  1232  000036                     	ds	2
  1233  000038                     floorf@u:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x37
  1237  000038                     	ds	4
  1238  00003C                     ?_efgtoa:
  1239                           	callstack 0
  1240  00003C                     efgtoa@fp:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x3B
  1244  00003C                     	ds	2
  1245  00003E                     dtoa@i:
  1246                           	callstack 0
  1247  00003E                     efgtoa@f:
  1248                           	callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x3D
  1251  00003E                     	ds	4
  1252  000042                     efgtoa@c:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x41
  1256  000042                     	ds	1
  1257  000043                     ??_efgtoa:
  1258                           
  1259                           ; 1 bytes @ 0x42
  1260  000043                     	ds	5
  1261  000048                     ?_vfpfcnvrt:
  1262                           	callstack 0
  1263  000048                     vfpfcnvrt@fp:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x47
  1267  000048                     	ds	2
  1268  00004A                     vfpfcnvrt@fmt:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x49
  1272  00004A                     	ds	2
  1273  00004C                     vfpfcnvrt@ap:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x4B
  1277  00004C                     	ds	2
  1278  00004E                     ??_vfpfcnvrt:
  1279                           
  1280                           ; 1 bytes @ 0x4D
  1281  00004E                     	ds	4
  1282  000052                     ?_vfprintf:
  1283                           	callstack 0
  1284  000052                     vfprintf@fp:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x51
  1288  000052                     	ds	2
  1289  000054                     vfprintf@fmt:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x53
  1293  000054                     	ds	2
  1294  000056                     vfprintf@ap:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x55
  1298  000056                     	ds	2
  1299  000058                     vfprintf@cfmt:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x57
  1303  000058                     	ds	2
  1304  00005A                     colourcards_testing@tmpval:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x59
  1308  00005A                     	ds	2
  1309  00005C                     ??_colourcards_testing:
  1310                           
  1311                           ; 1 bytes @ 0x5B
  1312  00005C                     	ds	2
  1313  00005E                     ??_main:
  1314                           
  1315                           ; 1 bytes @ 0x5D
  1316  00005E                     	ds	2
  1317                           
  1318 ;;
  1319 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1320 ;;
  1321 ;; *************** function _main *****************
  1322 ;; Defined at:
  1323 ;;		line 7 in file "main.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  motorR          9  129[BANK0 ] struct .
  1328 ;;  motorL          9  120[BANK0 ] struct .
  1329 ;;  current         8  112[BANK0 ] struct .
  1330 ;;  PWMperiod       1    0        unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1341 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1343 ;;      Totals:         2      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1344 ;;Total ram usage:       28 bytes
  1345 ;; Hardware stack levels required when called: 9
  1346 ;; This function calls:
  1347 ;;		_ADC_init
  1348 ;;		_DCmotors_init
  1349 ;;		_USART4_init
  1350 ;;		_checkbatterylevel
  1351 ;;		_colourcards_testing
  1352 ;;		_colourclickLEDs_C
  1353 ;;		_colourclick_init
  1354 ;; This function is called by:
  1355 ;;		Startup code after reset
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text0
  1360  00487C                     __ptext0:
  1361                           	callstack 0
  1362  00487C                     _main:
  1363                           	callstack 22
  1364  00487C                     
  1365                           ;main.c: 12:     interrupts_lower = 0;
  1366  00487C  0E00               	movlw	0
  1367  00487E  0100               	movlb	0	; () banked
  1368  004880  6FF3               	movwf	(_interrupts_lower+1)& (0+255),b	;volatile
  1369  004882  0E00               	movlw	0
  1370  004884  6FF2               	movwf	_interrupts_lower& (0+255),b	;volatile
  1371  004886                     
  1372                           ; BSR set to: 0
  1373                           ;main.c: 13:     interrupts_upper = 65535;
  1374  004886  69FB               	setf	_interrupts_upper& (0+255),b	;volatile
  1375  004888  69FC               	setf	(_interrupts_upper+1)& (0+255),b	;volatile
  1376                           
  1377                           ;main.c: 14:     DCmotors_lower = 50;
  1378  00488A  0E32               	movlw	50
  1379  00488C  6FFE               	movwf	_DCmotors_lower& (0+255),b	;volatile
  1380                           
  1381                           ;main.c: 15:     DCmotors_upper = 50;
  1382  00488E  0E32               	movlw	50
  1383  004890  6FFD               	movwf	_DCmotors_upper& (0+255),b	;volatile
  1384                           
  1385                           ;main.c: 16:     colourcard_flag = 0;
  1386  004892  0E00               	movlw	0
  1387  004894  6FF6               	movwf	_colourcard_flag& (0+255),b	;volatile
  1388                           
  1389                           ;main.c: 17:     unknowncard_flag = 0;
  1390  004896  0E00               	movlw	0
  1391  004898  6FF5               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1392                           
  1393                           ;main.c: 18:     returnhome_flag = 0;
  1394  00489A  0E00               	movlw	0
  1395  00489C  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
  1396                           
  1397                           ;main.c: 20:     DC_motor motorL;;main.c: 21:     motorL.power=0;
  1398  00489E  0E00               	movlw	0
  1399  0048A0  6FD8               	movwf	main@motorL& (0+255),b
  1400                           
  1401                           ;main.c: 22:     motorL.direction=1;
  1402  0048A2  0E01               	movlw	1
  1403  0048A4  6FD9               	movwf	(main@motorL+1)& (0+255),b
  1404  0048A6                     
  1405                           ; BSR set to: 0
  1406                           ;main.c: 23:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1407  0048A6  0EA3               	movlw	163
  1408  0048A8  6FDA               	movwf	(main@motorL+2)& (0+255),b
  1409  0048AA  0E0F               	movlw	15
  1410  0048AC  6FDB               	movwf	(main@motorL+3)& (0+255),b
  1411  0048AE                     
  1412                           ; BSR set to: 0
  1413                           ;main.c: 24:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1414  0048AE  0E7D               	movlw	125
  1415  0048B0  6FDC               	movwf	(main@motorL+4)& (0+255),b
  1416  0048B2  0E0F               	movlw	15
  1417  0048B4  6FDD               	movwf	(main@motorL+5)& (0+255),b
  1418                           
  1419                           ;main.c: 25:     motorL.dir_pin=4;
  1420  0048B6  0E04               	movlw	4
  1421  0048B8  6FDE               	movwf	(main@motorL+6)& (0+255),b
  1422  0048BA                     
  1423                           ; BSR set to: 0
  1424                           ;main.c: 26:     motorL.PWMperiod=PWMperiod;
  1425  0048BA  0E00               	movlw	0
  1426  0048BC  6FE0               	movwf	(main@motorL+8)& (0+255),b
  1427  0048BE  0E63               	movlw	99
  1428  0048C0  6FDF               	movwf	(main@motorL+7)& (0+255),b
  1429                           
  1430                           ;main.c: 28:     DC_motor motorR;;main.c: 29:     motorR.power=0;
  1431  0048C2  0E00               	movlw	0
  1432  0048C4  6FE1               	movwf	main@motorR& (0+255),b
  1433                           
  1434                           ;main.c: 30:     motorR.direction=1;
  1435  0048C6  0E01               	movlw	1
  1436  0048C8  6FE2               	movwf	(main@motorR+1)& (0+255),b
  1437  0048CA                     
  1438                           ; BSR set to: 0
  1439                           ;main.c: 31:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1440  0048CA  0EA0               	movlw	160
  1441  0048CC  6FE3               	movwf	(main@motorR+2)& (0+255),b
  1442  0048CE  0E0F               	movlw	15
  1443  0048D0  6FE4               	movwf	(main@motorR+3)& (0+255),b
  1444  0048D2                     
  1445                           ; BSR set to: 0
  1446                           ;main.c: 32:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1447  0048D2  0E7F               	movlw	127
  1448  0048D4  6FE5               	movwf	(main@motorR+4)& (0+255),b
  1449  0048D6  0E0F               	movlw	15
  1450  0048D8  6FE6               	movwf	(main@motorR+5)& (0+255),b
  1451                           
  1452                           ;main.c: 33:     motorR.dir_pin=6;
  1453  0048DA  0E06               	movlw	6
  1454  0048DC  6FE7               	movwf	(main@motorR+6)& (0+255),b
  1455  0048DE                     
  1456                           ; BSR set to: 0
  1457                           ;main.c: 34:     motorR.PWMperiod=PWMperiod;
  1458  0048DE  0E00               	movlw	0
  1459  0048E0  6FE9               	movwf	(main@motorR+8)& (0+255),b
  1460  0048E2  0E63               	movlw	99
  1461  0048E4  6FE8               	movwf	(main@motorR+7)& (0+255),b
  1462  0048E6                     
  1463                           ; BSR set to: 0
  1464                           ;main.c: 36:     ADC_init();
  1465  0048E6  EC30  F02A         	call	_ADC_init	;wreg free
  1466  0048EA                     
  1467                           ;main.c: 37:     colourclick_init();
  1468  0048EA  EC2B  F029         	call	_colourclick_init	;wreg free
  1469  0048EE                     
  1470                           ;main.c: 38:     DCmotors_init(PWMperiod);
  1471  0048EE  0E63               	movlw	99
  1472  0048F0  EC58  F028         	call	_DCmotors_init
  1473  0048F4                     
  1474                           ;main.c: 39:     USART4_init();
  1475  0048F4  EC20  F02A         	call	_USART4_init	;wreg free
  1476  0048F8                     
  1477                           ;main.c: 40:     checkbatterylevel();
  1478  0048F8  EC10  F02A         	call	_checkbatterylevel	;wreg free
  1479  0048FC                     l59:
  1480  0048FC  A48E               	btfss	142,2,c	;volatile
  1481  0048FE  EF83  F024         	goto	u7281
  1482  004902  EF85  F024         	goto	u7280
  1483  004906                     u7281:
  1484  004906  EF8C  F024         	goto	l63
  1485  00490A                     u7280:
  1486  00490A  B68E               	btfsc	142,3,c	;volatile
  1487  00490C  EF8A  F024         	goto	u7291
  1488  004910  EF8C  F024         	goto	u7290
  1489  004914                     u7291:
  1490  004914  EF7E  F024         	goto	l59
  1491  004918                     u7290:
  1492  004918                     l63:
  1493                           
  1494                           ;main.c: 56:     LATDbits.LATD3 = 1;
  1495  004918  867C               	bsf	124,3,c	;volatile
  1496  00491A                     
  1497                           ;main.c: 57:     colourclickLEDs_C(1);
  1498  00491A  0E01               	movlw	1
  1499  00491C  ECEF  F029         	call	_colourclickLEDs_C
  1500  004920                     
  1501                           ;main.c: 58:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1502  004920  0E52               	movlw	82
  1503  004922  6E5F               	movwf	(??_main+1)^0,c
  1504  004924  0E2B               	movlw	43
  1505  004926  6E5E               	movwf	??_main^0,c
  1506  004928  0E00               	movlw	0
  1507  00492A                     u7827:
  1508  00492A  2EE8               	decfsz	wreg,f,c
  1509  00492C  D7FE               	bra	u7827
  1510  00492E  2E5E               	decfsz	??_main^0,f,c
  1511  004930  D7FC               	bra	u7827
  1512  004932  2E5F               	decfsz	(??_main+1)^0,f,c
  1513  004934  D7FA               	bra	u7827
  1514  004936  D000               	nop2	
  1515  004938                     l5878:
  1516                           
  1517                           ;main.c: 70:         colourcards_testing(&current);
  1518  004938  0ED0               	movlw	low main@current
  1519  00493A  6E5A               	movwf	colourcards_testing@tmpval^0,c
  1520  00493C  0E00               	movlw	high main@current
  1521  00493E  6E5B               	movwf	(colourcards_testing@tmpval+1)^0,c
  1522  004940  EC72  F00D         	call	_colourcards_testing	;wreg free
  1523  004944  EF9C  F024         	goto	l5878
  1524  004948  EF00  F000         	goto	start
  1525  00494C                     __end_of_main:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _colourclick_init *****************
  1529 ;; Defined at:
  1530 ;;		line 18 in file "colour_click.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1548 ;;Total ram usage:        1 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 3
  1551 ;; This function calls:
  1552 ;;		_I2C_2_Master_Init
  1553 ;;		_colourclickLEDs_init
  1554 ;;		_colourclick_writetoaddr
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text1
  1561  005256                     __ptext1:
  1562                           	callstack 0
  1563  005256                     _colourclick_init:
  1564                           	callstack 27
  1565  005256                     
  1566                           ;colour_click.c: 21:     I2C_2_Master_Init();
  1567  005256  ECB3  F029         	call	_I2C_2_Master_Init	;wreg free
  1568  00525A                     
  1569                           ;colour_click.c: 24:   colourclick_writetoaddr(0x00, 0x01);
  1570  00525A  0E01               	movlw	1
  1571  00525C  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1572  00525E  0E00               	movlw	0
  1573  005260  EC00  F02A         	call	_colourclick_writetoaddr
  1574  005264                     
  1575                           ;colour_click.c: 25:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1576  005264  0E3F               	movlw	63
  1577  005266  6E05               	movwf	??_colourclick_init^0,c
  1578  005268  0E55               	movlw	85
  1579  00526A                     u7837:
  1580  00526A  2EE8               	decfsz	wreg,f,c
  1581  00526C  D7FE               	bra	u7837
  1582  00526E  2E05               	decfsz	??_colourclick_init^0,f,c
  1583  005270  D7FC               	bra	u7837
  1584  005272  F000               	nop	
  1585  005274                     
  1586                           ;colour_click.c: 28:  colourclick_writetoaddr(0x00, 0x03);
  1587  005274  0E03               	movlw	3
  1588  005276  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1589  005278  0E00               	movlw	0
  1590  00527A  EC00  F02A         	call	_colourclick_writetoaddr
  1591  00527E                     
  1592                           ;colour_click.c: 31:  colourclick_writetoaddr(0x01, 0xD5);
  1593  00527E  0ED5               	movlw	213
  1594  005280  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1595  005282  0E01               	movlw	1
  1596  005284  EC00  F02A         	call	_colourclick_writetoaddr
  1597  005288                     
  1598                           ;colour_click.c: 33:     colourclickLEDs_init();
  1599  005288  EC60  F02A         	call	_colourclickLEDs_init	;wreg free
  1600  00528C  0012               	return		;funcret
  1601  00528E                     __end_of_colourclick_init:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _colourclick_writetoaddr *****************
  1605 ;; Defined at:
  1606 ;;		line 42 in file "colour_click.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  address         1    wreg     unsigned char 
  1609 ;;  value           1    2[COMRAM] unsigned char 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  address         1    3[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;Total ram usage:        2 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 2
  1628 ;; This function calls:
  1629 ;;		_I2C_2_Master_Start
  1630 ;;		_I2C_2_Master_Stop
  1631 ;;		_I2C_2_Master_Write
  1632 ;; This function is called by:
  1633 ;;		_colourclick_init
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text2
  1638  005400                     __ptext2:
  1639                           	callstack 0
  1640  005400                     _colourclick_writetoaddr:
  1641                           	callstack 27
  1642                           
  1643                           ;incstack = 0
  1644                           ;colourclick_writetoaddr@address stored from wreg
  1645  005400  6E04               	movwf	colourclick_writetoaddr@address^0,c
  1646  005402                     
  1647                           ;colour_click.c: 42: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 43: {;colour_click.c: 44:     I2C_2_Master_Start();
  1648  005402  EC78  F02A         	call	_I2C_2_Master_Start	;wreg free
  1649                           
  1650                           ;colour_click.c: 45:     I2C_2_Master_Write(0x52 | 0x00);
  1651  005406  0E52               	movlw	82
  1652  005408  EC67  F02A         	call	_I2C_2_Master_Write
  1653                           
  1654                           ;colour_click.c: 46:     I2C_2_Master_Write(0x80 | address);
  1655  00540C  5004               	movf	colourclick_writetoaddr@address^0,w,c
  1656  00540E  0980               	iorlw	128
  1657  005410  EC67  F02A         	call	_I2C_2_Master_Write
  1658                           
  1659                           ;colour_click.c: 47:     I2C_2_Master_Write(value);
  1660  005414  5003               	movf	colourclick_writetoaddr@value^0,w,c
  1661  005416  EC67  F02A         	call	_I2C_2_Master_Write
  1662                           
  1663                           ;colour_click.c: 48:     I2C_2_Master_Stop();
  1664  00541A  EC73  F02A         	call	_I2C_2_Master_Stop	;wreg free
  1665  00541E  0012               	return		;funcret
  1666  005420                     __end_of_colourclick_writetoaddr:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _colourclickLEDs_init *****************
  1670 ;; Defined at:
  1671 ;;		line 49 in file "buttons_n_LEDs.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 1
  1692 ;; This function calls:
  1693 ;;		_colourclickLEDs_C
  1694 ;; This function is called by:
  1695 ;;		_colourclick_init
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text3
  1700  0054C0                     __ptext3:
  1701                           	callstack 0
  1702  0054C0                     _colourclickLEDs_init:
  1703                           	callstack 28
  1704  0054C0                     
  1705                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  1706  0054C0  9287               	bcf	135,1,c	;volatile
  1707                           
  1708                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  1709  0054C2  9881               	bcf	129,4,c	;volatile
  1710                           
  1711                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  1712  0054C4  9E86               	bcf	134,7,c	;volatile
  1713  0054C6                     
  1714                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  1715  0054C6  0E00               	movlw	0
  1716  0054C8  ECEF  F029         	call	_colourclickLEDs_C
  1717  0054CC  0012               	return		;funcret
  1718  0054CE                     __end_of_colourclickLEDs_init:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _colourclickLEDs_C *****************
  1722 ;; Defined at:
  1723 ;;		line 84 in file "buttons_n_LEDs.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  tog             1    wreg     unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  tog             1    0[COMRAM] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;Total ram usage:        1 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;;		_colourclickLEDs_init
  1748 ;;		_colourclick_readRGBC2
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text4
  1753  0053DE                     __ptext4:
  1754                           	callstack 0
  1755  0053DE                     _colourclickLEDs_C:
  1756                           	callstack 28
  1757                           
  1758                           ;incstack = 0
  1759                           ;colourclickLEDs_C@tog stored from wreg
  1760  0053DE  6E01               	movwf	colourclickLEDs_C@tog^0,c
  1761  0053E0                     
  1762                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
  1763  0053E0  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1764  0053E2  D002               	bra	u6665
  1765  0053E4  927F               	bcf	127,1,c	;volatile
  1766  0053E6  D001               	bra	u6666
  1767  0053E8                     u6665:
  1768  0053E8  827F               	bsf	127,1,c	;volatile
  1769  0053EA                     u6666:
  1770                           
  1771                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
  1772  0053EA  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1773  0053EC  D002               	bra	u6675
  1774  0053EE  9879               	bcf	121,4,c	;volatile
  1775  0053F0  D001               	bra	u6676
  1776  0053F2                     u6675:
  1777  0053F2  8879               	bsf	121,4,c	;volatile
  1778  0053F4                     u6676:
  1779                           
  1780                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
  1781  0053F4  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1782  0053F6  D002               	bra	u6685
  1783  0053F8  9E7E               	bcf	126,7,c	;volatile
  1784  0053FA  D001               	bra	u6686
  1785  0053FC                     u6685:
  1786  0053FC  8E7E               	bsf	126,7,c	;volatile
  1787  0053FE                     u6686:
  1788  0053FE  0012               	return		;funcret
  1789  005400                     __end_of_colourclickLEDs_C:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _I2C_2_Master_Init *****************
  1793 ;; Defined at:
  1794 ;;		line 8 in file "I2C.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_colourclick_init
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text5
  1822  005366                     __ptext5:
  1823                           	callstack 0
  1824  005366                     _I2C_2_Master_Init:
  1825                           	callstack 29
  1826  005366                     
  1827                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  1828  005366  010E               	movlb	14	; () banked
  1829  005368  51D9               	movf	217,w,b	;volatile
  1830  00536A  0BF0               	andlw	-16
  1831  00536C  0908               	iorlw	8
  1832  00536E  6FD9               	movwf	217,b	;volatile
  1833  005370                     
  1834                           ; BSR set to: 14
  1835                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  1836  005370  8BD9               	bsf	217,5,b	;volatile
  1837                           
  1838                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  1839  005372  0E9F               	movlw	159
  1840  005374  6FD6               	movwf	214,b	;volatile
  1841  005376                     
  1842                           ; BSR set to: 14
  1843                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  1844  005376  8A84               	bsf	132,5,c	;volatile
  1845  005378                     
  1846                           ; BSR set to: 14
  1847                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  1848  005378  8C84               	bsf	132,6,c	;volatile
  1849  00537A                     
  1850                           ; BSR set to: 14
  1851                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  1852  00537A  9BA7               	bcf	167,5,b	;volatile
  1853  00537C                     
  1854                           ; BSR set to: 14
  1855                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  1856  00537C  9DA7               	bcf	167,6,b	;volatile
  1857                           
  1858                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  1859  00537E  0E1D               	movlw	29
  1860  005380  6F1D               	movwf	29,b	;volatile
  1861                           
  1862                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  1863  005382  0E1E               	movlw	30
  1864  005384  6F1C               	movwf	28,b	;volatile
  1865                           
  1866                           ;I2C.c: 22:   RD5PPS=0x1C;
  1867  005386  0E1C               	movlw	28
  1868  005388  6F6F               	movwf	111,b	;volatile
  1869                           
  1870                           ;I2C.c: 23:   RD6PPS=0x1B;
  1871  00538A  0E1B               	movlw	27
  1872  00538C  6F70               	movwf	112,b	;volatile
  1873  00538E                     
  1874                           ; BSR set to: 14
  1875  00538E  0012               	return		;funcret
  1876  005390                     __end_of_I2C_2_Master_Init:
  1877                           	callstack 0
  1878                           
  1879 ;; *************** function _colourcards_testing *****************
  1880 ;; Defined at:
  1881 ;;		line 105 in file "colour_cards.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  tmpval          2   89[COMRAM] PTR struct .
  1884 ;;		 -> main@current(8), 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  buf1          100    0[BANK1 ] unsigned char [100]
  1887 ;;  B_rel           4  116[BANK1 ] float 
  1888 ;;  G_rel           4  112[BANK1 ] float 
  1889 ;;  R_rel           4  108[BANK1 ] float 
  1890 ;;  C               2  106[BANK1 ] int 
  1891 ;;  B               2  104[BANK1 ] int 
  1892 ;;  G               2  102[BANK1 ] int 
  1893 ;;  R               2  100[BANK1 ] int 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;      Locals:         0       0     120       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1906 ;;      Totals:         4       0     120       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;Total ram usage:      124 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 8
  1910 ;; This function calls:
  1911 ;;		___fldiv
  1912 ;;		___flge
  1913 ;;		___xxtofl
  1914 ;;		_colourclick_readRGBC
  1915 ;;		_sendStringSerial4
  1916 ;;		_sprintf
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text6
  1923  001AE4                     __ptext6:
  1924                           	callstack 0
  1925  001AE4                     _colourcards_testing:
  1926                           	callstack 22
  1927  001AE4                     l158:
  1928  001AE4  B48E               	btfsc	142,2,c	;volatile
  1929  001AE6  EF77  F00D         	goto	u6931
  1930  001AEA  EF79  F00D         	goto	u6930
  1931  001AEE                     u6931:
  1932  001AEE  EF72  F00D         	goto	l158
  1933  001AF2                     u6930:
  1934  001AF2                     
  1935                           ;colour_cards.c: 108:     INTCONbits.GIE = 0;
  1936  001AF2  9EF2               	bcf	242,7,c	;volatile
  1937  001AF4                     
  1938                           ;colour_cards.c: 110:     colourclick_readRGBC(tmpval);
  1939  001AF4  C05A  F00C         	movff	colourcards_testing@tmpval,colourclick_readRGBC@tmpval
  1940  001AF8  C05B  F00D         	movff	colourcards_testing@tmpval+1,colourclick_readRGBC@tmpval+1
  1941  001AFC  EC0F  F027         	call	_colourclick_readRGBC	;wreg free
  1942  001B00                     
  1943                           ;colour_cards.c: 111:     int R = tmpval->R;
  1944  001B00  C05A  FFD9         	movff	colourcards_testing@tmpval,fsr2l
  1945  001B04  C05B  FFDA         	movff	colourcards_testing@tmpval+1,fsr2h
  1946  001B08  CFDE F164          	movff	postinc2,colourcards_testing@R
  1947  001B0C  CFDD F165          	movff	postdec2,colourcards_testing@R+1
  1948  001B10                     
  1949                           ;colour_cards.c: 112:     int G = tmpval->G;
  1950  001B10  EE20 F002          	lfsr	2,2
  1951  001B14  505A               	movf	colourcards_testing@tmpval^0,w,c
  1952  001B16  26D9               	addwf	fsr2l,f,c
  1953  001B18  505B               	movf	(colourcards_testing@tmpval+1)^0,w,c
  1954  001B1A  22DA               	addwfc	fsr2h,f,c
  1955  001B1C  CFDE F166          	movff	postinc2,colourcards_testing@G
  1956  001B20  CFDD F167          	movff	postdec2,colourcards_testing@G+1
  1957  001B24                     
  1958                           ;colour_cards.c: 113:     int B = tmpval->B;
  1959  001B24  EE20 F004          	lfsr	2,4
  1960  001B28  505A               	movf	colourcards_testing@tmpval^0,w,c
  1961  001B2A  26D9               	addwf	fsr2l,f,c
  1962  001B2C  505B               	movf	(colourcards_testing@tmpval+1)^0,w,c
  1963  001B2E  22DA               	addwfc	fsr2h,f,c
  1964  001B30  CFDE F168          	movff	postinc2,colourcards_testing@B
  1965  001B34  CFDD F169          	movff	postdec2,colourcards_testing@B+1
  1966  001B38                     
  1967                           ;colour_cards.c: 114:     int C = tmpval->C;
  1968  001B38  EE20 F006          	lfsr	2,6
  1969  001B3C  505A               	movf	colourcards_testing@tmpval^0,w,c
  1970  001B3E  26D9               	addwf	fsr2l,f,c
  1971  001B40  505B               	movf	(colourcards_testing@tmpval+1)^0,w,c
  1972  001B42  22DA               	addwfc	fsr2h,f,c
  1973  001B44  CFDE F16A          	movff	postinc2,colourcards_testing@C
  1974  001B48  CFDD F16B          	movff	postdec2,colourcards_testing@C+1
  1975  001B4C                     
  1976                           ;colour_cards.c: 115:     float R_rel = (float)R/(float)C;
  1977  001B4C  C164  F001         	movff	colourcards_testing@R,___xxtofl@val
  1978  001B50  C165  F002         	movff	colourcards_testing@R+1,___xxtofl@val+1
  1979  001B54  0E00               	movlw	0
  1980  001B56  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1981  001B58  0EFF               	movlw	-1
  1982  001B5A  6E03               	movwf	(___xxtofl@val+2)^0,c
  1983  001B5C  6E04               	movwf	(___xxtofl@val+3)^0,c
  1984  001B5E  0E01               	movlw	1
  1985  001B60  EC58  F01E         	call	___xxtofl
  1986  001B64  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1987  001B68  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1988  001B6C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1989  001B70  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1990  001B74  C16A  F001         	movff	colourcards_testing@C,___xxtofl@val
  1991  001B78  C16B  F002         	movff	colourcards_testing@C+1,___xxtofl@val+1
  1992  001B7C  0E00               	movlw	0
  1993  001B7E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1994  001B80  0EFF               	movlw	-1
  1995  001B82  6E03               	movwf	(___xxtofl@val+2)^0,c
  1996  001B84  6E04               	movwf	(___xxtofl@val+3)^0,c
  1997  001B86  0E01               	movlw	1
  1998  001B88  EC58  F01E         	call	___xxtofl
  1999  001B8C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2000  001B90  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2001  001B94  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2002  001B98  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2003  001B9C  EC10  F01A         	call	___fldiv	;wreg free
  2004  001BA0  C00F  F16C         	movff	?___fldiv,colourcards_testing@R_rel
  2005  001BA4  C010  F16D         	movff	?___fldiv+1,colourcards_testing@R_rel+1
  2006  001BA8  C011  F16E         	movff	?___fldiv+2,colourcards_testing@R_rel+2
  2007  001BAC  C012  F16F         	movff	?___fldiv+3,colourcards_testing@R_rel+3
  2008  001BB0                     
  2009                           ;colour_cards.c: 116:     float G_rel = (float)G/(float)C;
  2010  001BB0  C166  F001         	movff	colourcards_testing@G,___xxtofl@val
  2011  001BB4  C167  F002         	movff	colourcards_testing@G+1,___xxtofl@val+1
  2012  001BB8  0E00               	movlw	0
  2013  001BBA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2014  001BBC  0EFF               	movlw	-1
  2015  001BBE  6E03               	movwf	(___xxtofl@val+2)^0,c
  2016  001BC0  6E04               	movwf	(___xxtofl@val+3)^0,c
  2017  001BC2  0E01               	movlw	1
  2018  001BC4  EC58  F01E         	call	___xxtofl
  2019  001BC8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2020  001BCC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2021  001BD0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2022  001BD4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2023  001BD8  C16A  F001         	movff	colourcards_testing@C,___xxtofl@val
  2024  001BDC  C16B  F002         	movff	colourcards_testing@C+1,___xxtofl@val+1
  2025  001BE0  0E00               	movlw	0
  2026  001BE2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2027  001BE4  0EFF               	movlw	-1
  2028  001BE6  6E03               	movwf	(___xxtofl@val+2)^0,c
  2029  001BE8  6E04               	movwf	(___xxtofl@val+3)^0,c
  2030  001BEA  0E01               	movlw	1
  2031  001BEC  EC58  F01E         	call	___xxtofl
  2032  001BF0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2033  001BF4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2034  001BF8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2035  001BFC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2036  001C00  EC10  F01A         	call	___fldiv	;wreg free
  2037  001C04  C00F  F170         	movff	?___fldiv,colourcards_testing@G_rel
  2038  001C08  C010  F171         	movff	?___fldiv+1,colourcards_testing@G_rel+1
  2039  001C0C  C011  F172         	movff	?___fldiv+2,colourcards_testing@G_rel+2
  2040  001C10  C012  F173         	movff	?___fldiv+3,colourcards_testing@G_rel+3
  2041  001C14                     
  2042                           ;colour_cards.c: 117:     float B_rel = (float)B/(float)C;
  2043  001C14  C168  F001         	movff	colourcards_testing@B,___xxtofl@val
  2044  001C18  C169  F002         	movff	colourcards_testing@B+1,___xxtofl@val+1
  2045  001C1C  0E00               	movlw	0
  2046  001C1E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2047  001C20  0EFF               	movlw	-1
  2048  001C22  6E03               	movwf	(___xxtofl@val+2)^0,c
  2049  001C24  6E04               	movwf	(___xxtofl@val+3)^0,c
  2050  001C26  0E01               	movlw	1
  2051  001C28  EC58  F01E         	call	___xxtofl
  2052  001C2C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2053  001C30  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2054  001C34  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2055  001C38  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2056  001C3C  C16A  F001         	movff	colourcards_testing@C,___xxtofl@val
  2057  001C40  C16B  F002         	movff	colourcards_testing@C+1,___xxtofl@val+1
  2058  001C44  0E00               	movlw	0
  2059  001C46  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2060  001C48  0EFF               	movlw	-1
  2061  001C4A  6E03               	movwf	(___xxtofl@val+2)^0,c
  2062  001C4C  6E04               	movwf	(___xxtofl@val+3)^0,c
  2063  001C4E  0E01               	movlw	1
  2064  001C50  EC58  F01E         	call	___xxtofl
  2065  001C54  C001  F013         	movff	?___xxtofl,___fldiv@a
  2066  001C58  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2067  001C5C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2068  001C60  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2069  001C64  EC10  F01A         	call	___fldiv	;wreg free
  2070  001C68  C00F  F174         	movff	?___fldiv,colourcards_testing@B_rel
  2071  001C6C  C010  F175         	movff	?___fldiv+1,colourcards_testing@B_rel+1
  2072  001C70  C011  F176         	movff	?___fldiv+2,colourcards_testing@B_rel+2
  2073  001C74  C012  F177         	movff	?___fldiv+3,colourcards_testing@B_rel+3
  2074  001C78                     
  2075                           ;colour_cards.c: 119:     char buf1[100];;colour_cards.c: 120:     if ((R_rel>0.54) && (
      +                          G_rel<0.245) && (B_rel<0.18)) {
  2076  001C78  0E71               	movlw	113
  2077  001C7A  6E1A               	movwf	___flge@ff1^0,c
  2078  001C7C  0E3D               	movlw	61
  2079  001C7E  6E1B               	movwf	(___flge@ff1+1)^0,c
  2080  001C80  0E0A               	movlw	10
  2081  001C82  6E1C               	movwf	(___flge@ff1+2)^0,c
  2082  001C84  0E3F               	movlw	63
  2083  001C86  6E1D               	movwf	(___flge@ff1+3)^0,c
  2084  001C88  C16C  F01E         	movff	colourcards_testing@R_rel,___flge@ff2
  2085  001C8C  C16D  F01F         	movff	colourcards_testing@R_rel+1,___flge@ff2+1
  2086  001C90  C16E  F020         	movff	colourcards_testing@R_rel+2,___flge@ff2+2
  2087  001C94  C16F  F021         	movff	colourcards_testing@R_rel+3,___flge@ff2+3
  2088  001C98  ECCC  F022         	call	___flge	;wreg free
  2089  001C9C  B0D8               	btfsc	status,0,c
  2090  001C9E  EF53  F00E         	goto	u6941
  2091  001CA2  EF55  F00E         	goto	u6940
  2092  001CA6                     u6941:
  2093  001CA6  EFC0  F00E         	goto	l5736
  2094  001CAA                     u6940:
  2095  001CAA  C170  F01A         	movff	colourcards_testing@G_rel,___flge@ff1
  2096  001CAE  C171  F01B         	movff	colourcards_testing@G_rel+1,___flge@ff1+1
  2097  001CB2  C172  F01C         	movff	colourcards_testing@G_rel+2,___flge@ff1+2
  2098  001CB6  C173  F01D         	movff	colourcards_testing@G_rel+3,___flge@ff1+3
  2099  001CBA  0E48               	movlw	72
  2100  001CBC  6E1E               	movwf	___flge@ff2^0,c
  2101  001CBE  0EE1               	movlw	225
  2102  001CC0  6E1F               	movwf	(___flge@ff2+1)^0,c
  2103  001CC2  0E7A               	movlw	122
  2104  001CC4  6E20               	movwf	(___flge@ff2+2)^0,c
  2105  001CC6  0E3E               	movlw	62
  2106  001CC8  6E21               	movwf	(___flge@ff2+3)^0,c
  2107  001CCA  ECCC  F022         	call	___flge	;wreg free
  2108  001CCE  B0D8               	btfsc	status,0,c
  2109  001CD0  EF6C  F00E         	goto	u6951
  2110  001CD4  EF6E  F00E         	goto	u6950
  2111  001CD8                     u6951:
  2112  001CD8  EFC0  F00E         	goto	l5736
  2113  001CDC                     u6950:
  2114  001CDC  C174  F01A         	movff	colourcards_testing@B_rel,___flge@ff1
  2115  001CE0  C175  F01B         	movff	colourcards_testing@B_rel+1,___flge@ff1+1
  2116  001CE4  C176  F01C         	movff	colourcards_testing@B_rel+2,___flge@ff1+2
  2117  001CE8  C177  F01D         	movff	colourcards_testing@B_rel+3,___flge@ff1+3
  2118  001CEC  0EEC               	movlw	236
  2119  001CEE  6E1E               	movwf	___flge@ff2^0,c
  2120  001CF0  0E51               	movlw	81
  2121  001CF2  6E1F               	movwf	(___flge@ff2+1)^0,c
  2122  001CF4  0E38               	movlw	56
  2123  001CF6  6E20               	movwf	(___flge@ff2+2)^0,c
  2124  001CF8  0E3E               	movlw	62
  2125  001CFA  6E21               	movwf	(___flge@ff2+3)^0,c
  2126  001CFC  ECCC  F022         	call	___flge	;wreg free
  2127  001D00  B0D8               	btfsc	status,0,c
  2128  001D02  EF85  F00E         	goto	u6961
  2129  001D06  EF87  F00E         	goto	u6960
  2130  001D0A                     u6961:
  2131  001D0A  EFC0  F00E         	goto	l5736
  2132  001D0E                     u6960:
  2133  001D0E                     
  2134                           ;colour_cards.c: 122:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "red");
  2135  001D0E  0E00               	movlw	low colourcards_testing@buf1
  2136  001D10  0100               	movlb	0	; () banked
  2137  001D12  6FAE               	movwf	sprintf@s& (0+255),b
  2138  001D14  0E01               	movlw	high colourcards_testing@buf1
  2139  001D16  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2140  001D18  0E01               	movlw	low STR_1
  2141  001D1A  6FB0               	movwf	sprintf@fmt& (0+255),b
  2142  001D1C  0E0E               	movlw	high STR_1
  2143  001D1E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2144  001D20  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2145  001D24  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2146  001D28  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2147  001D2C  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2148  001D30  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2149  001D34  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2150  001D38  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2151  001D3C  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2152  001D40  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2153  001D44  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2154  001D48  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2155  001D4C  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2156  001D50  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2157  001D54  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2158  001D58  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2159  001D5C  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2160  001D60  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2161  001D64  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2162  001D68  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2163  001D6C  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2164  001D70  0E83               	movlw	low STR_2
  2165  001D72  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2166  001D74  0E0E               	movlw	high STR_2
  2167  001D76  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2168  001D78  EC3E  F027         	call	_sprintf	;wreg free
  2169                           
  2170                           ;colour_cards.c: 125:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
  2171  001D7C  EF93  F012         	goto	l5794
  2172  001D80                     l5736:
  2173  001D80  C16C  F01A         	movff	colourcards_testing@R_rel,___flge@ff1
  2174  001D84  C16D  F01B         	movff	colourcards_testing@R_rel+1,___flge@ff1+1
  2175  001D88  C16E  F01C         	movff	colourcards_testing@R_rel+2,___flge@ff1+2
  2176  001D8C  C16F  F01D         	movff	colourcards_testing@R_rel+3,___flge@ff1+3
  2177  001D90  0E52               	movlw	82
  2178  001D92  6E1E               	movwf	___flge@ff2^0,c
  2179  001D94  0EB8               	movlw	184
  2180  001D96  6E1F               	movwf	(___flge@ff2+1)^0,c
  2181  001D98  0EDE               	movlw	222
  2182  001D9A  6E20               	movwf	(___flge@ff2+2)^0,c
  2183  001D9C  0E3E               	movlw	62
  2184  001D9E  6E21               	movwf	(___flge@ff2+3)^0,c
  2185  001DA0  ECCC  F022         	call	___flge	;wreg free
  2186  001DA4  B0D8               	btfsc	status,0,c
  2187  001DA6  EFD7  F00E         	goto	u6971
  2188  001DAA  EFD9  F00E         	goto	u6970
  2189  001DAE                     u6971:
  2190  001DAE  EF44  F00F         	goto	l5744
  2191  001DB2                     u6970:
  2192  001DB2  0E52               	movlw	82
  2193  001DB4  6E1A               	movwf	___flge@ff1^0,c
  2194  001DB6  0EB8               	movlw	184
  2195  001DB8  6E1B               	movwf	(___flge@ff1+1)^0,c
  2196  001DBA  0E9E               	movlw	158
  2197  001DBC  6E1C               	movwf	(___flge@ff1+2)^0,c
  2198  001DBE  0E3E               	movlw	62
  2199  001DC0  6E1D               	movwf	(___flge@ff1+3)^0,c
  2200  001DC2  C170  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2201  001DC6  C171  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2202  001DCA  C172  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2203  001DCE  C173  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2204  001DD2  ECCC  F022         	call	___flge	;wreg free
  2205  001DD6  B0D8               	btfsc	status,0,c
  2206  001DD8  EFF0  F00E         	goto	u6981
  2207  001DDC  EFF2  F00E         	goto	u6980
  2208  001DE0                     u6981:
  2209  001DE0  EF44  F00F         	goto	l5744
  2210  001DE4                     u6980:
  2211  001DE4  0E14               	movlw	20
  2212  001DE6  6E1A               	movwf	___flge@ff1^0,c
  2213  001DE8  0EAE               	movlw	174
  2214  001DEA  6E1B               	movwf	(___flge@ff1+1)^0,c
  2215  001DEC  0E47               	movlw	71
  2216  001DEE  6E1C               	movwf	(___flge@ff1+2)^0,c
  2217  001DF0  0E3E               	movlw	62
  2218  001DF2  6E1D               	movwf	(___flge@ff1+3)^0,c
  2219  001DF4  C174  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2220  001DF8  C175  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2221  001DFC  C176  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2222  001E00  C177  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2223  001E04  ECCC  F022         	call	___flge	;wreg free
  2224  001E08  B0D8               	btfsc	status,0,c
  2225  001E0A  EF09  F00F         	goto	u6991
  2226  001E0E  EF0B  F00F         	goto	u6990
  2227  001E12                     u6991:
  2228  001E12  EF44  F00F         	goto	l5744
  2229  001E16                     u6990:
  2230  001E16                     
  2231                           ;colour_cards.c: 127:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "green");
  2232  001E16  0E00               	movlw	low colourcards_testing@buf1
  2233  001E18  0100               	movlb	0	; () banked
  2234  001E1A  6FAE               	movwf	sprintf@s& (0+255),b
  2235  001E1C  0E01               	movlw	high colourcards_testing@buf1
  2236  001E1E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2237  001E20  0E01               	movlw	low STR_1
  2238  001E22  6FB0               	movwf	sprintf@fmt& (0+255),b
  2239  001E24  0E0E               	movlw	high STR_1
  2240  001E26  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2241  001E28  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2242  001E2C  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2243  001E30  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2244  001E34  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2245  001E38  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2246  001E3C  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2247  001E40  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2248  001E44  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2249  001E48  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2250  001E4C  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2251  001E50  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2252  001E54  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2253  001E58  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2254  001E5C  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2255  001E60  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2256  001E64  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2257  001E68  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2258  001E6C  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2259  001E70  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2260  001E74  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2261  001E78  0E68               	movlw	low STR_4
  2262  001E7A  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2263  001E7C  0E0E               	movlw	high STR_4
  2264  001E7E  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2265  001E80  EC3E  F027         	call	_sprintf	;wreg free
  2266                           
  2267                           ;colour_cards.c: 130:     } else if ((R_rel<0.43) && (G_rel>0.30) && (B_rel>0.21)) {
  2268  001E84  EF93  F012         	goto	l5794
  2269  001E88                     l5744:
  2270  001E88  C16C  F01A         	movff	colourcards_testing@R_rel,___flge@ff1
  2271  001E8C  C16D  F01B         	movff	colourcards_testing@R_rel+1,___flge@ff1+1
  2272  001E90  C16E  F01C         	movff	colourcards_testing@R_rel+2,___flge@ff1+2
  2273  001E94  C16F  F01D         	movff	colourcards_testing@R_rel+3,___flge@ff1+3
  2274  001E98  0EF6               	movlw	246
  2275  001E9A  6E1E               	movwf	___flge@ff2^0,c
  2276  001E9C  0E28               	movlw	40
  2277  001E9E  6E1F               	movwf	(___flge@ff2+1)^0,c
  2278  001EA0  0EDC               	movlw	220
  2279  001EA2  6E20               	movwf	(___flge@ff2+2)^0,c
  2280  001EA4  0E3E               	movlw	62
  2281  001EA6  6E21               	movwf	(___flge@ff2+3)^0,c
  2282  001EA8  ECCC  F022         	call	___flge	;wreg free
  2283  001EAC  B0D8               	btfsc	status,0,c
  2284  001EAE  EF5B  F00F         	goto	u7001
  2285  001EB2  EF5D  F00F         	goto	u7000
  2286  001EB6                     u7001:
  2287  001EB6  EFC8  F00F         	goto	l5752
  2288  001EBA                     u7000:
  2289  001EBA  0E9A               	movlw	154
  2290  001EBC  6E1A               	movwf	___flge@ff1^0,c
  2291  001EBE  0E99               	movlw	153
  2292  001EC0  6E1B               	movwf	(___flge@ff1+1)^0,c
  2293  001EC2  0E99               	movlw	153
  2294  001EC4  6E1C               	movwf	(___flge@ff1+2)^0,c
  2295  001EC6  0E3E               	movlw	62
  2296  001EC8  6E1D               	movwf	(___flge@ff1+3)^0,c
  2297  001ECA  C170  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2298  001ECE  C171  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2299  001ED2  C172  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2300  001ED6  C173  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2301  001EDA  ECCC  F022         	call	___flge	;wreg free
  2302  001EDE  B0D8               	btfsc	status,0,c
  2303  001EE0  EF74  F00F         	goto	u7011
  2304  001EE4  EF76  F00F         	goto	u7010
  2305  001EE8                     u7011:
  2306  001EE8  EFC8  F00F         	goto	l5752
  2307  001EEC                     u7010:
  2308  001EEC  0E3D               	movlw	61
  2309  001EEE  6E1A               	movwf	___flge@ff1^0,c
  2310  001EF0  0E0A               	movlw	10
  2311  001EF2  6E1B               	movwf	(___flge@ff1+1)^0,c
  2312  001EF4  0E57               	movlw	87
  2313  001EF6  6E1C               	movwf	(___flge@ff1+2)^0,c
  2314  001EF8  0E3E               	movlw	62
  2315  001EFA  6E1D               	movwf	(___flge@ff1+3)^0,c
  2316  001EFC  C174  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2317  001F00  C175  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2318  001F04  C176  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2319  001F08  C177  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2320  001F0C  ECCC  F022         	call	___flge	;wreg free
  2321  001F10  B0D8               	btfsc	status,0,c
  2322  001F12  EF8D  F00F         	goto	u7021
  2323  001F16  EF8F  F00F         	goto	u7020
  2324  001F1A                     u7021:
  2325  001F1A  EFC8  F00F         	goto	l5752
  2326  001F1E                     u7020:
  2327  001F1E                     
  2328                           ;colour_cards.c: 132:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "blue");
  2329  001F1E  0E00               	movlw	low colourcards_testing@buf1
  2330  001F20  0100               	movlb	0	; () banked
  2331  001F22  6FAE               	movwf	sprintf@s& (0+255),b
  2332  001F24  0E01               	movlw	high colourcards_testing@buf1
  2333  001F26  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2334  001F28  0E01               	movlw	low STR_1
  2335  001F2A  6FB0               	movwf	sprintf@fmt& (0+255),b
  2336  001F2C  0E0E               	movlw	high STR_1
  2337  001F2E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2338  001F30  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2339  001F34  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2340  001F38  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2341  001F3C  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2342  001F40  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2343  001F44  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2344  001F48  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2345  001F4C  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2346  001F50  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2347  001F54  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2348  001F58  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2349  001F5C  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2350  001F60  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2351  001F64  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2352  001F68  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2353  001F6C  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2354  001F70  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2355  001F74  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2356  001F78  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2357  001F7C  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2358  001F80  0E47               	movlw	low (STR_14+6)
  2359  001F82  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2360  001F84  0E0E               	movlw	high (STR_14+6)
  2361  001F86  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2362  001F88  EC3E  F027         	call	_sprintf	;wreg free
  2363                           
  2364                           ;colour_cards.c: 135:     } else if ((R_rel>0.49) && (G_rel>0.285) && (B_rel>0.18)) {
  2365  001F8C  EF93  F012         	goto	l5794
  2366  001F90                     l5752:
  2367  001F90  0E48               	movlw	72
  2368  001F92  6E1A               	movwf	___flge@ff1^0,c
  2369  001F94  0EE1               	movlw	225
  2370  001F96  6E1B               	movwf	(___flge@ff1+1)^0,c
  2371  001F98  0EFA               	movlw	250
  2372  001F9A  6E1C               	movwf	(___flge@ff1+2)^0,c
  2373  001F9C  0E3E               	movlw	62
  2374  001F9E  6E1D               	movwf	(___flge@ff1+3)^0,c
  2375  001FA0  C16C  F01E         	movff	colourcards_testing@R_rel,___flge@ff2
  2376  001FA4  C16D  F01F         	movff	colourcards_testing@R_rel+1,___flge@ff2+1
  2377  001FA8  C16E  F020         	movff	colourcards_testing@R_rel+2,___flge@ff2+2
  2378  001FAC  C16F  F021         	movff	colourcards_testing@R_rel+3,___flge@ff2+3
  2379  001FB0  ECCC  F022         	call	___flge	;wreg free
  2380  001FB4  B0D8               	btfsc	status,0,c
  2381  001FB6  EFDF  F00F         	goto	u7031
  2382  001FBA  EFE1  F00F         	goto	u7030
  2383  001FBE                     u7031:
  2384  001FBE  EF4C  F010         	goto	l5760
  2385  001FC2                     u7030:
  2386  001FC2  0E85               	movlw	133
  2387  001FC4  6E1A               	movwf	___flge@ff1^0,c
  2388  001FC6  0EEB               	movlw	235
  2389  001FC8  6E1B               	movwf	(___flge@ff1+1)^0,c
  2390  001FCA  0E91               	movlw	145
  2391  001FCC  6E1C               	movwf	(___flge@ff1+2)^0,c
  2392  001FCE  0E3E               	movlw	62
  2393  001FD0  6E1D               	movwf	(___flge@ff1+3)^0,c
  2394  001FD2  C170  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2395  001FD6  C171  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2396  001FDA  C172  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2397  001FDE  C173  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2398  001FE2  ECCC  F022         	call	___flge	;wreg free
  2399  001FE6  B0D8               	btfsc	status,0,c
  2400  001FE8  EFF8  F00F         	goto	u7041
  2401  001FEC  EFFA  F00F         	goto	u7040
  2402  001FF0                     u7041:
  2403  001FF0  EF4C  F010         	goto	l5760
  2404  001FF4                     u7040:
  2405  001FF4  0EEC               	movlw	236
  2406  001FF6  6E1A               	movwf	___flge@ff1^0,c
  2407  001FF8  0E51               	movlw	81
  2408  001FFA  6E1B               	movwf	(___flge@ff1+1)^0,c
  2409  001FFC  0E38               	movlw	56
  2410  001FFE  6E1C               	movwf	(___flge@ff1+2)^0,c
  2411  002000  0E3E               	movlw	62
  2412  002002  6E1D               	movwf	(___flge@ff1+3)^0,c
  2413  002004  C174  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2414  002008  C175  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2415  00200C  C176  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2416  002010  C177  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2417  002014  ECCC  F022         	call	___flge	;wreg free
  2418  002018  B0D8               	btfsc	status,0,c
  2419  00201A  EF11  F010         	goto	u7051
  2420  00201E  EF13  F010         	goto	u7050
  2421  002022                     u7051:
  2422  002022  EF4C  F010         	goto	l5760
  2423  002026                     u7050:
  2424  002026                     
  2425                           ;colour_cards.c: 137:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "yellow");
  2426  002026  0E00               	movlw	low colourcards_testing@buf1
  2427  002028  0100               	movlb	0	; () banked
  2428  00202A  6FAE               	movwf	sprintf@s& (0+255),b
  2429  00202C  0E01               	movlw	high colourcards_testing@buf1
  2430  00202E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2431  002030  0E01               	movlw	low STR_1
  2432  002032  6FB0               	movwf	sprintf@fmt& (0+255),b
  2433  002034  0E0E               	movlw	high STR_1
  2434  002036  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2435  002038  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2436  00203C  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2437  002040  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2438  002044  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2439  002048  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2440  00204C  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2441  002050  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2442  002054  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2443  002058  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2444  00205C  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2445  002060  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2446  002064  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2447  002068  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2448  00206C  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2449  002070  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2450  002074  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2451  002078  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2452  00207C  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2453  002080  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2454  002084  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2455  002088  0E5B               	movlw	low STR_8
  2456  00208A  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2457  00208C  0E0E               	movlw	high STR_8
  2458  00208E  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2459  002090  EC3E  F027         	call	_sprintf	;wreg free
  2460                           
  2461                           ;colour_cards.c: 140:     } else if ((R_rel>0.49) && (G_rel<0.275) && (B_rel>0.195)) {
  2462  002094  EF93  F012         	goto	l5794
  2463  002098                     l5760:
  2464  002098  0E48               	movlw	72
  2465  00209A  6E1A               	movwf	___flge@ff1^0,c
  2466  00209C  0EE1               	movlw	225
  2467  00209E  6E1B               	movwf	(___flge@ff1+1)^0,c
  2468  0020A0  0EFA               	movlw	250
  2469  0020A2  6E1C               	movwf	(___flge@ff1+2)^0,c
  2470  0020A4  0E3E               	movlw	62
  2471  0020A6  6E1D               	movwf	(___flge@ff1+3)^0,c
  2472  0020A8  C16C  F01E         	movff	colourcards_testing@R_rel,___flge@ff2
  2473  0020AC  C16D  F01F         	movff	colourcards_testing@R_rel+1,___flge@ff2+1
  2474  0020B0  C16E  F020         	movff	colourcards_testing@R_rel+2,___flge@ff2+2
  2475  0020B4  C16F  F021         	movff	colourcards_testing@R_rel+3,___flge@ff2+3
  2476  0020B8  ECCC  F022         	call	___flge	;wreg free
  2477  0020BC  B0D8               	btfsc	status,0,c
  2478  0020BE  EF63  F010         	goto	u7061
  2479  0020C2  EF65  F010         	goto	u7060
  2480  0020C6                     u7061:
  2481  0020C6  EFD0  F010         	goto	l5768
  2482  0020CA                     u7060:
  2483  0020CA  C170  F01A         	movff	colourcards_testing@G_rel,___flge@ff1
  2484  0020CE  C171  F01B         	movff	colourcards_testing@G_rel+1,___flge@ff1+1
  2485  0020D2  C172  F01C         	movff	colourcards_testing@G_rel+2,___flge@ff1+2
  2486  0020D6  C173  F01D         	movff	colourcards_testing@G_rel+3,___flge@ff1+3
  2487  0020DA  0ECD               	movlw	205
  2488  0020DC  6E1E               	movwf	___flge@ff2^0,c
  2489  0020DE  0ECC               	movlw	204
  2490  0020E0  6E1F               	movwf	(___flge@ff2+1)^0,c
  2491  0020E2  0E8C               	movlw	140
  2492  0020E4  6E20               	movwf	(___flge@ff2+2)^0,c
  2493  0020E6  0E3E               	movlw	62
  2494  0020E8  6E21               	movwf	(___flge@ff2+3)^0,c
  2495  0020EA  ECCC  F022         	call	___flge	;wreg free
  2496  0020EE  B0D8               	btfsc	status,0,c
  2497  0020F0  EF7C  F010         	goto	u7071
  2498  0020F4  EF7E  F010         	goto	u7070
  2499  0020F8                     u7071:
  2500  0020F8  EFD0  F010         	goto	l5768
  2501  0020FC                     u7070:
  2502  0020FC  0E14               	movlw	20
  2503  0020FE  6E1A               	movwf	___flge@ff1^0,c
  2504  002100  0EAE               	movlw	174
  2505  002102  6E1B               	movwf	(___flge@ff1+1)^0,c
  2506  002104  0E47               	movlw	71
  2507  002106  6E1C               	movwf	(___flge@ff1+2)^0,c
  2508  002108  0E3E               	movlw	62
  2509  00210A  6E1D               	movwf	(___flge@ff1+3)^0,c
  2510  00210C  C174  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2511  002110  C175  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2512  002114  C176  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2513  002118  C177  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2514  00211C  ECCC  F022         	call	___flge	;wreg free
  2515  002120  B0D8               	btfsc	status,0,c
  2516  002122  EF95  F010         	goto	u7081
  2517  002126  EF97  F010         	goto	u7080
  2518  00212A                     u7081:
  2519  00212A  EFD0  F010         	goto	l5768
  2520  00212E                     u7080:
  2521  00212E                     
  2522                           ;colour_cards.c: 142:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "pink");
  2523  00212E  0E00               	movlw	low colourcards_testing@buf1
  2524  002130  0100               	movlb	0	; () banked
  2525  002132  6FAE               	movwf	sprintf@s& (0+255),b
  2526  002134  0E01               	movlw	high colourcards_testing@buf1
  2527  002136  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2528  002138  0E01               	movlw	low STR_1
  2529  00213A  6FB0               	movwf	sprintf@fmt& (0+255),b
  2530  00213C  0E0E               	movlw	high STR_1
  2531  00213E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2532  002140  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2533  002144  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2534  002148  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2535  00214C  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2536  002150  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2537  002154  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2538  002158  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2539  00215C  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2540  002160  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2541  002164  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2542  002168  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2543  00216C  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2544  002170  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2545  002174  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2546  002178  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2547  00217C  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2548  002180  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2549  002184  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2550  002188  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2551  00218C  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2552  002190  0E6E               	movlw	low STR_10
  2553  002192  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2554  002194  0E0E               	movlw	high STR_10
  2555  002196  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2556  002198  EC3E  F027         	call	_sprintf	;wreg free
  2557                           
  2558                           ;colour_cards.c: 145:     } else if ((R_rel>0.54) && (G_rel<0.24) && (B_rel<0.18)) {
  2559  00219C  EF93  F012         	goto	l5794
  2560  0021A0                     l5768:
  2561  0021A0  0E71               	movlw	113
  2562  0021A2  6E1A               	movwf	___flge@ff1^0,c
  2563  0021A4  0E3D               	movlw	61
  2564  0021A6  6E1B               	movwf	(___flge@ff1+1)^0,c
  2565  0021A8  0E0A               	movlw	10
  2566  0021AA  6E1C               	movwf	(___flge@ff1+2)^0,c
  2567  0021AC  0E3F               	movlw	63
  2568  0021AE  6E1D               	movwf	(___flge@ff1+3)^0,c
  2569  0021B0  C16C  F01E         	movff	colourcards_testing@R_rel,___flge@ff2
  2570  0021B4  C16D  F01F         	movff	colourcards_testing@R_rel+1,___flge@ff2+1
  2571  0021B8  C16E  F020         	movff	colourcards_testing@R_rel+2,___flge@ff2+2
  2572  0021BC  C16F  F021         	movff	colourcards_testing@R_rel+3,___flge@ff2+3
  2573  0021C0  ECCC  F022         	call	___flge	;wreg free
  2574  0021C4  B0D8               	btfsc	status,0,c
  2575  0021C6  EFE7  F010         	goto	u7091
  2576  0021CA  EFE9  F010         	goto	u7090
  2577  0021CE                     u7091:
  2578  0021CE  EF54  F011         	goto	l5776
  2579  0021D2                     u7090:
  2580  0021D2  C170  F01A         	movff	colourcards_testing@G_rel,___flge@ff1
  2581  0021D6  C171  F01B         	movff	colourcards_testing@G_rel+1,___flge@ff1+1
  2582  0021DA  C172  F01C         	movff	colourcards_testing@G_rel+2,___flge@ff1+2
  2583  0021DE  C173  F01D         	movff	colourcards_testing@G_rel+3,___flge@ff1+3
  2584  0021E2  0E8F               	movlw	143
  2585  0021E4  6E1E               	movwf	___flge@ff2^0,c
  2586  0021E6  0EC2               	movlw	194
  2587  0021E8  6E1F               	movwf	(___flge@ff2+1)^0,c
  2588  0021EA  0E75               	movlw	117
  2589  0021EC  6E20               	movwf	(___flge@ff2+2)^0,c
  2590  0021EE  0E3E               	movlw	62
  2591  0021F0  6E21               	movwf	(___flge@ff2+3)^0,c
  2592  0021F2  ECCC  F022         	call	___flge	;wreg free
  2593  0021F6  B0D8               	btfsc	status,0,c
  2594  0021F8  EF00  F011         	goto	u7101
  2595  0021FC  EF02  F011         	goto	u7100
  2596  002200                     u7101:
  2597  002200  EF54  F011         	goto	l5776
  2598  002204                     u7100:
  2599  002204  C174  F01A         	movff	colourcards_testing@B_rel,___flge@ff1
  2600  002208  C175  F01B         	movff	colourcards_testing@B_rel+1,___flge@ff1+1
  2601  00220C  C176  F01C         	movff	colourcards_testing@B_rel+2,___flge@ff1+2
  2602  002210  C177  F01D         	movff	colourcards_testing@B_rel+3,___flge@ff1+3
  2603  002214  0EEC               	movlw	236
  2604  002216  6E1E               	movwf	___flge@ff2^0,c
  2605  002218  0E51               	movlw	81
  2606  00221A  6E1F               	movwf	(___flge@ff2+1)^0,c
  2607  00221C  0E38               	movlw	56
  2608  00221E  6E20               	movwf	(___flge@ff2+2)^0,c
  2609  002220  0E3E               	movlw	62
  2610  002222  6E21               	movwf	(___flge@ff2+3)^0,c
  2611  002224  ECCC  F022         	call	___flge	;wreg free
  2612  002228  B0D8               	btfsc	status,0,c
  2613  00222A  EF19  F011         	goto	u7111
  2614  00222E  EF1B  F011         	goto	u7110
  2615  002232                     u7111:
  2616  002232  EF54  F011         	goto	l5776
  2617  002236                     u7110:
  2618  002236                     
  2619                           ;colour_cards.c: 147:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "orange");
  2620  002236  0E00               	movlw	low colourcards_testing@buf1
  2621  002238  0100               	movlb	0	; () banked
  2622  00223A  6FAE               	movwf	sprintf@s& (0+255),b
  2623  00223C  0E01               	movlw	high colourcards_testing@buf1
  2624  00223E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2625  002240  0E01               	movlw	low STR_1
  2626  002242  6FB0               	movwf	sprintf@fmt& (0+255),b
  2627  002244  0E0E               	movlw	high STR_1
  2628  002246  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2629  002248  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2630  00224C  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2631  002250  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2632  002254  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2633  002258  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2634  00225C  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2635  002260  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2636  002264  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2637  002268  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2638  00226C  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2639  002270  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2640  002274  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2641  002278  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2642  00227C  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2643  002280  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2644  002284  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2645  002288  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2646  00228C  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2647  002290  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2648  002294  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2649  002298  0E54               	movlw	low STR_12
  2650  00229A  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2651  00229C  0E0E               	movlw	high STR_12
  2652  00229E  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2653  0022A0  EC3E  F027         	call	_sprintf	;wreg free
  2654                           
  2655                           ;colour_cards.c: 150:     } else if ((R_rel<0.44) && (G_rel>0.305) && (B_rel>0.21)) {
  2656  0022A4  EF93  F012         	goto	l5794
  2657  0022A8                     l5776:
  2658  0022A8  C16C  F01A         	movff	colourcards_testing@R_rel,___flge@ff1
  2659  0022AC  C16D  F01B         	movff	colourcards_testing@R_rel+1,___flge@ff1+1
  2660  0022B0  C16E  F01C         	movff	colourcards_testing@R_rel+2,___flge@ff1+2
  2661  0022B4  C16F  F01D         	movff	colourcards_testing@R_rel+3,___flge@ff1+3
  2662  0022B8  0EAE               	movlw	174
  2663  0022BA  6E1E               	movwf	___flge@ff2^0,c
  2664  0022BC  0E47               	movlw	71
  2665  0022BE  6E1F               	movwf	(___flge@ff2+1)^0,c
  2666  0022C0  0EE1               	movlw	225
  2667  0022C2  6E20               	movwf	(___flge@ff2+2)^0,c
  2668  0022C4  0E3E               	movlw	62
  2669  0022C6  6E21               	movwf	(___flge@ff2+3)^0,c
  2670  0022C8  ECCC  F022         	call	___flge	;wreg free
  2671  0022CC  B0D8               	btfsc	status,0,c
  2672  0022CE  EF6B  F011         	goto	u7121
  2673  0022D2  EF6D  F011         	goto	u7120
  2674  0022D6                     u7121:
  2675  0022D6  EFD8  F011         	goto	l5784
  2676  0022DA                     u7120:
  2677  0022DA  0EF6               	movlw	246
  2678  0022DC  6E1A               	movwf	___flge@ff1^0,c
  2679  0022DE  0E28               	movlw	40
  2680  0022E0  6E1B               	movwf	(___flge@ff1+1)^0,c
  2681  0022E2  0E9C               	movlw	156
  2682  0022E4  6E1C               	movwf	(___flge@ff1+2)^0,c
  2683  0022E6  0E3E               	movlw	62
  2684  0022E8  6E1D               	movwf	(___flge@ff1+3)^0,c
  2685  0022EA  C170  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2686  0022EE  C171  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2687  0022F2  C172  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2688  0022F6  C173  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2689  0022FA  ECCC  F022         	call	___flge	;wreg free
  2690  0022FE  B0D8               	btfsc	status,0,c
  2691  002300  EF84  F011         	goto	u7131
  2692  002304  EF86  F011         	goto	u7130
  2693  002308                     u7131:
  2694  002308  EFD8  F011         	goto	l5784
  2695  00230C                     u7130:
  2696  00230C  0E3D               	movlw	61
  2697  00230E  6E1A               	movwf	___flge@ff1^0,c
  2698  002310  0E0A               	movlw	10
  2699  002312  6E1B               	movwf	(___flge@ff1+1)^0,c
  2700  002314  0E57               	movlw	87
  2701  002316  6E1C               	movwf	(___flge@ff1+2)^0,c
  2702  002318  0E3E               	movlw	62
  2703  00231A  6E1D               	movwf	(___flge@ff1+3)^0,c
  2704  00231C  C174  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2705  002320  C175  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2706  002324  C176  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2707  002328  C177  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2708  00232C  ECCC  F022         	call	___flge	;wreg free
  2709  002330  B0D8               	btfsc	status,0,c
  2710  002332  EF9D  F011         	goto	u7141
  2711  002336  EF9F  F011         	goto	u7140
  2712  00233A                     u7141:
  2713  00233A  EFD8  F011         	goto	l5784
  2714  00233E                     u7140:
  2715  00233E                     
  2716                           ;colour_cards.c: 152:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "light blue");
  2717  00233E  0E00               	movlw	low colourcards_testing@buf1
  2718  002340  0100               	movlb	0	; () banked
  2719  002342  6FAE               	movwf	sprintf@s& (0+255),b
  2720  002344  0E01               	movlw	high colourcards_testing@buf1
  2721  002346  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2722  002348  0E01               	movlw	low STR_1
  2723  00234A  6FB0               	movwf	sprintf@fmt& (0+255),b
  2724  00234C  0E0E               	movlw	high STR_1
  2725  00234E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2726  002350  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2727  002354  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2728  002358  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2729  00235C  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2730  002360  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2731  002364  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2732  002368  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2733  00236C  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2734  002370  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2735  002374  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2736  002378  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2737  00237C  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2738  002380  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2739  002384  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2740  002388  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2741  00238C  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2742  002390  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2743  002394  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2744  002398  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2745  00239C  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2746  0023A0  0E41               	movlw	low STR_14
  2747  0023A2  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2748  0023A4  0E0E               	movlw	high STR_14
  2749  0023A6  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2750  0023A8  EC3E  F027         	call	_sprintf	;wreg free
  2751                           
  2752                           ;colour_cards.c: 155:     } else if ((R_rel<0.46) && (G_rel>0.295) && (B_rel>0.21)) {
  2753  0023AC  EF93  F012         	goto	l5794
  2754  0023B0                     l5784:
  2755  0023B0  C16C  F01A         	movff	colourcards_testing@R_rel,___flge@ff1
  2756  0023B4  C16D  F01B         	movff	colourcards_testing@R_rel+1,___flge@ff1+1
  2757  0023B8  C16E  F01C         	movff	colourcards_testing@R_rel+2,___flge@ff1+2
  2758  0023BC  C16F  F01D         	movff	colourcards_testing@R_rel+3,___flge@ff1+3
  2759  0023C0  0E1F               	movlw	31
  2760  0023C2  6E1E               	movwf	___flge@ff2^0,c
  2761  0023C4  0E85               	movlw	133
  2762  0023C6  6E1F               	movwf	(___flge@ff2+1)^0,c
  2763  0023C8  0EEB               	movlw	235
  2764  0023CA  6E20               	movwf	(___flge@ff2+2)^0,c
  2765  0023CC  0E3E               	movlw	62
  2766  0023CE  6E21               	movwf	(___flge@ff2+3)^0,c
  2767  0023D0  ECCC  F022         	call	___flge	;wreg free
  2768  0023D4  B0D8               	btfsc	status,0,c
  2769  0023D6  EFEF  F011         	goto	u7151
  2770  0023DA  EFF1  F011         	goto	u7150
  2771  0023DE                     u7151:
  2772  0023DE  EF5C  F012         	goto	l5792
  2773  0023E2                     u7150:
  2774  0023E2  0E3D               	movlw	61
  2775  0023E4  6E1A               	movwf	___flge@ff1^0,c
  2776  0023E6  0E0A               	movlw	10
  2777  0023E8  6E1B               	movwf	(___flge@ff1+1)^0,c
  2778  0023EA  0E97               	movlw	151
  2779  0023EC  6E1C               	movwf	(___flge@ff1+2)^0,c
  2780  0023EE  0E3E               	movlw	62
  2781  0023F0  6E1D               	movwf	(___flge@ff1+3)^0,c
  2782  0023F2  C170  F01E         	movff	colourcards_testing@G_rel,___flge@ff2
  2783  0023F6  C171  F01F         	movff	colourcards_testing@G_rel+1,___flge@ff2+1
  2784  0023FA  C172  F020         	movff	colourcards_testing@G_rel+2,___flge@ff2+2
  2785  0023FE  C173  F021         	movff	colourcards_testing@G_rel+3,___flge@ff2+3
  2786  002402  ECCC  F022         	call	___flge	;wreg free
  2787  002406  B0D8               	btfsc	status,0,c
  2788  002408  EF08  F012         	goto	u7161
  2789  00240C  EF0A  F012         	goto	u7160
  2790  002410                     u7161:
  2791  002410  EF5C  F012         	goto	l5792
  2792  002414                     u7160:
  2793  002414  0E3D               	movlw	61
  2794  002416  6E1A               	movwf	___flge@ff1^0,c
  2795  002418  0E0A               	movlw	10
  2796  00241A  6E1B               	movwf	(___flge@ff1+1)^0,c
  2797  00241C  0E57               	movlw	87
  2798  00241E  6E1C               	movwf	(___flge@ff1+2)^0,c
  2799  002420  0E3E               	movlw	62
  2800  002422  6E1D               	movwf	(___flge@ff1+3)^0,c
  2801  002424  C174  F01E         	movff	colourcards_testing@B_rel,___flge@ff2
  2802  002428  C175  F01F         	movff	colourcards_testing@B_rel+1,___flge@ff2+1
  2803  00242C  C176  F020         	movff	colourcards_testing@B_rel+2,___flge@ff2+2
  2804  002430  C177  F021         	movff	colourcards_testing@B_rel+3,___flge@ff2+3
  2805  002434  ECCC  F022         	call	___flge	;wreg free
  2806  002438  B0D8               	btfsc	status,0,c
  2807  00243A  EF21  F012         	goto	u7171
  2808  00243E  EF23  F012         	goto	u7170
  2809  002442                     u7171:
  2810  002442  EF5C  F012         	goto	l5792
  2811  002446                     u7170:
  2812  002446                     
  2813                           ;colour_cards.c: 157:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "white");
  2814  002446  0E00               	movlw	low colourcards_testing@buf1
  2815  002448  0100               	movlb	0	; () banked
  2816  00244A  6FAE               	movwf	sprintf@s& (0+255),b
  2817  00244C  0E01               	movlw	high colourcards_testing@buf1
  2818  00244E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2819  002450  0E01               	movlw	low STR_1
  2820  002452  6FB0               	movwf	sprintf@fmt& (0+255),b
  2821  002454  0E0E               	movlw	high STR_1
  2822  002456  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2823  002458  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2824  00245C  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2825  002460  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2826  002464  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2827  002468  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2828  00246C  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2829  002470  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2830  002474  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2831  002478  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2832  00247C  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2833  002480  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2834  002484  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2835  002488  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2836  00248C  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2837  002490  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2838  002494  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2839  002498  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2840  00249C  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2841  0024A0  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2842  0024A4  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2843  0024A8  0E62               	movlw	low STR_16
  2844  0024AA  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2845  0024AC  0E0E               	movlw	high STR_16
  2846  0024AE  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2847  0024B0  EC3E  F027         	call	_sprintf	;wreg free
  2848                           
  2849                           ;colour_cards.c: 160:     } else {
  2850  0024B4  EF93  F012         	goto	l5794
  2851  0024B8                     l5792:
  2852                           
  2853                           ;colour_cards.c: 162:         sprintf(buf1,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.
      +                          3f     Colour: %s\n\r", R, G, B, C, R_rel, G_rel, B_rel, "unknown");
  2854  0024B8  0E00               	movlw	low colourcards_testing@buf1
  2855  0024BA  0100               	movlb	0	; () banked
  2856  0024BC  6FAE               	movwf	sprintf@s& (0+255),b
  2857  0024BE  0E01               	movlw	high colourcards_testing@buf1
  2858  0024C0  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2859  0024C2  0E01               	movlw	low STR_1
  2860  0024C4  6FB0               	movwf	sprintf@fmt& (0+255),b
  2861  0024C6  0E0E               	movlw	high STR_1
  2862  0024C8  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2863  0024CA  C164  F0B2         	movff	colourcards_testing@R,?_sprintf+4
  2864  0024CE  C165  F0B3         	movff	colourcards_testing@R+1,?_sprintf+5
  2865  0024D2  C166  F0B4         	movff	colourcards_testing@G,?_sprintf+6
  2866  0024D6  C167  F0B5         	movff	colourcards_testing@G+1,?_sprintf+7
  2867  0024DA  C168  F0B6         	movff	colourcards_testing@B,?_sprintf+8
  2868  0024DE  C169  F0B7         	movff	colourcards_testing@B+1,?_sprintf+9
  2869  0024E2  C16A  F0B8         	movff	colourcards_testing@C,?_sprintf+10
  2870  0024E6  C16B  F0B9         	movff	colourcards_testing@C+1,?_sprintf+11
  2871  0024EA  C16C  F0BA         	movff	colourcards_testing@R_rel,?_sprintf+12
  2872  0024EE  C16D  F0BB         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2873  0024F2  C16E  F0BC         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2874  0024F6  C16F  F0BD         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2875  0024FA  C170  F0BE         	movff	colourcards_testing@G_rel,?_sprintf+16
  2876  0024FE  C171  F0BF         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2877  002502  C172  F0C0         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2878  002506  C173  F0C1         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2879  00250A  C174  F0C2         	movff	colourcards_testing@B_rel,?_sprintf+20
  2880  00250E  C175  F0C3         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2881  002512  C176  F0C4         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2882  002516  C177  F0C5         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2883  00251A  0E4C               	movlw	low STR_18
  2884  00251C  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2885  00251E  0E0E               	movlw	high STR_18
  2886  002520  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2887  002522  EC3E  F027         	call	_sprintf	;wreg free
  2888  002526                     l5794:
  2889                           
  2890                           ;colour_cards.c: 165:     sendStringSerial4(buf1);
  2891  002526  0E00               	movlw	low colourcards_testing@buf1
  2892  002528  6E02               	movwf	sendStringSerial4@string^0,c
  2893  00252A  0E01               	movlw	high colourcards_testing@buf1
  2894  00252C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2895  00252E  EC9B  F029         	call	_sendStringSerial4	;wreg free
  2896  002532                     
  2897                           ;colour_cards.c: 166:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2898  002532  0E29               	movlw	41
  2899  002534  6E5D               	movwf	(??_colourcards_testing+1)^0,c
  2900  002536  0E96               	movlw	150
  2901  002538  6E5C               	movwf	??_colourcards_testing^0,c
  2902  00253A  0E7F               	movlw	127
  2903  00253C                     u7847:
  2904  00253C  2EE8               	decfsz	wreg,f,c
  2905  00253E  D7FE               	bra	u7847
  2906  002540  2E5C               	decfsz	??_colourcards_testing^0,f,c
  2907  002542  D7FC               	bra	u7847
  2908  002544  2E5D               	decfsz	(??_colourcards_testing+1)^0,f,c
  2909  002546  D7FA               	bra	u7847
  2910  002548  F000               	nop	
  2911  00254A                     
  2912                           ;colour_cards.c: 168:     INTCONbits.GIE = 1;
  2913  00254A  8EF2               	bsf	242,7,c	;volatile
  2914  00254C  0012               	return		;funcret
  2915  00254E                     __end_of_colourcards_testing:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _sprintf *****************
  2919 ;; Defined at:
  2920 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  s               2   78[BANK0 ] PTR unsigned char 
  2923 ;;		 -> colourcards_testing@buf1(100), 
  2924 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  2925 ;;		 -> STR_17(64), STR_15(64), STR_13(64), STR_11(64), 
  2926 ;;		 -> STR_9(64), STR_7(64), STR_5(64), STR_3(64), 
  2927 ;;		 -> STR_1(64), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  f               6  106[BANK0 ] struct _IO_FILE
  2930 ;;  ap              2  104[BANK0 ] PTR void [1]
  2931 ;;		 -> ?_sprintf(2), 
  2932 ;;  ret             2    0        int 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  2   78[BANK0 ] int 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2942 ;;      Params:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2946 ;;Total ram usage:       34 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 7
  2949 ;; This function calls:
  2950 ;;		_vfprintf
  2951 ;; This function is called by:
  2952 ;;		_colourcards_testing
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text7
  2957  004E7C                     __ptext7:
  2958                           	callstack 0
  2959  004E7C                     _sprintf:
  2960                           	callstack 22
  2961  004E7C  0EB2               	movlw	low (?_sprintf+4)
  2962  004E7E  0100               	movlb	0	; () banked
  2963  004E80  6FC8               	movwf	sprintf@ap& (0+255),b
  2964  004E82  0E00               	movlw	high (?_sprintf+4)
  2965  004E84  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  2966  004E86  C0AE  F0CA         	movff	sprintf@s,sprintf@f
  2967  004E8A  C0AF  F0CB         	movff	sprintf@s+1,sprintf@f+1
  2968  004E8E                     
  2969                           ; BSR set to: 0
  2970  004E8E  0E00               	movlw	0
  2971  004E90  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  2972  004E92  0E00               	movlw	0
  2973  004E94  6FCC               	movwf	(sprintf@f+2)& (0+255),b
  2974  004E96                     
  2975                           ; BSR set to: 0
  2976  004E96  0E00               	movlw	0
  2977  004E98  6FCF               	movwf	(sprintf@f+5)& (0+255),b
  2978  004E9A  0E00               	movlw	0
  2979  004E9C  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  2980  004E9E                     
  2981                           ; BSR set to: 0
  2982  004E9E  0ECA               	movlw	low sprintf@f
  2983  004EA0  6E52               	movwf	vfprintf@fp^0,c
  2984  004EA2  0E00               	movlw	high sprintf@f
  2985  004EA4  6E53               	movwf	(vfprintf@fp+1)^0,c
  2986  004EA6  C0B0  F054         	movff	sprintf@fmt,vfprintf@fmt
  2987  004EAA  C0B1  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2988  004EAE  0EC8               	movlw	low sprintf@ap
  2989  004EB0  6E56               	movwf	vfprintf@ap^0,c
  2990  004EB2  0E00               	movlw	high sprintf@ap
  2991  004EB4  6E57               	movwf	(vfprintf@ap+1)^0,c
  2992  004EB6  EC7D  F026         	call	_vfprintf	;wreg free
  2993  004EBA  0100               	movlb	0	; () banked
  2994  004EBC  51CC               	movf	(sprintf@f+2)& (0+255),w,b
  2995  004EBE  25AE               	addwf	sprintf@s& (0+255),w,b
  2996  004EC0  6ED9               	movwf	fsr2l,c
  2997  004EC2  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  2998  004EC4  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2999  004EC6  6EDA               	movwf	fsr2h,c
  3000  004EC8  0E00               	movlw	0
  3001  004ECA  6EDF               	movwf	indf2,c
  3002  004ECC                     
  3003                           ; BSR set to: 0
  3004  004ECC  0012               	return		;funcret
  3005  004ECE                     __end_of_sprintf:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _vfprintf *****************
  3009 ;; Defined at:
  3010 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  3013 ;;		 -> sprintf@f(6), 
  3014 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  3015 ;;		 -> STR_17(64), STR_15(64), STR_13(64), STR_11(64), 
  3016 ;;		 -> STR_9(64), STR_7(64), STR_5(64), STR_3(64), 
  3017 ;;		 -> STR_1(64), 
  3018 ;;  ap              2   85[COMRAM] PTR PTR void 
  3019 ;;		 -> sprintf@ap(2), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  3022 ;;		 -> STR_17(64), STR_15(64), STR_13(64), STR_11(64), 
  3023 ;;		 -> STR_9(64), STR_7(64), STR_5(64), STR_3(64), 
  3024 ;;		 -> STR_1(64), 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  2   81[COMRAM] int 
  3027 ;; Registers used:
  3028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3034 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3037 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;Total ram usage:        8 bytes
  3039 ;; Hardware stack levels used: 1
  3040 ;; Hardware stack levels required when called: 6
  3041 ;; This function calls:
  3042 ;;		_vfpfcnvrt
  3043 ;; This function is called by:
  3044 ;;		_sprintf
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text8
  3049  004CFA                     __ptext8:
  3050                           	callstack 0
  3051  004CFA                     _vfprintf:
  3052                           	callstack 22
  3053  004CFA                     
  3054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3055  004CFA  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  3056  004CFE  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3057  004D02                     
  3058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3059  004D02  0E00               	movlw	0
  3060  004D04  0100               	movlb	0	; () banked
  3061  004D06  6FEB               	movwf	(_nout+1)& (0+255),b
  3062  004D08  0E00               	movlw	0
  3063  004D0A  6FEA               	movwf	_nout& (0+255),b
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3066  004D0C  EF9B  F026         	goto	l5504
  3067  004D10                     l5502:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3071  004D10  C052  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  3072  004D14  C053  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3073  004D18  0E58               	movlw	low vfprintf@cfmt
  3074  004D1A  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  3075  004D1C  0E00               	movlw	high vfprintf@cfmt
  3076  004D1E  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3077  004D20  C056  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  3078  004D24  C057  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3079  004D28  ECA7  F012         	call	_vfpfcnvrt	;wreg free
  3080  004D2C  5048               	movf	?_vfpfcnvrt^0,w,c
  3081  004D2E  0100               	movlb	0	; () banked
  3082  004D30  27EA               	addwf	_nout& (0+255),f,b
  3083  004D32  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  3084  004D34  23EB               	addwfc	(_nout+1)& (0+255),f,b
  3085  004D36                     l5504:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3089  004D36  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  3090  004D3A  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3091  004D3E                     	if	0	;tblptru may be non-zero
  3092  004D3E                     	endif
  3093  004D3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3094  004D3E  0E00               	movlw	low (__mediumconst shr (0+16))
  3095  004D40  6EF8               	movwf	tblptru,c
  3096  004D42                     	endif
  3097  004D42  0008               	tblrd		*
  3098  004D44  50F5               	movf	tablat,w,c
  3099  004D46  0900               	iorlw	0
  3100  004D48  A4D8               	btfss	status,2,c
  3101  004D4A  EFA9  F026         	goto	u6711
  3102  004D4E  EFAB  F026         	goto	u6710
  3103  004D52                     u6711:
  3104  004D52  EF88  F026         	goto	l5502
  3105  004D56                     u6710:
  3106  004D56                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3109  004D56  C0EA  F052         	movff	_nout,?_vfprintf
  3110  004D5A  C0EB  F053         	movff	_nout+1,?_vfprintf+1
  3111  004D5E                     
  3112                           ; BSR set to: 0
  3113  004D5E  0012               	return		;funcret
  3114  004D60                     __end_of_vfprintf:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _vfpfcnvrt *****************
  3118 ;; Defined at:
  3119 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  3122 ;;		 -> sprintf@f(6), 
  3123 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  3124 ;;		 -> vfprintf@cfmt(2), 
  3125 ;;  ap              2   75[COMRAM] PTR PTR void 
  3126 ;;		 -> sprintf@ap(2), 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  ll              8   56[BANK0 ] long long 
  3129 ;;  llu             8    0        unsigned long long 
  3130 ;;  f               4   70[BANK0 ] unsigned long long 
  3131 ;;  ct              3   74[BANK0 ] unsigned char [3]
  3132 ;;  vp              3    0        PTR void 
  3133 ;;  cp              2   64[BANK0 ] PTR unsigned char 
  3134 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(11), 
  3135 ;;		 -> STR_12(7), STR_10(5), STR_8(7), STR_6(5), 
  3136 ;;		 -> STR_4(6), STR_2(4), 
  3137 ;;  i               2    0        int 
  3138 ;;  done            2    0        int 
  3139 ;;  c               1   77[BANK0 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  2   71[COMRAM] int 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3149 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;Total ram usage:       32 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 5
  3156 ;; This function calls:
  3157 ;;		_atoi
  3158 ;;		_dtoa
  3159 ;;		_efgtoa
  3160 ;;		_fputc
  3161 ;;		_isdigit
  3162 ;;		_isupper
  3163 ;;		_stoa
  3164 ;;		_strncmp
  3165 ;;		_tolower
  3166 ;; This function is called by:
  3167 ;;		_vfprintf
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text9
  3172  00254E                     __ptext9:
  3173                           	callstack 0
  3174  00254E                     _vfpfcnvrt:
  3175                           	callstack 22
  3176  00254E                     
  3177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3178  00254E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3179  002552  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3180  002556  CFDE FFF6          	movff	postinc2,tblptrl
  3181  00255A  CFDD FFF7          	movff	postdec2,tblptrh
  3182  00255E                     	if	0	;tblptru may be non-zero
  3183  00255E                     	endif
  3184  00255E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3185  00255E  0E00               	movlw	low (__mediumconst shr (0+16))
  3186  002560  6EF8               	movwf	tblptru,c
  3187  002562                     	endif
  3188  002562  0008               	tblrd		*
  3189  002564  50F5               	movf	tablat,w,c
  3190  002566  0A25               	xorlw	37
  3191  002568  A4D8               	btfss	status,2,c
  3192  00256A  EFB9  F012         	goto	u6491
  3193  00256E  EFBB  F012         	goto	u6490
  3194  002572                     u6491:
  3195  002572  EF7D  F015         	goto	l5450
  3196  002576                     u6490:
  3197  002576                     
  3198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3199  002576  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3200  00257A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3201  00257E  2ADE               	incf	postinc2,f,c
  3202  002580  0E00               	movlw	0
  3203  002582  22DD               	addwfc	postdec2,f,c
  3204  002584                     
  3205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3206  002584  0E00               	movlw	0
  3207  002586  0100               	movlb	0	; () banked
  3208  002588  6FED               	movwf	(_width+1)& (0+255),b
  3209  00258A  0E00               	movlw	0
  3210  00258C  6FEC               	movwf	_width& (0+255),b
  3211  00258E  C0EC  F0F0         	movff	_width,_flags
  3212  002592  C0ED  F0F1         	movff	_width+1,_flags+1
  3213  002596                     
  3214                           ; BSR set to: 0
  3215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3216  002596  69EE               	setf	_prec& (0+255),b
  3217  002598  69EF               	setf	(_prec+1)& (0+255),b
  3218  00259A                     
  3219                           ; BSR set to: 0
  3220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3221  00259A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3222  00259E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3223  0025A2  CFDE FFF6          	movff	postinc2,tblptrl
  3224  0025A6  CFDD FFF7          	movff	postdec2,tblptrh
  3225  0025AA                     	if	0	;tblptru may be non-zero
  3226  0025AA                     	endif
  3227  0025AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3228  0025AA  0E00               	movlw	low (__mediumconst shr (0+16))
  3229  0025AC  6EF8               	movwf	tblptru,c
  3230  0025AE                     	endif
  3231  0025AE  0008               	tblrd		*
  3232  0025B0  50F5               	movf	tablat,w,c
  3233  0025B2  0A2E               	xorlw	46
  3234  0025B4  A4D8               	btfss	status,2,c
  3235  0025B6  EFDF  F012         	goto	u6501
  3236  0025BA  EFE1  F012         	goto	u6500
  3237  0025BE                     u6501:
  3238  0025BE  EF63  F013         	goto	l5378
  3239  0025C2                     u6500:
  3240  0025C2                     
  3241                           ; BSR set to: 0
  3242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3243  0025C2  0E00               	movlw	0
  3244  0025C4  6FEF               	movwf	(_prec+1)& (0+255),b
  3245  0025C6  0E00               	movlw	0
  3246  0025C8  6FEE               	movwf	_prec& (0+255),b
  3247  0025CA                     
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3250  0025CA  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3251  0025CE  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3252  0025D2  2ADE               	incf	postinc2,f,c
  3253  0025D4  0E00               	movlw	0
  3254  0025D6  22DD               	addwfc	postdec2,f,c
  3255  0025D8                     
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3258  0025D8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3259  0025DC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3260  0025E0  CFDE FFF6          	movff	postinc2,tblptrl
  3261  0025E4  CFDD FFF7          	movff	postdec2,tblptrh
  3262  0025E8                     	if	0	;tblptru may be non-zero
  3263  0025E8                     	endif
  3264  0025E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3265  0025E8  0E00               	movlw	low (__mediumconst shr (0+16))
  3266  0025EA  6EF8               	movwf	tblptru,c
  3267  0025EC                     	endif
  3268  0025EC  0008               	tblrd		*
  3269  0025EE  50F5               	movf	tablat,w,c
  3270  0025F0  0A2A               	xorlw	42
  3271  0025F2  A4D8               	btfss	status,2,c
  3272  0025F4  EFFE  F012         	goto	u6511
  3273  0025F8  EF00  F013         	goto	u6510
  3274  0025FC                     u6511:
  3275  0025FC  EF1D  F013         	goto	l5368
  3276  002600                     u6510:
  3277  002600                     
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3280  002600  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3281  002604  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3282  002608  2ADE               	incf	postinc2,f,c
  3283  00260A  0E00               	movlw	0
  3284  00260C  22DD               	addwfc	postdec2,f,c
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3287  00260E  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3288  002612  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3289  002616  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3290  00261A  0E02               	movlw	2
  3291  00261C  26DE               	addwf	postinc2,f,c
  3292  00261E  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3293  002622  0E00               	movlw	0
  3294  002624  22DD               	addwfc	postdec2,f,c
  3295  002626  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3296  00262A  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3297  00262E  CFDE F0EE          	movff	postinc2,_prec
  3298  002632  CFDD F0EF          	movff	postdec2,_prec+1
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3301  002636  EF63  F013         	goto	l5378
  3302  00263A                     l5368:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3306  00263A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3307  00263E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3308  002642  CFDE F008          	movff	postinc2,atoi@s
  3309  002646  CFDD F009          	movff	postdec2,atoi@s+1
  3310  00264A  EC32  F01F         	call	_atoi	;wreg free
  3311  00264E  C008  F0EE         	movff	?_atoi,_prec
  3312  002652  C009  F0EF         	movff	?_atoi+1,_prec+1
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3315  002656  EF34  F013         	goto	l5372
  3316  00265A                     l5370:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3320  00265A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3321  00265E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3322  002662  2ADE               	incf	postinc2,f,c
  3323  002664  0E00               	movlw	0
  3324  002666  22DD               	addwfc	postdec2,f,c
  3325  002668                     l5372:
  3326  002668  0ED0               	movlw	208
  3327  00266A  6E4E               	movwf	??_vfpfcnvrt^0,c
  3328  00266C  0EFF               	movlw	255
  3329  00266E  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  3330  002670  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3331  002674  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3332  002678  CFDE FFF6          	movff	postinc2,tblptrl
  3333  00267C  CFDD FFF7          	movff	postdec2,tblptrh
  3334  002680                     	if	0	;tblptru may be non-zero
  3335  002680                     	endif
  3336  002680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3337  002680  0E00               	movlw	low (__mediumconst shr (0+16))
  3338  002682  6EF8               	movwf	tblptru,c
  3339  002684                     	endif
  3340  002684  0008               	tblrd		*
  3341  002686  50F5               	movf	tablat,w,c
  3342  002688  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  3343  00268A  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  3344  00268C  504E               	movf	??_vfpfcnvrt^0,w,c
  3345  00268E  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3346  002690  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  3347  002692  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3348  002694  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  3349  002696  E10A               	bnz	u6520
  3350  002698  0E0A               	movlw	10
  3351  00269A  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3352  00269C  A0D8               	btfss	status,0,c
  3353  00269E  EF53  F013         	goto	u6521
  3354  0026A2  EF56  F013         	goto	u6520
  3355  0026A6                     u6521:
  3356  0026A6  0E01               	movlw	1
  3357  0026A8  EF57  F013         	goto	u6530
  3358  0026AC                     u6520:
  3359  0026AC  0E00               	movlw	0
  3360  0026AE                     u6530:
  3361  0026AE  0100               	movlb	0	; () banked
  3362  0026B0  6FA2               	movwf	_vfpfcnvrt$2997& (0+255),b
  3363  0026B2  6BA3               	clrf	(_vfpfcnvrt$2997+1)& (0+255),b
  3364  0026B4                     
  3365                           ; BSR set to: 0
  3366  0026B4  51A2               	movf	_vfpfcnvrt$2997& (0+255),w,b
  3367  0026B6  11A3               	iorwf	(_vfpfcnvrt$2997+1)& (0+255),w,b
  3368  0026B8  A4D8               	btfss	status,2,c
  3369  0026BA  EF61  F013         	goto	u6541
  3370  0026BE  EF63  F013         	goto	u6540
  3371  0026C2                     u6541:
  3372  0026C2  EF2D  F013         	goto	l5370
  3373  0026C6                     u6540:
  3374  0026C6                     l5378:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3378  0026C6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3379  0026CA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3380  0026CE  CFDE FFF6          	movff	postinc2,tblptrl
  3381  0026D2  CFDD FFF7          	movff	postdec2,tblptrh
  3382  0026D6                     	if	0	;tblptru may be non-zero
  3383  0026D6                     	endif
  3384  0026D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3385  0026D6  0E00               	movlw	low (__mediumconst shr (0+16))
  3386  0026D8  6EF8               	movwf	tblptru,c
  3387  0026DA                     	endif
  3388  0026DA  0008               	tblrd		*
  3389  0026DC  50F5               	movf	tablat,w,c
  3390  0026DE  6E07               	movwf	tolower@c^0,c
  3391  0026E0  6A08               	clrf	(tolower@c+1)^0,c
  3392  0026E2  ECB0  F026         	call	_tolower	;wreg free
  3393  0026E6  5007               	movf	?_tolower^0,w,c
  3394  0026E8  0100               	movlb	0	; () banked
  3395  0026EA  6FAA               	movwf	vfpfcnvrt@ct& (0+255),b
  3396  0026EC                     
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3399  0026EC  51AA               	movf	vfpfcnvrt@ct& (0+255),w,b
  3400  0026EE  B4D8               	btfsc	status,2,c
  3401  0026F0  EF7C  F013         	goto	u6551
  3402  0026F4  EF7E  F013         	goto	u6550
  3403  0026F8                     u6551:
  3404  0026F8  EFBC  F013         	goto	l5388
  3405  0026FC                     u6550:
  3406  0026FC                     
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3409  0026FC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3410  002700  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3411  002704  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  3412  002708  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  3413  00270C  0E01               	movlw	1
  3414  00270E  264E               	addwf	??_vfpfcnvrt^0,f,c
  3415  002710  0E00               	movlw	0
  3416  002712  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3417  002714  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3418  002718  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3419  00271C                     	if	0	;tblptru may be non-zero
  3420  00271C                     	endif
  3421  00271C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3422  00271C  0E00               	movlw	low (__mediumconst shr (0+16))
  3423  00271E  6EF8               	movwf	tblptru,c
  3424  002720                     	endif
  3425  002720  0008               	tblrd		*
  3426  002722  50F5               	movf	tablat,w,c
  3427  002724  6E07               	movwf	tolower@c^0,c
  3428  002726  6A08               	clrf	(tolower@c+1)^0,c
  3429  002728  ECB0  F026         	call	_tolower	;wreg free
  3430  00272C  5007               	movf	?_tolower^0,w,c
  3431  00272E  0100               	movlb	0	; () banked
  3432  002730  6FAB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3433  002732                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3436  002732  51AB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3437  002734  B4D8               	btfsc	status,2,c
  3438  002736  EF9F  F013         	goto	u6561
  3439  00273A  EFA1  F013         	goto	u6560
  3440  00273E                     u6561:
  3441  00273E  EFBC  F013         	goto	l5388
  3442  002742                     u6560:
  3443  002742                     
  3444                           ; BSR set to: 0
  3445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3446  002742  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3447  002746  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3448  00274A  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  3449  00274E  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  3450  002752  0E02               	movlw	2
  3451  002754  264E               	addwf	??_vfpfcnvrt^0,f,c
  3452  002756  0E00               	movlw	0
  3453  002758  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3454  00275A  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3455  00275E  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3456  002762                     	if	0	;tblptru may be non-zero
  3457  002762                     	endif
  3458  002762                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3459  002762  0E00               	movlw	low (__mediumconst shr (0+16))
  3460  002764  6EF8               	movwf	tblptru,c
  3461  002766                     	endif
  3462  002766  0008               	tblrd		*
  3463  002768  50F5               	movf	tablat,w,c
  3464  00276A  6E07               	movwf	tolower@c^0,c
  3465  00276C  6A08               	clrf	(tolower@c+1)^0,c
  3466  00276E  ECB0  F026         	call	_tolower	;wreg free
  3467  002772  5007               	movf	?_tolower^0,w,c
  3468  002774  0100               	movlb	0	; () banked
  3469  002776  6FAC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3470  002778                     l5388:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3474  002778  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3475  00277C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3476  002780  CFDE FFF6          	movff	postinc2,tblptrl
  3477  002784  CFDD FFF7          	movff	postdec2,tblptrh
  3478  002788                     	if	0	;tblptru may be non-zero
  3479  002788                     	endif
  3480  002788                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3481  002788  0E00               	movlw	low (__mediumconst shr (0+16))
  3482  00278A  6EF8               	movwf	tblptru,c
  3483  00278C                     	endif
  3484  00278C  0008               	tblrd		*
  3485  00278E  50F5               	movf	tablat,w,c
  3486  002790  0A64               	xorlw	100
  3487  002792  B4D8               	btfsc	status,2,c
  3488  002794  EFCE  F013         	goto	u6571
  3489  002798  EFD0  F013         	goto	u6570
  3490  00279C                     u6571:
  3491  00279C  EFE4  F013         	goto	l5392
  3492  0027A0                     u6570:
  3493  0027A0                     
  3494                           ; BSR set to: 0
  3495  0027A0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3496  0027A4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3497  0027A8  CFDE FFF6          	movff	postinc2,tblptrl
  3498  0027AC  CFDD FFF7          	movff	postdec2,tblptrh
  3499  0027B0                     	if	0	;tblptru may be non-zero
  3500  0027B0                     	endif
  3501  0027B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3502  0027B0  0E00               	movlw	low (__mediumconst shr (0+16))
  3503  0027B2  6EF8               	movwf	tblptru,c
  3504  0027B4                     	endif
  3505  0027B4  0008               	tblrd		*
  3506  0027B6  50F5               	movf	tablat,w,c
  3507  0027B8  0A69               	xorlw	105
  3508  0027BA  A4D8               	btfss	status,2,c
  3509  0027BC  EFE2  F013         	goto	u6581
  3510  0027C0  EFE4  F013         	goto	u6580
  3511  0027C4                     u6581:
  3512  0027C4  EF24  F014         	goto	l5398
  3513  0027C8                     u6580:
  3514  0027C8                     l5392:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3518  0027C8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3519  0027CC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3520  0027D0  2ADE               	incf	postinc2,f,c
  3521  0027D2  0E00               	movlw	0
  3522  0027D4  22DD               	addwfc	postdec2,f,c
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3525  0027D6  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3526  0027DA  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3527  0027DE  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3528  0027E2  0E02               	movlw	2
  3529  0027E4  26DE               	addwf	postinc2,f,c
  3530  0027E6  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3531  0027EA  0E00               	movlw	0
  3532  0027EC  22DD               	addwfc	postdec2,f,c
  3533  0027EE  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3534  0027F2  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3535  0027F6  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  3536  0027FA  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  3537  0027FE  0E00               	movlw	0
  3538  002800  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3539  002802  0EFF               	movlw	-1
  3540  002804  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3541  002806  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3542  002808  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3543  00280A  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3544  00280C  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3545  00280E  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3546  002810                     
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3549  002810  C048  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3550  002814  C049  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3551  002818  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3552  00281C  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3553  002820  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3554  002824  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3555  002828  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3556  00282C  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3557  002830  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3558  002834  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3559  002838  ECDD  F01B         	call	_dtoa	;wreg free
  3560  00283C  C01C  F048         	movff	?_dtoa,?_vfpfcnvrt
  3561  002840  C01D  F049         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3562  002844  EF9A  F015         	goto	l1521
  3563  002848                     l5398:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3567  002848  0E66               	movlw	102
  3568  00284A  19AA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3569  00284C  A4D8               	btfss	status,2,c
  3570  00284E  EF2B  F014         	goto	u6591
  3571  002852  EF2D  F014         	goto	u6590
  3572  002856                     u6591:
  3573  002856  EF6F  F014         	goto	l5410
  3574  00285A                     u6590:
  3575  00285A                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3578  00285A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3579  00285E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3580  002862  CFDE FFF6          	movff	postinc2,tblptrl
  3581  002866  CFDD FFF7          	movff	postdec2,tblptrh
  3582  00286A                     	if	0	;tblptru may be non-zero
  3583  00286A                     	endif
  3584  00286A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3585  00286A  0E00               	movlw	low (__mediumconst shr (0+16))
  3586  00286C  6EF8               	movwf	tblptru,c
  3587  00286E                     	endif
  3588  00286E  0008               	tblrd		*
  3589  002870  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  3590  002874                     
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3593  002874  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3594  002878  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3595  00287C  2ADE               	incf	postinc2,f,c
  3596  00287E  0E00               	movlw	0
  3597  002880  22DD               	addwfc	postdec2,f,c
  3598  002882                     
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3601  002882  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3602  002886  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3603  00288A  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3604  00288E  0E04               	movlw	4
  3605  002890  26DE               	addwf	postinc2,f,c
  3606  002892  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3607  002896  0E00               	movlw	0
  3608  002898  22DD               	addwfc	postdec2,f,c
  3609  00289A  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3610  00289E  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3611  0028A2  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  3612  0028A6  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  3613  0028AA  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  3614  0028AE  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  3615  0028B2                     l5406:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3619  0028B2  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  3620  0028B6  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3621  0028BA  C0A6  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  3622  0028BE  C0A7  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3623  0028C2  C0A8  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3624  0028C6  C0A9  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3625  0028CA  C0AD  F042         	movff	vfpfcnvrt@c,efgtoa@c
  3626  0028CE  EC46  F007         	call	_efgtoa	;wreg free
  3627  0028D2  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  3628  0028D6  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3629  0028DA  EF9A  F015         	goto	l1521
  3630  0028DE                     l5410:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3634  0028DE  0EAA               	movlw	low vfpfcnvrt@ct
  3635  0028E0  6E01               	movwf	strncmp@_l^0,c
  3636  0028E2  0E00               	movlw	high vfpfcnvrt@ct
  3637  0028E4  6E02               	movwf	(strncmp@_l+1)^0,c
  3638  0028E6  0E87               	movlw	low STR_27
  3639  0028E8  6E03               	movwf	strncmp@_r^0,c
  3640  0028EA  0E0E               	movlw	high STR_27
  3641  0028EC  6E04               	movwf	(strncmp@_r+1)^0,c
  3642  0028EE  0E00               	movlw	0
  3643  0028F0  6E06               	movwf	(strncmp@n+1)^0,c
  3644  0028F2  0E02               	movlw	2
  3645  0028F4  6E05               	movwf	strncmp@n^0,c
  3646  0028F6  ECCD  F023         	call	_strncmp	;wreg free
  3647  0028FA  5001               	movf	?_strncmp^0,w,c
  3648  0028FC  1002               	iorwf	(?_strncmp+1)^0,w,c
  3649  0028FE  A4D8               	btfss	status,2,c
  3650  002900  EF84  F014         	goto	u6601
  3651  002904  EF86  F014         	goto	u6600
  3652  002908                     u6601:
  3653  002908  EF06  F015         	goto	l5426
  3654  00290C                     u6600:
  3655  00290C                     
  3656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3657  00290C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3658  002910  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3659  002914  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  3660  002918  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  3661  00291C  0E01               	movlw	1
  3662  00291E  264E               	addwf	??_vfpfcnvrt^0,f,c
  3663  002920  0E00               	movlw	0
  3664  002922  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3665  002924  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3666  002928  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3667  00292C                     	if	0	;tblptru may be non-zero
  3668  00292C                     	endif
  3669  00292C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3670  00292C  0E00               	movlw	low (__mediumconst shr (0+16))
  3671  00292E  6EF8               	movwf	tblptru,c
  3672  002930                     	endif
  3673  002930  0008               	tblrd		*
  3674  002932  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  3675  002936  0EBF               	movlw	191
  3676  002938  6E4E               	movwf	??_vfpfcnvrt^0,c
  3677  00293A  0EFF               	movlw	255
  3678  00293C  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  3679  00293E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3680  002942  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3681  002946  CFDE FFF6          	movff	postinc2,tblptrl
  3682  00294A  CFDD FFF7          	movff	postdec2,tblptrh
  3683  00294E                     	if	0	;tblptru may be non-zero
  3684  00294E                     	endif
  3685  00294E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3686  00294E  0E00               	movlw	low (__mediumconst shr (0+16))
  3687  002950  6EF8               	movwf	tblptru,c
  3688  002952                     	endif
  3689  002952  0008               	tblrd		*
  3690  002954  50F5               	movf	tablat,w,c
  3691  002956  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  3692  002958  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  3693  00295A  504E               	movf	??_vfpfcnvrt^0,w,c
  3694  00295C  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3695  00295E  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  3696  002960  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3697  002962  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  3698  002964  E10A               	bnz	u6610
  3699  002966  0E1A               	movlw	26
  3700  002968  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3701  00296A  A0D8               	btfss	status,0,c
  3702  00296C  EFBA  F014         	goto	u6611
  3703  002970  EFBD  F014         	goto	u6610
  3704  002974                     u6611:
  3705  002974  0E01               	movlw	1
  3706  002976  EFBE  F014         	goto	u6620
  3707  00297A                     u6610:
  3708  00297A  0E00               	movlw	0
  3709  00297C                     u6620:
  3710  00297C  0100               	movlb	0	; () banked
  3711  00297E  6FA4               	movwf	_vfpfcnvrt$3002& (0+255),b
  3712  002980  6BA5               	clrf	(_vfpfcnvrt$3002+1)& (0+255),b
  3713  002982                     
  3714                           ; BSR set to: 0
  3715  002982  51A4               	movf	_vfpfcnvrt$3002& (0+255),w,b
  3716  002984  11A5               	iorwf	(_vfpfcnvrt$3002+1)& (0+255),w,b
  3717  002986  B4D8               	btfsc	status,2,c
  3718  002988  EFC8  F014         	goto	u6631
  3719  00298C  EFCA  F014         	goto	u6630
  3720  002990                     u6631:
  3721  002990  EFE4  F014         	goto	l5420
  3722  002994                     u6630:
  3723  002994                     
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3726  002994  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3727  002998  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3728  00299C  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3729  0029A0  0E04               	movlw	4
  3730  0029A2  26DE               	addwf	postinc2,f,c
  3731  0029A4  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3732  0029A8  0E00               	movlw	0
  3733  0029AA  22DD               	addwfc	postdec2,f,c
  3734  0029AC  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3735  0029B0  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3736  0029B4  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  3737  0029B8  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  3738  0029BC  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  3739  0029C0  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  3740                           
  3741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3742  0029C4  EFFC  F014         	goto	l1529
  3743  0029C8                     l5420:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3747  0029C8  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3748  0029CC  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3749  0029D0  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3750  0029D4  0E04               	movlw	4
  3751  0029D6  26DE               	addwf	postinc2,f,c
  3752  0029D8  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3753  0029DC  0E00               	movlw	0
  3754  0029DE  22DD               	addwfc	postdec2,f,c
  3755  0029E0  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3756  0029E4  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3757  0029E8  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  3758  0029EC  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  3759  0029F0  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  3760  0029F4  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  3761  0029F8                     l1529:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3765  0029F8  0E02               	movlw	2
  3766  0029FA  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3767  0029FE  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3768  002A02  26DE               	addwf	postinc2,f,c
  3769  002A04  0E00               	movlw	0
  3770  002A06  22DD               	addwfc	postdec2,f,c
  3771  002A08  EF59  F014         	goto	l5406
  3772  002A0C                     l5426:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  3775  002A0C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3776  002A10  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3777  002A14  CFDE FFF6          	movff	postinc2,tblptrl
  3778  002A18  CFDD FFF7          	movff	postdec2,tblptrh
  3779  002A1C                     	if	0	;tblptru may be non-zero
  3780  002A1C                     	endif
  3781  002A1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3782  002A1C  0E00               	movlw	low (__mediumconst shr (0+16))
  3783  002A1E  6EF8               	movwf	tblptru,c
  3784  002A20                     	endif
  3785  002A20  0008               	tblrd		*
  3786  002A22  50F5               	movf	tablat,w,c
  3787  002A24  0A73               	xorlw	115
  3788  002A26  A4D8               	btfss	status,2,c
  3789  002A28  EF18  F015         	goto	u6641
  3790  002A2C  EF1A  F015         	goto	u6640
  3791  002A30                     u6641:
  3792  002A30  EF45  F015         	goto	l5434
  3793  002A34                     u6640:
  3794  002A34                     
  3795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  3796  002A34  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3797  002A38  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3798  002A3C  2ADE               	incf	postinc2,f,c
  3799  002A3E  0E00               	movlw	0
  3800  002A40  22DD               	addwfc	postdec2,f,c
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3803  002A42  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3804  002A46  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3805  002A4A  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3806  002A4E  0E02               	movlw	2
  3807  002A50  26DE               	addwf	postinc2,f,c
  3808  002A52  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3809  002A56  0E00               	movlw	0
  3810  002A58  22DD               	addwfc	postdec2,f,c
  3811  002A5A  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3812  002A5E  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3813  002A62  CFDE F0A0          	movff	postinc2,vfpfcnvrt@cp
  3814  002A66  CFDD F0A1          	movff	postdec2,vfpfcnvrt@cp+1
  3815  002A6A                     
  3816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  3817  002A6A  C048  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3818  002A6E  C049  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3819  002A72  C0A0  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3820  002A76  C0A1  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3821  002A7A  EC04  F020         	call	_stoa	;wreg free
  3822  002A7E  C00A  F048         	movff	?_stoa,?_vfpfcnvrt
  3823  002A82  C00B  F049         	movff	?_stoa+1,?_vfpfcnvrt+1
  3824  002A86  EF9A  F015         	goto	l1521
  3825  002A8A                     l5434:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3828  002A8A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3829  002A8E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3830  002A92  CFDE FFF6          	movff	postinc2,tblptrl
  3831  002A96  CFDD FFF7          	movff	postdec2,tblptrh
  3832  002A9A                     	if	0	;tblptru may be non-zero
  3833  002A9A                     	endif
  3834  002A9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3835  002A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  3836  002A9C  6EF8               	movwf	tblptru,c
  3837  002A9E                     	endif
  3838  002A9E  0008               	tblrd		*
  3839  002AA0  50F5               	movf	tablat,w,c
  3840  002AA2  0A25               	xorlw	37
  3841  002AA4  A4D8               	btfss	status,2,c
  3842  002AA6  EF57  F015         	goto	u6651
  3843  002AAA  EF59  F015         	goto	u6650
  3844  002AAE                     u6651:
  3845  002AAE  EF70  F015         	goto	l5444
  3846  002AB2                     u6650:
  3847  002AB2                     
  3848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3849  002AB2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3850  002AB6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3851  002ABA  2ADE               	incf	postinc2,f,c
  3852  002ABC  0E00               	movlw	0
  3853  002ABE  22DD               	addwfc	postdec2,f,c
  3854  002AC0                     
  3855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3856  002AC0  0E00               	movlw	0
  3857  002AC2  6E02               	movwf	(fputc@c+1)^0,c
  3858  002AC4  0E25               	movlw	37
  3859  002AC6  6E01               	movwf	fputc@c^0,c
  3860  002AC8  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3861  002ACC  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3862  002AD0  ECA6  F024         	call	_fputc	;wreg free
  3863  002AD4                     l5440:
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3866  002AD4  0E00               	movlw	0
  3867  002AD6  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  3868  002AD8  0E01               	movlw	1
  3869  002ADA  6E48               	movwf	?_vfpfcnvrt^0,c
  3870  002ADC  EF9A  F015         	goto	l1521
  3871  002AE0                     l5444:
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3874  002AE0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3875  002AE4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3876  002AE8  2ADE               	incf	postinc2,f,c
  3877  002AEA  0E00               	movlw	0
  3878  002AEC  22DD               	addwfc	postdec2,f,c
  3879  002AEE                     
  3880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3881  002AEE  0E00               	movlw	0
  3882  002AF0  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  3883  002AF2  0E00               	movlw	0
  3884  002AF4  6E48               	movwf	?_vfpfcnvrt^0,c
  3885  002AF6  EF9A  F015         	goto	l1521
  3886  002AFA                     l5450:
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3889  002AFA  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3890  002AFE  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3891  002B02  CFDE FFF6          	movff	postinc2,tblptrl
  3892  002B06  CFDD FFF7          	movff	postdec2,tblptrh
  3893  002B0A                     	if	0	;tblptru may be non-zero
  3894  002B0A                     	endif
  3895  002B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3896  002B0A  0E00               	movlw	low (__mediumconst shr (0+16))
  3897  002B0C  6EF8               	movwf	tblptru,c
  3898  002B0E                     	endif
  3899  002B0E  0008               	tblrd		*
  3900  002B10  50F5               	movf	tablat,w,c
  3901  002B12  6E01               	movwf	fputc@c^0,c
  3902  002B14  6A02               	clrf	(fputc@c+1)^0,c
  3903  002B16  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3904  002B1A  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3905  002B1E  ECA6  F024         	call	_fputc	;wreg free
  3906  002B22                     
  3907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3908  002B22  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3909  002B26  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3910  002B2A  2ADE               	incf	postinc2,f,c
  3911  002B2C  0E00               	movlw	0
  3912  002B2E  22DD               	addwfc	postdec2,f,c
  3913  002B30  EF6A  F015         	goto	l5440
  3914  002B34                     l1521:
  3915  002B34  0012               	return		;funcret
  3916  002B36                     __end_of_vfpfcnvrt:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _strncmp *****************
  3920 ;; Defined at:
  3921 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3924 ;;		 -> vfpfcnvrt@ct(3), 
  3925 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3926 ;;		 -> STR_29(3), 
  3927 ;;  n               2    4[COMRAM] unsigned int 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3930 ;;		 -> STR_29(3), 
  3931 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3932 ;;		 -> vfpfcnvrt@ct(3), 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2    0[COMRAM] int 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3942 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;Total ram usage:       11 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_vfpfcnvrt
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text10
  3956  00479A                     __ptext10:
  3957                           	callstack 0
  3958  00479A                     _strncmp:
  3959                           	callstack 26
  3960  00479A  C001  F008         	movff	strncmp@_l,strncmp@l
  3961  00479E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3962  0047A2  C003  F00A         	movff	strncmp@_r,strncmp@r
  3963  0047A6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3964  0047AA  0605               	decf	strncmp@n^0,f,c
  3965  0047AC  A0D8               	btfss	status,0,c
  3966  0047AE  0606               	decf	(strncmp@n+1)^0,f,c
  3967  0047B0  2805               	incf	strncmp@n^0,w,c
  3968  0047B2  E106               	bnz	u6421
  3969  0047B4  2806               	incf	(strncmp@n+1)^0,w,c
  3970  0047B6  A4D8               	btfss	status,2,c
  3971  0047B8  EFE0  F023         	goto	u6421
  3972  0047BC  EFE2  F023         	goto	u6420
  3973  0047C0                     u6421:
  3974  0047C0  EFEF  F023         	goto	l5308
  3975  0047C4                     u6420:
  3976  0047C4  0E00               	movlw	0
  3977  0047C6  6E02               	movwf	(?_strncmp+1)^0,c
  3978  0047C8  0E00               	movlw	0
  3979  0047CA  6E01               	movwf	?_strncmp^0,c
  3980  0047CC  EF3D  F024         	goto	l1658
  3981  0047D0                     l5306:
  3982  0047D0  4A08               	infsnz	strncmp@l^0,f,c
  3983  0047D2  2A09               	incf	(strncmp@l+1)^0,f,c
  3984  0047D4  4A0A               	infsnz	strncmp@r^0,f,c
  3985  0047D6  2A0B               	incf	(strncmp@r+1)^0,f,c
  3986  0047D8  0605               	decf	strncmp@n^0,f,c
  3987  0047DA  A0D8               	btfss	status,0,c
  3988  0047DC  0606               	decf	(strncmp@n+1)^0,f,c
  3989  0047DE                     l5308:
  3990  0047DE  C008  FFD9         	movff	strncmp@l,fsr2l
  3991  0047E2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3992  0047E6  50DF               	movf	indf2,w,c
  3993  0047E8  B4D8               	btfsc	status,2,c
  3994  0047EA  EFF9  F023         	goto	u6431
  3995  0047EE  EFFB  F023         	goto	u6430
  3996  0047F2                     u6431:
  3997  0047F2  EF2A  F024         	goto	l5316
  3998  0047F6                     u6430:
  3999  0047F6  C00A  FFF6         	movff	strncmp@r,tblptrl
  4000  0047FA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4001  0047FE                     	if	0	;tblptru may be non-zero
  4002  0047FE                     	endif
  4003  0047FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4004  0047FE  0E00               	movlw	low (__mediumconst shr (0+16))
  4005  004800  6EF8               	movwf	tblptru,c
  4006  004802                     	endif
  4007  004802  0008               	tblrd		*
  4008  004804  50F5               	movf	tablat,w,c
  4009  004806  0900               	iorlw	0
  4010  004808  B4D8               	btfsc	status,2,c
  4011  00480A  EF09  F024         	goto	u6441
  4012  00480E  EF0B  F024         	goto	u6440
  4013  004812                     u6441:
  4014  004812  EF2A  F024         	goto	l5316
  4015  004816                     u6440:
  4016  004816  5005               	movf	strncmp@n^0,w,c
  4017  004818  1006               	iorwf	(strncmp@n+1)^0,w,c
  4018  00481A  B4D8               	btfsc	status,2,c
  4019  00481C  EF12  F024         	goto	u6451
  4020  004820  EF14  F024         	goto	u6450
  4021  004824                     u6451:
  4022  004824  EF2A  F024         	goto	l5316
  4023  004828                     u6450:
  4024  004828  C008  FFD9         	movff	strncmp@l,fsr2l
  4025  00482C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4026  004830  50DF               	movf	indf2,w,c
  4027  004832  6E07               	movwf	??_strncmp^0,c
  4028  004834  C00A  FFF6         	movff	strncmp@r,tblptrl
  4029  004838  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4030  00483C                     	if	0	;tblptru may be non-zero
  4031  00483C                     	endif
  4032  00483C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4033  00483C  0E00               	movlw	low (__mediumconst shr (0+16))
  4034  00483E  6EF8               	movwf	tblptru,c
  4035  004840                     	endif
  4036  004840  0008               	tblrd		*
  4037  004842  50F5               	movf	tablat,w,c
  4038  004844  1807               	xorwf	??_strncmp^0,w,c
  4039  004846  B4D8               	btfsc	status,2,c
  4040  004848  EF28  F024         	goto	u6461
  4041  00484C  EF2A  F024         	goto	u6460
  4042  004850                     u6461:
  4043  004850  EFE8  F023         	goto	l5306
  4044  004854                     u6460:
  4045  004854                     l5316:
  4046  004854  C008  FFD9         	movff	strncmp@l,fsr2l
  4047  004858  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4048  00485C  50DF               	movf	indf2,w,c
  4049  00485E  6E07               	movwf	??_strncmp^0,c
  4050  004860  C00A  FFF6         	movff	strncmp@r,tblptrl
  4051  004864  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4052  004868                     	if	0	;tblptru may be non-zero
  4053  004868                     	endif
  4054  004868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4055  004868  0E00               	movlw	low (__mediumconst shr (0+16))
  4056  00486A  6EF8               	movwf	tblptru,c
  4057  00486C                     	endif
  4058  00486C  0008               	tblrd		*
  4059  00486E  50F5               	movf	tablat,w,c
  4060  004870  5C07               	subwf	??_strncmp^0,w,c
  4061  004872  6E01               	movwf	?_strncmp^0,c
  4062  004874  6A02               	clrf	(?_strncmp+1)^0,c
  4063  004876  A0D8               	btfss	status,0,c
  4064  004878  0602               	decf	(?_strncmp+1)^0,f,c
  4065  00487A                     l1658:
  4066  00487A  0012               	return		;funcret
  4067  00487C                     __end_of_strncmp:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _stoa *****************
  4071 ;; Defined at:
  4072 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4075 ;;		 -> sprintf@f(6), 
  4076 ;;  s               2   11[COMRAM] PTR unsigned char 
  4077 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(11), 
  4078 ;;		 -> STR_12(7), STR_10(5), STR_8(7), STR_6(5), 
  4079 ;;		 -> STR_4(6), STR_2(4), 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  nuls            7   14[COMRAM] unsigned char [7]
  4082 ;;  l               2   29[COMRAM] int 
  4083 ;;  p               2   27[COMRAM] int 
  4084 ;;  cp              2   25[COMRAM] PTR unsigned char 
  4085 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_18(8), STR_16(6), 
  4086 ;;		 -> STR_14(11), STR_12(7), STR_10(5), STR_8(7), 
  4087 ;;		 -> STR_6(5), STR_4(6), STR_2(4), 
  4088 ;;  w               2   23[COMRAM] int 
  4089 ;;  i               2   21[COMRAM] int 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  2    9[COMRAM] int 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4103 ;;Total ram usage:       22 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 2
  4106 ;; This function calls:
  4107 ;;		_fputc
  4108 ;;		_strlen
  4109 ;; This function is called by:
  4110 ;;		_vfpfcnvrt
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text11
  4115  004008                     __ptext11:
  4116                           	callstack 0
  4117  004008                     _stoa:
  4118                           	callstack 24
  4119  004008                     
  4120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  4121  004008  EE21  F0E8         	lfsr	2,stoa@F1163
  4122  00400C  EE10  F00F         	lfsr	1,stoa@nuls
  4123  004010  0E06               	movlw	6
  4124  004012                     u6251:
  4125  004012  CFDB FFE3          	movff	plusw2,plusw1
  4126  004016  06E8               	decf	wreg,f,c
  4127  004018  E2FC               	bc	u6251
  4128  00401A                     
  4129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  4130  00401A  C00C  F01A         	movff	stoa@s,stoa@cp
  4131  00401E  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  4132  004022                     
  4133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  4134  004022  501A               	movf	stoa@cp^0,w,c
  4135  004024  101B               	iorwf	(stoa@cp+1)^0,w,c
  4136  004026  A4D8               	btfss	status,2,c
  4137  004028  EF18  F020         	goto	u6261
  4138  00402C  EF1A  F020         	goto	u6260
  4139  004030                     u6261:
  4140  004030  EF1E  F020         	goto	l5224
  4141  004034                     u6260:
  4142  004034                     
  4143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  4144  004034  0E0F               	movlw	low stoa@nuls
  4145  004036  6E1A               	movwf	stoa@cp^0,c
  4146  004038  0E00               	movlw	high stoa@nuls
  4147  00403A  6E1B               	movwf	(stoa@cp+1)^0,c
  4148  00403C                     l5224:
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  4151  00403C  C01A  F001         	movff	stoa@cp,strlen@s
  4152  004040  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  4153  004044  EC90  F027         	call	_strlen	;wreg free
  4154  004048  C001  F01E         	movff	?_strlen,stoa@l
  4155  00404C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  4156  004050                     
  4157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  4158  004050  C0EE  F01C         	movff	_prec,stoa@p
  4159  004054  C0EF  F01D         	movff	_prec+1,stoa@p+1
  4160  004058                     
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  4162  004058  BE1D               	btfsc	(stoa@p+1)^0,7,c
  4163  00405A  EF31  F020         	goto	u6271
  4164  00405E  EF33  F020         	goto	u6270
  4165  004062                     u6271:
  4166  004062  EF48  F020         	goto	l1488
  4167  004066                     u6270:
  4168  004066  501E               	movf	stoa@l^0,w,c
  4169  004068  5C1C               	subwf	stoa@p^0,w,c
  4170  00406A  501D               	movf	(stoa@p+1)^0,w,c
  4171  00406C  0A80               	xorlw	128
  4172  00406E  6E0E               	movwf	??_stoa^0,c
  4173  004070  501F               	movf	(stoa@l+1)^0,w,c
  4174  004072  0A80               	xorlw	128
  4175  004074  580E               	subwfb	??_stoa^0,w,c
  4176  004076  A0D8               	btfss	status,0,c
  4177  004078  EF40  F020         	goto	u6281
  4178  00407C  EF42  F020         	goto	u6280
  4179  004080                     u6281:
  4180  004080  EF44  F020         	goto	l1486
  4181  004084                     u6280:
  4182  004084  EF48  F020         	goto	l1488
  4183  004088                     l1486:
  4184  004088  C01C  F01E         	movff	stoa@p,stoa@l
  4185  00408C  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  4186  004090                     l1488:
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  4189  004090  C01E  F01C         	movff	stoa@l,stoa@p
  4190  004094  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  4193  004098  C0EC  F018         	movff	_width,stoa@w
  4194  00409C  C0ED  F019         	movff	_width+1,stoa@w+1
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  4197  0040A0  0100               	movlb	0	; () banked
  4198  0040A2  B1F0               	btfsc	_flags& (0+255),0,b
  4199  0040A4  EF56  F020         	goto	u6291
  4200  0040A8  EF58  F020         	goto	u6290
  4201  0040AC                     u6291:
  4202  0040AC  EF75  F020         	goto	l5240
  4203  0040B0                     u6290:
  4204  0040B0  EF66  F020         	goto	l5238
  4205  0040B4                     l5234:
  4206                           
  4207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  4208  0040B4  0E00               	movlw	0
  4209  0040B6  6E02               	movwf	(fputc@c+1)^0,c
  4210  0040B8  0E20               	movlw	32
  4211  0040BA  6E01               	movwf	fputc@c^0,c
  4212  0040BC  C00A  F003         	movff	stoa@fp,fputc@fp
  4213  0040C0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4214  0040C4  ECA6  F024         	call	_fputc	;wreg free
  4215  0040C8                     
  4216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  4217  0040C8  4A1E               	infsnz	stoa@l^0,f,c
  4218  0040CA  2A1F               	incf	(stoa@l+1)^0,f,c
  4219  0040CC                     l5238:
  4220                           
  4221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  4222  0040CC  5018               	movf	stoa@w^0,w,c
  4223  0040CE  5C1E               	subwf	stoa@l^0,w,c
  4224  0040D0  501F               	movf	(stoa@l+1)^0,w,c
  4225  0040D2  0A80               	xorlw	128
  4226  0040D4  6E0E               	movwf	??_stoa^0,c
  4227  0040D6  5019               	movf	(stoa@w+1)^0,w,c
  4228  0040D8  0A80               	xorlw	128
  4229  0040DA  580E               	subwfb	??_stoa^0,w,c
  4230  0040DC  A0D8               	btfss	status,0,c
  4231  0040DE  EF73  F020         	goto	u6301
  4232  0040E2  EF75  F020         	goto	u6300
  4233  0040E6                     u6301:
  4234  0040E6  EF5A  F020         	goto	l5234
  4235  0040EA                     u6300:
  4236  0040EA                     l5240:
  4237                           
  4238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  4239  0040EA  0E00               	movlw	0
  4240  0040EC  6E17               	movwf	(stoa@i+1)^0,c
  4241  0040EE  0E00               	movlw	0
  4242  0040F0  6E16               	movwf	stoa@i^0,c
  4243                           
  4244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4245  0040F2  EF9A  F020         	goto	l5248
  4246  0040F6                     l5242:
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  4249  0040F6  C01A  FFF6         	movff	stoa@cp,tblptrl
  4250  0040FA  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  4251  0040FE  0E00               	movlw	low (__smallconst shr (0+16))
  4252  004100  6EF8               	movwf	tblptru,c
  4253  004102  0E0D               	movlw	(high __ramtop+-1)
  4254  004104  64F7               	cpfsgt	tblptrh,c
  4255  004106  D003               	bra	u6317
  4256  004108  0008               	tblrd		*
  4257  00410A  50F5               	movf	tablat,w,c
  4258  00410C  D005               	bra	u6310
  4259  00410E                     u6317:
  4260  00410E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4261  004112  CFF7 FFEA          	movff	tblptrh,fsr0h
  4262  004116  50EF               	movf	indf0,w,c
  4263  004118                     u6310:
  4264  004118  6E0E               	movwf	??_stoa^0,c
  4265  00411A  500E               	movf	??_stoa^0,w,c
  4266  00411C  6E01               	movwf	fputc@c^0,c
  4267  00411E  6A02               	clrf	(fputc@c+1)^0,c
  4268  004120  C00A  F003         	movff	stoa@fp,fputc@fp
  4269  004124  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4270  004128  ECA6  F024         	call	_fputc	;wreg free
  4271  00412C                     
  4272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  4273  00412C  4A1A               	infsnz	stoa@cp^0,f,c
  4274  00412E  2A1B               	incf	(stoa@cp+1)^0,f,c
  4275  004130                     
  4276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  4277  004130  4A16               	infsnz	stoa@i^0,f,c
  4278  004132  2A17               	incf	(stoa@i+1)^0,f,c
  4279  004134                     l5248:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4282  004134  501C               	movf	stoa@p^0,w,c
  4283  004136  5C16               	subwf	stoa@i^0,w,c
  4284  004138  5017               	movf	(stoa@i+1)^0,w,c
  4285  00413A  0A80               	xorlw	128
  4286  00413C  6E0E               	movwf	??_stoa^0,c
  4287  00413E  501D               	movf	(stoa@p+1)^0,w,c
  4288  004140  0A80               	xorlw	128
  4289  004142  580E               	subwfb	??_stoa^0,w,c
  4290  004144  A0D8               	btfss	status,0,c
  4291  004146  EFA7  F020         	goto	u6321
  4292  00414A  EFA9  F020         	goto	u6320
  4293  00414E                     u6321:
  4294  00414E  EF7B  F020         	goto	l5242
  4295  004152                     u6320:
  4296  004152                     
  4297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  4298  004152  0100               	movlb	0	; () banked
  4299  004154  A1F0               	btfss	_flags& (0+255),0,b
  4300  004156  EFAF  F020         	goto	u6331
  4301  00415A  EFB1  F020         	goto	u6330
  4302  00415E                     u6331:
  4303  00415E  EFCE  F020         	goto	l1498
  4304  004162                     u6330:
  4305  004162  EFBF  F020         	goto	l5256
  4306  004166                     l5252:
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  4309  004166  0E00               	movlw	0
  4310  004168  6E02               	movwf	(fputc@c+1)^0,c
  4311  00416A  0E20               	movlw	32
  4312  00416C  6E01               	movwf	fputc@c^0,c
  4313  00416E  C00A  F003         	movff	stoa@fp,fputc@fp
  4314  004172  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4315  004176  ECA6  F024         	call	_fputc	;wreg free
  4316  00417A                     
  4317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  4318  00417A  4A1E               	infsnz	stoa@l^0,f,c
  4319  00417C  2A1F               	incf	(stoa@l+1)^0,f,c
  4320  00417E                     l5256:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  4323  00417E  5018               	movf	stoa@w^0,w,c
  4324  004180  5C1E               	subwf	stoa@l^0,w,c
  4325  004182  501F               	movf	(stoa@l+1)^0,w,c
  4326  004184  0A80               	xorlw	128
  4327  004186  6E0E               	movwf	??_stoa^0,c
  4328  004188  5019               	movf	(stoa@w+1)^0,w,c
  4329  00418A  0A80               	xorlw	128
  4330  00418C  580E               	subwfb	??_stoa^0,w,c
  4331  00418E  A0D8               	btfss	status,0,c
  4332  004190  EFCC  F020         	goto	u6341
  4333  004194  EFCE  F020         	goto	u6340
  4334  004198                     u6341:
  4335  004198  EFB3  F020         	goto	l5252
  4336  00419C                     u6340:
  4337  00419C                     l1498:
  4338                           
  4339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  4340  00419C  C01E  F00A         	movff	stoa@l,?_stoa
  4341  0041A0  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  4342  0041A4  0012               	return		;funcret
  4343  0041A6                     __end_of_stoa:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _efgtoa *****************
  4347 ;; Defined at:
  4348 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  4351 ;;		 -> sprintf@f(6), 
  4352 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  4353 ;;  c               1   65[COMRAM] unsigned char 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  u               4   52[BANK0 ] unsigned char 
  4356 ;;  g               4   44[BANK0 ] unsigned char 
  4357 ;;  l               4   38[BANK0 ] unsigned char 
  4358 ;;  h               4   34[BANK0 ] unsigned char 
  4359 ;;  ou              4   20[BANK0 ] unsigned char 
  4360 ;;  n               2   50[BANK0 ] int 
  4361 ;;  e               2   48[BANK0 ] int 
  4362 ;;  i               2   42[BANK0 ] int 
  4363 ;;  w               2   30[BANK0 ] int 
  4364 ;;  p               2   28[BANK0 ] int 
  4365 ;;  sign            2   26[BANK0 ] int 
  4366 ;;  d               2   24[BANK0 ] int 
  4367 ;;  m               2   18[BANK0 ] int 
  4368 ;;  ne              2   16[BANK0 ] int 
  4369 ;;  pp              2   14[BANK0 ] int 
  4370 ;;  t               2   12[BANK0 ] int 
  4371 ;;  mode            1   33[BANK0 ] unsigned char 
  4372 ;;  nmode           1   32[BANK0 ] unsigned char 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  2   59[COMRAM] int 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4382 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;Total ram usage:       68 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; Hardware stack levels required when called: 4
  4389 ;; This function calls:
  4390 ;;		___awdiv
  4391 ;;		___awmod
  4392 ;;		___fladd
  4393 ;;		___fldiv
  4394 ;;		___fleq
  4395 ;;		___flge
  4396 ;;		___flmul
  4397 ;;		___flneg
  4398 ;;		___flsub
  4399 ;;		___fltol
  4400 ;;		___fpclassifyf
  4401 ;;		_floorf
  4402 ;;		_isupper
  4403 ;;		_pad
  4404 ;;		_strcpy
  4405 ;;		_tolower
  4406 ;; This function is called by:
  4407 ;;		_vfpfcnvrt
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text12
  4412  000E8C                     __ptext12:
  4413                           	callstack 0
  4414  000E8C                     _efgtoa:
  4415                           	callstack 22
  4416  000E8C                     
  4417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4418  000E8C  0E00               	movlw	0
  4419  000E8E  0100               	movlb	0	; () banked
  4420  000E90  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4421  000E92  0E00               	movlw	0
  4422  000E94  6F7A               	movwf	efgtoa@sign& (0+255),b
  4423  000E96                     
  4424                           ; BSR set to: 0
  4425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4426  000E96  C03E  F08C         	movff	efgtoa@f,efgtoa@g
  4427  000E9A  C03F  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4428  000E9E  C040  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4429  000EA2  C041  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4430  000EA6                     
  4431                           ; BSR set to: 0
  4432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4433  000EA6  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4434  000EA8  EF5A  F007         	goto	u5710
  4435  000EAC  EF58  F007         	goto	u5711
  4436  000EB0                     u5711:
  4437  000EB0  EF70  F007         	goto	l4918
  4438  000EB4                     u5710:
  4439  000EB4                     
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4442  000EB4  0E00               	movlw	0
  4443  000EB6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4444  000EB8  0E01               	movlw	1
  4445  000EBA  6F7A               	movwf	efgtoa@sign& (0+255),b
  4446  000EBC                     
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4449  000EBC  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4450  000EC0  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4451  000EC4  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4452  000EC8  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4453  000ECC  EC63  F029         	call	___flneg	;wreg free
  4454  000ED0  C001  F08C         	movff	?___flneg,efgtoa@g
  4455  000ED4  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4456  000ED8  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4457  000EDC  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4458  000EE0                     l4918:
  4459                           
  4460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4461  000EE0  0E00               	movlw	0
  4462  000EE2  0100               	movlb	0	; () banked
  4463  000EE4  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4464  000EE6  0E00               	movlw	0
  4465  000EE8  6F92               	movwf	efgtoa@n& (0+255),b
  4466  000EEA                     
  4467                           ; BSR set to: 0
  4468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4469  000EEA  C0EC  F07E         	movff	_width,efgtoa@w
  4470  000EEE  C0ED  F07F         	movff	_width+1,efgtoa@w+1
  4471  000EF2                     
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4474  000EF2  517A               	movf	efgtoa@sign& (0+255),w,b
  4475  000EF4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4476  000EF6  A4D8               	btfss	status,2,c
  4477  000EF8  EF80  F007         	goto	u5721
  4478  000EFC  EF82  F007         	goto	u5720
  4479  000F00                     u5721:
  4480  000F00  EF89  F007         	goto	l4926
  4481  000F04                     u5720:
  4482  000F04                     
  4483                           ; BSR set to: 0
  4484  000F04  A5F0               	btfss	_flags& (0+255),2,b
  4485  000F06  EF87  F007         	goto	u5731
  4486  000F0A  EF89  F007         	goto	u5730
  4487  000F0E                     u5731:
  4488  000F0E  EFA3  F007         	goto	l4938
  4489  000F12                     u5730:
  4490  000F12                     l4926:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4494  000F12  517A               	movf	efgtoa@sign& (0+255),w,b
  4495  000F14  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4496  000F16  A4D8               	btfss	status,2,c
  4497  000F18  EF90  F007         	goto	u5741
  4498  000F1C  EF92  F007         	goto	u5740
  4499  000F20                     u5741:
  4500  000F20  EF98  F007         	goto	l4930
  4501  000F24                     u5740:
  4502  000F24                     
  4503                           ; BSR set to: 0
  4504  000F24  0E00               	movlw	0
  4505  000F26  6F61               	movwf	(_efgtoa$2961+1)& (0+255),b
  4506  000F28  0E2B               	movlw	43
  4507  000F2A  6F60               	movwf	_efgtoa$2961& (0+255),b
  4508  000F2C  EF9C  F007         	goto	l4932
  4509  000F30                     l4930:
  4510                           
  4511                           ; BSR set to: 0
  4512  000F30  0E00               	movlw	0
  4513  000F32  6F61               	movwf	(_efgtoa$2961+1)& (0+255),b
  4514  000F34  0E2D               	movlw	45
  4515  000F36  6F60               	movwf	_efgtoa$2961& (0+255),b
  4516  000F38                     l4932:
  4517                           
  4518                           ; BSR set to: 0
  4519  000F38  C060  F198         	movff	_efgtoa$2961,_dbuf
  4520  000F3C                     
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4523  000F3C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4524  000F3E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4525  000F40                     
  4526                           ; BSR set to: 0
  4527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4528  000F40  077E               	decf	efgtoa@w& (0+255),f,b
  4529  000F42  A0D8               	btfss	status,0,c
  4530  000F44  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4531  000F46                     l4938:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4535  000F46  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4536  000F4A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4537  000F4E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4538  000F52  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4539  000F56  EC4E  F023         	call	___fpclassifyf	;wreg free
  4540  000F5A  0401               	decf	?___fpclassifyf^0,w,c
  4541  000F5C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4542  000F5E  A4D8               	btfss	status,2,c
  4543  000F60  EFB4  F007         	goto	u5751
  4544  000F64  EFB6  F007         	goto	u5750
  4545  000F68                     u5751:
  4546  000F68  EF0D  F008         	goto	l4956
  4547  000F6C                     u5750:
  4548  000F6C  0EBF               	movlw	191
  4549  000F6E  6E43               	movwf	??_efgtoa^0,c
  4550  000F70  0EFF               	movlw	255
  4551  000F72  6E44               	movwf	(??_efgtoa+1)^0,c
  4552  000F74  5042               	movf	efgtoa@c^0,w,c
  4553  000F76  6E45               	movwf	(??_efgtoa+2)^0,c
  4554  000F78  6A46               	clrf	(??_efgtoa+3)^0,c
  4555  000F7A  5043               	movf	??_efgtoa^0,w,c
  4556  000F7C  2645               	addwf	(??_efgtoa+2)^0,f,c
  4557  000F7E  5044               	movf	(??_efgtoa+1)^0,w,c
  4558  000F80  2246               	addwfc	(??_efgtoa+3)^0,f,c
  4559  000F82  5046               	movf	(??_efgtoa+3)^0,w,c
  4560  000F84  E10A               	bnz	u5760
  4561  000F86  0E1A               	movlw	26
  4562  000F88  5C45               	subwf	(??_efgtoa+2)^0,w,c
  4563  000F8A  A0D8               	btfss	status,0,c
  4564  000F8C  EFCA  F007         	goto	u5761
  4565  000F90  EFCD  F007         	goto	u5760
  4566  000F94                     u5761:
  4567  000F94  0E01               	movlw	1
  4568  000F96  EFCE  F007         	goto	u5770
  4569  000F9A                     u5760:
  4570  000F9A  0E00               	movlw	0
  4571  000F9C                     u5770:
  4572  000F9C  0100               	movlb	0	; () banked
  4573  000F9E  6F62               	movwf	_efgtoa$2962& (0+255),b
  4574  000FA0  6B63               	clrf	(_efgtoa$2962+1)& (0+255),b
  4575  000FA2                     
  4576                           ; BSR set to: 0
  4577  000FA2  5162               	movf	_efgtoa$2962& (0+255),w,b
  4578  000FA4  1163               	iorwf	(_efgtoa$2962+1)& (0+255),w,b
  4579  000FA6  B4D8               	btfsc	status,2,c
  4580  000FA8  EFD8  F007         	goto	u5781
  4581  000FAC  EFDA  F007         	goto	u5780
  4582  000FB0                     u5781:
  4583  000FB0  EFE8  F007         	goto	l4948
  4584  000FB4                     u5780:
  4585  000FB4                     
  4586                           ; BSR set to: 0
  4587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4588  000FB4  0E98               	movlw	low _dbuf
  4589  000FB6  2592               	addwf	efgtoa@n& (0+255),w,b
  4590  000FB8  6E01               	movwf	strcpy@dest^0,c
  4591  000FBA  0E01               	movlw	high _dbuf
  4592  000FBC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4593  000FBE  6E02               	movwf	(strcpy@dest+1)^0,c
  4594  000FC0  0E73               	movlw	low STR_19
  4595  000FC2  6E03               	movwf	strcpy@src^0,c
  4596  000FC4  0E0E               	movlw	high STR_19
  4597  000FC6  6E04               	movwf	(strcpy@src+1)^0,c
  4598  000FC8  ECE0  F026         	call	_strcpy	;wreg free
  4599                           
  4600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4601  000FCC  EFF4  F007         	goto	l4950
  4602  000FD0                     l4948:
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4606  000FD0  0E98               	movlw	low _dbuf
  4607  000FD2  2592               	addwf	efgtoa@n& (0+255),w,b
  4608  000FD4  6E01               	movwf	strcpy@dest^0,c
  4609  000FD6  0E01               	movlw	high _dbuf
  4610  000FD8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4611  000FDA  6E02               	movwf	(strcpy@dest+1)^0,c
  4612  000FDC  0E7B               	movlw	low STR_20
  4613  000FDE  6E03               	movwf	strcpy@src^0,c
  4614  000FE0  0E0E               	movlw	high STR_20
  4615  000FE2  6E04               	movwf	(strcpy@src+1)^0,c
  4616  000FE4  ECE0  F026         	call	_strcpy	;wreg free
  4617  000FE8                     l4950:
  4618                           
  4619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4620  000FE8  0100               	movlb	0	; () banked
  4621  000FEA  0EFD               	movlw	253
  4622  000FEC  277E               	addwf	efgtoa@w& (0+255),f,b
  4623  000FEE  0EFF               	movlw	255
  4624  000FF0  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4625  000FF2                     l4952:
  4626                           
  4627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4628  000FF2  C03C  F011         	movff	efgtoa@fp,pad@fp
  4629  000FF6  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  4630  000FFA  0E98               	movlw	low _dbuf
  4631  000FFC  6E13               	movwf	pad@buf^0,c
  4632  000FFE  0E01               	movlw	high _dbuf
  4633  001000  6E14               	movwf	(pad@buf+1)^0,c
  4634  001002  C07E  F015         	movff	efgtoa@w,pad@p
  4635  001006  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  4636  00100A  EC0B  F025         	call	_pad	;wreg free
  4637  00100E  C011  F03C         	movff	?_pad,?_efgtoa
  4638  001012  C012  F03D         	movff	?_pad+1,?_efgtoa+1
  4639  001016  EF71  F00D         	goto	l1404
  4640  00101A                     l4956:
  4641                           
  4642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4643  00101A  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4644  00101E  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4645  001022  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4646  001026  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4647  00102A  EC4E  F023         	call	___fpclassifyf	;wreg free
  4648  00102E  5001               	movf	?___fpclassifyf^0,w,c
  4649  001030  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4650  001032  A4D8               	btfss	status,2,c
  4651  001034  EF1E  F008         	goto	u5791
  4652  001038  EF20  F008         	goto	u5790
  4653  00103C                     u5791:
  4654  00103C  EF60  F008         	goto	l4974
  4655  001040                     u5790:
  4656  001040  0EBF               	movlw	191
  4657  001042  6E43               	movwf	??_efgtoa^0,c
  4658  001044  0EFF               	movlw	255
  4659  001046  6E44               	movwf	(??_efgtoa+1)^0,c
  4660  001048  5042               	movf	efgtoa@c^0,w,c
  4661  00104A  6E45               	movwf	(??_efgtoa+2)^0,c
  4662  00104C  6A46               	clrf	(??_efgtoa+3)^0,c
  4663  00104E  5043               	movf	??_efgtoa^0,w,c
  4664  001050  2645               	addwf	(??_efgtoa+2)^0,f,c
  4665  001052  5044               	movf	(??_efgtoa+1)^0,w,c
  4666  001054  2246               	addwfc	(??_efgtoa+3)^0,f,c
  4667  001056  5046               	movf	(??_efgtoa+3)^0,w,c
  4668  001058  E10A               	bnz	u5800
  4669  00105A  0E1A               	movlw	26
  4670  00105C  5C45               	subwf	(??_efgtoa+2)^0,w,c
  4671  00105E  A0D8               	btfss	status,0,c
  4672  001060  EF34  F008         	goto	u5801
  4673  001064  EF37  F008         	goto	u5800
  4674  001068                     u5801:
  4675  001068  0E01               	movlw	1
  4676  00106A  EF38  F008         	goto	u5810
  4677  00106E                     u5800:
  4678  00106E  0E00               	movlw	0
  4679  001070                     u5810:
  4680  001070  0100               	movlb	0	; () banked
  4681  001072  6F64               	movwf	_efgtoa$2966& (0+255),b
  4682  001074  6B65               	clrf	(_efgtoa$2966+1)& (0+255),b
  4683  001076                     
  4684                           ; BSR set to: 0
  4685  001076  5164               	movf	_efgtoa$2966& (0+255),w,b
  4686  001078  1165               	iorwf	(_efgtoa$2966+1)& (0+255),w,b
  4687  00107A  B4D8               	btfsc	status,2,c
  4688  00107C  EF42  F008         	goto	u5821
  4689  001080  EF44  F008         	goto	u5820
  4690  001084                     u5821:
  4691  001084  EF52  F008         	goto	l4966
  4692  001088                     u5820:
  4693  001088                     
  4694                           ; BSR set to: 0
  4695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4696  001088  0E98               	movlw	low _dbuf
  4697  00108A  2592               	addwf	efgtoa@n& (0+255),w,b
  4698  00108C  6E01               	movwf	strcpy@dest^0,c
  4699  00108E  0E01               	movlw	high _dbuf
  4700  001090  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4701  001092  6E02               	movwf	(strcpy@dest+1)^0,c
  4702  001094  0E77               	movlw	low STR_23
  4703  001096  6E03               	movwf	strcpy@src^0,c
  4704  001098  0E0E               	movlw	high STR_23
  4705  00109A  6E04               	movwf	(strcpy@src+1)^0,c
  4706  00109C  ECE0  F026         	call	_strcpy	;wreg free
  4707                           
  4708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4709  0010A0  EFF4  F007         	goto	l4950
  4710  0010A4                     l4966:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4714  0010A4  0E98               	movlw	low _dbuf
  4715  0010A6  2592               	addwf	efgtoa@n& (0+255),w,b
  4716  0010A8  6E01               	movwf	strcpy@dest^0,c
  4717  0010AA  0E01               	movlw	high _dbuf
  4718  0010AC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4719  0010AE  6E02               	movwf	(strcpy@dest+1)^0,c
  4720  0010B0  0E7F               	movlw	low STR_24
  4721  0010B2  6E03               	movwf	strcpy@src^0,c
  4722  0010B4  0E0E               	movlw	high STR_24
  4723  0010B6  6E04               	movwf	(strcpy@src+1)^0,c
  4724  0010B8  ECE0  F026         	call	_strcpy	;wreg free
  4725  0010BC  EFF4  F007         	goto	l4950
  4726  0010C0                     l4974:
  4727                           
  4728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4729  0010C0  0E00               	movlw	0
  4730  0010C2  0100               	movlb	0	; () banked
  4731  0010C4  6F94               	movwf	efgtoa@u& (0+255),b
  4732  0010C6  0E00               	movlw	0
  4733  0010C8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4734  0010CA  0E80               	movlw	128
  4735  0010CC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4736  0010CE  0E3F               	movlw	63
  4737  0010D0  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4740  0010D2  0E00               	movlw	0
  4741  0010D4  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4742  0010D6  0E00               	movlw	0
  4743  0010D8  6F90               	movwf	efgtoa@e& (0+255),b
  4744  0010DA                     
  4745                           ; BSR set to: 0
  4746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4747  0010DA  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4748  0010DE  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4749  0010E2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4750  0010E6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4751  0010EA  0E00               	movlw	0
  4752  0010EC  6E05               	movwf	___fleq@ff2^0,c
  4753  0010EE  0E00               	movlw	0
  4754  0010F0  6E06               	movwf	(___fleq@ff2+1)^0,c
  4755  0010F2  0E00               	movlw	0
  4756  0010F4  6E07               	movwf	(___fleq@ff2+2)^0,c
  4757  0010F6  0E00               	movlw	0
  4758  0010F8  6E08               	movwf	(___fleq@ff2+3)^0,c
  4759  0010FA  EC28  F026         	call	___fleq	;wreg free
  4760  0010FE  B0D8               	btfsc	status,0,c
  4761  001100  EF84  F008         	goto	u5831
  4762  001104  EF86  F008         	goto	u5830
  4763  001108                     u5831:
  4764  001108  EF09  F009         	goto	l4992
  4765  00110C                     u5830:
  4766  00110C  EFA5  F008         	goto	l4984
  4767  001110                     l4980:
  4768                           
  4769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4770  001110  C094  F001         	movff	efgtoa@u,___flmul@b
  4771  001114  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4772  001118  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4773  00111C  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4774  001120  0E00               	movlw	0
  4775  001122  6E05               	movwf	___flmul@a^0,c
  4776  001124  0E00               	movlw	0
  4777  001126  6E06               	movwf	(___flmul@a+1)^0,c
  4778  001128  0E20               	movlw	32
  4779  00112A  6E07               	movwf	(___flmul@a+2)^0,c
  4780  00112C  0E41               	movlw	65
  4781  00112E  6E08               	movwf	(___flmul@a+3)^0,c
  4782  001130  ECFB  F017         	call	___flmul	;wreg free
  4783  001134  C001  F094         	movff	?___flmul,efgtoa@u
  4784  001138  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  4785  00113C  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  4786  001140  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  4787  001144                     
  4788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4789  001144  0100               	movlb	0	; () banked
  4790  001146  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4791  001148  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4792  00114A                     l4984:
  4793                           
  4794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4795  00114A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4796  00114E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4797  001152  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4798  001156  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4799  00115A  0E00               	movlw	0
  4800  00115C  6E05               	movwf	___flmul@a^0,c
  4801  00115E  0E00               	movlw	0
  4802  001160  6E06               	movwf	(___flmul@a+1)^0,c
  4803  001162  0E20               	movlw	32
  4804  001164  6E07               	movwf	(___flmul@a+2)^0,c
  4805  001166  0E41               	movlw	65
  4806  001168  6E08               	movwf	(___flmul@a+3)^0,c
  4807  00116A  C094  F001         	movff	efgtoa@u,___flmul@b
  4808  00116E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4809  001172  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4810  001176  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4811  00117A  ECFB  F017         	call	___flmul	;wreg free
  4812  00117E  C001  F01E         	movff	?___flmul,___flge@ff2
  4813  001182  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4814  001186  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4815  00118A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4816  00118E  ECCC  F022         	call	___flge	;wreg free
  4817  001192  B0D8               	btfsc	status,0,c
  4818  001194  EFCE  F008         	goto	u5841
  4819  001198  EFD0  F008         	goto	u5840
  4820  00119C                     u5841:
  4821  00119C  EF88  F008         	goto	l4980
  4822  0011A0                     u5840:
  4823  0011A0  EFF0  F008         	goto	l4990
  4824  0011A4                     l4986:
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4827  0011A4  C094  F00F         	movff	efgtoa@u,___fldiv@b
  4828  0011A8  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  4829  0011AC  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  4830  0011B0  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  4831  0011B4  0E00               	movlw	0
  4832  0011B6  6E13               	movwf	___fldiv@a^0,c
  4833  0011B8  0E00               	movlw	0
  4834  0011BA  6E14               	movwf	(___fldiv@a+1)^0,c
  4835  0011BC  0E20               	movlw	32
  4836  0011BE  6E15               	movwf	(___fldiv@a+2)^0,c
  4837  0011C0  0E41               	movlw	65
  4838  0011C2  6E16               	movwf	(___fldiv@a+3)^0,c
  4839  0011C4  EC10  F01A         	call	___fldiv	;wreg free
  4840  0011C8  C00F  F094         	movff	?___fldiv,efgtoa@u
  4841  0011CC  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  4842  0011D0  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  4843  0011D4  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  4844  0011D8                     
  4845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4846  0011D8  0100               	movlb	0	; () banked
  4847  0011DA  0790               	decf	efgtoa@e& (0+255),f,b
  4848  0011DC  A0D8               	btfss	status,0,c
  4849  0011DE  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4850  0011E0                     l4990:
  4851                           
  4852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4853  0011E0  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  4854  0011E4  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4855  0011E8  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4856  0011EC  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4857  0011F0  C094  F01E         	movff	efgtoa@u,___flge@ff2
  4858  0011F4  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4859  0011F8  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4860  0011FC  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4861  001200  ECCC  F022         	call	___flge	;wreg free
  4862  001204  A0D8               	btfss	status,0,c
  4863  001206  EF07  F009         	goto	u5851
  4864  00120A  EF09  F009         	goto	u5850
  4865  00120E                     u5851:
  4866  00120E  EFD2  F008         	goto	l4986
  4867  001212                     u5850:
  4868  001212                     l4992:
  4869                           
  4870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4871  001212  C042  F007         	movff	efgtoa@c,tolower@c
  4872  001216  6A08               	clrf	(tolower@c+1)^0,c
  4873  001218  ECB0  F026         	call	_tolower	;wreg free
  4874  00121C  5007               	movf	?_tolower^0,w,c
  4875  00121E  0100               	movlb	0	; () banked
  4876  001220  6F81               	movwf	efgtoa@mode& (0+255),b
  4877  001222                     
  4878                           ; BSR set to: 0
  4879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4880  001222  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  4881  001226                     
  4882                           ; BSR set to: 0
  4883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4884  001226  0E67               	movlw	103
  4885  001228  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4886  00122A  A4D8               	btfss	status,2,c
  4887  00122C  EF1A  F009         	goto	u5861
  4888  001230  EF1C  F009         	goto	u5860
  4889  001234                     u5861:
  4890  001234  EF42  F009         	goto	l5006
  4891  001238                     u5860:
  4892  001238                     
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4895  001238  51EE               	movf	_prec& (0+255),w,b
  4896  00123A  11EF               	iorwf	(_prec+1)& (0+255),w,b
  4897  00123C  A4D8               	btfss	status,2,c
  4898  00123E  EF23  F009         	goto	u5871
  4899  001242  EF25  F009         	goto	u5870
  4900  001246                     u5871:
  4901  001246  EF29  F009         	goto	l5002
  4902  00124A                     u5870:
  4903  00124A                     
  4904                           ; BSR set to: 0
  4905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4906  00124A  0E00               	movlw	0
  4907  00124C  6FEF               	movwf	(_prec+1)& (0+255),b
  4908  00124E  0E01               	movlw	1
  4909  001250  6FEE               	movwf	_prec& (0+255),b
  4910  001252                     l5002:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4914  001252  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  4915  001254  EF36  F009         	goto	u5880
  4916  001258  51EF               	movf	(_prec+1)& (0+255),w,b
  4917  00125A  E106               	bnz	u5881
  4918  00125C  05EE               	decf	_prec& (0+255),w,b
  4919  00125E  B0D8               	btfsc	status,0,c
  4920  001260  EF34  F009         	goto	u5881
  4921  001264  EF36  F009         	goto	u5880
  4922  001268                     u5881:
  4923  001268  EF3C  F009         	goto	l1422
  4924  00126C                     u5880:
  4925  00126C                     l5004:
  4926                           
  4927                           ; BSR set to: 0
  4928  00126C  0E00               	movlw	0
  4929  00126E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4930  001270  0E06               	movlw	6
  4931  001272  6F7C               	movwf	efgtoa@p& (0+255),b
  4932  001274  EF4B  F009         	goto	l5012
  4933  001278                     l1422:
  4934                           
  4935                           ; BSR set to: 0
  4936  001278  C0EE  F07C         	movff	_prec,efgtoa@p
  4937  00127C  C0EF  F07D         	movff	_prec+1,efgtoa@p+1
  4938  001280  EF4B  F009         	goto	l5012
  4939  001284                     l5006:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4943  001284  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  4944  001286  EF47  F009         	goto	u5891
  4945  00128A  EF49  F009         	goto	u5890
  4946  00128E                     u5891:
  4947  00128E  EF36  F009         	goto	l5004
  4948  001292                     u5890:
  4949  001292  EF3C  F009         	goto	l1422
  4950  001296                     l5012:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4954  001296  0E67               	movlw	103
  4955  001298  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4956  00129A  A4D8               	btfss	status,2,c
  4957  00129C  EF52  F009         	goto	u5901
  4958  0012A0  EF54  F009         	goto	u5900
  4959  0012A4                     u5901:
  4960  0012A4  EF83  F009         	goto	l5022
  4961  0012A8                     u5900:
  4962  0012A8                     
  4963                           ; BSR set to: 0
  4964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4965  0012A8  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4966  0012AA  EF62  F009         	goto	u5910
  4967  0012AE  0EFC               	movlw	252
  4968  0012B0  5D90               	subwf	efgtoa@e& (0+255),w,b
  4969  0012B2  0EFF               	movlw	255
  4970  0012B4  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4971  0012B6  A0D8               	btfss	status,0,c
  4972  0012B8  EF60  F009         	goto	u5911
  4973  0012BC  EF62  F009         	goto	u5910
  4974  0012C0                     u5911:
  4975  0012C0  EF81  F009         	goto	l5020
  4976  0012C4                     u5910:
  4977  0012C4                     
  4978                           ; BSR set to: 0
  4979  0012C4  0EFF               	movlw	255
  4980  0012C6  6E43               	movwf	??_efgtoa^0,c
  4981  0012C8  0EFF               	movlw	255
  4982  0012CA  6E44               	movwf	(??_efgtoa+1)^0,c
  4983  0012CC  C07C  F045         	movff	efgtoa@p,??_efgtoa+2
  4984  0012D0  C07D  F046         	movff	efgtoa@p+1,??_efgtoa+3
  4985  0012D4  5043               	movf	??_efgtoa^0,w,c
  4986  0012D6  2645               	addwf	(??_efgtoa+2)^0,f,c
  4987  0012D8  5044               	movf	(??_efgtoa+1)^0,w,c
  4988  0012DA  2246               	addwfc	(??_efgtoa+3)^0,f,c
  4989  0012DC  5190               	movf	efgtoa@e& (0+255),w,b
  4990  0012DE  5C45               	subwf	(??_efgtoa+2)^0,w,c
  4991  0012E0  5046               	movf	(??_efgtoa+3)^0,w,c
  4992  0012E2  0A80               	xorlw	128
  4993  0012E4  6E47               	movwf	(??_efgtoa+4)^0,c
  4994  0012E6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4995  0012E8  0A80               	xorlw	128
  4996  0012EA  5847               	subwfb	(??_efgtoa+4)^0,w,c
  4997  0012EC  A0D8               	btfss	status,0,c
  4998  0012EE  EF7B  F009         	goto	u5921
  4999  0012F2  EF7D  F009         	goto	u5920
  5000  0012F6                     u5921:
  5001  0012F6  EF81  F009         	goto	l5020
  5002  0012FA                     u5920:
  5003  0012FA                     
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5006  0012FA  0E66               	movlw	102
  5007  0012FC  6F80               	movwf	efgtoa@nmode& (0+255),b
  5008                           
  5009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5010  0012FE  EF83  F009         	goto	l5022
  5011  001302                     l5020:
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5015  001302  0E65               	movlw	101
  5016  001304  6F80               	movwf	efgtoa@nmode& (0+255),b
  5017  001306                     l5022:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5021  001306  C07C  F072         	movff	efgtoa@p,efgtoa@m
  5022  00130A  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  5023  00130E                     
  5024                           ; BSR set to: 0
  5025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5026  00130E  0E67               	movlw	103
  5027  001310  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5028  001312  A4D8               	btfss	status,2,c
  5029  001314  EF8E  F009         	goto	u5931
  5030  001318  EF90  F009         	goto	u5930
  5031  00131C                     u5931:
  5032  00131C  EFA0  F009         	goto	l5030
  5033  001320                     u5930:
  5034  001320                     
  5035                           ; BSR set to: 0
  5036  001320  0E66               	movlw	102
  5037  001322  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5038  001324  A4D8               	btfss	status,2,c
  5039  001326  EF97  F009         	goto	u5941
  5040  00132A  EF99  F009         	goto	u5940
  5041  00132E                     u5941:
  5042  00132E  EFA2  F009         	goto	l5032
  5043  001332                     u5940:
  5044  001332                     
  5045                           ; BSR set to: 0
  5046  001332  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5047  001334  EFA0  F009         	goto	u5950
  5048  001338  EF9E  F009         	goto	u5951
  5049  00133C                     u5951:
  5050  00133C  EFA2  F009         	goto	l5032
  5051  001340                     u5950:
  5052  001340                     l5030:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5056  001340  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5057  001342  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5058  001344                     l5032:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5062  001344  0E66               	movlw	102
  5063  001346  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5064  001348  A4D8               	btfss	status,2,c
  5065  00134A  EFA9  F009         	goto	u5961
  5066  00134E  EFAB  F009         	goto	u5960
  5067  001352                     u5961:
  5068  001352  EFCB  F009         	goto	l5042
  5069  001356                     u5960:
  5070  001356                     
  5071                           ; BSR set to: 0
  5072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5073  001356  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5074  001358  EFB2  F009         	goto	u5970
  5075  00135C  EFB0  F009         	goto	u5971
  5076  001360                     u5971:
  5077  001360  EFBE  F009         	goto	l5038
  5078  001364                     u5970:
  5079  001364                     
  5080                           ; BSR set to: 0
  5081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5082  001364  0E00               	movlw	0
  5083  001366  6F94               	movwf	efgtoa@u& (0+255),b
  5084  001368  0E00               	movlw	0
  5085  00136A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5086  00136C  0E80               	movlw	128
  5087  00136E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5088  001370  0E3F               	movlw	63
  5089  001372  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5090                           
  5091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5092  001374  0E00               	movlw	0
  5093  001376  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5094  001378  0E00               	movlw	0
  5095  00137A  6F90               	movwf	efgtoa@e& (0+255),b
  5096  00137C                     l5038:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5100  00137C  0E67               	movlw	103
  5101  00137E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5102  001380  B4D8               	btfsc	status,2,c
  5103  001382  EFC5  F009         	goto	u5981
  5104  001386  EFC7  F009         	goto	u5980
  5105  00138A                     u5981:
  5106  00138A  EFCB  F009         	goto	l5042
  5107  00138E                     u5980:
  5108  00138E                     
  5109                           ; BSR set to: 0
  5110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5111  00138E  5190               	movf	efgtoa@e& (0+255),w,b
  5112  001390  2772               	addwf	efgtoa@m& (0+255),f,b
  5113  001392  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5114  001394  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5115  001396                     l5042:
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5119  001396  0E00               	movlw	0
  5120  001398  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5121  00139A  0E00               	movlw	0
  5122  00139C  6F8A               	movwf	efgtoa@i& (0+255),b
  5123  00139E                     
  5124                           ; BSR set to: 0
  5125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5126  00139E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5127  0013A2  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5128  0013A6  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5129  0013AA  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5130  0013AE                     
  5131                           ; BSR set to: 0
  5132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5133  0013AE  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5134  0013B2  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5135  0013B6  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5136  0013BA  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5137                           
  5138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5139  0013BE  EF5C  F00A         	goto	l5056
  5140  0013C2                     l5048:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5144  0013C2  C082  F00F         	movff	efgtoa@h,___fldiv@b
  5145  0013C6  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5146  0013CA  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5147  0013CE  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5148  0013D2  C094  F013         	movff	efgtoa@u,___fldiv@a
  5149  0013D6  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5150  0013DA  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5151  0013DE  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5152  0013E2  EC10  F01A         	call	___fldiv	;wreg free
  5153  0013E6  C00F  F028         	movff	?___fldiv,floorf@x
  5154  0013EA  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5155  0013EE  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5156  0013F2  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5157  0013F6  EC4F  F01D         	call	_floorf	;wreg free
  5158  0013FA  C028  F086         	movff	?_floorf,efgtoa@l
  5159  0013FE  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  5160  001402  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  5161  001406  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  5162                           
  5163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5164  00140A  C086  F001         	movff	efgtoa@l,___fltol@f1
  5165  00140E  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5166  001412  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5167  001416  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5168  00141A  EC49  F022         	call	___fltol	;wreg free
  5169  00141E  C001  F078         	movff	?___fltol,efgtoa@d
  5170  001422  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5171  001426                     
  5172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5173  001426  C082  F01A         	movff	efgtoa@h,___flsub@b
  5174  00142A  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5175  00142E  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5176  001432  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5177  001436  C094  F005         	movff	efgtoa@u,___flmul@a
  5178  00143A  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5179  00143E  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5180  001442  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5181  001446  C086  F001         	movff	efgtoa@l,___flmul@b
  5182  00144A  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5183  00144E  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5184  001452  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5185  001456  ECFB  F017         	call	___flmul	;wreg free
  5186  00145A  C001  F01E         	movff	?___flmul,___flsub@a
  5187  00145E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5188  001462  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5189  001466  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5190  00146A  ECA5  F028         	call	___flsub	;wreg free
  5191  00146E  C01A  F082         	movff	?___flsub,efgtoa@h
  5192  001472  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5193  001476  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5194  00147A  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5195  00147E                     
  5196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5197  00147E  C094  F00F         	movff	efgtoa@u,___fldiv@b
  5198  001482  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5199  001486  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5200  00148A  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5201  00148E  0E00               	movlw	0
  5202  001490  6E13               	movwf	___fldiv@a^0,c
  5203  001492  0E00               	movlw	0
  5204  001494  6E14               	movwf	(___fldiv@a+1)^0,c
  5205  001496  0E20               	movlw	32
  5206  001498  6E15               	movwf	(___fldiv@a+2)^0,c
  5207  00149A  0E41               	movlw	65
  5208  00149C  6E16               	movwf	(___fldiv@a+3)^0,c
  5209  00149E  EC10  F01A         	call	___fldiv	;wreg free
  5210  0014A2  C00F  F094         	movff	?___fldiv,efgtoa@u
  5211  0014A6  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  5212  0014AA  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  5213  0014AE  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  5214  0014B2                     
  5215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5216  0014B2  0100               	movlb	0	; () banked
  5217  0014B4  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5218  0014B6  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5219  0014B8                     l5056:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5223  0014B8  5172               	movf	efgtoa@m& (0+255),w,b
  5224  0014BA  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5225  0014BC  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5226  0014BE  0A80               	xorlw	128
  5227  0014C0  6E43               	movwf	??_efgtoa^0,c
  5228  0014C2  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5229  0014C4  0A80               	xorlw	128
  5230  0014C6  5843               	subwfb	??_efgtoa^0,w,c
  5231  0014C8  A0D8               	btfss	status,0,c
  5232  0014CA  EF69  F00A         	goto	u5991
  5233  0014CE  EF6B  F00A         	goto	u5990
  5234  0014D2                     u5991:
  5235  0014D2  EFE1  F009         	goto	l5048
  5236  0014D6                     u5990:
  5237  0014D6                     
  5238                           ; BSR set to: 0
  5239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5240  0014D6  C094  F001         	movff	efgtoa@u,___flmul@b
  5241  0014DA  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5242  0014DE  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5243  0014E2  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5244  0014E6  0E00               	movlw	0
  5245  0014E8  6E05               	movwf	___flmul@a^0,c
  5246  0014EA  0E00               	movlw	0
  5247  0014EC  6E06               	movwf	(___flmul@a+1)^0,c
  5248  0014EE  0EA0               	movlw	160
  5249  0014F0  6E07               	movwf	(___flmul@a+2)^0,c
  5250  0014F2  0E40               	movlw	64
  5251  0014F4  6E08               	movwf	(___flmul@a+3)^0,c
  5252  0014F6  ECFB  F017         	call	___flmul	;wreg free
  5253  0014FA  C001  F086         	movff	?___flmul,efgtoa@l
  5254  0014FE  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  5255  001502  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  5256  001506  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  5257  00150A                     
  5258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5259  00150A  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5260  00150E  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5261  001512  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5262  001516  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5263  00151A  C086  F01E         	movff	efgtoa@l,___flge@ff2
  5264  00151E  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  5265  001522  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  5266  001526  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  5267  00152A  ECCC  F022         	call	___flge	;wreg free
  5268  00152E  B0D8               	btfsc	status,0,c
  5269  001530  EF9C  F00A         	goto	u6001
  5270  001534  EF9E  F00A         	goto	u6000
  5271  001538                     u6001:
  5272  001538  EFA9  F00A         	goto	l5064
  5273  00153C                     u6000:
  5274  00153C                     
  5275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5276  00153C  0E00               	movlw	0
  5277  00153E  0100               	movlb	0	; () banked
  5278  001540  6F86               	movwf	efgtoa@l& (0+255),b
  5279  001542  0E00               	movlw	0
  5280  001544  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5281  001546  0E00               	movlw	0
  5282  001548  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5283  00154A  0E00               	movlw	0
  5284  00154C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5285                           
  5286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5287  00154E  EFD2  F00A         	goto	l5070
  5288  001552                     l5064:
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5291  001552  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5292  001556  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5293  00155A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5294  00155E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5295  001562  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5296  001566  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5297  00156A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5298  00156E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5299  001572  EC28  F026         	call	___fleq	;wreg free
  5300  001576  A0D8               	btfss	status,0,c
  5301  001578  EFC0  F00A         	goto	u6011
  5302  00157C  EFC2  F00A         	goto	u6010
  5303  001580                     u6011:
  5304  001580  EFD2  F00A         	goto	l5070
  5305  001584                     u6010:
  5306  001584  0100               	movlb	0	; () banked
  5307  001586  B178               	btfsc	efgtoa@d& (0+255),0,b
  5308  001588  EFC8  F00A         	goto	u6021
  5309  00158C  EFCA  F00A         	goto	u6020
  5310  001590                     u6021:
  5311  001590  EFD2  F00A         	goto	l5070
  5312  001594                     u6020:
  5313  001594                     
  5314                           ; BSR set to: 0
  5315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5316  001594  0E00               	movlw	0
  5317  001596  6F86               	movwf	efgtoa@l& (0+255),b
  5318  001598  0E00               	movlw	0
  5319  00159A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5320  00159C  0E00               	movlw	0
  5321  00159E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5322  0015A0  0E00               	movlw	0
  5323  0015A2  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5324  0015A4                     l5070:
  5325                           
  5326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5327  0015A4  C08C  F001         	movff	efgtoa@g,___fladd@b
  5328  0015A8  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5329  0015AC  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5330  0015B0  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5331  0015B4  C086  F005         	movff	efgtoa@l,___fladd@a
  5332  0015B8  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5333  0015BC  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5334  0015C0  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5335  0015C4  EC9B  F015         	call	___fladd	;wreg free
  5336  0015C8  C001  F082         	movff	?___fladd,efgtoa@h
  5337  0015CC  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5338  0015D0  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5339  0015D4  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5340  0015D8                     
  5341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5342  0015D8  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5343  0015DC  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5344  0015E0  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5345  0015E4  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5346  0015E8  0E00               	movlw	0
  5347  0015EA  6E05               	movwf	___flmul@a^0,c
  5348  0015EC  0E00               	movlw	0
  5349  0015EE  6E06               	movwf	(___flmul@a+1)^0,c
  5350  0015F0  0E20               	movlw	32
  5351  0015F2  6E07               	movwf	(___flmul@a+2)^0,c
  5352  0015F4  0E41               	movlw	65
  5353  0015F6  6E08               	movwf	(___flmul@a+3)^0,c
  5354  0015F8  C074  F001         	movff	efgtoa@ou,___flmul@b
  5355  0015FC  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5356  001600  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5357  001604  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5358  001608  ECFB  F017         	call	___flmul	;wreg free
  5359  00160C  C001  F01E         	movff	?___flmul,___flge@ff2
  5360  001610  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5361  001614  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5362  001618  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5363  00161C  ECCC  F022         	call	___flge	;wreg free
  5364  001620  A0D8               	btfss	status,0,c
  5365  001622  EF15  F00B         	goto	u6031
  5366  001626  EF17  F00B         	goto	u6030
  5367  00162A                     u6031:
  5368  00162A  EF40  F00B         	goto	l5082
  5369  00162E                     u6030:
  5370  00162E                     
  5371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5372  00162E  0100               	movlb	0	; () banked
  5373  001630  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5374  001632  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5375  001634                     
  5376                           ; BSR set to: 0
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5378  001634  C074  F001         	movff	efgtoa@ou,___flmul@b
  5379  001638  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5380  00163C  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5381  001640  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5382  001644  0E00               	movlw	0
  5383  001646  6E05               	movwf	___flmul@a^0,c
  5384  001648  0E00               	movlw	0
  5385  00164A  6E06               	movwf	(___flmul@a+1)^0,c
  5386  00164C  0E20               	movlw	32
  5387  00164E  6E07               	movwf	(___flmul@a+2)^0,c
  5388  001650  0E41               	movlw	65
  5389  001652  6E08               	movwf	(___flmul@a+3)^0,c
  5390  001654  ECFB  F017         	call	___flmul	;wreg free
  5391  001658  C001  F074         	movff	?___flmul,efgtoa@ou
  5392  00165C  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  5393  001660  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  5394  001664  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  5395  001668                     
  5396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5397  001668  0E66               	movlw	102
  5398  00166A  0100               	movlb	0	; () banked
  5399  00166C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5400  00166E  A4D8               	btfss	status,2,c
  5401  001670  EF3C  F00B         	goto	u6041
  5402  001674  EF3E  F00B         	goto	u6040
  5403  001678                     u6041:
  5404  001678  EF40  F00B         	goto	l5082
  5405  00167C                     u6040:
  5406  00167C                     
  5407                           ; BSR set to: 0
  5408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5409  00167C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5410  00167E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5411  001680                     l5082:
  5412                           
  5413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5414  001680  C074  F094         	movff	efgtoa@ou,efgtoa@u
  5415  001684  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5416  001688  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5417  00168C  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5418  001690                     
  5419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5420  001690  0E65               	movlw	101
  5421  001692  0100               	movlb	0	; () banked
  5422  001694  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5423  001696  B4D8               	btfsc	status,2,c
  5424  001698  EF50  F00B         	goto	u6051
  5425  00169C  EF52  F00B         	goto	u6050
  5426  0016A0                     u6051:
  5427  0016A0  EF58  F00B         	goto	l5088
  5428  0016A4                     u6050:
  5429  0016A4                     
  5430                           ; BSR set to: 0
  5431  0016A4  C090  F070         	movff	efgtoa@e,efgtoa@ne
  5432  0016A8  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  5433  0016AC  EF5C  F00B         	goto	l1450
  5434  0016B0                     l5088:
  5435                           
  5436                           ; BSR set to: 0
  5437  0016B0  0E00               	movlw	0
  5438  0016B2  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  5439  0016B4  0E00               	movlw	0
  5440  0016B6  6F70               	movwf	efgtoa@ne& (0+255),b
  5441  0016B8                     l1450:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5445  0016B8  0E00               	movlw	0
  5446  0016BA  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5447  0016BC  0E00               	movlw	0
  5448  0016BE  6F6E               	movwf	efgtoa@pp& (0+255),b
  5449                           
  5450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5451  0016C0  0E00               	movlw	0
  5452  0016C2  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5453  0016C4  0E00               	movlw	0
  5454  0016C6  6F6C               	movwf	efgtoa@t& (0+255),b
  5455                           
  5456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5457  0016C8  0E00               	movlw	0
  5458  0016CA  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5459  0016CC  0E00               	movlw	0
  5460  0016CE  6F8A               	movwf	efgtoa@i& (0+255),b
  5461                           
  5462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5463  0016D0  EF57  F00C         	goto	l5138
  5464  0016D4                     l5090:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5468  0016D4  C082  F00F         	movff	efgtoa@h,___fldiv@b
  5469  0016D8  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5470  0016DC  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5471  0016E0  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5472  0016E4  C094  F013         	movff	efgtoa@u,___fldiv@a
  5473  0016E8  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5474  0016EC  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5475  0016F0  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5476  0016F4  EC10  F01A         	call	___fldiv	;wreg free
  5477  0016F8  C00F  F028         	movff	?___fldiv,floorf@x
  5478  0016FC  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5479  001700  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5480  001704  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5481  001708  EC4F  F01D         	call	_floorf	;wreg free
  5482  00170C  C028  F086         	movff	?_floorf,efgtoa@l
  5483  001710  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  5484  001714  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  5485  001718  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  5486                           
  5487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5488  00171C  C086  F001         	movff	efgtoa@l,___fltol@f1
  5489  001720  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5490  001724  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5491  001728  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5492  00172C  EC49  F022         	call	___fltol	;wreg free
  5493  001730  C001  F078         	movff	?___fltol,efgtoa@d
  5494  001734  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5495  001738                     
  5496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5497  001738  0100               	movlb	0	; () banked
  5498  00173A  B9F0               	btfsc	_flags& (0+255),4,b
  5499  00173C  EFA2  F00B         	goto	u6061
  5500  001740  EFA4  F00B         	goto	u6060
  5501  001744                     u6061:
  5502  001744  EFC1  F00B         	goto	l5102
  5503  001748                     u6060:
  5504  001748                     
  5505                           ; BSR set to: 0
  5506  001748  5178               	movf	efgtoa@d& (0+255),w,b
  5507  00174A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5508  00174C  A4D8               	btfss	status,2,c
  5509  00174E  EFAB  F00B         	goto	u6071
  5510  001752  EFAD  F00B         	goto	u6070
  5511  001756                     u6071:
  5512  001756  EFC1  F00B         	goto	l5102
  5513  00175A                     u6070:
  5514  00175A                     
  5515                           ; BSR set to: 0
  5516  00175A  0E67               	movlw	103
  5517  00175C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5518  00175E  A4D8               	btfss	status,2,c
  5519  001760  EFB4  F00B         	goto	u6081
  5520  001764  EFB6  F00B         	goto	u6080
  5521  001768                     u6081:
  5522  001768  EFC1  F00B         	goto	l5102
  5523  00176C                     u6080:
  5524  00176C                     
  5525                           ; BSR set to: 0
  5526  00176C  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5527  00176E  EFBD  F00B         	goto	u6090
  5528  001772  EFBB  F00B         	goto	u6091
  5529  001776                     u6091:
  5530  001776  EFC1  F00B         	goto	l5102
  5531  00177A                     u6090:
  5532  00177A                     
  5533                           ; BSR set to: 0
  5534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5535  00177A  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  5536  00177C  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  5537                           
  5538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5539  00177E  EF0B  F00C         	goto	l5130
  5540  001782                     l5102:
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5544  001782  516E               	movf	efgtoa@pp& (0+255),w,b
  5545  001784  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5546  001786  A4D8               	btfss	status,2,c
  5547  001788  EFC8  F00B         	goto	u6101
  5548  00178C  EFCA  F00B         	goto	u6100
  5549  001790                     u6101:
  5550  001790  EFF4  F00B         	goto	l5122
  5551  001794                     u6100:
  5552  001794                     
  5553                           ; BSR set to: 0
  5554  001794  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5555  001796  EFD1  F00B         	goto	u6110
  5556  00179A  EFCF  F00B         	goto	u6111
  5557  00179E                     u6111:
  5558  00179E  EFF4  F00B         	goto	l5122
  5559  0017A2                     u6110:
  5560  0017A2                     
  5561                           ; BSR set to: 0
  5562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5563  0017A2  0E98               	movlw	low _dbuf
  5564  0017A4  2592               	addwf	efgtoa@n& (0+255),w,b
  5565  0017A6  6ED9               	movwf	fsr2l,c
  5566  0017A8  0E01               	movlw	high _dbuf
  5567  0017AA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5568  0017AC  6EDA               	movwf	fsr2h,c
  5569  0017AE  0E2E               	movlw	46
  5570  0017B0  6EDF               	movwf	indf2,c
  5571  0017B2                     
  5572                           ; BSR set to: 0
  5573  0017B2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5574  0017B4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5575  0017B6                     
  5576                           ; BSR set to: 0
  5577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5578  0017B6  077E               	decf	efgtoa@w& (0+255),f,b
  5579  0017B8  A0D8               	btfss	status,0,c
  5580  0017BA  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5581  0017BC                     
  5582                           ; BSR set to: 0
  5583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5584  0017BC  0E00               	movlw	0
  5585  0017BE  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5586  0017C0  0E01               	movlw	1
  5587  0017C2  6F6E               	movwf	efgtoa@pp& (0+255),b
  5588  0017C4  EFF4  F00B         	goto	l5122
  5589  0017C8                     l5114:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5593  0017C8  0E98               	movlw	low _dbuf
  5594  0017CA  2592               	addwf	efgtoa@n& (0+255),w,b
  5595  0017CC  6ED9               	movwf	fsr2l,c
  5596  0017CE  0E01               	movlw	high _dbuf
  5597  0017D0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5598  0017D2  6EDA               	movwf	fsr2h,c
  5599  0017D4  0E30               	movlw	48
  5600  0017D6  6EDF               	movwf	indf2,c
  5601  0017D8                     
  5602                           ; BSR set to: 0
  5603  0017D8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5604  0017DA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5605  0017DC                     
  5606                           ; BSR set to: 0
  5607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5608  0017DC  077E               	decf	efgtoa@w& (0+255),f,b
  5609  0017DE  A0D8               	btfss	status,0,c
  5610  0017E0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5611  0017E2                     
  5612                           ; BSR set to: 0
  5613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5614  0017E2  076C               	decf	efgtoa@t& (0+255),f,b
  5615  0017E4  A0D8               	btfss	status,0,c
  5616  0017E6  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  5617  0017E8                     l5122:
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5621  0017E8  516C               	movf	efgtoa@t& (0+255),w,b
  5622  0017EA  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5623  0017EC  A4D8               	btfss	status,2,c
  5624  0017EE  EFFB  F00B         	goto	u6121
  5625  0017F2  EFFD  F00B         	goto	u6120
  5626  0017F6                     u6121:
  5627  0017F6  EFE4  F00B         	goto	l5114
  5628  0017FA                     u6120:
  5629  0017FA                     
  5630                           ; BSR set to: 0
  5631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5632  0017FA  0E98               	movlw	low _dbuf
  5633  0017FC  2592               	addwf	efgtoa@n& (0+255),w,b
  5634  0017FE  6ED9               	movwf	fsr2l,c
  5635  001800  0E01               	movlw	high _dbuf
  5636  001802  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5637  001804  6EDA               	movwf	fsr2h,c
  5638  001806  5178               	movf	efgtoa@d& (0+255),w,b
  5639  001808  0F30               	addlw	48
  5640  00180A  6EDF               	movwf	indf2,c
  5641  00180C                     
  5642                           ; BSR set to: 0
  5643  00180C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5644  00180E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5645  001810                     
  5646                           ; BSR set to: 0
  5647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5648  001810  077E               	decf	efgtoa@w& (0+255),f,b
  5649  001812  A0D8               	btfss	status,0,c
  5650  001814  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5651  001816                     l5130:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5655  001816  C082  F01A         	movff	efgtoa@h,___flsub@b
  5656  00181A  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5657  00181E  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5658  001822  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5659  001826  C094  F005         	movff	efgtoa@u,___flmul@a
  5660  00182A  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5661  00182E  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5662  001832  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5663  001836  C086  F001         	movff	efgtoa@l,___flmul@b
  5664  00183A  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5665  00183E  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5666  001842  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5667  001846  ECFB  F017         	call	___flmul	;wreg free
  5668  00184A  C001  F01E         	movff	?___flmul,___flsub@a
  5669  00184E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5670  001852  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5671  001856  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5672  00185A  ECA5  F028         	call	___flsub	;wreg free
  5673  00185E  C01A  F082         	movff	?___flsub,efgtoa@h
  5674  001862  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5675  001866  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5676  00186A  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5677  00186E                     
  5678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5679  00186E  C094  F00F         	movff	efgtoa@u,___fldiv@b
  5680  001872  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5681  001876  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5682  00187A  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5683  00187E  0E00               	movlw	0
  5684  001880  6E13               	movwf	___fldiv@a^0,c
  5685  001882  0E00               	movlw	0
  5686  001884  6E14               	movwf	(___fldiv@a+1)^0,c
  5687  001886  0E20               	movlw	32
  5688  001888  6E15               	movwf	(___fldiv@a+2)^0,c
  5689  00188A  0E41               	movlw	65
  5690  00188C  6E16               	movwf	(___fldiv@a+3)^0,c
  5691  00188E  EC10  F01A         	call	___fldiv	;wreg free
  5692  001892  C00F  F094         	movff	?___fldiv,efgtoa@u
  5693  001896  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  5694  00189A  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  5695  00189E  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  5696  0018A2                     
  5697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5698  0018A2  0100               	movlb	0	; () banked
  5699  0018A4  0770               	decf	efgtoa@ne& (0+255),f,b
  5700  0018A6  A0D8               	btfss	status,0,c
  5701  0018A8  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  5702  0018AA                     
  5703                           ; BSR set to: 0
  5704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5705  0018AA  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5706  0018AC  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5707  0018AE                     l5138:
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5711  0018AE  5172               	movf	efgtoa@m& (0+255),w,b
  5712  0018B0  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5713  0018B2  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5714  0018B4  0A80               	xorlw	128
  5715  0018B6  6E43               	movwf	??_efgtoa^0,c
  5716  0018B8  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5717  0018BA  0A80               	xorlw	128
  5718  0018BC  5843               	subwfb	??_efgtoa^0,w,c
  5719  0018BE  B0D8               	btfsc	status,0,c
  5720  0018C0  EF64  F00C         	goto	u6131
  5721  0018C4  EF66  F00C         	goto	u6130
  5722  0018C8                     u6131:
  5723  0018C8  EF74  F00C         	goto	l5142
  5724  0018CC                     u6130:
  5725  0018CC                     
  5726                           ; BSR set to: 0
  5727  0018CC  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5728  0018CE  EF72  F00C         	goto	u6141
  5729  0018D2  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5730  0018D4  E109               	bnz	u6140
  5731  0018D6  0E4B               	movlw	75
  5732  0018D8  5D92               	subwf	efgtoa@n& (0+255),w,b
  5733  0018DA  A0D8               	btfss	status,0,c
  5734  0018DC  EF72  F00C         	goto	u6141
  5735  0018E0  EF74  F00C         	goto	u6140
  5736  0018E4                     u6141:
  5737  0018E4  EF6A  F00B         	goto	l5090
  5738  0018E8                     u6140:
  5739  0018E8                     l5142:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5743  0018E8  516E               	movf	efgtoa@pp& (0+255),w,b
  5744  0018EA  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5745  0018EC  A4D8               	btfss	status,2,c
  5746  0018EE  EF7B  F00C         	goto	u6151
  5747  0018F2  EF7D  F00C         	goto	u6150
  5748  0018F6                     u6151:
  5749  0018F6  EF8E  F00C         	goto	l5150
  5750  0018FA                     u6150:
  5751  0018FA                     
  5752                           ; BSR set to: 0
  5753  0018FA  A9F0               	btfss	_flags& (0+255),4,b
  5754  0018FC  EF82  F00C         	goto	u6161
  5755  001900  EF84  F00C         	goto	u6160
  5756  001904                     u6161:
  5757  001904  EF8E  F00C         	goto	l5150
  5758  001908                     u6160:
  5759  001908                     
  5760                           ; BSR set to: 0
  5761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5762  001908  0E98               	movlw	low _dbuf
  5763  00190A  2592               	addwf	efgtoa@n& (0+255),w,b
  5764  00190C  6ED9               	movwf	fsr2l,c
  5765  00190E  0E01               	movlw	high _dbuf
  5766  001910  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5767  001912  6EDA               	movwf	fsr2h,c
  5768  001914  0E2E               	movlw	46
  5769  001916  6EDF               	movwf	indf2,c
  5770  001918                     
  5771                           ; BSR set to: 0
  5772  001918  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5773  00191A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5774  00191C                     l5150:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5778  00191C  0E98               	movlw	low _dbuf
  5779  00191E  2592               	addwf	efgtoa@n& (0+255),w,b
  5780  001920  6ED9               	movwf	fsr2l,c
  5781  001922  0E01               	movlw	high _dbuf
  5782  001924  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5783  001926  6EDA               	movwf	fsr2h,c
  5784  001928  0E00               	movlw	0
  5785  00192A  6EDF               	movwf	indf2,c
  5786  00192C                     
  5787                           ; BSR set to: 0
  5788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5789  00192C  0E65               	movlw	101
  5790  00192E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5791  001930  A4D8               	btfss	status,2,c
  5792  001932  EF9D  F00C         	goto	u6171
  5793  001936  EF9F  F00C         	goto	u6170
  5794  00193A                     u6171:
  5795  00193A  EFF9  F007         	goto	l4952
  5796  00193E                     u6170:
  5797  00193E                     
  5798                           ; BSR set to: 0
  5799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5800  00193E  0E00               	movlw	0
  5801  001940  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5802  001942  0E4F               	movlw	79
  5803  001944  6F8A               	movwf	efgtoa@i& (0+255),b
  5804  001946                     
  5805                           ; BSR set to: 0
  5806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5807  001946  0E98               	movlw	low _dbuf
  5808  001948  258A               	addwf	efgtoa@i& (0+255),w,b
  5809  00194A  6ED9               	movwf	fsr2l,c
  5810  00194C  0E01               	movlw	high _dbuf
  5811  00194E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5812  001950  6EDA               	movwf	fsr2h,c
  5813  001952  0E00               	movlw	0
  5814  001954  6EDF               	movwf	indf2,c
  5815  001956                     
  5816                           ; BSR set to: 0
  5817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5818  001956  0E00               	movlw	0
  5819  001958  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5820  00195A  0E00               	movlw	0
  5821  00195C  6F7A               	movwf	efgtoa@sign& (0+255),b
  5822  00195E                     
  5823                           ; BSR set to: 0
  5824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5825  00195E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5826  001960  EFB6  F00C         	goto	u6180
  5827  001964  EFB4  F00C         	goto	u6181
  5828  001968                     u6181:
  5829  001968  EFBE  F00C         	goto	l5166
  5830  00196C                     u6180:
  5831  00196C                     
  5832                           ; BSR set to: 0
  5833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5834  00196C  0E00               	movlw	0
  5835  00196E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5836  001970  0E01               	movlw	1
  5837  001972  6F7A               	movwf	efgtoa@sign& (0+255),b
  5838  001974                     
  5839                           ; BSR set to: 0
  5840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5841  001974  6D90               	negf	efgtoa@e& (0+255),b
  5842  001976  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5843  001978  B0D8               	btfsc	status,0,c
  5844  00197A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5845  00197C                     l5166:
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5849  00197C  0E00               	movlw	0
  5850  00197E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5851  001980  0E02               	movlw	2
  5852  001982  6F7C               	movwf	efgtoa@p& (0+255),b
  5853                           
  5854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5855  001984  EFEF  F00C         	goto	l5178
  5856  001988                     l5168:
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5860  001988  078A               	decf	efgtoa@i& (0+255),f,b
  5861  00198A  A0D8               	btfss	status,0,c
  5862  00198C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5863  00198E                     
  5864                           ; BSR set to: 0
  5865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5866  00198E  0E98               	movlw	low _dbuf
  5867  001990  258A               	addwf	efgtoa@i& (0+255),w,b
  5868  001992  6ED9               	movwf	fsr2l,c
  5869  001994  0E01               	movlw	high _dbuf
  5870  001996  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5871  001998  6EDA               	movwf	fsr2h,c
  5872  00199A  C090  F001         	movff	efgtoa@e,___awmod@dividend
  5873  00199E  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5874  0019A2  0E00               	movlw	0
  5875  0019A4  6E04               	movwf	(___awmod@divisor+1)^0,c
  5876  0019A6  0E0A               	movlw	10
  5877  0019A8  6E03               	movwf	___awmod@divisor^0,c
  5878  0019AA  ECD0  F025         	call	___awmod	;wreg free
  5879  0019AE  5001               	movf	?___awmod^0,w,c
  5880  0019B0  0F30               	addlw	48
  5881  0019B2  6EDF               	movwf	indf2,c
  5882  0019B4                     
  5883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5884  0019B4  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  5885  0019B8  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5886  0019BC  0E00               	movlw	0
  5887  0019BE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5888  0019C0  0E0A               	movlw	10
  5889  0019C2  6E03               	movwf	___awdiv@divisor^0,c
  5890  0019C4  EC6E  F025         	call	___awdiv	;wreg free
  5891  0019C8  C001  F090         	movff	?___awdiv,efgtoa@e
  5892  0019CC  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  5893  0019D0                     
  5894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5895  0019D0  0100               	movlb	0	; () banked
  5896  0019D2  077C               	decf	efgtoa@p& (0+255),f,b
  5897  0019D4  A0D8               	btfss	status,0,c
  5898  0019D6  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  5899  0019D8                     
  5900                           ; BSR set to: 0
  5901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5902  0019D8  077E               	decf	efgtoa@w& (0+255),f,b
  5903  0019DA  A0D8               	btfss	status,0,c
  5904  0019DC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5905  0019DE                     l5178:
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5909  0019DE  5190               	movf	efgtoa@e& (0+255),w,b
  5910  0019E0  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5911  0019E2  A4D8               	btfss	status,2,c
  5912  0019E4  EFF6  F00C         	goto	u6191
  5913  0019E8  EFF8  F00C         	goto	u6190
  5914  0019EC                     u6191:
  5915  0019EC  EFC4  F00C         	goto	l5168
  5916  0019F0                     u6190:
  5917  0019F0                     
  5918                           ; BSR set to: 0
  5919  0019F0  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5920  0019F2  EF05  F00D         	goto	u6200
  5921  0019F6  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  5922  0019F8  E106               	bnz	u6201
  5923  0019FA  057C               	decf	efgtoa@p& (0+255),w,b
  5924  0019FC  B0D8               	btfsc	status,0,c
  5925  0019FE  EF03  F00D         	goto	u6201
  5926  001A02  EF05  F00D         	goto	u6200
  5927  001A06                     u6201:
  5928  001A06  EFC4  F00C         	goto	l5168
  5929  001A0A                     u6200:
  5930  001A0A                     
  5931                           ; BSR set to: 0
  5932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5933  001A0A  078A               	decf	efgtoa@i& (0+255),f,b
  5934  001A0C  A0D8               	btfss	status,0,c
  5935  001A0E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5936  001A10                     
  5937                           ; BSR set to: 0
  5938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5939  001A10  517A               	movf	efgtoa@sign& (0+255),w,b
  5940  001A12  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5941  001A14  A4D8               	btfss	status,2,c
  5942  001A16  EF0F  F00D         	goto	u6211
  5943  001A1A  EF11  F00D         	goto	u6210
  5944  001A1E                     u6211:
  5945  001A1E  EF17  F00D         	goto	l5188
  5946  001A22                     u6210:
  5947  001A22                     
  5948                           ; BSR set to: 0
  5949  001A22  0E00               	movlw	0
  5950  001A24  6F67               	movwf	(_efgtoa$2970+1)& (0+255),b
  5951  001A26  0E2B               	movlw	43
  5952  001A28  6F66               	movwf	_efgtoa$2970& (0+255),b
  5953  001A2A  EF1B  F00D         	goto	l5190
  5954  001A2E                     l5188:
  5955                           
  5956                           ; BSR set to: 0
  5957  001A2E  0E00               	movlw	0
  5958  001A30  6F67               	movwf	(_efgtoa$2970+1)& (0+255),b
  5959  001A32  0E2D               	movlw	45
  5960  001A34  6F66               	movwf	_efgtoa$2970& (0+255),b
  5961  001A36                     l5190:
  5962                           
  5963                           ; BSR set to: 0
  5964  001A36  0E98               	movlw	low _dbuf
  5965  001A38  258A               	addwf	efgtoa@i& (0+255),w,b
  5966  001A3A  6ED9               	movwf	fsr2l,c
  5967  001A3C  0E01               	movlw	high _dbuf
  5968  001A3E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5969  001A40  6EDA               	movwf	fsr2h,c
  5970  001A42  C066  FFDF         	movff	_efgtoa$2970,indf2
  5971  001A46                     
  5972                           ; BSR set to: 0
  5973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5974  001A46  077E               	decf	efgtoa@w& (0+255),f,b
  5975  001A48  A0D8               	btfss	status,0,c
  5976  001A4A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5977  001A4C                     
  5978                           ; BSR set to: 0
  5979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5980  001A4C  078A               	decf	efgtoa@i& (0+255),f,b
  5981  001A4E  A0D8               	btfss	status,0,c
  5982  001A50  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5983  001A52                     
  5984                           ; BSR set to: 0
  5985  001A52  0EBF               	movlw	191
  5986  001A54  6E43               	movwf	??_efgtoa^0,c
  5987  001A56  0EFF               	movlw	255
  5988  001A58  6E44               	movwf	(??_efgtoa+1)^0,c
  5989  001A5A  5042               	movf	efgtoa@c^0,w,c
  5990  001A5C  6E45               	movwf	(??_efgtoa+2)^0,c
  5991  001A5E  6A46               	clrf	(??_efgtoa+3)^0,c
  5992  001A60  5043               	movf	??_efgtoa^0,w,c
  5993  001A62  2645               	addwf	(??_efgtoa+2)^0,f,c
  5994  001A64  5044               	movf	(??_efgtoa+1)^0,w,c
  5995  001A66  2246               	addwfc	(??_efgtoa+3)^0,f,c
  5996  001A68  5046               	movf	(??_efgtoa+3)^0,w,c
  5997  001A6A  E10A               	bnz	u6220
  5998  001A6C  0E1A               	movlw	26
  5999  001A6E  5C45               	subwf	(??_efgtoa+2)^0,w,c
  6000  001A70  A0D8               	btfss	status,0,c
  6001  001A72  EF3D  F00D         	goto	u6221
  6002  001A76  EF40  F00D         	goto	u6220
  6003  001A7A                     u6221:
  6004  001A7A  0E01               	movlw	1
  6005  001A7C  EF41  F00D         	goto	u6230
  6006  001A80                     u6220:
  6007  001A80  0E00               	movlw	0
  6008  001A82                     u6230:
  6009  001A82  6F6A               	movwf	_efgtoa$2972& (0+255),b
  6010  001A84  6B6B               	clrf	(_efgtoa$2972+1)& (0+255),b
  6011  001A86                     
  6012                           ; BSR set to: 0
  6013  001A86  516A               	movf	_efgtoa$2972& (0+255),w,b
  6014  001A88  116B               	iorwf	(_efgtoa$2972+1)& (0+255),w,b
  6015  001A8A  A4D8               	btfss	status,2,c
  6016  001A8C  EF4A  F00D         	goto	u6241
  6017  001A90  EF4C  F00D         	goto	u6240
  6018  001A94                     u6241:
  6019  001A94  EF52  F00D         	goto	l5204
  6020  001A98                     u6240:
  6021  001A98                     
  6022                           ; BSR set to: 0
  6023  001A98  0E00               	movlw	0
  6024  001A9A  6F69               	movwf	(_efgtoa$2971+1)& (0+255),b
  6025  001A9C  0E65               	movlw	101
  6026  001A9E  6F68               	movwf	_efgtoa$2971& (0+255),b
  6027  001AA0  EF56  F00D         	goto	l5206
  6028  001AA4                     l5204:
  6029                           
  6030                           ; BSR set to: 0
  6031  001AA4  0E00               	movlw	0
  6032  001AA6  6F69               	movwf	(_efgtoa$2971+1)& (0+255),b
  6033  001AA8  0E45               	movlw	69
  6034  001AAA  6F68               	movwf	_efgtoa$2971& (0+255),b
  6035  001AAC                     l5206:
  6036                           
  6037                           ; BSR set to: 0
  6038  001AAC  0E98               	movlw	low _dbuf
  6039  001AAE  258A               	addwf	efgtoa@i& (0+255),w,b
  6040  001AB0  6ED9               	movwf	fsr2l,c
  6041  001AB2  0E01               	movlw	high _dbuf
  6042  001AB4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6043  001AB6  6EDA               	movwf	fsr2h,c
  6044  001AB8  C068  FFDF         	movff	_efgtoa$2971,indf2
  6045  001ABC                     
  6046                           ; BSR set to: 0
  6047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6048  001ABC  077E               	decf	efgtoa@w& (0+255),f,b
  6049  001ABE  A0D8               	btfss	status,0,c
  6050  001AC0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6051  001AC2                     
  6052                           ; BSR set to: 0
  6053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6054  001AC2  0E98               	movlw	low _dbuf
  6055  001AC4  2592               	addwf	efgtoa@n& (0+255),w,b
  6056  001AC6  6E01               	movwf	strcpy@dest^0,c
  6057  001AC8  0E01               	movlw	high _dbuf
  6058  001ACA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6059  001ACC  6E02               	movwf	(strcpy@dest+1)^0,c
  6060  001ACE  0E98               	movlw	low _dbuf
  6061  001AD0  258A               	addwf	efgtoa@i& (0+255),w,b
  6062  001AD2  6E03               	movwf	strcpy@src^0,c
  6063  001AD4  0E01               	movlw	high _dbuf
  6064  001AD6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6065  001AD8  6E04               	movwf	(strcpy@src+1)^0,c
  6066  001ADA  ECE0  F026         	call	_strcpy	;wreg free
  6067  001ADE  EFF9  F007         	goto	l4952
  6068  001AE2                     l1404:
  6069  001AE2  0012               	return		;funcret
  6070  001AE4                     __end_of_efgtoa:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _tolower *****************
  6074 ;; Defined at:
  6075 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  c               2    6[COMRAM] int 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  2    6[COMRAM] int 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6091 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6092 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6093 ;;Total ram usage:        8 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 1
  6096 ;; This function calls:
  6097 ;;		_isupper
  6098 ;; This function is called by:
  6099 ;;		_efgtoa
  6100 ;;		_vfpfcnvrt
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text13
  6105  004D60                     __ptext13:
  6106                           	callstack 0
  6107  004D60                     _tolower:
  6108                           	callstack 25
  6109  004D60  0EBF               	movlw	191
  6110  004D62  6E09               	movwf	??_tolower^0,c
  6111  004D64  0EFF               	movlw	255
  6112  004D66  6E0A               	movwf	(??_tolower+1)^0,c
  6113  004D68  C007  F00B         	movff	tolower@c,??_tolower+2
  6114  004D6C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6115  004D70  5009               	movf	??_tolower^0,w,c
  6116  004D72  260B               	addwf	(??_tolower+2)^0,f,c
  6117  004D74  500A               	movf	(??_tolower+1)^0,w,c
  6118  004D76  220C               	addwfc	(??_tolower+3)^0,f,c
  6119  004D78  500C               	movf	(??_tolower+3)^0,w,c
  6120  004D7A  E10A               	bnz	u5370
  6121  004D7C  0E1A               	movlw	26
  6122  004D7E  5C0B               	subwf	(??_tolower+2)^0,w,c
  6123  004D80  A0D8               	btfss	status,0,c
  6124  004D82  EFC5  F026         	goto	u5371
  6125  004D86  EFC8  F026         	goto	u5370
  6126  004D8A                     u5371:
  6127  004D8A  0E01               	movlw	1
  6128  004D8C  EFC9  F026         	goto	u5380
  6129  004D90                     u5370:
  6130  004D90  0E00               	movlw	0
  6131  004D92                     u5380:
  6132  004D92  6E0D               	movwf	_tolower$3133^0,c
  6133  004D94  6A0E               	clrf	(_tolower$3133+1)^0,c
  6134  004D96  500D               	movf	_tolower$3133^0,w,c
  6135  004D98  100E               	iorwf	(_tolower$3133+1)^0,w,c
  6136  004D9A  B4D8               	btfsc	status,2,c
  6137  004D9C  EFD2  F026         	goto	u5391
  6138  004DA0  EFD4  F026         	goto	u5390
  6139  004DA4                     u5391:
  6140  004DA4  EFDB  F026         	goto	l1668
  6141  004DA8                     u5390:
  6142  004DA8  0E20               	movlw	32
  6143  004DAA  1007               	iorwf	tolower@c^0,w,c
  6144  004DAC  6E07               	movwf	?_tolower^0,c
  6145  004DAE  5008               	movf	(tolower@c+1)^0,w,c
  6146  004DB0  6E08               	movwf	(?_tolower+1)^0,c
  6147  004DB2  EFDF  F026         	goto	l1673
  6148  004DB6                     l1668:
  6149  004DB6  C007  F007         	movff	tolower@c,?_tolower
  6150  004DBA  C008  F008         	movff	tolower@c+1,?_tolower+1
  6151  004DBE                     l1673:
  6152  004DBE  0012               	return		;funcret
  6153  004DC0                     __end_of_tolower:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _isupper *****************
  6157 ;; Defined at:
  6158 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  c               2    0[COMRAM] int 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;		None
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  2    0[COMRAM] int 
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, status,0
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6174 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6175 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6176 ;;Total ram usage:        6 bytes
  6177 ;; Hardware stack levels used: 1
  6178 ;; This function calls:
  6179 ;;		Nothing
  6180 ;; This function is called by:
  6181 ;;		_efgtoa
  6182 ;;		_vfpfcnvrt
  6183 ;;		_tolower
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text14
  6188  00528E                     __ptext14:
  6189                           	callstack 0
  6190  00528E                     _isupper:
  6191                           	callstack 25
  6192  00528E  0EBF               	movlw	191
  6193  005290  6E03               	movwf	??_isupper^0,c
  6194  005292  0EFF               	movlw	255
  6195  005294  6E04               	movwf	(??_isupper+1)^0,c
  6196  005296  C001  F005         	movff	isupper@c,??_isupper+2
  6197  00529A  C002  F006         	movff	isupper@c+1,??_isupper+3
  6198  00529E  5003               	movf	??_isupper^0,w,c
  6199  0052A0  2605               	addwf	(??_isupper+2)^0,f,c
  6200  0052A2  5004               	movf	(??_isupper+1)^0,w,c
  6201  0052A4  2206               	addwfc	(??_isupper+3)^0,f,c
  6202  0052A6  5006               	movf	(??_isupper+3)^0,w,c
  6203  0052A8  E10A               	bnz	u4380
  6204  0052AA  0E1A               	movlw	26
  6205  0052AC  5C05               	subwf	(??_isupper+2)^0,w,c
  6206  0052AE  A0D8               	btfss	status,0,c
  6207  0052B0  EF5C  F029         	goto	u4381
  6208  0052B4  EF5F  F029         	goto	u4380
  6209  0052B8                     u4381:
  6210  0052B8  0E01               	movlw	1
  6211  0052BA  EF60  F029         	goto	u4390
  6212  0052BE                     u4380:
  6213  0052BE  0E00               	movlw	0
  6214  0052C0                     u4390:
  6215  0052C0  6E01               	movwf	?_isupper^0,c
  6216  0052C2  6A02               	clrf	(?_isupper+1)^0,c
  6217  0052C4  0012               	return		;funcret
  6218  0052C6                     __end_of_isupper:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function _strcpy *****************
  6222 ;; Defined at:
  6223 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6226 ;;		 -> dbuf(80), 
  6227 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6228 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  6229 ;;		 -> dbuf(80), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  d               2    8[COMRAM] PTR unsigned char 
  6232 ;;		 -> dbuf(80), 
  6233 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6234 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  6235 ;;		 -> dbuf(80), 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  2    0[COMRAM] PTR unsigned char 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6246 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6248 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;Total ram usage:       10 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_efgtoa
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text15
  6259  004DC0                     __ptext15:
  6260                           	callstack 0
  6261  004DC0                     _strcpy:
  6262                           	callstack 25
  6263  004DC0  C003  F007         	movff	strcpy@src,strcpy@s
  6264  004DC4  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6265  004DC8  C001  F009         	movff	strcpy@dest,strcpy@d
  6266  004DCC  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6267  004DD0                     l4786:
  6268  004DD0  5007               	movf	strcpy@s^0,w,c
  6269  004DD2  6E05               	movwf	??_strcpy^0,c
  6270  004DD4  5008               	movf	(strcpy@s+1)^0,w,c
  6271  004DD6  6E06               	movwf	(??_strcpy+1)^0,c
  6272  004DD8  4A07               	infsnz	strcpy@s^0,f,c
  6273  004DDA  2A08               	incf	(strcpy@s+1)^0,f,c
  6274  004DDC  C005  FFF6         	movff	??_strcpy,tblptrl
  6275  004DE0  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6276  004DE4  0E00               	movlw	low (__smallconst shr (0+16))
  6277  004DE6  6EF8               	movwf	tblptru,c
  6278  004DE8  C009  FFD9         	movff	strcpy@d,fsr2l
  6279  004DEC  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6280  004DF0  4A09               	infsnz	strcpy@d^0,f,c
  6281  004DF2  2A0A               	incf	(strcpy@d+1)^0,f,c
  6282  004DF4  0E0D               	movlw	(high __ramtop+-1)
  6283  004DF6  64F7               	cpfsgt	tblptrh,c
  6284  004DF8  D003               	bra	u5357
  6285  004DFA  0008               	tblrd		*
  6286  004DFC  50F5               	movf	tablat,w,c
  6287  004DFE  D005               	bra	u5350
  6288  004E00                     u5357:
  6289  004E00  CFF6 FFE9          	movff	tblptrl,fsr0l
  6290  004E04  CFF7 FFEA          	movff	tblptrh,fsr0h
  6291  004E08  50EF               	movf	indf0,w,c
  6292  004E0A                     u5350:
  6293  004E0A  6EDF               	movwf	indf2,c
  6294  004E0C  50DF               	movf	indf2,w,c
  6295  004E0E  A4D8               	btfss	status,2,c
  6296  004E10  EF0C  F027         	goto	u5361
  6297  004E14  EF0E  F027         	goto	u5360
  6298  004E18                     u5361:
  6299  004E18  EFE8  F026         	goto	l4786
  6300  004E1C                     u5360:
  6301  004E1C  0012               	return		;funcret
  6302  004E1E                     __end_of_strcpy:
  6303                           	callstack 0
  6304                           
  6305 ;; *************** function _floorf *****************
  6306 ;; Defined at:
  6307 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  x               4   39[COMRAM] float 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  u               4   55[COMRAM] struct .
  6312 ;;  m               4   49[COMRAM] unsigned long 
  6313 ;;  e               2   53[COMRAM] int 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  4   39[COMRAM] float 
  6316 ;; Registers used:
  6317 ;;		wreg, status,2, status,0
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6325 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;Total ram usage:       20 bytes
  6328 ;; Hardware stack levels used: 1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_efgtoa
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text16
  6337  003A9E                     __ptext16:
  6338                           	callstack 0
  6339  003A9E                     _floorf:
  6340                           	callstack 25
  6341  003A9E  C18C  F038         	movff	floorf@F527,floorf@u
  6342  003AA2  C18D  F039         	movff	floorf@F527+1,floorf@u+1
  6343  003AA6  C18E  F03A         	movff	floorf@F527+2,floorf@u+2
  6344  003AAA  C18F  F03B         	movff	floorf@F527+3,floorf@u+3
  6345  003AAE  C028  F038         	movff	floorf@x,floorf@u
  6346  003AB2  C029  F039         	movff	floorf@x+1,floorf@u+1
  6347  003AB6  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  6348  003ABA  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  6349  003ABE  0E81               	movlw	129
  6350  003AC0  6E2C               	movwf	??_floorf^0,c
  6351  003AC2  0EFF               	movlw	255
  6352  003AC4  6E2D               	movwf	(??_floorf+1)^0,c
  6353  003AC6  C038  F02E         	movff	floorf@u,??_floorf+2
  6354  003ACA  C039  F02F         	movff	floorf@u+1,??_floorf+3
  6355  003ACE  C03A  F030         	movff	floorf@u+2,??_floorf+4
  6356  003AD2  C03B  F031         	movff	floorf@u+3,??_floorf+5
  6357  003AD6  0E18               	movlw	24
  6358  003AD8  EF73  F01D         	goto	u5400
  6359  003ADC                     u5405:
  6360  003ADC  90D8               	bcf	status,0,c
  6361  003ADE  3231               	rrcf	(??_floorf+5)^0,f,c
  6362  003AE0  3230               	rrcf	(??_floorf+4)^0,f,c
  6363  003AE2  322F               	rrcf	(??_floorf+3)^0,f,c
  6364  003AE4  322E               	rrcf	(??_floorf+2)^0,f,c
  6365  003AE6                     u5400:
  6366  003AE6  2EE8               	decfsz	wreg,f,c
  6367  003AE8  EF6E  F01D         	goto	u5405
  6368  003AEC  502E               	movf	(??_floorf+2)^0,w,c
  6369  003AEE  242C               	addwf	??_floorf^0,w,c
  6370  003AF0  6E36               	movwf	floorf@e^0,c
  6371  003AF2  0E00               	movlw	0
  6372  003AF4  202D               	addwfc	(??_floorf+1)^0,w,c
  6373  003AF6  6E37               	movwf	(floorf@e+1)^0,c
  6374  003AF8  BE37               	btfsc	(floorf@e+1)^0,7,c
  6375  003AFA  EF88  F01D         	goto	u5411
  6376  003AFE  5037               	movf	(floorf@e+1)^0,w,c
  6377  003B00  E109               	bnz	u5410
  6378  003B02  0E17               	movlw	23
  6379  003B04  5C36               	subwf	floorf@e^0,w,c
  6380  003B06  A0D8               	btfss	status,0,c
  6381  003B08  EF88  F01D         	goto	u5411
  6382  003B0C  EF8A  F01D         	goto	u5410
  6383  003B10                     u5411:
  6384  003B10  EF94  F01D         	goto	l4804
  6385  003B14                     u5410:
  6386  003B14                     l4802:
  6387  003B14  C028  F028         	movff	floorf@x,?_floorf
  6388  003B18  C029  F029         	movff	floorf@x+1,?_floorf+1
  6389  003B1C  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  6390  003B20  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  6391  003B24  EF57  F01E         	goto	l1592
  6392  003B28                     l4804:
  6393  003B28  BE37               	btfsc	(floorf@e+1)^0,7,c
  6394  003B2A  EF99  F01D         	goto	u5421
  6395  003B2E  EF9B  F01D         	goto	u5420
  6396  003B32                     u5421:
  6397  003B32  EF0B  F01E         	goto	l4814
  6398  003B36                     u5420:
  6399  003B36  C036  F02C         	movff	floorf@e,??_floorf
  6400  003B3A  0EFF               	movlw	255
  6401  003B3C  6E2D               	movwf	(??_floorf+1)^0,c
  6402  003B3E  0EFF               	movlw	255
  6403  003B40  6E2E               	movwf	(??_floorf+2)^0,c
  6404  003B42  0E7F               	movlw	127
  6405  003B44  6E2F               	movwf	(??_floorf+3)^0,c
  6406  003B46  0E00               	movlw	0
  6407  003B48  6E30               	movwf	(??_floorf+4)^0,c
  6408  003B4A                     u5435:
  6409  003B4A  662C               	tstfsz	??_floorf^0,c
  6410  003B4C  EFAA  F01D         	goto	u5436
  6411  003B50  EFB2  F01D         	goto	u5437
  6412  003B54                     u5436:
  6413  003B54  3430               	rlcf	(??_floorf+4)^0,w,c
  6414  003B56  3230               	rrcf	(??_floorf+4)^0,f,c
  6415  003B58  322F               	rrcf	(??_floorf+3)^0,f,c
  6416  003B5A  322E               	rrcf	(??_floorf+2)^0,f,c
  6417  003B5C  322D               	rrcf	(??_floorf+1)^0,f,c
  6418  003B5E  2E2C               	decfsz	??_floorf^0,f,c
  6419  003B60  EFA5  F01D         	goto	u5435
  6420  003B64                     u5437:
  6421  003B64  C02D  F032         	movff	??_floorf+1,floorf@m
  6422  003B68  C02E  F033         	movff	??_floorf+2,floorf@m+1
  6423  003B6C  C02F  F034         	movff	??_floorf+3,floorf@m+2
  6424  003B70  C030  F035         	movff	??_floorf+4,floorf@m+3
  6425  003B74  5032               	movf	floorf@m^0,w,c
  6426  003B76  1438               	andwf	floorf@u^0,w,c
  6427  003B78  6E2C               	movwf	??_floorf^0,c
  6428  003B7A  5033               	movf	(floorf@m+1)^0,w,c
  6429  003B7C  1439               	andwf	(floorf@u+1)^0,w,c
  6430  003B7E  6E2D               	movwf	(??_floorf+1)^0,c
  6431  003B80  5034               	movf	(floorf@m+2)^0,w,c
  6432  003B82  143A               	andwf	(floorf@u+2)^0,w,c
  6433  003B84  6E2E               	movwf	(??_floorf+2)^0,c
  6434  003B86  5035               	movf	(floorf@m+3)^0,w,c
  6435  003B88  143B               	andwf	(floorf@u+3)^0,w,c
  6436  003B8A  6E2F               	movwf	(??_floorf+3)^0,c
  6437  003B8C  502C               	movf	??_floorf^0,w,c
  6438  003B8E  102D               	iorwf	(??_floorf+1)^0,w,c
  6439  003B90  102E               	iorwf	(??_floorf+2)^0,w,c
  6440  003B92  102F               	iorwf	(??_floorf+3)^0,w,c
  6441  003B94  A4D8               	btfss	status,2,c
  6442  003B96  EFCF  F01D         	goto	u5441
  6443  003B9A  EFD1  F01D         	goto	u5440
  6444  003B9E                     u5441:
  6445  003B9E  EFD3  F01D         	goto	l4810
  6446  003BA2                     u5440:
  6447  003BA2  EF8A  F01D         	goto	l4802
  6448  003BA6                     l4810:
  6449  003BA6  C038  F02C         	movff	floorf@u,??_floorf
  6450  003BAA  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6451  003BAE  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6452  003BB2  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6453  003BB6  0E20               	movlw	32
  6454  003BB8  EFE3  F01D         	goto	u5450
  6455  003BBC                     u5455:
  6456  003BBC  90D8               	bcf	status,0,c
  6457  003BBE  322F               	rrcf	(??_floorf+3)^0,f,c
  6458  003BC0  322E               	rrcf	(??_floorf+2)^0,f,c
  6459  003BC2  322D               	rrcf	(??_floorf+1)^0,f,c
  6460  003BC4  322C               	rrcf	??_floorf^0,f,c
  6461  003BC6                     u5450:
  6462  003BC6  2EE8               	decfsz	wreg,f,c
  6463  003BC8  EFDE  F01D         	goto	u5455
  6464  003BCC  502C               	movf	??_floorf^0,w,c
  6465  003BCE  102D               	iorwf	(??_floorf+1)^0,w,c
  6466  003BD0  102E               	iorwf	(??_floorf+2)^0,w,c
  6467  003BD2  102F               	iorwf	(??_floorf+3)^0,w,c
  6468  003BD4  B4D8               	btfsc	status,2,c
  6469  003BD6  EFEF  F01D         	goto	u5461
  6470  003BDA  EFF1  F01D         	goto	u5460
  6471  003BDE                     u5461:
  6472  003BDE  EFF9  F01D         	goto	l1595
  6473  003BE2                     u5460:
  6474  003BE2  5032               	movf	floorf@m^0,w,c
  6475  003BE4  2638               	addwf	floorf@u^0,f,c
  6476  003BE6  5033               	movf	(floorf@m+1)^0,w,c
  6477  003BE8  2239               	addwfc	(floorf@u+1)^0,f,c
  6478  003BEA  5034               	movf	(floorf@m+2)^0,w,c
  6479  003BEC  223A               	addwfc	(floorf@u+2)^0,f,c
  6480  003BEE  5035               	movf	(floorf@m+3)^0,w,c
  6481  003BF0  223B               	addwfc	(floorf@u+3)^0,f,c
  6482  003BF2                     l1595:
  6483  003BF2  1C32               	comf	floorf@m^0,w,c
  6484  003BF4  6E2C               	movwf	??_floorf^0,c
  6485  003BF6  1C33               	comf	(floorf@m+1)^0,w,c
  6486  003BF8  6E2D               	movwf	(??_floorf+1)^0,c
  6487  003BFA  1C34               	comf	(floorf@m+2)^0,w,c
  6488  003BFC  6E2E               	movwf	(??_floorf+2)^0,c
  6489  003BFE  1C35               	comf	(floorf@m+3)^0,w,c
  6490  003C00  6E2F               	movwf	(??_floorf+3)^0,c
  6491  003C02  502C               	movf	??_floorf^0,w,c
  6492  003C04  1638               	andwf	floorf@u^0,f,c
  6493  003C06  502D               	movf	(??_floorf+1)^0,w,c
  6494  003C08  1639               	andwf	(floorf@u+1)^0,f,c
  6495  003C0A  502E               	movf	(??_floorf+2)^0,w,c
  6496  003C0C  163A               	andwf	(floorf@u+2)^0,f,c
  6497  003C0E  502F               	movf	(??_floorf+3)^0,w,c
  6498  003C10  163B               	andwf	(floorf@u+3)^0,f,c
  6499  003C12  EF4F  F01E         	goto	l4822
  6500  003C16                     l4814:
  6501  003C16  C038  F02C         	movff	floorf@u,??_floorf
  6502  003C1A  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6503  003C1E  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6504  003C22  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6505  003C26  0E20               	movlw	32
  6506  003C28  EF1B  F01E         	goto	u5470
  6507  003C2C                     u5475:
  6508  003C2C  90D8               	bcf	status,0,c
  6509  003C2E  322F               	rrcf	(??_floorf+3)^0,f,c
  6510  003C30  322E               	rrcf	(??_floorf+2)^0,f,c
  6511  003C32  322D               	rrcf	(??_floorf+1)^0,f,c
  6512  003C34  322C               	rrcf	??_floorf^0,f,c
  6513  003C36                     u5470:
  6514  003C36  2EE8               	decfsz	wreg,f,c
  6515  003C38  EF16  F01E         	goto	u5475
  6516  003C3C  502C               	movf	??_floorf^0,w,c
  6517  003C3E  102D               	iorwf	(??_floorf+1)^0,w,c
  6518  003C40  102E               	iorwf	(??_floorf+2)^0,w,c
  6519  003C42  102F               	iorwf	(??_floorf+3)^0,w,c
  6520  003C44  A4D8               	btfss	status,2,c
  6521  003C46  EF27  F01E         	goto	u5481
  6522  003C4A  EF29  F01E         	goto	u5480
  6523  003C4E                     u5481:
  6524  003C4E  EF33  F01E         	goto	l4818
  6525  003C52                     u5480:
  6526  003C52  0E00               	movlw	0
  6527  003C54  6E38               	movwf	floorf@u^0,c
  6528  003C56  0E00               	movlw	0
  6529  003C58  6E39               	movwf	(floorf@u+1)^0,c
  6530  003C5A  0E00               	movlw	0
  6531  003C5C  6E3A               	movwf	(floorf@u+2)^0,c
  6532  003C5E  0E00               	movlw	0
  6533  003C60  6E3B               	movwf	(floorf@u+3)^0,c
  6534  003C62  EF4F  F01E         	goto	l4822
  6535  003C66                     l4818:
  6536  003C66  90D8               	bcf	status,0,c
  6537  003C68  3438               	rlcf	floorf@u^0,w,c
  6538  003C6A  6E2C               	movwf	??_floorf^0,c
  6539  003C6C  3439               	rlcf	(floorf@u+1)^0,w,c
  6540  003C6E  6E2D               	movwf	(??_floorf+1)^0,c
  6541  003C70  343A               	rlcf	(floorf@u+2)^0,w,c
  6542  003C72  6E2E               	movwf	(??_floorf+2)^0,c
  6543  003C74  343B               	rlcf	(floorf@u+3)^0,w,c
  6544  003C76  6E2F               	movwf	(??_floorf+3)^0,c
  6545  003C78  502C               	movf	??_floorf^0,w,c
  6546  003C7A  102D               	iorwf	(??_floorf+1)^0,w,c
  6547  003C7C  102E               	iorwf	(??_floorf+2)^0,w,c
  6548  003C7E  102F               	iorwf	(??_floorf+3)^0,w,c
  6549  003C80  B4D8               	btfsc	status,2,c
  6550  003C82  EF45  F01E         	goto	u5491
  6551  003C86  EF47  F01E         	goto	u5490
  6552  003C8A                     u5491:
  6553  003C8A  EF4F  F01E         	goto	l4822
  6554  003C8E                     u5490:
  6555  003C8E  0E00               	movlw	0
  6556  003C90  6E38               	movwf	floorf@u^0,c
  6557  003C92  0E00               	movlw	0
  6558  003C94  6E39               	movwf	(floorf@u+1)^0,c
  6559  003C96  0E80               	movlw	128
  6560  003C98  6E3A               	movwf	(floorf@u+2)^0,c
  6561  003C9A  0EBF               	movlw	191
  6562  003C9C  6E3B               	movwf	(floorf@u+3)^0,c
  6563  003C9E                     l4822:
  6564  003C9E  C038  F028         	movff	floorf@u,?_floorf
  6565  003CA2  C039  F029         	movff	floorf@u+1,?_floorf+1
  6566  003CA6  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  6567  003CAA  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  6568  003CAE                     l1592:
  6569  003CAE  0012               	return		;funcret
  6570  003CB0                     __end_of_floorf:
  6571                           	callstack 0
  6572                           
  6573 ;; *************** function ___fpclassifyf *****************
  6574 ;; Defined at:
  6575 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  x               4    0[COMRAM] float 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  u               4   10[COMRAM] struct .
  6580 ;;  e               2    8[COMRAM] int 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  2    0[COMRAM] int 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6591 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6592 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6593 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6594 ;;Total ram usage:       14 bytes
  6595 ;; Hardware stack levels used: 1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_efgtoa
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text17
  6604  00469C                     __ptext17:
  6605                           	callstack 0
  6606  00469C                     ___fpclassifyf:
  6607                           	callstack 25
  6608  00469C  C190  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6609  0046A0  C191  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6610  0046A4  C192  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6611  0046A8  C193  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6612  0046AC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6613  0046B0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6614  0046B4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6615  0046B8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6616  0046BC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6617  0046C0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6618  0046C4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6619  0046C8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6620  0046CC  0E18               	movlw	24
  6621  0046CE  EF6E  F023         	goto	u5280
  6622  0046D2                     u5285:
  6623  0046D2  90D8               	bcf	status,0,c
  6624  0046D4  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6625  0046D6  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6626  0046D8  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6627  0046DA  3205               	rrcf	??___fpclassifyf^0,f,c
  6628  0046DC                     u5280:
  6629  0046DC  2EE8               	decfsz	wreg,f,c
  6630  0046DE  EF69  F023         	goto	u5285
  6631  0046E2  5005               	movf	??___fpclassifyf^0,w,c
  6632  0046E4  6E09               	movwf	___fpclassifyf@e^0,c
  6633  0046E6  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6634  0046E8  5009               	movf	___fpclassifyf@e^0,w,c
  6635  0046EA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6636  0046EC  A4D8               	btfss	status,2,c
  6637  0046EE  EF7B  F023         	goto	u5291
  6638  0046F2  EF7D  F023         	goto	u5290
  6639  0046F6                     u5291:
  6640  0046F6  EF9D  F023         	goto	l4774
  6641  0046FA                     u5290:
  6642  0046FA  90D8               	bcf	status,0,c
  6643  0046FC  340B               	rlcf	___fpclassifyf@u^0,w,c
  6644  0046FE  6E05               	movwf	??___fpclassifyf^0,c
  6645  004700  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6646  004702  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6647  004704  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6648  004706  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6649  004708  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6650  00470A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6651  00470C  5005               	movf	??___fpclassifyf^0,w,c
  6652  00470E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6653  004710  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6654  004712  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6655  004714  A4D8               	btfss	status,2,c
  6656  004716  EF8F  F023         	goto	u5301
  6657  00471A  EF91  F023         	goto	u5300
  6658  00471E                     u5301:
  6659  00471E  EF97  F023         	goto	l4770
  6660  004722                     u5300:
  6661  004722  0E00               	movlw	0
  6662  004724  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6663  004726  0E02               	movlw	2
  6664  004728  6E01               	movwf	?___fpclassifyf^0,c
  6665  00472A  EFCC  F023         	goto	l1547
  6666  00472E                     l4770:
  6667  00472E  0E00               	movlw	0
  6668  004730  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6669  004732  0E03               	movlw	3
  6670  004734  6E01               	movwf	?___fpclassifyf^0,c
  6671  004736  EFCC  F023         	goto	l1547
  6672  00473A                     l4774:
  6673  00473A  2809               	incf	___fpclassifyf@e^0,w,c
  6674  00473C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6675  00473E  A4D8               	btfss	status,2,c
  6676  004740  EFA4  F023         	goto	u5311
  6677  004744  EFA6  F023         	goto	u5310
  6678  004748                     u5311:
  6679  004748  EFC8  F023         	goto	l4780
  6680  00474C                     u5310:
  6681  00474C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6682  004750  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6683  004754  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6684  004758  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6685  00475C  0E09               	movlw	9
  6686  00475E                     u5325:
  6687  00475E  90D8               	bcf	status,0,c
  6688  004760  3605               	rlcf	??___fpclassifyf^0,f,c
  6689  004762  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6690  004764  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6691  004766  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6692  004768  2EE8               	decfsz	wreg,f,c
  6693  00476A  EFAF  F023         	goto	u5325
  6694  00476E  5005               	movf	??___fpclassifyf^0,w,c
  6695  004770  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6696  004772  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6697  004774  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6698  004776  B4D8               	btfsc	status,2,c
  6699  004778  EFC0  F023         	goto	u5331
  6700  00477C  EFC3  F023         	goto	u5330
  6701  004780                     u5331:
  6702  004780  0E01               	movlw	1
  6703  004782  EFC4  F023         	goto	u5340
  6704  004786                     u5330:
  6705  004786  0E00               	movlw	0
  6706  004788                     u5340:
  6707  004788  6E01               	movwf	?___fpclassifyf^0,c
  6708  00478A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6709  00478C  EFCC  F023         	goto	l1547
  6710  004790                     l4780:
  6711  004790  0E00               	movlw	0
  6712  004792  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6713  004794  0E04               	movlw	4
  6714  004796  6E01               	movwf	?___fpclassifyf^0,c
  6715  004798                     l1547:
  6716  004798  0012               	return		;funcret
  6717  00479A                     __end_of___fpclassifyf:
  6718                           	callstack 0
  6719                           
  6720 ;; *************** function ___fltol *****************
  6721 ;; Defined at:
  6722 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  f1              4    0[COMRAM] int 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  exp1            1    9[COMRAM] unsigned char 
  6727 ;;  sign1           1    8[COMRAM] unsigned char 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  4    0[COMRAM] long 
  6730 ;; Registers used:
  6731 ;;		wreg, status,2, status,0
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;Total ram usage:       10 bytes
  6742 ;; Hardware stack levels used: 1
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_efgtoa
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text18
  6751  004492                     __ptext18:
  6752                           	callstack 0
  6753  004492                     ___fltol:
  6754                           	callstack 25
  6755  004492  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6756  004494  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6757  004496  6E0A               	movwf	___fltol@exp1^0,c
  6758  004498  500A               	movf	___fltol@exp1^0,w,c
  6759  00449A  A4D8               	btfss	status,2,c
  6760  00449C  EF52  F022         	goto	u5161
  6761  0044A0  EF54  F022         	goto	u5160
  6762  0044A4                     u5161:
  6763  0044A4  EF5E  F022         	goto	l4698
  6764  0044A8                     u5160:
  6765  0044A8                     l4694:
  6766  0044A8  0E00               	movlw	0
  6767  0044AA  6E01               	movwf	?___fltol^0,c
  6768  0044AC  0E00               	movlw	0
  6769  0044AE  6E02               	movwf	(?___fltol+1)^0,c
  6770  0044B0  0E00               	movlw	0
  6771  0044B2  6E03               	movwf	(?___fltol+2)^0,c
  6772  0044B4  0E00               	movlw	0
  6773  0044B6  6E04               	movwf	(?___fltol+3)^0,c
  6774  0044B8  EFCB  F022         	goto	l931
  6775  0044BC                     l4698:
  6776  0044BC  C001  F005         	movff	___fltol@f1,??___fltol
  6777  0044C0  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6778  0044C4  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6779  0044C8  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6780  0044CC  0E20               	movlw	32
  6781  0044CE  EF6E  F022         	goto	u5170
  6782  0044D2                     u5175:
  6783  0044D2  90D8               	bcf	status,0,c
  6784  0044D4  3208               	rrcf	(??___fltol+3)^0,f,c
  6785  0044D6  3207               	rrcf	(??___fltol+2)^0,f,c
  6786  0044D8  3206               	rrcf	(??___fltol+1)^0,f,c
  6787  0044DA  3205               	rrcf	??___fltol^0,f,c
  6788  0044DC                     u5170:
  6789  0044DC  2EE8               	decfsz	wreg,f,c
  6790  0044DE  EF69  F022         	goto	u5175
  6791  0044E2  5005               	movf	??___fltol^0,w,c
  6792  0044E4  6E09               	movwf	___fltol@sign1^0,c
  6793  0044E6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6794  0044E8  0EFF               	movlw	255
  6795  0044EA  1601               	andwf	___fltol@f1^0,f,c
  6796  0044EC  0EFF               	movlw	255
  6797  0044EE  1602               	andwf	(___fltol@f1+1)^0,f,c
  6798  0044F0  0EFF               	movlw	255
  6799  0044F2  1603               	andwf	(___fltol@f1+2)^0,f,c
  6800  0044F4  0E00               	movlw	0
  6801  0044F6  1604               	andwf	(___fltol@f1+3)^0,f,c
  6802  0044F8  0E96               	movlw	150
  6803  0044FA  5E0A               	subwf	___fltol@exp1^0,f,c
  6804  0044FC  BE0A               	btfsc	___fltol@exp1^0,7,c
  6805  0044FE  EF85  F022         	goto	u5180
  6806  004502  EF83  F022         	goto	u5181
  6807  004506                     u5181:
  6808  004506  EF9B  F022         	goto	l4718
  6809  00450A                     u5180:
  6810  00450A  500A               	movf	___fltol@exp1^0,w,c
  6811  00450C  0A80               	xorlw	128
  6812  00450E  0F97               	addlw	151
  6813  004510  B0D8               	btfsc	status,0,c
  6814  004512  EF8D  F022         	goto	u5191
  6815  004516  EF8F  F022         	goto	u5190
  6816  00451A                     u5191:
  6817  00451A  EF91  F022         	goto	l4714
  6818  00451E                     u5190:
  6819  00451E  EF54  F022         	goto	l4694
  6820  004522                     l4714:
  6821  004522  90D8               	bcf	status,0,c
  6822  004524  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6823  004526  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6824  004528  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6825  00452A  3201               	rrcf	___fltol@f1^0,f,c
  6826  00452C  3E0A               	incfsz	___fltol@exp1^0,f,c
  6827  00452E  EF91  F022         	goto	l4714
  6828  004532  EFB3  F022         	goto	l4728
  6829  004536                     l4718:
  6830  004536  0E1F               	movlw	31
  6831  004538  640A               	cpfsgt	___fltol@exp1^0,c
  6832  00453A  EFA1  F022         	goto	u5201
  6833  00453E  EFA3  F022         	goto	u5200
  6834  004542                     u5201:
  6835  004542  EFAB  F022         	goto	l4726
  6836  004546                     u5200:
  6837  004546  EF54  F022         	goto	l4694
  6838  00454A                     l4724:
  6839  00454A  90D8               	bcf	status,0,c
  6840  00454C  3601               	rlcf	___fltol@f1^0,f,c
  6841  00454E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6842  004550  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6843  004552  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6844  004554  060A               	decf	___fltol@exp1^0,f,c
  6845  004556                     l4726:
  6846  004556  500A               	movf	___fltol@exp1^0,w,c
  6847  004558  A4D8               	btfss	status,2,c
  6848  00455A  EFB1  F022         	goto	u5211
  6849  00455E  EFB3  F022         	goto	u5210
  6850  004562                     u5211:
  6851  004562  EFA5  F022         	goto	l4724
  6852  004566                     u5210:
  6853  004566                     l4728:
  6854  004566  5009               	movf	___fltol@sign1^0,w,c
  6855  004568  B4D8               	btfsc	status,2,c
  6856  00456A  EFB9  F022         	goto	u5221
  6857  00456E  EFBB  F022         	goto	u5220
  6858  004572                     u5221:
  6859  004572  EFC3  F022         	goto	l4732
  6860  004576                     u5220:
  6861  004576  1E04               	comf	(___fltol@f1+3)^0,f,c
  6862  004578  1E03               	comf	(___fltol@f1+2)^0,f,c
  6863  00457A  1E02               	comf	(___fltol@f1+1)^0,f,c
  6864  00457C  6C01               	negf	___fltol@f1^0,c
  6865  00457E  0E00               	movlw	0
  6866  004580  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6867  004582  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6868  004584  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6869  004586                     l4732:
  6870  004586  C001  F001         	movff	___fltol@f1,?___fltol
  6871  00458A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6872  00458E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6873  004592  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6874  004596                     l931:
  6875  004596  0012               	return		;funcret
  6876  004598                     __end_of___fltol:
  6877                           	callstack 0
  6878                           
  6879 ;; *************** function ___flsub *****************
  6880 ;; Defined at:
  6881 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  b               4   25[COMRAM] long 
  6884 ;;  a               4   29[COMRAM] long 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;		None
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  4   25[COMRAM] long 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0, cstack
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6896 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;Total ram usage:        8 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; Hardware stack levels required when called: 1
  6903 ;; This function calls:
  6904 ;;		___fladd
  6905 ;; This function is called by:
  6906 ;;		_efgtoa
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text19
  6911  00514A                     __ptext19:
  6912                           	callstack 0
  6913  00514A                     ___flsub:
  6914                           	callstack 24
  6915  00514A  0E00               	movlw	0
  6916  00514C  1A1E               	xorwf	___flsub@a^0,f,c
  6917  00514E  0E00               	movlw	0
  6918  005150  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6919  005152  0E00               	movlw	0
  6920  005154  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6921  005156  0E80               	movlw	128
  6922  005158  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6923  00515A  C01A  F001         	movff	___flsub@b,___fladd@b
  6924  00515E  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6925  005162  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6926  005166  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6927  00516A  C01E  F005         	movff	___flsub@a,___fladd@a
  6928  00516E  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6929  005172  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6930  005176  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6931  00517A  EC9B  F015         	call	___fladd	;wreg free
  6932  00517E  C001  F01A         	movff	?___fladd,?___flsub
  6933  005182  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6934  005186  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6935  00518A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6936  00518E  0012               	return		;funcret
  6937  005190                     __end_of___flsub:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function ___fladd *****************
  6941 ;; Defined at:
  6942 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  b               4    0[COMRAM] long 
  6945 ;;  a               4    4[COMRAM] long 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  grs             1   15[COMRAM] unsigned char 
  6948 ;;  bexp            1   14[COMRAM] unsigned char 
  6949 ;;  aexp            1   13[COMRAM] unsigned char 
  6950 ;;  signs           1   12[COMRAM] unsigned char 
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  4    0[COMRAM] unsigned char 
  6953 ;; Registers used:
  6954 ;;		wreg, status,2, status,0
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6960 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6961 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;Total ram usage:       16 bytes
  6965 ;; Hardware stack levels used: 1
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		___flsub
  6970 ;;		_efgtoa
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text20
  6975  002B36                     __ptext20:
  6976                           	callstack 0
  6977  002B36                     ___fladd:
  6978                           	callstack 24
  6979  002B36  5004               	movf	(___fladd@b+3)^0,w,c
  6980  002B38  0B80               	andlw	128
  6981  002B3A  6E0D               	movwf	___fladd@signs^0,c
  6982  002B3C  5004               	movf	(___fladd@b+3)^0,w,c
  6983  002B3E  2404               	addwf	(___fladd@b+3)^0,w,c
  6984  002B40  6E0F               	movwf	___fladd@bexp^0,c
  6985  002B42  AE03               	btfss	(___fladd@b+2)^0,7,c
  6986  002B44  EFA6  F015         	goto	u3961
  6987  002B48  EFA8  F015         	goto	u3960
  6988  002B4C                     u3961:
  6989  002B4C  EFA9  F015         	goto	l3988
  6990  002B50                     u3960:
  6991  002B50  800F               	bsf	___fladd@bexp^0,0,c
  6992  002B52                     l3988:
  6993  002B52  500F               	movf	___fladd@bexp^0,w,c
  6994  002B54  B4D8               	btfsc	status,2,c
  6995  002B56  EFAF  F015         	goto	u3971
  6996  002B5A  EFB1  F015         	goto	u3970
  6997  002B5E                     u3971:
  6998  002B5E  EFC6  F015         	goto	l3998
  6999  002B62                     u3970:
  7000  002B62  280F               	incf	___fladd@bexp^0,w,c
  7001  002B64  A4D8               	btfss	status,2,c
  7002  002B66  EFB7  F015         	goto	u3981
  7003  002B6A  EFB9  F015         	goto	u3980
  7004  002B6E                     u3981:
  7005  002B6E  EFC1  F015         	goto	l3994
  7006  002B72                     u3980:
  7007  002B72  0E00               	movlw	0
  7008  002B74  6E01               	movwf	___fladd@b^0,c
  7009  002B76  0E00               	movlw	0
  7010  002B78  6E02               	movwf	(___fladd@b+1)^0,c
  7011  002B7A  0E00               	movlw	0
  7012  002B7C  6E03               	movwf	(___fladd@b+2)^0,c
  7013  002B7E  0E00               	movlw	0
  7014  002B80  6E04               	movwf	(___fladd@b+3)^0,c
  7015  002B82                     l3994:
  7016  002B82  8E03               	bsf	(___fladd@b+2)^0,7,c
  7017  002B84  0E00               	movlw	0
  7018  002B86  6E04               	movwf	(___fladd@b+3)^0,c
  7019  002B88  EFCE  F015         	goto	l4000
  7020  002B8C                     l3998:
  7021  002B8C  0E00               	movlw	0
  7022  002B8E  6E01               	movwf	___fladd@b^0,c
  7023  002B90  0E00               	movlw	0
  7024  002B92  6E02               	movwf	(___fladd@b+1)^0,c
  7025  002B94  0E00               	movlw	0
  7026  002B96  6E03               	movwf	(___fladd@b+2)^0,c
  7027  002B98  0E00               	movlw	0
  7028  002B9A  6E04               	movwf	(___fladd@b+3)^0,c
  7029  002B9C                     l4000:
  7030  002B9C  5008               	movf	(___fladd@a+3)^0,w,c
  7031  002B9E  0B80               	andlw	128
  7032  002BA0  6E0E               	movwf	___fladd@aexp^0,c
  7033  002BA2  500D               	movf	___fladd@signs^0,w,c
  7034  002BA4  180E               	xorwf	___fladd@aexp^0,w,c
  7035  002BA6  B4D8               	btfsc	status,2,c
  7036  002BA8  EFD8  F015         	goto	u3991
  7037  002BAC  EFDA  F015         	goto	u3990
  7038  002BB0                     u3991:
  7039  002BB0  EFDB  F015         	goto	l4006
  7040  002BB4                     u3990:
  7041  002BB4  8C0D               	bsf	___fladd@signs^0,6,c
  7042  002BB6                     l4006:
  7043  002BB6  5008               	movf	(___fladd@a+3)^0,w,c
  7044  002BB8  2408               	addwf	(___fladd@a+3)^0,w,c
  7045  002BBA  6E0E               	movwf	___fladd@aexp^0,c
  7046  002BBC  AE07               	btfss	(___fladd@a+2)^0,7,c
  7047  002BBE  EFE3  F015         	goto	u4001
  7048  002BC2  EFE5  F015         	goto	u4000
  7049  002BC6                     u4001:
  7050  002BC6  EFE6  F015         	goto	l4012
  7051  002BCA                     u4000:
  7052  002BCA  800E               	bsf	___fladd@aexp^0,0,c
  7053  002BCC                     l4012:
  7054  002BCC  500E               	movf	___fladd@aexp^0,w,c
  7055  002BCE  B4D8               	btfsc	status,2,c
  7056  002BD0  EFEC  F015         	goto	u4011
  7057  002BD4  EFEE  F015         	goto	u4010
  7058  002BD8                     u4011:
  7059  002BD8  EF03  F016         	goto	l4022
  7060  002BDC                     u4010:
  7061  002BDC  280E               	incf	___fladd@aexp^0,w,c
  7062  002BDE  A4D8               	btfss	status,2,c
  7063  002BE0  EFF4  F015         	goto	u4021
  7064  002BE4  EFF6  F015         	goto	u4020
  7065  002BE8                     u4021:
  7066  002BE8  EFFE  F015         	goto	l4018
  7067  002BEC                     u4020:
  7068  002BEC  0E00               	movlw	0
  7069  002BEE  6E05               	movwf	___fladd@a^0,c
  7070  002BF0  0E00               	movlw	0
  7071  002BF2  6E06               	movwf	(___fladd@a+1)^0,c
  7072  002BF4  0E00               	movlw	0
  7073  002BF6  6E07               	movwf	(___fladd@a+2)^0,c
  7074  002BF8  0E00               	movlw	0
  7075  002BFA  6E08               	movwf	(___fladd@a+3)^0,c
  7076  002BFC                     l4018:
  7077  002BFC  8E07               	bsf	(___fladd@a+2)^0,7,c
  7078  002BFE  0E00               	movlw	0
  7079  002C00  6E08               	movwf	(___fladd@a+3)^0,c
  7080  002C02  EF0B  F016         	goto	l4024
  7081  002C06                     l4022:
  7082  002C06  0E00               	movlw	0
  7083  002C08  6E05               	movwf	___fladd@a^0,c
  7084  002C0A  0E00               	movlw	0
  7085  002C0C  6E06               	movwf	(___fladd@a+1)^0,c
  7086  002C0E  0E00               	movlw	0
  7087  002C10  6E07               	movwf	(___fladd@a+2)^0,c
  7088  002C12  0E00               	movlw	0
  7089  002C14  6E08               	movwf	(___fladd@a+3)^0,c
  7090  002C16                     l4024:
  7091  002C16  500F               	movf	___fladd@bexp^0,w,c
  7092  002C18  5C0E               	subwf	___fladd@aexp^0,w,c
  7093  002C1A  B0D8               	btfsc	status,0,c
  7094  002C1C  EF12  F016         	goto	u4031
  7095  002C20  EF14  F016         	goto	u4030
  7096  002C24                     u4031:
  7097  002C24  EF3B  F016         	goto	l4060
  7098  002C28                     u4030:
  7099  002C28  AC0D               	btfss	___fladd@signs^0,6,c
  7100  002C2A  EF19  F016         	goto	u4041
  7101  002C2E  EF1B  F016         	goto	u4040
  7102  002C32                     u4041:
  7103  002C32  EF1D  F016         	goto	l4030
  7104  002C36                     u4040:
  7105  002C36  0E80               	movlw	128
  7106  002C38  1A0D               	xorwf	___fladd@signs^0,f,c
  7107  002C3A                     l4030:
  7108  002C3A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7109  002C3E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7110  002C42  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7111  002C46  C001  F010         	movff	___fladd@b,___fladd@grs
  7112  002C4A  C005  F001         	movff	___fladd@a,___fladd@b
  7113  002C4E  C010  F005         	movff	___fladd@grs,___fladd@a
  7114  002C52  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7115  002C56  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7116  002C5A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7117  002C5E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7118  002C62  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7119  002C66  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7120  002C6A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7121  002C6E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7122  002C72  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7123  002C76                     l4060:
  7124  002C76  0E00               	movlw	0
  7125  002C78  6E10               	movwf	___fladd@grs^0,c
  7126  002C7A  500F               	movf	___fladd@bexp^0,w,c
  7127  002C7C  C00E  F009         	movff	___fladd@aexp,??___fladd
  7128  002C80  6A0A               	clrf	(??___fladd+1)^0,c
  7129  002C82  5E09               	subwf	??___fladd^0,f,c
  7130  002C84  0E00               	movlw	0
  7131  002C86  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7132  002C88  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7133  002C8A  EF50  F016         	goto	u4051
  7134  002C8E  500A               	movf	(??___fladd+1)^0,w,c
  7135  002C90  E109               	bnz	u4050
  7136  002C92  0E1A               	movlw	26
  7137  002C94  5C09               	subwf	??___fladd^0,w,c
  7138  002C96  A0D8               	btfss	status,0,c
  7139  002C98  EF50  F016         	goto	u4051
  7140  002C9C  EF52  F016         	goto	u4050
  7141  002CA0                     u4051:
  7142  002CA0  EF89  F016         	goto	l1163
  7143  002CA4                     u4050:
  7144  002CA4  5001               	movf	___fladd@b^0,w,c
  7145  002CA6  1002               	iorwf	(___fladd@b+1)^0,w,c
  7146  002CA8  1003               	iorwf	(___fladd@b+2)^0,w,c
  7147  002CAA  1004               	iorwf	(___fladd@b+3)^0,w,c
  7148  002CAC  A4D8               	btfss	status,2,c
  7149  002CAE  EF5B  F016         	goto	u4061
  7150  002CB2  EF5E  F016         	goto	u4060
  7151  002CB6                     u4061:
  7152  002CB6  0E01               	movlw	1
  7153  002CB8  EF5F  F016         	goto	u4070
  7154  002CBC                     u4060:
  7155  002CBC  0E00               	movlw	0
  7156  002CBE                     u4070:
  7157  002CBE  6E10               	movwf	___fladd@grs^0,c
  7158  002CC0  0E00               	movlw	0
  7159  002CC2  6E01               	movwf	___fladd@b^0,c
  7160  002CC4  0E00               	movlw	0
  7161  002CC6  6E02               	movwf	(___fladd@b+1)^0,c
  7162  002CC8  0E00               	movlw	0
  7163  002CCA  6E03               	movwf	(___fladd@b+2)^0,c
  7164  002CCC  0E00               	movlw	0
  7165  002CCE  6E04               	movwf	(___fladd@b+3)^0,c
  7166  002CD0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7167  002CD4  EF92  F016         	goto	l1162
  7168  002CD8                     l1164:
  7169  002CD8  A010               	btfss	___fladd@grs^0,0,c
  7170  002CDA  EF71  F016         	goto	u4081
  7171  002CDE  EF73  F016         	goto	u4080
  7172  002CE2                     u4081:
  7173  002CE2  EF79  F016         	goto	l4072
  7174  002CE6                     u4080:
  7175  002CE6  90D8               	bcf	status,0,c
  7176  002CE8  3010               	rrcf	___fladd@grs^0,w,c
  7177  002CEA  0901               	iorlw	1
  7178  002CEC  6E10               	movwf	___fladd@grs^0,c
  7179  002CEE  EF7B  F016         	goto	l4074
  7180  002CF2                     l4072:
  7181  002CF2  90D8               	bcf	status,0,c
  7182  002CF4  3210               	rrcf	___fladd@grs^0,f,c
  7183  002CF6                     l4074:
  7184  002CF6  A001               	btfss	___fladd@b^0,0,c
  7185  002CF8  EF80  F016         	goto	u4091
  7186  002CFC  EF82  F016         	goto	u4090
  7187  002D00                     u4091:
  7188  002D00  EF83  F016         	goto	l4078
  7189  002D04                     u4090:
  7190  002D04  8E10               	bsf	___fladd@grs^0,7,c
  7191  002D06                     l4078:
  7192  002D06  3404               	rlcf	(___fladd@b+3)^0,w,c
  7193  002D08  3204               	rrcf	(___fladd@b+3)^0,f,c
  7194  002D0A  3203               	rrcf	(___fladd@b+2)^0,f,c
  7195  002D0C  3202               	rrcf	(___fladd@b+1)^0,f,c
  7196  002D0E  3201               	rrcf	___fladd@b^0,f,c
  7197  002D10  2A0F               	incf	___fladd@bexp^0,f,c
  7198  002D12                     l1163:
  7199  002D12  500E               	movf	___fladd@aexp^0,w,c
  7200  002D14  5C0F               	subwf	___fladd@bexp^0,w,c
  7201  002D16  A0D8               	btfss	status,0,c
  7202  002D18  EF90  F016         	goto	u4101
  7203  002D1C  EF92  F016         	goto	u4100
  7204  002D20                     u4101:
  7205  002D20  EF6C  F016         	goto	l1164
  7206  002D24                     u4100:
  7207  002D24                     l1162:
  7208  002D24  BC0D               	btfsc	___fladd@signs^0,6,c
  7209  002D26  EF97  F016         	goto	u4111
  7210  002D2A  EF99  F016         	goto	u4110
  7211  002D2E                     u4111:
  7212  002D2E  EFD9  F016         	goto	l4106
  7213  002D32                     u4110:
  7214  002D32  500F               	movf	___fladd@bexp^0,w,c
  7215  002D34  A4D8               	btfss	status,2,c
  7216  002D36  EF9F  F016         	goto	u4121
  7217  002D3A  EFA1  F016         	goto	u4120
  7218  002D3E                     u4121:
  7219  002D3E  EFAB  F016         	goto	l4088
  7220  002D42                     u4120:
  7221  002D42  0E00               	movlw	0
  7222  002D44  6E01               	movwf	?___fladd^0,c
  7223  002D46  0E00               	movlw	0
  7224  002D48  6E02               	movwf	(?___fladd+1)^0,c
  7225  002D4A  0E00               	movlw	0
  7226  002D4C  6E03               	movwf	(?___fladd+2)^0,c
  7227  002D4E  0E00               	movlw	0
  7228  002D50  6E04               	movwf	(?___fladd+3)^0,c
  7229  002D52  EFFA  F017         	goto	l1171
  7230  002D56                     l4088:
  7231  002D56  5005               	movf	___fladd@a^0,w,c
  7232  002D58  2601               	addwf	___fladd@b^0,f,c
  7233  002D5A  5006               	movf	(___fladd@a+1)^0,w,c
  7234  002D5C  2202               	addwfc	(___fladd@b+1)^0,f,c
  7235  002D5E  5007               	movf	(___fladd@a+2)^0,w,c
  7236  002D60  2203               	addwfc	(___fladd@b+2)^0,f,c
  7237  002D62  5008               	movf	(___fladd@a+3)^0,w,c
  7238  002D64  2204               	addwfc	(___fladd@b+3)^0,f,c
  7239  002D66  A004               	btfss	(___fladd@b+3)^0,0,c
  7240  002D68  EFB8  F016         	goto	u4131
  7241  002D6C  EFBA  F016         	goto	u4130
  7242  002D70                     u4131:
  7243  002D70  EF66  F017         	goto	l4142
  7244  002D74                     u4130:
  7245  002D74  A010               	btfss	___fladd@grs^0,0,c
  7246  002D76  EFBF  F016         	goto	u4141
  7247  002D7A  EFC1  F016         	goto	u4140
  7248  002D7E                     u4141:
  7249  002D7E  EFC7  F016         	goto	l4096
  7250  002D82                     u4140:
  7251  002D82  90D8               	bcf	status,0,c
  7252  002D84  3010               	rrcf	___fladd@grs^0,w,c
  7253  002D86  0901               	iorlw	1
  7254  002D88  6E10               	movwf	___fladd@grs^0,c
  7255  002D8A  EFC9  F016         	goto	l4098
  7256  002D8E                     l4096:
  7257  002D8E  90D8               	bcf	status,0,c
  7258  002D90  3210               	rrcf	___fladd@grs^0,f,c
  7259  002D92                     l4098:
  7260  002D92  A001               	btfss	___fladd@b^0,0,c
  7261  002D94  EFCE  F016         	goto	u4151
  7262  002D98  EFD0  F016         	goto	u4150
  7263  002D9C                     u4151:
  7264  002D9C  EFD1  F016         	goto	l4102
  7265  002DA0                     u4150:
  7266  002DA0  8E10               	bsf	___fladd@grs^0,7,c
  7267  002DA2                     l4102:
  7268  002DA2  3404               	rlcf	(___fladd@b+3)^0,w,c
  7269  002DA4  3204               	rrcf	(___fladd@b+3)^0,f,c
  7270  002DA6  3203               	rrcf	(___fladd@b+2)^0,f,c
  7271  002DA8  3202               	rrcf	(___fladd@b+1)^0,f,c
  7272  002DAA  3201               	rrcf	___fladd@b^0,f,c
  7273  002DAC  2A0F               	incf	___fladd@bexp^0,f,c
  7274  002DAE  EF66  F017         	goto	l4142
  7275  002DB2                     l4106:
  7276  002DB2  5005               	movf	___fladd@a^0,w,c
  7277  002DB4  5C01               	subwf	___fladd@b^0,w,c
  7278  002DB6  5006               	movf	(___fladd@a+1)^0,w,c
  7279  002DB8  5802               	subwfb	(___fladd@b+1)^0,w,c
  7280  002DBA  5007               	movf	(___fladd@a+2)^0,w,c
  7281  002DBC  5803               	subwfb	(___fladd@b+2)^0,w,c
  7282  002DBE  5004               	movf	(___fladd@b+3)^0,w,c
  7283  002DC0  0A80               	xorlw	128
  7284  002DC2  6E09               	movwf	??___fladd^0,c
  7285  002DC4  5008               	movf	(___fladd@a+3)^0,w,c
  7286  002DC6  0A80               	xorlw	128
  7287  002DC8  5809               	subwfb	??___fladd^0,w,c
  7288  002DCA  B0D8               	btfsc	status,0,c
  7289  002DCC  EFEA  F016         	goto	u4161
  7290  002DD0  EFEC  F016         	goto	u4160
  7291  002DD4                     u4161:
  7292  002DD4  EF17  F017         	goto	l4116
  7293  002DD8                     u4160:
  7294  002DD8  5001               	movf	___fladd@b^0,w,c
  7295  002DDA  5C05               	subwf	___fladd@a^0,w,c
  7296  002DDC  6E09               	movwf	??___fladd^0,c
  7297  002DDE  5002               	movf	(___fladd@b+1)^0,w,c
  7298  002DE0  5806               	subwfb	(___fladd@a+1)^0,w,c
  7299  002DE2  6E0A               	movwf	(??___fladd+1)^0,c
  7300  002DE4  5003               	movf	(___fladd@b+2)^0,w,c
  7301  002DE6  5807               	subwfb	(___fladd@a+2)^0,w,c
  7302  002DE8  6E0B               	movwf	(??___fladd+2)^0,c
  7303  002DEA  5004               	movf	(___fladd@b+3)^0,w,c
  7304  002DEC  5808               	subwfb	(___fladd@a+3)^0,w,c
  7305  002DEE  6E0C               	movwf	(??___fladd+3)^0,c
  7306  002DF0  0EFF               	movlw	255
  7307  002DF2  2409               	addwf	??___fladd^0,w,c
  7308  002DF4  6E01               	movwf	___fladd@b^0,c
  7309  002DF6  0EFF               	movlw	255
  7310  002DF8  200A               	addwfc	(??___fladd+1)^0,w,c
  7311  002DFA  6E02               	movwf	(___fladd@b+1)^0,c
  7312  002DFC  0EFF               	movlw	255
  7313  002DFE  200B               	addwfc	(??___fladd+2)^0,w,c
  7314  002E00  6E03               	movwf	(___fladd@b+2)^0,c
  7315  002E02  0EFF               	movlw	255
  7316  002E04  200C               	addwfc	(??___fladd+3)^0,w,c
  7317  002E06  6E04               	movwf	(___fladd@b+3)^0,c
  7318  002E08  0E80               	movlw	128
  7319  002E0A  1A0D               	xorwf	___fladd@signs^0,f,c
  7320  002E0C  6C10               	negf	___fladd@grs^0,c
  7321  002E0E  5010               	movf	___fladd@grs^0,w,c
  7322  002E10  A4D8               	btfss	status,2,c
  7323  002E12  EF0D  F017         	goto	u4171
  7324  002E16  EF0F  F017         	goto	u4170
  7325  002E1A                     u4171:
  7326  002E1A  EF1F  F017         	goto	l1179
  7327  002E1E                     u4170:
  7328  002E1E  0E01               	movlw	1
  7329  002E20  2601               	addwf	___fladd@b^0,f,c
  7330  002E22  0E00               	movlw	0
  7331  002E24  2202               	addwfc	(___fladd@b+1)^0,f,c
  7332  002E26  2203               	addwfc	(___fladd@b+2)^0,f,c
  7333  002E28  2204               	addwfc	(___fladd@b+3)^0,f,c
  7334  002E2A  EF1F  F017         	goto	l1179
  7335  002E2E                     l4116:
  7336  002E2E  5005               	movf	___fladd@a^0,w,c
  7337  002E30  5E01               	subwf	___fladd@b^0,f,c
  7338  002E32  5006               	movf	(___fladd@a+1)^0,w,c
  7339  002E34  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7340  002E36  5007               	movf	(___fladd@a+2)^0,w,c
  7341  002E38  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7342  002E3A  5008               	movf	(___fladd@a+3)^0,w,c
  7343  002E3C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7344  002E3E                     l1179:
  7345  002E3E  5001               	movf	___fladd@b^0,w,c
  7346  002E40  1002               	iorwf	(___fladd@b+1)^0,w,c
  7347  002E42  1003               	iorwf	(___fladd@b+2)^0,w,c
  7348  002E44  1004               	iorwf	(___fladd@b+3)^0,w,c
  7349  002E46  A4D8               	btfss	status,2,c
  7350  002E48  EF28  F017         	goto	u4181
  7351  002E4C  EF2A  F017         	goto	u4180
  7352  002E50                     u4181:
  7353  002E50  EF5F  F017         	goto	l4140
  7354  002E54                     u4180:
  7355  002E54  5010               	movf	___fladd@grs^0,w,c
  7356  002E56  A4D8               	btfss	status,2,c
  7357  002E58  EF30  F017         	goto	u4191
  7358  002E5C  EF32  F017         	goto	u4190
  7359  002E60                     u4191:
  7360  002E60  EF5F  F017         	goto	l4140
  7361  002E64                     u4190:
  7362  002E64  0E00               	movlw	0
  7363  002E66  6E01               	movwf	?___fladd^0,c
  7364  002E68  0E00               	movlw	0
  7365  002E6A  6E02               	movwf	(?___fladd+1)^0,c
  7366  002E6C  0E00               	movlw	0
  7367  002E6E  6E03               	movwf	(?___fladd+2)^0,c
  7368  002E70  0E00               	movlw	0
  7369  002E72  6E04               	movwf	(?___fladd+3)^0,c
  7370  002E74  EFFA  F017         	goto	l1171
  7371  002E78                     l4124:
  7372  002E78  90D8               	bcf	status,0,c
  7373  002E7A  3601               	rlcf	___fladd@b^0,f,c
  7374  002E7C  3602               	rlcf	(___fladd@b+1)^0,f,c
  7375  002E7E  3603               	rlcf	(___fladd@b+2)^0,f,c
  7376  002E80  3604               	rlcf	(___fladd@b+3)^0,f,c
  7377  002E82  AE10               	btfss	___fladd@grs^0,7,c
  7378  002E84  EF46  F017         	goto	u4201
  7379  002E88  EF48  F017         	goto	u4200
  7380  002E8C                     u4201:
  7381  002E8C  EF49  F017         	goto	l4130
  7382  002E90                     u4200:
  7383  002E90  8001               	bsf	___fladd@b^0,0,c
  7384  002E92                     l4130:
  7385  002E92  A010               	btfss	___fladd@grs^0,0,c
  7386  002E94  EF4E  F017         	goto	u4211
  7387  002E98  EF50  F017         	goto	u4210
  7388  002E9C                     u4211:
  7389  002E9C  EF54  F017         	goto	l4134
  7390  002EA0                     u4210:
  7391  002EA0  80D8               	bsf	status,0,c
  7392  002EA2  3610               	rlcf	___fladd@grs^0,f,c
  7393  002EA4  EF56  F017         	goto	l4136
  7394  002EA8                     l4134:
  7395  002EA8  90D8               	bcf	status,0,c
  7396  002EAA  3610               	rlcf	___fladd@grs^0,f,c
  7397  002EAC                     l4136:
  7398  002EAC  500F               	movf	___fladd@bexp^0,w,c
  7399  002EAE  B4D8               	btfsc	status,2,c
  7400  002EB0  EF5C  F017         	goto	u4221
  7401  002EB4  EF5E  F017         	goto	u4220
  7402  002EB8                     u4221:
  7403  002EB8  EF5F  F017         	goto	l4140
  7404  002EBC                     u4220:
  7405  002EBC  060F               	decf	___fladd@bexp^0,f,c
  7406  002EBE                     l4140:
  7407  002EBE  AE03               	btfss	(___fladd@b+2)^0,7,c
  7408  002EC0  EF64  F017         	goto	u4231
  7409  002EC4  EF66  F017         	goto	u4230
  7410  002EC8                     u4231:
  7411  002EC8  EF3C  F017         	goto	l4124
  7412  002ECC                     u4230:
  7413  002ECC                     l4142:
  7414  002ECC  0E00               	movlw	0
  7415  002ECE  6E0E               	movwf	___fladd@aexp^0,c
  7416  002ED0  AE10               	btfss	___fladd@grs^0,7,c
  7417  002ED2  EF6D  F017         	goto	u4241
  7418  002ED6  EF6F  F017         	goto	u4240
  7419  002EDA                     u4241:
  7420  002EDA  EF87  F017         	goto	l1188
  7421  002EDE                     u4240:
  7422  002EDE  C010  F009         	movff	___fladd@grs,??___fladd
  7423  002EE2  0E7F               	movlw	127
  7424  002EE4  1609               	andwf	??___fladd^0,f,c
  7425  002EE6  B4D8               	btfsc	status,2,c
  7426  002EE8  EF78  F017         	goto	u4251
  7427  002EEC  EF7A  F017         	goto	u4250
  7428  002EF0                     u4251:
  7429  002EF0  EF7E  F017         	goto	l1189
  7430  002EF4                     u4250:
  7431  002EF4                     l4148:
  7432  002EF4  0E01               	movlw	1
  7433  002EF6  6E0E               	movwf	___fladd@aexp^0,c
  7434  002EF8  EF87  F017         	goto	l1188
  7435  002EFC                     l1189:
  7436  002EFC  A001               	btfss	___fladd@b^0,0,c
  7437  002EFE  EF83  F017         	goto	u4261
  7438  002F02  EF85  F017         	goto	u4260
  7439  002F06                     u4261:
  7440  002F06  EF87  F017         	goto	l1188
  7441  002F0A                     u4260:
  7442  002F0A  EF7A  F017         	goto	l4148
  7443  002F0E                     l1188:
  7444  002F0E  500E               	movf	___fladd@aexp^0,w,c
  7445  002F10  B4D8               	btfsc	status,2,c
  7446  002F12  EF8D  F017         	goto	u4271
  7447  002F16  EF8F  F017         	goto	u4270
  7448  002F1A                     u4271:
  7449  002F1A  EFBA  F017         	goto	l4160
  7450  002F1E                     u4270:
  7451  002F1E  0E01               	movlw	1
  7452  002F20  2601               	addwf	___fladd@b^0,f,c
  7453  002F22  0E00               	movlw	0
  7454  002F24  2202               	addwfc	(___fladd@b+1)^0,f,c
  7455  002F26  2203               	addwfc	(___fladd@b+2)^0,f,c
  7456  002F28  2204               	addwfc	(___fladd@b+3)^0,f,c
  7457  002F2A  A004               	btfss	(___fladd@b+3)^0,0,c
  7458  002F2C  EF9A  F017         	goto	u4281
  7459  002F30  EF9C  F017         	goto	u4280
  7460  002F34                     u4281:
  7461  002F34  EFBA  F017         	goto	l4160
  7462  002F38                     u4280:
  7463  002F38  C001  F009         	movff	___fladd@b,??___fladd
  7464  002F3C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7465  002F40  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7466  002F44  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7467  002F48  340C               	rlcf	(??___fladd+3)^0,w,c
  7468  002F4A  320C               	rrcf	(??___fladd+3)^0,f,c
  7469  002F4C  320B               	rrcf	(??___fladd+2)^0,f,c
  7470  002F4E  320A               	rrcf	(??___fladd+1)^0,f,c
  7471  002F50  3209               	rrcf	??___fladd^0,f,c
  7472  002F52  C009  F001         	movff	??___fladd,___fladd@b
  7473  002F56  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7474  002F5A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7475  002F5E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7476  002F62  280F               	incf	___fladd@bexp^0,w,c
  7477  002F64  B4D8               	btfsc	status,2,c
  7478  002F66  EFB7  F017         	goto	u4291
  7479  002F6A  EFB9  F017         	goto	u4290
  7480  002F6E                     u4291:
  7481  002F6E  EFBA  F017         	goto	l4160
  7482  002F72                     u4290:
  7483  002F72  2A0F               	incf	___fladd@bexp^0,f,c
  7484  002F74                     l4160:
  7485  002F74  280F               	incf	___fladd@bexp^0,w,c
  7486  002F76  B4D8               	btfsc	status,2,c
  7487  002F78  EFC0  F017         	goto	u4301
  7488  002F7C  EFC2  F017         	goto	u4300
  7489  002F80                     u4301:
  7490  002F80  EFCA  F017         	goto	l4164
  7491  002F84                     u4300:
  7492  002F84  500F               	movf	___fladd@bexp^0,w,c
  7493  002F86  A4D8               	btfss	status,2,c
  7494  002F88  EFC8  F017         	goto	u4311
  7495  002F8C  EFCA  F017         	goto	u4310
  7496  002F90                     u4311:
  7497  002F90  EFDC  F017         	goto	l4168
  7498  002F94                     u4310:
  7499  002F94                     l4164:
  7500  002F94  0E00               	movlw	0
  7501  002F96  6E01               	movwf	___fladd@b^0,c
  7502  002F98  0E00               	movlw	0
  7503  002F9A  6E02               	movwf	(___fladd@b+1)^0,c
  7504  002F9C  0E00               	movlw	0
  7505  002F9E  6E03               	movwf	(___fladd@b+2)^0,c
  7506  002FA0  0E00               	movlw	0
  7507  002FA2  6E04               	movwf	(___fladd@b+3)^0,c
  7508  002FA4  500F               	movf	___fladd@bexp^0,w,c
  7509  002FA6  A4D8               	btfss	status,2,c
  7510  002FA8  EFD8  F017         	goto	u4321
  7511  002FAC  EFDA  F017         	goto	u4320
  7512  002FB0                     u4321:
  7513  002FB0  EFDC  F017         	goto	l4168
  7514  002FB4                     u4320:
  7515  002FB4  0E00               	movlw	0
  7516  002FB6  6E0D               	movwf	___fladd@signs^0,c
  7517  002FB8                     l4168:
  7518  002FB8  A00F               	btfss	___fladd@bexp^0,0,c
  7519  002FBA  EFE1  F017         	goto	u4331
  7520  002FBE  EFE3  F017         	goto	u4330
  7521  002FC2                     u4331:
  7522  002FC2  EFE6  F017         	goto	l4172
  7523  002FC6                     u4330:
  7524  002FC6  8E03               	bsf	(___fladd@b+2)^0,7,c
  7525  002FC8  EFE7  F017         	goto	l4174
  7526  002FCC                     l4172:
  7527  002FCC  9E03               	bcf	(___fladd@b+2)^0,7,c
  7528  002FCE                     l4174:
  7529  002FCE  90D8               	bcf	status,0,c
  7530  002FD0  300F               	rrcf	___fladd@bexp^0,w,c
  7531  002FD2  6E04               	movwf	(___fladd@b+3)^0,c
  7532  002FD4  AE0D               	btfss	___fladd@signs^0,7,c
  7533  002FD6  EFEF  F017         	goto	u4341
  7534  002FDA  EFF1  F017         	goto	u4340
  7535  002FDE                     u4341:
  7536  002FDE  EFF2  F017         	goto	l4180
  7537  002FE2                     u4340:
  7538  002FE2  8E04               	bsf	(___fladd@b+3)^0,7,c
  7539  002FE4                     l4180:
  7540  002FE4  C001  F001         	movff	___fladd@b,?___fladd
  7541  002FE8  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7542  002FEC  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7543  002FF0  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7544  002FF4                     l1171:
  7545  002FF4  0012               	return		;funcret
  7546  002FF6                     __end_of___fladd:
  7547                           	callstack 0
  7548                           
  7549 ;; *************** function ___flneg *****************
  7550 ;; Defined at:
  7551 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  f1              4    0[COMRAM] unsigned char 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  4    0[COMRAM] unsigned char 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7569 ;;Total ram usage:        4 bytes
  7570 ;; Hardware stack levels used: 1
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_efgtoa
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text21
  7579  0052C6                     __ptext21:
  7580                           	callstack 0
  7581  0052C6                     ___flneg:
  7582                           	callstack 25
  7583  0052C6  5001               	movf	___flneg@f1^0,w,c
  7584  0052C8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7585  0052CA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7586  0052CC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7587  0052CE  B4D8               	btfsc	status,2,c
  7588  0052D0  EF6C  F029         	goto	u5151
  7589  0052D4  EF6E  F029         	goto	u5150
  7590  0052D8                     u5151:
  7591  0052D8  EF76  F029         	goto	l4688
  7592  0052DC                     u5150:
  7593  0052DC  0E00               	movlw	0
  7594  0052DE  1A01               	xorwf	___flneg@f1^0,f,c
  7595  0052E0  0E00               	movlw	0
  7596  0052E2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7597  0052E4  0E00               	movlw	0
  7598  0052E6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7599  0052E8  0E80               	movlw	128
  7600  0052EA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7601  0052EC                     l4688:
  7602  0052EC  C001  F001         	movff	___flneg@f1,?___flneg
  7603  0052F0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7604  0052F4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7605  0052F8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7606  0052FC  0012               	return		;funcret
  7607  0052FE                     __end_of___flneg:
  7608                           	callstack 0
  7609                           
  7610 ;; *************** function ___flmul *****************
  7611 ;; Defined at:
  7612 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  b               4    0[COMRAM] unsigned char 
  7615 ;;  a               4    4[COMRAM] unsigned char 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  prod            4   19[COMRAM] struct .
  7618 ;;  grs             4   13[COMRAM] unsigned long 
  7619 ;;  temp            2   23[COMRAM] struct .
  7620 ;;  bexp            1   18[COMRAM] unsigned char 
  7621 ;;  aexp            1   17[COMRAM] unsigned char 
  7622 ;;  sign            1   12[COMRAM] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  4    0[COMRAM] unsigned char 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, prodl, prodh
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7632 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;Total ram usage:       25 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_efgtoa
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text22
  7646  002FF6                     __ptext22:
  7647                           	callstack 0
  7648  002FF6                     ___flmul:
  7649                           	callstack 25
  7650  002FF6  5004               	movf	(___flmul@b+3)^0,w,c
  7651  002FF8  0B80               	andlw	128
  7652  002FFA  6E0D               	movwf	___flmul@sign^0,c
  7653  002FFC  5004               	movf	(___flmul@b+3)^0,w,c
  7654  002FFE  2404               	addwf	(___flmul@b+3)^0,w,c
  7655  003000  6E13               	movwf	___flmul@bexp^0,c
  7656  003002  AE03               	btfss	(___flmul@b+2)^0,7,c
  7657  003004  EF06  F018         	goto	u4761
  7658  003008  EF08  F018         	goto	u4760
  7659  00300C                     u4761:
  7660  00300C  EF09  F018         	goto	l4436
  7661  003010                     u4760:
  7662  003010  8013               	bsf	___flmul@bexp^0,0,c
  7663  003012                     l4436:
  7664  003012  5013               	movf	___flmul@bexp^0,w,c
  7665  003014  B4D8               	btfsc	status,2,c
  7666  003016  EF0F  F018         	goto	u4771
  7667  00301A  EF11  F018         	goto	u4770
  7668  00301E                     u4771:
  7669  00301E  EF24  F018         	goto	l4444
  7670  003022                     u4770:
  7671  003022  2813               	incf	___flmul@bexp^0,w,c
  7672  003024  A4D8               	btfss	status,2,c
  7673  003026  EF17  F018         	goto	u4781
  7674  00302A  EF19  F018         	goto	u4780
  7675  00302E                     u4781:
  7676  00302E  EF21  F018         	goto	l4442
  7677  003032                     u4780:
  7678  003032  0E00               	movlw	0
  7679  003034  6E01               	movwf	___flmul@b^0,c
  7680  003036  0E00               	movlw	0
  7681  003038  6E02               	movwf	(___flmul@b+1)^0,c
  7682  00303A  0E00               	movlw	0
  7683  00303C  6E03               	movwf	(___flmul@b+2)^0,c
  7684  00303E  0E00               	movlw	0
  7685  003040  6E04               	movwf	(___flmul@b+3)^0,c
  7686  003042                     l4442:
  7687  003042  8E03               	bsf	(___flmul@b+2)^0,7,c
  7688  003044  EF2C  F018         	goto	l4446
  7689  003048                     l4444:
  7690  003048  0E00               	movlw	0
  7691  00304A  6E01               	movwf	___flmul@b^0,c
  7692  00304C  0E00               	movlw	0
  7693  00304E  6E02               	movwf	(___flmul@b+1)^0,c
  7694  003050  0E00               	movlw	0
  7695  003052  6E03               	movwf	(___flmul@b+2)^0,c
  7696  003054  0E00               	movlw	0
  7697  003056  6E04               	movwf	(___flmul@b+3)^0,c
  7698  003058                     l4446:
  7699  003058  5008               	movf	(___flmul@a+3)^0,w,c
  7700  00305A  0B80               	andlw	128
  7701  00305C  1A0D               	xorwf	___flmul@sign^0,f,c
  7702  00305E  5008               	movf	(___flmul@a+3)^0,w,c
  7703  003060  2408               	addwf	(___flmul@a+3)^0,w,c
  7704  003062  6E12               	movwf	___flmul@aexp^0,c
  7705  003064  AE07               	btfss	(___flmul@a+2)^0,7,c
  7706  003066  EF37  F018         	goto	u4791
  7707  00306A  EF39  F018         	goto	u4790
  7708  00306E                     u4791:
  7709  00306E  EF3A  F018         	goto	l4454
  7710  003072                     u4790:
  7711  003072  8012               	bsf	___flmul@aexp^0,0,c
  7712  003074                     l4454:
  7713  003074  5012               	movf	___flmul@aexp^0,w,c
  7714  003076  B4D8               	btfsc	status,2,c
  7715  003078  EF40  F018         	goto	u4801
  7716  00307C  EF42  F018         	goto	u4800
  7717  003080                     u4801:
  7718  003080  EF55  F018         	goto	l4462
  7719  003084                     u4800:
  7720  003084  2812               	incf	___flmul@aexp^0,w,c
  7721  003086  A4D8               	btfss	status,2,c
  7722  003088  EF48  F018         	goto	u4811
  7723  00308C  EF4A  F018         	goto	u4810
  7724  003090                     u4811:
  7725  003090  EF52  F018         	goto	l4460
  7726  003094                     u4810:
  7727  003094  0E00               	movlw	0
  7728  003096  6E05               	movwf	___flmul@a^0,c
  7729  003098  0E00               	movlw	0
  7730  00309A  6E06               	movwf	(___flmul@a+1)^0,c
  7731  00309C  0E00               	movlw	0
  7732  00309E  6E07               	movwf	(___flmul@a+2)^0,c
  7733  0030A0  0E00               	movlw	0
  7734  0030A2  6E08               	movwf	(___flmul@a+3)^0,c
  7735  0030A4                     l4460:
  7736  0030A4  8E07               	bsf	(___flmul@a+2)^0,7,c
  7737  0030A6  EF5D  F018         	goto	l1248
  7738  0030AA                     l4462:
  7739  0030AA  0E00               	movlw	0
  7740  0030AC  6E05               	movwf	___flmul@a^0,c
  7741  0030AE  0E00               	movlw	0
  7742  0030B0  6E06               	movwf	(___flmul@a+1)^0,c
  7743  0030B2  0E00               	movlw	0
  7744  0030B4  6E07               	movwf	(___flmul@a+2)^0,c
  7745  0030B6  0E00               	movlw	0
  7746  0030B8  6E08               	movwf	(___flmul@a+3)^0,c
  7747  0030BA                     l1248:
  7748  0030BA  5012               	movf	___flmul@aexp^0,w,c
  7749  0030BC  B4D8               	btfsc	status,2,c
  7750  0030BE  EF63  F018         	goto	u4821
  7751  0030C2  EF65  F018         	goto	u4820
  7752  0030C6                     u4821:
  7753  0030C6  EF6D  F018         	goto	l4466
  7754  0030CA                     u4820:
  7755  0030CA  5013               	movf	___flmul@bexp^0,w,c
  7756  0030CC  A4D8               	btfss	status,2,c
  7757  0030CE  EF6B  F018         	goto	u4831
  7758  0030D2  EF6D  F018         	goto	u4830
  7759  0030D6                     u4831:
  7760  0030D6  EF77  F018         	goto	l4470
  7761  0030DA                     u4830:
  7762  0030DA                     l4466:
  7763  0030DA  0E00               	movlw	0
  7764  0030DC  6E01               	movwf	?___flmul^0,c
  7765  0030DE  0E00               	movlw	0
  7766  0030E0  6E02               	movwf	(?___flmul+1)^0,c
  7767  0030E2  0E00               	movlw	0
  7768  0030E4  6E03               	movwf	(?___flmul+2)^0,c
  7769  0030E6  0E00               	movlw	0
  7770  0030E8  6E04               	movwf	(?___flmul+3)^0,c
  7771  0030EA  EF0F  F01A         	goto	l1252
  7772  0030EE                     l4470:
  7773  0030EE  5007               	movf	(___flmul@a+2)^0,w,c
  7774  0030F0  0201               	mulwf	___flmul@b^0,c
  7775  0030F2  CFF3 F018          	movff	prodl,___flmul@temp
  7776  0030F6  CFF4 F019          	movff	prodh,___flmul@temp+1
  7777  0030FA  5018               	movf	___flmul@temp^0,w,c
  7778  0030FC  6E0E               	movwf	___flmul@grs^0,c
  7779  0030FE  6A0F               	clrf	(___flmul@grs+1)^0,c
  7780  003100  6A10               	clrf	(___flmul@grs+2)^0,c
  7781  003102  6A11               	clrf	(___flmul@grs+3)^0,c
  7782  003104  5019               	movf	(___flmul@temp+1)^0,w,c
  7783  003106  6E14               	movwf	___flmul@prod^0,c
  7784  003108  6A15               	clrf	(___flmul@prod+1)^0,c
  7785  00310A  6A16               	clrf	(___flmul@prod+2)^0,c
  7786  00310C  6A17               	clrf	(___flmul@prod+3)^0,c
  7787  00310E  5006               	movf	(___flmul@a+1)^0,w,c
  7788  003110  0202               	mulwf	(___flmul@b+1)^0,c
  7789  003112  CFF3 F018          	movff	prodl,___flmul@temp
  7790  003116  CFF4 F019          	movff	prodh,___flmul@temp+1
  7791  00311A  5018               	movf	___flmul@temp^0,w,c
  7792  00311C  260E               	addwf	___flmul@grs^0,f,c
  7793  00311E  0E00               	movlw	0
  7794  003120  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7795  003122  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7796  003124  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7797  003126  5019               	movf	(___flmul@temp+1)^0,w,c
  7798  003128  2614               	addwf	___flmul@prod^0,f,c
  7799  00312A  0E00               	movlw	0
  7800  00312C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7801  00312E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7802  003130  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7803  003132  5005               	movf	___flmul@a^0,w,c
  7804  003134  0203               	mulwf	(___flmul@b+2)^0,c
  7805  003136  CFF3 F018          	movff	prodl,___flmul@temp
  7806  00313A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7807  00313E  5018               	movf	___flmul@temp^0,w,c
  7808  003140  260E               	addwf	___flmul@grs^0,f,c
  7809  003142  0E00               	movlw	0
  7810  003144  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7811  003146  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7812  003148  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7813  00314A  5019               	movf	(___flmul@temp+1)^0,w,c
  7814  00314C  2614               	addwf	___flmul@prod^0,f,c
  7815  00314E  0E00               	movlw	0
  7816  003150  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7817  003152  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7818  003154  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7819  003156  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7820  00315A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7821  00315E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7822  003162  6A0E               	clrf	___flmul@grs^0,c
  7823  003164  5005               	movf	___flmul@a^0,w,c
  7824  003166  0202               	mulwf	(___flmul@b+1)^0,c
  7825  003168  CFF3 F018          	movff	prodl,___flmul@temp
  7826  00316C  CFF4 F019          	movff	prodh,___flmul@temp+1
  7827  003170  5018               	movf	___flmul@temp^0,w,c
  7828  003172  260E               	addwf	___flmul@grs^0,f,c
  7829  003174  5019               	movf	(___flmul@temp+1)^0,w,c
  7830  003176  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7831  003178  0E00               	movlw	0
  7832  00317A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7833  00317C  0E00               	movlw	0
  7834  00317E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7835  003180  5006               	movf	(___flmul@a+1)^0,w,c
  7836  003182  0201               	mulwf	___flmul@b^0,c
  7837  003184  CFF3 F018          	movff	prodl,___flmul@temp
  7838  003188  CFF4 F019          	movff	prodh,___flmul@temp+1
  7839  00318C  5018               	movf	___flmul@temp^0,w,c
  7840  00318E  260E               	addwf	___flmul@grs^0,f,c
  7841  003190  5019               	movf	(___flmul@temp+1)^0,w,c
  7842  003192  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7843  003194  0E00               	movlw	0
  7844  003196  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7845  003198  0E00               	movlw	0
  7846  00319A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7847  00319C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7848  0031A0  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7849  0031A4  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7850  0031A8  6A0E               	clrf	___flmul@grs^0,c
  7851  0031AA  5005               	movf	___flmul@a^0,w,c
  7852  0031AC  0201               	mulwf	___flmul@b^0,c
  7853  0031AE  CFF3 F018          	movff	prodl,___flmul@temp
  7854  0031B2  CFF4 F019          	movff	prodh,___flmul@temp+1
  7855  0031B6  5018               	movf	___flmul@temp^0,w,c
  7856  0031B8  260E               	addwf	___flmul@grs^0,f,c
  7857  0031BA  5019               	movf	(___flmul@temp+1)^0,w,c
  7858  0031BC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7859  0031BE  0E00               	movlw	0
  7860  0031C0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7861  0031C2  0E00               	movlw	0
  7862  0031C4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7863  0031C6  5007               	movf	(___flmul@a+2)^0,w,c
  7864  0031C8  0202               	mulwf	(___flmul@b+1)^0,c
  7865  0031CA  CFF3 F018          	movff	prodl,___flmul@temp
  7866  0031CE  CFF4 F019          	movff	prodh,___flmul@temp+1
  7867  0031D2  5018               	movf	___flmul@temp^0,w,c
  7868  0031D4  2614               	addwf	___flmul@prod^0,f,c
  7869  0031D6  5019               	movf	(___flmul@temp+1)^0,w,c
  7870  0031D8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7871  0031DA  0E00               	movlw	0
  7872  0031DC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7873  0031DE  0E00               	movlw	0
  7874  0031E0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7875  0031E2  5006               	movf	(___flmul@a+1)^0,w,c
  7876  0031E4  0203               	mulwf	(___flmul@b+2)^0,c
  7877  0031E6  CFF3 F018          	movff	prodl,___flmul@temp
  7878  0031EA  CFF4 F019          	movff	prodh,___flmul@temp+1
  7879  0031EE  5018               	movf	___flmul@temp^0,w,c
  7880  0031F0  2614               	addwf	___flmul@prod^0,f,c
  7881  0031F2  5019               	movf	(___flmul@temp+1)^0,w,c
  7882  0031F4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7883  0031F6  0E00               	movlw	0
  7884  0031F8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7885  0031FA  0E00               	movlw	0
  7886  0031FC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7887  0031FE  5007               	movf	(___flmul@a+2)^0,w,c
  7888  003200  0203               	mulwf	(___flmul@b+2)^0,c
  7889  003202  CFF3 F018          	movff	prodl,___flmul@temp
  7890  003206  CFF4 F019          	movff	prodh,___flmul@temp+1
  7891  00320A  5018               	movf	___flmul@temp^0,w,c
  7892  00320C  6E09               	movwf	??___flmul^0,c
  7893  00320E  5019               	movf	(___flmul@temp+1)^0,w,c
  7894  003210  6E0A               	movwf	(??___flmul+1)^0,c
  7895  003212  6A0B               	clrf	(??___flmul+2)^0,c
  7896  003214  6A0C               	clrf	(??___flmul+3)^0,c
  7897  003216  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7898  00321A  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7899  00321E  C009  F00A         	movff	??___flmul,??___flmul+1
  7900  003222  6A09               	clrf	??___flmul^0,c
  7901  003224  5009               	movf	??___flmul^0,w,c
  7902  003226  2614               	addwf	___flmul@prod^0,f,c
  7903  003228  500A               	movf	(??___flmul+1)^0,w,c
  7904  00322A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7905  00322C  500B               	movf	(??___flmul+2)^0,w,c
  7906  00322E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7907  003230  500C               	movf	(??___flmul+3)^0,w,c
  7908  003232  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7909  003234  C00E  F009         	movff	___flmul@grs,??___flmul
  7910  003238  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7911  00323C  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7912  003240  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7913  003244  0E19               	movlw	25
  7914  003246  EF2A  F019         	goto	u4840
  7915  00324A                     u4845:
  7916  00324A  90D8               	bcf	status,0,c
  7917  00324C  320C               	rrcf	(??___flmul+3)^0,f,c
  7918  00324E  320B               	rrcf	(??___flmul+2)^0,f,c
  7919  003250  320A               	rrcf	(??___flmul+1)^0,f,c
  7920  003252  3209               	rrcf	??___flmul^0,f,c
  7921  003254                     u4840:
  7922  003254  2EE8               	decfsz	wreg,f,c
  7923  003256  EF25  F019         	goto	u4845
  7924  00325A  5009               	movf	??___flmul^0,w,c
  7925  00325C  2614               	addwf	___flmul@prod^0,f,c
  7926  00325E  500A               	movf	(??___flmul+1)^0,w,c
  7927  003260  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7928  003262  500B               	movf	(??___flmul+2)^0,w,c
  7929  003264  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7930  003266  500C               	movf	(??___flmul+3)^0,w,c
  7931  003268  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7932  00326A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7933  00326E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7934  003272  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7935  003276  6A0E               	clrf	___flmul@grs^0,c
  7936  003278  5012               	movf	___flmul@aexp^0,w,c
  7937  00327A  C013  F009         	movff	___flmul@bexp,??___flmul
  7938  00327E  6A0A               	clrf	(??___flmul+1)^0,c
  7939  003280  2609               	addwf	??___flmul^0,f,c
  7940  003282  0E00               	movlw	0
  7941  003284  220A               	addwfc	(??___flmul+1)^0,f,c
  7942  003286  0E82               	movlw	130
  7943  003288  2409               	addwf	??___flmul^0,w,c
  7944  00328A  6E18               	movwf	___flmul@temp^0,c
  7945  00328C  0EFF               	movlw	255
  7946  00328E  200A               	addwfc	(??___flmul+1)^0,w,c
  7947  003290  6E19               	movwf	(___flmul@temp+1)^0,c
  7948  003292  EF60  F019         	goto	l4518
  7949  003296                     l4512:
  7950  003296  90D8               	bcf	status,0,c
  7951  003298  3614               	rlcf	___flmul@prod^0,f,c
  7952  00329A  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7953  00329C  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7954  00329E  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7955  0032A0  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7956  0032A2  EF55  F019         	goto	u4851
  7957  0032A6  EF57  F019         	goto	u4850
  7958  0032AA                     u4851:
  7959  0032AA  EF58  F019         	goto	l1255
  7960  0032AE                     u4850:
  7961  0032AE  8014               	bsf	___flmul@prod^0,0,c
  7962  0032B0                     l1255:
  7963  0032B0  90D8               	bcf	status,0,c
  7964  0032B2  360E               	rlcf	___flmul@grs^0,f,c
  7965  0032B4  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7966  0032B6  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7967  0032B8  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7968  0032BA  0618               	decf	___flmul@temp^0,f,c
  7969  0032BC  A0D8               	btfss	status,0,c
  7970  0032BE  0619               	decf	(___flmul@temp+1)^0,f,c
  7971  0032C0                     l4518:
  7972  0032C0  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7973  0032C2  EF65  F019         	goto	u4861
  7974  0032C6  EF67  F019         	goto	u4860
  7975  0032CA                     u4861:
  7976  0032CA  EF4B  F019         	goto	l4512
  7977  0032CE                     u4860:
  7978  0032CE  0E00               	movlw	0
  7979  0032D0  6E12               	movwf	___flmul@aexp^0,c
  7980  0032D2  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7981  0032D4  EF6E  F019         	goto	u4871
  7982  0032D8  EF70  F019         	goto	u4870
  7983  0032DC                     u4871:
  7984  0032DC  EF94  F019         	goto	l1257
  7985  0032E0                     u4870:
  7986  0032E0  0EFF               	movlw	255
  7987  0032E2  140E               	andwf	___flmul@grs^0,w,c
  7988  0032E4  6E09               	movwf	??___flmul^0,c
  7989  0032E6  0EFF               	movlw	255
  7990  0032E8  140F               	andwf	(___flmul@grs+1)^0,w,c
  7991  0032EA  6E0A               	movwf	(??___flmul+1)^0,c
  7992  0032EC  0EFF               	movlw	255
  7993  0032EE  1410               	andwf	(___flmul@grs+2)^0,w,c
  7994  0032F0  6E0B               	movwf	(??___flmul+2)^0,c
  7995  0032F2  0E7F               	movlw	127
  7996  0032F4  1411               	andwf	(___flmul@grs+3)^0,w,c
  7997  0032F6  6E0C               	movwf	(??___flmul+3)^0,c
  7998  0032F8  5009               	movf	??___flmul^0,w,c
  7999  0032FA  100A               	iorwf	(??___flmul+1)^0,w,c
  8000  0032FC  100B               	iorwf	(??___flmul+2)^0,w,c
  8001  0032FE  100C               	iorwf	(??___flmul+3)^0,w,c
  8002  003300  B4D8               	btfsc	status,2,c
  8003  003302  EF85  F019         	goto	u4881
  8004  003306  EF87  F019         	goto	u4880
  8005  00330A                     u4881:
  8006  00330A  EF8B  F019         	goto	l1258
  8007  00330E                     u4880:
  8008  00330E                     l4526:
  8009  00330E  0E01               	movlw	1
  8010  003310  6E12               	movwf	___flmul@aexp^0,c
  8011  003312  EF94  F019         	goto	l1257
  8012  003316                     l1258:
  8013  003316  A014               	btfss	___flmul@prod^0,0,c
  8014  003318  EF90  F019         	goto	u4891
  8015  00331C  EF92  F019         	goto	u4890
  8016  003320                     u4891:
  8017  003320  EF94  F019         	goto	l1257
  8018  003324                     u4890:
  8019  003324  EF87  F019         	goto	l4526
  8020  003328                     l1257:
  8021  003328  5012               	movf	___flmul@aexp^0,w,c
  8022  00332A  B4D8               	btfsc	status,2,c
  8023  00332C  EF9A  F019         	goto	u4901
  8024  003330  EF9C  F019         	goto	u4900
  8025  003334                     u4901:
  8026  003334  EFC0  F019         	goto	l4538
  8027  003338                     u4900:
  8028  003338  0E01               	movlw	1
  8029  00333A  2614               	addwf	___flmul@prod^0,f,c
  8030  00333C  0E00               	movlw	0
  8031  00333E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8032  003340  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8033  003342  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8034  003344  A017               	btfss	(___flmul@prod+3)^0,0,c
  8035  003346  EFA7  F019         	goto	u4911
  8036  00334A  EFA9  F019         	goto	u4910
  8037  00334E                     u4911:
  8038  00334E  EFC0  F019         	goto	l4538
  8039  003352                     u4910:
  8040  003352  C014  F009         	movff	___flmul@prod,??___flmul
  8041  003356  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8042  00335A  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8043  00335E  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8044  003362  340C               	rlcf	(??___flmul+3)^0,w,c
  8045  003364  320C               	rrcf	(??___flmul+3)^0,f,c
  8046  003366  320B               	rrcf	(??___flmul+2)^0,f,c
  8047  003368  320A               	rrcf	(??___flmul+1)^0,f,c
  8048  00336A  3209               	rrcf	??___flmul^0,f,c
  8049  00336C  C009  F014         	movff	??___flmul,___flmul@prod
  8050  003370  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8051  003374  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8052  003378  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8053  00337C  4A18               	infsnz	___flmul@temp^0,f,c
  8054  00337E  2A19               	incf	(___flmul@temp+1)^0,f,c
  8055  003380                     l4538:
  8056  003380  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8057  003382  EFCB  F019         	goto	u4921
  8058  003386  5019               	movf	(___flmul@temp+1)^0,w,c
  8059  003388  E108               	bnz	u4920
  8060  00338A  2818               	incf	___flmul@temp^0,w,c
  8061  00338C  A0D8               	btfss	status,0,c
  8062  00338E  EFCB  F019         	goto	u4921
  8063  003392  EFCD  F019         	goto	u4920
  8064  003396                     u4921:
  8065  003396  EFD7  F019         	goto	l4542
  8066  00339A                     u4920:
  8067  00339A  0E00               	movlw	0
  8068  00339C  6E14               	movwf	___flmul@prod^0,c
  8069  00339E  0E00               	movlw	0
  8070  0033A0  6E15               	movwf	(___flmul@prod+1)^0,c
  8071  0033A2  0E80               	movlw	128
  8072  0033A4  6E16               	movwf	(___flmul@prod+2)^0,c
  8073  0033A6  0E7F               	movlw	127
  8074  0033A8  6E17               	movwf	(___flmul@prod+3)^0,c
  8075  0033AA  EF05  F01A         	goto	l4554
  8076  0033AE                     l4542:
  8077  0033AE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8078  0033B0  EFE4  F019         	goto	u4930
  8079  0033B4  5019               	movf	(___flmul@temp+1)^0,w,c
  8080  0033B6  E106               	bnz	u4931
  8081  0033B8  0418               	decf	___flmul@temp^0,w,c
  8082  0033BA  B0D8               	btfsc	status,0,c
  8083  0033BC  EFE2  F019         	goto	u4931
  8084  0033C0  EFE4  F019         	goto	u4930
  8085  0033C4                     u4931:
  8086  0033C4  EFF0  F019         	goto	l1265
  8087  0033C8                     u4930:
  8088  0033C8  0E00               	movlw	0
  8089  0033CA  6E14               	movwf	___flmul@prod^0,c
  8090  0033CC  0E00               	movlw	0
  8091  0033CE  6E15               	movwf	(___flmul@prod+1)^0,c
  8092  0033D0  0E00               	movlw	0
  8093  0033D2  6E16               	movwf	(___flmul@prod+2)^0,c
  8094  0033D4  0E00               	movlw	0
  8095  0033D6  6E17               	movwf	(___flmul@prod+3)^0,c
  8096  0033D8  0E00               	movlw	0
  8097  0033DA  6E0D               	movwf	___flmul@sign^0,c
  8098  0033DC  EF05  F01A         	goto	l4554
  8099  0033E0                     l1265:
  8100  0033E0  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8101  0033E4  0EFF               	movlw	255
  8102  0033E6  1614               	andwf	___flmul@prod^0,f,c
  8103  0033E8  0EFF               	movlw	255
  8104  0033EA  1615               	andwf	(___flmul@prod+1)^0,f,c
  8105  0033EC  0E7F               	movlw	127
  8106  0033EE  1616               	andwf	(___flmul@prod+2)^0,f,c
  8107  0033F0  0E00               	movlw	0
  8108  0033F2  1617               	andwf	(___flmul@prod+3)^0,f,c
  8109  0033F4  A013               	btfss	___flmul@bexp^0,0,c
  8110  0033F6  EFFF  F019         	goto	u4941
  8111  0033FA  EF01  F01A         	goto	u4940
  8112  0033FE                     u4941:
  8113  0033FE  EF02  F01A         	goto	l4552
  8114  003402                     u4940:
  8115  003402  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8116  003404                     l4552:
  8117  003404  90D8               	bcf	status,0,c
  8118  003406  3013               	rrcf	___flmul@bexp^0,w,c
  8119  003408  6E17               	movwf	(___flmul@prod+3)^0,c
  8120  00340A                     l4554:
  8121  00340A  500D               	movf	___flmul@sign^0,w,c
  8122  00340C  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8123  00340E  C014  F001         	movff	___flmul@prod,?___flmul
  8124  003412  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8125  003416  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8126  00341A  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8127  00341E                     l1252:
  8128  00341E  0012               	return		;funcret
  8129  003420                     __end_of___flmul:
  8130                           	callstack 0
  8131                           
  8132 ;; *************** function ___flge *****************
  8133 ;; Defined at:
  8134 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  ff1             4   25[COMRAM] unsigned char 
  8137 ;;  ff2             4   29[COMRAM] unsigned char 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;		None               void
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8149 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;Total ram usage:       12 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_colourcards_testing
  8159 ;;		_efgtoa
  8160 ;;		_colourcards_readRGBC
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text23
  8165  004598                     __ptext23:
  8166                           	callstack 0
  8167  004598                     ___flge:
  8168                           	callstack 25
  8169  004598  0E00               	movlw	0
  8170  00459A  141A               	andwf	___flge@ff1^0,w,c
  8171  00459C  6E22               	movwf	??___flge^0,c
  8172  00459E  0E00               	movlw	0
  8173  0045A0  141B               	andwf	(___flge@ff1+1)^0,w,c
  8174  0045A2  6E23               	movwf	(??___flge+1)^0,c
  8175  0045A4  0E80               	movlw	128
  8176  0045A6  141C               	andwf	(___flge@ff1+2)^0,w,c
  8177  0045A8  6E24               	movwf	(??___flge+2)^0,c
  8178  0045AA  0E7F               	movlw	127
  8179  0045AC  141D               	andwf	(___flge@ff1+3)^0,w,c
  8180  0045AE  6E25               	movwf	(??___flge+3)^0,c
  8181  0045B0  5022               	movf	??___flge^0,w,c
  8182  0045B2  1023               	iorwf	(??___flge+1)^0,w,c
  8183  0045B4  1024               	iorwf	(??___flge+2)^0,w,c
  8184  0045B6  1025               	iorwf	(??___flge+3)^0,w,c
  8185  0045B8  A4D8               	btfss	status,2,c
  8186  0045BA  EFE1  F022         	goto	u5101
  8187  0045BE  EFE3  F022         	goto	u5100
  8188  0045C2                     u5101:
  8189  0045C2  EFEB  F022         	goto	l4666
  8190  0045C6                     u5100:
  8191  0045C6  0E00               	movlw	0
  8192  0045C8  6E1A               	movwf	___flge@ff1^0,c
  8193  0045CA  0E00               	movlw	0
  8194  0045CC  6E1B               	movwf	(___flge@ff1+1)^0,c
  8195  0045CE  0E00               	movlw	0
  8196  0045D0  6E1C               	movwf	(___flge@ff1+2)^0,c
  8197  0045D2  0E00               	movlw	0
  8198  0045D4  6E1D               	movwf	(___flge@ff1+3)^0,c
  8199  0045D6                     l4666:
  8200  0045D6  0E00               	movlw	0
  8201  0045D8  141E               	andwf	___flge@ff2^0,w,c
  8202  0045DA  6E22               	movwf	??___flge^0,c
  8203  0045DC  0E00               	movlw	0
  8204  0045DE  141F               	andwf	(___flge@ff2+1)^0,w,c
  8205  0045E0  6E23               	movwf	(??___flge+1)^0,c
  8206  0045E2  0E80               	movlw	128
  8207  0045E4  1420               	andwf	(___flge@ff2+2)^0,w,c
  8208  0045E6  6E24               	movwf	(??___flge+2)^0,c
  8209  0045E8  0E7F               	movlw	127
  8210  0045EA  1421               	andwf	(___flge@ff2+3)^0,w,c
  8211  0045EC  6E25               	movwf	(??___flge+3)^0,c
  8212  0045EE  5022               	movf	??___flge^0,w,c
  8213  0045F0  1023               	iorwf	(??___flge+1)^0,w,c
  8214  0045F2  1024               	iorwf	(??___flge+2)^0,w,c
  8215  0045F4  1025               	iorwf	(??___flge+3)^0,w,c
  8216  0045F6  A4D8               	btfss	status,2,c
  8217  0045F8  EF00  F023         	goto	u5111
  8218  0045FC  EF02  F023         	goto	u5110
  8219  004600                     u5111:
  8220  004600  EF0A  F023         	goto	l4670
  8221  004604                     u5110:
  8222  004604  0E00               	movlw	0
  8223  004606  6E1E               	movwf	___flge@ff2^0,c
  8224  004608  0E00               	movlw	0
  8225  00460A  6E1F               	movwf	(___flge@ff2+1)^0,c
  8226  00460C  0E00               	movlw	0
  8227  00460E  6E20               	movwf	(___flge@ff2+2)^0,c
  8228  004610  0E00               	movlw	0
  8229  004612  6E21               	movwf	(___flge@ff2+3)^0,c
  8230  004614                     l4670:
  8231  004614  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  8232  004616  EF0F  F023         	goto	u5121
  8233  00461A  EF11  F023         	goto	u5120
  8234  00461E                     u5121:
  8235  00461E  EF1A  F023         	goto	l4674
  8236  004622                     u5120:
  8237  004622  6C1A               	negf	___flge@ff1^0,c
  8238  004624  1E1B               	comf	(___flge@ff1+1)^0,f,c
  8239  004626  B0D8               	btfsc	status,0,c
  8240  004628  2A1B               	incf	(___flge@ff1+1)^0,f,c
  8241  00462A  1E1C               	comf	(___flge@ff1+2)^0,f,c
  8242  00462C  B0D8               	btfsc	status,0,c
  8243  00462E  2A1C               	incf	(___flge@ff1+2)^0,f,c
  8244  004630  0E80               	movlw	128
  8245  004632  561D               	subfwb	(___flge@ff1+3)^0,f,c
  8246  004634                     l4674:
  8247  004634  AE21               	btfss	(___flge@ff2+3)^0,7,c
  8248  004636  EF1F  F023         	goto	u5131
  8249  00463A  EF21  F023         	goto	u5130
  8250  00463E                     u5131:
  8251  00463E  EF2A  F023         	goto	l899
  8252  004642                     u5130:
  8253  004642  6C1E               	negf	___flge@ff2^0,c
  8254  004644  1E1F               	comf	(___flge@ff2+1)^0,f,c
  8255  004646  B0D8               	btfsc	status,0,c
  8256  004648  2A1F               	incf	(___flge@ff2+1)^0,f,c
  8257  00464A  1E20               	comf	(___flge@ff2+2)^0,f,c
  8258  00464C  B0D8               	btfsc	status,0,c
  8259  00464E  2A20               	incf	(___flge@ff2+2)^0,f,c
  8260  004650  0E80               	movlw	128
  8261  004652  5621               	subfwb	(___flge@ff2+3)^0,f,c
  8262  004654                     l899:
  8263  004654  0E00               	movlw	0
  8264  004656  1A1A               	xorwf	___flge@ff1^0,f,c
  8265  004658  0E00               	movlw	0
  8266  00465A  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  8267  00465C  0E00               	movlw	0
  8268  00465E  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  8269  004660  0E80               	movlw	128
  8270  004662  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  8271  004664  0E00               	movlw	0
  8272  004666  1A1E               	xorwf	___flge@ff2^0,f,c
  8273  004668  0E00               	movlw	0
  8274  00466A  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  8275  00466C  0E00               	movlw	0
  8276  00466E  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  8277  004670  0E80               	movlw	128
  8278  004672  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  8279  004674  501E               	movf	___flge@ff2^0,w,c
  8280  004676  5C1A               	subwf	___flge@ff1^0,w,c
  8281  004678  501F               	movf	(___flge@ff2+1)^0,w,c
  8282  00467A  581B               	subwfb	(___flge@ff1+1)^0,w,c
  8283  00467C  5020               	movf	(___flge@ff2+2)^0,w,c
  8284  00467E  581C               	subwfb	(___flge@ff1+2)^0,w,c
  8285  004680  5021               	movf	(___flge@ff2+3)^0,w,c
  8286  004682  581D               	subwfb	(___flge@ff1+3)^0,w,c
  8287  004684  B0D8               	btfsc	status,0,c
  8288  004686  EF47  F023         	goto	u5141
  8289  00468A  EF49  F023         	goto	u5140
  8290  00468E                     u5141:
  8291  00468E  EF4C  F023         	goto	l4680
  8292  004692                     u5140:
  8293  004692  90D8               	bcf	status,0,c
  8294  004694  EF4D  F023         	goto	l904
  8295  004698                     l4680:
  8296  004698  80D8               	bsf	status,0,c
  8297  00469A                     l904:
  8298  00469A  0012               	return		;funcret
  8299  00469C                     __end_of___flge:
  8300                           	callstack 0
  8301                           
  8302 ;; *************** function ___fleq *****************
  8303 ;; Defined at:
  8304 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  ff1             4    0[COMRAM] unsigned char 
  8307 ;;  ff2             4    4[COMRAM] unsigned char 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;		None               void
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8319 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8321 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8322 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8323 ;;Total ram usage:       12 bytes
  8324 ;; Hardware stack levels used: 1
  8325 ;; This function calls:
  8326 ;;		Nothing
  8327 ;; This function is called by:
  8328 ;;		_efgtoa
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text24
  8333  004C50                     __ptext24:
  8334                           	callstack 0
  8335  004C50                     ___fleq:
  8336                           	callstack 25
  8337  004C50  0E00               	movlw	0
  8338  004C52  1401               	andwf	___fleq@ff1^0,w,c
  8339  004C54  6E09               	movwf	??___fleq^0,c
  8340  004C56  0E00               	movlw	0
  8341  004C58  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8342  004C5A  6E0A               	movwf	(??___fleq+1)^0,c
  8343  004C5C  0E80               	movlw	128
  8344  004C5E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8345  004C60  6E0B               	movwf	(??___fleq+2)^0,c
  8346  004C62  0E7F               	movlw	127
  8347  004C64  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8348  004C66  6E0C               	movwf	(??___fleq+3)^0,c
  8349  004C68  5009               	movf	??___fleq^0,w,c
  8350  004C6A  100A               	iorwf	(??___fleq+1)^0,w,c
  8351  004C6C  100B               	iorwf	(??___fleq+2)^0,w,c
  8352  004C6E  100C               	iorwf	(??___fleq+3)^0,w,c
  8353  004C70  A4D8               	btfss	status,2,c
  8354  004C72  EF3D  F026         	goto	u5071
  8355  004C76  EF3F  F026         	goto	u5070
  8356  004C7A                     u5071:
  8357  004C7A  EF47  F026         	goto	l4650
  8358  004C7E                     u5070:
  8359  004C7E  0E00               	movlw	0
  8360  004C80  6E01               	movwf	___fleq@ff1^0,c
  8361  004C82  0E00               	movlw	0
  8362  004C84  6E02               	movwf	(___fleq@ff1+1)^0,c
  8363  004C86  0E00               	movlw	0
  8364  004C88  6E03               	movwf	(___fleq@ff1+2)^0,c
  8365  004C8A  0E00               	movlw	0
  8366  004C8C  6E04               	movwf	(___fleq@ff1+3)^0,c
  8367  004C8E                     l4650:
  8368  004C8E  0E00               	movlw	0
  8369  004C90  1405               	andwf	___fleq@ff2^0,w,c
  8370  004C92  6E09               	movwf	??___fleq^0,c
  8371  004C94  0E00               	movlw	0
  8372  004C96  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8373  004C98  6E0A               	movwf	(??___fleq+1)^0,c
  8374  004C9A  0E80               	movlw	128
  8375  004C9C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8376  004C9E  6E0B               	movwf	(??___fleq+2)^0,c
  8377  004CA0  0E7F               	movlw	127
  8378  004CA2  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8379  004CA4  6E0C               	movwf	(??___fleq+3)^0,c
  8380  004CA6  5009               	movf	??___fleq^0,w,c
  8381  004CA8  100A               	iorwf	(??___fleq+1)^0,w,c
  8382  004CAA  100B               	iorwf	(??___fleq+2)^0,w,c
  8383  004CAC  100C               	iorwf	(??___fleq+3)^0,w,c
  8384  004CAE  A4D8               	btfss	status,2,c
  8385  004CB0  EF5C  F026         	goto	u5081
  8386  004CB4  EF5E  F026         	goto	u5080
  8387  004CB8                     u5081:
  8388  004CB8  EF66  F026         	goto	l4654
  8389  004CBC                     u5080:
  8390  004CBC  0E00               	movlw	0
  8391  004CBE  6E05               	movwf	___fleq@ff2^0,c
  8392  004CC0  0E00               	movlw	0
  8393  004CC2  6E06               	movwf	(___fleq@ff2+1)^0,c
  8394  004CC4  0E00               	movlw	0
  8395  004CC6  6E07               	movwf	(___fleq@ff2+2)^0,c
  8396  004CC8  0E00               	movlw	0
  8397  004CCA  6E08               	movwf	(___fleq@ff2+3)^0,c
  8398  004CCC                     l4654:
  8399  004CCC  5005               	movf	___fleq@ff2^0,w,c
  8400  004CCE  1801               	xorwf	___fleq@ff1^0,w,c
  8401  004CD0  E10F               	bnz	u5090
  8402  004CD2  5006               	movf	(___fleq@ff2+1)^0,w,c
  8403  004CD4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8404  004CD6  E10C               	bnz	u5090
  8405  004CD8  5007               	movf	(___fleq@ff2+2)^0,w,c
  8406  004CDA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8407  004CDC  E109               	bnz	u5090
  8408  004CDE  5008               	movf	(___fleq@ff2+3)^0,w,c
  8409  004CE0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8410  004CE2  B4D8               	btfsc	status,2,c
  8411  004CE4  EF76  F026         	goto	u5091
  8412  004CE8  EF78  F026         	goto	u5090
  8413  004CEC                     u5091:
  8414  004CEC  EF7B  F026         	goto	l4658
  8415  004CF0                     u5090:
  8416  004CF0  90D8               	bcf	status,0,c
  8417  004CF2  EF7C  F026         	goto	l893
  8418  004CF6                     l4658:
  8419  004CF6  80D8               	bsf	status,0,c
  8420  004CF8                     l893:
  8421  004CF8  0012               	return		;funcret
  8422  004CFA                     __end_of___fleq:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function ___fldiv *****************
  8426 ;; Defined at:
  8427 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;  b               4   14[COMRAM] unsigned char 
  8430 ;;  a               4   18[COMRAM] unsigned char 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;  grs             4   33[COMRAM] unsigned long 
  8433 ;;  rem             4   26[COMRAM] unsigned long 
  8434 ;;  new_exp         2   31[COMRAM] short 
  8435 ;;  aexp            1   38[COMRAM] unsigned char 
  8436 ;;  bexp            1   37[COMRAM] unsigned char 
  8437 ;;  sign            1   30[COMRAM] unsigned char 
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  4   14[COMRAM] unsigned char 
  8440 ;; Registers used:
  8441 ;;		wreg, status,2, status,0
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8447 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8448 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8449 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;Total ram usage:       25 bytes
  8452 ;; Hardware stack levels used: 1
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_colourcards_testing
  8457 ;;		_efgtoa
  8458 ;;		_colourcards_readRGBC
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text25
  8463  003420                     __ptext25:
  8464                           	callstack 0
  8465  003420                     ___fldiv:
  8466                           	callstack 25
  8467  003420  5012               	movf	(___fldiv@b+3)^0,w,c
  8468  003422  0B80               	andlw	128
  8469  003424  6E1F               	movwf	___fldiv@sign^0,c
  8470  003426  5012               	movf	(___fldiv@b+3)^0,w,c
  8471  003428  2412               	addwf	(___fldiv@b+3)^0,w,c
  8472  00342A  6E26               	movwf	___fldiv@bexp^0,c
  8473  00342C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8474  00342E  EF1B  F01A         	goto	u4531
  8475  003432  EF1D  F01A         	goto	u4530
  8476  003436                     u4531:
  8477  003436  EF1E  F01A         	goto	l4298
  8478  00343A                     u4530:
  8479  00343A  8026               	bsf	___fldiv@bexp^0,0,c
  8480  00343C                     l4298:
  8481  00343C  5026               	movf	___fldiv@bexp^0,w,c
  8482  00343E  B4D8               	btfsc	status,2,c
  8483  003440  EF24  F01A         	goto	u4541
  8484  003444  EF26  F01A         	goto	u4540
  8485  003448                     u4541:
  8486  003448  EF3B  F01A         	goto	l4308
  8487  00344C                     u4540:
  8488  00344C  2826               	incf	___fldiv@bexp^0,w,c
  8489  00344E  A4D8               	btfss	status,2,c
  8490  003450  EF2C  F01A         	goto	u4551
  8491  003454  EF2E  F01A         	goto	u4550
  8492  003458                     u4551:
  8493  003458  EF36  F01A         	goto	l4304
  8494  00345C                     u4550:
  8495  00345C  0E00               	movlw	0
  8496  00345E  6E0F               	movwf	___fldiv@b^0,c
  8497  003460  0E00               	movlw	0
  8498  003462  6E10               	movwf	(___fldiv@b+1)^0,c
  8499  003464  0E00               	movlw	0
  8500  003466  6E11               	movwf	(___fldiv@b+2)^0,c
  8501  003468  0E00               	movlw	0
  8502  00346A  6E12               	movwf	(___fldiv@b+3)^0,c
  8503  00346C                     l4304:
  8504  00346C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8505  00346E  0E00               	movlw	0
  8506  003470  6E12               	movwf	(___fldiv@b+3)^0,c
  8507  003472  EF43  F01A         	goto	l4310
  8508  003476                     l4308:
  8509  003476  0E00               	movlw	0
  8510  003478  6E0F               	movwf	___fldiv@b^0,c
  8511  00347A  0E00               	movlw	0
  8512  00347C  6E10               	movwf	(___fldiv@b+1)^0,c
  8513  00347E  0E00               	movlw	0
  8514  003480  6E11               	movwf	(___fldiv@b+2)^0,c
  8515  003482  0E00               	movlw	0
  8516  003484  6E12               	movwf	(___fldiv@b+3)^0,c
  8517  003486                     l4310:
  8518  003486  5016               	movf	(___fldiv@a+3)^0,w,c
  8519  003488  0B80               	andlw	128
  8520  00348A  1A1F               	xorwf	___fldiv@sign^0,f,c
  8521  00348C  5016               	movf	(___fldiv@a+3)^0,w,c
  8522  00348E  2416               	addwf	(___fldiv@a+3)^0,w,c
  8523  003490  6E27               	movwf	___fldiv@aexp^0,c
  8524  003492  AE15               	btfss	(___fldiv@a+2)^0,7,c
  8525  003494  EF4E  F01A         	goto	u4561
  8526  003498  EF50  F01A         	goto	u4560
  8527  00349C                     u4561:
  8528  00349C  EF51  F01A         	goto	l4318
  8529  0034A0                     u4560:
  8530  0034A0  8027               	bsf	___fldiv@aexp^0,0,c
  8531  0034A2                     l4318:
  8532  0034A2  5027               	movf	___fldiv@aexp^0,w,c
  8533  0034A4  B4D8               	btfsc	status,2,c
  8534  0034A6  EF57  F01A         	goto	u4571
  8535  0034AA  EF59  F01A         	goto	u4570
  8536  0034AE                     u4571:
  8537  0034AE  EF6E  F01A         	goto	l4328
  8538  0034B2                     u4570:
  8539  0034B2  2827               	incf	___fldiv@aexp^0,w,c
  8540  0034B4  A4D8               	btfss	status,2,c
  8541  0034B6  EF5F  F01A         	goto	u4581
  8542  0034BA  EF61  F01A         	goto	u4580
  8543  0034BE                     u4581:
  8544  0034BE  EF69  F01A         	goto	l4324
  8545  0034C2                     u4580:
  8546  0034C2  0E00               	movlw	0
  8547  0034C4  6E13               	movwf	___fldiv@a^0,c
  8548  0034C6  0E00               	movlw	0
  8549  0034C8  6E14               	movwf	(___fldiv@a+1)^0,c
  8550  0034CA  0E00               	movlw	0
  8551  0034CC  6E15               	movwf	(___fldiv@a+2)^0,c
  8552  0034CE  0E00               	movlw	0
  8553  0034D0  6E16               	movwf	(___fldiv@a+3)^0,c
  8554  0034D2                     l4324:
  8555  0034D2  8E15               	bsf	(___fldiv@a+2)^0,7,c
  8556  0034D4  0E00               	movlw	0
  8557  0034D6  6E16               	movwf	(___fldiv@a+3)^0,c
  8558  0034D8  EF76  F01A         	goto	l4330
  8559  0034DC                     l4328:
  8560  0034DC  0E00               	movlw	0
  8561  0034DE  6E13               	movwf	___fldiv@a^0,c
  8562  0034E0  0E00               	movlw	0
  8563  0034E2  6E14               	movwf	(___fldiv@a+1)^0,c
  8564  0034E4  0E00               	movlw	0
  8565  0034E6  6E15               	movwf	(___fldiv@a+2)^0,c
  8566  0034E8  0E00               	movlw	0
  8567  0034EA  6E16               	movwf	(___fldiv@a+3)^0,c
  8568  0034EC                     l4330:
  8569  0034EC  5013               	movf	___fldiv@a^0,w,c
  8570  0034EE  1014               	iorwf	(___fldiv@a+1)^0,w,c
  8571  0034F0  1015               	iorwf	(___fldiv@a+2)^0,w,c
  8572  0034F2  1016               	iorwf	(___fldiv@a+3)^0,w,c
  8573  0034F4  A4D8               	btfss	status,2,c
  8574  0034F6  EF7F  F01A         	goto	u4591
  8575  0034FA  EF81  F01A         	goto	u4590
  8576  0034FE                     u4591:
  8577  0034FE  EF99  F01A         	goto	l4342
  8578  003502                     u4590:
  8579  003502  0E00               	movlw	0
  8580  003504  6E0F               	movwf	___fldiv@b^0,c
  8581  003506  0E00               	movlw	0
  8582  003508  6E10               	movwf	(___fldiv@b+1)^0,c
  8583  00350A  0E00               	movlw	0
  8584  00350C  6E11               	movwf	(___fldiv@b+2)^0,c
  8585  00350E  0E00               	movlw	0
  8586  003510  6E12               	movwf	(___fldiv@b+3)^0,c
  8587  003512  0E80               	movlw	128
  8588  003514  1211               	iorwf	(___fldiv@b+2)^0,f,c
  8589  003516  0E7F               	movlw	127
  8590  003518  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8591  00351A                     l4336:
  8592  00351A  501F               	movf	___fldiv@sign^0,w,c
  8593  00351C  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8594  00351E  C00F  F00F         	movff	___fldiv@b,?___fldiv
  8595  003522  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  8596  003526  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  8597  00352A  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  8598  00352E  EFDC  F01B         	goto	l1216
  8599  003532                     l4342:
  8600  003532  5026               	movf	___fldiv@bexp^0,w,c
  8601  003534  A4D8               	btfss	status,2,c
  8602  003536  EF9F  F01A         	goto	u4601
  8603  00353A  EFA1  F01A         	goto	u4600
  8604  00353E                     u4601:
  8605  00353E  EFAB  F01A         	goto	l4350
  8606  003542                     u4600:
  8607  003542  0E00               	movlw	0
  8608  003544  6E0F               	movwf	?___fldiv^0,c
  8609  003546  0E00               	movlw	0
  8610  003548  6E10               	movwf	(?___fldiv+1)^0,c
  8611  00354A  0E00               	movlw	0
  8612  00354C  6E11               	movwf	(?___fldiv+2)^0,c
  8613  00354E  0E00               	movlw	0
  8614  003550  6E12               	movwf	(?___fldiv+3)^0,c
  8615  003552  EFDC  F01B         	goto	l1216
  8616  003556                     l4350:
  8617  003556  5027               	movf	___fldiv@aexp^0,w,c
  8618  003558  C026  F017         	movff	___fldiv@bexp,??___fldiv
  8619  00355C  6A18               	clrf	(??___fldiv+1)^0,c
  8620  00355E  5E17               	subwf	??___fldiv^0,f,c
  8621  003560  0E00               	movlw	0
  8622  003562  5A18               	subwfb	(??___fldiv+1)^0,f,c
  8623  003564  0E7F               	movlw	127
  8624  003566  2417               	addwf	??___fldiv^0,w,c
  8625  003568  6E20               	movwf	___fldiv@new_exp^0,c
  8626  00356A  0E00               	movlw	0
  8627  00356C  2018               	addwfc	(??___fldiv+1)^0,w,c
  8628  00356E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8629  003570  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  8630  003574  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  8631  003578  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  8632  00357C  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  8633  003580  0E00               	movlw	0
  8634  003582  6E0F               	movwf	___fldiv@b^0,c
  8635  003584  0E00               	movlw	0
  8636  003586  6E10               	movwf	(___fldiv@b+1)^0,c
  8637  003588  0E00               	movlw	0
  8638  00358A  6E11               	movwf	(___fldiv@b+2)^0,c
  8639  00358C  0E00               	movlw	0
  8640  00358E  6E12               	movwf	(___fldiv@b+3)^0,c
  8641  003590  0E00               	movlw	0
  8642  003592  6E22               	movwf	___fldiv@grs^0,c
  8643  003594  0E00               	movlw	0
  8644  003596  6E23               	movwf	(___fldiv@grs+1)^0,c
  8645  003598  0E00               	movlw	0
  8646  00359A  6E24               	movwf	(___fldiv@grs+2)^0,c
  8647  00359C  0E00               	movlw	0
  8648  00359E  6E25               	movwf	(___fldiv@grs+3)^0,c
  8649  0035A0  0E00               	movlw	0
  8650  0035A2  6E27               	movwf	___fldiv@aexp^0,c
  8651  0035A4  EF0C  F01B         	goto	l1218
  8652  0035A8                     l4360:
  8653  0035A8  5027               	movf	___fldiv@aexp^0,w,c
  8654  0035AA  B4D8               	btfsc	status,2,c
  8655  0035AC  EFDA  F01A         	goto	u4611
  8656  0035B0  EFDC  F01A         	goto	u4610
  8657  0035B4                     u4611:
  8658  0035B4  EFF3  F01A         	goto	l4368
  8659  0035B8                     u4610:
  8660  0035B8  90D8               	bcf	status,0,c
  8661  0035BA  361B               	rlcf	___fldiv@rem^0,f,c
  8662  0035BC  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  8663  0035BE  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  8664  0035C0  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  8665  0035C2  90D8               	bcf	status,0,c
  8666  0035C4  360F               	rlcf	___fldiv@b^0,f,c
  8667  0035C6  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8668  0035C8  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8669  0035CA  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8670  0035CC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8671  0035CE  EFEB  F01A         	goto	u4621
  8672  0035D2  EFED  F01A         	goto	u4620
  8673  0035D6                     u4621:
  8674  0035D6  EFEE  F01A         	goto	l1221
  8675  0035DA                     u4620:
  8676  0035DA  800F               	bsf	___fldiv@b^0,0,c
  8677  0035DC                     l1221:
  8678  0035DC  90D8               	bcf	status,0,c
  8679  0035DE  3622               	rlcf	___fldiv@grs^0,f,c
  8680  0035E0  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8681  0035E2  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8682  0035E4  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8683  0035E6                     l4368:
  8684  0035E6  5013               	movf	___fldiv@a^0,w,c
  8685  0035E8  5C1B               	subwf	___fldiv@rem^0,w,c
  8686  0035EA  5014               	movf	(___fldiv@a+1)^0,w,c
  8687  0035EC  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  8688  0035EE  5015               	movf	(___fldiv@a+2)^0,w,c
  8689  0035F0  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  8690  0035F2  5016               	movf	(___fldiv@a+3)^0,w,c
  8691  0035F4  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  8692  0035F6  A0D8               	btfss	status,0,c
  8693  0035F8  EF00  F01B         	goto	u4631
  8694  0035FC  EF02  F01B         	goto	u4630
  8695  003600                     u4631:
  8696  003600  EF0B  F01B         	goto	l4374
  8697  003604                     u4630:
  8698  003604  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  8699  003606  5013               	movf	___fldiv@a^0,w,c
  8700  003608  5E1B               	subwf	___fldiv@rem^0,f,c
  8701  00360A  5014               	movf	(___fldiv@a+1)^0,w,c
  8702  00360C  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  8703  00360E  5015               	movf	(___fldiv@a+2)^0,w,c
  8704  003610  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  8705  003612  5016               	movf	(___fldiv@a+3)^0,w,c
  8706  003614  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  8707  003616                     l4374:
  8708  003616  2A27               	incf	___fldiv@aexp^0,f,c
  8709  003618                     l1218:
  8710  003618  0E19               	movlw	25
  8711  00361A  6427               	cpfsgt	___fldiv@aexp^0,c
  8712  00361C  EF12  F01B         	goto	u4641
  8713  003620  EF14  F01B         	goto	u4640
  8714  003624                     u4641:
  8715  003624  EFD4  F01A         	goto	l4360
  8716  003628                     u4640:
  8717  003628  501B               	movf	___fldiv@rem^0,w,c
  8718  00362A  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  8719  00362C  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  8720  00362E  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  8721  003630  B4D8               	btfsc	status,2,c
  8722  003632  EF1D  F01B         	goto	u4651
  8723  003636  EF1F  F01B         	goto	u4650
  8724  00363A                     u4651:
  8725  00363A  EF37  F01B         	goto	l4386
  8726  00363E                     u4650:
  8727  00363E  8022               	bsf	___fldiv@grs^0,0,c
  8728  003640  EF37  F01B         	goto	l4386
  8729  003644                     l4380:
  8730  003644  90D8               	bcf	status,0,c
  8731  003646  360F               	rlcf	___fldiv@b^0,f,c
  8732  003648  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8733  00364A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8734  00364C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8735  00364E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8736  003650  EF2C  F01B         	goto	u4661
  8737  003654  EF2E  F01B         	goto	u4660
  8738  003658                     u4661:
  8739  003658  EF2F  F01B         	goto	l1227
  8740  00365C                     u4660:
  8741  00365C  800F               	bsf	___fldiv@b^0,0,c
  8742  00365E                     l1227:
  8743  00365E  90D8               	bcf	status,0,c
  8744  003660  3622               	rlcf	___fldiv@grs^0,f,c
  8745  003662  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8746  003664  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8747  003666  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8748  003668  0620               	decf	___fldiv@new_exp^0,f,c
  8749  00366A  A0D8               	btfss	status,0,c
  8750  00366C  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  8751  00366E                     l4386:
  8752  00366E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8753  003670  EF3C  F01B         	goto	u4671
  8754  003674  EF3E  F01B         	goto	u4670
  8755  003678                     u4671:
  8756  003678  EF22  F01B         	goto	l4380
  8757  00367C                     u4670:
  8758  00367C  0E00               	movlw	0
  8759  00367E  6E27               	movwf	___fldiv@aexp^0,c
  8760  003680  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8761  003682  EF45  F01B         	goto	u4681
  8762  003686  EF47  F01B         	goto	u4680
  8763  00368A                     u4681:
  8764  00368A  EF6B  F01B         	goto	l1229
  8765  00368E                     u4680:
  8766  00368E  0EFF               	movlw	255
  8767  003690  1422               	andwf	___fldiv@grs^0,w,c
  8768  003692  6E17               	movwf	??___fldiv^0,c
  8769  003694  0EFF               	movlw	255
  8770  003696  1423               	andwf	(___fldiv@grs+1)^0,w,c
  8771  003698  6E18               	movwf	(??___fldiv+1)^0,c
  8772  00369A  0EFF               	movlw	255
  8773  00369C  1424               	andwf	(___fldiv@grs+2)^0,w,c
  8774  00369E  6E19               	movwf	(??___fldiv+2)^0,c
  8775  0036A0  0E7F               	movlw	127
  8776  0036A2  1425               	andwf	(___fldiv@grs+3)^0,w,c
  8777  0036A4  6E1A               	movwf	(??___fldiv+3)^0,c
  8778  0036A6  5017               	movf	??___fldiv^0,w,c
  8779  0036A8  1018               	iorwf	(??___fldiv+1)^0,w,c
  8780  0036AA  1019               	iorwf	(??___fldiv+2)^0,w,c
  8781  0036AC  101A               	iorwf	(??___fldiv+3)^0,w,c
  8782  0036AE  B4D8               	btfsc	status,2,c
  8783  0036B0  EF5C  F01B         	goto	u4691
  8784  0036B4  EF5E  F01B         	goto	u4690
  8785  0036B8                     u4691:
  8786  0036B8  EF62  F01B         	goto	l1230
  8787  0036BC                     u4690:
  8788  0036BC                     l4394:
  8789  0036BC  0E01               	movlw	1
  8790  0036BE  6E27               	movwf	___fldiv@aexp^0,c
  8791  0036C0  EF6B  F01B         	goto	l1229
  8792  0036C4                     l1230:
  8793  0036C4  A00F               	btfss	___fldiv@b^0,0,c
  8794  0036C6  EF67  F01B         	goto	u4701
  8795  0036CA  EF69  F01B         	goto	u4700
  8796  0036CE                     u4701:
  8797  0036CE  EF6B  F01B         	goto	l1229
  8798  0036D2                     u4700:
  8799  0036D2  EF5E  F01B         	goto	l4394
  8800  0036D6                     l1229:
  8801  0036D6  5027               	movf	___fldiv@aexp^0,w,c
  8802  0036D8  B4D8               	btfsc	status,2,c
  8803  0036DA  EF71  F01B         	goto	u4711
  8804  0036DE  EF73  F01B         	goto	u4710
  8805  0036E2                     u4711:
  8806  0036E2  EF97  F01B         	goto	l4406
  8807  0036E6                     u4710:
  8808  0036E6  0E01               	movlw	1
  8809  0036E8  260F               	addwf	___fldiv@b^0,f,c
  8810  0036EA  0E00               	movlw	0
  8811  0036EC  2210               	addwfc	(___fldiv@b+1)^0,f,c
  8812  0036EE  2211               	addwfc	(___fldiv@b+2)^0,f,c
  8813  0036F0  2212               	addwfc	(___fldiv@b+3)^0,f,c
  8814  0036F2  A012               	btfss	(___fldiv@b+3)^0,0,c
  8815  0036F4  EF7E  F01B         	goto	u4721
  8816  0036F8  EF80  F01B         	goto	u4720
  8817  0036FC                     u4721:
  8818  0036FC  EF97  F01B         	goto	l4406
  8819  003700                     u4720:
  8820  003700  C00F  F017         	movff	___fldiv@b,??___fldiv
  8821  003704  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8822  003708  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8823  00370C  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8824  003710  341A               	rlcf	(??___fldiv+3)^0,w,c
  8825  003712  321A               	rrcf	(??___fldiv+3)^0,f,c
  8826  003714  3219               	rrcf	(??___fldiv+2)^0,f,c
  8827  003716  3218               	rrcf	(??___fldiv+1)^0,f,c
  8828  003718  3217               	rrcf	??___fldiv^0,f,c
  8829  00371A  C017  F00F         	movff	??___fldiv,___fldiv@b
  8830  00371E  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8831  003722  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8832  003726  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8833  00372A  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8834  00372C  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8835  00372E                     l4406:
  8836  00372E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8837  003730  EFA2  F01B         	goto	u4731
  8838  003734  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8839  003736  E108               	bnz	u4730
  8840  003738  2820               	incf	___fldiv@new_exp^0,w,c
  8841  00373A  A0D8               	btfss	status,0,c
  8842  00373C  EFA2  F01B         	goto	u4731
  8843  003740  EFA4  F01B         	goto	u4730
  8844  003744                     u4731:
  8845  003744  EFAF  F01B         	goto	l4410
  8846  003748                     u4730:
  8847  003748  0E00               	movlw	0
  8848  00374A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8849  00374C  6820               	setf	___fldiv@new_exp^0,c
  8850  00374E  0E00               	movlw	0
  8851  003750  6E0F               	movwf	___fldiv@b^0,c
  8852  003752  0E00               	movlw	0
  8853  003754  6E10               	movwf	(___fldiv@b+1)^0,c
  8854  003756  0E00               	movlw	0
  8855  003758  6E11               	movwf	(___fldiv@b+2)^0,c
  8856  00375A  0E00               	movlw	0
  8857  00375C  6E12               	movwf	(___fldiv@b+3)^0,c
  8858  00375E                     l4410:
  8859  00375E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8860  003760  EFBC  F01B         	goto	u4740
  8861  003764  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8862  003766  E106               	bnz	u4741
  8863  003768  0420               	decf	___fldiv@new_exp^0,w,c
  8864  00376A  B0D8               	btfsc	status,0,c
  8865  00376C  EFBA  F01B         	goto	u4741
  8866  003770  EFBC  F01B         	goto	u4740
  8867  003774                     u4741:
  8868  003774  EFCA  F01B         	goto	l4414
  8869  003778                     u4740:
  8870  003778  0E00               	movlw	0
  8871  00377A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8872  00377C  0E00               	movlw	0
  8873  00377E  6E20               	movwf	___fldiv@new_exp^0,c
  8874  003780  0E00               	movlw	0
  8875  003782  6E0F               	movwf	___fldiv@b^0,c
  8876  003784  0E00               	movlw	0
  8877  003786  6E10               	movwf	(___fldiv@b+1)^0,c
  8878  003788  0E00               	movlw	0
  8879  00378A  6E11               	movwf	(___fldiv@b+2)^0,c
  8880  00378C  0E00               	movlw	0
  8881  00378E  6E12               	movwf	(___fldiv@b+3)^0,c
  8882  003790  0E00               	movlw	0
  8883  003792  6E1F               	movwf	___fldiv@sign^0,c
  8884  003794                     l4414:
  8885  003794  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8886  003798  A026               	btfss	___fldiv@bexp^0,0,c
  8887  00379A  EFD1  F01B         	goto	u4751
  8888  00379E  EFD3  F01B         	goto	u4750
  8889  0037A2                     u4751:
  8890  0037A2  EFD6  F01B         	goto	l4420
  8891  0037A6                     u4750:
  8892  0037A6  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8893  0037A8  EFD7  F01B         	goto	l4422
  8894  0037AC                     l4420:
  8895  0037AC  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8896  0037AE                     l4422:
  8897  0037AE  90D8               	bcf	status,0,c
  8898  0037B0  3026               	rrcf	___fldiv@bexp^0,w,c
  8899  0037B2  6E12               	movwf	(___fldiv@b+3)^0,c
  8900  0037B4  EF8D  F01A         	goto	l4336
  8901  0037B8                     l1216:
  8902  0037B8  0012               	return		;funcret
  8903  0037BA                     __end_of___fldiv:
  8904                           	callstack 0
  8905                           
  8906 ;; *************** function ___awmod *****************
  8907 ;; Defined at:
  8908 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;  dividend        2    0[COMRAM] int 
  8911 ;;  divisor         2    2[COMRAM] int 
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;  sign            1    5[COMRAM] unsigned char 
  8914 ;;  counter         1    4[COMRAM] unsigned char 
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  2    0[COMRAM] int 
  8917 ;; Registers used:
  8918 ;;		wreg, status,2, status,0
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8927 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8928 ;;Total ram usage:        6 bytes
  8929 ;; Hardware stack levels used: 1
  8930 ;; This function calls:
  8931 ;;		Nothing
  8932 ;; This function is called by:
  8933 ;;		_efgtoa
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text26
  8938  004BA0                     __ptext26:
  8939                           	callstack 0
  8940  004BA0                     ___awmod:
  8941                           	callstack 25
  8942  004BA0  0E00               	movlw	0
  8943  004BA2  6E06               	movwf	___awmod@sign^0,c
  8944  004BA4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8945  004BA6  EFD9  F025         	goto	u5010
  8946  004BAA  EFD7  F025         	goto	u5011
  8947  004BAE                     u5011:
  8948  004BAE  EFDF  F025         	goto	l4618
  8949  004BB2                     u5010:
  8950  004BB2  6C01               	negf	___awmod@dividend^0,c
  8951  004BB4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8952  004BB6  B0D8               	btfsc	status,0,c
  8953  004BB8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8954  004BBA  0E01               	movlw	1
  8955  004BBC  6E06               	movwf	___awmod@sign^0,c
  8956  004BBE                     l4618:
  8957  004BBE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8958  004BC0  EFE6  F025         	goto	u5020
  8959  004BC4  EFE4  F025         	goto	u5021
  8960  004BC8                     u5021:
  8961  004BC8  EFEA  F025         	goto	l4622
  8962  004BCC                     u5020:
  8963  004BCC  6C03               	negf	___awmod@divisor^0,c
  8964  004BCE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8965  004BD0  B0D8               	btfsc	status,0,c
  8966  004BD2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8967  004BD4                     l4622:
  8968  004BD4  5003               	movf	___awmod@divisor^0,w,c
  8969  004BD6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8970  004BD8  B4D8               	btfsc	status,2,c
  8971  004BDA  EFF1  F025         	goto	u5031
  8972  004BDE  EFF3  F025         	goto	u5030
  8973  004BE2                     u5031:
  8974  004BE2  EF17  F026         	goto	l4638
  8975  004BE6                     u5030:
  8976  004BE6  0E01               	movlw	1
  8977  004BE8  6E05               	movwf	___awmod@counter^0,c
  8978  004BEA  EFFB  F025         	goto	l4628
  8979  004BEE                     l4626:
  8980  004BEE  90D8               	bcf	status,0,c
  8981  004BF0  3603               	rlcf	___awmod@divisor^0,f,c
  8982  004BF2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8983  004BF4  2A05               	incf	___awmod@counter^0,f,c
  8984  004BF6                     l4628:
  8985  004BF6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8986  004BF8  EF00  F026         	goto	u5041
  8987  004BFC  EF02  F026         	goto	u5040
  8988  004C00                     u5041:
  8989  004C00  EFF7  F025         	goto	l4626
  8990  004C04                     u5040:
  8991  004C04                     l4630:
  8992  004C04  5003               	movf	___awmod@divisor^0,w,c
  8993  004C06  5C01               	subwf	___awmod@dividend^0,w,c
  8994  004C08  5004               	movf	(___awmod@divisor+1)^0,w,c
  8995  004C0A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8996  004C0C  A0D8               	btfss	status,0,c
  8997  004C0E  EF0B  F026         	goto	u5051
  8998  004C12  EF0D  F026         	goto	u5050
  8999  004C16                     u5051:
  9000  004C16  EF11  F026         	goto	l4634
  9001  004C1A                     u5050:
  9002  004C1A  5003               	movf	___awmod@divisor^0,w,c
  9003  004C1C  5E01               	subwf	___awmod@dividend^0,f,c
  9004  004C1E  5004               	movf	(___awmod@divisor+1)^0,w,c
  9005  004C20  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9006  004C22                     l4634:
  9007  004C22  90D8               	bcf	status,0,c
  9008  004C24  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9009  004C26  3203               	rrcf	___awmod@divisor^0,f,c
  9010  004C28  2E05               	decfsz	___awmod@counter^0,f,c
  9011  004C2A  EF02  F026         	goto	l4630
  9012  004C2E                     l4638:
  9013  004C2E  5006               	movf	___awmod@sign^0,w,c
  9014  004C30  B4D8               	btfsc	status,2,c
  9015  004C32  EF1D  F026         	goto	u5061
  9016  004C36  EF1F  F026         	goto	u5060
  9017  004C3A                     u5061:
  9018  004C3A  EF23  F026         	goto	l4642
  9019  004C3E                     u5060:
  9020  004C3E  6C01               	negf	___awmod@dividend^0,c
  9021  004C40  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9022  004C42  B0D8               	btfsc	status,0,c
  9023  004C44  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9024  004C46                     l4642:
  9025  004C46  C001  F001         	movff	___awmod@dividend,?___awmod
  9026  004C4A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9027  004C4E  0012               	return		;funcret
  9028  004C50                     __end_of___awmod:
  9029                           	callstack 0
  9030                           
  9031 ;; *************** function ___awdiv *****************
  9032 ;; Defined at:
  9033 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;  dividend        2    0[COMRAM] int 
  9036 ;;  divisor         2    2[COMRAM] int 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  quotient        2    6[COMRAM] int 
  9039 ;;  sign            1    5[COMRAM] unsigned char 
  9040 ;;  counter         1    4[COMRAM] unsigned char 
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  2    0[COMRAM] int 
  9043 ;; Registers used:
  9044 ;;		wreg, status,2, status,0
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/0
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9051 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9053 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9054 ;;Total ram usage:        8 bytes
  9055 ;; Hardware stack levels used: 1
  9056 ;; This function calls:
  9057 ;;		Nothing
  9058 ;; This function is called by:
  9059 ;;		_efgtoa
  9060 ;;		_DCmotors_setPWM
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text27
  9065  004ADC                     __ptext27:
  9066                           	callstack 0
  9067  004ADC                     ___awdiv:
  9068                           	callstack 25
  9069  004ADC  0E00               	movlw	0
  9070  004ADE  6E06               	movwf	___awdiv@sign^0,c
  9071  004AE0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9072  004AE2  EF77  F025         	goto	u4950
  9073  004AE6  EF75  F025         	goto	u4951
  9074  004AEA                     u4951:
  9075  004AEA  EF7D  F025         	goto	l4574
  9076  004AEE                     u4950:
  9077  004AEE  6C03               	negf	___awdiv@divisor^0,c
  9078  004AF0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9079  004AF2  B0D8               	btfsc	status,0,c
  9080  004AF4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9081  004AF6  0E01               	movlw	1
  9082  004AF8  6E06               	movwf	___awdiv@sign^0,c
  9083  004AFA                     l4574:
  9084  004AFA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9085  004AFC  EF84  F025         	goto	u4960
  9086  004B00  EF82  F025         	goto	u4961
  9087  004B04                     u4961:
  9088  004B04  EF8A  F025         	goto	l4580
  9089  004B08                     u4960:
  9090  004B08  6C01               	negf	___awdiv@dividend^0,c
  9091  004B0A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9092  004B0C  B0D8               	btfsc	status,0,c
  9093  004B0E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9094  004B10  0E01               	movlw	1
  9095  004B12  1A06               	xorwf	___awdiv@sign^0,f,c
  9096  004B14                     l4580:
  9097  004B14  0E00               	movlw	0
  9098  004B16  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9099  004B18  0E00               	movlw	0
  9100  004B1A  6E07               	movwf	___awdiv@quotient^0,c
  9101  004B1C  5003               	movf	___awdiv@divisor^0,w,c
  9102  004B1E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9103  004B20  B4D8               	btfsc	status,2,c
  9104  004B22  EF95  F025         	goto	u4971
  9105  004B26  EF97  F025         	goto	u4970
  9106  004B2A                     u4971:
  9107  004B2A  EFBF  F025         	goto	l4602
  9108  004B2E                     u4970:
  9109  004B2E  0E01               	movlw	1
  9110  004B30  6E05               	movwf	___awdiv@counter^0,c
  9111  004B32  EF9F  F025         	goto	l4588
  9112  004B36                     l4586:
  9113  004B36  90D8               	bcf	status,0,c
  9114  004B38  3603               	rlcf	___awdiv@divisor^0,f,c
  9115  004B3A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9116  004B3C  2A05               	incf	___awdiv@counter^0,f,c
  9117  004B3E                     l4588:
  9118  004B3E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9119  004B40  EFA4  F025         	goto	u4981
  9120  004B44  EFA6  F025         	goto	u4980
  9121  004B48                     u4981:
  9122  004B48  EF9B  F025         	goto	l4586
  9123  004B4C                     u4980:
  9124  004B4C                     l4590:
  9125  004B4C  90D8               	bcf	status,0,c
  9126  004B4E  3607               	rlcf	___awdiv@quotient^0,f,c
  9127  004B50  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9128  004B52  5003               	movf	___awdiv@divisor^0,w,c
  9129  004B54  5C01               	subwf	___awdiv@dividend^0,w,c
  9130  004B56  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9131  004B58  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9132  004B5A  A0D8               	btfss	status,0,c
  9133  004B5C  EFB2  F025         	goto	u4991
  9134  004B60  EFB4  F025         	goto	u4990
  9135  004B64                     u4991:
  9136  004B64  EFB9  F025         	goto	l4598
  9137  004B68                     u4990:
  9138  004B68  5003               	movf	___awdiv@divisor^0,w,c
  9139  004B6A  5E01               	subwf	___awdiv@dividend^0,f,c
  9140  004B6C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9141  004B6E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9142  004B70  8007               	bsf	___awdiv@quotient^0,0,c
  9143  004B72                     l4598:
  9144  004B72  90D8               	bcf	status,0,c
  9145  004B74  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9146  004B76  3203               	rrcf	___awdiv@divisor^0,f,c
  9147  004B78  2E05               	decfsz	___awdiv@counter^0,f,c
  9148  004B7A  EFA6  F025         	goto	l4590
  9149  004B7E                     l4602:
  9150  004B7E  5006               	movf	___awdiv@sign^0,w,c
  9151  004B80  B4D8               	btfsc	status,2,c
  9152  004B82  EFC5  F025         	goto	u5001
  9153  004B86  EFC7  F025         	goto	u5000
  9154  004B8A                     u5001:
  9155  004B8A  EFCB  F025         	goto	l4606
  9156  004B8E                     u5000:
  9157  004B8E  6C07               	negf	___awdiv@quotient^0,c
  9158  004B90  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9159  004B92  B0D8               	btfsc	status,0,c
  9160  004B94  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9161  004B96                     l4606:
  9162  004B96  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9163  004B9A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9164  004B9E  0012               	return		;funcret
  9165  004BA0                     __end_of___awdiv:
  9166                           	callstack 0
  9167                           
  9168 ;; *************** function _dtoa *****************
  9169 ;; Defined at:
  9170 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9173 ;;		 -> sprintf@f(6), 
  9174 ;;  d               8   29[COMRAM] long long 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  n               8   53[COMRAM] long long 
  9177 ;;  i               2   61[COMRAM] int 
  9178 ;;  s               2   51[COMRAM] int 
  9179 ;;  w               2   49[COMRAM] int 
  9180 ;;  p               2   47[COMRAM] int 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  2   27[COMRAM] int 
  9183 ;; Registers used:
  9184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9190 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9193 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;Total ram usage:       36 bytes
  9195 ;; Hardware stack levels used: 1
  9196 ;; Hardware stack levels required when called: 4
  9197 ;; This function calls:
  9198 ;;		___aodiv
  9199 ;;		___aomod
  9200 ;;		_abs
  9201 ;;		_pad
  9202 ;; This function is called by:
  9203 ;;		_vfpfcnvrt
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text28
  9208  0037BA                     __ptext28:
  9209                           	callstack 0
  9210  0037BA                     _dtoa:
  9211                           	callstack 22
  9212  0037BA                     
  9213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9214  0037BA  C01E  F036         	movff	dtoa@d,dtoa@n
  9215  0037BE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  9216  0037C2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  9217  0037C6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  9218  0037CA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  9219  0037CE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  9220  0037D2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  9221  0037D6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  9222  0037DA                     
  9223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9224  0037DA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  9225  0037DC  EFF2  F01B         	goto	u5561
  9226  0037E0  EFF5  F01B         	goto	u5560
  9227  0037E4                     u5561:
  9228  0037E4  0E01               	movlw	1
  9229  0037E6  EFF6  F01B         	goto	u5570
  9230  0037EA                     u5560:
  9231  0037EA  0E00               	movlw	0
  9232  0037EC                     u5570:
  9233  0037EC  6E34               	movwf	dtoa@s^0,c
  9234  0037EE  6A35               	clrf	(dtoa@s+1)^0,c
  9235                           
  9236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9237  0037F0  5034               	movf	dtoa@s^0,w,c
  9238  0037F2  1035               	iorwf	(dtoa@s+1)^0,w,c
  9239  0037F4  B4D8               	btfsc	status,2,c
  9240  0037F6  EFFF  F01B         	goto	u5581
  9241  0037FA  EF01  F01C         	goto	u5580
  9242  0037FE                     u5581:
  9243  0037FE  EF11  F01C         	goto	l4852
  9244  003802                     u5580:
  9245  003802                     
  9246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9247  003802  1E3D               	comf	(dtoa@n+7)^0,f,c
  9248  003804  1E3C               	comf	(dtoa@n+6)^0,f,c
  9249  003806  1E3B               	comf	(dtoa@n+5)^0,f,c
  9250  003808  1E3A               	comf	(dtoa@n+4)^0,f,c
  9251  00380A  1E39               	comf	(dtoa@n+3)^0,f,c
  9252  00380C  1E38               	comf	(dtoa@n+2)^0,f,c
  9253  00380E  1E37               	comf	(dtoa@n+1)^0,f,c
  9254  003810  6C36               	negf	dtoa@n^0,c
  9255  003812  0E00               	movlw	0
  9256  003814  2237               	addwfc	(dtoa@n+1)^0,f,c
  9257  003816  2238               	addwfc	(dtoa@n+2)^0,f,c
  9258  003818  2239               	addwfc	(dtoa@n+3)^0,f,c
  9259  00381A  223A               	addwfc	(dtoa@n+4)^0,f,c
  9260  00381C  223B               	addwfc	(dtoa@n+5)^0,f,c
  9261  00381E  223C               	addwfc	(dtoa@n+6)^0,f,c
  9262  003820  223D               	addwfc	(dtoa@n+7)^0,f,c
  9263  003822                     l4852:
  9264                           
  9265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9266  003822  0100               	movlb	0	; () banked
  9267  003824  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  9268  003826  EF17  F01C         	goto	u5591
  9269  00382A  EF19  F01C         	goto	u5590
  9270  00382E                     u5591:
  9271  00382E  EF1A  F01C         	goto	l4856
  9272  003832                     u5590:
  9273  003832                     
  9274                           ; BSR set to: 0
  9275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9276  003832  93F0               	bcf	_flags& (0+255),1,b
  9277  003834                     l4856:
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9281  003834  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  9282  003836  EF27  F01C         	goto	u5600
  9283  00383A  51EF               	movf	(_prec+1)& (0+255),w,b
  9284  00383C  E106               	bnz	u5601
  9285  00383E  05EE               	decf	_prec& (0+255),w,b
  9286  003840  B0D8               	btfsc	status,0,c
  9287  003842  EF25  F01C         	goto	u5601
  9288  003846  EF27  F01C         	goto	u5600
  9289  00384A                     u5601:
  9290  00384A  EF2D  F01C         	goto	l1366
  9291  00384E                     u5600:
  9292  00384E                     
  9293                           ; BSR set to: 0
  9294  00384E  0E00               	movlw	0
  9295  003850  6E31               	movwf	(dtoa@p+1)^0,c
  9296  003852  0E01               	movlw	1
  9297  003854  6E30               	movwf	dtoa@p^0,c
  9298  003856  EF31  F01C         	goto	l1368
  9299  00385A                     l1366:
  9300                           
  9301                           ; BSR set to: 0
  9302  00385A  C0EE  F030         	movff	_prec,dtoa@p
  9303  00385E  C0EF  F031         	movff	_prec+1,dtoa@p+1
  9304  003862                     l1368:
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9308  003862  C0EC  F032         	movff	_width,dtoa@w
  9309  003866  C0ED  F033         	movff	_width+1,dtoa@w+1
  9310  00386A                     
  9311                           ; BSR set to: 0
  9312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9313  00386A  5034               	movf	dtoa@s^0,w,c
  9314  00386C  1035               	iorwf	(dtoa@s+1)^0,w,c
  9315  00386E  A4D8               	btfss	status,2,c
  9316  003870  EF3C  F01C         	goto	u5611
  9317  003874  EF3E  F01C         	goto	u5610
  9318  003878                     u5611:
  9319  003878  EF45  F01C         	goto	l4864
  9320  00387C                     u5610:
  9321  00387C                     
  9322                           ; BSR set to: 0
  9323  00387C  A5F0               	btfss	_flags& (0+255),2,b
  9324  00387E  EF43  F01C         	goto	u5621
  9325  003882  EF45  F01C         	goto	u5620
  9326  003886                     u5621:
  9327  003886  EF48  F01C         	goto	l4866
  9328  00388A                     u5620:
  9329  00388A                     l4864:
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  9333  00388A  0632               	decf	dtoa@w^0,f,c
  9334  00388C  A0D8               	btfss	status,0,c
  9335  00388E  0633               	decf	(dtoa@w+1)^0,f,c
  9336  003890                     l4866:
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9340  003890  0E00               	movlw	0
  9341  003892  6E3F               	movwf	(dtoa@i+1)^0,c
  9342  003894  0E4F               	movlw	79
  9343  003896  6E3E               	movwf	dtoa@i^0,c
  9344  003898                     
  9345                           ; BSR set to: 0
  9346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9347  003898  0E00               	movlw	0
  9348  00389A  0101               	movlb	1	; () banked
  9349  00389C  6FE7               	movwf	(_dbuf+79)& (0+255),b
  9350                           
  9351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9352  00389E  EFCD  F01C         	goto	l4880
  9353  0038A2                     l4870:
  9354                           
  9355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  9356  0038A2  063E               	decf	dtoa@i^0,f,c
  9357  0038A4  A0D8               	btfss	status,0,c
  9358  0038A6  063F               	decf	(dtoa@i+1)^0,f,c
  9359  0038A8                     
  9360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9361  0038A8  0E98               	movlw	low _dbuf
  9362  0038AA  243E               	addwf	dtoa@i^0,w,c
  9363  0038AC  6ED9               	movwf	fsr2l,c
  9364  0038AE  0E01               	movlw	high _dbuf
  9365  0038B0  203F               	addwfc	(dtoa@i+1)^0,w,c
  9366  0038B2  6EDA               	movwf	fsr2h,c
  9367  0038B4  C036  F001         	movff	dtoa@n,___aomod@dividend
  9368  0038B8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9369  0038BC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9370  0038C0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9371  0038C4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9372  0038C8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9373  0038CC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9374  0038D0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9375  0038D4  0E0A               	movlw	10
  9376  0038D6  6E09               	movwf	___aomod@divisor^0,c
  9377  0038D8  0E00               	movlw	0
  9378  0038DA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9379  0038DC  0E00               	movlw	0
  9380  0038DE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9381  0038E0  0E00               	movlw	0
  9382  0038E2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9383  0038E4  0E00               	movlw	0
  9384  0038E6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9385  0038E8  0E00               	movlw	0
  9386  0038EA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9387  0038EC  0E00               	movlw	0
  9388  0038EE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9389  0038F0  0E00               	movlw	0
  9390  0038F2  6E10               	movwf	(___aomod@divisor+7)^0,c
  9391  0038F4  EC97  F021         	call	___aomod	;wreg free
  9392  0038F8  C001  F026         	movff	?___aomod,??_dtoa
  9393  0038FC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9394  003900  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9395  003904  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9396  003908  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9397  00390C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9398  003910  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9399  003914  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9400  003918  C026  F013         	movff	??_dtoa,abs@a
  9401  00391C  C028  F014         	movff	??_dtoa+2,abs@a+1
  9402  003920  EC0B  F029         	call	_abs	;wreg free
  9403  003924  5013               	movf	?_abs^0,w,c
  9404  003926  0F30               	addlw	48
  9405  003928  6EDF               	movwf	indf2,c
  9406  00392A                     
  9407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  9408  00392A  0630               	decf	dtoa@p^0,f,c
  9409  00392C  A0D8               	btfss	status,0,c
  9410  00392E  0631               	decf	(dtoa@p+1)^0,f,c
  9411  003930                     
  9412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  9413  003930  0632               	decf	dtoa@w^0,f,c
  9414  003932  A0D8               	btfss	status,0,c
  9415  003934  0633               	decf	(dtoa@w+1)^0,f,c
  9416  003936                     
  9417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9418  003936  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9419  00393A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9420  00393E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9421  003942  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9422  003946  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9423  00394A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9424  00394E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9425  003952  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9426  003956  0E0A               	movlw	10
  9427  003958  6E09               	movwf	___aodiv@divisor^0,c
  9428  00395A  0E00               	movlw	0
  9429  00395C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9430  00395E  0E00               	movlw	0
  9431  003960  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9432  003962  0E00               	movlw	0
  9433  003964  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9434  003966  0E00               	movlw	0
  9435  003968  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9436  00396A  0E00               	movlw	0
  9437  00396C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9438  00396E  0E00               	movlw	0
  9439  003970  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9440  003972  0E00               	movlw	0
  9441  003974  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9442  003976  ECD3  F020         	call	___aodiv	;wreg free
  9443  00397A  C001  F036         	movff	?___aodiv,dtoa@n
  9444  00397E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9445  003982  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9446  003986  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9447  00398A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9448  00398E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9449  003992  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9450  003996  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9451  00399A                     l4880:
  9452                           
  9453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9454  00399A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9455  00399C  EFD8  F01C         	goto	u5631
  9456  0039A0  503F               	movf	(dtoa@i+1)^0,w,c
  9457  0039A2  E108               	bnz	u5630
  9458  0039A4  043E               	decf	dtoa@i^0,w,c
  9459  0039A6  A0D8               	btfss	status,0,c
  9460  0039A8  EFD8  F01C         	goto	u5631
  9461  0039AC  EFDA  F01C         	goto	u5630
  9462  0039B0                     u5631:
  9463  0039B0  EF0B  F01D         	goto	l4890
  9464  0039B4                     u5630:
  9465  0039B4  5036               	movf	dtoa@n^0,w,c
  9466  0039B6  1037               	iorwf	(dtoa@n+1)^0,w,c
  9467  0039B8  1038               	iorwf	(dtoa@n+2)^0,w,c
  9468  0039BA  1039               	iorwf	(dtoa@n+3)^0,w,c
  9469  0039BC  103A               	iorwf	(dtoa@n+4)^0,w,c
  9470  0039BE  103B               	iorwf	(dtoa@n+5)^0,w,c
  9471  0039C0  103C               	iorwf	(dtoa@n+6)^0,w,c
  9472  0039C2  103D               	iorwf	(dtoa@n+7)^0,w,c
  9473  0039C4  A4D8               	btfss	status,2,c
  9474  0039C6  EFE7  F01C         	goto	u5641
  9475  0039CA  EFE9  F01C         	goto	u5640
  9476  0039CE                     u5641:
  9477  0039CE  EF51  F01C         	goto	l4870
  9478  0039D2                     u5640:
  9479  0039D2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9480  0039D4  EFF6  F01C         	goto	u5650
  9481  0039D8  5031               	movf	(dtoa@p+1)^0,w,c
  9482  0039DA  E106               	bnz	u5651
  9483  0039DC  0430               	decf	dtoa@p^0,w,c
  9484  0039DE  B0D8               	btfsc	status,0,c
  9485  0039E0  EFF4  F01C         	goto	u5651
  9486  0039E4  EFF6  F01C         	goto	u5650
  9487  0039E8                     u5651:
  9488  0039E8  EF51  F01C         	goto	l4870
  9489  0039EC                     u5650:
  9490  0039EC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9491  0039EE  EF01  F01D         	goto	u5661
  9492  0039F2  5033               	movf	(dtoa@w+1)^0,w,c
  9493  0039F4  E108               	bnz	u5660
  9494  0039F6  0432               	decf	dtoa@w^0,w,c
  9495  0039F8  A0D8               	btfss	status,0,c
  9496  0039FA  EF01  F01D         	goto	u5661
  9497  0039FE  EF03  F01D         	goto	u5660
  9498  003A02                     u5661:
  9499  003A02  EF0B  F01D         	goto	l4890
  9500  003A06                     u5660:
  9501  003A06  0100               	movlb	0	; () banked
  9502  003A08  B3F0               	btfsc	_flags& (0+255),1,b
  9503  003A0A  EF09  F01D         	goto	u5671
  9504  003A0E  EF0B  F01D         	goto	u5670
  9505  003A12                     u5671:
  9506  003A12  EF51  F01C         	goto	l4870
  9507  003A16                     u5670:
  9508  003A16                     l4890:
  9509                           
  9510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9511  003A16  5034               	movf	dtoa@s^0,w,c
  9512  003A18  1035               	iorwf	(dtoa@s+1)^0,w,c
  9513  003A1A  A4D8               	btfss	status,2,c
  9514  003A1C  EF12  F01D         	goto	u5681
  9515  003A20  EF14  F01D         	goto	u5680
  9516  003A24                     u5681:
  9517  003A24  EF1C  F01D         	goto	l4894
  9518  003A28                     u5680:
  9519  003A28  0100               	movlb	0	; () banked
  9520  003A2A  A5F0               	btfss	_flags& (0+255),2,b
  9521  003A2C  EF1A  F01D         	goto	u5691
  9522  003A30  EF1C  F01D         	goto	u5690
  9523  003A34                     u5691:
  9524  003A34  EF3A  F01D         	goto	l4904
  9525  003A38                     u5690:
  9526  003A38                     l4894:
  9527                           
  9528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  9529  003A38  063E               	decf	dtoa@i^0,f,c
  9530  003A3A  A0D8               	btfss	status,0,c
  9531  003A3C  063F               	decf	(dtoa@i+1)^0,f,c
  9532  003A3E                     
  9533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9534  003A3E  5034               	movf	dtoa@s^0,w,c
  9535  003A40  1035               	iorwf	(dtoa@s+1)^0,w,c
  9536  003A42  A4D8               	btfss	status,2,c
  9537  003A44  EF26  F01D         	goto	u5701
  9538  003A48  EF28  F01D         	goto	u5700
  9539  003A4C                     u5701:
  9540  003A4C  EF2E  F01D         	goto	l4900
  9541  003A50                     u5700:
  9542  003A50  0E00               	movlw	0
  9543  003A52  6E2F               	movwf	(_dtoa$2937+1)^0,c
  9544  003A54  0E2B               	movlw	43
  9545  003A56  6E2E               	movwf	_dtoa$2937^0,c
  9546  003A58  EF32  F01D         	goto	l4902
  9547  003A5C                     l4900:
  9548  003A5C  0E00               	movlw	0
  9549  003A5E  6E2F               	movwf	(_dtoa$2937+1)^0,c
  9550  003A60  0E2D               	movlw	45
  9551  003A62  6E2E               	movwf	_dtoa$2937^0,c
  9552  003A64                     l4902:
  9553  003A64  0E98               	movlw	low _dbuf
  9554  003A66  243E               	addwf	dtoa@i^0,w,c
  9555  003A68  6ED9               	movwf	fsr2l,c
  9556  003A6A  0E01               	movlw	high _dbuf
  9557  003A6C  203F               	addwfc	(dtoa@i+1)^0,w,c
  9558  003A6E  6EDA               	movwf	fsr2h,c
  9559  003A70  C02E  FFDF         	movff	_dtoa$2937,indf2
  9560  003A74                     l4904:
  9561                           
  9562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9563  003A74  C01C  F011         	movff	dtoa@fp,pad@fp
  9564  003A78  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9565  003A7C  0E98               	movlw	low _dbuf
  9566  003A7E  243E               	addwf	dtoa@i^0,w,c
  9567  003A80  6E13               	movwf	pad@buf^0,c
  9568  003A82  0E01               	movlw	high _dbuf
  9569  003A84  203F               	addwfc	(dtoa@i+1)^0,w,c
  9570  003A86  6E14               	movwf	(pad@buf+1)^0,c
  9571  003A88  C032  F015         	movff	dtoa@w,pad@p
  9572  003A8C  C033  F016         	movff	dtoa@w+1,pad@p+1
  9573  003A90  EC0B  F025         	call	_pad	;wreg free
  9574  003A94  C011  F01C         	movff	?_pad,?_dtoa
  9575  003A98  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9576  003A9C  0012               	return		;funcret
  9577  003A9E                     __end_of_dtoa:
  9578                           	callstack 0
  9579                           
  9580 ;; *************** function _pad *****************
  9581 ;; Defined at:
  9582 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9585 ;;		 -> sprintf@f(6), 
  9586 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9587 ;;		 -> dbuf(80), 
  9588 ;;  p               2   20[COMRAM] int 
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;  w               2   25[COMRAM] int 
  9591 ;;  i               2   23[COMRAM] int 
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  2   16[COMRAM] int 
  9594 ;; Registers used:
  9595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9601 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9602 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9604 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;Total ram usage:       11 bytes
  9606 ;; Hardware stack levels used: 1
  9607 ;; Hardware stack levels required when called: 3
  9608 ;; This function calls:
  9609 ;;		_fputc
  9610 ;;		_fputs
  9611 ;;		_strlen
  9612 ;; This function is called by:
  9613 ;;		_dtoa
  9614 ;;		_efgtoa
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text29
  9619  004A16                     __ptext29:
  9620                           	callstack 0
  9621  004A16                     _pad:
  9622                           	callstack 22
  9623  004A16                     
  9624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9625  004A16  0100               	movlb	0	; () banked
  9626  004A18  A1F0               	btfss	_flags& (0+255),0,b
  9627  004A1A  EF11  F025         	goto	u5231
  9628  004A1E  EF13  F025         	goto	u5230
  9629  004A22                     u5231:
  9630  004A22  EF1D  F025         	goto	l4740
  9631  004A26                     u5230:
  9632  004A26                     
  9633                           ; BSR set to: 0
  9634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9635  004A26  C013  F00A         	movff	pad@buf,fputs@s
  9636  004A2A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9637  004A2E  C011  F00C         	movff	pad@fp,fputs@fp
  9638  004A32  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9639  004A36  ECC8  F028         	call	_fputs	;wreg free
  9640  004A3A                     l4740:
  9641                           
  9642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9643  004A3A  BE16               	btfsc	(pad@p+1)^0,7,c
  9644  004A3C  EF22  F025         	goto	u5241
  9645  004A40  EF24  F025         	goto	u5240
  9646  004A44                     u5241:
  9647  004A44  EF2A  F025         	goto	l4744
  9648  004A48                     u5240:
  9649  004A48  C015  F01A         	movff	pad@p,pad@w
  9650  004A4C  C016  F01B         	movff	pad@p+1,pad@w+1
  9651  004A50  EF2E  F025         	goto	l1355
  9652  004A54                     l4744:
  9653  004A54  0E00               	movlw	0
  9654  004A56  6E1B               	movwf	(pad@w+1)^0,c
  9655  004A58  0E00               	movlw	0
  9656  004A5A  6E1A               	movwf	pad@w^0,c
  9657  004A5C                     l1355:
  9658                           
  9659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9660  004A5C  0E00               	movlw	0
  9661  004A5E  6E19               	movwf	(pad@i+1)^0,c
  9662  004A60  0E00               	movlw	0
  9663  004A62  6E18               	movwf	pad@i^0,c
  9664                           
  9665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9666  004A64  EF40  F025         	goto	l4750
  9667  004A68                     l4746:
  9668                           
  9669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9670  004A68  0E00               	movlw	0
  9671  004A6A  6E02               	movwf	(fputc@c+1)^0,c
  9672  004A6C  0E20               	movlw	32
  9673  004A6E  6E01               	movwf	fputc@c^0,c
  9674  004A70  C011  F003         	movff	pad@fp,fputc@fp
  9675  004A74  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9676  004A78  ECA6  F024         	call	_fputc	;wreg free
  9677  004A7C                     
  9678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9679  004A7C  4A18               	infsnz	pad@i^0,f,c
  9680  004A7E  2A19               	incf	(pad@i+1)^0,f,c
  9681  004A80                     l4750:
  9682                           
  9683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9684  004A80  501A               	movf	pad@w^0,w,c
  9685  004A82  5C18               	subwf	pad@i^0,w,c
  9686  004A84  5019               	movf	(pad@i+1)^0,w,c
  9687  004A86  0A80               	xorlw	128
  9688  004A88  6E17               	movwf	??_pad^0,c
  9689  004A8A  501B               	movf	(pad@w+1)^0,w,c
  9690  004A8C  0A80               	xorlw	128
  9691  004A8E  5817               	subwfb	??_pad^0,w,c
  9692  004A90  A0D8               	btfss	status,0,c
  9693  004A92  EF4D  F025         	goto	u5251
  9694  004A96  EF4F  F025         	goto	u5250
  9695  004A9A                     u5251:
  9696  004A9A  EF34  F025         	goto	l4746
  9697  004A9E                     u5250:
  9698  004A9E                     
  9699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9700  004A9E  0100               	movlb	0	; () banked
  9701  004AA0  B1F0               	btfsc	_flags& (0+255),0,b
  9702  004AA2  EF55  F025         	goto	u5261
  9703  004AA6  EF57  F025         	goto	u5260
  9704  004AAA                     u5261:
  9705  004AAA  EF61  F025         	goto	l4754
  9706  004AAE                     u5260:
  9707  004AAE                     
  9708                           ; BSR set to: 0
  9709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9710  004AAE  C013  F00A         	movff	pad@buf,fputs@s
  9711  004AB2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9712  004AB6  C011  F00C         	movff	pad@fp,fputs@fp
  9713  004ABA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9714  004ABE  ECC8  F028         	call	_fputs	;wreg free
  9715  004AC2                     l4754:
  9716                           
  9717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9718  004AC2  C013  F001         	movff	pad@buf,strlen@s
  9719  004AC6  C014  F002         	movff	pad@buf+1,strlen@s+1
  9720  004ACA  EC90  F027         	call	_strlen	;wreg free
  9721  004ACE  501A               	movf	pad@w^0,w,c
  9722  004AD0  2401               	addwf	?_strlen^0,w,c
  9723  004AD2  6E11               	movwf	?_pad^0,c
  9724  004AD4  501B               	movf	(pad@w+1)^0,w,c
  9725  004AD6  2002               	addwfc	(?_strlen+1)^0,w,c
  9726  004AD8  6E12               	movwf	(?_pad+1)^0,c
  9727  004ADA  0012               	return		;funcret
  9728  004ADC                     __end_of_pad:
  9729                           	callstack 0
  9730                           
  9731 ;; *************** function _strlen *****************
  9732 ;; Defined at:
  9733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9736 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  9737 ;;		 -> STR_16(6), STR_14(11), STR_12(7), STR_10(5), 
  9738 ;;		 -> STR_8(7), STR_6(5), STR_4(6), STR_2(4), 
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9741 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  9742 ;;		 -> STR_16(6), STR_14(11), STR_12(7), STR_10(5), 
  9743 ;;		 -> STR_8(7), STR_6(5), STR_4(6), STR_2(4), 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  2    0[COMRAM] unsigned int 
  9746 ;; Registers used:
  9747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9756 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9757 ;;Total ram usage:        4 bytes
  9758 ;; Hardware stack levels used: 1
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_pad
  9763 ;;		_stoa
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text30
  9768  004F20                     __ptext30:
  9769                           	callstack 0
  9770  004F20                     _strlen:
  9771                           	callstack 25
  9772  004F20  C001  F003         	movff	strlen@s,strlen@a
  9773  004F24  C002  F004         	movff	strlen@s+1,strlen@a+1
  9774  004F28  EF98  F027         	goto	l4196
  9775  004F2C                     l4194:
  9776  004F2C  4A01               	infsnz	strlen@s^0,f,c
  9777  004F2E  2A02               	incf	(strlen@s+1)^0,f,c
  9778  004F30                     l4196:
  9779  004F30  C001  FFF6         	movff	strlen@s,tblptrl
  9780  004F34  C002  FFF7         	movff	strlen@s+1,tblptrh
  9781  004F38  0E00               	movlw	low (__smallconst shr (0+16))
  9782  004F3A  6EF8               	movwf	tblptru,c
  9783  004F3C  0E0D               	movlw	(high __ramtop+-1)
  9784  004F3E  64F7               	cpfsgt	tblptrh,c
  9785  004F40  D003               	bra	u4367
  9786  004F42  0008               	tblrd		*
  9787  004F44  50F5               	movf	tablat,w,c
  9788  004F46  D005               	bra	u4360
  9789  004F48                     u4367:
  9790  004F48  CFF6 FFE9          	movff	tblptrl,fsr0l
  9791  004F4C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9792  004F50  50EF               	movf	indf0,w,c
  9793  004F52                     u4360:
  9794  004F52  0900               	iorlw	0
  9795  004F54  A4D8               	btfss	status,2,c
  9796  004F56  EFAF  F027         	goto	u4371
  9797  004F5A  EFB1  F027         	goto	u4370
  9798  004F5E                     u4371:
  9799  004F5E  EF96  F027         	goto	l4194
  9800  004F62                     u4370:
  9801  004F62  5003               	movf	strlen@a^0,w,c
  9802  004F64  5C01               	subwf	strlen@s^0,w,c
  9803  004F66  6E01               	movwf	?_strlen^0,c
  9804  004F68  5004               	movf	(strlen@a+1)^0,w,c
  9805  004F6A  5802               	subwfb	(strlen@s+1)^0,w,c
  9806  004F6C  6E02               	movwf	(?_strlen+1)^0,c
  9807  004F6E  0012               	return		;funcret
  9808  004F70                     __end_of_strlen:
  9809                           	callstack 0
  9810                           
  9811 ;; *************** function _fputs *****************
  9812 ;; Defined at:
  9813 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9816 ;;		 -> dbuf(80), 
  9817 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9818 ;;		 -> sprintf@f(6), 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  i               2   14[COMRAM] int 
  9821 ;;  c               1   13[COMRAM] unsigned char 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  2    9[COMRAM] int 
  9824 ;; Registers used:
  9825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9832 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9834 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9835 ;;Total ram usage:        7 bytes
  9836 ;; Hardware stack levels used: 1
  9837 ;; Hardware stack levels required when called: 2
  9838 ;; This function calls:
  9839 ;;		_fputc
  9840 ;; This function is called by:
  9841 ;;		_pad
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text31
  9846  005190                     __ptext31:
  9847                           	callstack 0
  9848  005190                     _fputs:
  9849                           	callstack 22
  9850  005190  0E00               	movlw	0
  9851  005192  6E10               	movwf	(fputs@i+1)^0,c
  9852  005194  0E00               	movlw	0
  9853  005196  6E0F               	movwf	fputs@i^0,c
  9854  005198  EFD9  F028         	goto	l4190
  9855  00519C                     l4186:
  9856  00519C  C00E  F001         	movff	fputs@c,fputc@c
  9857  0051A0  6A02               	clrf	(fputc@c+1)^0,c
  9858  0051A2  C00C  F003         	movff	fputs@fp,fputc@fp
  9859  0051A6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9860  0051AA  ECA6  F024         	call	_fputc	;wreg free
  9861  0051AE  4A0F               	infsnz	fputs@i^0,f,c
  9862  0051B0  2A10               	incf	(fputs@i+1)^0,f,c
  9863  0051B2                     l4190:
  9864  0051B2  500F               	movf	fputs@i^0,w,c
  9865  0051B4  240A               	addwf	fputs@s^0,w,c
  9866  0051B6  6ED9               	movwf	fsr2l,c
  9867  0051B8  5010               	movf	(fputs@i+1)^0,w,c
  9868  0051BA  200B               	addwfc	(fputs@s+1)^0,w,c
  9869  0051BC  6EDA               	movwf	fsr2h,c
  9870  0051BE  50DF               	movf	indf2,w,c
  9871  0051C0  6E0E               	movwf	fputs@c^0,c
  9872  0051C2  500E               	movf	fputs@c^0,w,c
  9873  0051C4  A4D8               	btfss	status,2,c
  9874  0051C6  EFE7  F028         	goto	u4351
  9875  0051CA  EFE9  F028         	goto	u4350
  9876  0051CE                     u4351:
  9877  0051CE  EFCE  F028         	goto	l4186
  9878  0051D2                     u4350:
  9879  0051D2  0012               	return		;funcret
  9880  0051D4                     __end_of_fputs:
  9881                           	callstack 0
  9882                           
  9883 ;; *************** function _fputc *****************
  9884 ;; Defined at:
  9885 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;  c               2    0[COMRAM] int 
  9888 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9889 ;;		 -> sprintf@f(6), 
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;		None
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  2    0[COMRAM] int 
  9894 ;; Registers used:
  9895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9903 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9904 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9905 ;;Total ram usage:        9 bytes
  9906 ;; Hardware stack levels used: 1
  9907 ;; Hardware stack levels required when called: 1
  9908 ;; This function calls:
  9909 ;;		_putch
  9910 ;; This function is called by:
  9911 ;;		_pad
  9912 ;;		_stoa
  9913 ;;		_vfpfcnvrt
  9914 ;;		_fputs
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text32
  9919  00494C                     __ptext32:
  9920                           	callstack 0
  9921  00494C                     _fputc:
  9922                           	callstack 24
  9923  00494C  5003               	movf	fputc@fp^0,w,c
  9924  00494E  1004               	iorwf	(fputc@fp+1)^0,w,c
  9925  004950  B4D8               	btfsc	status,2,c
  9926  004952  EFAD  F024         	goto	u3921
  9927  004956  EFAF  F024         	goto	u3920
  9928  00495A                     u3921:
  9929  00495A  EFB8  F024         	goto	l3972
  9930  00495E                     u3920:
  9931  00495E  5003               	movf	fputc@fp^0,w,c
  9932  004960  1004               	iorwf	(fputc@fp+1)^0,w,c
  9933  004962  A4D8               	btfss	status,2,c
  9934  004964  EFB6  F024         	goto	u3931
  9935  004968  EFB8  F024         	goto	u3930
  9936  00496C                     u3931:
  9937  00496C  EFBD  F024         	goto	l3974
  9938  004970                     u3930:
  9939  004970                     l3972:
  9940  004970  5001               	movf	fputc@c^0,w,c
  9941  004972  EC8B  F02A         	call	_putch
  9942  004976  EF0A  F025         	goto	l1631
  9943  00497A                     l3974:
  9944  00497A  EE20 F004          	lfsr	2,4
  9945  00497E  5003               	movf	fputc@fp^0,w,c
  9946  004980  26D9               	addwf	fsr2l,f,c
  9947  004982  5004               	movf	(fputc@fp+1)^0,w,c
  9948  004984  22DA               	addwfc	fsr2h,f,c
  9949  004986  50DE               	movf	postinc2,w,c
  9950  004988  10DE               	iorwf	postinc2,w,c
  9951  00498A  B4D8               	btfsc	status,2,c
  9952  00498C  EFCA  F024         	goto	u3941
  9953  004990  EFCC  F024         	goto	u3940
  9954  004994                     u3941:
  9955  004994  EFE7  F024         	goto	l3978
  9956  004998                     u3940:
  9957  004998  EE20 F004          	lfsr	2,4
  9958  00499C  5003               	movf	fputc@fp^0,w,c
  9959  00499E  26D9               	addwf	fsr2l,f,c
  9960  0049A0  5004               	movf	(fputc@fp+1)^0,w,c
  9961  0049A2  22DA               	addwfc	fsr2h,f,c
  9962  0049A4  EE10 F002          	lfsr	1,2
  9963  0049A8  5003               	movf	fputc@fp^0,w,c
  9964  0049AA  26E1               	addwf	fsr1l,f,c
  9965  0049AC  5004               	movf	(fputc@fp+1)^0,w,c
  9966  0049AE  22E2               	addwfc	fsr1h,f,c
  9967  0049B0  50DE               	movf	postinc2,w,c
  9968  0049B2  5CE6               	subwf	postinc1,w,c
  9969  0049B4  50E6               	movf	postinc1,w,c
  9970  0049B6  0A80               	xorlw	128
  9971  0049B8  6E09               	movwf	(??_fputc+4)^0,c
  9972  0049BA  50DE               	movf	postinc2,w,c
  9973  0049BC  0A80               	xorlw	128
  9974  0049BE  5809               	subwfb	(??_fputc+4)^0,w,c
  9975  0049C0  B0D8               	btfsc	status,0,c
  9976  0049C2  EFE5  F024         	goto	u3951
  9977  0049C6  EFE7  F024         	goto	u3950
  9978  0049CA                     u3951:
  9979  0049CA  EF0A  F025         	goto	l1631
  9980  0049CE                     u3950:
  9981  0049CE                     l3978:
  9982  0049CE  EE20 F002          	lfsr	2,2
  9983  0049D2  5003               	movf	fputc@fp^0,w,c
  9984  0049D4  26D9               	addwf	fsr2l,f,c
  9985  0049D6  5004               	movf	(fputc@fp+1)^0,w,c
  9986  0049D8  22DA               	addwfc	fsr2h,f,c
  9987  0049DA  CFDE F005          	movff	postinc2,??_fputc
  9988  0049DE  CFDD F006          	movff	postdec2,??_fputc+1
  9989  0049E2  C003  FFD9         	movff	fputc@fp,fsr2l
  9990  0049E6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9991  0049EA  CFDE F007          	movff	postinc2,??_fputc+2
  9992  0049EE  CFDD F008          	movff	postdec2,??_fputc+3
  9993  0049F2  5005               	movf	??_fputc^0,w,c
  9994  0049F4  2407               	addwf	(??_fputc+2)^0,w,c
  9995  0049F6  6ED9               	movwf	fsr2l,c
  9996  0049F8  5006               	movf	(??_fputc+1)^0,w,c
  9997  0049FA  2008               	addwfc	(??_fputc+3)^0,w,c
  9998  0049FC  6EDA               	movwf	fsr2h,c
  9999  0049FE  C001  FFDF         	movff	fputc@c,indf2
 10000  004A02  EE20 F002          	lfsr	2,2
 10001  004A06  5003               	movf	fputc@fp^0,w,c
 10002  004A08  26D9               	addwf	fsr2l,f,c
 10003  004A0A  5004               	movf	(fputc@fp+1)^0,w,c
 10004  004A0C  22DA               	addwfc	fsr2h,f,c
 10005  004A0E  2ADE               	incf	postinc2,f,c
 10006  004A10  0E00               	movlw	0
 10007  004A12  22DD               	addwfc	postdec2,f,c
 10008  004A14                     l1631:
 10009  004A14  0012               	return		;funcret
 10010  004A16                     __end_of_fputc:
 10011                           	callstack 0
 10012                           
 10013 ;; *************** function _putch *****************
 10014 ;; Defined at:
 10015 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;  c               1    wreg     unsigned char 
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;  c               1    0[COMRAM] unsigned char 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10033 ;;Total ram usage:        0 bytes
 10034 ;; Hardware stack levels used: 1
 10035 ;; This function calls:
 10036 ;;		Nothing
 10037 ;; This function is called by:
 10038 ;;		_fputc
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           	psect	text33
 10043  005516                     __ptext33:
 10044                           	callstack 0
 10045  005516                     _putch:
 10046                           	callstack 24
 10047  005516  0012               	return		;funcret
 10048  005518                     __end_of_putch:
 10049                           	callstack 0
 10050                           
 10051 ;; *************** function _abs *****************
 10052 ;; Defined at:
 10053 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  a               2   18[COMRAM] int 
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;		None
 10058 ;; Return value:  Size  Location     Type
 10059 ;;                  2   18[COMRAM] int 
 10060 ;; Registers used:
 10061 ;;		wreg, status,2, status,0
 10062 ;; Tracked objects:
 10063 ;;		On entry : 0/0
 10064 ;;		On exit  : 0/0
 10065 ;;		Unchanged: 0/0
 10066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10071 ;;Total ram usage:        4 bytes
 10072 ;; Hardware stack levels used: 1
 10073 ;; This function calls:
 10074 ;;		Nothing
 10075 ;; This function is called by:
 10076 ;;		_dtoa
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           	psect	text34
 10081  005216                     __ptext34:
 10082                           	callstack 0
 10083  005216                     _abs:
 10084                           	callstack 25
 10085  005216  BE14               	btfsc	(abs@a+1)^0,7,c
 10086  005218  EF18  F029         	goto	u5270
 10087  00521C  5014               	movf	(abs@a+1)^0,w,c
 10088  00521E  E106               	bnz	u5271
 10089  005220  0413               	decf	abs@a^0,w,c
 10090  005222  B0D8               	btfsc	status,0,c
 10091  005224  EF16  F029         	goto	u5271
 10092  005228  EF18  F029         	goto	u5270
 10093  00522C                     u5271:
 10094  00522C  EF26  F029         	goto	l1552
 10095  005230                     u5270:
 10096  005230  C013  F015         	movff	abs@a,??_abs
 10097  005234  C014  F016         	movff	abs@a+1,??_abs+1
 10098  005238  1E15               	comf	??_abs^0,f,c
 10099  00523A  1E16               	comf	(??_abs+1)^0,f,c
 10100  00523C  4A15               	infsnz	??_abs^0,f,c
 10101  00523E  2A16               	incf	(??_abs+1)^0,f,c
 10102  005240  C015  F013         	movff	??_abs,?_abs
 10103  005244  C016  F014         	movff	??_abs+1,?_abs+1
 10104  005248  EF2A  F029         	goto	l1555
 10105  00524C                     l1552:
 10106  00524C  C013  F013         	movff	abs@a,?_abs
 10107  005250  C014  F014         	movff	abs@a+1,?_abs+1
 10108  005254                     l1555:
 10109  005254  0012               	return		;funcret
 10110  005256                     __end_of_abs:
 10111                           	callstack 0
 10112                           
 10113 ;; *************** function ___aomod *****************
 10114 ;; Defined at:
 10115 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;  dividend        8    0[COMRAM] long long 
 10118 ;;  divisor         8    8[COMRAM] long long 
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;  sign            1   17[COMRAM] unsigned char 
 10121 ;;  counter         1   16[COMRAM] unsigned char 
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  8    0[COMRAM] long long 
 10124 ;; Registers used:
 10125 ;;		wreg, status,2, status,0
 10126 ;; Tracked objects:
 10127 ;;		On entry : 0/0
 10128 ;;		On exit  : 0/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10131 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10134 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10135 ;;Total ram usage:       18 bytes
 10136 ;; Hardware stack levels used: 1
 10137 ;; This function calls:
 10138 ;;		Nothing
 10139 ;; This function is called by:
 10140 ;;		_dtoa
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text35
 10145  00432E                     __ptext35:
 10146                           	callstack 0
 10147  00432E                     ___aomod:
 10148                           	callstack 25
 10149  00432E  0E00               	movlw	0
 10150  004330  6E12               	movwf	___aomod@sign^0,c
 10151  004332  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10152  004334  EFA0  F021         	goto	u4470
 10153  004338  EF9E  F021         	goto	u4471
 10154  00433C                     u4471:
 10155  00433C  EFB2  F021         	goto	l4264
 10156  004340                     u4470:
 10157  004340  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10158  004342  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10159  004344  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10160  004346  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10161  004348  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10162  00434A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10163  00434C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10164  00434E  6C01               	negf	___aomod@dividend^0,c
 10165  004350  0E00               	movlw	0
 10166  004352  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10167  004354  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10168  004356  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10169  004358  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10170  00435A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10171  00435C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10172  00435E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10173  004360  0E01               	movlw	1
 10174  004362  6E12               	movwf	___aomod@sign^0,c
 10175  004364                     l4264:
 10176  004364  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10177  004366  EFB9  F021         	goto	u4480
 10178  00436A  EFB7  F021         	goto	u4481
 10179  00436E                     u4481:
 10180  00436E  EFC9  F021         	goto	l4268
 10181  004372                     u4480:
 10182  004372  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10183  004374  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10184  004376  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10185  004378  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10186  00437A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10187  00437C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10188  00437E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10189  004380  6C09               	negf	___aomod@divisor^0,c
 10190  004382  0E00               	movlw	0
 10191  004384  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10192  004386  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10193  004388  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10194  00438A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10195  00438C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10196  00438E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10197  004390  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10198  004392                     l4268:
 10199  004392  5009               	movf	___aomod@divisor^0,w,c
 10200  004394  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10201  004396  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10202  004398  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10203  00439A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10204  00439C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10205  00439E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10206  0043A0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10207  0043A2  B4D8               	btfsc	status,2,c
 10208  0043A4  EFD6  F021         	goto	u4491
 10209  0043A8  EFD8  F021         	goto	u4490
 10210  0043AC                     u4491:
 10211  0043AC  EF20  F022         	goto	l4284
 10212  0043B0                     u4490:
 10213  0043B0  0E01               	movlw	1
 10214  0043B2  6E11               	movwf	___aomod@counter^0,c
 10215  0043B4  EFE6  F021         	goto	l4274
 10216  0043B8                     l4272:
 10217  0043B8  90D8               	bcf	status,0,c
 10218  0043BA  3609               	rlcf	___aomod@divisor^0,f,c
 10219  0043BC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10220  0043BE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10221  0043C0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10222  0043C2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10223  0043C4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10224  0043C6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10225  0043C8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10226  0043CA  2A11               	incf	___aomod@counter^0,f,c
 10227  0043CC                     l4274:
 10228  0043CC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10229  0043CE  EFEB  F021         	goto	u4501
 10230  0043D2  EFED  F021         	goto	u4500
 10231  0043D6                     u4501:
 10232  0043D6  EFDC  F021         	goto	l4272
 10233  0043DA                     u4500:
 10234  0043DA                     l4276:
 10235  0043DA  5009               	movf	___aomod@divisor^0,w,c
 10236  0043DC  5C01               	subwf	___aomod@dividend^0,w,c
 10237  0043DE  500A               	movf	(___aomod@divisor+1)^0,w,c
 10238  0043E0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10239  0043E2  500B               	movf	(___aomod@divisor+2)^0,w,c
 10240  0043E4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10241  0043E6  500C               	movf	(___aomod@divisor+3)^0,w,c
 10242  0043E8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10243  0043EA  500D               	movf	(___aomod@divisor+4)^0,w,c
 10244  0043EC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10245  0043EE  500E               	movf	(___aomod@divisor+5)^0,w,c
 10246  0043F0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10247  0043F2  500F               	movf	(___aomod@divisor+6)^0,w,c
 10248  0043F4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10249  0043F6  5010               	movf	(___aomod@divisor+7)^0,w,c
 10250  0043F8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10251  0043FA  A0D8               	btfss	status,0,c
 10252  0043FC  EF02  F022         	goto	u4511
 10253  004400  EF04  F022         	goto	u4510
 10254  004404                     u4511:
 10255  004404  EF14  F022         	goto	l4280
 10256  004408                     u4510:
 10257  004408  5009               	movf	___aomod@divisor^0,w,c
 10258  00440A  5E01               	subwf	___aomod@dividend^0,f,c
 10259  00440C  500A               	movf	(___aomod@divisor+1)^0,w,c
 10260  00440E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10261  004410  500B               	movf	(___aomod@divisor+2)^0,w,c
 10262  004412  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10263  004414  500C               	movf	(___aomod@divisor+3)^0,w,c
 10264  004416  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10265  004418  500D               	movf	(___aomod@divisor+4)^0,w,c
 10266  00441A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10267  00441C  500E               	movf	(___aomod@divisor+5)^0,w,c
 10268  00441E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10269  004420  500F               	movf	(___aomod@divisor+6)^0,w,c
 10270  004422  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10271  004424  5010               	movf	(___aomod@divisor+7)^0,w,c
 10272  004426  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10273  004428                     l4280:
 10274  004428  90D8               	bcf	status,0,c
 10275  00442A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10276  00442C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10277  00442E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10278  004430  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10279  004432  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10280  004434  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10281  004436  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10282  004438  3209               	rrcf	___aomod@divisor^0,f,c
 10283  00443A  2E11               	decfsz	___aomod@counter^0,f,c
 10284  00443C  EFED  F021         	goto	l4276
 10285  004440                     l4284:
 10286  004440  5012               	movf	___aomod@sign^0,w,c
 10287  004442  B4D8               	btfsc	status,2,c
 10288  004444  EF26  F022         	goto	u4521
 10289  004448  EF28  F022         	goto	u4520
 10290  00444C                     u4521:
 10291  00444C  EF38  F022         	goto	l4288
 10292  004450                     u4520:
 10293  004450  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10294  004452  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10295  004454  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10296  004456  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10297  004458  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10298  00445A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10299  00445C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10300  00445E  6C01               	negf	___aomod@dividend^0,c
 10301  004460  0E00               	movlw	0
 10302  004462  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10303  004464  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10304  004466  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10305  004468  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10306  00446A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10307  00446C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10308  00446E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10309  004470                     l4288:
 10310  004470  C001  F001         	movff	___aomod@dividend,?___aomod
 10311  004474  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10312  004478  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10313  00447C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10314  004480  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10315  004484  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10316  004488  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10317  00448C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10318  004490  0012               	return		;funcret
 10319  004492                     __end_of___aomod:
 10320                           	callstack 0
 10321                           
 10322 ;; *************** function ___aodiv *****************
 10323 ;; Defined at:
 10324 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;  dividend        8    0[COMRAM] long long 
 10327 ;;  divisor         8    8[COMRAM] long long 
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;  quotient        8   18[COMRAM] long long 
 10330 ;;  sign            1   17[COMRAM] unsigned char 
 10331 ;;  counter         1   16[COMRAM] unsigned char 
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  8    0[COMRAM] long long 
 10334 ;; Registers used:
 10335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10341 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10342 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10344 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10345 ;;Total ram usage:       26 bytes
 10346 ;; Hardware stack levels used: 1
 10347 ;; This function calls:
 10348 ;;		Nothing
 10349 ;; This function is called by:
 10350 ;;		_dtoa
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           	psect	text36
 10355  0041A6                     __ptext36:
 10356                           	callstack 0
 10357  0041A6                     ___aodiv:
 10358                           	callstack 25
 10359  0041A6  0E00               	movlw	0
 10360  0041A8  6E12               	movwf	___aodiv@sign^0,c
 10361  0041AA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10362  0041AC  EFDC  F020         	goto	u4400
 10363  0041B0  EFDA  F020         	goto	u4401
 10364  0041B4                     u4401:
 10365  0041B4  EFEE  F020         	goto	l4220
 10366  0041B8                     u4400:
 10367  0041B8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10368  0041BA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10369  0041BC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10370  0041BE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10371  0041C0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10372  0041C2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10373  0041C4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10374  0041C6  6C09               	negf	___aodiv@divisor^0,c
 10375  0041C8  0E00               	movlw	0
 10376  0041CA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10377  0041CC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10378  0041CE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10379  0041D0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10380  0041D2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10381  0041D4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10382  0041D6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10383  0041D8  0E01               	movlw	1
 10384  0041DA  6E12               	movwf	___aodiv@sign^0,c
 10385  0041DC                     l4220:
 10386  0041DC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10387  0041DE  EFF5  F020         	goto	u4410
 10388  0041E2  EFF3  F020         	goto	u4411
 10389  0041E6                     u4411:
 10390  0041E6  EF07  F021         	goto	l4226
 10391  0041EA                     u4410:
 10392  0041EA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10393  0041EC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10394  0041EE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10395  0041F0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10396  0041F2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10397  0041F4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10398  0041F6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10399  0041F8  6C01               	negf	___aodiv@dividend^0,c
 10400  0041FA  0E00               	movlw	0
 10401  0041FC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10402  0041FE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10403  004200  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10404  004202  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10405  004204  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10406  004206  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10407  004208  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10408  00420A  0E01               	movlw	1
 10409  00420C  1A12               	xorwf	___aodiv@sign^0,f,c
 10410  00420E                     l4226:
 10411  00420E  EE20  F013         	lfsr	2,___aodiv@quotient
 10412  004212  0E07               	movlw	7
 10413  004214                     u4421:
 10414  004214  6ADE               	clrf	postinc2,c
 10415  004216  06E8               	decf	wreg,f,c
 10416  004218  E2FD               	bc	u4421
 10417  00421A  5009               	movf	___aodiv@divisor^0,w,c
 10418  00421C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10419  00421E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10420  004220  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10421  004222  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10422  004224  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10423  004226  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10424  004228  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10425  00422A  B4D8               	btfsc	status,2,c
 10426  00422C  EF1A  F021         	goto	u4431
 10427  004230  EF1C  F021         	goto	u4430
 10428  004234                     u4431:
 10429  004234  EF6E  F021         	goto	l4248
 10430  004238                     u4430:
 10431  004238  0E01               	movlw	1
 10432  00423A  6E11               	movwf	___aodiv@counter^0,c
 10433  00423C  EF2A  F021         	goto	l4234
 10434  004240                     l4232:
 10435  004240  90D8               	bcf	status,0,c
 10436  004242  3609               	rlcf	___aodiv@divisor^0,f,c
 10437  004244  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10438  004246  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10439  004248  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10440  00424A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10441  00424C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10442  00424E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10443  004250  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10444  004252  2A11               	incf	___aodiv@counter^0,f,c
 10445  004254                     l4234:
 10446  004254  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10447  004256  EF2F  F021         	goto	u4441
 10448  00425A  EF31  F021         	goto	u4440
 10449  00425E                     u4441:
 10450  00425E  EF20  F021         	goto	l4232
 10451  004262                     u4440:
 10452  004262                     l4236:
 10453  004262  90D8               	bcf	status,0,c
 10454  004264  3613               	rlcf	___aodiv@quotient^0,f,c
 10455  004266  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10456  004268  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10457  00426A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10458  00426C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10459  00426E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10460  004270  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10461  004272  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10462  004274  5009               	movf	___aodiv@divisor^0,w,c
 10463  004276  5C01               	subwf	___aodiv@dividend^0,w,c
 10464  004278  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10465  00427A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10466  00427C  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10467  00427E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10468  004280  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10469  004282  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10470  004284  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10471  004286  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10472  004288  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10473  00428A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10474  00428C  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10475  00428E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10476  004290  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10477  004292  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10478  004294  A0D8               	btfss	status,0,c
 10479  004296  EF4F  F021         	goto	u4451
 10480  00429A  EF51  F021         	goto	u4450
 10481  00429E                     u4451:
 10482  00429E  EF62  F021         	goto	l4244
 10483  0042A2                     u4450:
 10484  0042A2  5009               	movf	___aodiv@divisor^0,w,c
 10485  0042A4  5E01               	subwf	___aodiv@dividend^0,f,c
 10486  0042A6  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10487  0042A8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10488  0042AA  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10489  0042AC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10490  0042AE  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10491  0042B0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10492  0042B2  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10493  0042B4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10494  0042B6  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10495  0042B8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10496  0042BA  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10497  0042BC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10498  0042BE  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10499  0042C0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10500  0042C2  8013               	bsf	___aodiv@quotient^0,0,c
 10501  0042C4                     l4244:
 10502  0042C4  90D8               	bcf	status,0,c
 10503  0042C6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10504  0042C8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10505  0042CA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10506  0042CC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10507  0042CE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10508  0042D0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10509  0042D2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10510  0042D4  3209               	rrcf	___aodiv@divisor^0,f,c
 10511  0042D6  2E11               	decfsz	___aodiv@counter^0,f,c
 10512  0042D8  EF31  F021         	goto	l4236
 10513  0042DC                     l4248:
 10514  0042DC  5012               	movf	___aodiv@sign^0,w,c
 10515  0042DE  B4D8               	btfsc	status,2,c
 10516  0042E0  EF74  F021         	goto	u4461
 10517  0042E4  EF76  F021         	goto	u4460
 10518  0042E8                     u4461:
 10519  0042E8  EF86  F021         	goto	l4252
 10520  0042EC                     u4460:
 10521  0042EC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10522  0042EE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10523  0042F0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10524  0042F2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10525  0042F4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10526  0042F6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10527  0042F8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10528  0042FA  6C13               	negf	___aodiv@quotient^0,c
 10529  0042FC  0E00               	movlw	0
 10530  0042FE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10531  004300  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10532  004302  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10533  004304  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10534  004306  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10535  004308  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10536  00430A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10537  00430C                     l4252:
 10538  00430C  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10539  004310  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10540  004314  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10541  004318  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10542  00431C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10543  004320  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10544  004324  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10545  004328  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10546  00432C  0012               	return		;funcret
 10547  00432E                     __end_of___aodiv:
 10548                           	callstack 0
 10549                           
 10550 ;; *************** function _atoi *****************
 10551 ;; Defined at:
 10552 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10555 ;;		 -> STR_17(64), STR_15(64), STR_13(64), STR_11(64), 
 10556 ;;		 -> STR_9(64), STR_7(64), STR_5(64), STR_3(64), 
 10557 ;;		 -> STR_1(64), 
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;  n               2   20[COMRAM] int 
 10560 ;;  neg             2   13[COMRAM] int 
 10561 ;; Return value:  Size  Location     Type
 10562 ;;                  2    7[COMRAM] int 
 10563 ;; Registers used:
 10564 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10565 ;; Tracked objects:
 10566 ;;		On entry : 0/0
 10567 ;;		On exit  : 0/0
 10568 ;;		Unchanged: 0/0
 10569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10571 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10573 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10574 ;;Total ram usage:       15 bytes
 10575 ;; Hardware stack levels used: 1
 10576 ;; Hardware stack levels required when called: 1
 10577 ;; This function calls:
 10578 ;;		___wmul
 10579 ;;		_isdigit
 10580 ;;		_isspace
 10581 ;; This function is called by:
 10582 ;;		_vfpfcnvrt
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text37
 10587  003E64                     __ptext37:
 10588                           	callstack 0
 10589  003E64                     _atoi:
 10590                           	callstack 25
 10591  003E64  0E00               	movlw	0
 10592  003E66  6E16               	movwf	(atoi@n+1)^0,c
 10593  003E68  0E00               	movlw	0
 10594  003E6A  6E15               	movwf	atoi@n^0,c
 10595  003E6C  0E00               	movlw	0
 10596  003E6E  6E0F               	movwf	(atoi@neg+1)^0,c
 10597  003E70  0E00               	movlw	0
 10598  003E72  6E0E               	movwf	atoi@neg^0,c
 10599  003E74  EF3E  F01F         	goto	l5262
 10600  003E78                     l5260:
 10601  003E78  4A08               	infsnz	atoi@s^0,f,c
 10602  003E7A  2A09               	incf	(atoi@s+1)^0,f,c
 10603  003E7C                     l5262:
 10604  003E7C  0E01               	movlw	1
 10605  003E7E  6E14               	movwf	_atoi$3040^0,c
 10606  003E80  C008  FFF6         	movff	atoi@s,tblptrl
 10607  003E84  C009  FFF7         	movff	atoi@s+1,tblptrh
 10608  003E88                     	if	0	;tblptru may be non-zero
 10609  003E88                     	endif
 10610  003E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10611  003E88  0E00               	movlw	low (__mediumconst shr (0+16))
 10612  003E8A  6EF8               	movwf	tblptru,c
 10613  003E8C                     	endif
 10614  003E8C  0008               	tblrd		*
 10615  003E8E  50F5               	movf	tablat,w,c
 10616  003E90  0A20               	xorlw	32
 10617  003E92  B4D8               	btfsc	status,2,c
 10618  003E94  EF4E  F01F         	goto	u6351
 10619  003E98  EF50  F01F         	goto	u6350
 10620  003E9C                     u6351:
 10621  003E9C  EF6F  F01F         	goto	l5270
 10622  003EA0                     u6350:
 10623  003EA0  0EF7               	movlw	247
 10624  003EA2  6E0A               	movwf	??_atoi^0,c
 10625  003EA4  0EFF               	movlw	255
 10626  003EA6  6E0B               	movwf	(??_atoi+1)^0,c
 10627  003EA8  C008  FFF6         	movff	atoi@s,tblptrl
 10628  003EAC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10629  003EB0                     	if	0	;tblptru may be non-zero
 10630  003EB0                     	endif
 10631  003EB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10632  003EB0  0E00               	movlw	low (__mediumconst shr (0+16))
 10633  003EB2  6EF8               	movwf	tblptru,c
 10634  003EB4                     	endif
 10635  003EB4  0008               	tblrd		*
 10636  003EB6  50F5               	movf	tablat,w,c
 10637  003EB8  6E0C               	movwf	(??_atoi+2)^0,c
 10638  003EBA  6A0D               	clrf	(??_atoi+3)^0,c
 10639  003EBC  500A               	movf	??_atoi^0,w,c
 10640  003EBE  260C               	addwf	(??_atoi+2)^0,f,c
 10641  003EC0  500B               	movf	(??_atoi+1)^0,w,c
 10642  003EC2  220D               	addwfc	(??_atoi+3)^0,f,c
 10643  003EC4  500D               	movf	(??_atoi+3)^0,w,c
 10644  003EC6  E109               	bnz	u6360
 10645  003EC8  0E05               	movlw	5
 10646  003ECA  5C0C               	subwf	(??_atoi+2)^0,w,c
 10647  003ECC  A0D8               	btfss	status,0,c
 10648  003ECE  EF6B  F01F         	goto	u6361
 10649  003ED2  EF6D  F01F         	goto	u6360
 10650  003ED6                     u6361:
 10651  003ED6  EF6F  F01F         	goto	l5270
 10652  003EDA                     u6360:
 10653  003EDA  0E00               	movlw	0
 10654  003EDC  6E14               	movwf	_atoi$3040^0,c
 10655  003EDE                     l5270:
 10656  003EDE  C014  F010         	movff	_atoi$3040,_atoi$3039
 10657  003EE2  6A11               	clrf	(_atoi$3039+1)^0,c
 10658  003EE4  5010               	movf	_atoi$3039^0,w,c
 10659  003EE6  1011               	iorwf	(_atoi$3039+1)^0,w,c
 10660  003EE8  A4D8               	btfss	status,2,c
 10661  003EEA  EF79  F01F         	goto	u6371
 10662  003EEE  EF7B  F01F         	goto	u6370
 10663  003EF2                     u6371:
 10664  003EF2  EF3C  F01F         	goto	l5260
 10665  003EF6                     u6370:
 10666  003EF6  EF85  F01F         	goto	l5280
 10667  003EFA                     l5276:
 10668  003EFA  0E00               	movlw	0
 10669  003EFC  6E0F               	movwf	(atoi@neg+1)^0,c
 10670  003EFE  0E01               	movlw	1
 10671  003F00  6E0E               	movwf	atoi@neg^0,c
 10672  003F02                     l5278:
 10673  003F02  4A08               	infsnz	atoi@s^0,f,c
 10674  003F04  2A09               	incf	(atoi@s+1)^0,f,c
 10675  003F06  EFBE  F01F         	goto	l5286
 10676  003F0A                     l5280:
 10677  003F0A  C008  FFF6         	movff	atoi@s,tblptrl
 10678  003F0E  C009  FFF7         	movff	atoi@s+1,tblptrh
 10679  003F12                     	if	0	;tblptru may be non-zero
 10680  003F12                     	endif
 10681  003F12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10682  003F12  0E00               	movlw	low (__mediumconst shr (0+16))
 10683  003F14  6EF8               	movwf	tblptru,c
 10684  003F16                     	endif
 10685  003F16  0008               	tblrd		*
 10686  003F18  50F5               	movf	tablat,w,c
 10687  003F1A  6E0A               	movwf	??_atoi^0,c
 10688  003F1C  6A0B               	clrf	(??_atoi+1)^0,c
 10689                           
 10690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10691                           ; Switch size 1, requested type "simple"
 10692                           ; Number of cases is 1, Range of values is 0 to 0
 10693                           ; switch strategies available:
 10694                           ; Name         Instructions Cycles
 10695                           ; simple_byte            4     3 (average)
 10696                           ;	Chosen strategy is simple_byte
 10697  003F1E  500B               	movf	(??_atoi+1)^0,w,c
 10698  003F20  0A00               	xorlw	0	; case 0
 10699  003F22  B4D8               	btfsc	status,2,c
 10700  003F24  EF96  F01F         	goto	l6216
 10701  003F28  EFBE  F01F         	goto	l5286
 10702  003F2C                     l6216:
 10703                           
 10704                           ; Switch size 1, requested type "simple"
 10705                           ; Number of cases is 2, Range of values is 43 to 45
 10706                           ; switch strategies available:
 10707                           ; Name         Instructions Cycles
 10708                           ; simple_byte            7     4 (average)
 10709                           ;	Chosen strategy is simple_byte
 10710  003F2C  500A               	movf	??_atoi^0,w,c
 10711  003F2E  0A2B               	xorlw	43	; case 43
 10712  003F30  B4D8               	btfsc	status,2,c
 10713  003F32  EF81  F01F         	goto	l5278
 10714  003F36  0A06               	xorlw	6	; case 45
 10715  003F38  B4D8               	btfsc	status,2,c
 10716  003F3A  EF7D  F01F         	goto	l5276
 10717  003F3E  EFBE  F01F         	goto	l5286
 10718  003F42                     l5282:
 10719  003F42  C015  F001         	movff	atoi@n,___wmul@multiplier
 10720  003F46  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10721  003F4A  0E00               	movlw	0
 10722  003F4C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10723  003F4E  0E0A               	movlw	10
 10724  003F50  6E03               	movwf	___wmul@multiplicand^0,c
 10725  003F52  ECDC  F029         	call	___wmul	;wreg free
 10726  003F56  C008  FFF6         	movff	atoi@s,tblptrl
 10727  003F5A  C009  FFF7         	movff	atoi@s+1,tblptrh
 10728  003F5E                     	if	0	;tblptru may be non-zero
 10729  003F5E                     	endif
 10730  003F5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10731  003F5E  0E00               	movlw	low (__mediumconst shr (0+16))
 10732  003F60  6EF8               	movwf	tblptru,c
 10733  003F62                     	endif
 10734  003F62  0008               	tblrd		*
 10735  003F64  50F5               	movf	tablat,w,c
 10736  003F66  5E01               	subwf	?___wmul^0,f,c
 10737  003F68  0E00               	movlw	0
 10738  003F6A  5A02               	subwfb	(?___wmul+1)^0,f,c
 10739  003F6C  0E30               	movlw	48
 10740  003F6E  2401               	addwf	?___wmul^0,w,c
 10741  003F70  6E15               	movwf	atoi@n^0,c
 10742  003F72  0E00               	movlw	0
 10743  003F74  2002               	addwfc	(?___wmul+1)^0,w,c
 10744  003F76  6E16               	movwf	(atoi@n+1)^0,c
 10745  003F78  EF81  F01F         	goto	l5278
 10746  003F7C                     l5286:
 10747  003F7C  0ED0               	movlw	208
 10748  003F7E  6E0A               	movwf	??_atoi^0,c
 10749  003F80  0EFF               	movlw	255
 10750  003F82  6E0B               	movwf	(??_atoi+1)^0,c
 10751  003F84  C008  FFF6         	movff	atoi@s,tblptrl
 10752  003F88  C009  FFF7         	movff	atoi@s+1,tblptrh
 10753  003F8C                     	if	0	;tblptru may be non-zero
 10754  003F8C                     	endif
 10755  003F8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10756  003F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 10757  003F8E  6EF8               	movwf	tblptru,c
 10758  003F90                     	endif
 10759  003F90  0008               	tblrd		*
 10760  003F92  50F5               	movf	tablat,w,c
 10761  003F94  6E0C               	movwf	(??_atoi+2)^0,c
 10762  003F96  6A0D               	clrf	(??_atoi+3)^0,c
 10763  003F98  500A               	movf	??_atoi^0,w,c
 10764  003F9A  260C               	addwf	(??_atoi+2)^0,f,c
 10765  003F9C  500B               	movf	(??_atoi+1)^0,w,c
 10766  003F9E  220D               	addwfc	(??_atoi+3)^0,f,c
 10767  003FA0  500D               	movf	(??_atoi+3)^0,w,c
 10768  003FA2  E10A               	bnz	u6380
 10769  003FA4  0E0A               	movlw	10
 10770  003FA6  5C0C               	subwf	(??_atoi+2)^0,w,c
 10771  003FA8  A0D8               	btfss	status,0,c
 10772  003FAA  EFD9  F01F         	goto	u6381
 10773  003FAE  EFDC  F01F         	goto	u6380
 10774  003FB2                     u6381:
 10775  003FB2  0E01               	movlw	1
 10776  003FB4  EFDD  F01F         	goto	u6390
 10777  003FB8                     u6380:
 10778  003FB8  0E00               	movlw	0
 10779  003FBA                     u6390:
 10780  003FBA  6E12               	movwf	_atoi$3041^0,c
 10781  003FBC  6A13               	clrf	(_atoi$3041+1)^0,c
 10782  003FBE  5012               	movf	_atoi$3041^0,w,c
 10783  003FC0  1013               	iorwf	(_atoi$3041+1)^0,w,c
 10784  003FC2  A4D8               	btfss	status,2,c
 10785  003FC4  EFE6  F01F         	goto	u6401
 10786  003FC8  EFE8  F01F         	goto	u6400
 10787  003FCC                     u6401:
 10788  003FCC  EFA1  F01F         	goto	l5282
 10789  003FD0                     u6400:
 10790  003FD0  500E               	movf	atoi@neg^0,w,c
 10791  003FD2  100F               	iorwf	(atoi@neg+1)^0,w,c
 10792  003FD4  A4D8               	btfss	status,2,c
 10793  003FD6  EFEF  F01F         	goto	u6411
 10794  003FDA  EFF1  F01F         	goto	u6410
 10795  003FDE                     u6411:
 10796  003FDE  EFFF  F01F         	goto	l1583
 10797  003FE2                     u6410:
 10798  003FE2  C015  F00A         	movff	atoi@n,??_atoi
 10799  003FE6  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10800  003FEA  1E0A               	comf	??_atoi^0,f,c
 10801  003FEC  1E0B               	comf	(??_atoi+1)^0,f,c
 10802  003FEE  4A0A               	infsnz	??_atoi^0,f,c
 10803  003FF0  2A0B               	incf	(??_atoi+1)^0,f,c
 10804  003FF2  C00A  F008         	movff	??_atoi,?_atoi
 10805  003FF6  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10806  003FFA  EF03  F020         	goto	l1586
 10807  003FFE                     l1583:
 10808  003FFE  C015  F008         	movff	atoi@n,?_atoi
 10809  004002  C016  F009         	movff	atoi@n+1,?_atoi+1
 10810  004006                     l1586:
 10811  004006  0012               	return		;funcret
 10812  004008                     __end_of_atoi:
 10813                           	callstack 0
 10814                           
 10815 ;; *************** function _isspace *****************
 10816 ;; Defined at:
 10817 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;  c               2    0[COMRAM] int 
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;		None
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  2    0[COMRAM] int 
 10824 ;; Registers used:
 10825 ;;		wreg, status,2, status,0
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;Total ram usage:        7 bytes
 10836 ;; Hardware stack levels used: 1
 10837 ;; This function calls:
 10838 ;;		Nothing
 10839 ;; This function is called by:
 10840 ;;		_atoi
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           
 10844                           	psect	text38
 10845  004ECE                     __ptext38:
 10846                           	callstack 0
 10847  004ECE                     _isspace:
 10848                           	callstack 25
 10849  004ECE  0E01               	movlw	1
 10850  004ED0  6E07               	movwf	_isspace$3070^0,c
 10851  004ED2  0E20               	movlw	32
 10852  004ED4  1801               	xorwf	isspace@c^0,w,c
 10853  004ED6  1002               	iorwf	(isspace@c+1)^0,w,c
 10854  004ED8  B4D8               	btfsc	status,2,c
 10855  004EDA  EF71  F027         	goto	u5521
 10856  004EDE  EF73  F027         	goto	u5520
 10857  004EE2                     u5521:
 10858  004EE2  EF8C  F027         	goto	l4838
 10859  004EE6                     u5520:
 10860  004EE6  0EF7               	movlw	247
 10861  004EE8  6E03               	movwf	??_isspace^0,c
 10862  004EEA  0EFF               	movlw	255
 10863  004EEC  6E04               	movwf	(??_isspace+1)^0,c
 10864  004EEE  C001  F005         	movff	isspace@c,??_isspace+2
 10865  004EF2  C002  F006         	movff	isspace@c+1,??_isspace+3
 10866  004EF6  5003               	movf	??_isspace^0,w,c
 10867  004EF8  2605               	addwf	(??_isspace+2)^0,f,c
 10868  004EFA  5004               	movf	(??_isspace+1)^0,w,c
 10869  004EFC  2206               	addwfc	(??_isspace+3)^0,f,c
 10870  004EFE  5006               	movf	(??_isspace+3)^0,w,c
 10871  004F00  E109               	bnz	u5530
 10872  004F02  0E05               	movlw	5
 10873  004F04  5C05               	subwf	(??_isspace+2)^0,w,c
 10874  004F06  A0D8               	btfss	status,0,c
 10875  004F08  EF88  F027         	goto	u5531
 10876  004F0C  EF8A  F027         	goto	u5530
 10877  004F10                     u5531:
 10878  004F10  EF8C  F027         	goto	l4838
 10879  004F14                     u5530:
 10880  004F14  0E00               	movlw	0
 10881  004F16  6E07               	movwf	_isspace$3070^0,c
 10882  004F18                     l4838:
 10883  004F18  C007  F001         	movff	_isspace$3070,?_isspace
 10884  004F1C  6A02               	clrf	(?_isspace+1)^0,c
 10885  004F1E  0012               	return		;funcret
 10886  004F20                     __end_of_isspace:
 10887                           	callstack 0
 10888                           
 10889 ;; *************** function _isdigit *****************
 10890 ;; Defined at:
 10891 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  c               2    0[COMRAM] int 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  2    0[COMRAM] int 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, status,0
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10909 ;;Total ram usage:        6 bytes
 10910 ;; Hardware stack levels used: 1
 10911 ;; This function calls:
 10912 ;;		Nothing
 10913 ;; This function is called by:
 10914 ;;		_vfpfcnvrt
 10915 ;;		_atoi
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text39
 10920  0052FE                     __ptext39:
 10921                           	callstack 0
 10922  0052FE                     _isdigit:
 10923                           	callstack 26
 10924  0052FE  0ED0               	movlw	208
 10925  005300  6E03               	movwf	??_isdigit^0,c
 10926  005302  0EFF               	movlw	255
 10927  005304  6E04               	movwf	(??_isdigit+1)^0,c
 10928  005306  C001  F005         	movff	isdigit@c,??_isdigit+2
 10929  00530A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10930  00530E  5003               	movf	??_isdigit^0,w,c
 10931  005310  2605               	addwf	(??_isdigit+2)^0,f,c
 10932  005312  5004               	movf	(??_isdigit+1)^0,w,c
 10933  005314  2206               	addwfc	(??_isdigit+3)^0,f,c
 10934  005316  5006               	movf	(??_isdigit+3)^0,w,c
 10935  005318  E10A               	bnz	u5500
 10936  00531A  0E0A               	movlw	10
 10937  00531C  5C05               	subwf	(??_isdigit+2)^0,w,c
 10938  00531E  A0D8               	btfss	status,0,c
 10939  005320  EF94  F029         	goto	u5501
 10940  005324  EF97  F029         	goto	u5500
 10941  005328                     u5501:
 10942  005328  0E01               	movlw	1
 10943  00532A  EF98  F029         	goto	u5510
 10944  00532E                     u5500:
 10945  00532E  0E00               	movlw	0
 10946  005330                     u5510:
 10947  005330  6E01               	movwf	?_isdigit^0,c
 10948  005332  6A02               	clrf	(?_isdigit+1)^0,c
 10949  005334  0012               	return		;funcret
 10950  005336                     __end_of_isdigit:
 10951                           	callstack 0
 10952                           
 10953 ;; *************** function ___wmul *****************
 10954 ;; Defined at:
 10955 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;  multiplier      2    0[COMRAM] unsigned int 
 10958 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10959 ;; Auto vars:     Size  Location     Type
 10960 ;;  product         2    4[COMRAM] unsigned int 
 10961 ;; Return value:  Size  Location     Type
 10962 ;;                  2    0[COMRAM] unsigned int 
 10963 ;; Registers used:
 10964 ;;		wreg, status,2, status,0, prodl, prodh
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10974 ;;Total ram usage:        6 bytes
 10975 ;; Hardware stack levels used: 1
 10976 ;; This function calls:
 10977 ;;		Nothing
 10978 ;; This function is called by:
 10979 ;;		_atoi
 10980 ;;		_DCmotors_setPWM
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           	psect	text40
 10985  0053B8                     __ptext40:
 10986                           	callstack 0
 10987  0053B8                     ___wmul:
 10988                           	callstack 25
 10989  0053B8  5001               	movf	___wmul@multiplier^0,w,c
 10990  0053BA  0203               	mulwf	___wmul@multiplicand^0,c
 10991  0053BC  CFF3 F005          	movff	prodl,___wmul@product
 10992  0053C0  CFF4 F006          	movff	prodh,___wmul@product+1
 10993  0053C4  5001               	movf	___wmul@multiplier^0,w,c
 10994  0053C6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10995  0053C8  50F3               	movf	243,w,c
 10996  0053CA  2606               	addwf	(___wmul@product+1)^0,f,c
 10997  0053CC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10998  0053CE  0203               	mulwf	___wmul@multiplicand^0,c
 10999  0053D0  50F3               	movf	243,w,c
 11000  0053D2  2606               	addwf	(___wmul@product+1)^0,f,c
 11001  0053D4  C005  F001         	movff	___wmul@product,?___wmul
 11002  0053D8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11003  0053DC  0012               	return		;funcret
 11004  0053DE                     __end_of___wmul:
 11005                           	callstack 0
 11006                           
 11007 ;; *************** function _sendStringSerial4 *****************
 11008 ;; Defined at:
 11009 ;;		line 46 in file "serial_comm.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  string          2    1[COMRAM] PTR unsigned char 
 11012 ;;		 -> colourcards_testing@buf1(100), 
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;		None
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  1    wreg      void 
 11017 ;; Registers used:
 11018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11028 ;;Total ram usage:        2 bytes
 11029 ;; Hardware stack levels used: 1
 11030 ;; Hardware stack levels required when called: 1
 11031 ;; This function calls:
 11032 ;;		_sendCharSerial4
 11033 ;; This function is called by:
 11034 ;;		_colourcards_testing
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text41
 11039  005336                     __ptext41:
 11040                           	callstack 0
 11041  005336                     _sendStringSerial4:
 11042                           	callstack 28
 11043  005336                     
 11044                           ;serial_comm.c: 48:     while (*string != 0) {
 11045  005336  EFA6  F029         	goto	l5526
 11046  00533A                     l5522:
 11047                           
 11048                           ;serial_comm.c: 49:         sendCharSerial4(*string++);
 11049  00533A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 11050  00533E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 11051  005342  50DF               	movf	indf2,w,c
 11052  005344  EC3D  F02A         	call	_sendCharSerial4
 11053  005348  4A02               	infsnz	sendStringSerial4@string^0,f,c
 11054  00534A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 11055  00534C                     l5526:
 11056                           
 11057                           ;serial_comm.c: 48:     while (*string != 0) {
 11058  00534C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 11059  005350  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 11060  005354  50DF               	movf	indf2,w,c
 11061  005356  A4D8               	btfss	status,2,c
 11062  005358  EFB0  F029         	goto	u6721
 11063  00535C  EFB2  F029         	goto	u6720
 11064  005360                     u6721:
 11065  005360  EF9D  F029         	goto	l5522
 11066  005364                     u6720:
 11067  005364  0012               	return		;funcret
 11068  005366                     __end_of_sendStringSerial4:
 11069                           	callstack 0
 11070                           
 11071 ;; *************** function _sendCharSerial4 *****************
 11072 ;; Defined at:
 11073 ;;		line 37 in file "serial_comm.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;  charToSend      1    wreg     unsigned char 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;  charToSend      1    0[COMRAM] unsigned char 
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1    wreg      void 
 11080 ;; Registers used:
 11081 ;;		wreg
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11091 ;;Total ram usage:        1 bytes
 11092 ;; Hardware stack levels used: 1
 11093 ;; This function calls:
 11094 ;;		Nothing
 11095 ;; This function is called by:
 11096 ;;		_sendStringSerial4
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text42
 11101  00547A                     __ptext42:
 11102                           	callstack 0
 11103  00547A                     _sendCharSerial4:
 11104                           	callstack 28
 11105                           
 11106                           ;incstack = 0
 11107                           ;sendCharSerial4@charToSend stored from wreg
 11108  00547A  6E01               	movwf	sendCharSerial4@charToSend^0,c
 11109  00547C                     l414:
 11110  00547C  010E               	movlb	14	; () banked
 11111  00547E  A537               	btfss	55,2,b	;volatile
 11112  005480  EF44  F02A         	goto	u6691
 11113  005484  EF46  F02A         	goto	u6690
 11114  005488                     u6691:
 11115  005488  EF3E  F02A         	goto	l414
 11116  00548C                     u6690:
 11117  00548C                     
 11118                           ; BSR set to: 14
 11119                           ;serial_comm.c: 39:     TX4REG = charToSend;
 11120  00548C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 11121  005490                     
 11122                           ; BSR set to: 14
 11123  005490  0012               	return		;funcret
 11124  005492                     __end_of_sendCharSerial4:
 11125                           	callstack 0
 11126                           
 11127 ;; *************** function _colourclick_readRGBC *****************
 11128 ;; Defined at:
 11129 ;;		line 131 in file "colour_click.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  tmpval          2   11[COMRAM] PTR struct .
 11132 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), main@current(8), 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;		None
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      void 
 11137 ;; Registers used:
 11138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11148 ;;Total ram usage:        2 bytes
 11149 ;; Hardware stack levels used: 1
 11150 ;; Hardware stack levels required when called: 3
 11151 ;; This function calls:
 11152 ;;		_colourclick_readB
 11153 ;;		_colourclick_readC
 11154 ;;		_colourclick_readG
 11155 ;;		_colourclick_readR
 11156 ;; This function is called by:
 11157 ;;		_colourcards_testing
 11158 ;;		_colourcards_readRGBC
 11159 ;;		_colourclick_calibration
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text43
 11164  004E1E                     __ptext43:
 11165                           	callstack 0
 11166  004E1E                     _colourclick_readRGBC:
 11167                           	callstack 26
 11168  004E1E                     
 11169                           ;colour_click.c: 131: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 132: {
      +                          ;colour_click.c: 133:     tmpval->R = colourclick_readR();
 11170  004E1E  ECB8  F027         	call	_colourclick_readR	;wreg free
 11171  004E22  C00C  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
 11172  004E26  C00D  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
 11173  004E2A  C005  FFDE         	movff	?_colourclick_readR,postinc2
 11174  004E2E  C006  FFDD         	movff	?_colourclick_readR+1,postdec2
 11175                           
 11176                           ;colour_click.c: 134:     tmpval->G = colourclick_readG();
 11177  004E32  ECE0  F027         	call	_colourclick_readG	;wreg free
 11178  004E36  EE20 F002          	lfsr	2,2
 11179  004E3A  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 11180  004E3C  26D9               	addwf	fsr2l,f,c
 11181  004E3E  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 11182  004E40  22DA               	addwfc	fsr2h,f,c
 11183  004E42  C005  FFDE         	movff	?_colourclick_readG,postinc2
 11184  004E46  C006  FFDD         	movff	?_colourclick_readG+1,postdec2
 11185                           
 11186                           ;colour_click.c: 135:     tmpval->B = colourclick_readB();
 11187  004E4A  EC30  F028         	call	_colourclick_readB	;wreg free
 11188  004E4E  EE20 F004          	lfsr	2,4
 11189  004E52  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 11190  004E54  26D9               	addwf	fsr2l,f,c
 11191  004E56  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 11192  004E58  22DA               	addwfc	fsr2h,f,c
 11193  004E5A  C005  FFDE         	movff	?_colourclick_readB,postinc2
 11194  004E5E  C006  FFDD         	movff	?_colourclick_readB+1,postdec2
 11195                           
 11196                           ;colour_click.c: 136:     tmpval->C = colourclick_readC();
 11197  004E62  EC08  F028         	call	_colourclick_readC	;wreg free
 11198  004E66  EE20 F006          	lfsr	2,6
 11199  004E6A  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 11200  004E6C  26D9               	addwf	fsr2l,f,c
 11201  004E6E  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 11202  004E70  22DA               	addwfc	fsr2h,f,c
 11203  004E72  C005  FFDE         	movff	?_colourclick_readC,postinc2
 11204  004E76  C006  FFDD         	movff	?_colourclick_readC+1,postdec2
 11205  004E7A  0012               	return		;funcret
 11206  004E7C                     __end_of_colourclick_readRGBC:
 11207                           	callstack 0
 11208                           
 11209 ;; *************** function _colourclick_readR *****************
 11210 ;; Defined at:
 11211 ;;		line 56 in file "colour_click.c"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;		None
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;  tmp             2    9[COMRAM] unsigned int 
 11216 ;; Return value:  Size  Location     Type
 11217 ;;                  2    4[COMRAM] unsigned int 
 11218 ;; Registers used:
 11219 ;;		wreg, status,2, status,0, cstack
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11227 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11228 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11229 ;;Total ram usage:        7 bytes
 11230 ;; Hardware stack levels used: 1
 11231 ;; Hardware stack levels required when called: 2
 11232 ;; This function calls:
 11233 ;;		_I2C_2_Master_Read
 11234 ;;		_I2C_2_Master_RepStart
 11235 ;;		_I2C_2_Master_Start
 11236 ;;		_I2C_2_Master_Stop
 11237 ;;		_I2C_2_Master_Write
 11238 ;; This function is called by:
 11239 ;;		_colourclick_readRGBC
 11240 ;;		_colourclick_readRGBC2
 11241 ;; This function uses a non-reentrant model
 11242 ;;
 11243                           
 11244                           	psect	text44
 11245  004F70                     __ptext44:
 11246                           	callstack 0
 11247  004F70                     _colourclick_readR:
 11248                           	callstack 26
 11249  004F70                     
 11250                           ;colour_click.c: 58:  unsigned int tmp;;colour_click.c: 59:  I2C_2_Master_Start();
 11251  004F70  EC78  F02A         	call	_I2C_2_Master_Start	;wreg free
 11252                           
 11253                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
 11254  004F74  0E52               	movlw	82
 11255  004F76  EC67  F02A         	call	_I2C_2_Master_Write
 11256                           
 11257                           ;colour_click.c: 61:  I2C_2_Master_Write(0xA0 | 0x16);
 11258  004F7A  0EB6               	movlw	182
 11259  004F7C  EC67  F02A         	call	_I2C_2_Master_Write
 11260                           
 11261                           ;colour_click.c: 62:  I2C_2_Master_RepStart();
 11262  004F80  EC7D  F02A         	call	_I2C_2_Master_RepStart	;wreg free
 11263                           
 11264                           ;colour_click.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
 11265  004F84  0E53               	movlw	83
 11266  004F86  EC67  F02A         	call	_I2C_2_Master_Write
 11267                           
 11268                           ;colour_click.c: 64:  tmp=I2C_2_Master_Read(1);
 11269  004F8A  0E01               	movlw	1
 11270  004F8C  ECEA  F028         	call	_I2C_2_Master_Read
 11271  004F90  6E07               	movwf	??_colourclick_readR^0,c
 11272  004F92  5007               	movf	??_colourclick_readR^0,w,c
 11273  004F94  6E0A               	movwf	colourclick_readR@tmp^0,c
 11274  004F96  6A0B               	clrf	(colourclick_readR@tmp+1)^0,c
 11275                           
 11276                           ;colour_click.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11277  004F98  0E00               	movlw	0
 11278  004F9A  ECEA  F028         	call	_I2C_2_Master_Read
 11279  004F9E  6E07               	movwf	??_colourclick_readR^0,c
 11280  004FA0  5007               	movf	??_colourclick_readR^0,w,c
 11281  004FA2  6E09               	movwf	(??_colourclick_readR+2)^0,c
 11282  004FA4  6A08               	clrf	(??_colourclick_readR+1)^0,c
 11283  004FA6  500A               	movf	colourclick_readR@tmp^0,w,c
 11284  004FA8  1008               	iorwf	(??_colourclick_readR+1)^0,w,c
 11285  004FAA  6E0A               	movwf	colourclick_readR@tmp^0,c
 11286  004FAC  500B               	movf	(colourclick_readR@tmp+1)^0,w,c
 11287  004FAE  1009               	iorwf	(??_colourclick_readR+2)^0,w,c
 11288  004FB0  6E0B               	movwf	(colourclick_readR@tmp+1)^0,c
 11289                           
 11290                           ;colour_click.c: 66:  I2C_2_Master_Stop();
 11291  004FB2  EC73  F02A         	call	_I2C_2_Master_Stop	;wreg free
 11292  004FB6                     
 11293                           ;colour_click.c: 67:  return tmp;
 11294  004FB6  C00A  F005         	movff	colourclick_readR@tmp,?_colourclick_readR
 11295  004FBA  C00B  F006         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
 11296  004FBE  0012               	return		;funcret
 11297  004FC0                     __end_of_colourclick_readR:
 11298                           	callstack 0
 11299                           
 11300 ;; *************** function _colourclick_readG *****************
 11301 ;; Defined at:
 11302 ;;		line 75 in file "colour_click.c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;		None
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;  tmp             2    9[COMRAM] unsigned int 
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  2    4[COMRAM] unsigned int 
 11309 ;; Registers used:
 11310 ;;		wreg, status,2, status,0, cstack
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;Total ram usage:        7 bytes
 11321 ;; Hardware stack levels used: 1
 11322 ;; Hardware stack levels required when called: 2
 11323 ;; This function calls:
 11324 ;;		_I2C_2_Master_Read
 11325 ;;		_I2C_2_Master_RepStart
 11326 ;;		_I2C_2_Master_Start
 11327 ;;		_I2C_2_Master_Stop
 11328 ;;		_I2C_2_Master_Write
 11329 ;; This function is called by:
 11330 ;;		_colourclick_readRGBC
 11331 ;;		_colourclick_readRGBC2
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335                           	psect	text45
 11336  004FC0                     __ptext45:
 11337                           	callstack 0
 11338  004FC0                     _colourclick_readG:
 11339                           	callstack 26
 11340  004FC0                     
 11341                           ;colour_click.c: 77:  unsigned int tmp;;colour_click.c: 78:  I2C_2_Master_Start();
 11342  004FC0  EC78  F02A         	call	_I2C_2_Master_Start	;wreg free
 11343                           
 11344                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
 11345  004FC4  0E52               	movlw	82
 11346  004FC6  EC67  F02A         	call	_I2C_2_Master_Write
 11347                           
 11348                           ;colour_click.c: 80:  I2C_2_Master_Write(0xA0 | 0x18);
 11349  004FCA  0EB8               	movlw	184
 11350  004FCC  EC67  F02A         	call	_I2C_2_Master_Write
 11351                           
 11352                           ;colour_click.c: 81:  I2C_2_Master_RepStart();
 11353  004FD0  EC7D  F02A         	call	_I2C_2_Master_RepStart	;wreg free
 11354                           
 11355                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
 11356  004FD4  0E53               	movlw	83
 11357  004FD6  EC67  F02A         	call	_I2C_2_Master_Write
 11358                           
 11359                           ;colour_click.c: 83:  tmp=I2C_2_Master_Read(1);
 11360  004FDA  0E01               	movlw	1
 11361  004FDC  ECEA  F028         	call	_I2C_2_Master_Read
 11362  004FE0  6E07               	movwf	??_colourclick_readG^0,c
 11363  004FE2  5007               	movf	??_colourclick_readG^0,w,c
 11364  004FE4  6E0A               	movwf	colourclick_readG@tmp^0,c
 11365  004FE6  6A0B               	clrf	(colourclick_readG@tmp+1)^0,c
 11366                           
 11367                           ;colour_click.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11368  004FE8  0E00               	movlw	0
 11369  004FEA  ECEA  F028         	call	_I2C_2_Master_Read
 11370  004FEE  6E07               	movwf	??_colourclick_readG^0,c
 11371  004FF0  5007               	movf	??_colourclick_readG^0,w,c
 11372  004FF2  6E09               	movwf	(??_colourclick_readG+2)^0,c
 11373  004FF4  6A08               	clrf	(??_colourclick_readG+1)^0,c
 11374  004FF6  500A               	movf	colourclick_readG@tmp^0,w,c
 11375  004FF8  1008               	iorwf	(??_colourclick_readG+1)^0,w,c
 11376  004FFA  6E0A               	movwf	colourclick_readG@tmp^0,c
 11377  004FFC  500B               	movf	(colourclick_readG@tmp+1)^0,w,c
 11378  004FFE  1009               	iorwf	(??_colourclick_readG+2)^0,w,c
 11379  005000  6E0B               	movwf	(colourclick_readG@tmp+1)^0,c
 11380                           
 11381                           ;colour_click.c: 85:  I2C_2_Master_Stop();
 11382  005002  EC73  F02A         	call	_I2C_2_Master_Stop	;wreg free
 11383  005006                     
 11384                           ;colour_click.c: 86:  return tmp;
 11385  005006  C00A  F005         	movff	colourclick_readG@tmp,?_colourclick_readG
 11386  00500A  C00B  F006         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
 11387  00500E  0012               	return		;funcret
 11388  005010                     __end_of_colourclick_readG:
 11389                           	callstack 0
 11390                           
 11391 ;; *************** function _colourclick_readC *****************
 11392 ;; Defined at:
 11393 ;;		line 113 in file "colour_click.c"
 11394 ;; Parameters:    Size  Location     Type
 11395 ;;		None
 11396 ;; Auto vars:     Size  Location     Type
 11397 ;;  tmp             2    9[COMRAM] unsigned int 
 11398 ;; Return value:  Size  Location     Type
 11399 ;;                  2    4[COMRAM] unsigned int 
 11400 ;; Registers used:
 11401 ;;		wreg, status,2, status,0, cstack
 11402 ;; Tracked objects:
 11403 ;;		On entry : 0/0
 11404 ;;		On exit  : 0/0
 11405 ;;		Unchanged: 0/0
 11406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11409 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11410 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11411 ;;Total ram usage:        7 bytes
 11412 ;; Hardware stack levels used: 1
 11413 ;; Hardware stack levels required when called: 2
 11414 ;; This function calls:
 11415 ;;		_I2C_2_Master_Read
 11416 ;;		_I2C_2_Master_RepStart
 11417 ;;		_I2C_2_Master_Start
 11418 ;;		_I2C_2_Master_Stop
 11419 ;;		_I2C_2_Master_Write
 11420 ;; This function is called by:
 11421 ;;		_colourclick_readRGBC
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text46
 11426  005010                     __ptext46:
 11427                           	callstack 0
 11428  005010                     _colourclick_readC:
 11429                           	callstack 26
 11430  005010                     
 11431                           ;colour_click.c: 115:  unsigned int tmp;;colour_click.c: 116:  I2C_2_Master_Start();
 11432  005010  EC78  F02A         	call	_I2C_2_Master_Start	;wreg free
 11433                           
 11434                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x00);
 11435  005014  0E52               	movlw	82
 11436  005016  EC67  F02A         	call	_I2C_2_Master_Write
 11437                           
 11438                           ;colour_click.c: 118:  I2C_2_Master_Write(0xA0 | 0x14);
 11439  00501A  0EB4               	movlw	180
 11440  00501C  EC67  F02A         	call	_I2C_2_Master_Write
 11441                           
 11442                           ;colour_click.c: 119:  I2C_2_Master_RepStart();
 11443  005020  EC7D  F02A         	call	_I2C_2_Master_RepStart	;wreg free
 11444                           
 11445                           ;colour_click.c: 120:  I2C_2_Master_Write(0x52 | 0x01);
 11446  005024  0E53               	movlw	83
 11447  005026  EC67  F02A         	call	_I2C_2_Master_Write
 11448                           
 11449                           ;colour_click.c: 121:  tmp=I2C_2_Master_Read(1);
 11450  00502A  0E01               	movlw	1
 11451  00502C  ECEA  F028         	call	_I2C_2_Master_Read
 11452  005030  6E07               	movwf	??_colourclick_readC^0,c
 11453  005032  5007               	movf	??_colourclick_readC^0,w,c
 11454  005034  6E0A               	movwf	colourclick_readC@tmp^0,c
 11455  005036  6A0B               	clrf	(colourclick_readC@tmp+1)^0,c
 11456                           
 11457                           ;colour_click.c: 122:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11458  005038  0E00               	movlw	0
 11459  00503A  ECEA  F028         	call	_I2C_2_Master_Read
 11460  00503E  6E07               	movwf	??_colourclick_readC^0,c
 11461  005040  5007               	movf	??_colourclick_readC^0,w,c
 11462  005042  6E09               	movwf	(??_colourclick_readC+2)^0,c
 11463  005044  6A08               	clrf	(??_colourclick_readC+1)^0,c
 11464  005046  500A               	movf	colourclick_readC@tmp^0,w,c
 11465  005048  1008               	iorwf	(??_colourclick_readC+1)^0,w,c
 11466  00504A  6E0A               	movwf	colourclick_readC@tmp^0,c
 11467  00504C  500B               	movf	(colourclick_readC@tmp+1)^0,w,c
 11468  00504E  1009               	iorwf	(??_colourclick_readC+2)^0,w,c
 11469  005050  6E0B               	movwf	(colourclick_readC@tmp+1)^0,c
 11470                           
 11471                           ;colour_click.c: 123:  I2C_2_Master_Stop();
 11472  005052  EC73  F02A         	call	_I2C_2_Master_Stop	;wreg free
 11473  005056                     
 11474                           ;colour_click.c: 124:  return tmp;
 11475  005056  C00A  F005         	movff	colourclick_readC@tmp,?_colourclick_readC
 11476  00505A  C00B  F006         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
 11477  00505E  0012               	return		;funcret
 11478  005060                     __end_of_colourclick_readC:
 11479                           	callstack 0
 11480                           
 11481 ;; *************** function _colourclick_readB *****************
 11482 ;; Defined at:
 11483 ;;		line 94 in file "colour_click.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;		None
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;  tmp             2    9[COMRAM] unsigned int 
 11488 ;; Return value:  Size  Location     Type
 11489 ;;                  2    4[COMRAM] unsigned int 
 11490 ;; Registers used:
 11491 ;;		wreg, status,2, status,0, cstack
 11492 ;; Tracked objects:
 11493 ;;		On entry : 0/0
 11494 ;;		On exit  : 0/0
 11495 ;;		Unchanged: 0/0
 11496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11499 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11500 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11501 ;;Total ram usage:        7 bytes
 11502 ;; Hardware stack levels used: 1
 11503 ;; Hardware stack levels required when called: 2
 11504 ;; This function calls:
 11505 ;;		_I2C_2_Master_Read
 11506 ;;		_I2C_2_Master_RepStart
 11507 ;;		_I2C_2_Master_Start
 11508 ;;		_I2C_2_Master_Stop
 11509 ;;		_I2C_2_Master_Write
 11510 ;; This function is called by:
 11511 ;;		_colourclick_readRGBC
 11512 ;;		_colourclick_readRGBC2
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text47
 11517  005060                     __ptext47:
 11518                           	callstack 0
 11519  005060                     _colourclick_readB:
 11520                           	callstack 26
 11521  005060                     
 11522                           ;colour_click.c: 96:  unsigned int tmp;;colour_click.c: 97:  I2C_2_Master_Start();
 11523  005060  EC78  F02A         	call	_I2C_2_Master_Start	;wreg free
 11524                           
 11525                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
 11526  005064  0E52               	movlw	82
 11527  005066  EC67  F02A         	call	_I2C_2_Master_Write
 11528                           
 11529                           ;colour_click.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
 11530  00506A  0EBA               	movlw	186
 11531  00506C  EC67  F02A         	call	_I2C_2_Master_Write
 11532                           
 11533                           ;colour_click.c: 100:  I2C_2_Master_RepStart();
 11534  005070  EC7D  F02A         	call	_I2C_2_Master_RepStart	;wreg free
 11535                           
 11536                           ;colour_click.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
 11537  005074  0E53               	movlw	83
 11538  005076  EC67  F02A         	call	_I2C_2_Master_Write
 11539                           
 11540                           ;colour_click.c: 102:  tmp=I2C_2_Master_Read(1);
 11541  00507A  0E01               	movlw	1
 11542  00507C  ECEA  F028         	call	_I2C_2_Master_Read
 11543  005080  6E07               	movwf	??_colourclick_readB^0,c
 11544  005082  5007               	movf	??_colourclick_readB^0,w,c
 11545  005084  6E0A               	movwf	colourclick_readB@tmp^0,c
 11546  005086  6A0B               	clrf	(colourclick_readB@tmp+1)^0,c
 11547                           
 11548                           ;colour_click.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11549  005088  0E00               	movlw	0
 11550  00508A  ECEA  F028         	call	_I2C_2_Master_Read
 11551  00508E  6E07               	movwf	??_colourclick_readB^0,c
 11552  005090  5007               	movf	??_colourclick_readB^0,w,c
 11553  005092  6E09               	movwf	(??_colourclick_readB+2)^0,c
 11554  005094  6A08               	clrf	(??_colourclick_readB+1)^0,c
 11555  005096  500A               	movf	colourclick_readB@tmp^0,w,c
 11556  005098  1008               	iorwf	(??_colourclick_readB+1)^0,w,c
 11557  00509A  6E0A               	movwf	colourclick_readB@tmp^0,c
 11558  00509C  500B               	movf	(colourclick_readB@tmp+1)^0,w,c
 11559  00509E  1009               	iorwf	(??_colourclick_readB+2)^0,w,c
 11560  0050A0  6E0B               	movwf	(colourclick_readB@tmp+1)^0,c
 11561                           
 11562                           ;colour_click.c: 104:  I2C_2_Master_Stop();
 11563  0050A2  EC73  F02A         	call	_I2C_2_Master_Stop	;wreg free
 11564  0050A6                     
 11565                           ;colour_click.c: 105:  return tmp;
 11566  0050A6  C00A  F005         	movff	colourclick_readB@tmp,?_colourclick_readB
 11567  0050AA  C00B  F006         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
 11568  0050AE  0012               	return		;funcret
 11569  0050B0                     __end_of_colourclick_readB:
 11570                           	callstack 0
 11571                           
 11572 ;; *************** function _I2C_2_Master_Write *****************
 11573 ;; Defined at:
 11574 ;;		line 69 in file "I2C.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;  data_byte       1    wreg     unsigned char 
 11577 ;; Auto vars:     Size  Location     Type
 11578 ;;  data_byte       1    1[COMRAM] unsigned char 
 11579 ;; Return value:  Size  Location     Type
 11580 ;;                  1    wreg      void 
 11581 ;; Registers used:
 11582 ;;		wreg, status,2, status,0, cstack
 11583 ;; Tracked objects:
 11584 ;;		On entry : 0/0
 11585 ;;		On exit  : 0/0
 11586 ;;		Unchanged: 0/0
 11587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11592 ;;Total ram usage:        1 bytes
 11593 ;; Hardware stack levels used: 1
 11594 ;; Hardware stack levels required when called: 1
 11595 ;; This function calls:
 11596 ;;		_I2C_2_Master_Idle
 11597 ;; This function is called by:
 11598 ;;		_colourclick_writetoaddr
 11599 ;;		_colourclick_readR
 11600 ;;		_colourclick_readG
 11601 ;;		_colourclick_readB
 11602 ;;		_colourclick_readC
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text48
 11607  0054CE                     __ptext48:
 11608                           	callstack 0
 11609  0054CE                     _I2C_2_Master_Write:
 11610                           	callstack 27
 11611                           
 11612                           ;incstack = 0
 11613                           ;I2C_2_Master_Write@data_byte stored from wreg
 11614  0054CE  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 11615  0054D0                     
 11616                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 11617  0054D0  ECC8  F029         	call	_I2C_2_Master_Idle	;wreg free
 11618  0054D4                     
 11619                           ;I2C.c: 72:   SSP2BUF = data_byte;
 11620  0054D4  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 11621  0054D8  0012               	return		;funcret
 11622  0054DA                     __end_of_I2C_2_Master_Write:
 11623                           	callstack 0
 11624                           
 11625 ;; *************** function _I2C_2_Master_Stop *****************
 11626 ;; Defined at:
 11627 ;;		line 59 in file "I2C.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;		None
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;		None
 11632 ;; Return value:  Size  Location     Type
 11633 ;;                  1    wreg      void 
 11634 ;; Registers used:
 11635 ;;		wreg, status,2, status,0, cstack
 11636 ;; Tracked objects:
 11637 ;;		On entry : 0/0
 11638 ;;		On exit  : 0/0
 11639 ;;		Unchanged: 0/0
 11640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11645 ;;Total ram usage:        0 bytes
 11646 ;; Hardware stack levels used: 1
 11647 ;; Hardware stack levels required when called: 1
 11648 ;; This function calls:
 11649 ;;		_I2C_2_Master_Idle
 11650 ;; This function is called by:
 11651 ;;		_colourclick_writetoaddr
 11652 ;;		_colourclick_readR
 11653 ;;		_colourclick_readG
 11654 ;;		_colourclick_readB
 11655 ;;		_colourclick_readC
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           	psect	text49
 11660  0054E6                     __ptext49:
 11661                           	callstack 0
 11662  0054E6                     _I2C_2_Master_Stop:
 11663                           	callstack 27
 11664  0054E6                     
 11665                           ;I2C.c: 61:   I2C_2_Master_Idle();
 11666  0054E6  ECC8  F029         	call	_I2C_2_Master_Idle	;wreg free
 11667  0054EA                     
 11668                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 11669  0054EA  010E               	movlb	14	; () banked
 11670  0054EC  85DA               	bsf	218,2,b	;volatile
 11671  0054EE                     
 11672                           ; BSR set to: 14
 11673  0054EE  0012               	return		;funcret
 11674  0054F0                     __end_of_I2C_2_Master_Stop:
 11675                           	callstack 0
 11676                           
 11677 ;; *************** function _I2C_2_Master_Start *****************
 11678 ;; Defined at:
 11679 ;;		line 39 in file "I2C.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;		None
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      void 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2, status,0, cstack
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11697 ;;Total ram usage:        0 bytes
 11698 ;; Hardware stack levels used: 1
 11699 ;; Hardware stack levels required when called: 1
 11700 ;; This function calls:
 11701 ;;		_I2C_2_Master_Idle
 11702 ;; This function is called by:
 11703 ;;		_colourclick_writetoaddr
 11704 ;;		_colourclick_readR
 11705 ;;		_colourclick_readG
 11706 ;;		_colourclick_readB
 11707 ;;		_colourclick_readC
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text50
 11712  0054F0                     __ptext50:
 11713                           	callstack 0
 11714  0054F0                     _I2C_2_Master_Start:
 11715                           	callstack 27
 11716  0054F0                     
 11717                           ;I2C.c: 41:   I2C_2_Master_Idle();
 11718  0054F0  ECC8  F029         	call	_I2C_2_Master_Idle	;wreg free
 11719  0054F4                     
 11720                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 11721  0054F4  010E               	movlb	14	; () banked
 11722  0054F6  81DA               	bsf	218,0,b	;volatile
 11723  0054F8                     
 11724                           ; BSR set to: 14
 11725  0054F8  0012               	return		;funcret
 11726  0054FA                     __end_of_I2C_2_Master_Start:
 11727                           	callstack 0
 11728                           
 11729 ;; *************** function _I2C_2_Master_RepStart *****************
 11730 ;; Defined at:
 11731 ;;		line 49 in file "I2C.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;		None
 11734 ;; Auto vars:     Size  Location     Type
 11735 ;;		None
 11736 ;; Return value:  Size  Location     Type
 11737 ;;                  1    wreg      void 
 11738 ;; Registers used:
 11739 ;;		wreg, status,2, status,0, cstack
 11740 ;; Tracked objects:
 11741 ;;		On entry : 0/0
 11742 ;;		On exit  : 0/0
 11743 ;;		Unchanged: 0/0
 11744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11749 ;;Total ram usage:        0 bytes
 11750 ;; Hardware stack levels used: 1
 11751 ;; Hardware stack levels required when called: 1
 11752 ;; This function calls:
 11753 ;;		_I2C_2_Master_Idle
 11754 ;; This function is called by:
 11755 ;;		_colourclick_readR
 11756 ;;		_colourclick_readG
 11757 ;;		_colourclick_readB
 11758 ;;		_colourclick_readC
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           	psect	text51
 11763  0054FA                     __ptext51:
 11764                           	callstack 0
 11765  0054FA                     _I2C_2_Master_RepStart:
 11766                           	callstack 26
 11767  0054FA                     
 11768                           ;I2C.c: 51:   I2C_2_Master_Idle();
 11769  0054FA  ECC8  F029         	call	_I2C_2_Master_Idle	;wreg free
 11770  0054FE                     
 11771                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
 11772  0054FE  010E               	movlb	14	; () banked
 11773  005500  83DA               	bsf	218,1,b	;volatile
 11774  005502                     
 11775                           ; BSR set to: 14
 11776  005502  0012               	return		;funcret
 11777  005504                     __end_of_I2C_2_Master_RepStart:
 11778                           	callstack 0
 11779                           
 11780 ;; *************** function _I2C_2_Master_Read *****************
 11781 ;; Defined at:
 11782 ;;		line 79 in file "I2C.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;  ack             1    wreg     unsigned char 
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;  ack             1    2[COMRAM] unsigned char 
 11787 ;;  tmp             1    3[COMRAM] unsigned char 
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  1    wreg      unsigned char 
 11790 ;; Registers used:
 11791 ;;		wreg, status,2, status,0, cstack
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11800 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11801 ;;Total ram usage:        3 bytes
 11802 ;; Hardware stack levels used: 1
 11803 ;; Hardware stack levels required when called: 1
 11804 ;; This function calls:
 11805 ;;		_I2C_2_Master_Idle
 11806 ;; This function is called by:
 11807 ;;		_colourclick_readR
 11808 ;;		_colourclick_readG
 11809 ;;		_colourclick_readB
 11810 ;;		_colourclick_readC
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814                           	psect	text52
 11815  0051D4                     __ptext52:
 11816                           	callstack 0
 11817  0051D4                     _I2C_2_Master_Read:
 11818                           	callstack 26
 11819                           
 11820                           ; BSR set to: 14
 11821                           ;incstack = 0
 11822                           ;I2C_2_Master_Read@ack stored from wreg
 11823  0051D4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 11824  0051D6                     
 11825                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
 11826  0051D6  ECC8  F029         	call	_I2C_2_Master_Idle	;wreg free
 11827  0051DA                     
 11828                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
 11829  0051DA  010E               	movlb	14	; () banked
 11830  0051DC  87DA               	bsf	218,3,b	;volatile
 11831                           
 11832                           ;I2C.c: 84:   I2C_2_Master_Idle();
 11833  0051DE  ECC8  F029         	call	_I2C_2_Master_Idle	;wreg free
 11834  0051E2                     
 11835                           ;I2C.c: 85:   tmp = SSP2BUF;
 11836  0051E2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 11837                           
 11838                           ;I2C.c: 86:   I2C_2_Master_Idle();
 11839  0051E6  ECC8  F029         	call	_I2C_2_Master_Idle	;wreg free
 11840  0051EA                     
 11841                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
 11842  0051EA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 11843  0051EC  B4D8               	btfsc	status,2,c
 11844  0051EE  EFFB  F028         	goto	u6471
 11845  0051F2  EFFF  F028         	goto	u6470
 11846  0051F6                     u6471:
 11847  0051F6  6A02               	clrf	??_I2C_2_Master_Read^0,c
 11848  0051F8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 11849  0051FA  EF00  F029         	goto	u6488
 11850  0051FE                     u6470:
 11851  0051FE  6A02               	clrf	??_I2C_2_Master_Read^0,c
 11852  005200                     u6488:
 11853  005200  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 11854  005202  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 11855  005204  010E               	movlb	14	; () banked
 11856  005206  51DA               	movf	218,w,b	;volatile
 11857  005208  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 11858  00520A  0BDF               	andlw	-33
 11859  00520C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 11860  00520E  6FDA               	movwf	218,b	;volatile
 11861  005210                     
 11862                           ; BSR set to: 14
 11863                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
 11864  005210  89DA               	bsf	218,4,b	;volatile
 11865  005212                     
 11866                           ; BSR set to: 14
 11867                           ;I2C.c: 89:   return tmp;
 11868  005212  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 11869  005214                     
 11870                           ; BSR set to: 14
 11871  005214  0012               	return		;funcret
 11872  005216                     __end_of_I2C_2_Master_Read:
 11873                           	callstack 0
 11874                           
 11875 ;; *************** function _I2C_2_Master_Idle *****************
 11876 ;; Defined at:
 11877 ;;		line 30 in file "I2C.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;		None
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;		None
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      void 
 11884 ;; Registers used:
 11885 ;;		wreg, status,2, status,0
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11895 ;;Total ram usage:        1 bytes
 11896 ;; Hardware stack levels used: 1
 11897 ;; This function calls:
 11898 ;;		Nothing
 11899 ;; This function is called by:
 11900 ;;		_I2C_2_Master_Start
 11901 ;;		_I2C_2_Master_RepStart
 11902 ;;		_I2C_2_Master_Stop
 11903 ;;		_I2C_2_Master_Write
 11904 ;;		_I2C_2_Master_Read
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text53
 11909  005390                     __ptext53:
 11910                           	callstack 0
 11911  005390                     _I2C_2_Master_Idle:
 11912                           	callstack 27
 11913  005390                     l348:
 11914  005390  010E               	movlb	14	; () banked
 11915  005392  B5D8               	btfsc	216,2,b	;volatile
 11916  005394  EFCE  F029         	goto	u5541
 11917  005398  EFD0  F029         	goto	u5540
 11918  00539C                     u5541:
 11919  00539C  EFC8  F029         	goto	l348
 11920  0053A0                     u5540:
 11921  0053A0                     
 11922                           ; BSR set to: 14
 11923  0053A0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11924  0053A4  0E1F               	movlw	31
 11925  0053A6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11926  0053A8  A4D8               	btfss	status,2,c
 11927  0053AA  EFD9  F029         	goto	u5551
 11928  0053AE  EFDB  F029         	goto	u5550
 11929  0053B2                     u5551:
 11930  0053B2  EFC8  F029         	goto	l348
 11931  0053B6                     u5550:
 11932  0053B6                     
 11933                           ; BSR set to: 14
 11934  0053B6  0012               	return		;funcret
 11935  0053B8                     __end_of_I2C_2_Master_Idle:
 11936                           	callstack 0
 11937                           
 11938 ;; *************** function ___xxtofl *****************
 11939 ;; Defined at:
 11940 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  sign            1    wreg     unsigned char 
 11943 ;;  val             4    0[COMRAM] long 
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;  sign            1    8[COMRAM] unsigned char 
 11946 ;;  arg             4   10[COMRAM] unsigned long 
 11947 ;;  exp             1    9[COMRAM] unsigned char 
 11948 ;; Return value:  Size  Location     Type
 11949 ;;                  4    0[COMRAM] unsigned char 
 11950 ;; Registers used:
 11951 ;;		wreg, status,2, status,0
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11958 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11959 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11960 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11961 ;;Total ram usage:       14 bytes
 11962 ;; Hardware stack levels used: 1
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_colourcards_testing
 11967 ;;		_colourcards_readRGBC
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text54
 11972  003CB0                     __ptext54:
 11973                           	callstack 0
 11974  003CB0                     ___xxtofl:
 11975                           	callstack 29
 11976                           
 11977                           ; BSR set to: 14
 11978                           ;incstack = 0
 11979                           ;___xxtofl@sign stored from wreg
 11980  003CB0  6E09               	movwf	___xxtofl@sign^0,c
 11981  003CB2  5009               	movf	___xxtofl@sign^0,w,c
 11982  003CB4  B4D8               	btfsc	status,2,c
 11983  003CB6  EF5F  F01E         	goto	u6821
 11984  003CBA  EF61  F01E         	goto	u6820
 11985  003CBE                     u6821:
 11986  003CBE  EF83  F01E         	goto	l1289
 11987  003CC2                     u6820:
 11988  003CC2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11989  003CC4  EF68  F01E         	goto	u6830
 11990  003CC8  EF66  F01E         	goto	u6831
 11991  003CCC                     u6831:
 11992  003CCC  EF83  F01E         	goto	l1289
 11993  003CD0                     u6830:
 11994  003CD0  C001  F005         	movff	___xxtofl@val,??___xxtofl
 11995  003CD4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 11996  003CD8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 11997  003CDC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 11998  003CE0  1E05               	comf	??___xxtofl^0,f,c
 11999  003CE2  1E06               	comf	(??___xxtofl+1)^0,f,c
 12000  003CE4  1E07               	comf	(??___xxtofl+2)^0,f,c
 12001  003CE6  1E08               	comf	(??___xxtofl+3)^0,f,c
 12002  003CE8  2A05               	incf	??___xxtofl^0,f,c
 12003  003CEA  0E00               	movlw	0
 12004  003CEC  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12005  003CEE  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12006  003CF0  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12007  003CF2  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12008  003CF6  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12009  003CFA  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12010  003CFE  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12011  003D02  EF8B  F01E         	goto	l5596
 12012  003D06                     l1289:
 12013  003D06  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12014  003D0A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12015  003D0E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12016  003D12  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12017  003D16                     l5596:
 12018  003D16  5001               	movf	___xxtofl@val^0,w,c
 12019  003D18  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12020  003D1A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12021  003D1C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12022  003D1E  A4D8               	btfss	status,2,c
 12023  003D20  EF94  F01E         	goto	u6841
 12024  003D24  EF96  F01E         	goto	u6840
 12025  003D28                     u6841:
 12026  003D28  EFA0  F01E         	goto	l5602
 12027  003D2C                     u6840:
 12028  003D2C  0E00               	movlw	0
 12029  003D2E  6E01               	movwf	?___xxtofl^0,c
 12030  003D30  0E00               	movlw	0
 12031  003D32  6E02               	movwf	(?___xxtofl+1)^0,c
 12032  003D34  0E00               	movlw	0
 12033  003D36  6E03               	movwf	(?___xxtofl+2)^0,c
 12034  003D38  0E00               	movlw	0
 12035  003D3A  6E04               	movwf	(?___xxtofl+3)^0,c
 12036  003D3C  EF31  F01F         	goto	l1292
 12037  003D40                     l5602:
 12038  003D40  0E96               	movlw	150
 12039  003D42  6E0A               	movwf	___xxtofl@exp^0,c
 12040  003D44  EFAA  F01E         	goto	l5606
 12041  003D48                     l5604:
 12042  003D48  2A0A               	incf	___xxtofl@exp^0,f,c
 12043  003D4A  90D8               	bcf	status,0,c
 12044  003D4C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12045  003D4E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12046  003D50  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12047  003D52  320B               	rrcf	___xxtofl@arg^0,f,c
 12048  003D54                     l5606:
 12049  003D54  0E00               	movlw	0
 12050  003D56  140B               	andwf	___xxtofl@arg^0,w,c
 12051  003D58  6E05               	movwf	??___xxtofl^0,c
 12052  003D5A  0E00               	movlw	0
 12053  003D5C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12054  003D5E  6E06               	movwf	(??___xxtofl+1)^0,c
 12055  003D60  0E00               	movlw	0
 12056  003D62  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12057  003D64  6E07               	movwf	(??___xxtofl+2)^0,c
 12058  003D66  0EFE               	movlw	254
 12059  003D68  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12060  003D6A  6E08               	movwf	(??___xxtofl+3)^0,c
 12061  003D6C  5005               	movf	??___xxtofl^0,w,c
 12062  003D6E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12063  003D70  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12064  003D72  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12065  003D74  A4D8               	btfss	status,2,c
 12066  003D76  EFBF  F01E         	goto	u6851
 12067  003D7A  EFC1  F01E         	goto	u6850
 12068  003D7E                     u6851:
 12069  003D7E  EFA4  F01E         	goto	l5604
 12070  003D82                     u6850:
 12071  003D82  EFCF  F01E         	goto	l1296
 12072  003D86                     l5608:
 12073  003D86  2A0A               	incf	___xxtofl@exp^0,f,c
 12074  003D88  0E01               	movlw	1
 12075  003D8A  260B               	addwf	___xxtofl@arg^0,f,c
 12076  003D8C  0E00               	movlw	0
 12077  003D8E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12078  003D90  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12079  003D92  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12080  003D94  90D8               	bcf	status,0,c
 12081  003D96  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12082  003D98  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12083  003D9A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12084  003D9C  320B               	rrcf	___xxtofl@arg^0,f,c
 12085  003D9E                     l1296:
 12086  003D9E  0E00               	movlw	0
 12087  003DA0  140B               	andwf	___xxtofl@arg^0,w,c
 12088  003DA2  6E05               	movwf	??___xxtofl^0,c
 12089  003DA4  0E00               	movlw	0
 12090  003DA6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12091  003DA8  6E06               	movwf	(??___xxtofl+1)^0,c
 12092  003DAA  0E00               	movlw	0
 12093  003DAC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12094  003DAE  6E07               	movwf	(??___xxtofl+2)^0,c
 12095  003DB0  0EFF               	movlw	255
 12096  003DB2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12097  003DB4  6E08               	movwf	(??___xxtofl+3)^0,c
 12098  003DB6  5005               	movf	??___xxtofl^0,w,c
 12099  003DB8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12100  003DBA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12101  003DBC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12102  003DBE  A4D8               	btfss	status,2,c
 12103  003DC0  EFE4  F01E         	goto	u6861
 12104  003DC4  EFE6  F01E         	goto	u6860
 12105  003DC8                     u6861:
 12106  003DC8  EFC3  F01E         	goto	l5608
 12107  003DCC                     u6860:
 12108  003DCC  EFEE  F01E         	goto	l5616
 12109  003DD0                     l5614:
 12110  003DD0  060A               	decf	___xxtofl@exp^0,f,c
 12111  003DD2  90D8               	bcf	status,0,c
 12112  003DD4  360B               	rlcf	___xxtofl@arg^0,f,c
 12113  003DD6  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12114  003DD8  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12115  003DDA  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12116  003DDC                     l5616:
 12117  003DDC  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12118  003DDE  EFF3  F01E         	goto	u6871
 12119  003DE2  EFF5  F01E         	goto	u6870
 12120  003DE6                     u6871:
 12121  003DE6  EFFD  F01E         	goto	l1303
 12122  003DEA                     u6870:
 12123  003DEA  0E02               	movlw	2
 12124  003DEC  600A               	cpfslt	___xxtofl@exp^0,c
 12125  003DEE  EFFB  F01E         	goto	u6881
 12126  003DF2  EFFD  F01E         	goto	u6880
 12127  003DF6                     u6881:
 12128  003DF6  EFE8  F01E         	goto	l5614
 12129  003DFA                     u6880:
 12130  003DFA                     l1303:
 12131  003DFA  B00A               	btfsc	___xxtofl@exp^0,0,c
 12132  003DFC  EF02  F01F         	goto	u6891
 12133  003E00  EF04  F01F         	goto	u6890
 12134  003E04                     u6891:
 12135  003E04  EF05  F01F         	goto	l5622
 12136  003E08                     u6890:
 12137  003E08  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12138  003E0A                     l5622:
 12139  003E0A  90D8               	bcf	status,0,c
 12140  003E0C  320A               	rrcf	___xxtofl@exp^0,f,c
 12141  003E0E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12142  003E12  6A06               	clrf	(??___xxtofl+1)^0,c
 12143  003E14  6A07               	clrf	(??___xxtofl+2)^0,c
 12144  003E16  6A08               	clrf	(??___xxtofl+3)^0,c
 12145  003E18  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12146  003E1C  6A07               	clrf	(??___xxtofl+2)^0,c
 12147  003E1E  6A06               	clrf	(??___xxtofl+1)^0,c
 12148  003E20  6A05               	clrf	??___xxtofl^0,c
 12149  003E22  5005               	movf	??___xxtofl^0,w,c
 12150  003E24  120B               	iorwf	___xxtofl@arg^0,f,c
 12151  003E26  5006               	movf	(??___xxtofl+1)^0,w,c
 12152  003E28  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12153  003E2A  5007               	movf	(??___xxtofl+2)^0,w,c
 12154  003E2C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12155  003E2E  5008               	movf	(??___xxtofl+3)^0,w,c
 12156  003E30  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12157  003E32  5009               	movf	___xxtofl@sign^0,w,c
 12158  003E34  B4D8               	btfsc	status,2,c
 12159  003E36  EF1F  F01F         	goto	u6901
 12160  003E3A  EF21  F01F         	goto	u6900
 12161  003E3E                     u6901:
 12162  003E3E  EF29  F01F         	goto	l5632
 12163  003E42                     u6900:
 12164  003E42  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12165  003E44  EF28  F01F         	goto	u6910
 12166  003E48  EF26  F01F         	goto	u6911
 12167  003E4C                     u6911:
 12168  003E4C  EF29  F01F         	goto	l5632
 12169  003E50                     u6910:
 12170  003E50  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12171  003E52                     l5632:
 12172  003E52  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12173  003E56  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12174  003E5A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12175  003E5E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12176  003E62                     l1292:
 12177  003E62  0012               	return		;funcret
 12178  003E64                     __end_of___xxtofl:
 12179                           	callstack 0
 12180                           
 12181 ;; *************** function _checkbatterylevel *****************
 12182 ;; Defined at:
 12183 ;;		line 73 in file "DC_motors.c"
 12184 ;; Parameters:    Size  Location     Type
 12185 ;;		None
 12186 ;; Auto vars:     Size  Location     Type
 12187 ;;  batterylevel    1    1[COMRAM] unsigned char 
 12188 ;; Return value:  Size  Location     Type
 12189 ;;                  1    wreg      void 
 12190 ;; Registers used:
 12191 ;;		wreg, status,2, status,0, cstack
 12192 ;; Tracked objects:
 12193 ;;		On entry : 0/0
 12194 ;;		On exit  : 0/0
 12195 ;;		Unchanged: 0/0
 12196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12201 ;;Total ram usage:        1 bytes
 12202 ;; Hardware stack levels used: 1
 12203 ;; Hardware stack levels required when called: 1
 12204 ;; This function calls:
 12205 ;;		_ADC_getval
 12206 ;; This function is called by:
 12207 ;;		_main
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211                           	psect	text55
 12212  005420                     __ptext55:
 12213                           	callstack 0
 12214  005420                     _checkbatterylevel:
 12215                           	callstack 29
 12216  005420                     
 12217                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
 12218  005420  EC49  F02A         	call	_ADC_getval	;wreg free
 12219  005424  6E02               	movwf	checkbatterylevel@batterylevel^0,c
 12220  005426                     
 12221                           ;DC_motors.c: 77:     if (batterylevel<200) {
 12222  005426  0EC8               	movlw	200
 12223  005428  6002               	cpfslt	checkbatterylevel@batterylevel^0,c
 12224  00542A  EF19  F02A         	goto	u6921
 12225  00542E  EF1B  F02A         	goto	u6920
 12226  005432                     u6921:
 12227  005432  EF1E  F02A         	goto	l525
 12228  005436                     u6920:
 12229  005436                     
 12230                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
 12231  005436  8E7C               	bsf	124,7,c	;volatile
 12232                           
 12233                           ;DC_motors.c: 79:     } else {
 12234  005438  EF1F  F02A         	goto	l527
 12235  00543C                     l525:
 12236                           
 12237                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
 12238  00543C  9E7C               	bcf	124,7,c	;volatile
 12239  00543E                     l527:
 12240  00543E  0012               	return		;funcret
 12241  005440                     __end_of_checkbatterylevel:
 12242                           	callstack 0
 12243                           
 12244 ;; *************** function _ADC_getval *****************
 12245 ;; Defined at:
 12246 ;;		line 26 in file "ADC.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;		None
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;  tmpval          1    0[COMRAM] unsigned char 
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      unsigned char 
 12253 ;; Registers used:
 12254 ;;		wreg, status,2
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12264 ;;Total ram usage:        1 bytes
 12265 ;; Hardware stack levels used: 1
 12266 ;; This function calls:
 12267 ;;		Nothing
 12268 ;; This function is called by:
 12269 ;;		_checkbatterylevel
 12270 ;; This function uses a non-reentrant model
 12271 ;;
 12272                           
 12273                           	psect	text56
 12274  005492                     __ptext56:
 12275                           	callstack 0
 12276  005492                     _ADC_getval:
 12277                           	callstack 29
 12278  005492                     
 12279                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
 12280  005492  8060               	bsf	96,0,c	;volatile
 12281  005494                     l271:
 12282  005494  B060               	btfsc	96,0,c	;volatile
 12283  005496  EF4F  F02A         	goto	u6731
 12284  00549A  EF51  F02A         	goto	u6730
 12285  00549E                     u6731:
 12286  00549E  EF4A  F02A         	goto	l271
 12287  0054A2                     u6730:
 12288  0054A2                     
 12289                           ;ADC.c: 31:     tmpval = ADRESH;
 12290  0054A2  CF64 F001          	movff	3940,ADC_getval@tmpval	;volatile
 12291  0054A6                     
 12292                           ;ADC.c: 34:     return tmpval;
 12293  0054A6  5001               	movf	ADC_getval@tmpval^0,w,c
 12294  0054A8  0012               	return		;funcret
 12295  0054AA                     __end_of_ADC_getval:
 12296                           	callstack 0
 12297                           
 12298 ;; *************** function _USART4_init *****************
 12299 ;; Defined at:
 12300 ;;		line 7 in file "serial_comm.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;		None
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;		None
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12318 ;;Total ram usage:        0 bytes
 12319 ;; Hardware stack levels used: 1
 12320 ;; This function calls:
 12321 ;;		Nothing
 12322 ;; This function is called by:
 12323 ;;		_main
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text57
 12328  005440                     __ptext57:
 12329                           	callstack 0
 12330  005440                     _USART4_init:
 12331                           	callstack 30
 12332  005440                     
 12333                           ;serial_comm.c: 10:     RC0PPS = 0x12;
 12334  005440  0E12               	movlw	18
 12335  005442  010E               	movlb	14	; () banked
 12336  005444  6F62               	movwf	98,b	;volatile
 12337                           
 12338                           ;serial_comm.c: 11:     RX4PPS = 0x11;
 12339  005446  0E11               	movlw	17
 12340  005448  6F15               	movwf	21,b	;volatile
 12341  00544A                     
 12342                           ; BSR set to: 14
 12343                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
 12344  00544A  8283               	bsf	131,1,c	;volatile
 12345  00544C                     
 12346                           ; BSR set to: 14
 12347                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
 12348  00544C  97E9               	bcf	233,3,b	;volatile
 12349  00544E                     
 12350                           ; BSR set to: 14
 12351                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
 12352  00544E  95E8               	bcf	232,2,b	;volatile
 12353                           
 12354                           ;serial_comm.c: 16:     SP4BRGL = 51;
 12355  005450  0E33               	movlw	51
 12356  005452  6FE5               	movwf	229,b	;volatile
 12357                           
 12358                           ;serial_comm.c: 17:     SP4BRGH = 0;
 12359  005454  0E00               	movlw	0
 12360  005456  6FE6               	movwf	230,b	;volatile
 12361  005458                     
 12362                           ; BSR set to: 14
 12363                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
 12364  005458  89E7               	bsf	231,4,b	;volatile
 12365  00545A                     
 12366                           ; BSR set to: 14
 12367                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
 12368  00545A  8BE8               	bsf	232,5,b	;volatile
 12369  00545C                     
 12370                           ; BSR set to: 14
 12371                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
 12372  00545C  8FE7               	bsf	231,7,b	;volatile
 12373  00545E                     
 12374                           ; BSR set to: 14
 12375  00545E  0012               	return		;funcret
 12376  005460                     __end_of_USART4_init:
 12377                           	callstack 0
 12378                           
 12379 ;; *************** function _DCmotors_init *****************
 12380 ;; Defined at:
 12381 ;;		line 10 in file "DC_motors.c"
 12382 ;; Parameters:    Size  Location     Type
 12383 ;;  PWMperiod       1    wreg     unsigned char 
 12384 ;; Auto vars:     Size  Location     Type
 12385 ;;  PWMperiod       1    0[COMRAM] unsigned char 
 12386 ;; Return value:  Size  Location     Type
 12387 ;;                  1    wreg      void 
 12388 ;; Registers used:
 12389 ;;		wreg, status,2, cstack
 12390 ;; Tracked objects:
 12391 ;;		On entry : 0/0
 12392 ;;		On exit  : 0/0
 12393 ;;		Unchanged: 0/0
 12394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12399 ;;Total ram usage:        1 bytes
 12400 ;; Hardware stack levels used: 1
 12401 ;; Hardware stack levels required when called: 1
 12402 ;; This function calls:
 12403 ;;		_buggyLEDs_init
 12404 ;;		_clicker2LEDs_init
 12405 ;;		_clicker2buttons_init
 12406 ;; This function is called by:
 12407 ;;		_main
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           	psect	text58
 12412  0050B0                     __ptext58:
 12413                           	callstack 0
 12414  0050B0                     _DCmotors_init:
 12415                           	callstack 29
 12416                           
 12417                           ; BSR set to: 14
 12418                           ;incstack = 0
 12419                           ;DCmotors_init@PWMperiod stored from wreg
 12420  0050B0  6E01               	movwf	DCmotors_init@PWMperiod^0,c
 12421  0050B2                     
 12422                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
 12423  0050B2  50BD               	movf	189,w,c	;volatile
 12424  0050B4  0B8F               	andlw	-113
 12425  0050B6  0940               	iorlw	64
 12426  0050B8  6EBD               	movwf	189,c	;volatile
 12427                           
 12428                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
 12429  0050BA  0EE0               	movlw	-32
 12430  0050BC  16BE               	andwf	190,f,c	;volatile
 12431                           
 12432                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
 12433  0050BE  50BF               	movf	191,w,c	;volatile
 12434  0050C0  0BF0               	andlw	-16
 12435  0050C2  0901               	iorlw	1
 12436  0050C4  6EBF               	movwf	191,c	;volatile
 12437  0050C6                     
 12438                           ;DC_motors.c: 18:     T2PR=PWMperiod;
 12439  0050C6  C001  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 12440  0050CA                     
 12441                           ;DC_motors.c: 19:     T2CONbits.ON=1;
 12442  0050CA  8EBD               	bsf	189,7,c	;volatile
 12443  0050CC                     
 12444                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
 12445  0050CC  9485               	bcf	133,2,c	;volatile
 12446  0050CE                     
 12447                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
 12448  0050CE  9885               	bcf	133,4,c	;volatile
 12449  0050D0                     
 12450                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
 12451  0050D0  9E83               	bcf	131,7,c	;volatile
 12452  0050D2                     
 12453                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
 12454  0050D2  9C87               	bcf	135,6,c	;volatile
 12455  0050D4                     
 12456                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
 12457  0050D4  947D               	bcf	125,2,c	;volatile
 12458  0050D6                     
 12459                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
 12460  0050D6  987D               	bcf	125,4,c	;volatile
 12461  0050D8                     
 12462                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
 12463  0050D8  9E7B               	bcf	123,7,c	;volatile
 12464  0050DA                     
 12465                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
 12466  0050DA  9C7F               	bcf	127,6,c	;volatile
 12467                           
 12468                           ;DC_motors.c: 32:     PWM6DCH=0;
 12469  0050DC  0E00               	movlw	0
 12470  0050DE  6EA3               	movwf	163,c	;volatile
 12471                           
 12472                           ;DC_motors.c: 33:     PWM7DCH=0;
 12473  0050E0  0E00               	movlw	0
 12474  0050E2  6EA0               	movwf	160,c	;volatile
 12475  0050E4                     
 12476                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
 12477  0050E4  8EA4               	bsf	164,7,c	;volatile
 12478  0050E6                     
 12479                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
 12480  0050E6  8EA1               	bsf	161,7,c	;volatile
 12481                           
 12482                           ;DC_motors.c: 38:     RE2PPS=0x0A;
 12483  0050E8  0E0A               	movlw	10
 12484  0050EA  010E               	movlb	14	; () banked
 12485  0050EC  6F74               	movwf	116,b	;volatile
 12486                           
 12487                           ;DC_motors.c: 39:     RC7PPS=0x0B;
 12488  0050EE  0E0B               	movlw	11
 12489  0050F0  6F69               	movwf	105,b	;volatile
 12490  0050F2                     
 12491                           ; BSR set to: 14
 12492                           ;DC_motors.c: 42:     clicker2buttons_init();
 12493  0050F2  EC6D  F02A         	call	_clicker2buttons_init	;wreg free
 12494  0050F6                     
 12495                           ;DC_motors.c: 43:     clicker2LEDs_init();
 12496  0050F6  EC82  F02A         	call	_clicker2LEDs_init	;wreg free
 12497  0050FA                     
 12498                           ;DC_motors.c: 44:     buggyLEDs_init();
 12499  0050FA  EC55  F02A         	call	_buggyLEDs_init	;wreg free
 12500  0050FE  0012               	return		;funcret
 12501  005100                     __end_of_DCmotors_init:
 12502                           	callstack 0
 12503                           
 12504 ;; *************** function _clicker2buttons_init *****************
 12505 ;; Defined at:
 12506 ;;		line 7 in file "buttons_n_LEDs.c"
 12507 ;; Parameters:    Size  Location     Type
 12508 ;;		None
 12509 ;; Auto vars:     Size  Location     Type
 12510 ;;		None
 12511 ;; Return value:  Size  Location     Type
 12512 ;;                  1    wreg      void 
 12513 ;; Registers used:
 12514 ;;		None
 12515 ;; Tracked objects:
 12516 ;;		On entry : 0/0
 12517 ;;		On exit  : 0/0
 12518 ;;		Unchanged: 0/0
 12519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12524 ;;Total ram usage:        0 bytes
 12525 ;; Hardware stack levels used: 1
 12526 ;; This function calls:
 12527 ;;		Nothing
 12528 ;; This function is called by:
 12529 ;;		_DCmotors_init
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           
 12533                           	psect	text59
 12534  0054DA                     __ptext59:
 12535                           	callstack 0
 12536  0054DA                     _clicker2buttons_init:
 12537                           	callstack 29
 12538  0054DA                     
 12539                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
 12540  0054DA  8486               	bsf	134,2,c	;volatile
 12541                           
 12542                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
 12543  0054DC  8686               	bsf	134,3,c	;volatile
 12544                           
 12545                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
 12546  0054DE  010E               	movlb	14	; () banked
 12547  0054E0  95B4               	bcf	180,2,b	;volatile
 12548                           
 12549                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
 12550  0054E2  97B4               	bcf	180,3,b	;volatile
 12551  0054E4                     
 12552                           ; BSR set to: 14
 12553  0054E4  0012               	return		;funcret
 12554  0054E6                     __end_of_clicker2buttons_init:
 12555                           	callstack 0
 12556                           
 12557 ;; *************** function _clicker2LEDs_init *****************
 12558 ;; Defined at:
 12559 ;;		line 19 in file "buttons_n_LEDs.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;		None
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;		None
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      void 
 12566 ;; Registers used:
 12567 ;;		None
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12577 ;;Total ram usage:        0 bytes
 12578 ;; Hardware stack levels used: 1
 12579 ;; This function calls:
 12580 ;;		Nothing
 12581 ;; This function is called by:
 12582 ;;		_DCmotors_init
 12583 ;; This function uses a non-reentrant model
 12584 ;;
 12585                           
 12586                           	psect	text60
 12587  005504                     __ptext60:
 12588                           	callstack 0
 12589  005504                     _clicker2LEDs_init:
 12590                           	callstack 29
 12591  005504                     
 12592                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
 12593  005504  9E84               	bcf	132,7,c	;volatile
 12594                           
 12595                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
 12596  005506  9688               	bcf	136,3,c	;volatile
 12597                           
 12598                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
 12599  005508  9E7C               	bcf	124,7,c	;volatile
 12600                           
 12601                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
 12602  00550A  9680               	bcf	128,3,c	;volatile
 12603  00550C  0012               	return		;funcret
 12604  00550E                     __end_of_clicker2LEDs_init:
 12605                           	callstack 0
 12606                           
 12607 ;; *************** function _buggyLEDs_init *****************
 12608 ;; Defined at:
 12609 ;;		line 31 in file "buttons_n_LEDs.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;		None
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1    wreg      void 
 12616 ;; Registers used:
 12617 ;;		None
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12627 ;;Total ram usage:        0 bytes
 12628 ;; Hardware stack levels used: 1
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_DCmotors_init
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text61
 12637  0054AA                     __ptext61:
 12638                           	callstack 0
 12639  0054AA                     _buggyLEDs_init:
 12640                           	callstack 29
 12641  0054AA                     
 12642                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
 12643  0054AA  9288               	bcf	136,1,c	;volatile
 12644                           
 12645                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
 12646  0054AC  9684               	bcf	132,3,c	;volatile
 12647                           
 12648                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
 12649  0054AE  9884               	bcf	132,4,c	;volatile
 12650                           
 12651                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
 12652  0054B0  9086               	bcf	134,0,c	;volatile
 12653                           
 12654                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
 12655  0054B2  9088               	bcf	136,0,c	;volatile
 12656                           
 12657                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
 12658  0054B4  9280               	bcf	128,1,c	;volatile
 12659                           
 12660                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
 12661  0054B6  967C               	bcf	124,3,c	;volatile
 12662                           
 12663                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
 12664  0054B8  987C               	bcf	124,4,c	;volatile
 12665                           
 12666                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
 12667  0054BA  907E               	bcf	126,0,c	;volatile
 12668                           
 12669                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
 12670  0054BC  9080               	bcf	128,0,c	;volatile
 12671  0054BE  0012               	return		;funcret
 12672  0054C0                     __end_of_buggyLEDs_init:
 12673                           	callstack 0
 12674                           
 12675 ;; *************** function _ADC_init *****************
 12676 ;; Defined at:
 12677 ;;		line 8 in file "ADC.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;		None
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;		None
 12682 ;; Return value:  Size  Location     Type
 12683 ;;                  1    wreg      void 
 12684 ;; Registers used:
 12685 ;;		wreg, status,2
 12686 ;; Tracked objects:
 12687 ;;		On entry : 0/0
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12695 ;;Total ram usage:        0 bytes
 12696 ;; Hardware stack levels used: 1
 12697 ;; This function calls:
 12698 ;;		Nothing
 12699 ;; This function is called by:
 12700 ;;		_main
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           	psect	text62
 12705  005460                     __ptext62:
 12706                           	callstack 0
 12707  005460                     _ADC_init:
 12708                           	callstack 30
 12709  005460                     
 12710                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 12711  005460  8C86               	bsf	134,6,c	;volatile
 12712                           
 12713                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 12714  005462  010E               	movlb	14	; () banked
 12715  005464  8DB4               	bsf	180,6,b	;volatile
 12716                           
 12717                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 12718  005466  010F               	movlb	15	; () banked
 12719  005468  9958               	bcf	88,4,b	;volatile
 12720  00546A                     
 12721                           ; BSR set to: 15
 12722                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 12723  00546A  0EFC               	movlw	-4
 12724  00546C  1758               	andwf	88,f,b	;volatile
 12725                           
 12726                           ;ADC.c: 16:     ADPCH=0b101110;
 12727  00546E  0E2E               	movlw	46
 12728  005470  6F5F               	movwf	95,b	;volatile
 12729  005472                     
 12730                           ; BSR set to: 15
 12731                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 12732  005472  9460               	bcf	96,2,c	;volatile
 12733  005474                     
 12734                           ; BSR set to: 15
 12735                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 12736  005474  8860               	bsf	96,4,c	;volatile
 12737  005476                     
 12738                           ; BSR set to: 15
 12739                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 12740  005476  8E60               	bsf	96,7,c	;volatile
 12741  005478                     
 12742                           ; BSR set to: 15
 12743  005478  0012               	return		;funcret
 12744  00547A                     __end_of_ADC_init:
 12745                           	callstack 0
 12746                           
 12747                           	psect	rparam
 12748  0000                     
 12749                           	psect	idloc
 12750                           
 12751                           ;Config register IDLOC0 @ 0x200000
 12752                           ;	unspecified, using default values
 12753  200000                     	org	2097152
 12754  200000  0FFF               	dw	4095
 12755                           
 12756                           ;Config register IDLOC1 @ 0x200002
 12757                           ;	unspecified, using default values
 12758  200002                     	org	2097154
 12759  200002  0FFF               	dw	4095
 12760                           
 12761                           ;Config register IDLOC2 @ 0x200004
 12762                           ;	unspecified, using default values
 12763  200004                     	org	2097156
 12764  200004  0FFF               	dw	4095
 12765                           
 12766                           ;Config register IDLOC3 @ 0x200006
 12767                           ;	unspecified, using default values
 12768  200006                     	org	2097158
 12769  200006  0FFF               	dw	4095
 12770                           
 12771                           ;Config register IDLOC4 @ 0x200008
 12772                           ;	unspecified, using default values
 12773  200008                     	org	2097160
 12774  200008  0FFF               	dw	4095
 12775                           
 12776                           ;Config register IDLOC5 @ 0x20000A
 12777                           ;	unspecified, using default values
 12778  20000A                     	org	2097162
 12779  20000A  0FFF               	dw	4095
 12780                           
 12781                           ;Config register IDLOC6 @ 0x20000C
 12782                           ;	unspecified, using default values
 12783  20000C                     	org	2097164
 12784  20000C  0FFF               	dw	4095
 12785                           
 12786                           ;Config register IDLOC7 @ 0x20000E
 12787                           ;	unspecified, using default values
 12788  20000E                     	org	2097166
 12789  20000E  0FFF               	dw	4095
 12790                           
 12791                           	psect	config
 12792                           
 12793                           ;Config register CONFIG1L @ 0x300000
 12794                           ;	External Oscillator mode Selection bits
 12795                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12796                           ;	Power-up default value for COSC bits
 12797                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12798  300000                     	org	3145728
 12799  300000  AA                 	db	170
 12800                           
 12801                           ;Config register CONFIG1H @ 0x300001
 12802                           ;	unspecified, using default values
 12803                           ;	Clock Out Enable bit
 12804                           ;	CLKOUTEN = 0x1, unprogrammed default
 12805                           ;	Clock Switch Enable bit
 12806                           ;	CSWEN = 0x1, unprogrammed default
 12807                           ;	Fail-Safe Clock Monitor Enable bit
 12808                           ;	FCMEN = 0x1, unprogrammed default
 12809  300001                     	org	3145729
 12810  300001  FF                 	db	255
 12811                           
 12812                           ;Config register CONFIG2L @ 0x300002
 12813                           ;	unspecified, using default values
 12814                           ;	Master Clear Enable bit
 12815                           ;	MCLRE = 0x1, unprogrammed default
 12816                           ;	Power-up Timer Enable bit
 12817                           ;	PWRTE = 0x1, unprogrammed default
 12818                           ;	Low-power BOR enable bit
 12819                           ;	LPBOREN = 0x1, unprogrammed default
 12820                           ;	Brown-out Reset Enable bits
 12821                           ;	BOREN = 0x3, unprogrammed default
 12822  300002                     	org	3145730
 12823  300002  FF                 	db	255
 12824                           
 12825                           ;Config register CONFIG2H @ 0x300003
 12826                           ;	unspecified, using default values
 12827                           ;	Brown Out Reset Voltage selection bits
 12828                           ;	BORV = 0x3, unprogrammed default
 12829                           ;	ZCD Disable bit
 12830                           ;	ZCD = 0x1, unprogrammed default
 12831                           ;	PPSLOCK bit One-Way Set Enable bit
 12832                           ;	PPS1WAY = 0x1, unprogrammed default
 12833                           ;	Stack Full/Underflow Reset Enable bit
 12834                           ;	STVREN = 0x1, unprogrammed default
 12835                           ;	Debugger Enable bit
 12836                           ;	DEBUG = 0x1, unprogrammed default
 12837                           ;	Extended Instruction Set Enable bit
 12838                           ;	XINST = 0x1, unprogrammed default
 12839  300003                     	org	3145731
 12840  300003  FF                 	db	255
 12841                           
 12842                           ;Config register CONFIG3L @ 0x300004
 12843                           ;	WDT Period Select bits
 12844                           ;	WDTCPS = 0x1F, unprogrammed default
 12845                           ;	WDT operating mode
 12846                           ;	WDTE = OFF, WDT Disabled
 12847  300004                     	org	3145732
 12848  300004  9F                 	db	159
 12849                           
 12850                           ;Config register CONFIG3H @ 0x300005
 12851                           ;	unspecified, using default values
 12852                           ;	WDT Window Select bits
 12853                           ;	WDTCWS = 0x7, unprogrammed default
 12854                           ;	WDT input clock selector
 12855                           ;	WDTCCS = 0x7, unprogrammed default
 12856  300005                     	org	3145733
 12857  300005  FF                 	db	255
 12858                           
 12859                           ;Config register CONFIG4L @ 0x300006
 12860                           ;	unspecified, using default values
 12861                           ;	Write Protection Block 0
 12862                           ;	WRT0 = 0x1, unprogrammed default
 12863                           ;	Write Protection Block 1
 12864                           ;	WRT1 = 0x1, unprogrammed default
 12865                           ;	Write Protection Block 2
 12866                           ;	WRT2 = 0x1, unprogrammed default
 12867                           ;	Write Protection Block 3
 12868                           ;	WRT3 = 0x1, unprogrammed default
 12869                           ;	Write Protection Block 3
 12870                           ;	WRT4 = 0x1, unprogrammed default
 12871                           ;	Write Protection Block 3
 12872                           ;	WRT5 = 0x1, unprogrammed default
 12873                           ;	Write Protection Block 3
 12874                           ;	WRT6 = 0x1, unprogrammed default
 12875                           ;	Write Protection Block 3
 12876                           ;	WRT7 = 0x1, unprogrammed default
 12877  300006                     	org	3145734
 12878  300006  FF                 	db	255
 12879                           
 12880                           ;Config register CONFIG4H @ 0x300007
 12881                           ;	unspecified, using default values
 12882                           ;	Configuration Register Write Protection bit
 12883                           ;	WRTC = 0x1, unprogrammed default
 12884                           ;	Boot Block Write Protection bit
 12885                           ;	WRTB = 0x1, unprogrammed default
 12886                           ;	Data EEPROM Write Protection bit
 12887                           ;	WRTD = 0x1, unprogrammed default
 12888                           ;	Scanner Enable bit
 12889                           ;	SCANE = 0x1, unprogrammed default
 12890                           ;	Low Voltage Programming Enable bit
 12891                           ;	LVP = 0x1, unprogrammed default
 12892  300007                     	org	3145735
 12893  300007  FF                 	db	255
 12894                           
 12895                           ;Config register CONFIG5L @ 0x300008
 12896                           ;	unspecified, using default values
 12897                           ;	UserNVM Program Memory Code Protection bit
 12898                           ;	CP = 0x1, unprogrammed default
 12899                           ;	DataNVM Memory Code Protection bit
 12900                           ;	CPD = 0x1, unprogrammed default
 12901  300008                     	org	3145736
 12902  300008  FF                 	db	255
 12903                           
 12904                           ;Config register CONFIG5H @ 0x300009
 12905                           ;	unspecified, using default values
 12906  300009                     	org	3145737
 12907  300009  FF                 	db	255
 12908                           
 12909                           ;Config register CONFIG6L @ 0x30000A
 12910                           ;	unspecified, using default values
 12911                           ;	Table Read Protection Block 0
 12912                           ;	EBTR0 = 0x1, unprogrammed default
 12913                           ;	Table Read Protection Block 1
 12914                           ;	EBTR1 = 0x1, unprogrammed default
 12915                           ;	Table Read Protection Block 2
 12916                           ;	EBTR2 = 0x1, unprogrammed default
 12917                           ;	Table Read Protection Block 3
 12918                           ;	EBTR3 = 0x1, unprogrammed default
 12919                           ;	Table Read Protection Block 4
 12920                           ;	EBTR4 = 0x1, unprogrammed default
 12921                           ;	Table Read Protection Block 5
 12922                           ;	EBTR5 = 0x1, unprogrammed default
 12923                           ;	Table Read Protection Block 6
 12924                           ;	EBTR6 = 0x1, unprogrammed default
 12925                           ;	Table Read Protection Block 7
 12926                           ;	EBTR7 = 0x1, unprogrammed default
 12927  30000A                     	org	3145738
 12928  30000A  FF                 	db	255
 12929                           
 12930                           ;Config register CONFIG6H @ 0x30000B
 12931                           ;	unspecified, using default values
 12932                           ;	Boot Block Table Read Protection bit
 12933                           ;	EBTRB = 0x1, unprogrammed default
 12934  30000B                     	org	3145739
 12935  30000B  FF                 	db	255
 12936                           tosu	equ	0xFFF
 12937                           tosh	equ	0xFFE
 12938                           tosl	equ	0xFFD
 12939                           stkptr	equ	0xFFC
 12940                           pclatu	equ	0xFFB
 12941                           pclath	equ	0xFFA
 12942                           pcl	equ	0xFF9
 12943                           tblptru	equ	0xFF8
 12944                           tblptrh	equ	0xFF7
 12945                           tblptrl	equ	0xFF6
 12946                           tablat	equ	0xFF5
 12947                           prodh	equ	0xFF4
 12948                           prodl	equ	0xFF3
 12949                           indf0	equ	0xFEF
 12950                           postinc0	equ	0xFEE
 12951                           postdec0	equ	0xFED
 12952                           preinc0	equ	0xFEC
 12953                           plusw0	equ	0xFEB
 12954                           fsr0h	equ	0xFEA
 12955                           fsr0l	equ	0xFE9
 12956                           wreg	equ	0xFE8
 12957                           indf1	equ	0xFE7
 12958                           postinc1	equ	0xFE6
 12959                           postdec1	equ	0xFE5
 12960                           preinc1	equ	0xFE4
 12961                           plusw1	equ	0xFE3
 12962                           fsr1h	equ	0xFE2
 12963                           fsr1l	equ	0xFE1
 12964                           bsr	equ	0xFE0
 12965                           indf2	equ	0xFDF
 12966                           postinc2	equ	0xFDE
 12967                           postdec2	equ	0xFDD
 12968                           preinc2	equ	0xFDC
 12969                           plusw2	equ	0xFDB
 12970                           fsr2h	equ	0xFDA
 12971                           fsr2l	equ	0xFD9
 12972                           status	equ	0xFD8

Data Sizes:
    Strings     137
    Constant    0
    Data        7
    BSS         189
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    138     159
    BANK1           256    120     239
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[11]), STR_12(CODE[7]), STR_10(CODE[5]), 
		 -> STR_8(CODE[7]), STR_6(CODE[5]), STR_4(CODE[6]), STR_2(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[11]), STR_12(CODE[7]), STR_10(CODE[5]), 
		 -> STR_8(CODE[7]), STR_6(CODE[5]), STR_4(CODE[6]), STR_2(CODE[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf1(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), STR_11(CODE[64]), 
		 -> STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), STR_3(CODE[64]), 
		 -> STR_1(CODE[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), STR_11(CODE[64]), 
		 -> STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), STR_3(CODE[64]), 
		 -> STR_1(CODE[64]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 64
		 -> STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), STR_11(CODE[64]), 
		 -> STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), STR_3(CODE[64]), 
		 -> STR_1(CODE[64]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[11]), 
		 -> STR_12(CODE[7]), STR_10(CODE[5]), STR_8(CODE[7]), STR_6(CODE[5]), 
		 -> STR_4(CODE[6]), STR_2(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[11]), 
		 -> STR_12(CODE[7]), STR_10(CODE[5]), STR_8(CODE[7]), STR_6(CODE[5]), 
		 -> STR_4(CODE[6]), STR_2(CODE[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), 
		 -> STR_14(CODE[11]), STR_12(CODE[7]), STR_10(CODE[5]), STR_8(CODE[7]), 
		 -> STR_6(CODE[5]), STR_4(CODE[6]), STR_2(CODE[4]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), STR_11(CODE[64]), 
		 -> STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), STR_3(CODE[64]), 
		 -> STR_1(CODE[64]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf1(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2821_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf1(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf1(BANK1[100]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf1(BANK1[100]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(COMRAM[8]), colourclick_calibration@initial(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_testing@tmpval	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_colourcards_testing
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _checkbatterylevel->_ADC_getval

Critical Paths under _main in BANK0

    _colourcards_testing->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_colourcards_testing

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   64986
                                             93 COMRAM     2     2      0
                                            112 BANK0     26    26      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
                _colourcards_testing
                  _colourclickLEDs_C
                   _colourclick_init
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     360
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colourclick_writetoaddr                              2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourcards_testing                                124   122      2   64149
                                             89 COMRAM     4     2      2
                                              0 BANK1    120   120      0
                            ___fldiv
                             ___flge
                           ___xxtofl
               _colourclick_readRGBC
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             36    10     26   48382
                                             78 BANK0     34     8     26
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   46805
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    41      6   46426
                                             71 COMRAM    10     4      6
                                             56 BANK0     22    22      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31816
                                             59 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    8086
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2919
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6030
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4381
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1594
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     753
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC                                 2     0      2     920
                                             11 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (3) _colourclick_readR                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readG                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readC                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readB                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1234
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                              1 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              0 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_testing
     ___fldiv
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
     ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _stoa
             _fputc
             _strlen
           _strncmp
           _tolower
   _colourclickLEDs_C
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      3C      10       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     78      EF       7       93.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8A      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     229       8        0.0%
DATA                 0      0     229       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 13:53:12 2021

                    ___fldiv@aexp 0027                      ___fldiv@bexp 0026  
                    ___fldiv@sign 001F                                l63 4918  
                              l59 48FC             __end_of_DCmotors_init 5100  
                    ___awdiv@sign 0006               ___wmul@multiplicand 0003  
                             l221 541E                               l230 50AE  
                             l303 54E4                               l224 4FBE  
                             l160 1AF2                               l312 54CC  
                             l233 505E                               l306 550C  
                             l218 528C                               l227 500E  
                             l236 4E7A                               l309 54BE  
                             l405 545E                               l414 547C  
                             l158 1AE4                               l318 53FE  
                             l271 5494                               l351 53B6  
                             l423 5364                               l360 54EE  
                             l273 54A2                               l417 5490  
                             l177 254C                               l345 538E  
                             l274 54A8                               l354 54F8  
                             l515 50FE                               l363 54D8  
                             l268 5478                               l348 5390  
                             l525 543C                               l357 5502  
                             l366 5214                               l527 543E  
                             l634 53DC                               l904 469A  
                             l761 4490                               l931 4596  
                             l748 432C                               l908 52FC  
                             l865 4B9E                               l893 4CF8  
                             l878 4C4E                               l899 4654  
                             _abs 5216                               _pad 4A16  
                    ___awmod@sign 0006                               wreg 000FE8  
                    ___flmul@aexp 0012                      ___flmul@bexp 0013  
                    ___flmul@sign 000D                      ___flmul@temp 0018  
           ?_colourclick_readRGBC 000C                      ___flmul@prod 0014  
             __size_of_ADC_getval 0018                      ___fltol@exp1 000A  
                            ?_abs 0013                              l1204 518E  
                            l1221 35DC                              l1230 36C4  
                            l1303 3DFA                              l1216 37B8  
                            l1312 4ECC                              l1218 3618  
                            l1162 2D24                              l1227 365E  
                            l1171 2FF4                              l1163 2D12  
                            l1252 341E                              l1164 2CD8  
                            l1404 1AE2                              l1229 36D6  
                            l1422 1278                              l1502 41A4  
                            l1255 32B0                              l1360 4ADA  
                            l1248 30BA                              l4000 2B9C  
                            l1265 33E0                              l1257 3328  
                            l1521 2B34                              l1602 5334  
                            l1610 4F1E                              l1258 3316  
                            l4010 2BCA                              l4002 2BA2  
                            l1450 16B8                              l1355 4A5C  
                            l1179 2E3E                              l1292 3E62  
                            l1188 2F0E                              l4100 2DA0  
                            l4020 2BFE                              l4012 2BCC  
                            l4004 2BB4                              l1189 2EFC  
                            l1358 4A9E                              l1366 385A  
                            l4110 2E0C                              l4102 2DA2  
                            l4030 2C3A                              l4014 2BDC  
                            l4022 2C06                              l4006 2BB6  
                            l1631 4A14                              l1296 3D9E  
                            l1552 524C                              l1368 3862  
                            l4120 2E64                              l4112 2E0E  
                            l4104 2DAC                              l4040 2C4E  
                            l4032 2C3E                              l4024 2C16  
                            l4016 2BEC                              l4008 2BBC  
                            l1616 52C4                              l5000 124A  
                            l1536 4D56                              l1289 3D06  
                            l1529 29F8                              l1537 4D5E  
                            l1642 5516                              l1386 3A9C  
                            l4130 2E92                              l4114 2E1E  
                            l4106 2DB2                              l4050 2C62  
                            l4042 2C52                              l4034 2C42  
                            l4026 2C28                              l4018 2BFC  
                            l4202 528E                              l5002 1252  
                            l1555 5254                              l1547 4798  
                            l4220 41DC                              l4212 41A6  
                            l4300 344C                              l4132 2EA0  
                            l4124 2E78                              l4140 2EBE  
                            l4108 2DD8                              l4116 2E2E  
                            l4052 2C66                              l4044 2C56  
                            l4036 2C46                              l4028 2C36  
                            l4060 2C76                              l5100 177A  
                            l5020 1302                              l5012 1296  
                            l5004 126C                              l4206 53B8  
                            l4230 4238                              l4222 41EA  
                            l4214 41AA                              l1654 4F6E  
                            l4310 3486                              l4302 345C  
                            l4134 2EA8                              l4126 2E82  
                            l4118 2E54                              l4142 2ECC  
                            l4070 2CE6                              l4062 2C7A  
                            l4054 2C6A                              l4046 2C5A  
                            l4038 2C4A                              l5110 17B6  
                            l5102 1782                              l5030 1340  
                            l5014 12A8                              l5022 1306  
                            l5006 1284                              l1486 4088  
                            l1583 3FFE                              l1639 51D2  
                            l4208 53D4                              l4240 42A2  
                            l4232 4240                              l4224 420A  
                            l4216 41B8                              l4400 36F2  
                            l4320 34B2                              l4312 348C  
                            l4304 346C                              l4152 2F1E  
                            l4160 2F74                              l4144 2ED0  
                            l4136 2EAC                              l4128 2E90  
                            l4080 2D10                              l4072 2CF2  
                            l4064 2CA4                              l4056 2C6E  
                            l4048 2C5E                              l1592 3CAE  
                            l1648 4E1C                              l5200 1A86  
                            l5120 17E2                              l5112 17BC  
                            l5104 1794                              l5040 138E  
                            l5032 1344                              l5024 130E  
                            l5016 12C4                              l1488 4090  
                            l1673 4DBE                              l1497 4152  
                            l1586 4006                              l4250 42EC  
                            l4242 42C2                              l4234 4254  
                            l4226 420E                              l4218 41D8  
                            l4410 375E                              l4402 3700  
                            l4330 34EC                              l4322 34C2  
                            l4314 3492                              l4306 346E  
                            l4170 2FC6                              l4162 2F84  
                            l4154 2F2A                              l4146 2EDE  
                            l4138 2EBC                              l4090 2D66  
                            l4082 2D32                              l4074 2CF6  
                            l4066 2CC0                              l4058 2C72  
                            l5210 1AC2                              l5202 1A98  
                            l5114 17C8                              l5106 17A2  
                            l5122 17E8                              l5130 1816  
                            l5050 1426                              l5034 1356  
                            l5042 1396                              l5026 1320  
                            l5018 12FA                              l1498 419C  
                            l1658 487A                              l1595 3BF2  
                            l4252 430C                              l4244 42C4  
                            l4236 4262                              l4228 421A  
                            l4260 4340                              l4420 37AC  
                            l4412 3778                              l4404 372A  
                            l4332 3502                              l4324 34D2  
                            l4316 34A0                              l4308 3476  
                            l4500 31E2                              l4180 2FE4  
                            l4172 2FCC                              l4164 2F94  
                            l4156 2F38                              l4148 2EF4  
                            l4092 2D74                              l4084 2D42  
                            l4076 2D04                              l4068 2CD0  
                            l1668 4DB6                              l5204 1AA4  
                            l5140 18CC                              l5132 186E  
                            l5124 17FA                              l5116 17D8  
                            l5108 17B2                              l5060 150A  
                            l5052 147E                              l5044 139E  
                            l5036 1364                              l5028 1332  
                            l5220 4022                              l5300 479A  
                            l4246 42D6                              l4238 4274  
                            l4270 43B0                              l4262 4360  
                            l4190 51B2                              l4422 37AE  
                            l4414 3794                              l4406 372E  
                            l4350 3556                              l4334 3512  
                            l4342 3532                              l4326 34D4  
                            l4318 34A2                              l4510 3278  
                            l4502 31EE                              l4430 2FF6  
                            l4174 2FCE                              l4166 2FB4  
                            l4158 2F72                              l4094 2D82  
                            l4078 2D06                              l5206 1AAC  
                            l5150 191C                              l5142 18E8  
                            l5134 18A2                              l5126 180C  
                            l5118 17DC                              l5070 15A4  
                            l5062 153C                              l5054 14B2  
                            l5046 13AE                              l5038 137C  
                            l5230 4066                              l5222 4034  
                            l5310 47F6                              l5302 47C4  
                            l5320 54F0                              l4248 42DC  
                            l4280 4428                              l4272 43B8  
                            l4264 4364                              l4256 432E  
                            l4184 5190                              l4192 4F20  
                            l4600 4B78                              l4416 3798  
                            l4408 3748                              l4360 35A8  
                            l4352 3570                              l4344 3542  
                            l4336 351A                              l4328 34DC  
                            l4520 32CE                              l4512 3296  
                            l4504 320A                              l4440 3032  
                            l4432 3002                              l4176 2FD4  
                            l4168 2FB8                              l4096 2D8E  
                            l4088 2D56                              l5208 1ABC  
                            l5160 195E                              l5152 192C  
                            l5144 18FA                              l5136 18AA  
                            l5128 1810                              l5080 167C  
                            l5072 15D8                              l5064 1552  
                            l5048 13C2                              l5056 14B8  
                            l5240 40EA                              l5224 403C  
                            l5216 4008                              l5312 4816  
                            l5400 285A                              l5322 54F4  
                            l5330 54EA                              l4282 443A  
                            l4274 43CC                              l4266 4372  
                            l4258 4332                              l4186 519C  
                            l4194 4F2C                              l4602 4B7E  
                            l4610 4BA0                              l4418 37A6  
                            l4370 3604                              l4362 35B8  
                            l4354 3580                              l4346 3542  
                            l4338 351E                              l4530 3338  
                            l4522 32D2                              l4514 32A0  
                            l4506 3234                              l4450 3064  
                            l4442 3042                              l4434 3010  
                            l4178 2FE2                              l4098 2D92  
                            l5170 198E                              l5162 196C  
                            l5154 193E                              l5146 1908  
                            l5090 16D4                              l5138 18AE  
                            l5074 162E                              l5082 1680  
                            l5066 1584                              l5058 14D6  
                            l5242 40F6                              l5234 40B4  
                            l5226 4050                              l5218 401A  
                            l5314 4828                              l5306 47D0  
                            l5402 2874                              l5410 28DE  
                            l5340 51E2                              l5332 54FA  
                            l5324 54D0                              l5260 3E78  
                            l4276 43DA                              l4284 4440  
                            l4268 4392                              l4188 51AE  
                            l4196 4F30                              l4604 4B8E  
                            l4620 4BCC                              l4612 4BA4  
                            l4380 3644                              l4372 3606  
                            l4364 35CC                              l4356 3590  
                            l4292 3420                              l4540 339A  
                            l4532 3344                              l4524 32E0  
                            l4516 32AE                              l4508 326A  
                            l4460 30A4                              l4452 3072  
                            l4444 3048                              l4436 3012  
                            l4700 44E6                              l5180 19F0  
                            l5172 19B4                              l5164 1974  
                            l5156 1946                              l5148 1918  
                            l5092 1738                              l5084 1690  
                            l5076 1634                              l5068 1594  
                            l5252 4166                              l5244 412C  
                            l5236 40C8                              l5228 4058  
                            l5316 4854                              l5308 47DE  
                            l5420 29C8                              l5412 290C  
                            l5404 2882                              l5500 4D02  
                            l5342 51EA                              l5334 54FE  
                            l5326 54D4                              l5270 3EDE  
                            l5262 3E7C                              l4286 4450  
                            l4278 4408                              l4198 4F62  
                            l4606 4B96                              l4630 4C04  
                            l4622 4BD4                              l4614 4BB2  
                            l4390 3680                              l4382 364E  
                            l4374 3616                              l4366 35DA  
                            l4358 35A0                              l4294 342C  
                            l4550 3402                              l4542 33AE  
                            l4534 3352                              l4526 330E  
                            l4518 32C0                              l4470 30EE  
                            l4462 30AA                              l4454 3074  
                            l4446 3058                              l4438 3022  
                            l4702 44E8                              l5190 1A36  
                            l5182 1A0A                              l5174 19D0  
                            l5166 197C                              l5158 1956  
                            l5094 1748                              l5086 16A4  
                            l5078 1668                              l5254 417A  
                            l5246 4130                              l5238 40CC  
                            l5430 2A6A                              l5406 28B2  
                            l5350 254E                              l5502 4D10  
                            l5510 4E8E                              ?_pad 0011  
                            l5344 5210                              l5336 51D6  
                            l5328 54E6                              l5520 5336  
                            l6216 3F2C                              l5280 3F0A  
                            l5264 3E80                              l4288 4470  
                            l4640 4C3E                              l4632 4C1A  
                            l4624 4BE6                              l4616 4BBA  
                            l4392 368E                              l4384 365C  
                            l4376 3628                              l4368 35E6  
                            l4296 343A                              l4552 3404  
                            l4544 33C8                              l4536 337C  
                            l4480 313E                              l4472 30FA  
                            l4464 30CA                              l4456 3084  
                            l4448 305E                              l4560 514A  
                            l4704 44F8                              l4800 3ABE  
                            l5192 1A46                              l5184 1A10  
                            l5176 19D8                              l5168 1988  
                            l5096 175A                              l5088 16B0  
                            l5256 417E                              l5248 4134  
                            l5440 2AD4                              l5416 2982  
                            l5360 25C2                              l5352 2576  
                            l5504 4D36                              l5512 4E96  
                            l5610 3D88                              l5602 3D40  
                            l5346 5212                              l5338 51DA  
                            l5506 4E1E                              l5522 533A  
                            l5290 3FBE                              l5282 3F42  
                            l5274 3EE4                              l5266 3EA0  
                            l5258 3E64                              l4570 4AEE  
                            l4642 4C46                              l4634 4C22  
                            l4626 4BEE                              l4618 4BBE  
                            l4394 36BC                              l4378 363E  
                            l4386 366E                              l4298 343C  
                            l4650 4C8E                              l4546 33E4  
                            l4554 340A                              l4538 3380  
                            l4490 3180                              l4482 314A  
                            l4474 3104                              l4466 30DA  
                            l4458 3094                              l4562 515A  
                            l4730 4576                              l4714 4522  
                            l4706 44FC                              l4810 3BA6  
                            l4802 3B14                              l5194 1A4C  
                            l5186 1A22                              l5178 19DE  
                            l5098 176C                              l5434 2A8A  
                            l5418 2994                              l5426 2A0C  
                            l5370 265A                              l5362 25CA  
                            l5354 2584                              l5450 2AFA  
                            l5514 4E9E                              l5530 5370  
                            l5700 545A                              l5620 3E08  
                            l5612 3D94                              l5604 3D48  
                            l5460 4F70                              l5524 5348  
                            l5292 3FD0                              l5276 3EFA  
                            l5268 3EDA                              l4740 4A3A  
                            l4900 3A5C                              l4580 4B14  
                            l4572 4AF6                              l4636 4C28  
                            l4628 4BF6                              l4388 367C  
                            l4652 4CBC                              l4556 340E  
                            l4548 33F4                              l4492 318C  
                            l4484 3156                              l4476 311A  
                            l4732 4586                              l4724 454A  
                            l4716 452C                              l4708 450A  
                            l4820 3C8E                              l4812 3BE2  
                            l4804 3B28                              l5196 1A52  
                            l5188 1A2E                              l5452 2B22  
                            l5436 2AB2                              l5444 2AE0  
                            l5428 2A34                              l5380 26EC  
                            l5372 2668                              l5364 25D8  
                            l5356 2596                              l5516 4EBA  
                            l5508 4E7C                              l5532 5376  
                            l5540 5402                              l5702 545C  
                            l5630 3E50                              l5622 3E0A  
                            l5614 3DD0                              l5606 3D54  
                            l5462 4FB6                              l5526 534C  
                            l4830 4ECE                              l5294 3FE2  
                            l5286 3F7C                              l5278 3F02  
                            l4750 4A80                              l4742 4A48  
                            l4902 3A64                              l4590 4B4C  
                            l4582 4B1C                              l4574 4AFA  
                            l4566 4ADC                              l4638 4C2E  
                            l4398 36E6                              l4654 4CCC  
                            l4646 4C50                              l4670 4614  
                            l4662 4598                              l4494 319C  
                            l4486 3164                              l4478 3126  
                            l4726 4556                              l4718 4536  
                            l4822 3C9E                              l4806 3B36  
                            l4814 3C16                              l4910 0E96  
                            l5446 2AEE                              l5438 2AC0  
                            l5390 27A0                              l5382 26FC  
                            l5366 2600                              l5358 259A  
                            l5710 1AE4                              l5534 5378  
                            l5542 54C0                              l5640 5472  
                            l5552 54DA                              l5704 5420  
                            l5632 3E52                              l5624 3E0E  
                            l5616 3DDC                              l5608 3D86  
                            l5472 5060                              l5480 5056  
                            l4832 4ED2                              l4760 5230  
                            l4752 4AAE                              l4744 4A54  
                            l4736 4A16                              l4904 3A74  
                            l4592 4B52                              l4584 4B2E  
                            l4576 4B08                              l4568 4AE0  
                            l4656 4CF0                              l4648 4C7E  
                            l4680 4698                              l4672 4622  
                            l4664 45C6                              l4496 31B6  
                            l4488 3170                              l4728 4566  
                            l4816 3C52                              l4920 0EEA  
                            l4912 0EA6                              l5392 27C8  
                            l5384 2732                              l5376 26B4  
                            l5368 263A                              l5720 1B38  
                            l5712 1AF4                              l5536 537A  
                            l5528 5366                              l5544 54C6  
                            l5642 5474                              l5554 5504  
                            l5546 5492                              l5706 5426  
                            l5626 3E32                              l5618 3DEA  
                            l4842 5390                              l5474 50A6  
                            l5466 4FC0                              l4826 52FE  
                            l4834 4EE6                              l3970 495E  
                            l4754 4AC2                              l4746 4A68  
                            l4738 4A26                              l4850 3802  
                            l4594 4B68                              l4586 4B36  
                            l4578 4B10                              l4658 4CF6  
                            l4674 4634                              l4666 45D6  
                            l4498 31C6                              l4770 472E  
                            l4762 469C                              l4818 3C66  
                            l4930 0F30                              l4922 0EF2  
                            l4914 0EB4                              l5394 2810  
                            l5386 2742                              l5378 26C6  
                            l5730 1CAA                              l5722 1B4C  
                            l5714 1B00                              l5538 537C  
                            l5458 53E0                              l5650 5264  
                            l5644 5476                              l5636 5460  
                            l5556 54AA                              l5660 50C6  
                            l5548 54A6                              l5708 5436  
                            l5628 3E42                              l4844 53A0  
                            l5468 5006                              l5484 547C  
                            l4836 4F14                              l3972 4970  
                            l4748 4A7C                              l4860 386A  
                            l4852 3822                              l4596 4B70  
                            l4588 4B3E                              l4676 4642  
                            l4668 4604                              l4684 52C6  
                            l4692 4492                              l4780 4790  
                            l4764 46BC                              l4940 0F6C  
                            l4932 0F38                              l4924 0F04  
                            l4916 0EBC                              l4908 0E8C  
                            l5388 2778                              l5740 1DE4  
                            l5732 1CDC                              l5724 1BB0  
                            l5716 1B10                              l5652 5274  
                            l5638 546A                              l5670 50D2  
                            l5662 50CA                              l5590 3CB2  
                            l5478 5010                              l5486 548C  
                            l4838 4F18                              l4758 5216  
                            l3974 497A                              l4870 38A2  
                            l4862 387C                              l4854 3832  
                            l4846 37BA                              l4598 4B72  
                            l4678 4692                              l4686 52DC  
                            l3990 2B62                              l3982 2B36  
                            l4694 44A8                              l4766 46FA  
                            l4774 473A                              l4950 0FE8  
                            l4934 0F3C                              l4926 0F12  
                            l4918 0EE0                              l5398 2848  
                            l5750 1F1E                              l5742 1E16  
                            l5734 1D0E                              l5726 1C14  
                            l5718 1B24                              l5654 527E  
                            l5646 5256                              l5680 50E4  
                            l5672 50D4                              l5664 50CC  
                            l5592 3CC2                              l3976 4998  
                            l3968 494C                              l4872 38A8  
                            l4880 399A                              l4864 388A  
                            l4856 3834                              l4848 37DA  
                            l4688 52EC                              l3992 2B72  
                            l3984 2B42                              l4776 474C  
                            l4768 4722                              l4784 4DC0  
                            l4792 4D96                              l4952 0FF2  
                            l4944 0FA2                              l4936 0F40  
                            l4928 0F24                              l5760 2098  
                            l5752 1F90                              l5744 1E88  
                            l5736 1D80                              l5728 1C78  
                            l5656 5288                              l5648 525A  
                            l5682 50E6                              l5674 50D6  
                            l5666 50CE                              l5658 50B2  
                            l5690 5440                              l5594 3CD0  
                            l3978 49CE                              l4882 39B4  
                            l4890 3A16                              l4874 392A  
                            l4866 3890                              l4858 384E  
                            l3994 2B82                              l3986 2B50  
                            l4698 44BC                              l4786 4DD0  
                            l4794 4DA8                              l4962 1076  
                            l4946 0FB4                              l4938 0F46  
                            l5498 4CFA                              l5770 21D2  
                            l5762 20CA                              l5754 1FC2  
                            l5746 1EBA                              l5738 1DB2  
                            l5850 48A6                              l5684 50F2  
                            l5676 50D8                              l5668 50D0  
                            l5692 544A                              l5596 3D16  
                            l4892 3A28                              l4884 39D2  
                            l4876 3930                              l4868 3898  
                            l3996 2B84                              l3988 2B52  
                            l4788 4D60                              l4980 1110  
                            l4964 1088                              l4948 0FD0  
                            l4956 101A                              l5780 230C  
                            l5772 2204                              l5764 20FC  
                            l5756 1FF4                              l5748 1EEC  
                            l5860 48DE                              l5852 48AE  
                            l5686 50F6                              l5678 50DA  
                            l5694 544C                              l5598 3D2C  
                            l4894 3A38                              l4886 39EC  
                            l4878 3936                              l3998 2B8C  
                            l4798 3A9E                              l4990 11E0  
                            l4982 1144                              l4966 10A4  
                            l4958 1040                              l4974 10C0  
                            l5790 2446                              l5782 233E  
                            l5774 2236                              l5766 212E  
                            l5758 2026                              l5870 48F8  
                            l5862 48E6                              l5854 48BA  
                            l5846 487C                              l5688 50FA  
                            l5696 544E                              l4896 3A3E  
                            l4888 3A06                              l4984 114A  
                            l4992 1212                              l4976 10DA  
                            l5792 24B8                              l5784 23B0  
                            l5776 22A8                              l5768 21A0  
                            l5872 490A                              l5864 48EA  
                            l5856 48CA                              l5848 4886  
                            l5698 5458                              l4898 3A50  
                            l4994 1222                              l4986 11A4  
                            l5786 23E2                              l5778 22DA  
                            l5794 2526                              l5874 491A  
                            l5866 48EE                              l5858 48D2  
                            l4996 1226                              l4988 11D8  
                            l5796 2532                              l5788 2414  
                            l5876 4920                              l5868 48F4  
                            l4998 1238                              l5798 254A  
                            l5878 4938                              STR_1 0E01  
                            STR_2 0E83                              STR_3 0E01  
                            STR_4 0E68                              STR_5 0E01  
                            STR_6 0E47                              STR_7 0E01  
                            STR_8 0E5B                              STR_9 0E01  
                            u4000 2BCA                      _BAUD4CONbits 000EE9  
                            u4001 2BC6                              _LATE 000F7D  
                            u4010 2BDC                              u4011 2BD8  
                            _LATG 000F7F                              u4100 2D24  
                            u4020 2BEC                              u4101 2D20  
                            u4021 2BE8                              u4110 2D32  
                            u4030 2C28                              u4111 2D2E  
                            u4031 2C24                              u5000 4B8E  
                            u4200 2E90                              u4120 2D42  
                            u4040 2C36                              u5001 4B8A  
                            u4201 2E8C                              u4121 2D3E  
                            u4041 2C32                              u5010 4BB2  
                            u4210 2EA0                              u4130 2D74  
                            u4050 2CA4                              _T2PR 000FBC  
                            u5011 4BAE                              u4211 2E9C  
                            u4131 2D70                              u4051 2CA0  
                            u5020 4BCC                              u5100 45C6  
                            u4300 2F84                              u4220 2EBC  
                            u4140 2D82                              u4060 2CBC  
                            u5021 4BC8                              u5101 45C2  
                            u4301 2F80                              u4221 2EB8  
                            u4141 2D7E                              u4061 2CB6  
                            u5030 4BE6                              u5110 4604  
                            u4310 2F94                              u4230 2ECC  
                            u4150 2DA0                              u4070 2CBE  
                            u5031 4BE2                              u5111 4600  
                            u4311 2F90                              u4231 2EC8  
                            u4151 2D9C                              u4400 41B8  
                            u5040 4C04                              u5120 4622  
                            u4320 2FB4                              u4240 2EDE  
                            u4160 2DD8                              u4080 2CE6  
                            u5200 4546                              u6000 153C  
                            u4401 41B4                              u5041 4C00  
                            u5121 461E                              u4321 2FB0  
                            u4241 2EDA                              u4161 2DD4  
                            u4081 2CE2                              u5201 4542  
                            u6001 1538                              u4410 41EA  
                            u5050 4C1A                              u5130 4642  
                            u4330 2FC6                              u4250 2EF4  
                            u4170 2E1E                              u4090 2D04  
                            u5210 4566                              u6010 1584  
                            u4411 41E6                              u5051 4C16  
                            u5131 463E                              u4331 2FC2  
                            u4251 2EF0                              u4171 2E1A  
                            u4091 2D00                              u5211 4562  
                            u6011 1580                              u4500 43DA  
                            u5060 4C3E                              u5140 4692  
                            u4340 2FE2                              u4260 2F0A  
                            u4180 2E54                              u5220 4576  
                            u5300 4722                              u6100 1794  
                            u6020 1594                              u4421 4214  
                            u4501 43D6                              u5061 4C3A  
                            u5141 468E                              u4341 2FDE  
                            u4261 2F06                              u4181 2E50  
                            u5221 4572                              u5301 471E  
                            u6101 1790                              u6021 1590  
                            u4430 4238                              u4510 4408  
                            u4350 51D2                              u5230 4A26  
                            u5070 4C7E                              u5150 52DC  
                            u4270 2F1E                              u4190 2E64  
                            u5310 474C                              u6110 17A2  
                            u6030 162E                              u4431 4234  
                            u4511 4404                              u4351 51CE  
                            u5231 4A22                              u5071 4C7A  
                            u5151 52D8                              u4271 2F1A  
                            u4191 2E60                              u5311 4748  
                            u6111 179E                              u6031 162A  
                            u4440 4262                              u4520 4450  
                            u4360 4F52                              u5240 4A48  
                            u4600 3542                              u5080 4CBC  
                            u4280 2F38                              u5160 44A8  
                            u5400 3AE6                              u6200 1A0A  
                            u6120 17FA                              u6040 167C  
                            u7000 1EBA                              u4441 425E  
                            u4521 444C                              u5241 4A44  
                            u4601 353E                              u5081 4CB8  
                            u4281 2F34                              u5161 44A4  
                            u6201 1A06                              u6121 17F6  
                            u6041 1678                              u7001 1EB6  
                            u4450 42A2                              u4370 4F62  
                            u5250 4A9E                              u4610 35B8  
                            u4530 343A                              u5090 4CF0  
                            u4290 2F72                              u5170 44DC  
                            u5330 4786                              u5410 3B14  
                            u6210 1A22                              u6130 18CC  
                            u6050 16A4                              u7010 1EEC  
                            u4451 429E                              u4371 4F5E  
                            u5251 4A9A                              u4611 35B4  
                            u4531 3436                              u5091 4CEC  
                            u4291 2F6E                              u5331 4780  
                            u5411 3B10                              u6211 1A1E  
                            u6131 18C8                              u6051 16A0  
                            u7011 1EE8                              u5500 532E  
                            u4460 42EC                              u5260 4AAE  
                            u4700 36D2                              u4620 35DA  
                            u4540 344C                              u5180 450A  
                            u5340 4788                              u5420 3B36  
                            u4380 52BE                              u6220 1A80  
                            u6140 18E8                              u6060 1748  
                            u6300 40EA                              u7100 2204  
                            u7020 1F1E                              u5501 5328  
                            u4461 42E8                              u5261 4AAA  
                            u4701 36CE                              u4621 35D6  
                            u4541 3448                              u5181 4506  
                            u5325 475E                              u5421 3B32  
                            u5405 3ADC                              u4381 52B8  
                            u6221 1A7A                              u6141 18E4  
                            u6061 1744                              u6301 40E6  
                            u7101 2200                              u7021 1F1A  
                            u5510 5330                              u4470 4340  
                            u5270 5230                              u4710 36E6  
                            u4630 3604                              u4550 345C  
                            u5190 451E                              u5350 4E0A  
                            u4390 52C0                              u6230 1A82  
                            u6150 18FA                              u6070 175A  
                            u6310 4118                              u7110 2236  
                            u7030 1FC2                              u4471 433C  
                            u5271 522C                              u4367 4F48  
                            u4711 36E2                              u4631 3600  
                            u4551 3458                              u5191 451A  
                            u5175 44D2                              u6151 18F6  
                            u6071 1756                              u7111 2232  
                            u7031 1FBE                              u5520 4EE6  
                            u6400 3FD0                              u4480 4372  
                            u3920 495E                              u5600 384E  
                            u4720 3700                              u4640 3628  
                            u4560 34A0                              u4800 3084  
                            u5280 46DC                              u5440 3BA2  
                            u5360 4E1C                              u6240 1A98  
                            u6160 1908                              u6080 176C  
                            u6320 4152                              u7120 22DA  
                            u7040 1FF4                              u5521 4EE2  
                            u6401 3FCC                              u4481 436E  
                            u3921 495A                              u5601 384A  
                            u4721 36FC                              u4641 3624  
                            u4561 349C                              u4801 3080  
                            u5441 3B9E                              u5361 4E18  
                            u6241 1A94                              u6161 1904  
                            u6081 1768                              u6321 414E  
                            u7121 22D6                              u7041 1FF0  
                            u5530 4F14                              u6410 3FE2  
                            u4490 43B0                              u3930 4970  
                            u5610 387C                              u4730 3748  
                            u4650 363E                              u4570 34B2  
                            u4810 3094                              u5290 46FA  
                            u5450 3BC6                              u5370 4D90  
                            u6170 193E                              u6090 177A  
                            u6330 4162                              u7130 230C  
                            u7050 2026                              u5531 4F10  
                            u6411 3FDE                              u4491 43AC  
                            u3931 496C                              u5611 3878  
                            u4731 3744                              u4651 363A  
                            u4571 34AE                              u4811 3090  
                            u5291 46F6                              u5435 3B4A  
                            u5371 4D8A                              u6171 193A  
                            u6091 1776                              u6331 415E  
                            u6251 4012                              u7131 2308  
                            u7051 2022                              u5540 53A0  
                            u3940 4998                              u5700 3A50  
                            u5620 388A                              u4740 3778  
                            u4660 365C                              u4580 34C2  
                            u4900 3338                              u4820 30CA  
                            u5460 3BE2                              u5436 3B54  
                            u5380 4D92                              u6180 196C  
                            u6340 419C                              u6260 4034  
                            u6420 47C4                              u6500 25C2  
                            u7140 233E                              u7060 20CA  
                            u5541 539C                              u3941 4994  
                            u5701 3A4C                              u5621 3886  
                            u4741 3774                              u4661 3658  
                            u4581 34BE                              u4901 3334  
                            u4821 30C6                              u5285 46D2  
                            u5461 3BDE                              u5437 3B64  
                            u5357 4E00                              u6181 1968  
                            u6341 4198                              u6317 410E  
                            u6261 4030                              u6421 47C0  
                            u6501 25BE                              u7141 233A  
                            u7061 20C6                              u5550 53B6  
                            u6350 3EA0                              u3950 49CE  
                            u5630 39B4                              u4750 37A6  
                            u4670 367C                              u4590 3502  
                            u4910 3352                              u4830 30DA  
                            u5470 3C36                              u5390 4DA8  
                            u6190 19F0                              u5710 0EB4  
                            u6270 4066                              u6430 47F6  
                            u6510 2600                              u7150 23E2  
                            u7070 20FC                              u5551 53B2  
                            u6351 3E9C                              u3951 49CA  
                            u5631 39B0                              u4751 37A2  
                            u4671 3678                              u4591 34FE  
                            u4911 334E                              u4831 30D6  
                            u5455 3BBC                              u5391 4DA4  
                            u6191 19EC                              u5711 0EB0  
                            u6271 4062                              u6431 47F2  
                            u6511 25FC                              u7151 23DE  
                            u7071 20F8                              u6360 3EDA  
                            u5640 39D2                              u5560 37EA  
                            u4680 368E                              u4920 339A  
                            u4840 3254                              u4760 3010  
                            u3960 2B50                              u5480 3C52  
                            u5800 106E                              u5720 0F04  
                            u6280 4084                              u6440 4816  
                            u6600 290C                              u6520 26AC  
                            u7160 2414                              u7080 212E  
                            u6361 3ED6                              u5641 39CE  
                            u5561 37E4                              u4681 368A  
                            u4921 3396                              u4761 300C  
                            u3961 2B4C                              u5481 3C4E  
                            u5801 1068                              u5721 0F00  
                            u6281 4080                              u6441 4812  
                            u6601 2908                              u6521 26A6  
                            u7161 2410                              u7081 212A  
                            u6370 3EF6                              u5650 39EC  
                            u5570 37EC                              u4690 36BC  
                            u4930 33C8                              u4850 32AE  
                            u4770 3022                              u3970 2B62  
                            u5490 3C8E                              u5810 1070  
                            u5730 0F12                              u6290 40B0  
                            u6450 4828                              u6610 297A  
                            u6530 26AE                              u7170 2446  
                            u7090 21D2                              u6371 3EF2  
                            u5651 39E8                              u4691 36B8  
                            u4931 33C4                              u4851 32AA  
                            u4771 301E                              u3971 2B5E  
                            u5491 3C8A                              u5475 3C2C  
                            u5731 0F0E                              u6291 40AC  
                            u6451 4824                              u6611 2974  
                            u7171 2442                              u7091 21CE  
                            u6380 3FB8                              u5660 3A06  
                            u5580 3802                              u4940 3402  
                            u4860 32CE                              u4780 3032  
                            u3980 2B72                              u5900 12A8  
                            u5820 1088                              u5740 0F24  
                            u6460 4854                              u6620 297C  
                            u6540 26C6                              u6381 3FB2  
                            u5661 3A02                              u5581 37FE  
                            u4941 33FE                              u4861 32CA  
                            u4845 324A                              u4781 302E  
                            u3981 2B6E                              u5901 12A4  
                            u5821 1084                              u5741 0F20  
                            u6461 4850                              u6541 26C2  
                            u6470 51FE                              u6390 3FBA  
                            u5670 3A16                              u5590 3832  
                            u4950 4AEE                              u4870 32E0  
                            u4790 3072                              u3990 2BB4  
                            u5910 12C4                              u5830 110C  
                            u5750 0F6C                              u6630 2994  
                            u6550 26FC                              u6710 4D56  
                            u6471 51F6                              u5671 3A12  
                            u5591 382E                              u4951 4AEA  
                            u4871 32DC                              u4791 306E  
                            u3991 2BB0                              u5911 12C0  
                            u5831 1108                              u5751 0F68  
                            u6631 2990                              u6551 26F8  
                            u6711 4D52                              u6720 5364  
                            u5680 3A28                              u4960 4B08  
                            u4880 330E                              u5920 12FA  
                            u5840 11A0                              u5760 0F9A  
                            u6640 2A34                              u6560 2742  
                            u7280 490A                              u6721 5360  
                            u5681 3A24                              u4961 4B04  
                            u4881 330A                              u5921 12F6  
                            u5841 119C                              u5761 0F94  
                            u6641 2A30                              u6561 273E  
                            u7281 4906                              u6730 54A2  
                            u5690 3A38                              u4970 4B2E  
                            u4890 3324                              u5930 1320  
                            u5850 1212                              u5770 0F9C  
                            u6650 2AB2                              u6570 27A0  
                            u6490 2576                              u7290 4918  
                            u6731 549E                              u5691 3A34  
                            u4971 4B2A                              u4891 3320  
                            u5931 131C                              u5851 120E  
                            u6651 2AAE                              u6571 279C  
                            u6491 2572                              u7291 4914  
                            u6900 3E42                              u6820 3CC2  
                            u4980 4B4C                              u5940 1332  
                            u5860 1238                              u5780 0FB4  
                            u6580 27C8                              u6901 3E3E  
                            u6821 3CBE                              u4981 4B48  
                            u5941 132E                              u5861 1234  
                            u5781 0FB0                              u6581 27C4  
                            u6910 3E50                              u6830 3CD0  
                            u4990 4B68                              u5950 1340  
                            u5870 124A                              u5790 1040  
                            u6590 285A                              u6911 3E4C  
                            u6831 3CCC                              u4991 4B64  
                            u5951 133C                              u5871 1246  
                            u5791 103C                              u6591 2856  
                            u6920 5436                              u6840 3D2C  
                            u6488 5200                              u5960 1356  
                            u5880 126C                              u6921 5432  
                            u6841 3D28                              u5961 1352  
                            u5881 1268                              u6665 53E8  
                            u6850 3D82                              u6690 548C  
                            u5970 1364                              u5890 1292  
                            u6930 1AF2                              u6666 53EA  
                            u6851 3D7E                              u6691 5488  
                            u5971 1360                              u5891 128E  
                            u6931 1AEE                              u6675 53F2  
                            u6860 3DCC                              u5980 138E  
                            u6940 1CAA                              u6676 53F4  
                            u6861 3DC8                              u5981 138A  
                            u6941 1CA6                              u6685 53FC  
                            u6870 3DEA                              u5990 14D6  
                            u6950 1CDC                              u6686 53FE  
                            u6871 3DE6                              u5991 14D2  
                            u6951 1CD8                              u6880 3DFA  
                            u6960 1D0E                              u6881 3DF6  
                            u6961 1D0A                              u6890 3E08  
                            u6970 1DB2                              u6891 3E04  
                            u6971 1DAE                              u7827 492A  
                            u6980 1DE4                              u6981 1DE0  
                            u7837 526A                              u6990 1E16  
                            u7847 253C                              u6991 1E12  
                     main@current 00D0                              abs@a 0013  
                            _dbuf 0198                              _atoi 3E64  
                            _main 487C                              _dtoa 37BA  
                            _prec 00EE                              _nout 00EA  
                            pad@i 0018                              pad@p 0015  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            indf0 000FEF                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                              _stoa 4008  
                   ___fpclassifyf 469C                              prodh 000FF4  
                            prodl 000FF3                              start 0000  
                __end_of_ADC_init 547A                   ___fldiv@new_exp 0020  
                    _tolower$3133 000D                      ___param_bank 000000  
                           ??_abs 0015                             ??_pad 0017  
          ??_clicker2buttons_init 0001                     ___fltol@sign1 0009  
                 __end_of___aodiv 432E                             ?_atoi 0008  
                 __end_of___fladd 2FF6                             ?_main 0001  
                           ?_dtoa 001C                   __end_of___aomod 4492  
                           _ADPCH 000F5F                   __end_of___fldiv 37BA  
                 __end_of___awdiv 4BA0                   __end_of___flneg 52FE  
                           STR_10 0E6E                             STR_11 0E01  
                           STR_20 0E7B                             STR_12 0E54  
                           STR_13 0E01                             STR_14 0E41  
                           STR_15 0E01                             STR_23 0E77  
                           STR_24 0E7F                             STR_16 0E62  
                           STR_17 0E01                             STR_18 0E4C  
                           STR_27 0E87                             STR_19 0E73  
                 __end_of___awmod 4C50                             STR_29 0E87  
                 __end_of___flmul 3420                   __end_of___flsub 5190  
                 __end_of___fltol 4598                             ?_stoa 000A  
                 ___awdiv@divisor 0003           _colourclick_writetoaddr 5400  
                 ___awdiv@counter 0005                      vfpfcnvrt@fmt 004A  
         __end_of_sendCharSerial4 5492        __end_of_I2C_2_Master_Start 54FA  
      __end_of_I2C_2_Master_Write 54DA                             _flags 00F0  
                           _fputc 494C                             _fputs 5190  
                 __end_of_isdigit 5336              colourclickLEDs_C@tog 0001  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 00EC  
                           _putch 5516                             dtoa@d 001E  
                           dtoa@i 003E                 _clicker2LEDs_init 5504  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 4F20                   __end_of_isupper 52C6  
                           tablat 000FF5                             plusw1 000FE3  
                           plusw2 000FDB            DCmotors_init@PWMperiod 0001  
                           stoa@i 0016                             stoa@l 001E  
              ?_clicker2LEDs_init 0001                             stoa@p 001C  
                           stoa@s 000C                             stoa@w 0018  
                           status 000FD8                   __end_of_sprintf 4ECE  
                  ?___fpclassifyf 0001                   __end_of_tolower 4DC0  
                 __end_of_strncmp 487C             _I2C_2_Master_RepStart 54FA  
                 __initialization 5100               ??_clicker2LEDs_init 0001  
                    __end_of_atoi 4008                      __end_of_main 494C  
                    __end_of_dtoa 3A9E                      __end_of_stoa 41A6  
                          ??_atoi 000A                            ??_main 005E  
                          ??_dtoa 0026                            ??_stoa 000E  
                   __activetblptr 000003            ??_colourclick_readRGBC 000E  
       __end_of_clicker2LEDs_init 550E                   _colourcard_flag 00F6  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000F64         __size_of_colourclick_init 0038  
                ___awdiv@dividend 0001                            ?_putch 0001  
                          _RC0PPS 000E62                            _RC4REG 000EE3  
                          _RE2PPS 000E74                            _RD5PPS 000E6F  
                          _RC7PPS 000E69                            _RD6PPS 000E70  
                          _RX4PPS 000E15                            _TX4REG 000EE4  
                __end_of___xxtofl 3E64                      ??_ADC_getval 0001  
                    vfprintf@cfmt 0058                            ___flge 4598  
                          ___fleq 4C50                         ??___aodiv 0011  
                       ??___fladd 0009                         ??___aomod 0011  
                          ___wmul 53B8                         ??___fldiv 0017  
                       ??___awdiv 0005                         ??___flneg 0005  
                       ??___awmod 0005                         ??___flmul 0009  
                       ??___flsub 0022                         ??___fltol 0005  
                          _efgtoa 0E8C                  ??_buggyLEDs_init 0001  
                          _floorf 3A9E         ??_colourclick_writetoaddr 0004  
                          clear_0 5126                            clear_1 5132  
                          clear_2 513E                  ___awdiv@quotient 0007  
                 ___awmod@divisor 0003                            isa$std 000001  
                 ___awmod@counter 0005                            pad@buf 0013  
                          dtoa@fp 001C                            _strcpy 4DC0  
                          _strlen 4F20                            fputc@c 0001  
                          fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_isdigit 0003  
                 ___fpclassifyf@e 0009                   ___fpclassifyf@u 000B  
                 ___fpclassifyf@x 0001                      __mediumconst 0000  
                       ??_isspace 0003                            tblptrh 000FF7  
                       ??_isupper 0003                            tblptrl 000FF6  
                          tblptru 000FF8                         ?_ADC_init 0001  
                ?_sendCharSerial4 0001       __end_of_colourcards_testing 254E  
                          stoa@cp 001A                            stoa@fp 000A  
                          putch@c 0001                  __end_of_vfprintf 4D60  
                       ??_sprintf 005A                         ??_tolower 0009  
              __end_of_ADC_getval 54AA                      ?_USART4_init 0001  
                       ??_strncmp 0007                        ___flge@ff1 001A  
                      ___flge@ff2 001E                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 000B                      ___xxtofl@exp 000A  
                    ___xxtofl@val 0001                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005                        __accesstop 0060  
         __end_of__initialization 5144                        ___flneg@f1 0001  
          ?_I2C_2_Master_RepStart 0001                     ___rparam_used 000001  
                      ___fltol@f1 0001                    __pcstackCOMRAM 0001  
                    __pidataBANK1 550E                     __end_of_fputc 4A16  
                   __end_of_fputs 51D4                     __end_of_putch 5518  
   checkbatterylevel@batterylevel 0002                        ??_ADC_init 0001  
      __size_of_clicker2LEDs_init 000A                           ??_fputc 0005  
                         ??_fputs 000E     __size_of_colourclickLEDs_init 000E  
                         ??_putch 0001   __end_of_colourclick_writetoaddr 5420  
                      __pbssBANK0 00EA                        __pbssBANK1 0178  
                      __pbssBANK2 0200                 _checkbatterylevel 5420  
              ?_checkbatterylevel 0001                      _T2CLKCONbits 000FBF  
                         ?___flge 001A                           ?___fleq 0001  
                         ?___wmul 0001                           ?_efgtoa 003C  
             ??_checkbatterylevel 0002                           ?_floorf 0028  
                         ?_strcpy 0001                           ?_strlen 0001  
                       ?___xxtofl 0001                           _SP4BRGH 000EE6  
                         _SP4BRGL 000EE5                __size_of_vfpfcnvrt 05E8  
                         _PWM6DCH 000FA3                           _PWM7DCH 000FA0  
                         _SSP2ADD 000ED6                           _SSP2BUF 000ED5  
                _colourclick_init 5256         __end_of_checkbatterylevel 5440  
          __size_of_DCmotors_init 0050                         _ADREFbits 000F58  
              _I2C_2_Master_Start 54F0                _I2C_2_Master_Write 54CE  
                         __Hparam 0000                           __Lparam 0000  
         sendStringSerial4@string 0002                   __size_of___flge 0104  
                 __size_of___fleq 00AA                           ___aodiv 41A6  
                         ___fladd 2B36                           ___aomod 432E  
                         ___fldiv 3420                           ___awdiv 4ADC  
                         ___flneg 52C6                           ___awmod 4BA0  
                         ___flmul 2FF6                           ___flsub 514A  
                         ___fltol 4492                   __size_of___wmul 0026  
             ?_I2C_2_Master_Start 0001               ?_I2C_2_Master_Write 0001  
                       ?_vfprintf 0052                      __psmallconst 0E00  
                 __size_of_efgtoa 0C58                   __size_of_floorf 0212  
                         __pcinit 5100                           __ramtop 0E00  
                         __ptext0 487C                           __ptext1 5256  
                         __ptext2 5400                           __ptext3 54C0  
                         __ptext4 53DE                           __ptext5 5366  
                         __ptext6 1AE4                           __ptext7 4E7C  
                         __ptext8 4CFA                           __ptext9 254E  
   __size_of_clicker2buttons_init 000C                   __size_of_strcpy 005E  
                 __size_of_strlen 0050                         _T2CONbits 000FBD  
                    __size_of_abs 0040                      __size_of_pad 00C6  
                         _isdigit 52FE                        ??___xxtofl 0005  
                ___awmod@dividend 0001                           _isspace 4ECE  
                       _T2HLTbits 000FBE                           _isupper 528E  
                         efgtoa@c 0042                           efgtoa@d 0078  
                         efgtoa@e 0090                           efgtoa@f 003E  
                         efgtoa@g 008C                           efgtoa@h 0082  
                         efgtoa@i 008A                           efgtoa@l 0086  
                         efgtoa@m 0072                           efgtoa@n 0092  
                         efgtoa@p 007C                           efgtoa@t 006C  
                         efgtoa@u 0094                           efgtoa@w 007E  
                   _RxBufWriteCnt 00FA                           atoi@neg 000E  
                         _sprintf 4E7C                           _tolower 4D60  
            ??_I2C_2_Master_Start 0002              ??_I2C_2_Master_Write 0002  
                         _strncmp 479A              end_of_initialization 5144  
                         floorf@e 0036                           floorf@m 0032  
                         floorf@u 0038                           floorf@x 0028  
                ADC_getval@tmpval 0001                           fputc@fp 0003  
            __size_of_USART4_init 0020                           fputs@fp 000C  
               __end_of_vfpfcnvrt 2B36                        efgtoa@mode 0081  
                      efgtoa@sign 007A                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                      ??_vfprintf 0058      colourclick_writetoaddr@value 0003  
                         strcpy@d 0009                           strlen@a 0003  
                         strcpy@s 0007                           strlen@s 0001  
                   _DCmotors_init 50B0                         _PORTFbits 000F8E  
                     ___fladd@grs 0010                     ___xxtofl@sign 0009  
                       _TRISAbits 000F81                         _TRISCbits 000F83  
                       _TRISDbits 000F84                         _TRISEbits 000F85  
                       _TRISFbits 000F86                         _TRISGbits 000F87  
                       _TRISHbits 000F88                       ___fldiv@grs 0022  
                     ___fldiv@rem 001B     __size_of_colourclick_readRGBC 005E  
               __size_of_ADC_init 001A           ??_I2C_2_Master_RepStart 0002  
            colourclick_readB@tmp 000A              colourclick_readC@tmp 000A  
      __size_of_checkbatterylevel 0020              colourclick_readG@tmp 000A  
                     _CM1CON0bits 000ED0                       _CM1CON1bits 000ED1  
            colourclick_readR@tmp 000A                       ___flmul@grs 000E  
                    _EUSART4RXbuf 0178                      _EUSART4TXbuf 0200  
       sendCharSerial4@charToSend 0001                        main@motorL 00D8  
                      main@motorR 00E1                    __end_of___flge 469C  
      colourclick_readRGBC@tmpval 000C                    __end_of___fleq 4CFA  
                  ?_DCmotors_init 0001                       vfpfcnvrt@ap 004C  
                     vfpfcnvrt@cp 00A0                       vfpfcnvrt@ct 00AA  
                     vfpfcnvrt@fp 0048                       vfpfcnvrt@ll 0098  
                  __end_of___wmul 53DE                    __end_of_efgtoa 1AE4  
                  __end_of_floorf 3CB0                        floorf@F527 018C  
                  __end_of_strcpy 4E1E                    __end_of_strlen 4F70  
             start_initialization 5100                       __end_of_abs 5256  
                     __end_of_pad 4ADC                     _TxBufWriteCnt 00F8  
                _unknowncard_flag 00F5                   _returnhome_flag 00F4  
        __size_of_sendCharSerial4 0018             __end_of___fpclassifyf 479A  
    __size_of_colourcards_testing 0A6A                       vfprintf@fmt 0054  
        ?_colourclick_writetoaddr 0003                          ??___flge 0022  
                        ??___fleq 0009      __end_of_colourclickLEDs_init 54CE  
                        ??___wmul 0005          __end_of_colourclick_init 528E  
        colourcards_testing@B_rel 0174                          ??_efgtoa 0043  
        colourcards_testing@G_rel 0170                       __pdataBANK1 01E8  
                        ??_floorf 002C          colourcards_testing@R_rel 016C  
                        ??_strcpy 0005                          ??_strlen 0003  
                       ___fladd@a 0005                         ___fladd@b 0001  
                       ___fldiv@a 0013                         ___fldiv@b 000F  
                       ___flmul@a 0005                         ___flmul@b 0001  
                       ___flsub@a 001E                         ___flsub@b 001A  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100  
                ___aodiv@dividend 0001           __size_of_buggyLEDs_init 0016  
               __size_of___xxtofl 01B4                         _atoi$3040 0014  
                       _atoi$3041 0012                         _atoi$3039 0010  
                       __pnvBANK0 00FB                       _efgtoa$2961 0060  
                     _efgtoa$2970 0066                       _efgtoa$2962 0062  
                     _efgtoa$2971 0068                       _efgtoa$2972 006A  
                     _efgtoa$2966 0064                         _dtoa$2937 002E  
                     _clear_lower 0196                       _clear_upper 0194  
                 ??_DCmotors_init 0001                          ?___aodiv 0001  
                        ?___fladd 0001                          ?___aomod 0001  
                        ?___fldiv 000F                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 0001  
                        ?___flsub 001A                          ?___fltol 0001  
            I2C_2_Master_Read@ack 0003                 __size_of_vfprintf 0066  
            I2C_2_Master_Read@tmp 0004                       __smallconst 0E00  
                        ?_isdigit 0001                 _I2C_2_Master_Idle 5390  
               _I2C_2_Master_Init 5366                 _I2C_2_Master_Read 51D4  
               _I2C_2_Master_Stop 54E6                          ?_isspace 0001  
                        ?_isupper 0001                      _RxBufReadCnt 00F9  
                        _ADC_init 5460                ?_I2C_2_Master_Idle 0001  
              ?_I2C_2_Master_Init 0001                ?_I2C_2_Master_Read 0001  
              ?_I2C_2_Master_Stop 0001                          ?_sprintf 00AE  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_putch 0002      __end_of_clicker2buttons_init 54E6  
               _sendStringSerial4 5336               ??_I2C_2_Master_Idle 0001  
             ??_I2C_2_Master_Init 0001               ??_I2C_2_Master_Read 0002  
                  ___wmul@product 0005                          _LATAbits 000F79  
             ??_I2C_2_Master_Stop 0002                          _LATCbits 000F7B  
               _colourclickLEDs_C 53DE                          _LATDbits 000F7C  
                        _LATEbits 000F7D                          _LATFbits 000F7E  
                        _LATGbits 000F7F                          _LATHbits 000F80  
                        _PIE0bits 000E29                ?_sendStringSerial4 0002  
                        _PIE4bits 000E2D                ?_colourclickLEDs_C 0001  
                        _PIR0bits 000E33                          _PIR4bits 000E37  
               ??_sendCharSerial4 0001                          _SSP2CON2 000EDA  
             ??_sendStringSerial4 0004                          _SSP2STAT 000ED8  
             ??_colourclickLEDs_C 0001                 _colourclick_readB 5060  
               _colourclick_readC 5010                 _colourclick_readG 4FC0  
               _colourclick_readR 4F70                         _vfpfcnvrt 254E  
                      _ADCON0bits 000F60         __end_of_I2C_2_Master_Idle 53B8  
       __end_of_I2C_2_Master_Init 5390         __end_of_I2C_2_Master_Read 5216  
               ___wmul@multiplier 0001                ?_colourclick_readB 0005  
              ?_colourclick_readC 0005                ?_colourclick_readG 0005  
              ?_colourclick_readR 0005         __end_of_I2C_2_Master_Stop 54F0  
     I2C_2_Master_Write@data_byte 0002                      _TxBufReadCnt 00F7  
                    _isspace$3070 0007                        _CM1NCHbits 000ED2  
             ??_colourclick_readB 0007               ??_colourclick_readC 0007  
             ??_colourclick_readG 0007               ??_colourclick_readR 0007  
                      _CM1PCHbits 000ED3                        vfpfcnvrt@c 00AD  
                      vfpfcnvrt@f 00A6                     ??_USART4_init 0001  
                       copy_data0 5114         __end_of_sendStringSerial4 5366  
     __size_of_I2C_2_Master_Start 000A              _colourclickLEDs_init 54C0  
     __size_of_I2C_2_Master_Write 000C         __end_of_colourclickLEDs_C 5400  
  __size_of_I2C_2_Master_RepStart 000A     __end_of_I2C_2_Master_RepStart 5504  
                        __Hrparam 0000                        _ADC_getval 5492  
    __end_of_colourclick_readRGBC 4E7C                        vfprintf@ap 0056  
                        __Lrparam 0000                        vfprintf@fp 0052  
       __end_of_colourclick_readB 50B0         __end_of_colourclick_readC 5060  
       __end_of_colourclick_readG 5010         __end_of_colourclick_readR 4FC0  
         colourcards_testing@buf1 0100                  __size_of___aodiv 0188  
                __size_of___fladd 04C0                  __size_of___aomod 0164  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flneg 0038                  __size_of___awmod 00B0  
                __size_of___flmul 042A                  __size_of___flsub 0046  
                __size_of___fltol 0106                        ?_vfpfcnvrt 0048  
                 ___aodiv@divisor 0009                   ___aodiv@counter 0011  
             _colourcards_testing 1AE4                        _ANSELDbits 000EA7  
              ___fpclassifyf@F465 0190                        _ANSELFbits 000EB4  
                      sprintf@fmt 00B0                          ___xxtofl 3CB0  
                  _buggyLEDs_init 54AA                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 479A  
                        __ptext11 4008                          __ptext20 2B36  
                        __ptext12 0E8C                          __ptext21 52C6  
                        __ptext13 4D60                          __ptext30 4F20  
                        __ptext22 2FF6                          __ptext14 528E  
                        __ptext31 5190                          __ptext23 4598  
                        __ptext15 4DC0                          __ptext40 53B8  
                        __ptext32 494C                          __ptext24 4C50  
                        __ptext16 3A9E                          __ptext41 5336  
                        __ptext33 5516                          __ptext25 3420  
                        __ptext17 469C                          __ptext50 54F0  
                        __ptext42 547A                          __ptext34 5216  
                        __ptext26 4BA0                          __ptext18 4492  
                        __ptext51 54FA                          __ptext43 4E1E  
                        __ptext35 432E                          __ptext27 4ADC  
                        __ptext19 514A                          __ptext60 5504  
                        __ptext52 51D4                          __ptext44 4F70  
                        __ptext36 41A6                          __ptext28 37BA  
                        __ptext61 54AA                          __ptext53 5390  
                        __ptext45 4FC0                          __ptext37 3E64  
                        __ptext29 4A16                          __ptext62 5460  
                        __ptext54 3CB0                          __ptext46 5010  
                        __ptext38 4ECE                          __ptext55 5420  
                        __ptext47 5060                          __ptext39 52FE  
                        __ptext56 5492                          __ptext48 54CE  
                        __ptext57 5440                          __ptext49 54E6  
                        __ptext58 50B0                          __ptext59 54DA  
                __size_of_isupper 0038         colourcards_testing@tmpval 005A  
           ?_colourclickLEDs_init 0001                      _SSP2CON1bits 000ED9  
                    _SSP2CON2bits 000EDA                  __size_of_sprintf 0052  
                __size_of_tolower 0060                        strcpy@dest 0001  
                __size_of_strncmp 00E2              colourcards_testing@B 0168  
            colourcards_testing@C 016A              colourcards_testing@G 0166  
            colourcards_testing@R 0164              ?_colourcards_testing 005A  
                   __size_of_atoi 01A4                     __size_of_main 00D0  
                   __size_of_dtoa 02E4                     __size_of_stoa 019E  
             __end_of_USART4_init 5460                  _interrupts_lower 00F2  
                        efgtoa@fp 003C                          efgtoa@ne 0070  
                        efgtoa@pp 006E                          efgtoa@ou 0074  
                _interrupts_upper 00FB                         stoa@F1163 01E8  
                        isa$xinst 000000                        _RC4STAbits 000EE7  
                        _vfprintf 4CFA                 ?_colourclick_init 0001  
              ??_colourclick_init 0005        __size_of_I2C_2_Master_Idle 0028  
      __size_of_I2C_2_Master_Init 002A        __size_of_I2C_2_Master_Read 0042  
                ___aomod@dividend 0001              _clicker2buttons_init 54DA  
      __size_of_I2C_2_Master_Stop 000A            __end_of_buggyLEDs_init 54C0  
                  _vfpfcnvrt$3002 00A4                    _vfpfcnvrt$2997 00A2  
                      _INTCONbits 000FF2  __size_of_colourclick_writetoaddr 0020  
  colourclick_writetoaddr@address 0004                          isdigit@c 0001  
                     _PWM6CONbits 000FA4        __size_of_sendStringSerial4 0030  
                     _PWM7CONbits 000FA1        __size_of_colourclickLEDs_C 0022  
                       sprintf@ap 00C8                      _DAC1CON0bits 000EC6  
                    _DAC1CON1bits 000EC7             ??_colourcards_testing 005C  
                        isspace@c 0001                         strcpy@src 0003  
                        isupper@c 0001                         strncmp@_l 0001  
                       strncmp@_r 0003                       ?_ADC_getval 0001  
                     efgtoa@nmode 0080        __size_of_colourclick_readB 0050  
      __size_of_colourclick_readC 0050        __size_of_colourclick_readG 0050  
      __size_of_colourclick_readR 0050                   ___aomod@divisor 0009  
                     ??_vfpfcnvrt 004E                          stoa@nuls 000F  
                 ___aomod@counter 0011             ?_clicker2buttons_init 0001  
                        sprintf@f 00CA                          tolower@c 0007  
                        sprintf@s 00AE                   ?_buggyLEDs_init 0001  
          __size_of___fpclassifyf 00FE                        _SSP2DATPPS 000E1D  
                      _SSP2CLKPPS 000E1C                          strncmp@l 0008  
                        strncmp@n 0005                          strncmp@r 000A  
                  _DCmotors_lower 00FE            ??_colourclickLEDs_init 0002  
                  _DCmotors_upper 00FD              _colourclick_readRGBC 4E1E  
                   ___fladd@signs 000D                       _USART4_init 5440  
                      _TX4STAbits 000EE8                      ___aodiv@sign 0012  
                 _sendCharSerial4 547A                      ___fladd@aexp 000E  
                    ___fladd@bexp 000F                      ___aomod@sign 0012  
