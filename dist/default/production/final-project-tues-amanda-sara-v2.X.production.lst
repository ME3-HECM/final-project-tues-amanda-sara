

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 23:02:06 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 05/05/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	nvBANK0
    95  0000DB                     __pnvBANK0:
    96                           	callstack 0
    97  0000DB                     _interrupts_upperbound:
    98                           	callstack 0
    99  0000DB                     	ds	2
   100  0000DD                     _DCmotors_turntime:
   101                           	callstack 0
   102  0000DD                     	ds	2
   103  0000                     _CM1CON1bits	set	3793
   104  0000                     _CM1CON0bits	set	3792
   105  0000                     _CM1PCHbits	set	3795
   106  0000                     _CM1NCHbits	set	3794
   107  0000                     _DAC1CON1bits	set	3783
   108  0000                     _DAC1CON0bits	set	3782
   109  0000                     _RC7PPS	set	3689
   110  0000                     _RE2PPS	set	3700
   111  0000                     _PIE4bits	set	3629
   112  0000                     _TX4REG	set	3812
   113  0000                     _RC4REG	set	3811
   114  0000                     _PIR4bits	set	3639
   115  0000                     _RC4STAbits	set	3815
   116  0000                     _SP4BRGH	set	3814
   117  0000                     _SP4BRGL	set	3813
   118  0000                     _TX4STAbits	set	3816
   119  0000                     _BAUD4CONbits	set	3817
   120  0000                     _RX4PPS	set	3605
   121  0000                     _RC0PPS	set	3682
   122  0000                     _SSP2BUF	set	3797
   123  0000                     _SSP2CON2bits	set	3802
   124  0000                     _SSP2CON2	set	3802
   125  0000                     _SSP2STAT	set	3800
   126  0000                     _RD6PPS	set	3696
   127  0000                     _RD5PPS	set	3695
   128  0000                     _SSP2CLKPPS	set	3612
   129  0000                     _SSP2DATPPS	set	3613
   130  0000                     _ANSELDbits	set	3751
   131  0000                     _SSP2ADD	set	3798
   132  0000                     _SSP2CON1bits	set	3801
   133  0000                     _ANSELFbits	set	3764
   134  0000                     _PIR0bits	set	3635
   135  0000                     _PIE0bits	set	3625
   136  0000                     _ADPCH	set	3935
   137  0000                     _ADREFbits	set	3928
   138  0000                     _PWM7CONbits	set	4001
   139  0000                     _PWM6CONbits	set	4004
   140  0000                     _LATCbits	set	3963
   141  0000                     _LATEbits	set	3965
   142  0000                     _TRISEbits	set	3973
   143  0000                     _T2PR	set	4028
   144  0000                     _T2CLKCONbits	set	4031
   145  0000                     _T2HLTbits	set	4030
   146  0000                     _T2CONbits	set	4029
   147  0000                     _TRISCbits	set	3971
   148  0000                     _TRISAbits	set	3969
   149  0000                     _TRISGbits	set	3975
   150  0000                     _TRISHbits	set	3976
   151  0000                     _TRISDbits	set	3972
   152  0000                     _ADRESH	set	3940
   153  0000                     _ADCON0bits	set	3936
   154  0000                     _TRISFbits	set	3974
   155  0000                     _LATFbits	set	3966
   156  0000                     _LATAbits	set	3961
   157  0000                     _LATGbits	set	3967
   158  0000                     _INTCONbits	set	4082
   159  0000                     _LATHbits	set	3968
   160  0000                     _LATDbits	set	3964
   161  0000                     _PORTFbits	set	3982
   162  0000                     _LATG	set	3967
   163  0000                     _PWM7DCH	set	4000
   164  0000                     _LATE	set	3965
   165  0000                     _PWM6DCH	set	4003
   166                           
   167                           	psect	smallconst
   168  000E00                     __psmallconst:
   169                           	callstack 0
   170  000E00  00                 	db	0
   171  000E01                     STR_1:
   172                           
   173                           ; BSR set to: 15
   174  000E01  52                 	db	82	;'R'
   175  000E02  47                 	db	71	;'G'
   176  000E03  42                 	db	66	;'B'
   177  000E04  43                 	db	67	;'C'
   178  000E05  3A                 	db	58	;':'
   179  000E06  20                 	db	32
   180  000E07  25                 	db	37
   181  000E08  69                 	db	105	;'i'
   182  000E09  20                 	db	32
   183  000E0A  25                 	db	37
   184  000E0B  69                 	db	105	;'i'
   185  000E0C  20                 	db	32
   186  000E0D  25                 	db	37
   187  000E0E  69                 	db	105	;'i'
   188  000E0F  20                 	db	32
   189  000E10  25                 	db	37
   190  000E11  69                 	db	105	;'i'
   191  000E12  20                 	db	32
   192  000E13  20                 	db	32
   193  000E14  20                 	db	32
   194  000E15  20                 	db	32
   195  000E16  20                 	db	32
   196  000E17  52                 	db	82	;'R'
   197  000E18  47                 	db	71	;'G'
   198  000E19  42                 	db	66	;'B'
   199  000E1A  43                 	db	67	;'C'
   200  000E1B  5F                 	db	95	;'_'
   201  000E1C  72                 	db	114	;'r'
   202  000E1D  65                 	db	101	;'e'
   203  000E1E  6C                 	db	108	;'l'
   204  000E1F  3A                 	db	58	;':'
   205  000E20  20                 	db	32
   206  000E21  25                 	db	37
   207  000E22  2E                 	db	46
   208  000E23  33                 	db	51	;'3'
   209  000E24  66                 	db	102	;'f'
   210  000E25  20                 	db	32
   211  000E26  25                 	db	37
   212  000E27  2E                 	db	46
   213  000E28  33                 	db	51	;'3'
   214  000E29  66                 	db	102	;'f'
   215  000E2A  20                 	db	32
   216  000E2B  25                 	db	37
   217  000E2C  2E                 	db	46
   218  000E2D  33                 	db	51	;'3'
   219  000E2E  66                 	db	102	;'f'
   220  000E2F  20                 	db	32
   221  000E30  20                 	db	32
   222  000E31  20                 	db	32
   223  000E32  20                 	db	32
   224  000E33  20                 	db	32
   225  000E34  43                 	db	67	;'C'
   226  000E35  6F                 	db	111	;'o'
   227  000E36  6C                 	db	108	;'l'
   228  000E37  6F                 	db	111	;'o'
   229  000E38  75                 	db	117	;'u'
   230  000E39  72                 	db	114	;'r'
   231  000E3A  3A                 	db	58	;':'
   232  000E3B  20                 	db	32
   233  000E3C  25                 	db	37
   234  000E3D  73                 	db	115	;'s'
   235  000E3E  0A                 	db	10
   236  000E3F  0D                 	db	13
   237  000E40  00                 	db	0
   238  000E41                     
   239                           ; BSR set to: 15
   240  000E41  52                 	db	82	;'R'
   241  000E42  47                 	db	71	;'G'
   242  000E43  42                 	db	66	;'B'
   243  000E44  43                 	db	67	;'C'
   244  000E45  3A                 	db	58	;':'
   245  000E46  20                 	db	32
   246  000E47  25                 	db	37
   247  000E48  69                 	db	105	;'i'
   248  000E49  20                 	db	32
   249  000E4A  25                 	db	37
   250  000E4B  69                 	db	105	;'i'
   251  000E4C  20                 	db	32
   252  000E4D  25                 	db	37
   253  000E4E  69                 	db	105	;'i'
   254  000E4F  20                 	db	32
   255  000E50  25                 	db	37
   256  000E51  69                 	db	105	;'i'
   257  000E52  20                 	db	32
   258  000E53  20                 	db	32
   259  000E54  20                 	db	32
   260  000E55  20                 	db	32
   261  000E56  20                 	db	32
   262  000E57  54                 	db	84	;'T'
   263  000E58  68                 	db	104	;'h'
   264  000E59  72                 	db	114	;'r'
   265  000E5A  65                 	db	101	;'e'
   266  000E5B  73                 	db	115	;'s'
   267  000E5C  68                 	db	104	;'h'
   268  000E5D  6F                 	db	111	;'o'
   269  000E5E  6C                 	db	108	;'l'
   270  000E5F  64                 	db	100	;'d'
   271  000E60  3A                 	db	58	;':'
   272  000E61  20                 	db	32
   273  000E62  25                 	db	37
   274  000E63  69                 	db	105	;'i'
   275  000E64  20                 	db	32
   276  000E65  25                 	db	37
   277  000E66  69                 	db	105	;'i'
   278  000E67  20                 	db	32
   279  000E68  25                 	db	37
   280  000E69  69                 	db	105	;'i'
   281  000E6A  0A                 	db	10
   282  000E6B  0D                 	db	13
   283  000E6C  00                 	db	0
   284  000E6D                     STR_14:
   285                           
   286                           ; BSR set to: 15
   287  000E6D  6C                 	db	108	;'l'
   288  000E6E  69                 	db	105	;'i'
   289  000E6F  67                 	db	103	;'g'
   290  000E70  68                 	db	104	;'h'
   291  000E71  74                 	db	116	;'t'
   292  000E72  20                 	db	32
   293  000E73  62                 	db	98	;'b'
   294  000E74  6C                 	db	108	;'l'
   295  000E75  75                 	db	117	;'u'
   296  000E76  65                 	db	101	;'e'
   297  000E77  00                 	db	0
   298  000E78                     
   299                           ; BSR set to: 15
   300  000E78  75                 	db	117	;'u'
   301  000E79  6E                 	db	110	;'n'
   302  000E7A  6B                 	db	107	;'k'
   303  000E7B  6E                 	db	110	;'n'
   304  000E7C  6F                 	db	111	;'o'
   305  000E7D  77                 	db	119	;'w'
   306  000E7E  6E                 	db	110	;'n'
   307  000E7F  00                 	db	0
   308  000E80                     
   309                           ; BSR set to: 15
   310  000E80  6F                 	db	111	;'o'
   311  000E81  72                 	db	114	;'r'
   312  000E82  61                 	db	97	;'a'
   313  000E83  6E                 	db	110	;'n'
   314  000E84  67                 	db	103	;'g'
   315  000E85  65                 	db	101	;'e'
   316  000E86  00                 	db	0
   317  000E87                     
   318                           ; BSR set to: 15
   319  000E87  79                 	db	121	;'y'
   320  000E88  65                 	db	101	;'e'
   321  000E89  6C                 	db	108	;'l'
   322  000E8A  6C                 	db	108	;'l'
   323  000E8B  6F                 	db	111	;'o'
   324  000E8C  77                 	db	119	;'w'
   325  000E8D  00                 	db	0
   326  000E8E                     
   327                           ; BSR set to: 15
   328  000E8E  77                 	db	119	;'w'
   329  000E8F  68                 	db	104	;'h'
   330  000E90  69                 	db	105	;'i'
   331  000E91  74                 	db	116	;'t'
   332  000E92  65                 	db	101	;'e'
   333  000E93  00                 	db	0
   334  000E94                     
   335                           ; BSR set to: 15
   336  000E94  67                 	db	103	;'g'
   337  000E95  72                 	db	114	;'r'
   338  000E96  65                 	db	101	;'e'
   339  000E97  65                 	db	101	;'e'
   340  000E98  6E                 	db	110	;'n'
   341  000E99  00                 	db	0
   342  000E9A                     
   343                           ; BSR set to: 15
   344  000E9A  70                 	db	112	;'p'
   345  000E9B  69                 	db	105	;'i'
   346  000E9C  6E                 	db	110	;'n'
   347  000E9D  6B                 	db	107	;'k'
   348  000E9E  00                 	db	0
   349  000E9F                     
   350                           ; BSR set to: 15
   351  000E9F  72                 	db	114	;'r'
   352  000EA0  65                 	db	101	;'e'
   353  000EA1  64                 	db	100	;'d'
   354  000EA2  00                 	db	0
   355  000EA3  00                 	db	0	; dummy byte at the end
   356  0000                     
   357                           ; #config settings
   358                           
   359                           	psect	cinit
   360  0035E4                     __pcinit:
   361                           	callstack 0
   362  0035E4                     start_initialization:
   363                           	callstack 0
   364  0035E4                     __initialization:
   365                           	callstack 0
   366                           
   367                           ; Clear objects allocated to BANK0 (85 bytes)
   368  0035E4  EE00  F060         	lfsr	0,__pbssBANK0
   369  0035E8  0E55               	movlw	85
   370  0035EA                     clear_0:
   371  0035EA  6AEE               	clrf	postinc0,c
   372  0035EC  06E8               	decf	wreg,f,c
   373  0035EE  E1FD               	bnz	clear_0
   374                           
   375                           ; Clear objects allocated to COMRAM (8 bytes)
   376  0035F0  EE00  F057         	lfsr	0,__pbssCOMRAM
   377  0035F4  0E08               	movlw	8
   378  0035F6                     clear_1:
   379  0035F6  6AEE               	clrf	postinc0,c
   380  0035F8  06E8               	decf	wreg,f,c
   381  0035FA  E1FD               	bnz	clear_1
   382  0035FC                     end_of_initialization:
   383                           	callstack 0
   384  0035FC                     __end_of__initialization:
   385                           	callstack 0
   386  0035FC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   387  0035FE  6EF8               	movwf	tblptru,c
   388  003600  0E0E               	movlw	high __Lsmallconst
   389  003602  6EF7               	movwf	tblptrh,c
   390  003604  0100               	movlb	0
   391  003606  EF0B  F017         	goto	_main	;jump to C main() function
   392                           
   393                           	psect	bssCOMRAM
   394  000057                     __pbssCOMRAM:
   395                           	callstack 0
   396  000057                     _interrupts_lowerbound:
   397                           	callstack 0
   398  000057                     	ds	2
   399  000059                     _returnhome_flag:
   400                           	callstack 0
   401  000059                     	ds	1
   402  00005A                     _unknowncard_flag:
   403                           	callstack 0
   404  00005A                     	ds	1
   405  00005B                     _TxBufReadCnt:
   406                           	callstack 0
   407  00005B                     	ds	1
   408  00005C                     _TxBufWriteCnt:
   409                           	callstack 0
   410  00005C                     	ds	1
   411  00005D                     _RxBufReadCnt:
   412                           	callstack 0
   413  00005D                     	ds	1
   414  00005E                     _RxBufWriteCnt:
   415                           	callstack 0
   416  00005E                     	ds	1
   417                           
   418                           	psect	bssBANK0
   419  000060                     __pbssBANK0:
   420                           	callstack 0
   421  000060                     _EUSART4TXbuf:
   422                           	callstack 0
   423  000060                     	ds	60
   424  00009C                     _EUSART4RXbuf:
   425                           	callstack 0
   426  00009C                     	ds	20
   427  0000B0                     _clear_upper:
   428                           	callstack 0
   429  0000B0                     	ds	2
   430  0000B2                     _clear_lower:
   431                           	callstack 0
   432  0000B2                     	ds	2
   433  0000B4                     _colourcard_flag:
   434                           	callstack 0
   435  0000B4                     	ds	1
   436                           
   437                           	psect	cstackBANK0
   438  0000B5                     __pcstackBANK0:
   439                           	callstack 0
   440  0000B5                     colourcards_readRGBC@R_rel:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0x0
   444  0000B5                     	ds	4
   445  0000B9                     colourcards_readRGBC@G_rel:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x4
   449  0000B9                     	ds	4
   450  0000BD                     colourcards_readRGBC@B_rel:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x8
   454  0000BD                     	ds	4
   455  0000C1                     main@current:
   456                           	callstack 0
   457                           
   458                           ; 8 bytes @ 0xC
   459  0000C1                     	ds	8
   460  0000C9                     main@motorL:
   461                           	callstack 0
   462                           
   463                           ; 9 bytes @ 0x14
   464  0000C9                     	ds	9
   465  0000D2                     main@motorR:
   466                           	callstack 0
   467                           
   468                           ; 9 bytes @ 0x1D
   469  0000D2                     	ds	9
   470                           
   471                           	psect	cstackCOMRAM
   472  000001                     __pcstackCOMRAM:
   473                           	callstack 0
   474  000001                     ??_I2C_2_Master_Idle:
   475  000001                     ?___wmul:
   476                           	callstack 0
   477  000001                     ?___xxtofl:
   478                           	callstack 0
   479  000001                     ADC_getval@tmpval:
   480                           	callstack 0
   481  000001                     colourclickLEDs_C@tog:
   482                           	callstack 0
   483  000001                     DCmotors_init@PWMperiod:
   484                           	callstack 0
   485  000001                     ___wmul@multiplier:
   486                           	callstack 0
   487  000001                     ___xxtofl@val:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x0
   491  000001                     	ds	1
   492  000002                     ??_I2C_2_Master_Read:
   493  000002                     I2C_2_Master_Write@data_byte:
   494                           	callstack 0
   495  000002                     checkbatterylevel@batterylevel:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x1
   499  000002                     	ds	1
   500  000003                     colourclick_writetoaddr@value:
   501                           	callstack 0
   502  000003                     I2C_2_Master_Read@ack:
   503                           	callstack 0
   504  000003                     ___wmul@multiplicand:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x2
   508  000003                     	ds	1
   509  000004                     colourclick_writetoaddr@address:
   510                           	callstack 0
   511  000004                     I2C_2_Master_Read@tmp:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x3
   515  000004                     	ds	1
   516  000005                     ??_colourclick_init:
   517  000005                     ??___xxtofl:
   518  000005                     ?_colourclick_readR:
   519                           	callstack 0
   520  000005                     ?_colourclick_readG:
   521                           	callstack 0
   522  000005                     ?_colourclick_readB:
   523                           	callstack 0
   524  000005                     ?_colourclick_readC:
   525                           	callstack 0
   526  000005                     ___wmul@product:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x4
   530  000005                     	ds	2
   531  000007                     ??_colourclick_readR:
   532  000007                     ??_colourclick_readG:
   533  000007                     ??_colourclick_readB:
   534  000007                     ??_colourclick_readC:
   535  000007                     ?___awdiv:
   536                           	callstack 0
   537  000007                     ___awdiv@dividend:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x6
   541  000007                     	ds	2
   542  000009                     ___xxtofl@sign:
   543                           	callstack 0
   544  000009                     ___awdiv@divisor:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x8
   548  000009                     	ds	1
   549  00000A                     ___xxtofl@exp:
   550                           	callstack 0
   551  00000A                     colourclick_readR@tmp:
   552                           	callstack 0
   553  00000A                     colourclick_readG@tmp:
   554                           	callstack 0
   555  00000A                     colourclick_readB@tmp:
   556                           	callstack 0
   557  00000A                     colourclick_readC@tmp:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x9
   561  00000A                     	ds	1
   562  00000B                     ___awdiv@counter:
   563                           	callstack 0
   564  00000B                     ___xxtofl@arg:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0xA
   568  00000B                     	ds	1
   569  00000C                     ___awdiv@sign:
   570                           	callstack 0
   571  00000C                     colourclick_readRGBC@tmpval:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xB
   575  00000C                     	ds	1
   576  00000D                     ___awdiv@quotient:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0xC
   580  00000D                     	ds	1
   581  00000E                     
   582                           ; 1 bytes @ 0xD
   583  00000E                     	ds	1
   584  00000F                     ?___fldiv:
   585                           	callstack 0
   586  00000F                     ?___flmul:
   587                           	callstack 0
   588  00000F                     DCmotors_setPWM@m:
   589                           	callstack 0
   590  00000F                     ___flge@ff1:
   591                           	callstack 0
   592  00000F                     ___fldiv@b:
   593                           	callstack 0
   594  00000F                     ___flmul@b:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0xE
   598  00000F                     	ds	2
   599  000011                     ??_DCmotors_setPWM:
   600                           
   601                           ; 1 bytes @ 0x10
   602  000011                     	ds	2
   603  000013                     ___flge@ff2:
   604                           	callstack 0
   605  000013                     ___fldiv@a:
   606                           	callstack 0
   607  000013                     ___flmul@a:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x12
   611  000013                     	ds	4
   612  000017                     ??___fldiv:
   613  000017                     ??___flmul:
   614  000017                     ??___flge:
   615                           
   616                           ; 1 bytes @ 0x16
   617  000017                     	ds	1
   618  000018                     DCmotors_setPWM@PWMduty:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x17
   622  000018                     	ds	2
   623  00001A                     forward@mL:
   624                           	callstack 0
   625  00001A                     reverse@mL:
   626                           	callstack 0
   627  00001A                     stop@mL:
   628                           	callstack 0
   629  00001A                     right@mL:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x19
   633  00001A                     	ds	1
   634  00001B                     ___flmul@sign:
   635                           	callstack 0
   636  00001B                     ___fldiv@rem:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x1A
   640  00001B                     	ds	1
   641  00001C                     forward@mR:
   642                           	callstack 0
   643  00001C                     reverse@mR:
   644                           	callstack 0
   645  00001C                     stop@mR:
   646                           	callstack 0
   647  00001C                     right@mR:
   648                           	callstack 0
   649  00001C                     ___flmul@grs:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x1B
   653  00001C                     	ds	2
   654  00001E                     right@deg:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x1D
   658  00001E                     	ds	1
   659  00001F                     ___fldiv@sign:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x1E
   663  00001F                     	ds	1
   664  000020                     ??_right:
   665  000020                     ___flmul@aexp:
   666                           	callstack 0
   667  000020                     ___fldiv@new_exp:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x1F
   671  000020                     	ds	1
   672  000021                     ___flmul@bexp:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x20
   676  000021                     	ds	1
   677  000022                     right@delay:
   678                           	callstack 0
   679  000022                     ___fldiv@grs:
   680                           	callstack 0
   681  000022                     ___flmul@prod:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x21
   685  000022                     	ds	2
   686  000024                     right@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x23
   690  000024                     	ds	2
   691  000026                     ___fldiv@bexp:
   692                           	callstack 0
   693  000026                     ___flmul@temp:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x25
   697  000026                     	ds	1
   698  000027                     ___fldiv@aexp:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x26
   702  000027                     	ds	1
   703  000028                     ?___fladd:
   704                           	callstack 0
   705  000028                     ___fladd@b:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x27
   709  000028                     	ds	4
   710  00002C                     ___fladd@a:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x2B
   714  00002C                     	ds	4
   715  000030                     ??___fladd:
   716                           
   717                           ; 1 bytes @ 0x2F
   718  000030                     	ds	4
   719  000034                     ___fladd@signs:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x33
   723  000034                     	ds	1
   724  000035                     ___fladd@aexp:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x34
   728  000035                     	ds	1
   729  000036                     ___fladd@bexp:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x35
   733  000036                     	ds	1
   734  000037                     ___fladd@grs:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x36
   738  000037                     	ds	1
   739  000038                     left@mL:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x37
   743  000038                     	ds	2
   744  00003A                     left@mR:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x39
   748  00003A                     	ds	2
   749  00003C                     left@deg:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x3B
   753  00003C                     	ds	2
   754  00003E                     ??_left:
   755                           
   756                           ; 1 bytes @ 0x3D
   757  00003E                     	ds	1
   758  00003F                     left@delay:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x3E
   762  00003F                     	ds	4
   763  000043                     left@i:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x42
   767  000043                     	ds	2
   768  000045                     turnleft@mL:
   769                           	callstack 0
   770  000045                     turnright@mL:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x44
   774  000045                     	ds	2
   775  000047                     turnleft@mR:
   776                           	callstack 0
   777  000047                     turnright@mR:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x46
   781  000047                     	ds	2
   782  000049                     turnleft@deg:
   783                           	callstack 0
   784  000049                     turnright@deg:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x48
   788  000049                     	ds	2
   789  00004B                     colourcards_readRGBC@tmpval:
   790                           	callstack 0
   791  00004B                     DCmotors_testing@mL:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x4A
   795  00004B                     	ds	2
   796  00004D                     colourcards_readRGBC@mL:
   797                           	callstack 0
   798  00004D                     DCmotors_testing@mR:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x4C
   802  00004D                     	ds	2
   803  00004F                     ??_DCmotors_testing:
   804  00004F                     colourcards_readRGBC@mR:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x4E
   808  00004F                     	ds	2
   809  000051                     ??_colourcards_readRGBC:
   810                           
   811                           ; 1 bytes @ 0x50
   812  000051                     	ds	4
   813  000055                     ??_main:
   814                           
   815                           ; 1 bytes @ 0x54
   816  000055                     	ds	2
   817                           
   818 ;;
   819 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   820 ;;
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 7 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  motorR          9   29[BANK0 ] struct .
   828 ;;  motorL          9   20[BANK0 ] struct .
   829 ;;  current         8   12[BANK0 ] struct .
   830 ;;  PWMperiod       1    0        unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   841 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   843 ;;      Totals:         2      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;Total ram usage:       28 bytes
   845 ;; Hardware stack levels required when called: 5
   846 ;; This function calls:
   847 ;;		_ADC_init
   848 ;;		_DCmotors_init
   849 ;;		_DCmotors_testing
   850 ;;		_USART4_init
   851 ;;		_checkbatterylevel
   852 ;;		_colourcards_readRGBC
   853 ;;		_colourclickLEDs_C
   854 ;;		_colourclick_init
   855 ;;		_forward
   856 ;; This function is called by:
   857 ;;		Startup code after reset
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text0
   862  002E16                     __ptext0:
   863                           	callstack 0
   864  002E16                     _main:
   865                           	callstack 26
   866  002E16                     
   867                           ;main.c: 12:     DCmotors_turntime = 100;
   868  002E16  0E00               	movlw	0
   869  002E18  0100               	movlb	0	; () banked
   870  002E1A  6FDE               	movwf	(_DCmotors_turntime+1)& (0+255),b	;volatile
   871  002E1C  0E64               	movlw	100
   872  002E1E  6FDD               	movwf	_DCmotors_turntime& (0+255),b	;volatile
   873                           
   874                           ;main.c: 13:     interrupts_lowerbound = 0;
   875  002E20  0E00               	movlw	0
   876  002E22  6E58               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
   877  002E24  0E00               	movlw	0
   878  002E26  6E57               	movwf	_interrupts_lowerbound^0,c	;volatile
   879                           
   880                           ;main.c: 14:     interrupts_upperbound = 32767;
   881  002E28  0E7F               	movlw	127
   882  002E2A  6FDC               	movwf	(_interrupts_upperbound+1)& (0+255),b	;volatile
   883  002E2C  69DB               	setf	_interrupts_upperbound& (0+255),b	;volatile
   884                           
   885                           ;main.c: 15:     colourcard_flag = 0;
   886  002E2E  0E00               	movlw	0
   887  002E30  6FB4               	movwf	_colourcard_flag& (0+255),b	;volatile
   888                           
   889                           ;main.c: 16:     unknowncard_flag = 0;
   890  002E32  0E00               	movlw	0
   891  002E34  6E5A               	movwf	_unknowncard_flag^0,c	;volatile
   892                           
   893                           ;main.c: 17:     returnhome_flag = 0;
   894  002E36  0E00               	movlw	0
   895  002E38  6E59               	movwf	_returnhome_flag^0,c	;volatile
   896                           
   897                           ;main.c: 19:     DC_motor motorL;;main.c: 20:     motorL.power=0;
   898  002E3A  0E00               	movlw	0
   899  002E3C  6FC9               	movwf	main@motorL& (0+255),b
   900                           
   901                           ;main.c: 21:     motorL.direction=1;
   902  002E3E  0E01               	movlw	1
   903  002E40  6FCA               	movwf	(main@motorL+1)& (0+255),b
   904  002E42                     
   905                           ; BSR set to: 0
   906                           ;main.c: 22:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   907  002E42  0EA3               	movlw	163
   908  002E44  6FCB               	movwf	(main@motorL+2)& (0+255),b
   909  002E46  0E0F               	movlw	15
   910  002E48  6FCC               	movwf	(main@motorL+3)& (0+255),b
   911  002E4A                     
   912                           ; BSR set to: 0
   913                           ;main.c: 23:     motorL.dir_LAT=(unsigned char *)(&LATE);
   914  002E4A  0E7D               	movlw	125
   915  002E4C  6FCD               	movwf	(main@motorL+4)& (0+255),b
   916  002E4E  0E0F               	movlw	15
   917  002E50  6FCE               	movwf	(main@motorL+5)& (0+255),b
   918                           
   919                           ;main.c: 24:     motorL.dir_pin=4;
   920  002E52  0E04               	movlw	4
   921  002E54  6FCF               	movwf	(main@motorL+6)& (0+255),b
   922  002E56                     
   923                           ; BSR set to: 0
   924                           ;main.c: 25:     motorL.PWMperiod=PWMperiod;
   925  002E56  0E00               	movlw	0
   926  002E58  6FD1               	movwf	(main@motorL+8)& (0+255),b
   927  002E5A  0E63               	movlw	99
   928  002E5C  6FD0               	movwf	(main@motorL+7)& (0+255),b
   929                           
   930                           ;main.c: 27:     DC_motor motorR;;main.c: 28:     motorR.power=0;
   931  002E5E  0E00               	movlw	0
   932  002E60  6FD2               	movwf	main@motorR& (0+255),b
   933                           
   934                           ;main.c: 29:     motorR.direction=1;
   935  002E62  0E01               	movlw	1
   936  002E64  6FD3               	movwf	(main@motorR+1)& (0+255),b
   937  002E66                     
   938                           ; BSR set to: 0
   939                           ;main.c: 30:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   940  002E66  0EA0               	movlw	160
   941  002E68  6FD4               	movwf	(main@motorR+2)& (0+255),b
   942  002E6A  0E0F               	movlw	15
   943  002E6C  6FD5               	movwf	(main@motorR+3)& (0+255),b
   944  002E6E                     
   945                           ; BSR set to: 0
   946                           ;main.c: 31:     motorR.dir_LAT=(unsigned char *)(&LATG);
   947  002E6E  0E7F               	movlw	127
   948  002E70  6FD6               	movwf	(main@motorR+4)& (0+255),b
   949  002E72  0E0F               	movlw	15
   950  002E74  6FD7               	movwf	(main@motorR+5)& (0+255),b
   951                           
   952                           ;main.c: 32:     motorR.dir_pin=6;
   953  002E76  0E06               	movlw	6
   954  002E78  6FD8               	movwf	(main@motorR+6)& (0+255),b
   955  002E7A                     
   956                           ; BSR set to: 0
   957                           ;main.c: 33:     motorR.PWMperiod=PWMperiod;
   958  002E7A  0E00               	movlw	0
   959  002E7C  6FDA               	movwf	(main@motorR+8)& (0+255),b
   960  002E7E  0E63               	movlw	99
   961  002E80  6FD9               	movwf	(main@motorR+7)& (0+255),b
   962  002E82                     
   963                           ; BSR set to: 0
   964                           ;main.c: 35:     ADC_init();
   965  002E82  EC59  F01B         	call	_ADC_init	;wreg free
   966  002E86                     
   967                           ;main.c: 36:     colourclick_init();
   968  002E86  ECAD  F01A         	call	_colourclick_init	;wreg free
   969  002E8A                     
   970                           ;main.c: 37:     DCmotors_init(PWMperiod);
   971  002E8A  0E63               	movlw	99
   972  002E8C  EC16  F01A         	call	_DCmotors_init
   973  002E90                     
   974                           ;main.c: 38:     USART4_init();
   975  002E90  EC49  F01B         	call	_USART4_init	;wreg free
   976  002E94                     
   977                           ;main.c: 39:     checkbatterylevel();
   978  002E94  EC39  F01B         	call	_checkbatterylevel	;wreg free
   979  002E98                     
   980                           ;main.c: 51:     DCmotors_testing(&motorL, &motorR);
   981  002E98  0EC9               	movlw	low main@motorL
   982  002E9A  6E4B               	movwf	DCmotors_testing@mL^0,c
   983  002E9C  0E00               	movlw	high main@motorL
   984  002E9E  6E4C               	movwf	(DCmotors_testing@mL+1)^0,c
   985  002EA0  0ED2               	movlw	low main@motorR
   986  002EA2  6E4D               	movwf	DCmotors_testing@mR^0,c
   987  002EA4  0E00               	movlw	high main@motorR
   988  002EA6  6E4E               	movwf	(DCmotors_testing@mR+1)^0,c
   989  002EA8  EC2A  F012         	call	_DCmotors_testing	;wreg free
   990  002EAC                     l61:
   991  002EAC  A48E               	btfss	142,2,c	;volatile
   992  002EAE  EF5B  F017         	goto	u4251
   993  002EB2  EF5D  F017         	goto	u4250
   994  002EB6                     u4251:
   995  002EB6  EF64  F017         	goto	l65
   996  002EBA                     u4250:
   997  002EBA  B68E               	btfsc	142,3,c	;volatile
   998  002EBC  EF62  F017         	goto	u4261
   999  002EC0  EF64  F017         	goto	u4260
  1000  002EC4                     u4261:
  1001  002EC4  EF56  F017         	goto	l61
  1002  002EC8                     u4260:
  1003  002EC8                     l65:
  1004                           
  1005                           ;main.c: 57:     LATDbits.LATD3 = 1;
  1006  002EC8  867C               	bsf	124,3,c	;volatile
  1007  002ECA                     
  1008                           ;main.c: 58:     colourclickLEDs_C(1);
  1009  002ECA  0E01               	movlw	1
  1010  002ECC  EC18  F01B         	call	_colourclickLEDs_C
  1011  002ED0                     
  1012                           ;main.c: 59:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1013  002ED0  0E52               	movlw	82
  1014  002ED2  6E56               	movwf	(??_main+1)^0,c
  1015  002ED4  0E2B               	movlw	43
  1016  002ED6  6E55               	movwf	??_main^0,c
  1017  002ED8  0E00               	movlw	0
  1018  002EDA                     u4797:
  1019  002EDA  2EE8               	decfsz	wreg,f,c
  1020  002EDC  D7FE               	bra	u4797
  1021  002EDE  2E55               	decfsz	??_main^0,f,c
  1022  002EE0  D7FC               	bra	u4797
  1023  002EE2  2E56               	decfsz	(??_main+1)^0,f,c
  1024  002EE4  D7FA               	bra	u4797
  1025  002EE6  D000               	nop2	
  1026  002EE8                     
  1027                           ;main.c: 61:     forward(&motorL, &motorR);
  1028  002EE8  0EC9               	movlw	low main@motorL
  1029  002EEA  6E1A               	movwf	forward@mL^0,c
  1030  002EEC  0E00               	movlw	high main@motorL
  1031  002EEE  6E1B               	movwf	(forward@mL+1)^0,c
  1032  002EF0  0ED2               	movlw	low main@motorR
  1033  002EF2  6E1C               	movwf	forward@mR^0,c
  1034  002EF4  0E00               	movlw	high main@motorR
  1035  002EF6  6E1D               	movwf	(forward@mR+1)^0,c
  1036  002EF8  ECC7  F018         	call	_forward	;wreg free
  1037  002EFC                     l3951:
  1038                           
  1039                           ;main.c: 68:         if (colourcard_flag==1) {
  1040  002EFC  0100               	movlb	0	; () banked
  1041  002EFE  05B4               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1042  002F00  A4D8               	btfss	status,2,c
  1043  002F02  EF85  F017         	goto	u4271
  1044  002F06  EF87  F017         	goto	u4270
  1045  002F0A                     u4271:
  1046  002F0A  EF7E  F017         	goto	l3951
  1047  002F0E                     u4270:
  1048  002F0E                     
  1049                           ; BSR set to: 0
  1050                           ;main.c: 69:             colourcards_readRGBC(&current, &motorL, &motorR);
  1051  002F0E  0EC1               	movlw	low main@current
  1052  002F10  6E4B               	movwf	colourcards_readRGBC@tmpval^0,c
  1053  002F12  0E00               	movlw	high main@current
  1054  002F14  6E4C               	movwf	(colourcards_readRGBC@tmpval+1)^0,c
  1055  002F16  0EC9               	movlw	low main@motorL
  1056  002F18  6E4D               	movwf	colourcards_readRGBC@mL^0,c
  1057  002F1A  0E00               	movlw	high main@motorL
  1058  002F1C  6E4E               	movwf	(colourcards_readRGBC@mL+1)^0,c
  1059  002F1E  0ED2               	movlw	low main@motorR
  1060  002F20  6E4F               	movwf	colourcards_readRGBC@mR^0,c
  1061  002F22  0E00               	movlw	high main@motorR
  1062  002F24  6E50               	movwf	(colourcards_readRGBC@mR+1)^0,c
  1063  002F26  EC52  F007         	call	_colourcards_readRGBC	;wreg free
  1064  002F2A                     
  1065                           ;main.c: 70:             colourcard_flag = 0;
  1066  002F2A  0E00               	movlw	0
  1067  002F2C  0100               	movlb	0	; () banked
  1068  002F2E  6FB4               	movwf	_colourcard_flag& (0+255),b	;volatile
  1069  002F30  EF7E  F017         	goto	l3951
  1070  002F34  EF00  F000         	goto	start
  1071  002F38                     __end_of_main:
  1072                           	callstack 0
  1073                           
  1074 ;; *************** function _colourclick_init *****************
  1075 ;; Defined at:
  1076 ;;		line 15 in file "colour_click.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;Total ram usage:        1 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 3
  1097 ;; This function calls:
  1098 ;;		_I2C_2_Master_Init
  1099 ;;		_colourclickLEDs_init
  1100 ;;		_colourclick_writetoaddr
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text1
  1107  00355A                     __ptext1:
  1108                           	callstack 0
  1109  00355A                     _colourclick_init:
  1110                           	callstack 27
  1111  00355A                     
  1112                           ;colour_click.c: 18:     I2C_2_Master_Init();
  1113  00355A  ECC9  F01A         	call	_I2C_2_Master_Init	;wreg free
  1114  00355E                     
  1115                           ;colour_click.c: 21:   colourclick_writetoaddr(0x00, 0x01);
  1116  00355E  0E01               	movlw	1
  1117  003560  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1118  003562  0E00               	movlw	0
  1119  003564  EC29  F01B         	call	_colourclick_writetoaddr
  1120  003568                     
  1121                           ;colour_click.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1122  003568  0E3F               	movlw	63
  1123  00356A  6E05               	movwf	??_colourclick_init^0,c
  1124  00356C  0E55               	movlw	85
  1125  00356E                     u4807:
  1126  00356E  2EE8               	decfsz	wreg,f,c
  1127  003570  D7FE               	bra	u4807
  1128  003572  2E05               	decfsz	??_colourclick_init^0,f,c
  1129  003574  D7FC               	bra	u4807
  1130  003576  F000               	nop	
  1131  003578                     
  1132                           ;colour_click.c: 25:  colourclick_writetoaddr(0x00, 0x03);
  1133  003578  0E03               	movlw	3
  1134  00357A  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1135  00357C  0E00               	movlw	0
  1136  00357E  EC29  F01B         	call	_colourclick_writetoaddr
  1137  003582                     
  1138                           ;colour_click.c: 28:  colourclick_writetoaddr(0x01, 0xD5);
  1139  003582  0ED5               	movlw	213
  1140  003584  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1141  003586  0E01               	movlw	1
  1142  003588  EC29  F01B         	call	_colourclick_writetoaddr
  1143  00358C                     
  1144                           ;colour_click.c: 30:     colourclickLEDs_init();
  1145  00358C  EC7D  F01B         	call	_colourclickLEDs_init	;wreg free
  1146  003590  0012               	return		;funcret
  1147  003592                     __end_of_colourclick_init:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _colourclick_writetoaddr *****************
  1151 ;; Defined at:
  1152 ;;		line 39 in file "colour_click.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  address         1    wreg     unsigned char 
  1155 ;;  value           1    2[COMRAM] unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  address         1    3[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;Total ram usage:        2 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 2
  1174 ;; This function calls:
  1175 ;;		_I2C_2_Master_Start
  1176 ;;		_I2C_2_Master_Stop
  1177 ;;		_I2C_2_Master_Write
  1178 ;; This function is called by:
  1179 ;;		_colourclick_init
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text2
  1184  003652                     __ptext2:
  1185                           	callstack 0
  1186  003652                     _colourclick_writetoaddr:
  1187                           	callstack 27
  1188                           
  1189                           ;incstack = 0
  1190                           ;colourclick_writetoaddr@address stored from wreg
  1191  003652  6E04               	movwf	colourclick_writetoaddr@address^0,c
  1192  003654                     
  1193                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
  1194  003654  EC95  F01B         	call	_I2C_2_Master_Start	;wreg free
  1195                           
  1196                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
  1197  003658  0E52               	movlw	82
  1198  00365A  EC84  F01B         	call	_I2C_2_Master_Write
  1199                           
  1200                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
  1201  00365E  5004               	movf	colourclick_writetoaddr@address^0,w,c
  1202  003660  0980               	iorlw	128
  1203  003662  EC84  F01B         	call	_I2C_2_Master_Write
  1204                           
  1205                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
  1206  003666  5003               	movf	colourclick_writetoaddr@value^0,w,c
  1207  003668  EC84  F01B         	call	_I2C_2_Master_Write
  1208                           
  1209                           ;colour_click.c: 45:     I2C_2_Master_Stop();
  1210  00366C  EC90  F01B         	call	_I2C_2_Master_Stop	;wreg free
  1211  003670  0012               	return		;funcret
  1212  003672                     __end_of_colourclick_writetoaddr:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _colourclickLEDs_init *****************
  1216 ;; Defined at:
  1217 ;;		line 49 in file "buttons_n_LEDs.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 1
  1238 ;; This function calls:
  1239 ;;		_colourclickLEDs_C
  1240 ;; This function is called by:
  1241 ;;		_colourclick_init
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text3
  1246  0036FA                     __ptext3:
  1247                           	callstack 0
  1248  0036FA                     _colourclickLEDs_init:
  1249                           	callstack 28
  1250  0036FA                     
  1251                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  1252  0036FA  9287               	bcf	135,1,c	;volatile
  1253                           
  1254                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  1255  0036FC  9881               	bcf	129,4,c	;volatile
  1256                           
  1257                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  1258  0036FE  9E86               	bcf	134,7,c	;volatile
  1259  003700                     
  1260                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  1261  003700  0E00               	movlw	0
  1262  003702  EC18  F01B         	call	_colourclickLEDs_C
  1263  003706  0012               	return		;funcret
  1264  003708                     __end_of_colourclickLEDs_init:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _colourclickLEDs_C *****************
  1268 ;; Defined at:
  1269 ;;		line 84 in file "buttons_n_LEDs.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  tog             1    wreg     unsigned char 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  tog             1    0[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1287 ;;Total ram usage:        1 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;;		_colourclickLEDs_init
  1294 ;;		_colourcards_testingRGBC
  1295 ;;		_colourclick_readRGBC2
  1296 ;;		_colourclick_calibration
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text4
  1301  003630                     __ptext4:
  1302                           	callstack 0
  1303  003630                     _colourclickLEDs_C:
  1304                           	callstack 28
  1305                           
  1306                           ;incstack = 0
  1307                           ;colourclickLEDs_C@tog stored from wreg
  1308  003630  6E01               	movwf	colourclickLEDs_C@tog^0,c
  1309  003632                     
  1310                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
  1311  003632  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1312  003634  D002               	bra	u3295
  1313  003636  927F               	bcf	127,1,c	;volatile
  1314  003638  D001               	bra	u3296
  1315  00363A                     u3295:
  1316  00363A  827F               	bsf	127,1,c	;volatile
  1317  00363C                     u3296:
  1318                           
  1319                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
  1320  00363C  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1321  00363E  D002               	bra	u3305
  1322  003640  9879               	bcf	121,4,c	;volatile
  1323  003642  D001               	bra	u3306
  1324  003644                     u3305:
  1325  003644  8879               	bsf	121,4,c	;volatile
  1326  003646                     u3306:
  1327                           
  1328                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
  1329  003646  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1330  003648  D002               	bra	u3315
  1331  00364A  9E7E               	bcf	126,7,c	;volatile
  1332  00364C  D001               	bra	u3316
  1333  00364E                     u3315:
  1334  00364E  8E7E               	bsf	126,7,c	;volatile
  1335  003650                     u3316:
  1336  003650  0012               	return		;funcret
  1337  003652                     __end_of_colourclickLEDs_C:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function _I2C_2_Master_Init *****************
  1341 ;; Defined at:
  1342 ;;		line 8 in file "I2C.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_colourclick_init
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text5
  1370  003592                     __ptext5:
  1371                           	callstack 0
  1372  003592                     _I2C_2_Master_Init:
  1373                           	callstack 29
  1374  003592                     
  1375                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  1376  003592  010E               	movlb	14	; () banked
  1377  003594  51D9               	movf	217,w,b	;volatile
  1378  003596  0BF0               	andlw	-16
  1379  003598  0908               	iorlw	8
  1380  00359A  6FD9               	movwf	217,b	;volatile
  1381  00359C                     
  1382                           ; BSR set to: 14
  1383                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  1384  00359C  8BD9               	bsf	217,5,b	;volatile
  1385                           
  1386                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  1387  00359E  0E9F               	movlw	159
  1388  0035A0  6FD6               	movwf	214,b	;volatile
  1389  0035A2                     
  1390                           ; BSR set to: 14
  1391                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  1392  0035A2  8A84               	bsf	132,5,c	;volatile
  1393  0035A4                     
  1394                           ; BSR set to: 14
  1395                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  1396  0035A4  8C84               	bsf	132,6,c	;volatile
  1397  0035A6                     
  1398                           ; BSR set to: 14
  1399                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  1400  0035A6  9BA7               	bcf	167,5,b	;volatile
  1401  0035A8                     
  1402                           ; BSR set to: 14
  1403                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  1404  0035A8  9DA7               	bcf	167,6,b	;volatile
  1405                           
  1406                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  1407  0035AA  0E1D               	movlw	29
  1408  0035AC  6F1D               	movwf	29,b	;volatile
  1409                           
  1410                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  1411  0035AE  0E1E               	movlw	30
  1412  0035B0  6F1C               	movwf	28,b	;volatile
  1413                           
  1414                           ;I2C.c: 22:   RD5PPS=0x1C;
  1415  0035B2  0E1C               	movlw	28
  1416  0035B4  6F6F               	movwf	111,b	;volatile
  1417                           
  1418                           ;I2C.c: 23:   RD6PPS=0x1B;
  1419  0035B6  0E1B               	movlw	27
  1420  0035B8  6F70               	movwf	112,b	;volatile
  1421  0035BA                     
  1422                           ; BSR set to: 14
  1423  0035BA  0012               	return		;funcret
  1424  0035BC                     __end_of_I2C_2_Master_Init:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _colourcards_readRGBC *****************
  1428 ;; Defined at:
  1429 ;;		line 12 in file "colour_cards.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  tmpval          2   74[COMRAM] PTR struct .
  1432 ;;		 -> main@current(8), 
  1433 ;;  mL              2   76[COMRAM] PTR struct .
  1434 ;;		 -> main@motorL(9), 
  1435 ;;  mR              2   78[COMRAM] PTR struct .
  1436 ;;		 -> main@motorR(9), 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  B_rel           4    8[BANK0 ] float 
  1439 ;;  G_rel           4    4[BANK0 ] float 
  1440 ;;  R_rel           4    0[BANK0 ] float 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1450 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;Total ram usage:       22 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 4
  1457 ;; This function calls:
  1458 ;;		___fldiv
  1459 ;;		___flge
  1460 ;;		___xxtofl
  1461 ;;		_colourclick_readRGBC
  1462 ;;		_forward
  1463 ;;		_reverse
  1464 ;;		_stop
  1465 ;;		_turnleft
  1466 ;;		_turnright
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text6
  1473  000EA4                     __ptext6:
  1474                           	callstack 0
  1475  000EA4                     _colourcards_readRGBC:
  1476                           	callstack 26
  1477  000EA4                     
  1478                           ;colour_cards.c: 12: void colourcards_readRGBC(RGBC_val *tmpval, DC_motor *mL, DC_motor 
      +                          *mR);colour_cards.c: 13: {;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  1479  000EA4  010E               	movlb	14	; () banked
  1480  000EA6  9329               	bcf	41,1,b	;volatile
  1481  000EA8                     
  1482                           ; BSR set to: 14
  1483                           ;colour_cards.c: 18:     colourclick_readRGBC(tmpval);
  1484  000EA8  C04B  F00C         	movff	colourcards_readRGBC@tmpval,colourclick_readRGBC@tmpval
  1485  000EAC  C04C  F00D         	movff	colourcards_readRGBC@tmpval+1,colourclick_readRGBC@tmpval+1
  1486  000EB0  EC47  F019         	call	_colourclick_readRGBC	;wreg free
  1487                           
  1488                           ;colour_cards.c: 19:     float R_rel = (float)tmpval->R / (float)tmpval->C;
  1489  000EB4  C04B  FFD9         	movff	colourcards_readRGBC@tmpval,fsr2l
  1490  000EB8  C04C  FFDA         	movff	colourcards_readRGBC@tmpval+1,fsr2h
  1491  000EBC  CFDE F051          	movff	postinc2,??_colourcards_readRGBC
  1492  000EC0  CFDD F052          	movff	postdec2,??_colourcards_readRGBC+1
  1493  000EC4  C051  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
  1494  000EC8  C052  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
  1495  000ECC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1496  000ECE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1497  000ED0  0E00               	movlw	0
  1498  000ED2  ECB6  F014         	call	___xxtofl
  1499  000ED6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1500  000EDA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1501  000EDE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1502  000EE2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1503  000EE6  EE20 F006          	lfsr	2,6
  1504  000EEA  504B               	movf	colourcards_readRGBC@tmpval^0,w,c
  1505  000EEC  26D9               	addwf	fsr2l,f,c
  1506  000EEE  504C               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  1507  000EF0  22DA               	addwfc	fsr2h,f,c
  1508  000EF2  CFDE F053          	movff	postinc2,??_colourcards_readRGBC+2
  1509  000EF6  CFDD F054          	movff	postdec2,??_colourcards_readRGBC+3
  1510  000EFA  C053  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
  1511  000EFE  C054  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
  1512  000F02  6A03               	clrf	(___xxtofl@val+2)^0,c
  1513  000F04  6A04               	clrf	(___xxtofl@val+3)^0,c
  1514  000F06  0E00               	movlw	0
  1515  000F08  ECB6  F014         	call	___xxtofl
  1516  000F0C  C001  F013         	movff	?___xxtofl,___fldiv@a
  1517  000F10  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1518  000F14  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1519  000F18  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1520  000F1C  EC5D  F010         	call	___fldiv	;wreg free
  1521  000F20  C00F  F0B5         	movff	?___fldiv,colourcards_readRGBC@R_rel
  1522  000F24  C010  F0B6         	movff	?___fldiv+1,colourcards_readRGBC@R_rel+1
  1523  000F28  C011  F0B7         	movff	?___fldiv+2,colourcards_readRGBC@R_rel+2
  1524  000F2C  C012  F0B8         	movff	?___fldiv+3,colourcards_readRGBC@R_rel+3
  1525                           
  1526                           ;colour_cards.c: 20:     float G_rel = (float)tmpval->G / (float)tmpval->C;
  1527  000F30  EE20 F002          	lfsr	2,2
  1528  000F34  504B               	movf	colourcards_readRGBC@tmpval^0,w,c
  1529  000F36  26D9               	addwf	fsr2l,f,c
  1530  000F38  504C               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  1531  000F3A  22DA               	addwfc	fsr2h,f,c
  1532  000F3C  CFDE F051          	movff	postinc2,??_colourcards_readRGBC
  1533  000F40  CFDD F052          	movff	postdec2,??_colourcards_readRGBC+1
  1534  000F44  C051  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
  1535  000F48  C052  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
  1536  000F4C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1537  000F4E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1538  000F50  0E00               	movlw	0
  1539  000F52  ECB6  F014         	call	___xxtofl
  1540  000F56  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1541  000F5A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1542  000F5E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1543  000F62  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1544  000F66  EE20 F006          	lfsr	2,6
  1545  000F6A  504B               	movf	colourcards_readRGBC@tmpval^0,w,c
  1546  000F6C  26D9               	addwf	fsr2l,f,c
  1547  000F6E  504C               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  1548  000F70  22DA               	addwfc	fsr2h,f,c
  1549  000F72  CFDE F053          	movff	postinc2,??_colourcards_readRGBC+2
  1550  000F76  CFDD F054          	movff	postdec2,??_colourcards_readRGBC+3
  1551  000F7A  C053  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
  1552  000F7E  C054  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
  1553  000F82  6A03               	clrf	(___xxtofl@val+2)^0,c
  1554  000F84  6A04               	clrf	(___xxtofl@val+3)^0,c
  1555  000F86  0E00               	movlw	0
  1556  000F88  ECB6  F014         	call	___xxtofl
  1557  000F8C  C001  F013         	movff	?___xxtofl,___fldiv@a
  1558  000F90  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1559  000F94  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1560  000F98  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1561  000F9C  EC5D  F010         	call	___fldiv	;wreg free
  1562  000FA0  C00F  F0B9         	movff	?___fldiv,colourcards_readRGBC@G_rel
  1563  000FA4  C010  F0BA         	movff	?___fldiv+1,colourcards_readRGBC@G_rel+1
  1564  000FA8  C011  F0BB         	movff	?___fldiv+2,colourcards_readRGBC@G_rel+2
  1565  000FAC  C012  F0BC         	movff	?___fldiv+3,colourcards_readRGBC@G_rel+3
  1566                           
  1567                           ;colour_cards.c: 21:     float B_rel = (float)tmpval->B / (float)tmpval->C;
  1568  000FB0  EE20 F004          	lfsr	2,4
  1569  000FB4  504B               	movf	colourcards_readRGBC@tmpval^0,w,c
  1570  000FB6  26D9               	addwf	fsr2l,f,c
  1571  000FB8  504C               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  1572  000FBA  22DA               	addwfc	fsr2h,f,c
  1573  000FBC  CFDE F051          	movff	postinc2,??_colourcards_readRGBC
  1574  000FC0  CFDD F052          	movff	postdec2,??_colourcards_readRGBC+1
  1575  000FC4  C051  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
  1576  000FC8  C052  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
  1577  000FCC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1578  000FCE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1579  000FD0  0E00               	movlw	0
  1580  000FD2  ECB6  F014         	call	___xxtofl
  1581  000FD6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1582  000FDA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1583  000FDE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1584  000FE2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1585  000FE6  EE20 F006          	lfsr	2,6
  1586  000FEA  504B               	movf	colourcards_readRGBC@tmpval^0,w,c
  1587  000FEC  26D9               	addwf	fsr2l,f,c
  1588  000FEE  504C               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  1589  000FF0  22DA               	addwfc	fsr2h,f,c
  1590  000FF2  CFDE F053          	movff	postinc2,??_colourcards_readRGBC+2
  1591  000FF6  CFDD F054          	movff	postdec2,??_colourcards_readRGBC+3
  1592  000FFA  C053  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
  1593  000FFE  C054  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
  1594  001002  6A03               	clrf	(___xxtofl@val+2)^0,c
  1595  001004  6A04               	clrf	(___xxtofl@val+3)^0,c
  1596  001006  0E00               	movlw	0
  1597  001008  ECB6  F014         	call	___xxtofl
  1598  00100C  C001  F013         	movff	?___xxtofl,___fldiv@a
  1599  001010  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1600  001014  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1601  001018  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1602  00101C  EC5D  F010         	call	___fldiv	;wreg free
  1603  001020  C00F  F0BD         	movff	?___fldiv,colourcards_readRGBC@B_rel
  1604  001024  C010  F0BE         	movff	?___fldiv+1,colourcards_readRGBC@B_rel+1
  1605  001028  C011  F0BF         	movff	?___fldiv+2,colourcards_readRGBC@B_rel+2
  1606  00102C  C012  F0C0         	movff	?___fldiv+3,colourcards_readRGBC@B_rel+3
  1607  001030                     
  1608                           ;colour_cards.c: 24:     if ((R_rel>0.54) && (G_rel<0.245) && (B_rel<0.18)) {
  1609  001030  0E71               	movlw	113
  1610  001032  6E0F               	movwf	___flge@ff1^0,c
  1611  001034  0E3D               	movlw	61
  1612  001036  6E10               	movwf	(___flge@ff1+1)^0,c
  1613  001038  0E0A               	movlw	10
  1614  00103A  6E11               	movwf	(___flge@ff1+2)^0,c
  1615  00103C  0E3F               	movlw	63
  1616  00103E  6E12               	movwf	(___flge@ff1+3)^0,c
  1617  001040  C0B5  F013         	movff	colourcards_readRGBC@R_rel,___flge@ff2
  1618  001044  C0B6  F014         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
  1619  001048  C0B7  F015         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
  1620  00104C  C0B8  F016         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
  1621  001050  EC9C  F017         	call	___flge	;wreg free
  1622  001054  B0D8               	btfsc	status,0,c
  1623  001056  EF2F  F008         	goto	u3951
  1624  00105A  EF31  F008         	goto	u3950
  1625  00105E                     u3951:
  1626  00105E  EF7F  F008         	goto	l3813
  1627  001062                     u3950:
  1628  001062  C0B9  F00F         	movff	colourcards_readRGBC@G_rel,___flge@ff1
  1629  001066  C0BA  F010         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
  1630  00106A  C0BB  F011         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
  1631  00106E  C0BC  F012         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
  1632  001072  0E48               	movlw	72
  1633  001074  6E13               	movwf	___flge@ff2^0,c
  1634  001076  0EE1               	movlw	225
  1635  001078  6E14               	movwf	(___flge@ff2+1)^0,c
  1636  00107A  0E7A               	movlw	122
  1637  00107C  6E15               	movwf	(___flge@ff2+2)^0,c
  1638  00107E  0E3E               	movlw	62
  1639  001080  6E16               	movwf	(___flge@ff2+3)^0,c
  1640  001082  EC9C  F017         	call	___flge	;wreg free
  1641  001086  B0D8               	btfsc	status,0,c
  1642  001088  EF48  F008         	goto	u3961
  1643  00108C  EF4A  F008         	goto	u3960
  1644  001090                     u3961:
  1645  001090  EF7F  F008         	goto	l3813
  1646  001094                     u3960:
  1647  001094  C0BD  F00F         	movff	colourcards_readRGBC@B_rel,___flge@ff1
  1648  001098  C0BE  F010         	movff	colourcards_readRGBC@B_rel+1,___flge@ff1+1
  1649  00109C  C0BF  F011         	movff	colourcards_readRGBC@B_rel+2,___flge@ff1+2
  1650  0010A0  C0C0  F012         	movff	colourcards_readRGBC@B_rel+3,___flge@ff1+3
  1651  0010A4  0EEC               	movlw	236
  1652  0010A6  6E13               	movwf	___flge@ff2^0,c
  1653  0010A8  0E51               	movlw	81
  1654  0010AA  6E14               	movwf	(___flge@ff2+1)^0,c
  1655  0010AC  0E38               	movlw	56
  1656  0010AE  6E15               	movwf	(___flge@ff2+2)^0,c
  1657  0010B0  0E3E               	movlw	62
  1658  0010B2  6E16               	movwf	(___flge@ff2+3)^0,c
  1659  0010B4  EC9C  F017         	call	___flge	;wreg free
  1660  0010B8  B0D8               	btfsc	status,0,c
  1661  0010BA  EF61  F008         	goto	u3971
  1662  0010BE  EF63  F008         	goto	u3970
  1663  0010C2                     u3971:
  1664  0010C2  EF7F  F008         	goto	l3813
  1665  0010C6                     u3970:
  1666  0010C6                     
  1667                           ;colour_cards.c: 26:         turnright(mL, mR, 90);
  1668  0010C6  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  1669  0010CA  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  1670  0010CE  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  1671  0010D2  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  1672  0010D6  0E00               	movlw	0
  1673  0010D8  6E4A               	movwf	(turnright@deg+1)^0,c
  1674  0010DA  0E5A               	movlw	90
  1675  0010DC  6E49               	movwf	turnright@deg^0,c
  1676  0010DE  EC3E  F01A         	call	_turnright	;wreg free
  1677                           
  1678                           ;colour_cards.c: 27:         stop(mL, mR);
  1679  0010E2  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1680  0010E6  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1681  0010EA  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1682  0010EE  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1683  0010F2  EC0E  F019         	call	_stop	;wreg free
  1684  0010F6                     l3811:
  1685                           
  1686                           ;colour_cards.c: 28:         unknowncard_flag = 0;
  1687  0010F6  0E00               	movlw	0
  1688  0010F8  6E5A               	movwf	_unknowncard_flag^0,c	;volatile
  1689                           
  1690                           ;colour_cards.c: 30:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
  1691  0010FA  EFE2  F00B         	goto	l3909
  1692  0010FE                     l3813:
  1693  0010FE  C0B5  F00F         	movff	colourcards_readRGBC@R_rel,___flge@ff1
  1694  001102  C0B6  F010         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
  1695  001106  C0B7  F011         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
  1696  00110A  C0B8  F012         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
  1697  00110E  0E52               	movlw	82
  1698  001110  6E13               	movwf	___flge@ff2^0,c
  1699  001112  0EB8               	movlw	184
  1700  001114  6E14               	movwf	(___flge@ff2+1)^0,c
  1701  001116  0EDE               	movlw	222
  1702  001118  6E15               	movwf	(___flge@ff2+2)^0,c
  1703  00111A  0E3E               	movlw	62
  1704  00111C  6E16               	movwf	(___flge@ff2+3)^0,c
  1705  00111E  EC9C  F017         	call	___flge	;wreg free
  1706  001122  B0D8               	btfsc	status,0,c
  1707  001124  EF96  F008         	goto	u3981
  1708  001128  EF98  F008         	goto	u3980
  1709  00112C                     u3981:
  1710  00112C  EFE4  F008         	goto	l3823
  1711  001130                     u3980:
  1712  001130  0E52               	movlw	82
  1713  001132  6E0F               	movwf	___flge@ff1^0,c
  1714  001134  0EB8               	movlw	184
  1715  001136  6E10               	movwf	(___flge@ff1+1)^0,c
  1716  001138  0E9E               	movlw	158
  1717  00113A  6E11               	movwf	(___flge@ff1+2)^0,c
  1718  00113C  0E3E               	movlw	62
  1719  00113E  6E12               	movwf	(___flge@ff1+3)^0,c
  1720  001140  C0B9  F013         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  1721  001144  C0BA  F014         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  1722  001148  C0BB  F015         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  1723  00114C  C0BC  F016         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  1724  001150  EC9C  F017         	call	___flge	;wreg free
  1725  001154  B0D8               	btfsc	status,0,c
  1726  001156  EFAF  F008         	goto	u3991
  1727  00115A  EFB1  F008         	goto	u3990
  1728  00115E                     u3991:
  1729  00115E  EFE4  F008         	goto	l3823
  1730  001162                     u3990:
  1731  001162  0E14               	movlw	20
  1732  001164  6E0F               	movwf	___flge@ff1^0,c
  1733  001166  0EAE               	movlw	174
  1734  001168  6E10               	movwf	(___flge@ff1+1)^0,c
  1735  00116A  0E47               	movlw	71
  1736  00116C  6E11               	movwf	(___flge@ff1+2)^0,c
  1737  00116E  0E3E               	movlw	62
  1738  001170  6E12               	movwf	(___flge@ff1+3)^0,c
  1739  001172  C0BD  F013         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  1740  001176  C0BE  F014         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  1741  00117A  C0BF  F015         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  1742  00117E  C0C0  F016         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  1743  001182  EC9C  F017         	call	___flge	;wreg free
  1744  001186  B0D8               	btfsc	status,0,c
  1745  001188  EFC8  F008         	goto	u4001
  1746  00118C  EFCA  F008         	goto	u4000
  1747  001190                     u4001:
  1748  001190  EFE4  F008         	goto	l3823
  1749  001194                     u4000:
  1750  001194                     
  1751                           ;colour_cards.c: 32:         turnleft(mL, mR, 90);
  1752  001194  C04D  F045         	movff	colourcards_readRGBC@mL,turnleft@mL
  1753  001198  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  1754  00119C  C04F  F047         	movff	colourcards_readRGBC@mR,turnleft@mR
  1755  0011A0  C050  F048         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  1756  0011A4  0E00               	movlw	0
  1757  0011A6  6E4A               	movwf	(turnleft@deg+1)^0,c
  1758  0011A8  0E5A               	movlw	90
  1759  0011AA  6E49               	movwf	turnleft@deg^0,c
  1760  0011AC  EC65  F01A         	call	_turnleft	;wreg free
  1761                           
  1762                           ;colour_cards.c: 33:         stop(mL, mR);
  1763  0011B0  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1764  0011B4  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1765  0011B8  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1766  0011BC  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1767  0011C0  EC0E  F019         	call	_stop	;wreg free
  1768  0011C4  EF7B  F008         	goto	l3811
  1769  0011C8                     l3823:
  1770  0011C8  C0B5  F00F         	movff	colourcards_readRGBC@R_rel,___flge@ff1
  1771  0011CC  C0B6  F010         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
  1772  0011D0  C0B7  F011         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
  1773  0011D4  C0B8  F012         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
  1774  0011D8  0EF6               	movlw	246
  1775  0011DA  6E13               	movwf	___flge@ff2^0,c
  1776  0011DC  0E28               	movlw	40
  1777  0011DE  6E14               	movwf	(___flge@ff2+1)^0,c
  1778  0011E0  0EDC               	movlw	220
  1779  0011E2  6E15               	movwf	(___flge@ff2+2)^0,c
  1780  0011E4  0E3E               	movlw	62
  1781  0011E6  6E16               	movwf	(___flge@ff2+3)^0,c
  1782  0011E8  EC9C  F017         	call	___flge	;wreg free
  1783  0011EC  B0D8               	btfsc	status,0,c
  1784  0011EE  EFFB  F008         	goto	u4011
  1785  0011F2  EFFD  F008         	goto	u4010
  1786  0011F6                     u4011:
  1787  0011F6  EF49  F009         	goto	l3833
  1788  0011FA                     u4010:
  1789  0011FA  0E9A               	movlw	154
  1790  0011FC  6E0F               	movwf	___flge@ff1^0,c
  1791  0011FE  0E99               	movlw	153
  1792  001200  6E10               	movwf	(___flge@ff1+1)^0,c
  1793  001202  0E99               	movlw	153
  1794  001204  6E11               	movwf	(___flge@ff1+2)^0,c
  1795  001206  0E3E               	movlw	62
  1796  001208  6E12               	movwf	(___flge@ff1+3)^0,c
  1797  00120A  C0B9  F013         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  1798  00120E  C0BA  F014         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  1799  001212  C0BB  F015         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  1800  001216  C0BC  F016         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  1801  00121A  EC9C  F017         	call	___flge	;wreg free
  1802  00121E  B0D8               	btfsc	status,0,c
  1803  001220  EF14  F009         	goto	u4021
  1804  001224  EF16  F009         	goto	u4020
  1805  001228                     u4021:
  1806  001228  EF49  F009         	goto	l3833
  1807  00122C                     u4020:
  1808  00122C  0E3D               	movlw	61
  1809  00122E  6E0F               	movwf	___flge@ff1^0,c
  1810  001230  0E0A               	movlw	10
  1811  001232  6E10               	movwf	(___flge@ff1+1)^0,c
  1812  001234  0E57               	movlw	87
  1813  001236  6E11               	movwf	(___flge@ff1+2)^0,c
  1814  001238  0E3E               	movlw	62
  1815  00123A  6E12               	movwf	(___flge@ff1+3)^0,c
  1816  00123C  C0BD  F013         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  1817  001240  C0BE  F014         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  1818  001244  C0BF  F015         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  1819  001248  C0C0  F016         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  1820  00124C  EC9C  F017         	call	___flge	;wreg free
  1821  001250  B0D8               	btfsc	status,0,c
  1822  001252  EF2D  F009         	goto	u4031
  1823  001256  EF2F  F009         	goto	u4030
  1824  00125A                     u4031:
  1825  00125A  EF49  F009         	goto	l3833
  1826  00125E                     u4030:
  1827  00125E                     
  1828                           ;colour_cards.c: 38:         turnright(mL, mR, 180);
  1829  00125E  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  1830  001262  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  1831  001266  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  1832  00126A  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  1833  00126E  0E00               	movlw	0
  1834  001270  6E4A               	movwf	(turnright@deg+1)^0,c
  1835  001272  0EB4               	movlw	180
  1836  001274  6E49               	movwf	turnright@deg^0,c
  1837  001276  EC3E  F01A         	call	_turnright	;wreg free
  1838                           
  1839                           ;colour_cards.c: 39:         stop(mL, mR);
  1840  00127A  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1841  00127E  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1842  001282  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1843  001286  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1844  00128A  EC0E  F019         	call	_stop	;wreg free
  1845  00128E  EF7B  F008         	goto	l3811
  1846  001292                     l3833:
  1847  001292  0E48               	movlw	72
  1848  001294  6E0F               	movwf	___flge@ff1^0,c
  1849  001296  0EE1               	movlw	225
  1850  001298  6E10               	movwf	(___flge@ff1+1)^0,c
  1851  00129A  0EFA               	movlw	250
  1852  00129C  6E11               	movwf	(___flge@ff1+2)^0,c
  1853  00129E  0E3E               	movlw	62
  1854  0012A0  6E12               	movwf	(___flge@ff1+3)^0,c
  1855  0012A2  C0B5  F013         	movff	colourcards_readRGBC@R_rel,___flge@ff2
  1856  0012A6  C0B6  F014         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
  1857  0012AA  C0B7  F015         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
  1858  0012AE  C0B8  F016         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
  1859  0012B2  EC9C  F017         	call	___flge	;wreg free
  1860  0012B6  B0D8               	btfsc	status,0,c
  1861  0012B8  EF60  F009         	goto	u4041
  1862  0012BC  EF62  F009         	goto	u4040
  1863  0012C0                     u4041:
  1864  0012C0  EFC2  F009         	goto	l3843
  1865  0012C4                     u4040:
  1866  0012C4  0E85               	movlw	133
  1867  0012C6  6E0F               	movwf	___flge@ff1^0,c
  1868  0012C8  0EEB               	movlw	235
  1869  0012CA  6E10               	movwf	(___flge@ff1+1)^0,c
  1870  0012CC  0E91               	movlw	145
  1871  0012CE  6E11               	movwf	(___flge@ff1+2)^0,c
  1872  0012D0  0E3E               	movlw	62
  1873  0012D2  6E12               	movwf	(___flge@ff1+3)^0,c
  1874  0012D4  C0B9  F013         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  1875  0012D8  C0BA  F014         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  1876  0012DC  C0BB  F015         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  1877  0012E0  C0BC  F016         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  1878  0012E4  EC9C  F017         	call	___flge	;wreg free
  1879  0012E8  B0D8               	btfsc	status,0,c
  1880  0012EA  EF79  F009         	goto	u4051
  1881  0012EE  EF7B  F009         	goto	u4050
  1882  0012F2                     u4051:
  1883  0012F2  EFC2  F009         	goto	l3843
  1884  0012F6                     u4050:
  1885  0012F6  0EEC               	movlw	236
  1886  0012F8  6E0F               	movwf	___flge@ff1^0,c
  1887  0012FA  0E51               	movlw	81
  1888  0012FC  6E10               	movwf	(___flge@ff1+1)^0,c
  1889  0012FE  0E38               	movlw	56
  1890  001300  6E11               	movwf	(___flge@ff1+2)^0,c
  1891  001302  0E3E               	movlw	62
  1892  001304  6E12               	movwf	(___flge@ff1+3)^0,c
  1893  001306  C0BD  F013         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  1894  00130A  C0BE  F014         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  1895  00130E  C0BF  F015         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  1896  001312  C0C0  F016         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  1897  001316  EC9C  F017         	call	___flge	;wreg free
  1898  00131A  B0D8               	btfsc	status,0,c
  1899  00131C  EF92  F009         	goto	u4061
  1900  001320  EF94  F009         	goto	u4060
  1901  001324                     u4061:
  1902  001324  EFC2  F009         	goto	l3843
  1903  001328                     u4060:
  1904  001328                     
  1905                           ;colour_cards.c: 44:         reverse(mL, mR);
  1906  001328  C04D  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
  1907  00132C  C04E  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  1908  001330  C04F  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
  1909  001334  C050  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  1910  001338  EC80  F018         	call	_reverse	;wreg free
  1911                           
  1912                           ;colour_cards.c: 45:         stop(mL, mR);
  1913  00133C  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1914  001340  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1915  001344  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1916  001348  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1917  00134C  EC0E  F019         	call	_stop	;wreg free
  1918                           
  1919                           ;colour_cards.c: 46:         turnright(mL, mR, 90);
  1920  001350  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  1921  001354  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  1922  001358  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  1923  00135C  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  1924  001360  0E00               	movlw	0
  1925  001362  6E4A               	movwf	(turnright@deg+1)^0,c
  1926  001364  0E5A               	movlw	90
  1927  001366  6E49               	movwf	turnright@deg^0,c
  1928  001368  EC3E  F01A         	call	_turnright	;wreg free
  1929                           
  1930                           ;colour_cards.c: 47:         stop(mL, mR);
  1931  00136C  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1932  001370  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1933  001374  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1934  001378  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1935  00137C  EC0E  F019         	call	_stop	;wreg free
  1936  001380  EF7B  F008         	goto	l3811
  1937  001384                     l3843:
  1938  001384  0E48               	movlw	72
  1939  001386  6E0F               	movwf	___flge@ff1^0,c
  1940  001388  0EE1               	movlw	225
  1941  00138A  6E10               	movwf	(___flge@ff1+1)^0,c
  1942  00138C  0EFA               	movlw	250
  1943  00138E  6E11               	movwf	(___flge@ff1+2)^0,c
  1944  001390  0E3E               	movlw	62
  1945  001392  6E12               	movwf	(___flge@ff1+3)^0,c
  1946  001394  C0B5  F013         	movff	colourcards_readRGBC@R_rel,___flge@ff2
  1947  001398  C0B6  F014         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
  1948  00139C  C0B7  F015         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
  1949  0013A0  C0B8  F016         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
  1950  0013A4  EC9C  F017         	call	___flge	;wreg free
  1951  0013A8  B0D8               	btfsc	status,0,c
  1952  0013AA  EFD9  F009         	goto	u4071
  1953  0013AE  EFDB  F009         	goto	u4070
  1954  0013B2                     u4071:
  1955  0013B2  EF3B  F00A         	goto	l3853
  1956  0013B6                     u4070:
  1957  0013B6  C0B9  F00F         	movff	colourcards_readRGBC@G_rel,___flge@ff1
  1958  0013BA  C0BA  F010         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
  1959  0013BE  C0BB  F011         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
  1960  0013C2  C0BC  F012         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
  1961  0013C6  0ECD               	movlw	205
  1962  0013C8  6E13               	movwf	___flge@ff2^0,c
  1963  0013CA  0ECC               	movlw	204
  1964  0013CC  6E14               	movwf	(___flge@ff2+1)^0,c
  1965  0013CE  0E8C               	movlw	140
  1966  0013D0  6E15               	movwf	(___flge@ff2+2)^0,c
  1967  0013D2  0E3E               	movlw	62
  1968  0013D4  6E16               	movwf	(___flge@ff2+3)^0,c
  1969  0013D6  EC9C  F017         	call	___flge	;wreg free
  1970  0013DA  B0D8               	btfsc	status,0,c
  1971  0013DC  EFF2  F009         	goto	u4081
  1972  0013E0  EFF4  F009         	goto	u4080
  1973  0013E4                     u4081:
  1974  0013E4  EF3B  F00A         	goto	l3853
  1975  0013E8                     u4080:
  1976  0013E8  0E14               	movlw	20
  1977  0013EA  6E0F               	movwf	___flge@ff1^0,c
  1978  0013EC  0EAE               	movlw	174
  1979  0013EE  6E10               	movwf	(___flge@ff1+1)^0,c
  1980  0013F0  0E47               	movlw	71
  1981  0013F2  6E11               	movwf	(___flge@ff1+2)^0,c
  1982  0013F4  0E3E               	movlw	62
  1983  0013F6  6E12               	movwf	(___flge@ff1+3)^0,c
  1984  0013F8  C0BD  F013         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  1985  0013FC  C0BE  F014         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  1986  001400  C0BF  F015         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  1987  001404  C0C0  F016         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  1988  001408  EC9C  F017         	call	___flge	;wreg free
  1989  00140C  B0D8               	btfsc	status,0,c
  1990  00140E  EF0B  F00A         	goto	u4091
  1991  001412  EF0D  F00A         	goto	u4090
  1992  001416                     u4091:
  1993  001416  EF3B  F00A         	goto	l3853
  1994  00141A                     u4090:
  1995  00141A                     
  1996                           ;colour_cards.c: 52:         reverse(mL, mR);
  1997  00141A  C04D  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
  1998  00141E  C04E  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  1999  001422  C04F  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
  2000  001426  C050  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2001  00142A  EC80  F018         	call	_reverse	;wreg free
  2002                           
  2003                           ;colour_cards.c: 53:         stop(mL, mR);
  2004  00142E  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  2005  001432  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2006  001436  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  2007  00143A  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2008  00143E  EC0E  F019         	call	_stop	;wreg free
  2009                           
  2010                           ;colour_cards.c: 54:         turnleft(mL, mR, 90);
  2011  001442  C04D  F045         	movff	colourcards_readRGBC@mL,turnleft@mL
  2012  001446  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2013  00144A  C04F  F047         	movff	colourcards_readRGBC@mR,turnleft@mR
  2014  00144E  C050  F048         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2015  001452  0E00               	movlw	0
  2016  001454  6E4A               	movwf	(turnleft@deg+1)^0,c
  2017  001456  0E5A               	movlw	90
  2018  001458  6E49               	movwf	turnleft@deg^0,c
  2019  00145A  EC65  F01A         	call	_turnleft	;wreg free
  2020                           
  2021                           ;colour_cards.c: 55:         stop(mL, mR);
  2022  00145E  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  2023  001462  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2024  001466  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  2025  00146A  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2026  00146E  EC0E  F019         	call	_stop	;wreg free
  2027  001472  EF7B  F008         	goto	l3811
  2028  001476                     l3853:
  2029  001476  0E71               	movlw	113
  2030  001478  6E0F               	movwf	___flge@ff1^0,c
  2031  00147A  0E3D               	movlw	61
  2032  00147C  6E10               	movwf	(___flge@ff1+1)^0,c
  2033  00147E  0E0A               	movlw	10
  2034  001480  6E11               	movwf	(___flge@ff1+2)^0,c
  2035  001482  0E3F               	movlw	63
  2036  001484  6E12               	movwf	(___flge@ff1+3)^0,c
  2037  001486  C0B5  F013         	movff	colourcards_readRGBC@R_rel,___flge@ff2
  2038  00148A  C0B6  F014         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
  2039  00148E  C0B7  F015         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
  2040  001492  C0B8  F016         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
  2041  001496  EC9C  F017         	call	___flge	;wreg free
  2042  00149A  B0D8               	btfsc	status,0,c
  2043  00149C  EF52  F00A         	goto	u4101
  2044  0014A0  EF54  F00A         	goto	u4100
  2045  0014A4                     u4101:
  2046  0014A4  EFA0  F00A         	goto	l3863
  2047  0014A8                     u4100:
  2048  0014A8  C0B9  F00F         	movff	colourcards_readRGBC@G_rel,___flge@ff1
  2049  0014AC  C0BA  F010         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
  2050  0014B0  C0BB  F011         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
  2051  0014B4  C0BC  F012         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
  2052  0014B8  0E8F               	movlw	143
  2053  0014BA  6E13               	movwf	___flge@ff2^0,c
  2054  0014BC  0EC2               	movlw	194
  2055  0014BE  6E14               	movwf	(___flge@ff2+1)^0,c
  2056  0014C0  0E75               	movlw	117
  2057  0014C2  6E15               	movwf	(___flge@ff2+2)^0,c
  2058  0014C4  0E3E               	movlw	62
  2059  0014C6  6E16               	movwf	(___flge@ff2+3)^0,c
  2060  0014C8  EC9C  F017         	call	___flge	;wreg free
  2061  0014CC  B0D8               	btfsc	status,0,c
  2062  0014CE  EF6B  F00A         	goto	u4111
  2063  0014D2  EF6D  F00A         	goto	u4110
  2064  0014D6                     u4111:
  2065  0014D6  EFA0  F00A         	goto	l3863
  2066  0014DA                     u4110:
  2067  0014DA  C0BD  F00F         	movff	colourcards_readRGBC@B_rel,___flge@ff1
  2068  0014DE  C0BE  F010         	movff	colourcards_readRGBC@B_rel+1,___flge@ff1+1
  2069  0014E2  C0BF  F011         	movff	colourcards_readRGBC@B_rel+2,___flge@ff1+2
  2070  0014E6  C0C0  F012         	movff	colourcards_readRGBC@B_rel+3,___flge@ff1+3
  2071  0014EA  0EEC               	movlw	236
  2072  0014EC  6E13               	movwf	___flge@ff2^0,c
  2073  0014EE  0E51               	movlw	81
  2074  0014F0  6E14               	movwf	(___flge@ff2+1)^0,c
  2075  0014F2  0E38               	movlw	56
  2076  0014F4  6E15               	movwf	(___flge@ff2+2)^0,c
  2077  0014F6  0E3E               	movlw	62
  2078  0014F8  6E16               	movwf	(___flge@ff2+3)^0,c
  2079  0014FA  EC9C  F017         	call	___flge	;wreg free
  2080  0014FE  B0D8               	btfsc	status,0,c
  2081  001500  EF84  F00A         	goto	u4121
  2082  001504  EF86  F00A         	goto	u4120
  2083  001508                     u4121:
  2084  001508  EFA0  F00A         	goto	l3863
  2085  00150C                     u4120:
  2086  00150C                     
  2087                           ;colour_cards.c: 60:         turnright(mL, mR, 135);
  2088  00150C  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  2089  001510  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2090  001514  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  2091  001518  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2092  00151C  0E00               	movlw	0
  2093  00151E  6E4A               	movwf	(turnright@deg+1)^0,c
  2094  001520  0E87               	movlw	135
  2095  001522  6E49               	movwf	turnright@deg^0,c
  2096  001524  EC3E  F01A         	call	_turnright	;wreg free
  2097                           
  2098                           ;colour_cards.c: 61:         stop(mL, mR);
  2099  001528  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  2100  00152C  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2101  001530  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  2102  001534  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2103  001538  EC0E  F019         	call	_stop	;wreg free
  2104  00153C  EF7B  F008         	goto	l3811
  2105  001540                     l3863:
  2106  001540  C0B5  F00F         	movff	colourcards_readRGBC@R_rel,___flge@ff1
  2107  001544  C0B6  F010         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
  2108  001548  C0B7  F011         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
  2109  00154C  C0B8  F012         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
  2110  001550  0EAE               	movlw	174
  2111  001552  6E13               	movwf	___flge@ff2^0,c
  2112  001554  0E47               	movlw	71
  2113  001556  6E14               	movwf	(___flge@ff2+1)^0,c
  2114  001558  0EE1               	movlw	225
  2115  00155A  6E15               	movwf	(___flge@ff2+2)^0,c
  2116  00155C  0E3E               	movlw	62
  2117  00155E  6E16               	movwf	(___flge@ff2+3)^0,c
  2118  001560  EC9C  F017         	call	___flge	;wreg free
  2119  001564  B0D8               	btfsc	status,0,c
  2120  001566  EFB7  F00A         	goto	u4131
  2121  00156A  EFB9  F00A         	goto	u4130
  2122  00156E                     u4131:
  2123  00156E  EF05  F00B         	goto	l3873
  2124  001572                     u4130:
  2125  001572  0EF6               	movlw	246
  2126  001574  6E0F               	movwf	___flge@ff1^0,c
  2127  001576  0E28               	movlw	40
  2128  001578  6E10               	movwf	(___flge@ff1+1)^0,c
  2129  00157A  0E9C               	movlw	156
  2130  00157C  6E11               	movwf	(___flge@ff1+2)^0,c
  2131  00157E  0E3E               	movlw	62
  2132  001580  6E12               	movwf	(___flge@ff1+3)^0,c
  2133  001582  C0B9  F013         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  2134  001586  C0BA  F014         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  2135  00158A  C0BB  F015         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  2136  00158E  C0BC  F016         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  2137  001592  EC9C  F017         	call	___flge	;wreg free
  2138  001596  B0D8               	btfsc	status,0,c
  2139  001598  EFD0  F00A         	goto	u4141
  2140  00159C  EFD2  F00A         	goto	u4140
  2141  0015A0                     u4141:
  2142  0015A0  EF05  F00B         	goto	l3873
  2143  0015A4                     u4140:
  2144  0015A4  0E3D               	movlw	61
  2145  0015A6  6E0F               	movwf	___flge@ff1^0,c
  2146  0015A8  0E0A               	movlw	10
  2147  0015AA  6E10               	movwf	(___flge@ff1+1)^0,c
  2148  0015AC  0E57               	movlw	87
  2149  0015AE  6E11               	movwf	(___flge@ff1+2)^0,c
  2150  0015B0  0E3E               	movlw	62
  2151  0015B2  6E12               	movwf	(___flge@ff1+3)^0,c
  2152  0015B4  C0BD  F013         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  2153  0015B8  C0BE  F014         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  2154  0015BC  C0BF  F015         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  2155  0015C0  C0C0  F016         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  2156  0015C4  EC9C  F017         	call	___flge	;wreg free
  2157  0015C8  B0D8               	btfsc	status,0,c
  2158  0015CA  EFE9  F00A         	goto	u4151
  2159  0015CE  EFEB  F00A         	goto	u4150
  2160  0015D2                     u4151:
  2161  0015D2  EF05  F00B         	goto	l3873
  2162  0015D6                     u4150:
  2163  0015D6                     
  2164                           ;colour_cards.c: 66:         turnleft(mL, mR, 135);
  2165  0015D6  C04D  F045         	movff	colourcards_readRGBC@mL,turnleft@mL
  2166  0015DA  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2167  0015DE  C04F  F047         	movff	colourcards_readRGBC@mR,turnleft@mR
  2168  0015E2  C050  F048         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2169  0015E6  0E00               	movlw	0
  2170  0015E8  6E4A               	movwf	(turnleft@deg+1)^0,c
  2171  0015EA  0E87               	movlw	135
  2172  0015EC  6E49               	movwf	turnleft@deg^0,c
  2173  0015EE  EC65  F01A         	call	_turnleft	;wreg free
  2174                           
  2175                           ;colour_cards.c: 67:         stop(mL, mR);
  2176  0015F2  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  2177  0015F6  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2178  0015FA  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  2179  0015FE  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2180  001602  EC0E  F019         	call	_stop	;wreg free
  2181  001606  EF7B  F008         	goto	l3811
  2182  00160A                     l3873:
  2183  00160A  C0B5  F00F         	movff	colourcards_readRGBC@R_rel,___flge@ff1
  2184  00160E  C0B6  F010         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
  2185  001612  C0B7  F011         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
  2186  001616  C0B8  F012         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
  2187  00161A  0E1F               	movlw	31
  2188  00161C  6E13               	movwf	___flge@ff2^0,c
  2189  00161E  0E85               	movlw	133
  2190  001620  6E14               	movwf	(___flge@ff2+1)^0,c
  2191  001622  0EEB               	movlw	235
  2192  001624  6E15               	movwf	(___flge@ff2+2)^0,c
  2193  001626  0E3E               	movlw	62
  2194  001628  6E16               	movwf	(___flge@ff2+3)^0,c
  2195  00162A  EC9C  F017         	call	___flge	;wreg free
  2196  00162E  B0D8               	btfsc	status,0,c
  2197  001630  EF1C  F00B         	goto	u4161
  2198  001634  EF1E  F00B         	goto	u4160
  2199  001638                     u4161:
  2200  001638  EF6E  F00B         	goto	l3885
  2201  00163C                     u4160:
  2202  00163C  0E3D               	movlw	61
  2203  00163E  6E0F               	movwf	___flge@ff1^0,c
  2204  001640  0E0A               	movlw	10
  2205  001642  6E10               	movwf	(___flge@ff1+1)^0,c
  2206  001644  0E97               	movlw	151
  2207  001646  6E11               	movwf	(___flge@ff1+2)^0,c
  2208  001648  0E3E               	movlw	62
  2209  00164A  6E12               	movwf	(___flge@ff1+3)^0,c
  2210  00164C  C0B9  F013         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  2211  001650  C0BA  F014         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  2212  001654  C0BB  F015         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  2213  001658  C0BC  F016         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  2214  00165C  EC9C  F017         	call	___flge	;wreg free
  2215  001660  B0D8               	btfsc	status,0,c
  2216  001662  EF35  F00B         	goto	u4171
  2217  001666  EF37  F00B         	goto	u4170
  2218  00166A                     u4171:
  2219  00166A  EF6E  F00B         	goto	l3885
  2220  00166E                     u4170:
  2221  00166E  0E3D               	movlw	61
  2222  001670  6E0F               	movwf	___flge@ff1^0,c
  2223  001672  0E0A               	movlw	10
  2224  001674  6E10               	movwf	(___flge@ff1+1)^0,c
  2225  001676  0E57               	movlw	87
  2226  001678  6E11               	movwf	(___flge@ff1+2)^0,c
  2227  00167A  0E3E               	movlw	62
  2228  00167C  6E12               	movwf	(___flge@ff1+3)^0,c
  2229  00167E  C0BD  F013         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  2230  001682  C0BE  F014         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  2231  001686  C0BF  F015         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  2232  00168A  C0C0  F016         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  2233  00168E  EC9C  F017         	call	___flge	;wreg free
  2234  001692  B0D8               	btfsc	status,0,c
  2235  001694  EF4E  F00B         	goto	u4181
  2236  001698  EF50  F00B         	goto	u4180
  2237  00169C                     u4181:
  2238  00169C  EF6E  F00B         	goto	l3885
  2239  0016A0                     u4180:
  2240  0016A0                     
  2241                           ;colour_cards.c: 72:         turnright(mL, mR, 180);
  2242  0016A0  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  2243  0016A4  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2244  0016A8  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  2245  0016AC  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2246  0016B0  0E00               	movlw	0
  2247  0016B2  6E4A               	movwf	(turnright@deg+1)^0,c
  2248  0016B4  0EB4               	movlw	180
  2249  0016B6  6E49               	movwf	turnright@deg^0,c
  2250  0016B8  EC3E  F01A         	call	_turnright	;wreg free
  2251                           
  2252                           ;colour_cards.c: 73:         stop(mL, mR);
  2253  0016BC  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  2254  0016C0  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2255  0016C4  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  2256  0016C8  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2257  0016CC  EC0E  F019         	call	_stop	;wreg free
  2258  0016D0                     
  2259                           ;colour_cards.c: 74:         unknowncard_flag = 0;
  2260  0016D0  0E00               	movlw	0
  2261  0016D2  6E5A               	movwf	_unknowncard_flag^0,c	;volatile
  2262  0016D4                     
  2263                           ;colour_cards.c: 75:         returnhome_flag = 1;
  2264  0016D4  0E01               	movlw	1
  2265  0016D6  6E59               	movwf	_returnhome_flag^0,c	;volatile
  2266                           
  2267                           ;colour_cards.c: 77:     } else {
  2268  0016D8  EFE2  F00B         	goto	l3909
  2269  0016DC                     l3885:
  2270                           
  2271                           ;colour_cards.c: 79:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2272  0016DC  0E52               	movlw	82
  2273  0016DE  6E52               	movwf	(??_colourcards_readRGBC+1)^0,c
  2274  0016E0  0E2B               	movlw	43
  2275  0016E2  6E51               	movwf	??_colourcards_readRGBC^0,c
  2276  0016E4  0E00               	movlw	0
  2277  0016E6                     u4817:
  2278  0016E6  2EE8               	decfsz	wreg,f,c
  2279  0016E8  D7FE               	bra	u4817
  2280  0016EA  2E51               	decfsz	??_colourcards_readRGBC^0,f,c
  2281  0016EC  D7FC               	bra	u4817
  2282  0016EE  2E52               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  2283  0016F0  D7FA               	bra	u4817
  2284  0016F2  D000               	nop2	
  2285  0016F4                     
  2286                           ;colour_cards.c: 80:         colourclick_readRGBC(tmpval);
  2287  0016F4  C04B  F00C         	movff	colourcards_readRGBC@tmpval,colourclick_readRGBC@tmpval
  2288  0016F8  C04C  F00D         	movff	colourcards_readRGBC@tmpval+1,colourclick_readRGBC@tmpval+1
  2289  0016FC  EC47  F019         	call	_colourclick_readRGBC	;wreg free
  2290  001700                     
  2291                           ;colour_cards.c: 81:         if ((tmpval->C < interrupts_lowerbound) || (tmpval->C > int
      +                          errupts_upperbound)) {
  2292  001700  EE20 F006          	lfsr	2,6
  2293  001704  504B               	movf	colourcards_readRGBC@tmpval^0,w,c
  2294  001706  26D9               	addwf	fsr2l,f,c
  2295  001708  504C               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  2296  00170A  22DA               	addwfc	fsr2h,f,c
  2297  00170C  5057               	movf	_interrupts_lowerbound^0,w,c	;volatile
  2298  00170E  5CDE               	subwf	postinc2,w,c
  2299  001710  5058               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2300  001712  58DE               	subwfb	postinc2,w,c
  2301  001714  A0D8               	btfss	status,0,c
  2302  001716  EF8F  F00B         	goto	u4191
  2303  00171A  EF91  F00B         	goto	u4190
  2304  00171E                     u4191:
  2305  00171E  EFA3  F00B         	goto	l3893
  2306  001722                     u4190:
  2307  001722  EE20 F006          	lfsr	2,6
  2308  001726  504B               	movf	colourcards_readRGBC@tmpval^0,w,c
  2309  001728  26D9               	addwf	fsr2l,f,c
  2310  00172A  504C               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  2311  00172C  22DA               	addwfc	fsr2h,f,c
  2312  00172E  50DE               	movf	postinc2,w,c
  2313  001730  0100               	movlb	0	; () banked
  2314  001732  5DDB               	subwf	_interrupts_upperbound& (0+255),w,b	;volatile
  2315  001734  50DE               	movf	postinc2,w,c
  2316  001736  59DC               	subwfb	(_interrupts_upperbound+1)& (0+255),w,b	;volatile
  2317  001738  B0D8               	btfsc	status,0,c
  2318  00173A  EFA1  F00B         	goto	u4201
  2319  00173E  EFA3  F00B         	goto	u4200
  2320  001742                     u4201:
  2321  001742  EFD6  F00B         	goto	l3905
  2322  001746                     u4200:
  2323  001746                     l3893:
  2324                           
  2325                           ;colour_cards.c: 82:             if (unknowncard_flag<3) {
  2326  001746  0E03               	movlw	3
  2327  001748  605A               	cpfslt	_unknowncard_flag^0,c	;volatile
  2328  00174A  EFA9  F00B         	goto	u4211
  2329  00174E  EFAB  F00B         	goto	u4210
  2330  001752                     u4211:
  2331  001752  EFB0  F00B         	goto	l154
  2332  001756                     u4210:
  2333  001756                     
  2334                           ;colour_cards.c: 83:                 PIR0bits.INT1IF = 1;
  2335  001756  010E               	movlb	14	; () banked
  2336  001758  8333               	bsf	51,1,b	;volatile
  2337  00175A                     
  2338                           ; BSR set to: 14
  2339                           ;colour_cards.c: 84:                 unknowncard_flag++;
  2340  00175A  2A5A               	incf	_unknowncard_flag^0,f,c	;volatile
  2341                           
  2342                           ;colour_cards.c: 85:             } else {
  2343  00175C  EFE2  F00B         	goto	l3909
  2344  001760                     l154:
  2345                           
  2346                           ;colour_cards.c: 86:                 LATHbits.LATH3 = 1;
  2347  001760  8680               	bsf	128,3,c	;volatile
  2348  001762                     
  2349                           ;colour_cards.c: 87:                 turnright(mL, mR, 180);
  2350  001762  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  2351  001766  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2352  00176A  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  2353  00176E  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2354  001772  0E00               	movlw	0
  2355  001774  6E4A               	movwf	(turnright@deg+1)^0,c
  2356  001776  0EB4               	movlw	180
  2357  001778  6E49               	movwf	turnright@deg^0,c
  2358  00177A  EC3E  F01A         	call	_turnright	;wreg free
  2359                           
  2360                           ;colour_cards.c: 88:                 stop(mL, mR);
  2361  00177E  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  2362  001782  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2363  001786  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  2364  00178A  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2365  00178E  EC0E  F019         	call	_stop	;wreg free
  2366  001792                     
  2367                           ;colour_cards.c: 89:                 returnhome_flag = !returnhome_flag;
  2368  001792  5059               	movf	_returnhome_flag^0,w,c	;volatile
  2369  001794  B4D8               	btfsc	status,2,c
  2370  001796  EFCF  F00B         	goto	u4221
  2371  00179A  EFD2  F00B         	goto	u4220
  2372  00179E                     u4221:
  2373  00179E  0E01               	movlw	1
  2374  0017A0  EFD3  F00B         	goto	u4230
  2375  0017A4                     u4220:
  2376  0017A4  0E00               	movlw	0
  2377  0017A6                     u4230:
  2378  0017A6  6E59               	movwf	_returnhome_flag^0,c	;volatile
  2379  0017A8  EF7B  F008         	goto	l3811
  2380  0017AC                     l3905:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;colour_cards.c: 93:             forward(mL, mR);
  2384  0017AC  C04D  F01A         	movff	colourcards_readRGBC@mL,forward@mL
  2385  0017B0  C04E  F01B         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  2386  0017B4  C04F  F01C         	movff	colourcards_readRGBC@mR,forward@mR
  2387  0017B8  C050  F01D         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  2388  0017BC  ECC7  F018         	call	_forward	;wreg free
  2389  0017C0  EF7B  F008         	goto	l3811
  2390  0017C4                     l3909:
  2391                           
  2392                           ;colour_cards.c: 99:     colourcard_flag = 0;
  2393  0017C4  0E00               	movlw	0
  2394  0017C6  0100               	movlb	0	; () banked
  2395  0017C8  6FB4               	movwf	_colourcard_flag& (0+255),b	;volatile
  2396  0017CA                     
  2397                           ; BSR set to: 0
  2398                           ;colour_cards.c: 100:     PIE0bits.INT1IE = 1;
  2399  0017CA  010E               	movlb	14	; () banked
  2400  0017CC  8329               	bsf	41,1,b	;volatile
  2401  0017CE                     
  2402                           ; BSR set to: 14
  2403  0017CE  0012               	return		;funcret
  2404  0017D0                     __end_of_colourcards_readRGBC:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _colourclick_readRGBC *****************
  2408 ;; Defined at:
  2409 ;;		line 128 in file "colour_click.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  tmpval          2   11[COMRAM] PTR struct .
  2412 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), colourcards_testingRGBC@tmpval(8), main@
      +current(8), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 3
  2431 ;; This function calls:
  2432 ;;		_colourclick_readB
  2433 ;;		_colourclick_readC
  2434 ;;		_colourclick_readG
  2435 ;;		_colourclick_readR
  2436 ;; This function is called by:
  2437 ;;		_colourcards_readRGBC
  2438 ;;		_colourcards_testingRGBC
  2439 ;;		_colourclick_calibration
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text7
  2444  00328E                     __ptext7:
  2445                           	callstack 0
  2446  00328E                     _colourclick_readRGBC:
  2447                           	callstack 26
  2448  00328E                     
  2449                           ;colour_click.c: 128: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 129: {
      +                          ;colour_click.c: 130:     tmpval->R = colourclick_readR();
  2450  00328E  EC76  F019         	call	_colourclick_readR	;wreg free
  2451  003292  C00C  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  2452  003296  C00D  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  2453  00329A  C005  FFDE         	movff	?_colourclick_readR,postinc2
  2454  00329E  C006  FFDD         	movff	?_colourclick_readR+1,postdec2
  2455                           
  2456                           ;colour_click.c: 131:     tmpval->G = colourclick_readG();
  2457  0032A2  EC9E  F019         	call	_colourclick_readG	;wreg free
  2458  0032A6  EE20 F002          	lfsr	2,2
  2459  0032AA  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
  2460  0032AC  26D9               	addwf	fsr2l,f,c
  2461  0032AE  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  2462  0032B0  22DA               	addwfc	fsr2h,f,c
  2463  0032B2  C005  FFDE         	movff	?_colourclick_readG,postinc2
  2464  0032B6  C006  FFDD         	movff	?_colourclick_readG+1,postdec2
  2465                           
  2466                           ;colour_click.c: 132:     tmpval->B = colourclick_readB();
  2467  0032BA  ECEE  F019         	call	_colourclick_readB	;wreg free
  2468  0032BE  EE20 F004          	lfsr	2,4
  2469  0032C2  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
  2470  0032C4  26D9               	addwf	fsr2l,f,c
  2471  0032C6  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  2472  0032C8  22DA               	addwfc	fsr2h,f,c
  2473  0032CA  C005  FFDE         	movff	?_colourclick_readB,postinc2
  2474  0032CE  C006  FFDD         	movff	?_colourclick_readB+1,postdec2
  2475                           
  2476                           ;colour_click.c: 133:     tmpval->C = colourclick_readC();
  2477  0032D2  ECC6  F019         	call	_colourclick_readC	;wreg free
  2478  0032D6  EE20 F006          	lfsr	2,6
  2479  0032DA  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
  2480  0032DC  26D9               	addwf	fsr2l,f,c
  2481  0032DE  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  2482  0032E0  22DA               	addwfc	fsr2h,f,c
  2483  0032E2  C005  FFDE         	movff	?_colourclick_readC,postinc2
  2484  0032E6  C006  FFDD         	movff	?_colourclick_readC+1,postdec2
  2485  0032EA  0012               	return		;funcret
  2486  0032EC                     __end_of_colourclick_readRGBC:
  2487                           	callstack 0
  2488                           
  2489 ;; *************** function _colourclick_readR *****************
  2490 ;; Defined at:
  2491 ;;		line 53 in file "colour_click.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  tmp             2    9[COMRAM] unsigned int 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2    4[COMRAM] unsigned int 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;Total ram usage:        7 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 2
  2512 ;; This function calls:
  2513 ;;		_I2C_2_Master_Read
  2514 ;;		_I2C_2_Master_RepStart
  2515 ;;		_I2C_2_Master_Start
  2516 ;;		_I2C_2_Master_Stop
  2517 ;;		_I2C_2_Master_Write
  2518 ;; This function is called by:
  2519 ;;		_colourclick_readRGBC
  2520 ;;		_colourclick_readRGBC2
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text8
  2525  0032EC                     __ptext8:
  2526                           	callstack 0
  2527  0032EC                     _colourclick_readR:
  2528                           	callstack 26
  2529  0032EC                     
  2530                           ;colour_click.c: 55:  unsigned int tmp;;colour_click.c: 56:  I2C_2_Master_Start();
  2531  0032EC  EC95  F01B         	call	_I2C_2_Master_Start	;wreg free
  2532                           
  2533                           ;colour_click.c: 57:  I2C_2_Master_Write(0x52 | 0x00);
  2534  0032F0  0E52               	movlw	82
  2535  0032F2  EC84  F01B         	call	_I2C_2_Master_Write
  2536                           
  2537                           ;colour_click.c: 58:  I2C_2_Master_Write(0xA0 | 0x16);
  2538  0032F6  0EB6               	movlw	182
  2539  0032F8  EC84  F01B         	call	_I2C_2_Master_Write
  2540                           
  2541                           ;colour_click.c: 59:  I2C_2_Master_RepStart();
  2542  0032FC  EC9A  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2543                           
  2544                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x01);
  2545  003300  0E53               	movlw	83
  2546  003302  EC84  F01B         	call	_I2C_2_Master_Write
  2547                           
  2548                           ;colour_click.c: 61:  tmp=I2C_2_Master_Read(1);
  2549  003306  0E01               	movlw	1
  2550  003308  EC8C  F01A         	call	_I2C_2_Master_Read
  2551  00330C  6E07               	movwf	??_colourclick_readR^0,c
  2552  00330E  5007               	movf	??_colourclick_readR^0,w,c
  2553  003310  6E0A               	movwf	colourclick_readR@tmp^0,c
  2554  003312  6A0B               	clrf	(colourclick_readR@tmp+1)^0,c
  2555                           
  2556                           ;colour_click.c: 62:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2557  003314  0E00               	movlw	0
  2558  003316  EC8C  F01A         	call	_I2C_2_Master_Read
  2559  00331A  6E07               	movwf	??_colourclick_readR^0,c
  2560  00331C  5007               	movf	??_colourclick_readR^0,w,c
  2561  00331E  6E09               	movwf	(??_colourclick_readR+2)^0,c
  2562  003320  6A08               	clrf	(??_colourclick_readR+1)^0,c
  2563  003322  500A               	movf	colourclick_readR@tmp^0,w,c
  2564  003324  1008               	iorwf	(??_colourclick_readR+1)^0,w,c
  2565  003326  6E0A               	movwf	colourclick_readR@tmp^0,c
  2566  003328  500B               	movf	(colourclick_readR@tmp+1)^0,w,c
  2567  00332A  1009               	iorwf	(??_colourclick_readR+2)^0,w,c
  2568  00332C  6E0B               	movwf	(colourclick_readR@tmp+1)^0,c
  2569                           
  2570                           ;colour_click.c: 63:  I2C_2_Master_Stop();
  2571  00332E  EC90  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2572  003332                     
  2573                           ;colour_click.c: 64:  return tmp;
  2574  003332  C00A  F005         	movff	colourclick_readR@tmp,?_colourclick_readR
  2575  003336  C00B  F006         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  2576  00333A  0012               	return		;funcret
  2577  00333C                     __end_of_colourclick_readR:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _colourclick_readG *****************
  2581 ;; Defined at:
  2582 ;;		line 72 in file "colour_click.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  tmp             2    9[COMRAM] unsigned int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2    4[COMRAM] unsigned int 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;Total ram usage:        7 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 2
  2603 ;; This function calls:
  2604 ;;		_I2C_2_Master_Read
  2605 ;;		_I2C_2_Master_RepStart
  2606 ;;		_I2C_2_Master_Start
  2607 ;;		_I2C_2_Master_Stop
  2608 ;;		_I2C_2_Master_Write
  2609 ;; This function is called by:
  2610 ;;		_colourclick_readRGBC
  2611 ;;		_colourclick_readRGBC2
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text9
  2616  00333C                     __ptext9:
  2617                           	callstack 0
  2618  00333C                     _colourclick_readG:
  2619                           	callstack 26
  2620  00333C                     
  2621                           ;colour_click.c: 74:  unsigned int tmp;;colour_click.c: 75:  I2C_2_Master_Start();
  2622  00333C  EC95  F01B         	call	_I2C_2_Master_Start	;wreg free
  2623                           
  2624                           ;colour_click.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  2625  003340  0E52               	movlw	82
  2626  003342  EC84  F01B         	call	_I2C_2_Master_Write
  2627                           
  2628                           ;colour_click.c: 77:  I2C_2_Master_Write(0xA0 | 0x18);
  2629  003346  0EB8               	movlw	184
  2630  003348  EC84  F01B         	call	_I2C_2_Master_Write
  2631                           
  2632                           ;colour_click.c: 78:  I2C_2_Master_RepStart();
  2633  00334C  EC9A  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2634                           
  2635                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  2636  003350  0E53               	movlw	83
  2637  003352  EC84  F01B         	call	_I2C_2_Master_Write
  2638                           
  2639                           ;colour_click.c: 80:  tmp=I2C_2_Master_Read(1);
  2640  003356  0E01               	movlw	1
  2641  003358  EC8C  F01A         	call	_I2C_2_Master_Read
  2642  00335C  6E07               	movwf	??_colourclick_readG^0,c
  2643  00335E  5007               	movf	??_colourclick_readG^0,w,c
  2644  003360  6E0A               	movwf	colourclick_readG@tmp^0,c
  2645  003362  6A0B               	clrf	(colourclick_readG@tmp+1)^0,c
  2646                           
  2647                           ;colour_click.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2648  003364  0E00               	movlw	0
  2649  003366  EC8C  F01A         	call	_I2C_2_Master_Read
  2650  00336A  6E07               	movwf	??_colourclick_readG^0,c
  2651  00336C  5007               	movf	??_colourclick_readG^0,w,c
  2652  00336E  6E09               	movwf	(??_colourclick_readG+2)^0,c
  2653  003370  6A08               	clrf	(??_colourclick_readG+1)^0,c
  2654  003372  500A               	movf	colourclick_readG@tmp^0,w,c
  2655  003374  1008               	iorwf	(??_colourclick_readG+1)^0,w,c
  2656  003376  6E0A               	movwf	colourclick_readG@tmp^0,c
  2657  003378  500B               	movf	(colourclick_readG@tmp+1)^0,w,c
  2658  00337A  1009               	iorwf	(??_colourclick_readG+2)^0,w,c
  2659  00337C  6E0B               	movwf	(colourclick_readG@tmp+1)^0,c
  2660                           
  2661                           ;colour_click.c: 82:  I2C_2_Master_Stop();
  2662  00337E  EC90  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2663  003382                     
  2664                           ;colour_click.c: 83:  return tmp;
  2665  003382  C00A  F005         	movff	colourclick_readG@tmp,?_colourclick_readG
  2666  003386  C00B  F006         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  2667  00338A  0012               	return		;funcret
  2668  00338C                     __end_of_colourclick_readG:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _colourclick_readC *****************
  2672 ;; Defined at:
  2673 ;;		line 110 in file "colour_click.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  tmp             2    9[COMRAM] unsigned int 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  2    4[COMRAM] unsigned int 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;Total ram usage:        7 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 2
  2694 ;; This function calls:
  2695 ;;		_I2C_2_Master_Read
  2696 ;;		_I2C_2_Master_RepStart
  2697 ;;		_I2C_2_Master_Start
  2698 ;;		_I2C_2_Master_Stop
  2699 ;;		_I2C_2_Master_Write
  2700 ;; This function is called by:
  2701 ;;		_colourclick_readRGBC
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text10
  2706  00338C                     __ptext10:
  2707                           	callstack 0
  2708  00338C                     _colourclick_readC:
  2709                           	callstack 26
  2710  00338C                     
  2711                           ;colour_click.c: 112:  unsigned int tmp;;colour_click.c: 113:  I2C_2_Master_Start();
  2712  00338C  EC95  F01B         	call	_I2C_2_Master_Start	;wreg free
  2713                           
  2714                           ;colour_click.c: 114:  I2C_2_Master_Write(0x52 | 0x00);
  2715  003390  0E52               	movlw	82
  2716  003392  EC84  F01B         	call	_I2C_2_Master_Write
  2717                           
  2718                           ;colour_click.c: 115:  I2C_2_Master_Write(0xA0 | 0x14);
  2719  003396  0EB4               	movlw	180
  2720  003398  EC84  F01B         	call	_I2C_2_Master_Write
  2721                           
  2722                           ;colour_click.c: 116:  I2C_2_Master_RepStart();
  2723  00339C  EC9A  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2724                           
  2725                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x01);
  2726  0033A0  0E53               	movlw	83
  2727  0033A2  EC84  F01B         	call	_I2C_2_Master_Write
  2728                           
  2729                           ;colour_click.c: 118:  tmp=I2C_2_Master_Read(1);
  2730  0033A6  0E01               	movlw	1
  2731  0033A8  EC8C  F01A         	call	_I2C_2_Master_Read
  2732  0033AC  6E07               	movwf	??_colourclick_readC^0,c
  2733  0033AE  5007               	movf	??_colourclick_readC^0,w,c
  2734  0033B0  6E0A               	movwf	colourclick_readC@tmp^0,c
  2735  0033B2  6A0B               	clrf	(colourclick_readC@tmp+1)^0,c
  2736                           
  2737                           ;colour_click.c: 119:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2738  0033B4  0E00               	movlw	0
  2739  0033B6  EC8C  F01A         	call	_I2C_2_Master_Read
  2740  0033BA  6E07               	movwf	??_colourclick_readC^0,c
  2741  0033BC  5007               	movf	??_colourclick_readC^0,w,c
  2742  0033BE  6E09               	movwf	(??_colourclick_readC+2)^0,c
  2743  0033C0  6A08               	clrf	(??_colourclick_readC+1)^0,c
  2744  0033C2  500A               	movf	colourclick_readC@tmp^0,w,c
  2745  0033C4  1008               	iorwf	(??_colourclick_readC+1)^0,w,c
  2746  0033C6  6E0A               	movwf	colourclick_readC@tmp^0,c
  2747  0033C8  500B               	movf	(colourclick_readC@tmp+1)^0,w,c
  2748  0033CA  1009               	iorwf	(??_colourclick_readC+2)^0,w,c
  2749  0033CC  6E0B               	movwf	(colourclick_readC@tmp+1)^0,c
  2750                           
  2751                           ;colour_click.c: 120:  I2C_2_Master_Stop();
  2752  0033CE  EC90  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2753  0033D2                     
  2754                           ;colour_click.c: 121:  return tmp;
  2755  0033D2  C00A  F005         	movff	colourclick_readC@tmp,?_colourclick_readC
  2756  0033D6  C00B  F006         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  2757  0033DA  0012               	return		;funcret
  2758  0033DC                     __end_of_colourclick_readC:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _colourclick_readB *****************
  2762 ;; Defined at:
  2763 ;;		line 91 in file "colour_click.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  tmp             2    9[COMRAM] unsigned int 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2    4[COMRAM] unsigned int 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;Total ram usage:        7 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 2
  2784 ;; This function calls:
  2785 ;;		_I2C_2_Master_Read
  2786 ;;		_I2C_2_Master_RepStart
  2787 ;;		_I2C_2_Master_Start
  2788 ;;		_I2C_2_Master_Stop
  2789 ;;		_I2C_2_Master_Write
  2790 ;; This function is called by:
  2791 ;;		_colourclick_readRGBC
  2792 ;;		_colourclick_readRGBC2
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text11
  2797  0033DC                     __ptext11:
  2798                           	callstack 0
  2799  0033DC                     _colourclick_readB:
  2800                           	callstack 26
  2801  0033DC                     
  2802                           ;colour_click.c: 93:  unsigned int tmp;;colour_click.c: 94:  I2C_2_Master_Start();
  2803  0033DC  EC95  F01B         	call	_I2C_2_Master_Start	;wreg free
  2804                           
  2805                           ;colour_click.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  2806  0033E0  0E52               	movlw	82
  2807  0033E2  EC84  F01B         	call	_I2C_2_Master_Write
  2808                           
  2809                           ;colour_click.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  2810  0033E6  0EBA               	movlw	186
  2811  0033E8  EC84  F01B         	call	_I2C_2_Master_Write
  2812                           
  2813                           ;colour_click.c: 97:  I2C_2_Master_RepStart();
  2814  0033EC  EC9A  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2815                           
  2816                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  2817  0033F0  0E53               	movlw	83
  2818  0033F2  EC84  F01B         	call	_I2C_2_Master_Write
  2819                           
  2820                           ;colour_click.c: 99:  tmp=I2C_2_Master_Read(1);
  2821  0033F6  0E01               	movlw	1
  2822  0033F8  EC8C  F01A         	call	_I2C_2_Master_Read
  2823  0033FC  6E07               	movwf	??_colourclick_readB^0,c
  2824  0033FE  5007               	movf	??_colourclick_readB^0,w,c
  2825  003400  6E0A               	movwf	colourclick_readB@tmp^0,c
  2826  003402  6A0B               	clrf	(colourclick_readB@tmp+1)^0,c
  2827                           
  2828                           ;colour_click.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2829  003404  0E00               	movlw	0
  2830  003406  EC8C  F01A         	call	_I2C_2_Master_Read
  2831  00340A  6E07               	movwf	??_colourclick_readB^0,c
  2832  00340C  5007               	movf	??_colourclick_readB^0,w,c
  2833  00340E  6E09               	movwf	(??_colourclick_readB+2)^0,c
  2834  003410  6A08               	clrf	(??_colourclick_readB+1)^0,c
  2835  003412  500A               	movf	colourclick_readB@tmp^0,w,c
  2836  003414  1008               	iorwf	(??_colourclick_readB+1)^0,w,c
  2837  003416  6E0A               	movwf	colourclick_readB@tmp^0,c
  2838  003418  500B               	movf	(colourclick_readB@tmp+1)^0,w,c
  2839  00341A  1009               	iorwf	(??_colourclick_readB+2)^0,w,c
  2840  00341C  6E0B               	movwf	(colourclick_readB@tmp+1)^0,c
  2841                           
  2842                           ;colour_click.c: 101:  I2C_2_Master_Stop();
  2843  00341E  EC90  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2844  003422                     
  2845                           ;colour_click.c: 102:  return tmp;
  2846  003422  C00A  F005         	movff	colourclick_readB@tmp,?_colourclick_readB
  2847  003426  C00B  F006         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  2848  00342A  0012               	return		;funcret
  2849  00342C                     __end_of_colourclick_readB:
  2850                           	callstack 0
  2851                           
  2852 ;; *************** function _I2C_2_Master_Write *****************
  2853 ;; Defined at:
  2854 ;;		line 69 in file "I2C.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  data_byte       1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  data_byte       1    1[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;Total ram usage:        1 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 1
  2875 ;; This function calls:
  2876 ;;		_I2C_2_Master_Idle
  2877 ;; This function is called by:
  2878 ;;		_colourclick_writetoaddr
  2879 ;;		_colourclick_readR
  2880 ;;		_colourclick_readG
  2881 ;;		_colourclick_readB
  2882 ;;		_colourclick_readC
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text12
  2887  003708                     __ptext12:
  2888                           	callstack 0
  2889  003708                     _I2C_2_Master_Write:
  2890                           	callstack 27
  2891                           
  2892                           ;incstack = 0
  2893                           ;I2C_2_Master_Write@data_byte stored from wreg
  2894  003708  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2895  00370A                     
  2896                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
  2897  00370A  ECDE  F01A         	call	_I2C_2_Master_Idle	;wreg free
  2898  00370E                     
  2899                           ;I2C.c: 72:   SSP2BUF = data_byte;
  2900  00370E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2901  003712  0012               	return		;funcret
  2902  003714                     __end_of_I2C_2_Master_Write:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _I2C_2_Master_Stop *****************
  2906 ;; Defined at:
  2907 ;;		line 59 in file "I2C.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 1
  2928 ;; This function calls:
  2929 ;;		_I2C_2_Master_Idle
  2930 ;; This function is called by:
  2931 ;;		_colourclick_writetoaddr
  2932 ;;		_colourclick_readR
  2933 ;;		_colourclick_readG
  2934 ;;		_colourclick_readB
  2935 ;;		_colourclick_readC
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text13
  2940  003720                     __ptext13:
  2941                           	callstack 0
  2942  003720                     _I2C_2_Master_Stop:
  2943                           	callstack 27
  2944  003720                     
  2945                           ;I2C.c: 61:   I2C_2_Master_Idle();
  2946  003720  ECDE  F01A         	call	_I2C_2_Master_Idle	;wreg free
  2947  003724                     
  2948                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
  2949  003724  010E               	movlb	14	; () banked
  2950  003726  85DA               	bsf	218,2,b	;volatile
  2951  003728                     
  2952                           ; BSR set to: 14
  2953  003728  0012               	return		;funcret
  2954  00372A                     __end_of_I2C_2_Master_Stop:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _I2C_2_Master_Start *****************
  2958 ;; Defined at:
  2959 ;;		line 39 in file "I2C.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;Total ram usage:        0 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 1
  2980 ;; This function calls:
  2981 ;;		_I2C_2_Master_Idle
  2982 ;; This function is called by:
  2983 ;;		_colourclick_writetoaddr
  2984 ;;		_colourclick_readR
  2985 ;;		_colourclick_readG
  2986 ;;		_colourclick_readB
  2987 ;;		_colourclick_readC
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text14
  2992  00372A                     __ptext14:
  2993                           	callstack 0
  2994  00372A                     _I2C_2_Master_Start:
  2995                           	callstack 27
  2996  00372A                     
  2997                           ;I2C.c: 41:   I2C_2_Master_Idle();
  2998  00372A  ECDE  F01A         	call	_I2C_2_Master_Idle	;wreg free
  2999  00372E                     
  3000                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
  3001  00372E  010E               	movlb	14	; () banked
  3002  003730  81DA               	bsf	218,0,b	;volatile
  3003  003732                     
  3004                           ; BSR set to: 14
  3005  003732  0012               	return		;funcret
  3006  003734                     __end_of_I2C_2_Master_Start:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _I2C_2_Master_RepStart *****************
  3010 ;; Defined at:
  3011 ;;		line 49 in file "I2C.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 1
  3032 ;; This function calls:
  3033 ;;		_I2C_2_Master_Idle
  3034 ;; This function is called by:
  3035 ;;		_colourclick_readR
  3036 ;;		_colourclick_readG
  3037 ;;		_colourclick_readB
  3038 ;;		_colourclick_readC
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text15
  3043  003734                     __ptext15:
  3044                           	callstack 0
  3045  003734                     _I2C_2_Master_RepStart:
  3046                           	callstack 26
  3047  003734                     
  3048                           ;I2C.c: 51:   I2C_2_Master_Idle();
  3049  003734  ECDE  F01A         	call	_I2C_2_Master_Idle	;wreg free
  3050  003738                     
  3051                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
  3052  003738  010E               	movlb	14	; () banked
  3053  00373A  83DA               	bsf	218,1,b	;volatile
  3054  00373C                     
  3055                           ; BSR set to: 14
  3056  00373C  0012               	return		;funcret
  3057  00373E                     __end_of_I2C_2_Master_RepStart:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _I2C_2_Master_Read *****************
  3061 ;; Defined at:
  3062 ;;		line 79 in file "I2C.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  ack             1    wreg     unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  ack             1    2[COMRAM] unsigned char 
  3067 ;;  tmp             1    3[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      unsigned char 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;Total ram usage:        3 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 1
  3084 ;; This function calls:
  3085 ;;		_I2C_2_Master_Idle
  3086 ;; This function is called by:
  3087 ;;		_colourclick_readR
  3088 ;;		_colourclick_readG
  3089 ;;		_colourclick_readB
  3090 ;;		_colourclick_readC
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text16
  3095  003518                     __ptext16:
  3096                           	callstack 0
  3097  003518                     _I2C_2_Master_Read:
  3098                           	callstack 26
  3099                           
  3100                           ; BSR set to: 14
  3101                           ;incstack = 0
  3102                           ;I2C_2_Master_Read@ack stored from wreg
  3103  003518  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3104  00351A                     
  3105                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
  3106  00351A  ECDE  F01A         	call	_I2C_2_Master_Idle	;wreg free
  3107  00351E                     
  3108                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
  3109  00351E  010E               	movlb	14	; () banked
  3110  003520  87DA               	bsf	218,3,b	;volatile
  3111                           
  3112                           ;I2C.c: 84:   I2C_2_Master_Idle();
  3113  003522  ECDE  F01A         	call	_I2C_2_Master_Idle	;wreg free
  3114  003526                     
  3115                           ;I2C.c: 85:   tmp = SSP2BUF;
  3116  003526  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3117                           
  3118                           ;I2C.c: 86:   I2C_2_Master_Idle();
  3119  00352A  ECDE  F01A         	call	_I2C_2_Master_Idle	;wreg free
  3120  00352E                     
  3121                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
  3122  00352E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3123  003530  B4D8               	btfsc	status,2,c
  3124  003532  EF9D  F01A         	goto	u2501
  3125  003536  EFA1  F01A         	goto	u2500
  3126  00353A                     u2501:
  3127  00353A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3128  00353C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3129  00353E  EFA2  F01A         	goto	u2518
  3130  003542                     u2500:
  3131  003542  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3132  003544                     u2518:
  3133  003544  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3134  003546  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3135  003548  010E               	movlb	14	; () banked
  3136  00354A  51DA               	movf	218,w,b	;volatile
  3137  00354C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3138  00354E  0BDF               	andlw	-33
  3139  003550  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3140  003552  6FDA               	movwf	218,b	;volatile
  3141  003554                     
  3142                           ; BSR set to: 14
  3143                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
  3144  003554  89DA               	bsf	218,4,b	;volatile
  3145  003556                     
  3146                           ; BSR set to: 14
  3147                           ;I2C.c: 89:   return tmp;
  3148  003556  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3149  003558                     
  3150                           ; BSR set to: 14
  3151  003558  0012               	return		;funcret
  3152  00355A                     __end_of_I2C_2_Master_Read:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _I2C_2_Master_Idle *****************
  3156 ;; Defined at:
  3157 ;;		line 30 in file "I2C.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;Total ram usage:        1 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_I2C_2_Master_Start
  3181 ;;		_I2C_2_Master_RepStart
  3182 ;;		_I2C_2_Master_Stop
  3183 ;;		_I2C_2_Master_Write
  3184 ;;		_I2C_2_Master_Read
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text17
  3189  0035BC                     __ptext17:
  3190                           	callstack 0
  3191  0035BC                     _I2C_2_Master_Idle:
  3192                           	callstack 27
  3193  0035BC                     l387:
  3194  0035BC  010E               	movlb	14	; () banked
  3195  0035BE  B5D8               	btfsc	216,2,b	;volatile
  3196  0035C0  EFE4  F01A         	goto	u2421
  3197  0035C4  EFE6  F01A         	goto	u2420
  3198  0035C8                     u2421:
  3199  0035C8  EFDE  F01A         	goto	l387
  3200  0035CC                     u2420:
  3201  0035CC                     
  3202                           ; BSR set to: 14
  3203  0035CC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3204  0035D0  0E1F               	movlw	31
  3205  0035D2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3206  0035D4  A4D8               	btfss	status,2,c
  3207  0035D6  EFEF  F01A         	goto	u2431
  3208  0035DA  EFF1  F01A         	goto	u2430
  3209  0035DE                     u2431:
  3210  0035DE  EFDE  F01A         	goto	l387
  3211  0035E2                     u2430:
  3212  0035E2                     
  3213                           ; BSR set to: 14
  3214  0035E2  0012               	return		;funcret
  3215  0035E4                     __end_of_I2C_2_Master_Idle:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function ___fldiv *****************
  3219 ;; Defined at:
  3220 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  b               4   14[COMRAM] void 
  3223 ;;  a               4   18[COMRAM] void 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  grs             4   33[COMRAM] unsigned long 
  3226 ;;  rem             4   26[COMRAM] unsigned long 
  3227 ;;  new_exp         2   31[COMRAM] short 
  3228 ;;  aexp            1   38[COMRAM] unsigned char 
  3229 ;;  bexp            1   37[COMRAM] unsigned char 
  3230 ;;  sign            1   30[COMRAM] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  4   14[COMRAM] unsigned char 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;Total ram usage:       25 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_colourcards_readRGBC
  3250 ;;		_colourcards_testingRGBC
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text18
  3255  0020BA                     __ptext18:
  3256                           	callstack 0
  3257  0020BA                     ___fldiv:
  3258                           	callstack 29
  3259  0020BA  5012               	movf	(___fldiv@b+3)^0,w,c
  3260  0020BC  0B80               	andlw	128
  3261  0020BE  6E1F               	movwf	___fldiv@sign^0,c
  3262  0020C0  5012               	movf	(___fldiv@b+3)^0,w,c
  3263  0020C2  2412               	addwf	(___fldiv@b+3)^0,w,c
  3264  0020C4  6E26               	movwf	___fldiv@bexp^0,c
  3265  0020C6  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3266  0020C8  EF68  F010         	goto	u3551
  3267  0020CC  EF6A  F010         	goto	u3550
  3268  0020D0                     u3551:
  3269  0020D0  EF6B  F010         	goto	l3537
  3270  0020D4                     u3550:
  3271  0020D4  8026               	bsf	___fldiv@bexp^0,0,c
  3272  0020D6                     l3537:
  3273  0020D6  5026               	movf	___fldiv@bexp^0,w,c
  3274  0020D8  B4D8               	btfsc	status,2,c
  3275  0020DA  EF71  F010         	goto	u3561
  3276  0020DE  EF73  F010         	goto	u3560
  3277  0020E2                     u3561:
  3278  0020E2  EF88  F010         	goto	l3547
  3279  0020E6                     u3560:
  3280  0020E6  2826               	incf	___fldiv@bexp^0,w,c
  3281  0020E8  A4D8               	btfss	status,2,c
  3282  0020EA  EF79  F010         	goto	u3571
  3283  0020EE  EF7B  F010         	goto	u3570
  3284  0020F2                     u3571:
  3285  0020F2  EF83  F010         	goto	l3543
  3286  0020F6                     u3570:
  3287  0020F6  0E00               	movlw	0
  3288  0020F8  6E0F               	movwf	___fldiv@b^0,c
  3289  0020FA  0E00               	movlw	0
  3290  0020FC  6E10               	movwf	(___fldiv@b+1)^0,c
  3291  0020FE  0E00               	movlw	0
  3292  002100  6E11               	movwf	(___fldiv@b+2)^0,c
  3293  002102  0E00               	movlw	0
  3294  002104  6E12               	movwf	(___fldiv@b+3)^0,c
  3295  002106                     l3543:
  3296  002106  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3297  002108  0E00               	movlw	0
  3298  00210A  6E12               	movwf	(___fldiv@b+3)^0,c
  3299  00210C  EF90  F010         	goto	l3549
  3300  002110                     l3547:
  3301  002110  0E00               	movlw	0
  3302  002112  6E0F               	movwf	___fldiv@b^0,c
  3303  002114  0E00               	movlw	0
  3304  002116  6E10               	movwf	(___fldiv@b+1)^0,c
  3305  002118  0E00               	movlw	0
  3306  00211A  6E11               	movwf	(___fldiv@b+2)^0,c
  3307  00211C  0E00               	movlw	0
  3308  00211E  6E12               	movwf	(___fldiv@b+3)^0,c
  3309  002120                     l3549:
  3310  002120  5016               	movf	(___fldiv@a+3)^0,w,c
  3311  002122  0B80               	andlw	128
  3312  002124  1A1F               	xorwf	___fldiv@sign^0,f,c
  3313  002126  5016               	movf	(___fldiv@a+3)^0,w,c
  3314  002128  2416               	addwf	(___fldiv@a+3)^0,w,c
  3315  00212A  6E27               	movwf	___fldiv@aexp^0,c
  3316  00212C  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3317  00212E  EF9B  F010         	goto	u3581
  3318  002132  EF9D  F010         	goto	u3580
  3319  002136                     u3581:
  3320  002136  EF9E  F010         	goto	l3557
  3321  00213A                     u3580:
  3322  00213A  8027               	bsf	___fldiv@aexp^0,0,c
  3323  00213C                     l3557:
  3324  00213C  5027               	movf	___fldiv@aexp^0,w,c
  3325  00213E  B4D8               	btfsc	status,2,c
  3326  002140  EFA4  F010         	goto	u3591
  3327  002144  EFA6  F010         	goto	u3590
  3328  002148                     u3591:
  3329  002148  EFBB  F010         	goto	l3567
  3330  00214C                     u3590:
  3331  00214C  2827               	incf	___fldiv@aexp^0,w,c
  3332  00214E  A4D8               	btfss	status,2,c
  3333  002150  EFAC  F010         	goto	u3601
  3334  002154  EFAE  F010         	goto	u3600
  3335  002158                     u3601:
  3336  002158  EFB6  F010         	goto	l3563
  3337  00215C                     u3600:
  3338  00215C  0E00               	movlw	0
  3339  00215E  6E13               	movwf	___fldiv@a^0,c
  3340  002160  0E00               	movlw	0
  3341  002162  6E14               	movwf	(___fldiv@a+1)^0,c
  3342  002164  0E00               	movlw	0
  3343  002166  6E15               	movwf	(___fldiv@a+2)^0,c
  3344  002168  0E00               	movlw	0
  3345  00216A  6E16               	movwf	(___fldiv@a+3)^0,c
  3346  00216C                     l3563:
  3347  00216C  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3348  00216E  0E00               	movlw	0
  3349  002170  6E16               	movwf	(___fldiv@a+3)^0,c
  3350  002172  EFC3  F010         	goto	l3569
  3351  002176                     l3567:
  3352  002176  0E00               	movlw	0
  3353  002178  6E13               	movwf	___fldiv@a^0,c
  3354  00217A  0E00               	movlw	0
  3355  00217C  6E14               	movwf	(___fldiv@a+1)^0,c
  3356  00217E  0E00               	movlw	0
  3357  002180  6E15               	movwf	(___fldiv@a+2)^0,c
  3358  002182  0E00               	movlw	0
  3359  002184  6E16               	movwf	(___fldiv@a+3)^0,c
  3360  002186                     l3569:
  3361  002186  5013               	movf	___fldiv@a^0,w,c
  3362  002188  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3363  00218A  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3364  00218C  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3365  00218E  A4D8               	btfss	status,2,c
  3366  002190  EFCC  F010         	goto	u3611
  3367  002194  EFCE  F010         	goto	u3610
  3368  002198                     u3611:
  3369  002198  EFE6  F010         	goto	l3581
  3370  00219C                     u3610:
  3371  00219C  0E00               	movlw	0
  3372  00219E  6E0F               	movwf	___fldiv@b^0,c
  3373  0021A0  0E00               	movlw	0
  3374  0021A2  6E10               	movwf	(___fldiv@b+1)^0,c
  3375  0021A4  0E00               	movlw	0
  3376  0021A6  6E11               	movwf	(___fldiv@b+2)^0,c
  3377  0021A8  0E00               	movlw	0
  3378  0021AA  6E12               	movwf	(___fldiv@b+3)^0,c
  3379  0021AC  0E80               	movlw	128
  3380  0021AE  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3381  0021B0  0E7F               	movlw	127
  3382  0021B2  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3383  0021B4                     l3575:
  3384  0021B4  501F               	movf	___fldiv@sign^0,w,c
  3385  0021B6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3386  0021B8  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3387  0021BC  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3388  0021C0  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3389  0021C4  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3390  0021C8  EF29  F012         	goto	l1299
  3391  0021CC                     l3581:
  3392  0021CC  5026               	movf	___fldiv@bexp^0,w,c
  3393  0021CE  A4D8               	btfss	status,2,c
  3394  0021D0  EFEC  F010         	goto	u3621
  3395  0021D4  EFEE  F010         	goto	u3620
  3396  0021D8                     u3621:
  3397  0021D8  EFF8  F010         	goto	l3589
  3398  0021DC                     u3620:
  3399  0021DC  0E00               	movlw	0
  3400  0021DE  6E0F               	movwf	?___fldiv^0,c
  3401  0021E0  0E00               	movlw	0
  3402  0021E2  6E10               	movwf	(?___fldiv+1)^0,c
  3403  0021E4  0E00               	movlw	0
  3404  0021E6  6E11               	movwf	(?___fldiv+2)^0,c
  3405  0021E8  0E00               	movlw	0
  3406  0021EA  6E12               	movwf	(?___fldiv+3)^0,c
  3407  0021EC  EF29  F012         	goto	l1299
  3408  0021F0                     l3589:
  3409  0021F0  5027               	movf	___fldiv@aexp^0,w,c
  3410  0021F2  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3411  0021F6  6A18               	clrf	(??___fldiv+1)^0,c
  3412  0021F8  5E17               	subwf	??___fldiv^0,f,c
  3413  0021FA  0E00               	movlw	0
  3414  0021FC  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3415  0021FE  0E7F               	movlw	127
  3416  002200  2417               	addwf	??___fldiv^0,w,c
  3417  002202  6E20               	movwf	___fldiv@new_exp^0,c
  3418  002204  0E00               	movlw	0
  3419  002206  2018               	addwfc	(??___fldiv+1)^0,w,c
  3420  002208  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3421  00220A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3422  00220E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3423  002212  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3424  002216  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3425  00221A  0E00               	movlw	0
  3426  00221C  6E0F               	movwf	___fldiv@b^0,c
  3427  00221E  0E00               	movlw	0
  3428  002220  6E10               	movwf	(___fldiv@b+1)^0,c
  3429  002222  0E00               	movlw	0
  3430  002224  6E11               	movwf	(___fldiv@b+2)^0,c
  3431  002226  0E00               	movlw	0
  3432  002228  6E12               	movwf	(___fldiv@b+3)^0,c
  3433  00222A  0E00               	movlw	0
  3434  00222C  6E22               	movwf	___fldiv@grs^0,c
  3435  00222E  0E00               	movlw	0
  3436  002230  6E23               	movwf	(___fldiv@grs+1)^0,c
  3437  002232  0E00               	movlw	0
  3438  002234  6E24               	movwf	(___fldiv@grs+2)^0,c
  3439  002236  0E00               	movlw	0
  3440  002238  6E25               	movwf	(___fldiv@grs+3)^0,c
  3441  00223A  0E00               	movlw	0
  3442  00223C  6E27               	movwf	___fldiv@aexp^0,c
  3443  00223E  EF59  F011         	goto	l1301
  3444  002242                     l3599:
  3445  002242  5027               	movf	___fldiv@aexp^0,w,c
  3446  002244  B4D8               	btfsc	status,2,c
  3447  002246  EF27  F011         	goto	u3631
  3448  00224A  EF29  F011         	goto	u3630
  3449  00224E                     u3631:
  3450  00224E  EF40  F011         	goto	l3607
  3451  002252                     u3630:
  3452  002252  90D8               	bcf	status,0,c
  3453  002254  361B               	rlcf	___fldiv@rem^0,f,c
  3454  002256  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  3455  002258  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  3456  00225A  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  3457  00225C  90D8               	bcf	status,0,c
  3458  00225E  360F               	rlcf	___fldiv@b^0,f,c
  3459  002260  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3460  002262  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3461  002264  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3462  002266  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3463  002268  EF38  F011         	goto	u3641
  3464  00226C  EF3A  F011         	goto	u3640
  3465  002270                     u3641:
  3466  002270  EF3B  F011         	goto	l1304
  3467  002274                     u3640:
  3468  002274  800F               	bsf	___fldiv@b^0,0,c
  3469  002276                     l1304:
  3470  002276  90D8               	bcf	status,0,c
  3471  002278  3622               	rlcf	___fldiv@grs^0,f,c
  3472  00227A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3473  00227C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3474  00227E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3475  002280                     l3607:
  3476  002280  5013               	movf	___fldiv@a^0,w,c
  3477  002282  5C1B               	subwf	___fldiv@rem^0,w,c
  3478  002284  5014               	movf	(___fldiv@a+1)^0,w,c
  3479  002286  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  3480  002288  5015               	movf	(___fldiv@a+2)^0,w,c
  3481  00228A  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  3482  00228C  5016               	movf	(___fldiv@a+3)^0,w,c
  3483  00228E  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  3484  002290  A0D8               	btfss	status,0,c
  3485  002292  EF4D  F011         	goto	u3651
  3486  002296  EF4F  F011         	goto	u3650
  3487  00229A                     u3651:
  3488  00229A  EF58  F011         	goto	l3613
  3489  00229E                     u3650:
  3490  00229E  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  3491  0022A0  5013               	movf	___fldiv@a^0,w,c
  3492  0022A2  5E1B               	subwf	___fldiv@rem^0,f,c
  3493  0022A4  5014               	movf	(___fldiv@a+1)^0,w,c
  3494  0022A6  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  3495  0022A8  5015               	movf	(___fldiv@a+2)^0,w,c
  3496  0022AA  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  3497  0022AC  5016               	movf	(___fldiv@a+3)^0,w,c
  3498  0022AE  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  3499  0022B0                     l3613:
  3500  0022B0  2A27               	incf	___fldiv@aexp^0,f,c
  3501  0022B2                     l1301:
  3502  0022B2  0E19               	movlw	25
  3503  0022B4  6427               	cpfsgt	___fldiv@aexp^0,c
  3504  0022B6  EF5F  F011         	goto	u3661
  3505  0022BA  EF61  F011         	goto	u3660
  3506  0022BE                     u3661:
  3507  0022BE  EF21  F011         	goto	l3599
  3508  0022C2                     u3660:
  3509  0022C2  501B               	movf	___fldiv@rem^0,w,c
  3510  0022C4  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  3511  0022C6  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  3512  0022C8  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  3513  0022CA  B4D8               	btfsc	status,2,c
  3514  0022CC  EF6A  F011         	goto	u3671
  3515  0022D0  EF6C  F011         	goto	u3670
  3516  0022D4                     u3671:
  3517  0022D4  EF84  F011         	goto	l3625
  3518  0022D8                     u3670:
  3519  0022D8  8022               	bsf	___fldiv@grs^0,0,c
  3520  0022DA  EF84  F011         	goto	l3625
  3521  0022DE                     l3619:
  3522  0022DE  90D8               	bcf	status,0,c
  3523  0022E0  360F               	rlcf	___fldiv@b^0,f,c
  3524  0022E2  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3525  0022E4  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3526  0022E6  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3527  0022E8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3528  0022EA  EF79  F011         	goto	u3681
  3529  0022EE  EF7B  F011         	goto	u3680
  3530  0022F2                     u3681:
  3531  0022F2  EF7C  F011         	goto	l1310
  3532  0022F6                     u3680:
  3533  0022F6  800F               	bsf	___fldiv@b^0,0,c
  3534  0022F8                     l1310:
  3535  0022F8  90D8               	bcf	status,0,c
  3536  0022FA  3622               	rlcf	___fldiv@grs^0,f,c
  3537  0022FC  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3538  0022FE  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3539  002300  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3540  002302  0620               	decf	___fldiv@new_exp^0,f,c
  3541  002304  A0D8               	btfss	status,0,c
  3542  002306  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  3543  002308                     l3625:
  3544  002308  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3545  00230A  EF89  F011         	goto	u3691
  3546  00230E  EF8B  F011         	goto	u3690
  3547  002312                     u3691:
  3548  002312  EF6F  F011         	goto	l3619
  3549  002316                     u3690:
  3550  002316  0E00               	movlw	0
  3551  002318  6E27               	movwf	___fldiv@aexp^0,c
  3552  00231A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3553  00231C  EF92  F011         	goto	u3701
  3554  002320  EF94  F011         	goto	u3700
  3555  002324                     u3701:
  3556  002324  EFB8  F011         	goto	l1312
  3557  002328                     u3700:
  3558  002328  0EFF               	movlw	255
  3559  00232A  1422               	andwf	___fldiv@grs^0,w,c
  3560  00232C  6E17               	movwf	??___fldiv^0,c
  3561  00232E  0EFF               	movlw	255
  3562  002330  1423               	andwf	(___fldiv@grs+1)^0,w,c
  3563  002332  6E18               	movwf	(??___fldiv+1)^0,c
  3564  002334  0EFF               	movlw	255
  3565  002336  1424               	andwf	(___fldiv@grs+2)^0,w,c
  3566  002338  6E19               	movwf	(??___fldiv+2)^0,c
  3567  00233A  0E7F               	movlw	127
  3568  00233C  1425               	andwf	(___fldiv@grs+3)^0,w,c
  3569  00233E  6E1A               	movwf	(??___fldiv+3)^0,c
  3570  002340  5017               	movf	??___fldiv^0,w,c
  3571  002342  1018               	iorwf	(??___fldiv+1)^0,w,c
  3572  002344  1019               	iorwf	(??___fldiv+2)^0,w,c
  3573  002346  101A               	iorwf	(??___fldiv+3)^0,w,c
  3574  002348  B4D8               	btfsc	status,2,c
  3575  00234A  EFA9  F011         	goto	u3711
  3576  00234E  EFAB  F011         	goto	u3710
  3577  002352                     u3711:
  3578  002352  EFAF  F011         	goto	l1313
  3579  002356                     u3710:
  3580  002356                     l3633:
  3581  002356  0E01               	movlw	1
  3582  002358  6E27               	movwf	___fldiv@aexp^0,c
  3583  00235A  EFB8  F011         	goto	l1312
  3584  00235E                     l1313:
  3585  00235E  A00F               	btfss	___fldiv@b^0,0,c
  3586  002360  EFB4  F011         	goto	u3721
  3587  002364  EFB6  F011         	goto	u3720
  3588  002368                     u3721:
  3589  002368  EFB8  F011         	goto	l1312
  3590  00236C                     u3720:
  3591  00236C  EFAB  F011         	goto	l3633
  3592  002370                     l1312:
  3593  002370  5027               	movf	___fldiv@aexp^0,w,c
  3594  002372  B4D8               	btfsc	status,2,c
  3595  002374  EFBE  F011         	goto	u3731
  3596  002378  EFC0  F011         	goto	u3730
  3597  00237C                     u3731:
  3598  00237C  EFE4  F011         	goto	l3645
  3599  002380                     u3730:
  3600  002380  0E01               	movlw	1
  3601  002382  260F               	addwf	___fldiv@b^0,f,c
  3602  002384  0E00               	movlw	0
  3603  002386  2210               	addwfc	(___fldiv@b+1)^0,f,c
  3604  002388  2211               	addwfc	(___fldiv@b+2)^0,f,c
  3605  00238A  2212               	addwfc	(___fldiv@b+3)^0,f,c
  3606  00238C  A012               	btfss	(___fldiv@b+3)^0,0,c
  3607  00238E  EFCB  F011         	goto	u3741
  3608  002392  EFCD  F011         	goto	u3740
  3609  002396                     u3741:
  3610  002396  EFE4  F011         	goto	l3645
  3611  00239A                     u3740:
  3612  00239A  C00F  F017         	movff	___fldiv@b,??___fldiv
  3613  00239E  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  3614  0023A2  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  3615  0023A6  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  3616  0023AA  341A               	rlcf	(??___fldiv+3)^0,w,c
  3617  0023AC  321A               	rrcf	(??___fldiv+3)^0,f,c
  3618  0023AE  3219               	rrcf	(??___fldiv+2)^0,f,c
  3619  0023B0  3218               	rrcf	(??___fldiv+1)^0,f,c
  3620  0023B2  3217               	rrcf	??___fldiv^0,f,c
  3621  0023B4  C017  F00F         	movff	??___fldiv,___fldiv@b
  3622  0023B8  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  3623  0023BC  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  3624  0023C0  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  3625  0023C4  4A20               	infsnz	___fldiv@new_exp^0,f,c
  3626  0023C6  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  3627  0023C8                     l3645:
  3628  0023C8  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3629  0023CA  EFEF  F011         	goto	u3751
  3630  0023CE  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3631  0023D0  E108               	bnz	u3750
  3632  0023D2  2820               	incf	___fldiv@new_exp^0,w,c
  3633  0023D4  A0D8               	btfss	status,0,c
  3634  0023D6  EFEF  F011         	goto	u3751
  3635  0023DA  EFF1  F011         	goto	u3750
  3636  0023DE                     u3751:
  3637  0023DE  EFFC  F011         	goto	l3649
  3638  0023E2                     u3750:
  3639  0023E2  0E00               	movlw	0
  3640  0023E4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3641  0023E6  6820               	setf	___fldiv@new_exp^0,c
  3642  0023E8  0E00               	movlw	0
  3643  0023EA  6E0F               	movwf	___fldiv@b^0,c
  3644  0023EC  0E00               	movlw	0
  3645  0023EE  6E10               	movwf	(___fldiv@b+1)^0,c
  3646  0023F0  0E00               	movlw	0
  3647  0023F2  6E11               	movwf	(___fldiv@b+2)^0,c
  3648  0023F4  0E00               	movlw	0
  3649  0023F6  6E12               	movwf	(___fldiv@b+3)^0,c
  3650  0023F8                     l3649:
  3651  0023F8  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3652  0023FA  EF09  F012         	goto	u3760
  3653  0023FE  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3654  002400  E106               	bnz	u3761
  3655  002402  0420               	decf	___fldiv@new_exp^0,w,c
  3656  002404  B0D8               	btfsc	status,0,c
  3657  002406  EF07  F012         	goto	u3761
  3658  00240A  EF09  F012         	goto	u3760
  3659  00240E                     u3761:
  3660  00240E  EF17  F012         	goto	l3653
  3661  002412                     u3760:
  3662  002412  0E00               	movlw	0
  3663  002414  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3664  002416  0E00               	movlw	0
  3665  002418  6E20               	movwf	___fldiv@new_exp^0,c
  3666  00241A  0E00               	movlw	0
  3667  00241C  6E0F               	movwf	___fldiv@b^0,c
  3668  00241E  0E00               	movlw	0
  3669  002420  6E10               	movwf	(___fldiv@b+1)^0,c
  3670  002422  0E00               	movlw	0
  3671  002424  6E11               	movwf	(___fldiv@b+2)^0,c
  3672  002426  0E00               	movlw	0
  3673  002428  6E12               	movwf	(___fldiv@b+3)^0,c
  3674  00242A  0E00               	movlw	0
  3675  00242C  6E1F               	movwf	___fldiv@sign^0,c
  3676  00242E                     l3653:
  3677  00242E  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  3678  002432  A026               	btfss	___fldiv@bexp^0,0,c
  3679  002434  EF1E  F012         	goto	u3771
  3680  002438  EF20  F012         	goto	u3770
  3681  00243C                     u3771:
  3682  00243C  EF23  F012         	goto	l3659
  3683  002440                     u3770:
  3684  002440  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3685  002442  EF24  F012         	goto	l3661
  3686  002446                     l3659:
  3687  002446  9E11               	bcf	(___fldiv@b+2)^0,7,c
  3688  002448                     l3661:
  3689  002448  90D8               	bcf	status,0,c
  3690  00244A  3026               	rrcf	___fldiv@bexp^0,w,c
  3691  00244C  6E12               	movwf	(___fldiv@b+3)^0,c
  3692  00244E  EFDA  F010         	goto	l3575
  3693  002452                     l1299:
  3694  002452  0012               	return		;funcret
  3695  002454                     __end_of___fldiv:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _checkbatterylevel *****************
  3699 ;; Defined at:
  3700 ;;		line 73 in file "DC_motors.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  batterylevel    1    1[COMRAM] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;Total ram usage:        1 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 1
  3721 ;; This function calls:
  3722 ;;		_ADC_getval
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text19
  3729  003672                     __ptext19:
  3730                           	callstack 0
  3731  003672                     _checkbatterylevel:
  3732                           	callstack 29
  3733  003672                     
  3734                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
  3735  003672  EC66  F01B         	call	_ADC_getval	;wreg free
  3736  003676  6E02               	movwf	checkbatterylevel@batterylevel^0,c
  3737  003678                     
  3738                           ;DC_motors.c: 77:     if (batterylevel<200) {
  3739  003678  0EC8               	movlw	200
  3740  00367A  6002               	cpfslt	checkbatterylevel@batterylevel^0,c
  3741  00367C  EF42  F01B         	goto	u3781
  3742  003680  EF44  F01B         	goto	u3780
  3743  003684                     u3781:
  3744  003684  EF47  F01B         	goto	l562
  3745  003688                     u3780:
  3746  003688                     
  3747                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
  3748  003688  8E7C               	bsf	124,7,c	;volatile
  3749                           
  3750                           ;DC_motors.c: 79:     } else {
  3751  00368A  EF48  F01B         	goto	l564
  3752  00368E                     l562:
  3753                           
  3754                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
  3755  00368E  9E7C               	bcf	124,7,c	;volatile
  3756  003690                     l564:
  3757  003690  0012               	return		;funcret
  3758  003692                     __end_of_checkbatterylevel:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function _ADC_getval *****************
  3762 ;; Defined at:
  3763 ;;		line 26 in file "ADC.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  tmpval          1    0[COMRAM] unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      unsigned char 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;Total ram usage:        1 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_checkbatterylevel
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text20
  3791  0036CC                     __ptext20:
  3792                           	callstack 0
  3793  0036CC                     _ADC_getval:
  3794                           	callstack 29
  3795  0036CC                     
  3796                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  3797  0036CC  8060               	bsf	96,0,c	;volatile
  3798  0036CE                     l310:
  3799  0036CE  B060               	btfsc	96,0,c	;volatile
  3800  0036D0  EF6C  F01B         	goto	u3541
  3801  0036D4  EF6E  F01B         	goto	u3540
  3802  0036D8                     u3541:
  3803  0036D8  EF67  F01B         	goto	l310
  3804  0036DC                     u3540:
  3805  0036DC                     
  3806                           ;ADC.c: 31:     tmpval = ADRESH;
  3807  0036DC  CF64 F001          	movff	3940,ADC_getval@tmpval	;volatile
  3808  0036E0                     
  3809                           ;ADC.c: 34:     return tmpval;
  3810  0036E0  5001               	movf	ADC_getval@tmpval^0,w,c
  3811  0036E2  0012               	return		;funcret
  3812  0036E4                     __end_of_ADC_getval:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function _USART4_init *****************
  3816 ;; Defined at:
  3817 ;;		line 7 in file "serial_comm.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3835 ;;Total ram usage:        0 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_main
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text21
  3845  003692                     __ptext21:
  3846                           	callstack 0
  3847  003692                     _USART4_init:
  3848                           	callstack 30
  3849  003692                     
  3850                           ;serial_comm.c: 10:     RC0PPS = 0x12;
  3851  003692  0E12               	movlw	18
  3852  003694  010E               	movlb	14	; () banked
  3853  003696  6F62               	movwf	98,b	;volatile
  3854                           
  3855                           ;serial_comm.c: 11:     RX4PPS = 0x11;
  3856  003698  0E11               	movlw	17
  3857  00369A  6F15               	movwf	21,b	;volatile
  3858  00369C                     
  3859                           ; BSR set to: 14
  3860                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
  3861  00369C  8283               	bsf	131,1,c	;volatile
  3862  00369E                     
  3863                           ; BSR set to: 14
  3864                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
  3865  00369E  97E9               	bcf	233,3,b	;volatile
  3866  0036A0                     
  3867                           ; BSR set to: 14
  3868                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
  3869  0036A0  95E8               	bcf	232,2,b	;volatile
  3870                           
  3871                           ;serial_comm.c: 16:     SP4BRGL = 51;
  3872  0036A2  0E33               	movlw	51
  3873  0036A4  6FE5               	movwf	229,b	;volatile
  3874                           
  3875                           ;serial_comm.c: 17:     SP4BRGH = 0;
  3876  0036A6  0E00               	movlw	0
  3877  0036A8  6FE6               	movwf	230,b	;volatile
  3878  0036AA                     
  3879                           ; BSR set to: 14
  3880                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
  3881  0036AA  89E7               	bsf	231,4,b	;volatile
  3882  0036AC                     
  3883                           ; BSR set to: 14
  3884                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
  3885  0036AC  8BE8               	bsf	232,5,b	;volatile
  3886  0036AE                     
  3887                           ; BSR set to: 14
  3888                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
  3889  0036AE  8FE7               	bsf	231,7,b	;volatile
  3890  0036B0                     
  3891                           ; BSR set to: 14
  3892  0036B0  0012               	return		;funcret
  3893  0036B2                     __end_of_USART4_init:
  3894                           	callstack 0
  3895                           
  3896 ;; *************** function _DCmotors_testing *****************
  3897 ;; Defined at:
  3898 ;;		line 294 in file "DC_motors.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  mL              2   74[COMRAM] PTR struct .
  3901 ;;		 -> main@motorL(9), 
  3902 ;;  mR              2   76[COMRAM] PTR struct .
  3903 ;;		 -> main@motorR(9), 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;Total ram usage:        6 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 4
  3922 ;; This function calls:
  3923 ;;		_forward
  3924 ;;		_reverse
  3925 ;;		_stop
  3926 ;;		_turnleft
  3927 ;;		_turnright
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text22
  3934  002454                     __ptext22:
  3935                           	callstack 0
  3936  002454                     _DCmotors_testing:
  3937                           	callstack 26
  3938  002454                     
  3939                           ;DC_motors.c: 294: void DCmotors_testing(DC_motor *mL, DC_motor *mR);DC_motors.c: 295: {
      +                          ;DC_motors.c: 296:     INTCONbits.GIE = 0;
  3940  002454  9EF2               	bcf	242,7,c	;volatile
  3941  002456                     l654:
  3942  002456  A48E               	btfss	142,2,c	;volatile
  3943  002458  EF30  F012         	goto	u3791
  3944  00245C  EF32  F012         	goto	u3790
  3945  002460                     u3791:
  3946  002460  EF39  F012         	goto	l3747
  3947  002464                     u3790:
  3948  002464  B68E               	btfsc	142,3,c	;volatile
  3949  002466  EF37  F012         	goto	u3801
  3950  00246A  EF39  F012         	goto	u3800
  3951  00246E                     u3801:
  3952  00246E  EF2B  F012         	goto	l654
  3953  002472                     u3800:
  3954  002472                     l3747:
  3955                           
  3956                           ;DC_motors.c: 299:     forward(mL, mR);
  3957  002472  C04B  F01A         	movff	DCmotors_testing@mL,forward@mL
  3958  002476  C04C  F01B         	movff	DCmotors_testing@mL+1,forward@mL+1
  3959  00247A  C04D  F01C         	movff	DCmotors_testing@mR,forward@mR
  3960  00247E  C04E  F01D         	movff	DCmotors_testing@mR+1,forward@mR+1
  3961  002482  ECC7  F018         	call	_forward	;wreg free
  3962  002486                     
  3963                           ;DC_motors.c: 300:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  3964  002486  0E52               	movlw	82
  3965  002488  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  3966  00248A  0E2B               	movlw	43
  3967  00248C  6E4F               	movwf	??_DCmotors_testing^0,c
  3968  00248E  0E00               	movlw	0
  3969  002490                     u4827:
  3970  002490  2EE8               	decfsz	wreg,f,c
  3971  002492  D7FE               	bra	u4827
  3972  002494  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  3973  002496  D7FC               	bra	u4827
  3974  002498  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  3975  00249A  D7FA               	bra	u4827
  3976  00249C  D000               	nop2	
  3977  00249E                     
  3978                           ;DC_motors.c: 301:     stop(mL, mR);
  3979  00249E  C04B  F01A         	movff	DCmotors_testing@mL,stop@mL
  3980  0024A2  C04C  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
  3981  0024A6  C04D  F01C         	movff	DCmotors_testing@mR,stop@mR
  3982  0024AA  C04E  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
  3983  0024AE  EC0E  F019         	call	_stop	;wreg free
  3984                           
  3985                           ;DC_motors.c: 302:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  3986  0024B2  0E52               	movlw	82
  3987  0024B4  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  3988  0024B6  0E2B               	movlw	43
  3989  0024B8  6E4F               	movwf	??_DCmotors_testing^0,c
  3990  0024BA  0E00               	movlw	0
  3991  0024BC                     u4837:
  3992  0024BC  2EE8               	decfsz	wreg,f,c
  3993  0024BE  D7FE               	bra	u4837
  3994  0024C0  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  3995  0024C2  D7FC               	bra	u4837
  3996  0024C4  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  3997  0024C6  D7FA               	bra	u4837
  3998  0024C8  D000               	nop2	
  3999  0024CA                     l659:
  4000  0024CA  A48E               	btfss	142,2,c	;volatile
  4001  0024CC  EF6A  F012         	goto	u3811
  4002  0024D0  EF6C  F012         	goto	u3810
  4003  0024D4                     u3811:
  4004  0024D4  EF73  F012         	goto	l3755
  4005  0024D8                     u3810:
  4006  0024D8  B68E               	btfsc	142,3,c	;volatile
  4007  0024DA  EF71  F012         	goto	u3821
  4008  0024DE  EF73  F012         	goto	u3820
  4009  0024E2                     u3821:
  4010  0024E2  EF65  F012         	goto	l659
  4011  0024E6                     u3820:
  4012  0024E6                     l3755:
  4013                           
  4014                           ;DC_motors.c: 305:     reverse(mL, mR);
  4015  0024E6  C04B  F01A         	movff	DCmotors_testing@mL,reverse@mL
  4016  0024EA  C04C  F01B         	movff	DCmotors_testing@mL+1,reverse@mL+1
  4017  0024EE  C04D  F01C         	movff	DCmotors_testing@mR,reverse@mR
  4018  0024F2  C04E  F01D         	movff	DCmotors_testing@mR+1,reverse@mR+1
  4019  0024F6  EC80  F018         	call	_reverse	;wreg free
  4020  0024FA                     
  4021                           ;DC_motors.c: 306:     _delay((unsigned long)((2020)*(64000000/4000.0)));
  4022  0024FA  0EA4               	movlw	164
  4023  0024FC  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  4024  0024FE  0EF6               	movlw	246
  4025  002500  6E4F               	movwf	??_DCmotors_testing^0,c
  4026  002502  0E98               	movlw	152
  4027  002504                     u4847:
  4028  002504  2EE8               	decfsz	wreg,f,c
  4029  002506  D7FE               	bra	u4847
  4030  002508  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  4031  00250A  D7FC               	bra	u4847
  4032  00250C  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  4033  00250E  D7FA               	bra	u4847
  4034  002510                     
  4035                           ;DC_motors.c: 307:     stop(mL, mR);
  4036  002510  C04B  F01A         	movff	DCmotors_testing@mL,stop@mL
  4037  002514  C04C  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
  4038  002518  C04D  F01C         	movff	DCmotors_testing@mR,stop@mR
  4039  00251C  C04E  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
  4040  002520  EC0E  F019         	call	_stop	;wreg free
  4041                           
  4042                           ;DC_motors.c: 308:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  4043  002524  0E52               	movlw	82
  4044  002526  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  4045  002528  0E2B               	movlw	43
  4046  00252A  6E4F               	movwf	??_DCmotors_testing^0,c
  4047  00252C  0E00               	movlw	0
  4048  00252E                     u4857:
  4049  00252E  2EE8               	decfsz	wreg,f,c
  4050  002530  D7FE               	bra	u4857
  4051  002532  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  4052  002534  D7FC               	bra	u4857
  4053  002536  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  4054  002538  D7FA               	bra	u4857
  4055  00253A  D000               	nop2	
  4056  00253C                     l664:
  4057  00253C  A48E               	btfss	142,2,c	;volatile
  4058  00253E  EFA3  F012         	goto	u3831
  4059  002542  EFA5  F012         	goto	u3830
  4060  002546                     u3831:
  4061  002546  EFAC  F012         	goto	l3763
  4062  00254A                     u3830:
  4063  00254A  B68E               	btfsc	142,3,c	;volatile
  4064  00254C  EFAA  F012         	goto	u3841
  4065  002550  EFAC  F012         	goto	u3840
  4066  002554                     u3841:
  4067  002554  EF9E  F012         	goto	l664
  4068  002558                     u3840:
  4069  002558                     l3763:
  4070                           
  4071                           ;DC_motors.c: 311:     turnright(mL, mR, 90);
  4072  002558  C04B  F045         	movff	DCmotors_testing@mL,turnright@mL
  4073  00255C  C04C  F046         	movff	DCmotors_testing@mL+1,turnright@mL+1
  4074  002560  C04D  F047         	movff	DCmotors_testing@mR,turnright@mR
  4075  002564  C04E  F048         	movff	DCmotors_testing@mR+1,turnright@mR+1
  4076  002568  0E00               	movlw	0
  4077  00256A  6E4A               	movwf	(turnright@deg+1)^0,c
  4078  00256C  0E5A               	movlw	90
  4079  00256E  6E49               	movwf	turnright@deg^0,c
  4080  002570  EC3E  F01A         	call	_turnright	;wreg free
  4081                           
  4082                           ;DC_motors.c: 313:     stop(mL, mR);
  4083  002574  C04B  F01A         	movff	DCmotors_testing@mL,stop@mL
  4084  002578  C04C  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
  4085  00257C  C04D  F01C         	movff	DCmotors_testing@mR,stop@mR
  4086  002580  C04E  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
  4087  002584  EC0E  F019         	call	_stop	;wreg free
  4088  002588                     
  4089                           ;DC_motors.c: 314:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4090  002588  0E09               	movlw	9
  4091  00258A  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  4092  00258C  0E1E               	movlw	30
  4093  00258E  6E4F               	movwf	??_DCmotors_testing^0,c
  4094  002590  0EE4               	movlw	228
  4095  002592                     u4867:
  4096  002592  2EE8               	decfsz	wreg,f,c
  4097  002594  D7FE               	bra	u4867
  4098  002596  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  4099  002598  D7FC               	bra	u4867
  4100  00259A  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  4101  00259C  D7FA               	bra	u4867
  4102  00259E  D000               	nop2	
  4103  0025A0                     l669:
  4104  0025A0  A48E               	btfss	142,2,c	;volatile
  4105  0025A2  EFD5  F012         	goto	u3851
  4106  0025A6  EFD7  F012         	goto	u3850
  4107  0025AA                     u3851:
  4108  0025AA  EFDE  F012         	goto	l3769
  4109  0025AE                     u3850:
  4110  0025AE  B68E               	btfsc	142,3,c	;volatile
  4111  0025B0  EFDC  F012         	goto	u3861
  4112  0025B4  EFDE  F012         	goto	u3860
  4113  0025B8                     u3861:
  4114  0025B8  EFD0  F012         	goto	l669
  4115  0025BC                     u3860:
  4116  0025BC                     l3769:
  4117                           
  4118                           ;DC_motors.c: 317:     turnleft(mL, mR, 90);
  4119  0025BC  C04B  F045         	movff	DCmotors_testing@mL,turnleft@mL
  4120  0025C0  C04C  F046         	movff	DCmotors_testing@mL+1,turnleft@mL+1
  4121  0025C4  C04D  F047         	movff	DCmotors_testing@mR,turnleft@mR
  4122  0025C8  C04E  F048         	movff	DCmotors_testing@mR+1,turnleft@mR+1
  4123  0025CC  0E00               	movlw	0
  4124  0025CE  6E4A               	movwf	(turnleft@deg+1)^0,c
  4125  0025D0  0E5A               	movlw	90
  4126  0025D2  6E49               	movwf	turnleft@deg^0,c
  4127  0025D4  EC65  F01A         	call	_turnleft	;wreg free
  4128                           
  4129                           ;DC_motors.c: 319:     stop(mL, mR);
  4130  0025D8  C04B  F01A         	movff	DCmotors_testing@mL,stop@mL
  4131  0025DC  C04C  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
  4132  0025E0  C04D  F01C         	movff	DCmotors_testing@mR,stop@mR
  4133  0025E4  C04E  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
  4134  0025E8  EC0E  F019         	call	_stop	;wreg free
  4135  0025EC                     
  4136                           ;DC_motors.c: 320:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4137  0025EC  0E09               	movlw	9
  4138  0025EE  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  4139  0025F0  0E1E               	movlw	30
  4140  0025F2  6E4F               	movwf	??_DCmotors_testing^0,c
  4141  0025F4  0EE4               	movlw	228
  4142  0025F6                     u4877:
  4143  0025F6  2EE8               	decfsz	wreg,f,c
  4144  0025F8  D7FE               	bra	u4877
  4145  0025FA  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  4146  0025FC  D7FC               	bra	u4877
  4147  0025FE  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  4148  002600  D7FA               	bra	u4877
  4149  002602  D000               	nop2	
  4150  002604                     l674:
  4151  002604  A48E               	btfss	142,2,c	;volatile
  4152  002606  EF07  F013         	goto	u3871
  4153  00260A  EF09  F013         	goto	u3870
  4154  00260E                     u3871:
  4155  00260E  EF10  F013         	goto	l3775
  4156  002612                     u3870:
  4157  002612  B68E               	btfsc	142,3,c	;volatile
  4158  002614  EF0E  F013         	goto	u3881
  4159  002618  EF10  F013         	goto	u3880
  4160  00261C                     u3881:
  4161  00261C  EF02  F013         	goto	l674
  4162  002620                     u3880:
  4163  002620                     l3775:
  4164                           
  4165                           ;DC_motors.c: 323:     turnright(mL, mR, 180);
  4166  002620  C04B  F045         	movff	DCmotors_testing@mL,turnright@mL
  4167  002624  C04C  F046         	movff	DCmotors_testing@mL+1,turnright@mL+1
  4168  002628  C04D  F047         	movff	DCmotors_testing@mR,turnright@mR
  4169  00262C  C04E  F048         	movff	DCmotors_testing@mR+1,turnright@mR+1
  4170  002630  0E00               	movlw	0
  4171  002632  6E4A               	movwf	(turnright@deg+1)^0,c
  4172  002634  0EB4               	movlw	180
  4173  002636  6E49               	movwf	turnright@deg^0,c
  4174  002638  EC3E  F01A         	call	_turnright	;wreg free
  4175                           
  4176                           ;DC_motors.c: 325:     stop(mL, mR);
  4177  00263C  C04B  F01A         	movff	DCmotors_testing@mL,stop@mL
  4178  002640  C04C  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
  4179  002644  C04D  F01C         	movff	DCmotors_testing@mR,stop@mR
  4180  002648  C04E  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
  4181  00264C  EC0E  F019         	call	_stop	;wreg free
  4182  002650                     
  4183                           ;DC_motors.c: 326:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4184  002650  0E09               	movlw	9
  4185  002652  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  4186  002654  0E1E               	movlw	30
  4187  002656  6E4F               	movwf	??_DCmotors_testing^0,c
  4188  002658  0EE4               	movlw	228
  4189  00265A                     u4887:
  4190  00265A  2EE8               	decfsz	wreg,f,c
  4191  00265C  D7FE               	bra	u4887
  4192  00265E  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  4193  002660  D7FC               	bra	u4887
  4194  002662  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  4195  002664  D7FA               	bra	u4887
  4196  002666  D000               	nop2	
  4197  002668                     l679:
  4198  002668  A48E               	btfss	142,2,c	;volatile
  4199  00266A  EF39  F013         	goto	u3891
  4200  00266E  EF3B  F013         	goto	u3890
  4201  002672                     u3891:
  4202  002672  EF42  F013         	goto	l3781
  4203  002676                     u3890:
  4204  002676  B68E               	btfsc	142,3,c	;volatile
  4205  002678  EF40  F013         	goto	u3901
  4206  00267C  EF42  F013         	goto	u3900
  4207  002680                     u3901:
  4208  002680  EF34  F013         	goto	l679
  4209  002684                     u3900:
  4210  002684                     l3781:
  4211                           
  4212                           ;DC_motors.c: 329:     turnleft(mL, mR, 180);
  4213  002684  C04B  F045         	movff	DCmotors_testing@mL,turnleft@mL
  4214  002688  C04C  F046         	movff	DCmotors_testing@mL+1,turnleft@mL+1
  4215  00268C  C04D  F047         	movff	DCmotors_testing@mR,turnleft@mR
  4216  002690  C04E  F048         	movff	DCmotors_testing@mR+1,turnleft@mR+1
  4217  002694  0E00               	movlw	0
  4218  002696  6E4A               	movwf	(turnleft@deg+1)^0,c
  4219  002698  0EB4               	movlw	180
  4220  00269A  6E49               	movwf	turnleft@deg^0,c
  4221  00269C  EC65  F01A         	call	_turnleft	;wreg free
  4222                           
  4223                           ;DC_motors.c: 331:     stop(mL, mR);
  4224  0026A0  C04B  F01A         	movff	DCmotors_testing@mL,stop@mL
  4225  0026A4  C04C  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
  4226  0026A8  C04D  F01C         	movff	DCmotors_testing@mR,stop@mR
  4227  0026AC  C04E  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
  4228  0026B0  EC0E  F019         	call	_stop	;wreg free
  4229  0026B4                     
  4230                           ;DC_motors.c: 332:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4231  0026B4  0E09               	movlw	9
  4232  0026B6  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  4233  0026B8  0E1E               	movlw	30
  4234  0026BA  6E4F               	movwf	??_DCmotors_testing^0,c
  4235  0026BC  0EE4               	movlw	228
  4236  0026BE                     u4897:
  4237  0026BE  2EE8               	decfsz	wreg,f,c
  4238  0026C0  D7FE               	bra	u4897
  4239  0026C2  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  4240  0026C4  D7FC               	bra	u4897
  4241  0026C6  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  4242  0026C8  D7FA               	bra	u4897
  4243  0026CA  D000               	nop2	
  4244  0026CC                     l684:
  4245  0026CC  A48E               	btfss	142,2,c	;volatile
  4246  0026CE  EF6B  F013         	goto	u3911
  4247  0026D2  EF6D  F013         	goto	u3910
  4248  0026D6                     u3911:
  4249  0026D6  EF74  F013         	goto	l3787
  4250  0026DA                     u3910:
  4251  0026DA  B68E               	btfsc	142,3,c	;volatile
  4252  0026DC  EF72  F013         	goto	u3921
  4253  0026E0  EF74  F013         	goto	u3920
  4254  0026E4                     u3921:
  4255  0026E4  EF66  F013         	goto	l684
  4256  0026E8                     u3920:
  4257  0026E8                     l3787:
  4258                           
  4259                           ;DC_motors.c: 335:     turnright(mL, mR, 135);
  4260  0026E8  C04B  F045         	movff	DCmotors_testing@mL,turnright@mL
  4261  0026EC  C04C  F046         	movff	DCmotors_testing@mL+1,turnright@mL+1
  4262  0026F0  C04D  F047         	movff	DCmotors_testing@mR,turnright@mR
  4263  0026F4  C04E  F048         	movff	DCmotors_testing@mR+1,turnright@mR+1
  4264  0026F8  0E00               	movlw	0
  4265  0026FA  6E4A               	movwf	(turnright@deg+1)^0,c
  4266  0026FC  0E87               	movlw	135
  4267  0026FE  6E49               	movwf	turnright@deg^0,c
  4268  002700  EC3E  F01A         	call	_turnright	;wreg free
  4269                           
  4270                           ;DC_motors.c: 337:     stop(mL, mR);
  4271  002704  C04B  F01A         	movff	DCmotors_testing@mL,stop@mL
  4272  002708  C04C  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
  4273  00270C  C04D  F01C         	movff	DCmotors_testing@mR,stop@mR
  4274  002710  C04E  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
  4275  002714  EC0E  F019         	call	_stop	;wreg free
  4276  002718                     
  4277                           ;DC_motors.c: 338:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4278  002718  0E09               	movlw	9
  4279  00271A  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  4280  00271C  0E1E               	movlw	30
  4281  00271E  6E4F               	movwf	??_DCmotors_testing^0,c
  4282  002720  0EE4               	movlw	228
  4283  002722                     u4907:
  4284  002722  2EE8               	decfsz	wreg,f,c
  4285  002724  D7FE               	bra	u4907
  4286  002726  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  4287  002728  D7FC               	bra	u4907
  4288  00272A  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  4289  00272C  D7FA               	bra	u4907
  4290  00272E  D000               	nop2	
  4291  002730                     l689:
  4292  002730  A48E               	btfss	142,2,c	;volatile
  4293  002732  EF9D  F013         	goto	u3931
  4294  002736  EF9F  F013         	goto	u3930
  4295  00273A                     u3931:
  4296  00273A  EFA6  F013         	goto	l3793
  4297  00273E                     u3930:
  4298  00273E  B68E               	btfsc	142,3,c	;volatile
  4299  002740  EFA4  F013         	goto	u3941
  4300  002744  EFA6  F013         	goto	u3940
  4301  002748                     u3941:
  4302  002748  EF98  F013         	goto	l689
  4303  00274C                     u3940:
  4304  00274C                     l3793:
  4305                           
  4306                           ;DC_motors.c: 341:     turnleft(mL, mR, 135);
  4307  00274C  C04B  F045         	movff	DCmotors_testing@mL,turnleft@mL
  4308  002750  C04C  F046         	movff	DCmotors_testing@mL+1,turnleft@mL+1
  4309  002754  C04D  F047         	movff	DCmotors_testing@mR,turnleft@mR
  4310  002758  C04E  F048         	movff	DCmotors_testing@mR+1,turnleft@mR+1
  4311  00275C  0E00               	movlw	0
  4312  00275E  6E4A               	movwf	(turnleft@deg+1)^0,c
  4313  002760  0E87               	movlw	135
  4314  002762  6E49               	movwf	turnleft@deg^0,c
  4315  002764  EC65  F01A         	call	_turnleft	;wreg free
  4316                           
  4317                           ;DC_motors.c: 343:     stop(mL, mR);
  4318  002768  C04B  F01A         	movff	DCmotors_testing@mL,stop@mL
  4319  00276C  C04C  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
  4320  002770  C04D  F01C         	movff	DCmotors_testing@mR,stop@mR
  4321  002774  C04E  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
  4322  002778  EC0E  F019         	call	_stop	;wreg free
  4323  00277C                     
  4324                           ;DC_motors.c: 344:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4325  00277C  0E09               	movlw	9
  4326  00277E  6E50               	movwf	(??_DCmotors_testing+1)^0,c
  4327  002780  0E1E               	movlw	30
  4328  002782  6E4F               	movwf	??_DCmotors_testing^0,c
  4329  002784  0EE4               	movlw	228
  4330  002786                     u4917:
  4331  002786  2EE8               	decfsz	wreg,f,c
  4332  002788  D7FE               	bra	u4917
  4333  00278A  2E4F               	decfsz	??_DCmotors_testing^0,f,c
  4334  00278C  D7FC               	bra	u4917
  4335  00278E  2E50               	decfsz	(??_DCmotors_testing+1)^0,f,c
  4336  002790  D7FA               	bra	u4917
  4337  002792  D000               	nop2	
  4338  002794                     
  4339                           ;DC_motors.c: 346:     INTCONbits.GIE = 1;
  4340  002794  8EF2               	bsf	242,7,c	;volatile
  4341  002796  0012               	return		;funcret
  4342  002798                     __end_of_DCmotors_testing:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _turnright *****************
  4346 ;; Defined at:
  4347 ;;		line 231 in file "DC_motors.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  mL              2   68[COMRAM] PTR struct .
  4350 ;;		 -> main@motorL(9), 
  4351 ;;  mR              2   70[COMRAM] PTR struct .
  4352 ;;		 -> main@motorR(9), 
  4353 ;;  deg             2   72[COMRAM] unsigned int 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;Total ram usage:        6 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 3
  4372 ;; This function calls:
  4373 ;;		_left
  4374 ;;		_right
  4375 ;; This function is called by:
  4376 ;;		_colourcards_readRGBC
  4377 ;;		_DCmotors_testing
  4378 ;;		_DCmotors_calibration
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text23
  4383  00347C                     __ptext23:
  4384                           	callstack 0
  4385  00347C                     _turnright:
  4386                           	callstack 26
  4387  00347C                     
  4388                           ;DC_motors.c: 231: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 232: {;DC_motors.c: 233:     if (returnhome_flag==0) {
  4389  00347C  5059               	movf	_returnhome_flag^0,w,c	;volatile
  4390  00347E  A4D8               	btfss	status,2,c
  4391  003480  EF44  F01A         	goto	u3481
  4392  003484  EF46  F01A         	goto	u3480
  4393  003488                     u3481:
  4394  003488  EF56  F01A         	goto	l3465
  4395  00348C                     u3480:
  4396  00348C                     
  4397                           ;DC_motors.c: 234:         right(mL, mR, deg);
  4398  00348C  C045  F01A         	movff	turnright@mL,right@mL
  4399  003490  C046  F01B         	movff	turnright@mL+1,right@mL+1
  4400  003494  C047  F01C         	movff	turnright@mR,right@mR
  4401  003498  C048  F01D         	movff	turnright@mR+1,right@mR+1
  4402  00349C  C049  F01E         	movff	turnright@deg,right@deg
  4403  0034A0  C04A  F01F         	movff	turnright@deg+1,right@deg+1
  4404  0034A4  EC66  F016         	call	_right	;wreg free
  4405                           
  4406                           ;DC_motors.c: 235:     } else {
  4407  0034A8  EF64  F01A         	goto	l620
  4408  0034AC                     l3465:
  4409                           
  4410                           ;DC_motors.c: 236:         left(mL, mR, deg);
  4411  0034AC  C045  F038         	movff	turnright@mL,left@mL
  4412  0034B0  C046  F039         	movff	turnright@mL+1,left@mL+1
  4413  0034B4  C047  F03A         	movff	turnright@mR,left@mR
  4414  0034B8  C048  F03B         	movff	turnright@mR+1,left@mR+1
  4415  0034BC  C049  F03C         	movff	turnright@deg,left@deg
  4416  0034C0  C04A  F03D         	movff	turnright@deg+1,left@deg+1
  4417  0034C4  EC90  F015         	call	_left	;wreg free
  4418  0034C8                     l620:
  4419  0034C8  0012               	return		;funcret
  4420  0034CA                     __end_of_turnright:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _turnleft *****************
  4424 ;; Defined at:
  4425 ;;		line 218 in file "DC_motors.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  mL              2   68[COMRAM] PTR struct .
  4428 ;;		 -> main@motorL(9), 
  4429 ;;  mR              2   70[COMRAM] PTR struct .
  4430 ;;		 -> main@motorR(9), 
  4431 ;;  deg             2   72[COMRAM] unsigned int 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4443 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4446 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;Total ram usage:        6 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 3
  4450 ;; This function calls:
  4451 ;;		_left
  4452 ;;		_right
  4453 ;; This function is called by:
  4454 ;;		_colourcards_readRGBC
  4455 ;;		_DCmotors_testing
  4456 ;;		_DCmotors_calibration
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text24
  4461  0034CA                     __ptext24:
  4462                           	callstack 0
  4463  0034CA                     _turnleft:
  4464                           	callstack 26
  4465  0034CA                     
  4466                           ;DC_motors.c: 218: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {
  4467  0034CA  5059               	movf	_returnhome_flag^0,w,c	;volatile
  4468  0034CC  A4D8               	btfss	status,2,c
  4469  0034CE  EF6B  F01A         	goto	u3511
  4470  0034D2  EF6D  F01A         	goto	u3510
  4471  0034D6                     u3511:
  4472  0034D6  EF7D  F01A         	goto	l3485
  4473  0034DA                     u3510:
  4474  0034DA                     
  4475                           ;DC_motors.c: 221:         left(mL, mR, deg);
  4476  0034DA  C045  F038         	movff	turnleft@mL,left@mL
  4477  0034DE  C046  F039         	movff	turnleft@mL+1,left@mL+1
  4478  0034E2  C047  F03A         	movff	turnleft@mR,left@mR
  4479  0034E6  C048  F03B         	movff	turnleft@mR+1,left@mR+1
  4480  0034EA  C049  F03C         	movff	turnleft@deg,left@deg
  4481  0034EE  C04A  F03D         	movff	turnleft@deg+1,left@deg+1
  4482  0034F2  EC90  F015         	call	_left	;wreg free
  4483                           
  4484                           ;DC_motors.c: 222:     } else {
  4485  0034F6  EF8B  F01A         	goto	l615
  4486  0034FA                     l3485:
  4487                           
  4488                           ;DC_motors.c: 223:         right(mL, mR, deg);
  4489  0034FA  C045  F01A         	movff	turnleft@mL,right@mL
  4490  0034FE  C046  F01B         	movff	turnleft@mL+1,right@mL+1
  4491  003502  C047  F01C         	movff	turnleft@mR,right@mR
  4492  003506  C048  F01D         	movff	turnleft@mR+1,right@mR+1
  4493  00350A  C049  F01E         	movff	turnleft@deg,right@deg
  4494  00350E  C04A  F01F         	movff	turnleft@deg+1,right@deg+1
  4495  003512  EC66  F016         	call	_right	;wreg free
  4496  003516                     l615:
  4497  003516  0012               	return		;funcret
  4498  003518                     __end_of_turnleft:
  4499                           	callstack 0
  4500                           
  4501 ;; *************** function _right *****************
  4502 ;; Defined at:
  4503 ;;		line 183 in file "DC_motors.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  mL              2   25[COMRAM] PTR struct .
  4506 ;;		 -> main@motorL(9), 
  4507 ;;  mR              2   27[COMRAM] PTR struct .
  4508 ;;		 -> main@motorR(9), 
  4509 ;;  deg             2   29[COMRAM] unsigned int 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  i               2   35[COMRAM] unsigned int 
  4512 ;;  delay           2   33[COMRAM] unsigned int 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4522 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;Total ram usage:       12 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 2
  4529 ;; This function calls:
  4530 ;;		_DCmotors_setPWM
  4531 ;; This function is called by:
  4532 ;;		_turnleft
  4533 ;;		_turnright
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text25
  4538  002CCC                     __ptext25:
  4539                           	callstack 0
  4540  002CCC                     _right:
  4541                           	callstack 26
  4542  002CCC                     
  4543                           ;DC_motors.c: 183: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           184: {;DC_motors.c: 186:     unsigned int delay = (8*deg) + 180;
  4544  002CCC  C01E  F020         	movff	right@deg,??_right
  4545  002CD0  C01F  F021         	movff	right@deg+1,??_right+1
  4546  002CD4  90D8               	bcf	status,0,c
  4547  002CD6  3620               	rlcf	??_right^0,f,c
  4548  002CD8  3621               	rlcf	(??_right+1)^0,f,c
  4549  002CDA  90D8               	bcf	status,0,c
  4550  002CDC  3620               	rlcf	??_right^0,f,c
  4551  002CDE  3621               	rlcf	(??_right+1)^0,f,c
  4552  002CE0  90D8               	bcf	status,0,c
  4553  002CE2  3620               	rlcf	??_right^0,f,c
  4554  002CE4  3621               	rlcf	(??_right+1)^0,f,c
  4555  002CE6  0EB4               	movlw	180
  4556  002CE8  2420               	addwf	??_right^0,w,c
  4557  002CEA  6E22               	movwf	right@delay^0,c
  4558  002CEC  0E00               	movlw	0
  4559  002CEE  2021               	addwfc	(??_right+1)^0,w,c
  4560  002CF0  6E23               	movwf	(right@delay+1)^0,c
  4561  002CF2                     
  4562                           ;DC_motors.c: 189:     mL->direction = 1;
  4563  002CF2  EE20 F001          	lfsr	2,1
  4564  002CF6  501A               	movf	right@mL^0,w,c
  4565  002CF8  26D9               	addwf	fsr2l,f,c
  4566  002CFA  501B               	movf	(right@mL+1)^0,w,c
  4567  002CFC  22DA               	addwfc	fsr2h,f,c
  4568  002CFE  0E01               	movlw	1
  4569  002D00  6EDF               	movwf	indf2,c
  4570  002D02                     
  4571                           ;DC_motors.c: 190:     mR->direction = 0;
  4572  002D02  EE20 F001          	lfsr	2,1
  4573  002D06  501C               	movf	right@mR^0,w,c
  4574  002D08  26D9               	addwf	fsr2l,f,c
  4575  002D0A  501D               	movf	(right@mR+1)^0,w,c
  4576  002D0C  22DA               	addwfc	fsr2h,f,c
  4577  002D0E  0E00               	movlw	0
  4578  002D10  6EDF               	movwf	indf2,c
  4579                           
  4580                           ;DC_motors.c: 193:     while((mL->power < 40) || (mR->power < 40)){
  4581  002D12  EFCE  F016         	goto	l3431
  4582  002D16                     l3415:
  4583                           
  4584                           ;DC_motors.c: 195:         LATHbits.LATH0 = !LATHbits.LATH0;
  4585  002D16  A080               	btfss	128,0,c	;volatile
  4586  002D18  EF90  F016         	goto	u3391
  4587  002D1C  EF94  F016         	goto	u3390
  4588  002D20                     u3391:
  4589  002D20  6A20               	clrf	??_right^0,c
  4590  002D22  2A20               	incf	??_right^0,f,c
  4591  002D24  EF95  F016         	goto	u3408
  4592  002D28                     u3390:
  4593  002D28  6A20               	clrf	??_right^0,c
  4594  002D2A                     u3408:
  4595  002D2A  5080               	movf	128,w,c	;volatile
  4596  002D2C  1820               	xorwf	??_right^0,w,c
  4597  002D2E  0BFE               	andlw	-2
  4598  002D30  1820               	xorwf	??_right^0,w,c
  4599  002D32  6E80               	movwf	128,c	;volatile
  4600  002D34                     
  4601                           ;DC_motors.c: 198:         if (mL->power < 40) {mL->power += 10;}
  4602  002D34  C01A  FFD9         	movff	right@mL,fsr2l
  4603  002D38  C01B  FFDA         	movff	right@mL+1,fsr2h
  4604  002D3C  0E28               	movlw	40
  4605  002D3E  60DF               	cpfslt	indf2,c
  4606  002D40  EFA4  F016         	goto	u3411
  4607  002D44  EFA6  F016         	goto	u3410
  4608  002D48                     u3411:
  4609  002D48  EFAC  F016         	goto	l3421
  4610  002D4C                     u3410:
  4611  002D4C  C01A  FFD9         	movff	right@mL,fsr2l
  4612  002D50  C01B  FFDA         	movff	right@mL+1,fsr2h
  4613  002D54  0E0A               	movlw	10
  4614  002D56  26DF               	addwf	indf2,f,c
  4615  002D58                     l3421:
  4616                           
  4617                           ;DC_motors.c: 199:         if (mR->power < 40) {mR->power += 10;}
  4618  002D58  C01C  FFD9         	movff	right@mR,fsr2l
  4619  002D5C  C01D  FFDA         	movff	right@mR+1,fsr2h
  4620  002D60  0E28               	movlw	40
  4621  002D62  60DF               	cpfslt	indf2,c
  4622  002D64  EFB6  F016         	goto	u3421
  4623  002D68  EFB8  F016         	goto	u3420
  4624  002D6C                     u3421:
  4625  002D6C  EFBE  F016         	goto	l3425
  4626  002D70                     u3420:
  4627  002D70  C01C  FFD9         	movff	right@mR,fsr2l
  4628  002D74  C01D  FFDA         	movff	right@mR+1,fsr2h
  4629  002D78  0E0A               	movlw	10
  4630  002D7A  26DF               	addwf	indf2,f,c
  4631  002D7C                     l3425:
  4632                           
  4633                           ;DC_motors.c: 202:         DCmotors_setPWM(mL);
  4634  002D7C  C01A  F00F         	movff	right@mL,DCmotors_setPWM@m
  4635  002D80  C01B  F010         	movff	right@mL+1,DCmotors_setPWM@m+1
  4636  002D84  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  4637  002D88                     
  4638                           ;DC_motors.c: 203:         DCmotors_setPWM(mR);
  4639  002D88  C01C  F00F         	movff	right@mR,DCmotors_setPWM@m
  4640  002D8C  C01D  F010         	movff	right@mR+1,DCmotors_setPWM@m+1
  4641  002D90  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  4642  002D94                     
  4643                           ;DC_motors.c: 204:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  4644  002D94  0EA0               	movlw	160
  4645  002D96                     u4927:
  4646  002D96  D000               	nop2	
  4647  002D98  2EE8               	decfsz	wreg,f,c
  4648  002D9A  D7FD               	bra	u4927
  4649  002D9C                     l3431:
  4650                           
  4651                           ;DC_motors.c: 193:     while((mL->power < 40) || (mR->power < 40)){
  4652  002D9C  C01A  FFD9         	movff	right@mL,fsr2l
  4653  002DA0  C01B  FFDA         	movff	right@mL+1,fsr2h
  4654  002DA4  0E27               	movlw	39
  4655  002DA6  64DF               	cpfsgt	indf2,c
  4656  002DA8  EFD8  F016         	goto	u3431
  4657  002DAC  EFDA  F016         	goto	u3430
  4658  002DB0                     u3431:
  4659  002DB0  EF8B  F016         	goto	l3415
  4660  002DB4                     u3430:
  4661  002DB4  C01C  FFD9         	movff	right@mR,fsr2l
  4662  002DB8  C01D  FFDA         	movff	right@mR+1,fsr2h
  4663  002DBC  0E27               	movlw	39
  4664  002DBE  64DF               	cpfsgt	indf2,c
  4665  002DC0  EFE4  F016         	goto	u3441
  4666  002DC4  EFE6  F016         	goto	u3440
  4667  002DC8                     u3441:
  4668  002DC8  EF8B  F016         	goto	l3415
  4669  002DCC                     u3440:
  4670  002DCC                     
  4671                           ;DC_motors.c: 207:     unsigned int i;;DC_motors.c: 208:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  4672  002DCC  0E00               	movlw	0
  4673  002DCE  6E25               	movwf	(right@i+1)^0,c
  4674  002DD0  0E00               	movlw	0
  4675  002DD2  6E24               	movwf	right@i^0,c
  4676  002DD4  EFF6  F016         	goto	l607
  4677  002DD8                     l3437:
  4678  002DD8  0E15               	movlw	21
  4679  002DDA  6E20               	movwf	??_right^0,c
  4680  002DDC  0EC6               	movlw	198
  4681  002DDE                     u4937:
  4682  002DDE  2EE8               	decfsz	wreg,f,c
  4683  002DE0  D7FE               	bra	u4937
  4684  002DE2  2E20               	decfsz	??_right^0,f,c
  4685  002DE4  D7FC               	bra	u4937
  4686  002DE6  D000               	nop2	
  4687  002DE8  4A24               	infsnz	right@i^0,f,c
  4688  002DEA  2A25               	incf	(right@i+1)^0,f,c
  4689  002DEC                     l607:
  4690  002DEC  5022               	movf	right@delay^0,w,c
  4691  002DEE  5C24               	subwf	right@i^0,w,c
  4692  002DF0  5023               	movf	(right@delay+1)^0,w,c
  4693  002DF2  5825               	subwfb	(right@i+1)^0,w,c
  4694  002DF4  A0D8               	btfss	status,0,c
  4695  002DF6  EFFF  F016         	goto	u3451
  4696  002DFA  EF01  F017         	goto	u3450
  4697  002DFE                     u3451:
  4698  002DFE  EFEC  F016         	goto	l3437
  4699  002E02                     u3450:
  4700  002E02                     
  4701                           ;DC_motors.c: 209:     _delay((unsigned long)((1)*(64000000/4000.0)));
  4702  002E02  0E15               	movlw	21
  4703  002E04  6E20               	movwf	??_right^0,c
  4704  002E06  0EC6               	movlw	198
  4705  002E08                     u4947:
  4706  002E08  2EE8               	decfsz	wreg,f,c
  4707  002E0A  D7FE               	bra	u4947
  4708  002E0C  2E20               	decfsz	??_right^0,f,c
  4709  002E0E  D7FC               	bra	u4947
  4710  002E10  D000               	nop2	
  4711  002E12                     
  4712                           ;DC_motors.c: 211:     LATHbits.LATH0 = 0;
  4713  002E12  9080               	bcf	128,0,c	;volatile
  4714  002E14  0012               	return		;funcret
  4715  002E16                     __end_of_right:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _left *****************
  4719 ;; Defined at:
  4720 ;;		line 150 in file "DC_motors.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  mL              2   55[COMRAM] PTR struct .
  4723 ;;		 -> main@motorL(9), 
  4724 ;;  mR              2   57[COMRAM] PTR struct .
  4725 ;;		 -> main@motorR(9), 
  4726 ;;  deg             2   59[COMRAM] unsigned int 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  delay           4   62[COMRAM] unsigned int 
  4729 ;;  i               2   66[COMRAM] unsigned int 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4739 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4742 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4743 ;;Total ram usage:       13 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 2
  4746 ;; This function calls:
  4747 ;;		_DCmotors_setPWM
  4748 ;;		___fladd
  4749 ;;		___flge
  4750 ;;		___flmul
  4751 ;;		___xxtofl
  4752 ;; This function is called by:
  4753 ;;		_turnleft
  4754 ;;		_turnright
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text26
  4759  002B20                     __ptext26:
  4760                           	callstack 0
  4761  002B20                     _left:
  4762                           	callstack 26
  4763  002B20                     
  4764                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     double delay = (deg*12.5) - 135;
  4765  002B20  0E00               	movlw	0
  4766  002B22  6E13               	movwf	___flmul@a^0,c
  4767  002B24  0E00               	movlw	0
  4768  002B26  6E14               	movwf	(___flmul@a+1)^0,c
  4769  002B28  0E48               	movlw	72
  4770  002B2A  6E15               	movwf	(___flmul@a+2)^0,c
  4771  002B2C  0E41               	movlw	65
  4772  002B2E  6E16               	movwf	(___flmul@a+3)^0,c
  4773  002B30  C03C  F001         	movff	left@deg,___xxtofl@val
  4774  002B34  C03D  F002         	movff	left@deg+1,___xxtofl@val+1
  4775  002B38  6A03               	clrf	(___xxtofl@val+2)^0,c
  4776  002B3A  6A04               	clrf	(___xxtofl@val+3)^0,c
  4777  002B3C  0E00               	movlw	0
  4778  002B3E  ECB6  F014         	call	___xxtofl
  4779  002B42  C001  F00F         	movff	?___xxtofl,___flmul@b
  4780  002B46  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  4781  002B4A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  4782  002B4E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  4783  002B52  EC48  F00E         	call	___flmul	;wreg free
  4784  002B56  C00F  F028         	movff	?___flmul,___fladd@b
  4785  002B5A  C010  F029         	movff	?___flmul+1,___fladd@b+1
  4786  002B5E  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  4787  002B62  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  4788  002B66  0E00               	movlw	0
  4789  002B68  6E2C               	movwf	___fladd@a^0,c
  4790  002B6A  0E00               	movlw	0
  4791  002B6C  6E2D               	movwf	(___fladd@a+1)^0,c
  4792  002B6E  0E07               	movlw	7
  4793  002B70  6E2E               	movwf	(___fladd@a+2)^0,c
  4794  002B72  0EC3               	movlw	195
  4795  002B74  6E2F               	movwf	(___fladd@a+3)^0,c
  4796  002B76  ECE8  F00B         	call	___fladd	;wreg free
  4797  002B7A  C028  F03F         	movff	?___fladd,left@delay
  4798  002B7E  C029  F040         	movff	?___fladd+1,left@delay+1
  4799  002B82  C02A  F041         	movff	?___fladd+2,left@delay+2
  4800  002B86  C02B  F042         	movff	?___fladd+3,left@delay+3
  4801  002B8A                     
  4802                           ;DC_motors.c: 156:     mL->direction = 0;
  4803  002B8A  EE20 F001          	lfsr	2,1
  4804  002B8E  5038               	movf	left@mL^0,w,c
  4805  002B90  26D9               	addwf	fsr2l,f,c
  4806  002B92  5039               	movf	(left@mL+1)^0,w,c
  4807  002B94  22DA               	addwfc	fsr2h,f,c
  4808  002B96  0E00               	movlw	0
  4809  002B98  6EDF               	movwf	indf2,c
  4810  002B9A                     
  4811                           ;DC_motors.c: 157:     mR->direction = 1;
  4812  002B9A  EE20 F001          	lfsr	2,1
  4813  002B9E  503A               	movf	left@mR^0,w,c
  4814  002BA0  26D9               	addwf	fsr2l,f,c
  4815  002BA2  503B               	movf	(left@mR+1)^0,w,c
  4816  002BA4  22DA               	addwfc	fsr2h,f,c
  4817  002BA6  0E01               	movlw	1
  4818  002BA8  6EDF               	movwf	indf2,c
  4819                           
  4820                           ;DC_motors.c: 160:     while((mL->power < 40) || (mR->power < 40)){
  4821  002BAA  EF1A  F016         	goto	l3397
  4822  002BAE                     l3381:
  4823                           
  4824                           ;DC_motors.c: 162:         LATFbits.LATF0 = !LATFbits.LATF0;
  4825  002BAE  A07E               	btfss	126,0,c	;volatile
  4826  002BB0  EFDC  F015         	goto	u3321
  4827  002BB4  EFE0  F015         	goto	u3320
  4828  002BB8                     u3321:
  4829  002BB8  6A3E               	clrf	??_left^0,c
  4830  002BBA  2A3E               	incf	??_left^0,f,c
  4831  002BBC  EFE1  F015         	goto	u3338
  4832  002BC0                     u3320:
  4833  002BC0  6A3E               	clrf	??_left^0,c
  4834  002BC2                     u3338:
  4835  002BC2  507E               	movf	126,w,c	;volatile
  4836  002BC4  183E               	xorwf	??_left^0,w,c
  4837  002BC6  0BFE               	andlw	-2
  4838  002BC8  183E               	xorwf	??_left^0,w,c
  4839  002BCA  6E7E               	movwf	126,c	;volatile
  4840  002BCC                     
  4841                           ;DC_motors.c: 165:         if (mL->power < 40) {mL->power += 10;}
  4842  002BCC  C038  FFD9         	movff	left@mL,fsr2l
  4843  002BD0  C039  FFDA         	movff	left@mL+1,fsr2h
  4844  002BD4  0E28               	movlw	40
  4845  002BD6  60DF               	cpfslt	indf2,c
  4846  002BD8  EFF0  F015         	goto	u3341
  4847  002BDC  EFF2  F015         	goto	u3340
  4848  002BE0                     u3341:
  4849  002BE0  EFF8  F015         	goto	l3387
  4850  002BE4                     u3340:
  4851  002BE4  C038  FFD9         	movff	left@mL,fsr2l
  4852  002BE8  C039  FFDA         	movff	left@mL+1,fsr2h
  4853  002BEC  0E0A               	movlw	10
  4854  002BEE  26DF               	addwf	indf2,f,c
  4855  002BF0                     l3387:
  4856                           
  4857                           ;DC_motors.c: 166:         if (mR->power < 40) {mR->power += 10;}
  4858  002BF0  C03A  FFD9         	movff	left@mR,fsr2l
  4859  002BF4  C03B  FFDA         	movff	left@mR+1,fsr2h
  4860  002BF8  0E28               	movlw	40
  4861  002BFA  60DF               	cpfslt	indf2,c
  4862  002BFC  EF02  F016         	goto	u3351
  4863  002C00  EF04  F016         	goto	u3350
  4864  002C04                     u3351:
  4865  002C04  EF0A  F016         	goto	l3391
  4866  002C08                     u3350:
  4867  002C08  C03A  FFD9         	movff	left@mR,fsr2l
  4868  002C0C  C03B  FFDA         	movff	left@mR+1,fsr2h
  4869  002C10  0E0A               	movlw	10
  4870  002C12  26DF               	addwf	indf2,f,c
  4871  002C14                     l3391:
  4872                           
  4873                           ;DC_motors.c: 169:         DCmotors_setPWM(mL);
  4874  002C14  C038  F00F         	movff	left@mL,DCmotors_setPWM@m
  4875  002C18  C039  F010         	movff	left@mL+1,DCmotors_setPWM@m+1
  4876  002C1C  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  4877  002C20                     
  4878                           ;DC_motors.c: 170:         DCmotors_setPWM(mR);
  4879  002C20  C03A  F00F         	movff	left@mR,DCmotors_setPWM@m
  4880  002C24  C03B  F010         	movff	left@mR+1,DCmotors_setPWM@m+1
  4881  002C28  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  4882  002C2C                     
  4883                           ;DC_motors.c: 171:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  4884  002C2C  0EA0               	movlw	160
  4885  002C2E                     u4957:
  4886  002C2E  D000               	nop2	
  4887  002C30  2EE8               	decfsz	wreg,f,c
  4888  002C32  D7FD               	bra	u4957
  4889  002C34                     l3397:
  4890                           
  4891                           ;DC_motors.c: 160:     while((mL->power < 40) || (mR->power < 40)){
  4892  002C34  C038  FFD9         	movff	left@mL,fsr2l
  4893  002C38  C039  FFDA         	movff	left@mL+1,fsr2h
  4894  002C3C  0E27               	movlw	39
  4895  002C3E  64DF               	cpfsgt	indf2,c
  4896  002C40  EF24  F016         	goto	u3361
  4897  002C44  EF26  F016         	goto	u3360
  4898  002C48                     u3361:
  4899  002C48  EFD7  F015         	goto	l3381
  4900  002C4C                     u3360:
  4901  002C4C  C03A  FFD9         	movff	left@mR,fsr2l
  4902  002C50  C03B  FFDA         	movff	left@mR+1,fsr2h
  4903  002C54  0E27               	movlw	39
  4904  002C56  64DF               	cpfsgt	indf2,c
  4905  002C58  EF30  F016         	goto	u3371
  4906  002C5C  EF32  F016         	goto	u3370
  4907  002C60                     u3371:
  4908  002C60  EFD7  F015         	goto	l3381
  4909  002C64                     u3370:
  4910  002C64                     
  4911                           ;DC_motors.c: 174:     unsigned int i;;DC_motors.c: 175:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  4912  002C64  0E00               	movlw	0
  4913  002C66  6E44               	movwf	(left@i+1)^0,c
  4914  002C68  0E00               	movlw	0
  4915  002C6A  6E43               	movwf	left@i^0,c
  4916  002C6C  EF42  F016         	goto	l3407
  4917  002C70                     l3403:
  4918  002C70  0E15               	movlw	21
  4919  002C72  6E3E               	movwf	??_left^0,c
  4920  002C74  0EC6               	movlw	198
  4921  002C76                     u4967:
  4922  002C76  2EE8               	decfsz	wreg,f,c
  4923  002C78  D7FE               	bra	u4967
  4924  002C7A  2E3E               	decfsz	??_left^0,f,c
  4925  002C7C  D7FC               	bra	u4967
  4926  002C7E  D000               	nop2	
  4927  002C80  4A43               	infsnz	left@i^0,f,c
  4928  002C82  2A44               	incf	(left@i+1)^0,f,c
  4929  002C84                     l3407:
  4930  002C84  C043  F001         	movff	left@i,___xxtofl@val
  4931  002C88  C044  F002         	movff	left@i+1,___xxtofl@val+1
  4932  002C8C  6A03               	clrf	(___xxtofl@val+2)^0,c
  4933  002C8E  6A04               	clrf	(___xxtofl@val+3)^0,c
  4934  002C90  0E00               	movlw	0
  4935  002C92  ECB6  F014         	call	___xxtofl
  4936  002C96  C001  F00F         	movff	?___xxtofl,___flge@ff1
  4937  002C9A  C002  F010         	movff	?___xxtofl+1,___flge@ff1+1
  4938  002C9E  C003  F011         	movff	?___xxtofl+2,___flge@ff1+2
  4939  002CA2  C004  F012         	movff	?___xxtofl+3,___flge@ff1+3
  4940  002CA6  C03F  F013         	movff	left@delay,___flge@ff2
  4941  002CAA  C040  F014         	movff	left@delay+1,___flge@ff2+1
  4942  002CAE  C041  F015         	movff	left@delay+2,___flge@ff2+2
  4943  002CB2  C042  F016         	movff	left@delay+3,___flge@ff2+3
  4944  002CB6  EC9C  F017         	call	___flge	;wreg free
  4945  002CBA  A0D8               	btfss	status,0,c
  4946  002CBC  EF62  F016         	goto	u3381
  4947  002CC0  EF64  F016         	goto	u3380
  4948  002CC4                     u3381:
  4949  002CC4  EF38  F016         	goto	l3403
  4950  002CC8                     u3380:
  4951  002CC8                     
  4952                           ;DC_motors.c: 177:     LATFbits.LATF0 = 0;
  4953  002CC8  907E               	bcf	126,0,c	;volatile
  4954  002CCA  0012               	return		;funcret
  4955  002CCC                     __end_of_left:
  4956                           	callstack 0
  4957                           
  4958 ;; *************** function ___xxtofl *****************
  4959 ;; Defined at:
  4960 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  sign            1    wreg     unsigned char 
  4963 ;;  val             4    0[COMRAM] long 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  sign            1    8[COMRAM] unsigned char 
  4966 ;;  arg             4   10[COMRAM] unsigned long 
  4967 ;;  exp             1    9[COMRAM] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  4    0[COMRAM] unsigned char 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4979 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;Total ram usage:       14 bytes
  4982 ;; Hardware stack levels used: 1
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_colourcards_readRGBC
  4987 ;;		_left
  4988 ;;		_colourcards_testingRGBC
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text27
  4993  00296C                     __ptext27:
  4994                           	callstack 0
  4995  00296C                     ___xxtofl:
  4996                           	callstack 27
  4997                           
  4998                           ;incstack = 0
  4999                           ;___xxtofl@sign stored from wreg
  5000  00296C  6E09               	movwf	___xxtofl@sign^0,c
  5001  00296E  5009               	movf	___xxtofl@sign^0,w,c
  5002  002970  B4D8               	btfsc	status,2,c
  5003  002972  EFBD  F014         	goto	u3191
  5004  002976  EFBF  F014         	goto	u3190
  5005  00297A                     u3191:
  5006  00297A  EFE1  F014         	goto	l1372
  5007  00297E                     u3190:
  5008  00297E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5009  002980  EFC6  F014         	goto	u3200
  5010  002984  EFC4  F014         	goto	u3201
  5011  002988                     u3201:
  5012  002988  EFE1  F014         	goto	l1372
  5013  00298C                     u3200:
  5014  00298C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5015  002990  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5016  002994  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5017  002998  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5018  00299C  1E05               	comf	??___xxtofl^0,f,c
  5019  00299E  1E06               	comf	(??___xxtofl+1)^0,f,c
  5020  0029A0  1E07               	comf	(??___xxtofl+2)^0,f,c
  5021  0029A2  1E08               	comf	(??___xxtofl+3)^0,f,c
  5022  0029A4  2A05               	incf	??___xxtofl^0,f,c
  5023  0029A6  0E00               	movlw	0
  5024  0029A8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5025  0029AA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5026  0029AC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5027  0029AE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5028  0029B2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5029  0029B6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5030  0029BA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5031  0029BE  EFE9  F014         	goto	l3309
  5032  0029C2                     l1372:
  5033  0029C2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5034  0029C6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5035  0029CA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5036  0029CE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5037  0029D2                     l3309:
  5038  0029D2  5001               	movf	___xxtofl@val^0,w,c
  5039  0029D4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5040  0029D6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5041  0029D8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5042  0029DA  A4D8               	btfss	status,2,c
  5043  0029DC  EFF2  F014         	goto	u3211
  5044  0029E0  EFF4  F014         	goto	u3210
  5045  0029E4                     u3211:
  5046  0029E4  EFFE  F014         	goto	l3315
  5047  0029E8                     u3210:
  5048  0029E8  0E00               	movlw	0
  5049  0029EA  6E01               	movwf	?___xxtofl^0,c
  5050  0029EC  0E00               	movlw	0
  5051  0029EE  6E02               	movwf	(?___xxtofl+1)^0,c
  5052  0029F0  0E00               	movlw	0
  5053  0029F2  6E03               	movwf	(?___xxtofl+2)^0,c
  5054  0029F4  0E00               	movlw	0
  5055  0029F6  6E04               	movwf	(?___xxtofl+3)^0,c
  5056  0029F8  EF8F  F015         	goto	l1375
  5057  0029FC                     l3315:
  5058  0029FC  0E96               	movlw	150
  5059  0029FE  6E0A               	movwf	___xxtofl@exp^0,c
  5060  002A00  EF08  F015         	goto	l3319
  5061  002A04                     l3317:
  5062  002A04  2A0A               	incf	___xxtofl@exp^0,f,c
  5063  002A06  90D8               	bcf	status,0,c
  5064  002A08  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5065  002A0A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5066  002A0C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5067  002A0E  320B               	rrcf	___xxtofl@arg^0,f,c
  5068  002A10                     l3319:
  5069  002A10  0E00               	movlw	0
  5070  002A12  140B               	andwf	___xxtofl@arg^0,w,c
  5071  002A14  6E05               	movwf	??___xxtofl^0,c
  5072  002A16  0E00               	movlw	0
  5073  002A18  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5074  002A1A  6E06               	movwf	(??___xxtofl+1)^0,c
  5075  002A1C  0E00               	movlw	0
  5076  002A1E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5077  002A20  6E07               	movwf	(??___xxtofl+2)^0,c
  5078  002A22  0EFE               	movlw	254
  5079  002A24  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5080  002A26  6E08               	movwf	(??___xxtofl+3)^0,c
  5081  002A28  5005               	movf	??___xxtofl^0,w,c
  5082  002A2A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5083  002A2C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5084  002A2E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5085  002A30  A4D8               	btfss	status,2,c
  5086  002A32  EF1D  F015         	goto	u3221
  5087  002A36  EF1F  F015         	goto	u3220
  5088  002A3A                     u3221:
  5089  002A3A  EF02  F015         	goto	l3317
  5090  002A3E                     u3220:
  5091  002A3E  EF2D  F015         	goto	l1379
  5092  002A42                     l3321:
  5093  002A42  2A0A               	incf	___xxtofl@exp^0,f,c
  5094  002A44  0E01               	movlw	1
  5095  002A46  260B               	addwf	___xxtofl@arg^0,f,c
  5096  002A48  0E00               	movlw	0
  5097  002A4A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5098  002A4C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5099  002A4E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5100  002A50  90D8               	bcf	status,0,c
  5101  002A52  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5102  002A54  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5103  002A56  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5104  002A58  320B               	rrcf	___xxtofl@arg^0,f,c
  5105  002A5A                     l1379:
  5106  002A5A  0E00               	movlw	0
  5107  002A5C  140B               	andwf	___xxtofl@arg^0,w,c
  5108  002A5E  6E05               	movwf	??___xxtofl^0,c
  5109  002A60  0E00               	movlw	0
  5110  002A62  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5111  002A64  6E06               	movwf	(??___xxtofl+1)^0,c
  5112  002A66  0E00               	movlw	0
  5113  002A68  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5114  002A6A  6E07               	movwf	(??___xxtofl+2)^0,c
  5115  002A6C  0EFF               	movlw	255
  5116  002A6E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5117  002A70  6E08               	movwf	(??___xxtofl+3)^0,c
  5118  002A72  5005               	movf	??___xxtofl^0,w,c
  5119  002A74  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5120  002A76  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5121  002A78  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5122  002A7A  A4D8               	btfss	status,2,c
  5123  002A7C  EF42  F015         	goto	u3231
  5124  002A80  EF44  F015         	goto	u3230
  5125  002A84                     u3231:
  5126  002A84  EF21  F015         	goto	l3321
  5127  002A88                     u3230:
  5128  002A88  EF4C  F015         	goto	l3329
  5129  002A8C                     l3327:
  5130  002A8C  060A               	decf	___xxtofl@exp^0,f,c
  5131  002A8E  90D8               	bcf	status,0,c
  5132  002A90  360B               	rlcf	___xxtofl@arg^0,f,c
  5133  002A92  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5134  002A94  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5135  002A96  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5136  002A98                     l3329:
  5137  002A98  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5138  002A9A  EF51  F015         	goto	u3241
  5139  002A9E  EF53  F015         	goto	u3240
  5140  002AA2                     u3241:
  5141  002AA2  EF5B  F015         	goto	l1386
  5142  002AA6                     u3240:
  5143  002AA6  0E02               	movlw	2
  5144  002AA8  600A               	cpfslt	___xxtofl@exp^0,c
  5145  002AAA  EF59  F015         	goto	u3251
  5146  002AAE  EF5B  F015         	goto	u3250
  5147  002AB2                     u3251:
  5148  002AB2  EF46  F015         	goto	l3327
  5149  002AB6                     u3250:
  5150  002AB6                     l1386:
  5151  002AB6  B00A               	btfsc	___xxtofl@exp^0,0,c
  5152  002AB8  EF60  F015         	goto	u3261
  5153  002ABC  EF62  F015         	goto	u3260
  5154  002AC0                     u3261:
  5155  002AC0  EF63  F015         	goto	l3335
  5156  002AC4                     u3260:
  5157  002AC4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5158  002AC6                     l3335:
  5159  002AC6  90D8               	bcf	status,0,c
  5160  002AC8  320A               	rrcf	___xxtofl@exp^0,f,c
  5161  002ACA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5162  002ACE  6A06               	clrf	(??___xxtofl+1)^0,c
  5163  002AD0  6A07               	clrf	(??___xxtofl+2)^0,c
  5164  002AD2  6A08               	clrf	(??___xxtofl+3)^0,c
  5165  002AD4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5166  002AD8  6A07               	clrf	(??___xxtofl+2)^0,c
  5167  002ADA  6A06               	clrf	(??___xxtofl+1)^0,c
  5168  002ADC  6A05               	clrf	??___xxtofl^0,c
  5169  002ADE  5005               	movf	??___xxtofl^0,w,c
  5170  002AE0  120B               	iorwf	___xxtofl@arg^0,f,c
  5171  002AE2  5006               	movf	(??___xxtofl+1)^0,w,c
  5172  002AE4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5173  002AE6  5007               	movf	(??___xxtofl+2)^0,w,c
  5174  002AE8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5175  002AEA  5008               	movf	(??___xxtofl+3)^0,w,c
  5176  002AEC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5177  002AEE  5009               	movf	___xxtofl@sign^0,w,c
  5178  002AF0  B4D8               	btfsc	status,2,c
  5179  002AF2  EF7D  F015         	goto	u3271
  5180  002AF6  EF7F  F015         	goto	u3270
  5181  002AFA                     u3271:
  5182  002AFA  EF87  F015         	goto	l3345
  5183  002AFE                     u3270:
  5184  002AFE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5185  002B00  EF86  F015         	goto	u3280
  5186  002B04  EF84  F015         	goto	u3281
  5187  002B08                     u3281:
  5188  002B08  EF87  F015         	goto	l3345
  5189  002B0C                     u3280:
  5190  002B0C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5191  002B0E                     l3345:
  5192  002B0E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5193  002B12  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5194  002B16  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5195  002B1A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5196  002B1E                     l1375:
  5197  002B1E  0012               	return		;funcret
  5198  002B20                     __end_of___xxtofl:
  5199                           	callstack 0
  5200                           
  5201 ;; *************** function ___flmul *****************
  5202 ;; Defined at:
  5203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  b               4   14[COMRAM] unsigned char 
  5206 ;;  a               4   18[COMRAM] unsigned char 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  prod            4   33[COMRAM] struct .
  5209 ;;  grs             4   27[COMRAM] unsigned long 
  5210 ;;  temp            2   37[COMRAM] struct .
  5211 ;;  bexp            1   32[COMRAM] unsigned char 
  5212 ;;  aexp            1   31[COMRAM] unsigned char 
  5213 ;;  sign            1   26[COMRAM] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  4   14[COMRAM] unsigned char 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0, prodl, prodh
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5226 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5227 ;;Total ram usage:       25 bytes
  5228 ;; Hardware stack levels used: 1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_left
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text28
  5237  001C90                     __ptext28:
  5238                           	callstack 0
  5239  001C90                     ___flmul:
  5240                           	callstack 27
  5241  001C90  5012               	movf	(___flmul@b+3)^0,w,c
  5242  001C92  0B80               	andlw	128
  5243  001C94  6E1B               	movwf	___flmul@sign^0,c
  5244  001C96  5012               	movf	(___flmul@b+3)^0,w,c
  5245  001C98  2412               	addwf	(___flmul@b+3)^0,w,c
  5246  001C9A  6E21               	movwf	___flmul@bexp^0,c
  5247  001C9C  AE11               	btfss	(___flmul@b+2)^0,7,c
  5248  001C9E  EF53  F00E         	goto	u2951
  5249  001CA2  EF55  F00E         	goto	u2950
  5250  001CA6                     u2951:
  5251  001CA6  EF56  F00E         	goto	l3157
  5252  001CAA                     u2950:
  5253  001CAA  8021               	bsf	___flmul@bexp^0,0,c
  5254  001CAC                     l3157:
  5255  001CAC  5021               	movf	___flmul@bexp^0,w,c
  5256  001CAE  B4D8               	btfsc	status,2,c
  5257  001CB0  EF5C  F00E         	goto	u2961
  5258  001CB4  EF5E  F00E         	goto	u2960
  5259  001CB8                     u2961:
  5260  001CB8  EF71  F00E         	goto	l3165
  5261  001CBC                     u2960:
  5262  001CBC  2821               	incf	___flmul@bexp^0,w,c
  5263  001CBE  A4D8               	btfss	status,2,c
  5264  001CC0  EF64  F00E         	goto	u2971
  5265  001CC4  EF66  F00E         	goto	u2970
  5266  001CC8                     u2971:
  5267  001CC8  EF6E  F00E         	goto	l3163
  5268  001CCC                     u2970:
  5269  001CCC  0E00               	movlw	0
  5270  001CCE  6E0F               	movwf	___flmul@b^0,c
  5271  001CD0  0E00               	movlw	0
  5272  001CD2  6E10               	movwf	(___flmul@b+1)^0,c
  5273  001CD4  0E00               	movlw	0
  5274  001CD6  6E11               	movwf	(___flmul@b+2)^0,c
  5275  001CD8  0E00               	movlw	0
  5276  001CDA  6E12               	movwf	(___flmul@b+3)^0,c
  5277  001CDC                     l3163:
  5278  001CDC  8E11               	bsf	(___flmul@b+2)^0,7,c
  5279  001CDE  EF79  F00E         	goto	l3167
  5280  001CE2                     l3165:
  5281  001CE2  0E00               	movlw	0
  5282  001CE4  6E0F               	movwf	___flmul@b^0,c
  5283  001CE6  0E00               	movlw	0
  5284  001CE8  6E10               	movwf	(___flmul@b+1)^0,c
  5285  001CEA  0E00               	movlw	0
  5286  001CEC  6E11               	movwf	(___flmul@b+2)^0,c
  5287  001CEE  0E00               	movlw	0
  5288  001CF0  6E12               	movwf	(___flmul@b+3)^0,c
  5289  001CF2                     l3167:
  5290  001CF2  5016               	movf	(___flmul@a+3)^0,w,c
  5291  001CF4  0B80               	andlw	128
  5292  001CF6  1A1B               	xorwf	___flmul@sign^0,f,c
  5293  001CF8  5016               	movf	(___flmul@a+3)^0,w,c
  5294  001CFA  2416               	addwf	(___flmul@a+3)^0,w,c
  5295  001CFC  6E20               	movwf	___flmul@aexp^0,c
  5296  001CFE  AE15               	btfss	(___flmul@a+2)^0,7,c
  5297  001D00  EF84  F00E         	goto	u2981
  5298  001D04  EF86  F00E         	goto	u2980
  5299  001D08                     u2981:
  5300  001D08  EF87  F00E         	goto	l3175
  5301  001D0C                     u2980:
  5302  001D0C  8020               	bsf	___flmul@aexp^0,0,c
  5303  001D0E                     l3175:
  5304  001D0E  5020               	movf	___flmul@aexp^0,w,c
  5305  001D10  B4D8               	btfsc	status,2,c
  5306  001D12  EF8D  F00E         	goto	u2991
  5307  001D16  EF8F  F00E         	goto	u2990
  5308  001D1A                     u2991:
  5309  001D1A  EFA2  F00E         	goto	l3183
  5310  001D1E                     u2990:
  5311  001D1E  2820               	incf	___flmul@aexp^0,w,c
  5312  001D20  A4D8               	btfss	status,2,c
  5313  001D22  EF95  F00E         	goto	u3001
  5314  001D26  EF97  F00E         	goto	u3000
  5315  001D2A                     u3001:
  5316  001D2A  EF9F  F00E         	goto	l3181
  5317  001D2E                     u3000:
  5318  001D2E  0E00               	movlw	0
  5319  001D30  6E13               	movwf	___flmul@a^0,c
  5320  001D32  0E00               	movlw	0
  5321  001D34  6E14               	movwf	(___flmul@a+1)^0,c
  5322  001D36  0E00               	movlw	0
  5323  001D38  6E15               	movwf	(___flmul@a+2)^0,c
  5324  001D3A  0E00               	movlw	0
  5325  001D3C  6E16               	movwf	(___flmul@a+3)^0,c
  5326  001D3E                     l3181:
  5327  001D3E  8E15               	bsf	(___flmul@a+2)^0,7,c
  5328  001D40  EFAA  F00E         	goto	l1331
  5329  001D44                     l3183:
  5330  001D44  0E00               	movlw	0
  5331  001D46  6E13               	movwf	___flmul@a^0,c
  5332  001D48  0E00               	movlw	0
  5333  001D4A  6E14               	movwf	(___flmul@a+1)^0,c
  5334  001D4C  0E00               	movlw	0
  5335  001D4E  6E15               	movwf	(___flmul@a+2)^0,c
  5336  001D50  0E00               	movlw	0
  5337  001D52  6E16               	movwf	(___flmul@a+3)^0,c
  5338  001D54                     l1331:
  5339  001D54  5020               	movf	___flmul@aexp^0,w,c
  5340  001D56  B4D8               	btfsc	status,2,c
  5341  001D58  EFB0  F00E         	goto	u3011
  5342  001D5C  EFB2  F00E         	goto	u3010
  5343  001D60                     u3011:
  5344  001D60  EFBA  F00E         	goto	l3187
  5345  001D64                     u3010:
  5346  001D64  5021               	movf	___flmul@bexp^0,w,c
  5347  001D66  A4D8               	btfss	status,2,c
  5348  001D68  EFB8  F00E         	goto	u3021
  5349  001D6C  EFBA  F00E         	goto	u3020
  5350  001D70                     u3021:
  5351  001D70  EFC4  F00E         	goto	l3191
  5352  001D74                     u3020:
  5353  001D74                     l3187:
  5354  001D74  0E00               	movlw	0
  5355  001D76  6E0F               	movwf	?___flmul^0,c
  5356  001D78  0E00               	movlw	0
  5357  001D7A  6E10               	movwf	(?___flmul+1)^0,c
  5358  001D7C  0E00               	movlw	0
  5359  001D7E  6E11               	movwf	(?___flmul+2)^0,c
  5360  001D80  0E00               	movlw	0
  5361  001D82  6E12               	movwf	(?___flmul+3)^0,c
  5362  001D84  EF5C  F010         	goto	l1335
  5363  001D88                     l3191:
  5364  001D88  5015               	movf	(___flmul@a+2)^0,w,c
  5365  001D8A  020F               	mulwf	___flmul@b^0,c
  5366  001D8C  CFF3 F026          	movff	prodl,___flmul@temp
  5367  001D90  CFF4 F027          	movff	prodh,___flmul@temp+1
  5368  001D94  5026               	movf	___flmul@temp^0,w,c
  5369  001D96  6E1C               	movwf	___flmul@grs^0,c
  5370  001D98  6A1D               	clrf	(___flmul@grs+1)^0,c
  5371  001D9A  6A1E               	clrf	(___flmul@grs+2)^0,c
  5372  001D9C  6A1F               	clrf	(___flmul@grs+3)^0,c
  5373  001D9E  5027               	movf	(___flmul@temp+1)^0,w,c
  5374  001DA0  6E22               	movwf	___flmul@prod^0,c
  5375  001DA2  6A23               	clrf	(___flmul@prod+1)^0,c
  5376  001DA4  6A24               	clrf	(___flmul@prod+2)^0,c
  5377  001DA6  6A25               	clrf	(___flmul@prod+3)^0,c
  5378  001DA8  5014               	movf	(___flmul@a+1)^0,w,c
  5379  001DAA  0210               	mulwf	(___flmul@b+1)^0,c
  5380  001DAC  CFF3 F026          	movff	prodl,___flmul@temp
  5381  001DB0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5382  001DB4  5026               	movf	___flmul@temp^0,w,c
  5383  001DB6  261C               	addwf	___flmul@grs^0,f,c
  5384  001DB8  0E00               	movlw	0
  5385  001DBA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5386  001DBC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5387  001DBE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5388  001DC0  5027               	movf	(___flmul@temp+1)^0,w,c
  5389  001DC2  2622               	addwf	___flmul@prod^0,f,c
  5390  001DC4  0E00               	movlw	0
  5391  001DC6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5392  001DC8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5393  001DCA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5394  001DCC  5013               	movf	___flmul@a^0,w,c
  5395  001DCE  0211               	mulwf	(___flmul@b+2)^0,c
  5396  001DD0  CFF3 F026          	movff	prodl,___flmul@temp
  5397  001DD4  CFF4 F027          	movff	prodh,___flmul@temp+1
  5398  001DD8  5026               	movf	___flmul@temp^0,w,c
  5399  001DDA  261C               	addwf	___flmul@grs^0,f,c
  5400  001DDC  0E00               	movlw	0
  5401  001DDE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5402  001DE0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5403  001DE2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5404  001DE4  5027               	movf	(___flmul@temp+1)^0,w,c
  5405  001DE6  2622               	addwf	___flmul@prod^0,f,c
  5406  001DE8  0E00               	movlw	0
  5407  001DEA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5408  001DEC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5409  001DEE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5410  001DF0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5411  001DF4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5412  001DF8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5413  001DFC  6A1C               	clrf	___flmul@grs^0,c
  5414  001DFE  5013               	movf	___flmul@a^0,w,c
  5415  001E00  0210               	mulwf	(___flmul@b+1)^0,c
  5416  001E02  CFF3 F026          	movff	prodl,___flmul@temp
  5417  001E06  CFF4 F027          	movff	prodh,___flmul@temp+1
  5418  001E0A  5026               	movf	___flmul@temp^0,w,c
  5419  001E0C  261C               	addwf	___flmul@grs^0,f,c
  5420  001E0E  5027               	movf	(___flmul@temp+1)^0,w,c
  5421  001E10  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5422  001E12  0E00               	movlw	0
  5423  001E14  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5424  001E16  0E00               	movlw	0
  5425  001E18  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5426  001E1A  5014               	movf	(___flmul@a+1)^0,w,c
  5427  001E1C  020F               	mulwf	___flmul@b^0,c
  5428  001E1E  CFF3 F026          	movff	prodl,___flmul@temp
  5429  001E22  CFF4 F027          	movff	prodh,___flmul@temp+1
  5430  001E26  5026               	movf	___flmul@temp^0,w,c
  5431  001E28  261C               	addwf	___flmul@grs^0,f,c
  5432  001E2A  5027               	movf	(___flmul@temp+1)^0,w,c
  5433  001E2C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5434  001E2E  0E00               	movlw	0
  5435  001E30  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5436  001E32  0E00               	movlw	0
  5437  001E34  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5438  001E36  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5439  001E3A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5440  001E3E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5441  001E42  6A1C               	clrf	___flmul@grs^0,c
  5442  001E44  5013               	movf	___flmul@a^0,w,c
  5443  001E46  020F               	mulwf	___flmul@b^0,c
  5444  001E48  CFF3 F026          	movff	prodl,___flmul@temp
  5445  001E4C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5446  001E50  5026               	movf	___flmul@temp^0,w,c
  5447  001E52  261C               	addwf	___flmul@grs^0,f,c
  5448  001E54  5027               	movf	(___flmul@temp+1)^0,w,c
  5449  001E56  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5450  001E58  0E00               	movlw	0
  5451  001E5A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5452  001E5C  0E00               	movlw	0
  5453  001E5E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5454  001E60  5015               	movf	(___flmul@a+2)^0,w,c
  5455  001E62  0210               	mulwf	(___flmul@b+1)^0,c
  5456  001E64  CFF3 F026          	movff	prodl,___flmul@temp
  5457  001E68  CFF4 F027          	movff	prodh,___flmul@temp+1
  5458  001E6C  5026               	movf	___flmul@temp^0,w,c
  5459  001E6E  2622               	addwf	___flmul@prod^0,f,c
  5460  001E70  5027               	movf	(___flmul@temp+1)^0,w,c
  5461  001E72  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5462  001E74  0E00               	movlw	0
  5463  001E76  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5464  001E78  0E00               	movlw	0
  5465  001E7A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5466  001E7C  5014               	movf	(___flmul@a+1)^0,w,c
  5467  001E7E  0211               	mulwf	(___flmul@b+2)^0,c
  5468  001E80  CFF3 F026          	movff	prodl,___flmul@temp
  5469  001E84  CFF4 F027          	movff	prodh,___flmul@temp+1
  5470  001E88  5026               	movf	___flmul@temp^0,w,c
  5471  001E8A  2622               	addwf	___flmul@prod^0,f,c
  5472  001E8C  5027               	movf	(___flmul@temp+1)^0,w,c
  5473  001E8E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5474  001E90  0E00               	movlw	0
  5475  001E92  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5476  001E94  0E00               	movlw	0
  5477  001E96  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5478  001E98  5015               	movf	(___flmul@a+2)^0,w,c
  5479  001E9A  0211               	mulwf	(___flmul@b+2)^0,c
  5480  001E9C  CFF3 F026          	movff	prodl,___flmul@temp
  5481  001EA0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5482  001EA4  5026               	movf	___flmul@temp^0,w,c
  5483  001EA6  6E17               	movwf	??___flmul^0,c
  5484  001EA8  5027               	movf	(___flmul@temp+1)^0,w,c
  5485  001EAA  6E18               	movwf	(??___flmul+1)^0,c
  5486  001EAC  6A19               	clrf	(??___flmul+2)^0,c
  5487  001EAE  6A1A               	clrf	(??___flmul+3)^0,c
  5488  001EB0  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5489  001EB4  C018  F019         	movff	??___flmul+1,??___flmul+2
  5490  001EB8  C017  F018         	movff	??___flmul,??___flmul+1
  5491  001EBC  6A17               	clrf	??___flmul^0,c
  5492  001EBE  5017               	movf	??___flmul^0,w,c
  5493  001EC0  2622               	addwf	___flmul@prod^0,f,c
  5494  001EC2  5018               	movf	(??___flmul+1)^0,w,c
  5495  001EC4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5496  001EC6  5019               	movf	(??___flmul+2)^0,w,c
  5497  001EC8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5498  001ECA  501A               	movf	(??___flmul+3)^0,w,c
  5499  001ECC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5500  001ECE  C01C  F017         	movff	___flmul@grs,??___flmul
  5501  001ED2  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5502  001ED6  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5503  001EDA  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5504  001EDE  0E19               	movlw	25
  5505  001EE0  EF77  F00F         	goto	u3030
  5506  001EE4                     u3035:
  5507  001EE4  90D8               	bcf	status,0,c
  5508  001EE6  321A               	rrcf	(??___flmul+3)^0,f,c
  5509  001EE8  3219               	rrcf	(??___flmul+2)^0,f,c
  5510  001EEA  3218               	rrcf	(??___flmul+1)^0,f,c
  5511  001EEC  3217               	rrcf	??___flmul^0,f,c
  5512  001EEE                     u3030:
  5513  001EEE  2EE8               	decfsz	wreg,f,c
  5514  001EF0  EF72  F00F         	goto	u3035
  5515  001EF4  5017               	movf	??___flmul^0,w,c
  5516  001EF6  2622               	addwf	___flmul@prod^0,f,c
  5517  001EF8  5018               	movf	(??___flmul+1)^0,w,c
  5518  001EFA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5519  001EFC  5019               	movf	(??___flmul+2)^0,w,c
  5520  001EFE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5521  001F00  501A               	movf	(??___flmul+3)^0,w,c
  5522  001F02  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5523  001F04  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5524  001F08  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5525  001F0C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5526  001F10  6A1C               	clrf	___flmul@grs^0,c
  5527  001F12  5020               	movf	___flmul@aexp^0,w,c
  5528  001F14  C021  F017         	movff	___flmul@bexp,??___flmul
  5529  001F18  6A18               	clrf	(??___flmul+1)^0,c
  5530  001F1A  2617               	addwf	??___flmul^0,f,c
  5531  001F1C  0E00               	movlw	0
  5532  001F1E  2218               	addwfc	(??___flmul+1)^0,f,c
  5533  001F20  0E82               	movlw	130
  5534  001F22  2417               	addwf	??___flmul^0,w,c
  5535  001F24  6E26               	movwf	___flmul@temp^0,c
  5536  001F26  0EFF               	movlw	255
  5537  001F28  2018               	addwfc	(??___flmul+1)^0,w,c
  5538  001F2A  6E27               	movwf	(___flmul@temp+1)^0,c
  5539  001F2C  EFAD  F00F         	goto	l3239
  5540  001F30                     l3233:
  5541  001F30  90D8               	bcf	status,0,c
  5542  001F32  3622               	rlcf	___flmul@prod^0,f,c
  5543  001F34  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5544  001F36  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5545  001F38  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5546  001F3A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5547  001F3C  EFA2  F00F         	goto	u3041
  5548  001F40  EFA4  F00F         	goto	u3040
  5549  001F44                     u3041:
  5550  001F44  EFA5  F00F         	goto	l1338
  5551  001F48                     u3040:
  5552  001F48  8022               	bsf	___flmul@prod^0,0,c
  5553  001F4A                     l1338:
  5554  001F4A  90D8               	bcf	status,0,c
  5555  001F4C  361C               	rlcf	___flmul@grs^0,f,c
  5556  001F4E  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5557  001F50  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5558  001F52  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5559  001F54  0626               	decf	___flmul@temp^0,f,c
  5560  001F56  A0D8               	btfss	status,0,c
  5561  001F58  0627               	decf	(___flmul@temp+1)^0,f,c
  5562  001F5A                     l3239:
  5563  001F5A  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5564  001F5C  EFB2  F00F         	goto	u3051
  5565  001F60  EFB4  F00F         	goto	u3050
  5566  001F64                     u3051:
  5567  001F64  EF98  F00F         	goto	l3233
  5568  001F68                     u3050:
  5569  001F68  0E00               	movlw	0
  5570  001F6A  6E20               	movwf	___flmul@aexp^0,c
  5571  001F6C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5572  001F6E  EFBB  F00F         	goto	u3061
  5573  001F72  EFBD  F00F         	goto	u3060
  5574  001F76                     u3061:
  5575  001F76  EFE1  F00F         	goto	l1340
  5576  001F7A                     u3060:
  5577  001F7A  0EFF               	movlw	255
  5578  001F7C  141C               	andwf	___flmul@grs^0,w,c
  5579  001F7E  6E17               	movwf	??___flmul^0,c
  5580  001F80  0EFF               	movlw	255
  5581  001F82  141D               	andwf	(___flmul@grs+1)^0,w,c
  5582  001F84  6E18               	movwf	(??___flmul+1)^0,c
  5583  001F86  0EFF               	movlw	255
  5584  001F88  141E               	andwf	(___flmul@grs+2)^0,w,c
  5585  001F8A  6E19               	movwf	(??___flmul+2)^0,c
  5586  001F8C  0E7F               	movlw	127
  5587  001F8E  141F               	andwf	(___flmul@grs+3)^0,w,c
  5588  001F90  6E1A               	movwf	(??___flmul+3)^0,c
  5589  001F92  5017               	movf	??___flmul^0,w,c
  5590  001F94  1018               	iorwf	(??___flmul+1)^0,w,c
  5591  001F96  1019               	iorwf	(??___flmul+2)^0,w,c
  5592  001F98  101A               	iorwf	(??___flmul+3)^0,w,c
  5593  001F9A  B4D8               	btfsc	status,2,c
  5594  001F9C  EFD2  F00F         	goto	u3071
  5595  001FA0  EFD4  F00F         	goto	u3070
  5596  001FA4                     u3071:
  5597  001FA4  EFD8  F00F         	goto	l1341
  5598  001FA8                     u3070:
  5599  001FA8                     l3247:
  5600  001FA8  0E01               	movlw	1
  5601  001FAA  6E20               	movwf	___flmul@aexp^0,c
  5602  001FAC  EFE1  F00F         	goto	l1340
  5603  001FB0                     l1341:
  5604  001FB0  A022               	btfss	___flmul@prod^0,0,c
  5605  001FB2  EFDD  F00F         	goto	u3081
  5606  001FB6  EFDF  F00F         	goto	u3080
  5607  001FBA                     u3081:
  5608  001FBA  EFE1  F00F         	goto	l1340
  5609  001FBE                     u3080:
  5610  001FBE  EFD4  F00F         	goto	l3247
  5611  001FC2                     l1340:
  5612  001FC2  5020               	movf	___flmul@aexp^0,w,c
  5613  001FC4  B4D8               	btfsc	status,2,c
  5614  001FC6  EFE7  F00F         	goto	u3091
  5615  001FCA  EFE9  F00F         	goto	u3090
  5616  001FCE                     u3091:
  5617  001FCE  EF0D  F010         	goto	l3259
  5618  001FD2                     u3090:
  5619  001FD2  0E01               	movlw	1
  5620  001FD4  2622               	addwf	___flmul@prod^0,f,c
  5621  001FD6  0E00               	movlw	0
  5622  001FD8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5623  001FDA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5624  001FDC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5625  001FDE  A025               	btfss	(___flmul@prod+3)^0,0,c
  5626  001FE0  EFF4  F00F         	goto	u3101
  5627  001FE4  EFF6  F00F         	goto	u3100
  5628  001FE8                     u3101:
  5629  001FE8  EF0D  F010         	goto	l3259
  5630  001FEC                     u3100:
  5631  001FEC  C022  F017         	movff	___flmul@prod,??___flmul
  5632  001FF0  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5633  001FF4  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5634  001FF8  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5635  001FFC  341A               	rlcf	(??___flmul+3)^0,w,c
  5636  001FFE  321A               	rrcf	(??___flmul+3)^0,f,c
  5637  002000  3219               	rrcf	(??___flmul+2)^0,f,c
  5638  002002  3218               	rrcf	(??___flmul+1)^0,f,c
  5639  002004  3217               	rrcf	??___flmul^0,f,c
  5640  002006  C017  F022         	movff	??___flmul,___flmul@prod
  5641  00200A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5642  00200E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5643  002012  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5644  002016  4A26               	infsnz	___flmul@temp^0,f,c
  5645  002018  2A27               	incf	(___flmul@temp+1)^0,f,c
  5646  00201A                     l3259:
  5647  00201A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5648  00201C  EF18  F010         	goto	u3111
  5649  002020  5027               	movf	(___flmul@temp+1)^0,w,c
  5650  002022  E108               	bnz	u3110
  5651  002024  2826               	incf	___flmul@temp^0,w,c
  5652  002026  A0D8               	btfss	status,0,c
  5653  002028  EF18  F010         	goto	u3111
  5654  00202C  EF1A  F010         	goto	u3110
  5655  002030                     u3111:
  5656  002030  EF24  F010         	goto	l3263
  5657  002034                     u3110:
  5658  002034  0E00               	movlw	0
  5659  002036  6E22               	movwf	___flmul@prod^0,c
  5660  002038  0E00               	movlw	0
  5661  00203A  6E23               	movwf	(___flmul@prod+1)^0,c
  5662  00203C  0E80               	movlw	128
  5663  00203E  6E24               	movwf	(___flmul@prod+2)^0,c
  5664  002040  0E7F               	movlw	127
  5665  002042  6E25               	movwf	(___flmul@prod+3)^0,c
  5666  002044  EF52  F010         	goto	l3275
  5667  002048                     l3263:
  5668  002048  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5669  00204A  EF31  F010         	goto	u3120
  5670  00204E  5027               	movf	(___flmul@temp+1)^0,w,c
  5671  002050  E106               	bnz	u3121
  5672  002052  0426               	decf	___flmul@temp^0,w,c
  5673  002054  B0D8               	btfsc	status,0,c
  5674  002056  EF2F  F010         	goto	u3121
  5675  00205A  EF31  F010         	goto	u3120
  5676  00205E                     u3121:
  5677  00205E  EF3D  F010         	goto	l1348
  5678  002062                     u3120:
  5679  002062  0E00               	movlw	0
  5680  002064  6E22               	movwf	___flmul@prod^0,c
  5681  002066  0E00               	movlw	0
  5682  002068  6E23               	movwf	(___flmul@prod+1)^0,c
  5683  00206A  0E00               	movlw	0
  5684  00206C  6E24               	movwf	(___flmul@prod+2)^0,c
  5685  00206E  0E00               	movlw	0
  5686  002070  6E25               	movwf	(___flmul@prod+3)^0,c
  5687  002072  0E00               	movlw	0
  5688  002074  6E1B               	movwf	___flmul@sign^0,c
  5689  002076  EF52  F010         	goto	l3275
  5690  00207A                     l1348:
  5691  00207A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5692  00207E  0EFF               	movlw	255
  5693  002080  1622               	andwf	___flmul@prod^0,f,c
  5694  002082  0EFF               	movlw	255
  5695  002084  1623               	andwf	(___flmul@prod+1)^0,f,c
  5696  002086  0E7F               	movlw	127
  5697  002088  1624               	andwf	(___flmul@prod+2)^0,f,c
  5698  00208A  0E00               	movlw	0
  5699  00208C  1625               	andwf	(___flmul@prod+3)^0,f,c
  5700  00208E  A021               	btfss	___flmul@bexp^0,0,c
  5701  002090  EF4C  F010         	goto	u3131
  5702  002094  EF4E  F010         	goto	u3130
  5703  002098                     u3131:
  5704  002098  EF4F  F010         	goto	l3273
  5705  00209C                     u3130:
  5706  00209C  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5707  00209E                     l3273:
  5708  00209E  90D8               	bcf	status,0,c
  5709  0020A0  3021               	rrcf	___flmul@bexp^0,w,c
  5710  0020A2  6E25               	movwf	(___flmul@prod+3)^0,c
  5711  0020A4                     l3275:
  5712  0020A4  501B               	movf	___flmul@sign^0,w,c
  5713  0020A6  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5714  0020A8  C022  F00F         	movff	___flmul@prod,?___flmul
  5715  0020AC  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5716  0020B0  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5717  0020B4  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5718  0020B8                     l1335:
  5719  0020B8  0012               	return		;funcret
  5720  0020BA                     __end_of___flmul:
  5721                           	callstack 0
  5722                           
  5723 ;; *************** function ___flge *****************
  5724 ;; Defined at:
  5725 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  ff1             4   14[COMRAM] unsigned char 
  5728 ;;  ff2             4   18[COMRAM] unsigned char 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;		None               void
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5740 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;Total ram usage:       12 bytes
  5745 ;; Hardware stack levels used: 1
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_colourcards_readRGBC
  5750 ;;		_left
  5751 ;;		_colourcards_testingRGBC
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text29
  5756  002F38                     __ptext29:
  5757                           	callstack 0
  5758  002F38                     ___flge:
  5759                           	callstack 27
  5760  002F38  0E00               	movlw	0
  5761  002F3A  140F               	andwf	___flge@ff1^0,w,c
  5762  002F3C  6E17               	movwf	??___flge^0,c
  5763  002F3E  0E00               	movlw	0
  5764  002F40  1410               	andwf	(___flge@ff1+1)^0,w,c
  5765  002F42  6E18               	movwf	(??___flge+1)^0,c
  5766  002F44  0E80               	movlw	128
  5767  002F46  1411               	andwf	(___flge@ff1+2)^0,w,c
  5768  002F48  6E19               	movwf	(??___flge+2)^0,c
  5769  002F4A  0E7F               	movlw	127
  5770  002F4C  1412               	andwf	(___flge@ff1+3)^0,w,c
  5771  002F4E  6E1A               	movwf	(??___flge+3)^0,c
  5772  002F50  5017               	movf	??___flge^0,w,c
  5773  002F52  1018               	iorwf	(??___flge+1)^0,w,c
  5774  002F54  1019               	iorwf	(??___flge+2)^0,w,c
  5775  002F56  101A               	iorwf	(??___flge+3)^0,w,c
  5776  002F58  A4D8               	btfss	status,2,c
  5777  002F5A  EFB1  F017         	goto	u3141
  5778  002F5E  EFB3  F017         	goto	u3140
  5779  002F62                     u3141:
  5780  002F62  EFBB  F017         	goto	l3285
  5781  002F66                     u3140:
  5782  002F66  0E00               	movlw	0
  5783  002F68  6E0F               	movwf	___flge@ff1^0,c
  5784  002F6A  0E00               	movlw	0
  5785  002F6C  6E10               	movwf	(___flge@ff1+1)^0,c
  5786  002F6E  0E00               	movlw	0
  5787  002F70  6E11               	movwf	(___flge@ff1+2)^0,c
  5788  002F72  0E00               	movlw	0
  5789  002F74  6E12               	movwf	(___flge@ff1+3)^0,c
  5790  002F76                     l3285:
  5791  002F76  0E00               	movlw	0
  5792  002F78  1413               	andwf	___flge@ff2^0,w,c
  5793  002F7A  6E17               	movwf	??___flge^0,c
  5794  002F7C  0E00               	movlw	0
  5795  002F7E  1414               	andwf	(___flge@ff2+1)^0,w,c
  5796  002F80  6E18               	movwf	(??___flge+1)^0,c
  5797  002F82  0E80               	movlw	128
  5798  002F84  1415               	andwf	(___flge@ff2+2)^0,w,c
  5799  002F86  6E19               	movwf	(??___flge+2)^0,c
  5800  002F88  0E7F               	movlw	127
  5801  002F8A  1416               	andwf	(___flge@ff2+3)^0,w,c
  5802  002F8C  6E1A               	movwf	(??___flge+3)^0,c
  5803  002F8E  5017               	movf	??___flge^0,w,c
  5804  002F90  1018               	iorwf	(??___flge+1)^0,w,c
  5805  002F92  1019               	iorwf	(??___flge+2)^0,w,c
  5806  002F94  101A               	iorwf	(??___flge+3)^0,w,c
  5807  002F96  A4D8               	btfss	status,2,c
  5808  002F98  EFD0  F017         	goto	u3151
  5809  002F9C  EFD2  F017         	goto	u3150
  5810  002FA0                     u3151:
  5811  002FA0  EFDA  F017         	goto	l3289
  5812  002FA4                     u3150:
  5813  002FA4  0E00               	movlw	0
  5814  002FA6  6E13               	movwf	___flge@ff2^0,c
  5815  002FA8  0E00               	movlw	0
  5816  002FAA  6E14               	movwf	(___flge@ff2+1)^0,c
  5817  002FAC  0E00               	movlw	0
  5818  002FAE  6E15               	movwf	(___flge@ff2+2)^0,c
  5819  002FB0  0E00               	movlw	0
  5820  002FB2  6E16               	movwf	(___flge@ff2+3)^0,c
  5821  002FB4                     l3289:
  5822  002FB4  AE12               	btfss	(___flge@ff1+3)^0,7,c
  5823  002FB6  EFDF  F017         	goto	u3161
  5824  002FBA  EFE1  F017         	goto	u3160
  5825  002FBE                     u3161:
  5826  002FBE  EFEA  F017         	goto	l3293
  5827  002FC2                     u3160:
  5828  002FC2  6C0F               	negf	___flge@ff1^0,c
  5829  002FC4  1E10               	comf	(___flge@ff1+1)^0,f,c
  5830  002FC6  B0D8               	btfsc	status,0,c
  5831  002FC8  2A10               	incf	(___flge@ff1+1)^0,f,c
  5832  002FCA  1E11               	comf	(___flge@ff1+2)^0,f,c
  5833  002FCC  B0D8               	btfsc	status,0,c
  5834  002FCE  2A11               	incf	(___flge@ff1+2)^0,f,c
  5835  002FD0  0E80               	movlw	128
  5836  002FD2  5612               	subfwb	(___flge@ff1+3)^0,f,c
  5837  002FD4                     l3293:
  5838  002FD4  AE16               	btfss	(___flge@ff2+3)^0,7,c
  5839  002FD6  EFEF  F017         	goto	u3171
  5840  002FDA  EFF1  F017         	goto	u3170
  5841  002FDE                     u3171:
  5842  002FDE  EFFA  F017         	goto	l982
  5843  002FE2                     u3170:
  5844  002FE2  6C13               	negf	___flge@ff2^0,c
  5845  002FE4  1E14               	comf	(___flge@ff2+1)^0,f,c
  5846  002FE6  B0D8               	btfsc	status,0,c
  5847  002FE8  2A14               	incf	(___flge@ff2+1)^0,f,c
  5848  002FEA  1E15               	comf	(___flge@ff2+2)^0,f,c
  5849  002FEC  B0D8               	btfsc	status,0,c
  5850  002FEE  2A15               	incf	(___flge@ff2+2)^0,f,c
  5851  002FF0  0E80               	movlw	128
  5852  002FF2  5616               	subfwb	(___flge@ff2+3)^0,f,c
  5853  002FF4                     l982:
  5854  002FF4  0E00               	movlw	0
  5855  002FF6  1A0F               	xorwf	___flge@ff1^0,f,c
  5856  002FF8  0E00               	movlw	0
  5857  002FFA  1A10               	xorwf	(___flge@ff1+1)^0,f,c
  5858  002FFC  0E00               	movlw	0
  5859  002FFE  1A11               	xorwf	(___flge@ff1+2)^0,f,c
  5860  003000  0E80               	movlw	128
  5861  003002  1A12               	xorwf	(___flge@ff1+3)^0,f,c
  5862  003004  0E00               	movlw	0
  5863  003006  1A13               	xorwf	___flge@ff2^0,f,c
  5864  003008  0E00               	movlw	0
  5865  00300A  1A14               	xorwf	(___flge@ff2+1)^0,f,c
  5866  00300C  0E00               	movlw	0
  5867  00300E  1A15               	xorwf	(___flge@ff2+2)^0,f,c
  5868  003010  0E80               	movlw	128
  5869  003012  1A16               	xorwf	(___flge@ff2+3)^0,f,c
  5870  003014  5013               	movf	___flge@ff2^0,w,c
  5871  003016  5C0F               	subwf	___flge@ff1^0,w,c
  5872  003018  5014               	movf	(___flge@ff2+1)^0,w,c
  5873  00301A  5810               	subwfb	(___flge@ff1+1)^0,w,c
  5874  00301C  5015               	movf	(___flge@ff2+2)^0,w,c
  5875  00301E  5811               	subwfb	(___flge@ff1+2)^0,w,c
  5876  003020  5016               	movf	(___flge@ff2+3)^0,w,c
  5877  003022  5812               	subwfb	(___flge@ff1+3)^0,w,c
  5878  003024  B0D8               	btfsc	status,0,c
  5879  003026  EF17  F018         	goto	u3181
  5880  00302A  EF19  F018         	goto	u3180
  5881  00302E                     u3181:
  5882  00302E  EF1C  F018         	goto	l3299
  5883  003032                     u3180:
  5884  003032  90D8               	bcf	status,0,c
  5885  003034  EF1D  F018         	goto	l987
  5886  003038                     l3299:
  5887  003038  80D8               	bsf	status,0,c
  5888  00303A                     l987:
  5889  00303A  0012               	return		;funcret
  5890  00303C                     __end_of___flge:
  5891                           	callstack 0
  5892                           
  5893 ;; *************** function ___fladd *****************
  5894 ;; Defined at:
  5895 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  b               4   39[COMRAM] unsigned char 
  5898 ;;  a               4   43[COMRAM] unsigned char 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  grs             1   54[COMRAM] unsigned char 
  5901 ;;  bexp            1   53[COMRAM] unsigned char 
  5902 ;;  aexp            1   52[COMRAM] unsigned char 
  5903 ;;  signs           1   51[COMRAM] unsigned char 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  4   39[COMRAM] unsigned char 
  5906 ;; Registers used:
  5907 ;;		wreg, status,2, status,0
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5913 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5916 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5917 ;;Total ram usage:       16 bytes
  5918 ;; Hardware stack levels used: 1
  5919 ;; This function calls:
  5920 ;;		Nothing
  5921 ;; This function is called by:
  5922 ;;		_left
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text30
  5927  0017D0                     __ptext30:
  5928                           	callstack 0
  5929  0017D0                     ___fladd:
  5930                           	callstack 27
  5931  0017D0  502B               	movf	(___fladd@b+3)^0,w,c
  5932  0017D2  0B80               	andlw	128
  5933  0017D4  6E34               	movwf	___fladd@signs^0,c
  5934  0017D6  502B               	movf	(___fladd@b+3)^0,w,c
  5935  0017D8  242B               	addwf	(___fladd@b+3)^0,w,c
  5936  0017DA  6E36               	movwf	___fladd@bexp^0,c
  5937  0017DC  AE2A               	btfss	(___fladd@b+2)^0,7,c
  5938  0017DE  EFF3  F00B         	goto	u2561
  5939  0017E2  EFF5  F00B         	goto	u2560
  5940  0017E6                     u2561:
  5941  0017E6  EFF6  F00B         	goto	l2955
  5942  0017EA                     u2560:
  5943  0017EA  8036               	bsf	___fladd@bexp^0,0,c
  5944  0017EC                     l2955:
  5945  0017EC  5036               	movf	___fladd@bexp^0,w,c
  5946  0017EE  B4D8               	btfsc	status,2,c
  5947  0017F0  EFFC  F00B         	goto	u2571
  5948  0017F4  EFFE  F00B         	goto	u2570
  5949  0017F8                     u2571:
  5950  0017F8  EF13  F00C         	goto	l2965
  5951  0017FC                     u2570:
  5952  0017FC  2836               	incf	___fladd@bexp^0,w,c
  5953  0017FE  A4D8               	btfss	status,2,c
  5954  001800  EF04  F00C         	goto	u2581
  5955  001804  EF06  F00C         	goto	u2580
  5956  001808                     u2581:
  5957  001808  EF0E  F00C         	goto	l2961
  5958  00180C                     u2580:
  5959  00180C  0E00               	movlw	0
  5960  00180E  6E28               	movwf	___fladd@b^0,c
  5961  001810  0E00               	movlw	0
  5962  001812  6E29               	movwf	(___fladd@b+1)^0,c
  5963  001814  0E00               	movlw	0
  5964  001816  6E2A               	movwf	(___fladd@b+2)^0,c
  5965  001818  0E00               	movlw	0
  5966  00181A  6E2B               	movwf	(___fladd@b+3)^0,c
  5967  00181C                     l2961:
  5968  00181C  8E2A               	bsf	(___fladd@b+2)^0,7,c
  5969  00181E  0E00               	movlw	0
  5970  001820  6E2B               	movwf	(___fladd@b+3)^0,c
  5971  001822  EF1B  F00C         	goto	l2967
  5972  001826                     l2965:
  5973  001826  0E00               	movlw	0
  5974  001828  6E28               	movwf	___fladd@b^0,c
  5975  00182A  0E00               	movlw	0
  5976  00182C  6E29               	movwf	(___fladd@b+1)^0,c
  5977  00182E  0E00               	movlw	0
  5978  001830  6E2A               	movwf	(___fladd@b+2)^0,c
  5979  001832  0E00               	movlw	0
  5980  001834  6E2B               	movwf	(___fladd@b+3)^0,c
  5981  001836                     l2967:
  5982  001836  502F               	movf	(___fladd@a+3)^0,w,c
  5983  001838  0B80               	andlw	128
  5984  00183A  6E35               	movwf	___fladd@aexp^0,c
  5985  00183C  5034               	movf	___fladd@signs^0,w,c
  5986  00183E  1835               	xorwf	___fladd@aexp^0,w,c
  5987  001840  B4D8               	btfsc	status,2,c
  5988  001842  EF25  F00C         	goto	u2591
  5989  001846  EF27  F00C         	goto	u2590
  5990  00184A                     u2591:
  5991  00184A  EF28  F00C         	goto	l2973
  5992  00184E                     u2590:
  5993  00184E  8C34               	bsf	___fladd@signs^0,6,c
  5994  001850                     l2973:
  5995  001850  502F               	movf	(___fladd@a+3)^0,w,c
  5996  001852  242F               	addwf	(___fladd@a+3)^0,w,c
  5997  001854  6E35               	movwf	___fladd@aexp^0,c
  5998  001856  AE2E               	btfss	(___fladd@a+2)^0,7,c
  5999  001858  EF30  F00C         	goto	u2601
  6000  00185C  EF32  F00C         	goto	u2600
  6001  001860                     u2601:
  6002  001860  EF33  F00C         	goto	l2979
  6003  001864                     u2600:
  6004  001864  8035               	bsf	___fladd@aexp^0,0,c
  6005  001866                     l2979:
  6006  001866  5035               	movf	___fladd@aexp^0,w,c
  6007  001868  B4D8               	btfsc	status,2,c
  6008  00186A  EF39  F00C         	goto	u2611
  6009  00186E  EF3B  F00C         	goto	u2610
  6010  001872                     u2611:
  6011  001872  EF50  F00C         	goto	l2989
  6012  001876                     u2610:
  6013  001876  2835               	incf	___fladd@aexp^0,w,c
  6014  001878  A4D8               	btfss	status,2,c
  6015  00187A  EF41  F00C         	goto	u2621
  6016  00187E  EF43  F00C         	goto	u2620
  6017  001882                     u2621:
  6018  001882  EF4B  F00C         	goto	l2985
  6019  001886                     u2620:
  6020  001886  0E00               	movlw	0
  6021  001888  6E2C               	movwf	___fladd@a^0,c
  6022  00188A  0E00               	movlw	0
  6023  00188C  6E2D               	movwf	(___fladd@a+1)^0,c
  6024  00188E  0E00               	movlw	0
  6025  001890  6E2E               	movwf	(___fladd@a+2)^0,c
  6026  001892  0E00               	movlw	0
  6027  001894  6E2F               	movwf	(___fladd@a+3)^0,c
  6028  001896                     l2985:
  6029  001896  8E2E               	bsf	(___fladd@a+2)^0,7,c
  6030  001898  0E00               	movlw	0
  6031  00189A  6E2F               	movwf	(___fladd@a+3)^0,c
  6032  00189C  EF58  F00C         	goto	l2991
  6033  0018A0                     l2989:
  6034  0018A0  0E00               	movlw	0
  6035  0018A2  6E2C               	movwf	___fladd@a^0,c
  6036  0018A4  0E00               	movlw	0
  6037  0018A6  6E2D               	movwf	(___fladd@a+1)^0,c
  6038  0018A8  0E00               	movlw	0
  6039  0018AA  6E2E               	movwf	(___fladd@a+2)^0,c
  6040  0018AC  0E00               	movlw	0
  6041  0018AE  6E2F               	movwf	(___fladd@a+3)^0,c
  6042  0018B0                     l2991:
  6043  0018B0  5036               	movf	___fladd@bexp^0,w,c
  6044  0018B2  5C35               	subwf	___fladd@aexp^0,w,c
  6045  0018B4  B0D8               	btfsc	status,0,c
  6046  0018B6  EF5F  F00C         	goto	u2631
  6047  0018BA  EF61  F00C         	goto	u2630
  6048  0018BE                     u2631:
  6049  0018BE  EF88  F00C         	goto	l3027
  6050  0018C2                     u2630:
  6051  0018C2  AC34               	btfss	___fladd@signs^0,6,c
  6052  0018C4  EF66  F00C         	goto	u2641
  6053  0018C8  EF68  F00C         	goto	u2640
  6054  0018CC                     u2641:
  6055  0018CC  EF6A  F00C         	goto	l2997
  6056  0018D0                     u2640:
  6057  0018D0  0E80               	movlw	128
  6058  0018D2  1A34               	xorwf	___fladd@signs^0,f,c
  6059  0018D4                     l2997:
  6060  0018D4  C036  F037         	movff	___fladd@bexp,___fladd@grs
  6061  0018D8  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  6062  0018DC  C037  F035         	movff	___fladd@grs,___fladd@aexp
  6063  0018E0  C028  F037         	movff	___fladd@b,___fladd@grs
  6064  0018E4  C02C  F028         	movff	___fladd@a,___fladd@b
  6065  0018E8  C037  F02C         	movff	___fladd@grs,___fladd@a
  6066  0018EC  C029  F037         	movff	___fladd@b+1,___fladd@grs
  6067  0018F0  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  6068  0018F4  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  6069  0018F8  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  6070  0018FC  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  6071  001900  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  6072  001904  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  6073  001908  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  6074  00190C  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  6075  001910                     l3027:
  6076  001910  0E00               	movlw	0
  6077  001912  6E37               	movwf	___fladd@grs^0,c
  6078  001914  5036               	movf	___fladd@bexp^0,w,c
  6079  001916  C035  F030         	movff	___fladd@aexp,??___fladd
  6080  00191A  6A31               	clrf	(??___fladd+1)^0,c
  6081  00191C  5E30               	subwf	??___fladd^0,f,c
  6082  00191E  0E00               	movlw	0
  6083  001920  5A31               	subwfb	(??___fladd+1)^0,f,c
  6084  001922  BE31               	btfsc	(??___fladd+1)^0,7,c
  6085  001924  EF9D  F00C         	goto	u2651
  6086  001928  5031               	movf	(??___fladd+1)^0,w,c
  6087  00192A  E109               	bnz	u2650
  6088  00192C  0E1A               	movlw	26
  6089  00192E  5C30               	subwf	??___fladd^0,w,c
  6090  001930  A0D8               	btfss	status,0,c
  6091  001932  EF9D  F00C         	goto	u2651
  6092  001936  EF9F  F00C         	goto	u2650
  6093  00193A                     u2651:
  6094  00193A  EFD6  F00C         	goto	l1246
  6095  00193E                     u2650:
  6096  00193E  5028               	movf	___fladd@b^0,w,c
  6097  001940  1029               	iorwf	(___fladd@b+1)^0,w,c
  6098  001942  102A               	iorwf	(___fladd@b+2)^0,w,c
  6099  001944  102B               	iorwf	(___fladd@b+3)^0,w,c
  6100  001946  A4D8               	btfss	status,2,c
  6101  001948  EFA8  F00C         	goto	u2661
  6102  00194C  EFAB  F00C         	goto	u2660
  6103  001950                     u2661:
  6104  001950  0E01               	movlw	1
  6105  001952  EFAC  F00C         	goto	u2670
  6106  001956                     u2660:
  6107  001956  0E00               	movlw	0
  6108  001958                     u2670:
  6109  001958  6E37               	movwf	___fladd@grs^0,c
  6110  00195A  0E00               	movlw	0
  6111  00195C  6E28               	movwf	___fladd@b^0,c
  6112  00195E  0E00               	movlw	0
  6113  001960  6E29               	movwf	(___fladd@b+1)^0,c
  6114  001962  0E00               	movlw	0
  6115  001964  6E2A               	movwf	(___fladd@b+2)^0,c
  6116  001966  0E00               	movlw	0
  6117  001968  6E2B               	movwf	(___fladd@b+3)^0,c
  6118  00196A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  6119  00196E  EFDF  F00C         	goto	l1245
  6120  001972                     l1247:
  6121  001972  A037               	btfss	___fladd@grs^0,0,c
  6122  001974  EFBE  F00C         	goto	u2681
  6123  001978  EFC0  F00C         	goto	u2680
  6124  00197C                     u2681:
  6125  00197C  EFC6  F00C         	goto	l3039
  6126  001980                     u2680:
  6127  001980  90D8               	bcf	status,0,c
  6128  001982  3037               	rrcf	___fladd@grs^0,w,c
  6129  001984  0901               	iorlw	1
  6130  001986  6E37               	movwf	___fladd@grs^0,c
  6131  001988  EFC8  F00C         	goto	l3041
  6132  00198C                     l3039:
  6133  00198C  90D8               	bcf	status,0,c
  6134  00198E  3237               	rrcf	___fladd@grs^0,f,c
  6135  001990                     l3041:
  6136  001990  A028               	btfss	___fladd@b^0,0,c
  6137  001992  EFCD  F00C         	goto	u2691
  6138  001996  EFCF  F00C         	goto	u2690
  6139  00199A                     u2691:
  6140  00199A  EFD0  F00C         	goto	l3045
  6141  00199E                     u2690:
  6142  00199E  8E37               	bsf	___fladd@grs^0,7,c
  6143  0019A0                     l3045:
  6144  0019A0  342B               	rlcf	(___fladd@b+3)^0,w,c
  6145  0019A2  322B               	rrcf	(___fladd@b+3)^0,f,c
  6146  0019A4  322A               	rrcf	(___fladd@b+2)^0,f,c
  6147  0019A6  3229               	rrcf	(___fladd@b+1)^0,f,c
  6148  0019A8  3228               	rrcf	___fladd@b^0,f,c
  6149  0019AA  2A36               	incf	___fladd@bexp^0,f,c
  6150  0019AC                     l1246:
  6151  0019AC  5035               	movf	___fladd@aexp^0,w,c
  6152  0019AE  5C36               	subwf	___fladd@bexp^0,w,c
  6153  0019B0  A0D8               	btfss	status,0,c
  6154  0019B2  EFDD  F00C         	goto	u2701
  6155  0019B6  EFDF  F00C         	goto	u2700
  6156  0019BA                     u2701:
  6157  0019BA  EFB9  F00C         	goto	l1247
  6158  0019BE                     u2700:
  6159  0019BE                     l1245:
  6160  0019BE  BC34               	btfsc	___fladd@signs^0,6,c
  6161  0019C0  EFE4  F00C         	goto	u2711
  6162  0019C4  EFE6  F00C         	goto	u2710
  6163  0019C8                     u2711:
  6164  0019C8  EF26  F00D         	goto	l3073
  6165  0019CC                     u2710:
  6166  0019CC  5036               	movf	___fladd@bexp^0,w,c
  6167  0019CE  A4D8               	btfss	status,2,c
  6168  0019D0  EFEC  F00C         	goto	u2721
  6169  0019D4  EFEE  F00C         	goto	u2720
  6170  0019D8                     u2721:
  6171  0019D8  EFF8  F00C         	goto	l3055
  6172  0019DC                     u2720:
  6173  0019DC  0E00               	movlw	0
  6174  0019DE  6E28               	movwf	?___fladd^0,c
  6175  0019E0  0E00               	movlw	0
  6176  0019E2  6E29               	movwf	(?___fladd+1)^0,c
  6177  0019E4  0E00               	movlw	0
  6178  0019E6  6E2A               	movwf	(?___fladd+2)^0,c
  6179  0019E8  0E00               	movlw	0
  6180  0019EA  6E2B               	movwf	(?___fladd+3)^0,c
  6181  0019EC  EF47  F00E         	goto	l1254
  6182  0019F0                     l3055:
  6183  0019F0  502C               	movf	___fladd@a^0,w,c
  6184  0019F2  2628               	addwf	___fladd@b^0,f,c
  6185  0019F4  502D               	movf	(___fladd@a+1)^0,w,c
  6186  0019F6  2229               	addwfc	(___fladd@b+1)^0,f,c
  6187  0019F8  502E               	movf	(___fladd@a+2)^0,w,c
  6188  0019FA  222A               	addwfc	(___fladd@b+2)^0,f,c
  6189  0019FC  502F               	movf	(___fladd@a+3)^0,w,c
  6190  0019FE  222B               	addwfc	(___fladd@b+3)^0,f,c
  6191  001A00  A02B               	btfss	(___fladd@b+3)^0,0,c
  6192  001A02  EF05  F00D         	goto	u2731
  6193  001A06  EF07  F00D         	goto	u2730
  6194  001A0A                     u2731:
  6195  001A0A  EFB3  F00D         	goto	l3109
  6196  001A0E                     u2730:
  6197  001A0E  A037               	btfss	___fladd@grs^0,0,c
  6198  001A10  EF0C  F00D         	goto	u2741
  6199  001A14  EF0E  F00D         	goto	u2740
  6200  001A18                     u2741:
  6201  001A18  EF14  F00D         	goto	l3063
  6202  001A1C                     u2740:
  6203  001A1C  90D8               	bcf	status,0,c
  6204  001A1E  3037               	rrcf	___fladd@grs^0,w,c
  6205  001A20  0901               	iorlw	1
  6206  001A22  6E37               	movwf	___fladd@grs^0,c
  6207  001A24  EF16  F00D         	goto	l3065
  6208  001A28                     l3063:
  6209  001A28  90D8               	bcf	status,0,c
  6210  001A2A  3237               	rrcf	___fladd@grs^0,f,c
  6211  001A2C                     l3065:
  6212  001A2C  A028               	btfss	___fladd@b^0,0,c
  6213  001A2E  EF1B  F00D         	goto	u2751
  6214  001A32  EF1D  F00D         	goto	u2750
  6215  001A36                     u2751:
  6216  001A36  EF1E  F00D         	goto	l3069
  6217  001A3A                     u2750:
  6218  001A3A  8E37               	bsf	___fladd@grs^0,7,c
  6219  001A3C                     l3069:
  6220  001A3C  342B               	rlcf	(___fladd@b+3)^0,w,c
  6221  001A3E  322B               	rrcf	(___fladd@b+3)^0,f,c
  6222  001A40  322A               	rrcf	(___fladd@b+2)^0,f,c
  6223  001A42  3229               	rrcf	(___fladd@b+1)^0,f,c
  6224  001A44  3228               	rrcf	___fladd@b^0,f,c
  6225  001A46  2A36               	incf	___fladd@bexp^0,f,c
  6226  001A48  EFB3  F00D         	goto	l3109
  6227  001A4C                     l3073:
  6228  001A4C  502C               	movf	___fladd@a^0,w,c
  6229  001A4E  5C28               	subwf	___fladd@b^0,w,c
  6230  001A50  502D               	movf	(___fladd@a+1)^0,w,c
  6231  001A52  5829               	subwfb	(___fladd@b+1)^0,w,c
  6232  001A54  502E               	movf	(___fladd@a+2)^0,w,c
  6233  001A56  582A               	subwfb	(___fladd@b+2)^0,w,c
  6234  001A58  502B               	movf	(___fladd@b+3)^0,w,c
  6235  001A5A  0A80               	xorlw	128
  6236  001A5C  6E30               	movwf	??___fladd^0,c
  6237  001A5E  502F               	movf	(___fladd@a+3)^0,w,c
  6238  001A60  0A80               	xorlw	128
  6239  001A62  5830               	subwfb	??___fladd^0,w,c
  6240  001A64  B0D8               	btfsc	status,0,c
  6241  001A66  EF37  F00D         	goto	u2761
  6242  001A6A  EF39  F00D         	goto	u2760
  6243  001A6E                     u2761:
  6244  001A6E  EF64  F00D         	goto	l3083
  6245  001A72                     u2760:
  6246  001A72  5028               	movf	___fladd@b^0,w,c
  6247  001A74  5C2C               	subwf	___fladd@a^0,w,c
  6248  001A76  6E30               	movwf	??___fladd^0,c
  6249  001A78  5029               	movf	(___fladd@b+1)^0,w,c
  6250  001A7A  582D               	subwfb	(___fladd@a+1)^0,w,c
  6251  001A7C  6E31               	movwf	(??___fladd+1)^0,c
  6252  001A7E  502A               	movf	(___fladd@b+2)^0,w,c
  6253  001A80  582E               	subwfb	(___fladd@a+2)^0,w,c
  6254  001A82  6E32               	movwf	(??___fladd+2)^0,c
  6255  001A84  502B               	movf	(___fladd@b+3)^0,w,c
  6256  001A86  582F               	subwfb	(___fladd@a+3)^0,w,c
  6257  001A88  6E33               	movwf	(??___fladd+3)^0,c
  6258  001A8A  0EFF               	movlw	255
  6259  001A8C  2430               	addwf	??___fladd^0,w,c
  6260  001A8E  6E28               	movwf	___fladd@b^0,c
  6261  001A90  0EFF               	movlw	255
  6262  001A92  2031               	addwfc	(??___fladd+1)^0,w,c
  6263  001A94  6E29               	movwf	(___fladd@b+1)^0,c
  6264  001A96  0EFF               	movlw	255
  6265  001A98  2032               	addwfc	(??___fladd+2)^0,w,c
  6266  001A9A  6E2A               	movwf	(___fladd@b+2)^0,c
  6267  001A9C  0EFF               	movlw	255
  6268  001A9E  2033               	addwfc	(??___fladd+3)^0,w,c
  6269  001AA0  6E2B               	movwf	(___fladd@b+3)^0,c
  6270  001AA2  0E80               	movlw	128
  6271  001AA4  1A34               	xorwf	___fladd@signs^0,f,c
  6272  001AA6  6C37               	negf	___fladd@grs^0,c
  6273  001AA8  5037               	movf	___fladd@grs^0,w,c
  6274  001AAA  A4D8               	btfss	status,2,c
  6275  001AAC  EF5A  F00D         	goto	u2771
  6276  001AB0  EF5C  F00D         	goto	u2770
  6277  001AB4                     u2771:
  6278  001AB4  EF6C  F00D         	goto	l1262
  6279  001AB8                     u2770:
  6280  001AB8  0E01               	movlw	1
  6281  001ABA  2628               	addwf	___fladd@b^0,f,c
  6282  001ABC  0E00               	movlw	0
  6283  001ABE  2229               	addwfc	(___fladd@b+1)^0,f,c
  6284  001AC0  222A               	addwfc	(___fladd@b+2)^0,f,c
  6285  001AC2  222B               	addwfc	(___fladd@b+3)^0,f,c
  6286  001AC4  EF6C  F00D         	goto	l1262
  6287  001AC8                     l3083:
  6288  001AC8  502C               	movf	___fladd@a^0,w,c
  6289  001ACA  5E28               	subwf	___fladd@b^0,f,c
  6290  001ACC  502D               	movf	(___fladd@a+1)^0,w,c
  6291  001ACE  5A29               	subwfb	(___fladd@b+1)^0,f,c
  6292  001AD0  502E               	movf	(___fladd@a+2)^0,w,c
  6293  001AD2  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  6294  001AD4  502F               	movf	(___fladd@a+3)^0,w,c
  6295  001AD6  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  6296  001AD8                     l1262:
  6297  001AD8  5028               	movf	___fladd@b^0,w,c
  6298  001ADA  1029               	iorwf	(___fladd@b+1)^0,w,c
  6299  001ADC  102A               	iorwf	(___fladd@b+2)^0,w,c
  6300  001ADE  102B               	iorwf	(___fladd@b+3)^0,w,c
  6301  001AE0  A4D8               	btfss	status,2,c
  6302  001AE2  EF75  F00D         	goto	u2781
  6303  001AE6  EF77  F00D         	goto	u2780
  6304  001AEA                     u2781:
  6305  001AEA  EFAC  F00D         	goto	l3107
  6306  001AEE                     u2780:
  6307  001AEE  5037               	movf	___fladd@grs^0,w,c
  6308  001AF0  A4D8               	btfss	status,2,c
  6309  001AF2  EF7D  F00D         	goto	u2791
  6310  001AF6  EF7F  F00D         	goto	u2790
  6311  001AFA                     u2791:
  6312  001AFA  EFAC  F00D         	goto	l3107
  6313  001AFE                     u2790:
  6314  001AFE  0E00               	movlw	0
  6315  001B00  6E28               	movwf	?___fladd^0,c
  6316  001B02  0E00               	movlw	0
  6317  001B04  6E29               	movwf	(?___fladd+1)^0,c
  6318  001B06  0E00               	movlw	0
  6319  001B08  6E2A               	movwf	(?___fladd+2)^0,c
  6320  001B0A  0E00               	movlw	0
  6321  001B0C  6E2B               	movwf	(?___fladd+3)^0,c
  6322  001B0E  EF47  F00E         	goto	l1254
  6323  001B12                     l3091:
  6324  001B12  90D8               	bcf	status,0,c
  6325  001B14  3628               	rlcf	___fladd@b^0,f,c
  6326  001B16  3629               	rlcf	(___fladd@b+1)^0,f,c
  6327  001B18  362A               	rlcf	(___fladd@b+2)^0,f,c
  6328  001B1A  362B               	rlcf	(___fladd@b+3)^0,f,c
  6329  001B1C  AE37               	btfss	___fladd@grs^0,7,c
  6330  001B1E  EF93  F00D         	goto	u2801
  6331  001B22  EF95  F00D         	goto	u2800
  6332  001B26                     u2801:
  6333  001B26  EF96  F00D         	goto	l3097
  6334  001B2A                     u2800:
  6335  001B2A  8028               	bsf	___fladd@b^0,0,c
  6336  001B2C                     l3097:
  6337  001B2C  A037               	btfss	___fladd@grs^0,0,c
  6338  001B2E  EF9B  F00D         	goto	u2811
  6339  001B32  EF9D  F00D         	goto	u2810
  6340  001B36                     u2811:
  6341  001B36  EFA1  F00D         	goto	l3101
  6342  001B3A                     u2810:
  6343  001B3A  80D8               	bsf	status,0,c
  6344  001B3C  3637               	rlcf	___fladd@grs^0,f,c
  6345  001B3E  EFA3  F00D         	goto	l3103
  6346  001B42                     l3101:
  6347  001B42  90D8               	bcf	status,0,c
  6348  001B44  3637               	rlcf	___fladd@grs^0,f,c
  6349  001B46                     l3103:
  6350  001B46  5036               	movf	___fladd@bexp^0,w,c
  6351  001B48  B4D8               	btfsc	status,2,c
  6352  001B4A  EFA9  F00D         	goto	u2821
  6353  001B4E  EFAB  F00D         	goto	u2820
  6354  001B52                     u2821:
  6355  001B52  EFAC  F00D         	goto	l3107
  6356  001B56                     u2820:
  6357  001B56  0636               	decf	___fladd@bexp^0,f,c
  6358  001B58                     l3107:
  6359  001B58  AE2A               	btfss	(___fladd@b+2)^0,7,c
  6360  001B5A  EFB1  F00D         	goto	u2831
  6361  001B5E  EFB3  F00D         	goto	u2830
  6362  001B62                     u2831:
  6363  001B62  EF89  F00D         	goto	l3091
  6364  001B66                     u2830:
  6365  001B66                     l3109:
  6366  001B66  0E00               	movlw	0
  6367  001B68  6E35               	movwf	___fladd@aexp^0,c
  6368  001B6A  AE37               	btfss	___fladd@grs^0,7,c
  6369  001B6C  EFBA  F00D         	goto	u2841
  6370  001B70  EFBC  F00D         	goto	u2840
  6371  001B74                     u2841:
  6372  001B74  EFD4  F00D         	goto	l1271
  6373  001B78                     u2840:
  6374  001B78  C037  F030         	movff	___fladd@grs,??___fladd
  6375  001B7C  0E7F               	movlw	127
  6376  001B7E  1630               	andwf	??___fladd^0,f,c
  6377  001B80  B4D8               	btfsc	status,2,c
  6378  001B82  EFC5  F00D         	goto	u2851
  6379  001B86  EFC7  F00D         	goto	u2850
  6380  001B8A                     u2851:
  6381  001B8A  EFCB  F00D         	goto	l1272
  6382  001B8E                     u2850:
  6383  001B8E                     l3115:
  6384  001B8E  0E01               	movlw	1
  6385  001B90  6E35               	movwf	___fladd@aexp^0,c
  6386  001B92  EFD4  F00D         	goto	l1271
  6387  001B96                     l1272:
  6388  001B96  A028               	btfss	___fladd@b^0,0,c
  6389  001B98  EFD0  F00D         	goto	u2861
  6390  001B9C  EFD2  F00D         	goto	u2860
  6391  001BA0                     u2861:
  6392  001BA0  EFD4  F00D         	goto	l1271
  6393  001BA4                     u2860:
  6394  001BA4  EFC7  F00D         	goto	l3115
  6395  001BA8                     l1271:
  6396  001BA8  5035               	movf	___fladd@aexp^0,w,c
  6397  001BAA  B4D8               	btfsc	status,2,c
  6398  001BAC  EFDA  F00D         	goto	u2871
  6399  001BB0  EFDC  F00D         	goto	u2870
  6400  001BB4                     u2871:
  6401  001BB4  EF07  F00E         	goto	l3127
  6402  001BB8                     u2870:
  6403  001BB8  0E01               	movlw	1
  6404  001BBA  2628               	addwf	___fladd@b^0,f,c
  6405  001BBC  0E00               	movlw	0
  6406  001BBE  2229               	addwfc	(___fladd@b+1)^0,f,c
  6407  001BC0  222A               	addwfc	(___fladd@b+2)^0,f,c
  6408  001BC2  222B               	addwfc	(___fladd@b+3)^0,f,c
  6409  001BC4  A02B               	btfss	(___fladd@b+3)^0,0,c
  6410  001BC6  EFE7  F00D         	goto	u2881
  6411  001BCA  EFE9  F00D         	goto	u2880
  6412  001BCE                     u2881:
  6413  001BCE  EF07  F00E         	goto	l3127
  6414  001BD2                     u2880:
  6415  001BD2  C028  F030         	movff	___fladd@b,??___fladd
  6416  001BD6  C029  F031         	movff	___fladd@b+1,??___fladd+1
  6417  001BDA  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  6418  001BDE  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  6419  001BE2  3433               	rlcf	(??___fladd+3)^0,w,c
  6420  001BE4  3233               	rrcf	(??___fladd+3)^0,f,c
  6421  001BE6  3232               	rrcf	(??___fladd+2)^0,f,c
  6422  001BE8  3231               	rrcf	(??___fladd+1)^0,f,c
  6423  001BEA  3230               	rrcf	??___fladd^0,f,c
  6424  001BEC  C030  F028         	movff	??___fladd,___fladd@b
  6425  001BF0  C031  F029         	movff	??___fladd+1,___fladd@b+1
  6426  001BF4  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  6427  001BF8  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  6428  001BFC  2836               	incf	___fladd@bexp^0,w,c
  6429  001BFE  B4D8               	btfsc	status,2,c
  6430  001C00  EF04  F00E         	goto	u2891
  6431  001C04  EF06  F00E         	goto	u2890
  6432  001C08                     u2891:
  6433  001C08  EF07  F00E         	goto	l3127
  6434  001C0C                     u2890:
  6435  001C0C  2A36               	incf	___fladd@bexp^0,f,c
  6436  001C0E                     l3127:
  6437  001C0E  2836               	incf	___fladd@bexp^0,w,c
  6438  001C10  B4D8               	btfsc	status,2,c
  6439  001C12  EF0D  F00E         	goto	u2901
  6440  001C16  EF0F  F00E         	goto	u2900
  6441  001C1A                     u2901:
  6442  001C1A  EF17  F00E         	goto	l3131
  6443  001C1E                     u2900:
  6444  001C1E  5036               	movf	___fladd@bexp^0,w,c
  6445  001C20  A4D8               	btfss	status,2,c
  6446  001C22  EF15  F00E         	goto	u2911
  6447  001C26  EF17  F00E         	goto	u2910
  6448  001C2A                     u2911:
  6449  001C2A  EF29  F00E         	goto	l3135
  6450  001C2E                     u2910:
  6451  001C2E                     l3131:
  6452  001C2E  0E00               	movlw	0
  6453  001C30  6E28               	movwf	___fladd@b^0,c
  6454  001C32  0E00               	movlw	0
  6455  001C34  6E29               	movwf	(___fladd@b+1)^0,c
  6456  001C36  0E00               	movlw	0
  6457  001C38  6E2A               	movwf	(___fladd@b+2)^0,c
  6458  001C3A  0E00               	movlw	0
  6459  001C3C  6E2B               	movwf	(___fladd@b+3)^0,c
  6460  001C3E  5036               	movf	___fladd@bexp^0,w,c
  6461  001C40  A4D8               	btfss	status,2,c
  6462  001C42  EF25  F00E         	goto	u2921
  6463  001C46  EF27  F00E         	goto	u2920
  6464  001C4A                     u2921:
  6465  001C4A  EF29  F00E         	goto	l3135
  6466  001C4E                     u2920:
  6467  001C4E  0E00               	movlw	0
  6468  001C50  6E34               	movwf	___fladd@signs^0,c
  6469  001C52                     l3135:
  6470  001C52  A036               	btfss	___fladd@bexp^0,0,c
  6471  001C54  EF2E  F00E         	goto	u2931
  6472  001C58  EF30  F00E         	goto	u2930
  6473  001C5C                     u2931:
  6474  001C5C  EF33  F00E         	goto	l3139
  6475  001C60                     u2930:
  6476  001C60  8E2A               	bsf	(___fladd@b+2)^0,7,c
  6477  001C62  EF34  F00E         	goto	l3141
  6478  001C66                     l3139:
  6479  001C66  9E2A               	bcf	(___fladd@b+2)^0,7,c
  6480  001C68                     l3141:
  6481  001C68  90D8               	bcf	status,0,c
  6482  001C6A  3036               	rrcf	___fladd@bexp^0,w,c
  6483  001C6C  6E2B               	movwf	(___fladd@b+3)^0,c
  6484  001C6E  AE34               	btfss	___fladd@signs^0,7,c
  6485  001C70  EF3C  F00E         	goto	u2941
  6486  001C74  EF3E  F00E         	goto	u2940
  6487  001C78                     u2941:
  6488  001C78  EF3F  F00E         	goto	l3147
  6489  001C7C                     u2940:
  6490  001C7C  8E2B               	bsf	(___fladd@b+3)^0,7,c
  6491  001C7E                     l3147:
  6492  001C7E  C028  F028         	movff	___fladd@b,?___fladd
  6493  001C82  C029  F029         	movff	___fladd@b+1,?___fladd+1
  6494  001C86  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  6495  001C8A  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  6496  001C8E                     l1254:
  6497  001C8E  0012               	return		;funcret
  6498  001C90                     __end_of___fladd:
  6499                           	callstack 0
  6500                           
  6501 ;; *************** function _stop *****************
  6502 ;; Defined at:
  6503 ;;		line 129 in file "DC_motors.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  mL              2   25[COMRAM] PTR struct .
  6506 ;;		 -> main@motorL(9), 
  6507 ;;  mR              2   27[COMRAM] PTR struct .
  6508 ;;		 -> main@motorR(9), 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6524 ;;Total ram usage:        4 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 2
  6527 ;; This function calls:
  6528 ;;		_DCmotors_setPWM
  6529 ;; This function is called by:
  6530 ;;		_colourcards_readRGBC
  6531 ;;		_DCmotors_testing
  6532 ;;		_DCmotors_calibration
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text31
  6537  00321C                     __ptext31:
  6538                           	callstack 0
  6539  00321C                     _stop:
  6540                           	callstack 27
  6541  00321C                     
  6542                           ;DC_motors.c: 129: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 130: {;DC_motors.c
      +                          : 131:     LATDbits.LATD4 = 1;
  6543  00321C  887C               	bsf	124,4,c	;volatile
  6544                           
  6545                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
  6546  00321E  EF2D  F019         	goto	l3477
  6547  003222                     l3469:
  6548                           
  6549                           ;DC_motors.c: 135:         mL->power -= 10;
  6550  003222  C01A  FFD9         	movff	stop@mL,fsr2l
  6551  003226  C01B  FFDA         	movff	stop@mL+1,fsr2h
  6552  00322A  0E0A               	movlw	10
  6553  00322C  5EDF               	subwf	indf2,f,c
  6554                           
  6555                           ;DC_motors.c: 136:         mR->power -= 10;
  6556  00322E  C01C  FFD9         	movff	stop@mR,fsr2l
  6557  003232  C01D  FFDA         	movff	stop@mR+1,fsr2h
  6558  003236  0E0A               	movlw	10
  6559  003238  5EDF               	subwf	indf2,f,c
  6560  00323A                     
  6561                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
  6562  00323A  C01A  F00F         	movff	stop@mL,DCmotors_setPWM@m
  6563  00323E  C01B  F010         	movff	stop@mL+1,DCmotors_setPWM@m+1
  6564  003242  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  6565  003246                     
  6566                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
  6567  003246  C01C  F00F         	movff	stop@mR,DCmotors_setPWM@m
  6568  00324A  C01D  F010         	movff	stop@mR+1,DCmotors_setPWM@m+1
  6569  00324E  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  6570  003252                     
  6571                           ;DC_motors.c: 141:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6572  003252  0EA0               	movlw	160
  6573  003254                     u4977:
  6574  003254  D000               	nop2	
  6575  003256  2EE8               	decfsz	wreg,f,c
  6576  003258  D7FD               	bra	u4977
  6577  00325A                     l3477:
  6578                           
  6579                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
  6580  00325A  C01A  FFD9         	movff	stop@mL,fsr2l
  6581  00325E  C01B  FFDA         	movff	stop@mL+1,fsr2h
  6582  003262  50DF               	movf	indf2,w,c
  6583  003264  B4D8               	btfsc	status,2,c
  6584  003266  EF37  F019         	goto	u3491
  6585  00326A  EF39  F019         	goto	u3490
  6586  00326E                     u3491:
  6587  00326E  EF45  F019         	goto	l587
  6588  003272                     u3490:
  6589  003272  C01C  FFD9         	movff	stop@mR,fsr2l
  6590  003276  C01D  FFDA         	movff	stop@mR+1,fsr2h
  6591  00327A  50DF               	movf	indf2,w,c
  6592  00327C  A4D8               	btfss	status,2,c
  6593  00327E  EF43  F019         	goto	u3501
  6594  003282  EF45  F019         	goto	u3500
  6595  003286                     u3501:
  6596  003286  EF11  F019         	goto	l3469
  6597  00328A                     u3500:
  6598  00328A                     l587:
  6599                           
  6600                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
  6601  00328A  987C               	bcf	124,4,c	;volatile
  6602  00328C  0012               	return		;funcret
  6603  00328E                     __end_of_stop:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function _reverse *****************
  6607 ;; Defined at:
  6608 ;;		line 108 in file "DC_motors.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  mL              2   25[COMRAM] PTR struct .
  6611 ;;		 -> main@motorL(9), 
  6612 ;;  mR              2   27[COMRAM] PTR struct .
  6613 ;;		 -> main@motorR(9), 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;		None
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      void 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;Total ram usage:        5 bytes
  6630 ;; Hardware stack levels used: 1
  6631 ;; Hardware stack levels required when called: 2
  6632 ;; This function calls:
  6633 ;;		_DCmotors_setPWM
  6634 ;; This function is called by:
  6635 ;;		_colourcards_readRGBC
  6636 ;;		_DCmotors_testing
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text32
  6641  003100                     __ptext32:
  6642                           	callstack 0
  6643  003100                     _reverse:
  6644                           	callstack 27
  6645  003100                     
  6646                           ;DC_motors.c: 108: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 109: {;DC_motor
      +                          s.c: 111:     mL->direction = 0;
  6647  003100  EE20 F001          	lfsr	2,1
  6648  003104  501A               	movf	reverse@mL^0,w,c
  6649  003106  26D9               	addwf	fsr2l,f,c
  6650  003108  501B               	movf	(reverse@mL+1)^0,w,c
  6651  00310A  22DA               	addwfc	fsr2h,f,c
  6652  00310C  0E00               	movlw	0
  6653  00310E  6EDF               	movwf	indf2,c
  6654                           
  6655                           ;DC_motors.c: 112:     mR->direction = 0;
  6656  003110  EE20 F001          	lfsr	2,1
  6657  003114  501C               	movf	reverse@mR^0,w,c
  6658  003116  26D9               	addwf	fsr2l,f,c
  6659  003118  501D               	movf	(reverse@mR+1)^0,w,c
  6660  00311A  22DA               	addwfc	fsr2h,f,c
  6661  00311C  0E00               	movlw	0
  6662  00311E  6EDF               	movwf	indf2,c
  6663                           
  6664                           ;DC_motors.c: 115:     while((mL->power < 40) && (mR->power < 40)){
  6665  003120  EFAE  F018         	goto	l3497
  6666  003124                     l3489:
  6667                           
  6668                           ;DC_motors.c: 116:         mL->power += 10;
  6669  003124  C01A  FFD9         	movff	reverse@mL,fsr2l
  6670  003128  C01B  FFDA         	movff	reverse@mL+1,fsr2h
  6671  00312C  0E0A               	movlw	10
  6672  00312E  26DF               	addwf	indf2,f,c
  6673                           
  6674                           ;DC_motors.c: 117:         mR->power += 10;
  6675  003130  C01C  FFD9         	movff	reverse@mR,fsr2l
  6676  003134  C01D  FFDA         	movff	reverse@mR+1,fsr2h
  6677  003138  0E0A               	movlw	10
  6678  00313A  26DF               	addwf	indf2,f,c
  6679  00313C                     
  6680                           ;DC_motors.c: 119:         DCmotors_setPWM(mL);
  6681  00313C  C01A  F00F         	movff	reverse@mL,DCmotors_setPWM@m
  6682  003140  C01B  F010         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  6683  003144  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  6684  003148                     
  6685                           ;DC_motors.c: 120:         DCmotors_setPWM(mR);
  6686  003148  C01C  F00F         	movff	reverse@mR,DCmotors_setPWM@m
  6687  00314C  C01D  F010         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  6688  003150  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  6689  003154                     
  6690                           ;DC_motors.c: 121:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6691  003154  0EA0               	movlw	160
  6692  003156                     u4987:
  6693  003156  D000               	nop2	
  6694  003158  2EE8               	decfsz	wreg,f,c
  6695  00315A  D7FD               	bra	u4987
  6696  00315C                     l3497:
  6697                           
  6698                           ;DC_motors.c: 115:     while((mL->power < 40) && (mR->power < 40)){
  6699  00315C  C01A  FFD9         	movff	reverse@mL,fsr2l
  6700  003160  C01B  FFDA         	movff	reverse@mL+1,fsr2h
  6701  003164  0E28               	movlw	40
  6702  003166  60DF               	cpfslt	indf2,c
  6703  003168  EFB8  F018         	goto	u3521
  6704  00316C  EFBA  F018         	goto	u3520
  6705  003170                     u3521:
  6706  003170  EFC6  F018         	goto	l580
  6707  003174                     u3520:
  6708  003174  C01C  FFD9         	movff	reverse@mR,fsr2l
  6709  003178  C01D  FFDA         	movff	reverse@mR+1,fsr2h
  6710  00317C  0E27               	movlw	39
  6711  00317E  64DF               	cpfsgt	indf2,c
  6712  003180  EFC4  F018         	goto	u3531
  6713  003184  EFC6  F018         	goto	u3530
  6714  003188                     u3531:
  6715  003188  EF92  F018         	goto	l3489
  6716  00318C                     u3530:
  6717  00318C                     l580:
  6718  00318C  0012               	return		;funcret
  6719  00318E                     __end_of_reverse:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function _forward *****************
  6723 ;; Defined at:
  6724 ;;		line 88 in file "DC_motors.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  mL              2   25[COMRAM] PTR struct .
  6727 ;;		 -> main@motorL(9), 
  6728 ;;  mR              2   27[COMRAM] PTR struct .
  6729 ;;		 -> main@motorR(9), 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;		None
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  1    wreg      void 
  6734 ;; Registers used:
  6735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6745 ;;Total ram usage:        5 bytes
  6746 ;; Hardware stack levels used: 1
  6747 ;; Hardware stack levels required when called: 2
  6748 ;; This function calls:
  6749 ;;		_DCmotors_setPWM
  6750 ;; This function is called by:
  6751 ;;		_main
  6752 ;;		_colourcards_readRGBC
  6753 ;;		_DCmotors_testing
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text33
  6758  00318E                     __ptext33:
  6759                           	callstack 0
  6760  00318E                     _forward:
  6761                           	callstack 28
  6762  00318E                     
  6763                           ;DC_motors.c: 88: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 89: {;DC_motors.
      +                          c: 90:     mL->direction = 1;
  6764  00318E  EE20 F001          	lfsr	2,1
  6765  003192  501A               	movf	forward@mL^0,w,c
  6766  003194  26D9               	addwf	fsr2l,f,c
  6767  003196  501B               	movf	(forward@mL+1)^0,w,c
  6768  003198  22DA               	addwfc	fsr2h,f,c
  6769  00319A  0E01               	movlw	1
  6770  00319C  6EDF               	movwf	indf2,c
  6771                           
  6772                           ;DC_motors.c: 91:     mR->direction = 1;
  6773  00319E  EE20 F001          	lfsr	2,1
  6774  0031A2  501C               	movf	forward@mR^0,w,c
  6775  0031A4  26D9               	addwf	fsr2l,f,c
  6776  0031A6  501D               	movf	(forward@mR+1)^0,w,c
  6777  0031A8  22DA               	addwfc	fsr2h,f,c
  6778  0031AA  0E01               	movlw	1
  6779  0031AC  6EDF               	movwf	indf2,c
  6780                           
  6781                           ;DC_motors.c: 94:     while((mL->power < 20) && (mR->power < 20)){
  6782  0031AE  EFF5  F018         	goto	l3455
  6783  0031B2                     l3447:
  6784                           
  6785                           ;DC_motors.c: 95:         mL->power += 10;
  6786  0031B2  C01A  FFD9         	movff	forward@mL,fsr2l
  6787  0031B6  C01B  FFDA         	movff	forward@mL+1,fsr2h
  6788  0031BA  0E0A               	movlw	10
  6789  0031BC  26DF               	addwf	indf2,f,c
  6790                           
  6791                           ;DC_motors.c: 96:         mR->power += 10;
  6792  0031BE  C01C  FFD9         	movff	forward@mR,fsr2l
  6793  0031C2  C01D  FFDA         	movff	forward@mR+1,fsr2h
  6794  0031C6  0E0A               	movlw	10
  6795  0031C8  26DF               	addwf	indf2,f,c
  6796  0031CA                     
  6797                           ;DC_motors.c: 98:         DCmotors_setPWM(mL);
  6798  0031CA  C01A  F00F         	movff	forward@mL,DCmotors_setPWM@m
  6799  0031CE  C01B  F010         	movff	forward@mL+1,DCmotors_setPWM@m+1
  6800  0031D2  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  6801  0031D6                     
  6802                           ;DC_motors.c: 99:         DCmotors_setPWM(mR);
  6803  0031D6  C01C  F00F         	movff	forward@mR,DCmotors_setPWM@m
  6804  0031DA  C01D  F010         	movff	forward@mR+1,DCmotors_setPWM@m+1
  6805  0031DE  ECCC  F013         	call	_DCmotors_setPWM	;wreg free
  6806  0031E2                     
  6807                           ;DC_motors.c: 100:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6808  0031E2  0EA0               	movlw	160
  6809  0031E4                     u4997:
  6810  0031E4  D000               	nop2	
  6811  0031E6  2EE8               	decfsz	wreg,f,c
  6812  0031E8  D7FD               	bra	u4997
  6813  0031EA                     l3455:
  6814                           
  6815                           ;DC_motors.c: 94:     while((mL->power < 20) && (mR->power < 20)){
  6816  0031EA  C01A  FFD9         	movff	forward@mL,fsr2l
  6817  0031EE  C01B  FFDA         	movff	forward@mL+1,fsr2h
  6818  0031F2  0E14               	movlw	20
  6819  0031F4  60DF               	cpfslt	indf2,c
  6820  0031F6  EFFF  F018         	goto	u3461
  6821  0031FA  EF01  F019         	goto	u3460
  6822  0031FE                     u3461:
  6823  0031FE  EF0D  F019         	goto	l572
  6824  003202                     u3460:
  6825  003202  C01C  FFD9         	movff	forward@mR,fsr2l
  6826  003206  C01D  FFDA         	movff	forward@mR+1,fsr2h
  6827  00320A  0E13               	movlw	19
  6828  00320C  64DF               	cpfsgt	indf2,c
  6829  00320E  EF0B  F019         	goto	u3471
  6830  003212  EF0D  F019         	goto	u3470
  6831  003216                     u3471:
  6832  003216  EFD9  F018         	goto	l3447
  6833  00321A                     u3470:
  6834  00321A                     l572:
  6835  00321A  0012               	return		;funcret
  6836  00321C                     __end_of_forward:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function _DCmotors_setPWM *****************
  6840 ;; Defined at:
  6841 ;;		line 51 in file "DC_motors.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  m               2   14[COMRAM] PTR struct .
  6844 ;;		 -> main@motorR(9), main@motorL(9), 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  PWMduty         2   23[COMRAM] int 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;Total ram usage:       11 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 1
  6863 ;; This function calls:
  6864 ;;		___awdiv
  6865 ;;		___wmul
  6866 ;; This function is called by:
  6867 ;;		_forward
  6868 ;;		_reverse
  6869 ;;		_stop
  6870 ;;		_left
  6871 ;;		_right
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text34
  6876  002798                     __ptext34:
  6877                           	callstack 0
  6878  002798                     _DCmotors_setPWM:
  6879                           	callstack 28
  6880  002798                     
  6881                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
  6882  002798  EE20 F001          	lfsr	2,1
  6883  00279C  500F               	movf	DCmotors_setPWM@m^0,w,c
  6884  00279E  26D9               	addwf	fsr2l,f,c
  6885  0027A0  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6886  0027A2  22DA               	addwfc	fsr2h,f,c
  6887  0027A4  50DF               	movf	indf2,w,c
  6888  0027A6  B4D8               	btfsc	status,2,c
  6889  0027A8  EFD8  F013         	goto	u2521
  6890  0027AC  EFDA  F013         	goto	u2520
  6891  0027B0                     u2521:
  6892  0027B0  EF0B  F014         	goto	l2939
  6893  0027B4                     u2520:
  6894  0027B4                     
  6895                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
  6896  0027B4  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  6897  0027B8  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  6898  0027BC  50DF               	movf	indf2,w,c
  6899  0027BE  6E11               	movwf	??_DCmotors_setPWM^0,c
  6900  0027C0  5011               	movf	??_DCmotors_setPWM^0,w,c
  6901  0027C2  6E01               	movwf	___wmul@multiplier^0,c
  6902  0027C4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6903  0027C6  EE20 F007          	lfsr	2,7
  6904  0027CA  500F               	movf	DCmotors_setPWM@m^0,w,c
  6905  0027CC  26D9               	addwf	fsr2l,f,c
  6906  0027CE  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6907  0027D0  22DA               	addwfc	fsr2h,f,c
  6908  0027D2  CFDE F003          	movff	postinc2,___wmul@multiplicand
  6909  0027D6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  6910  0027DA  EC05  F01B         	call	___wmul	;wreg free
  6911  0027DE  C001  F007         	movff	?___wmul,___awdiv@dividend
  6912  0027E2  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  6913  0027E6  0E00               	movlw	0
  6914  0027E8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6915  0027EA  0E64               	movlw	100
  6916  0027EC  6E09               	movwf	___awdiv@divisor^0,c
  6917  0027EE  EC1E  F018         	call	___awdiv	;wreg free
  6918  0027F2  EE20 F007          	lfsr	2,7
  6919  0027F6  500F               	movf	DCmotors_setPWM@m^0,w,c
  6920  0027F8  26D9               	addwf	fsr2l,f,c
  6921  0027FA  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6922  0027FC  22DA               	addwfc	fsr2h,f,c
  6923  0027FE  CFDE F012          	movff	postinc2,??_DCmotors_setPWM+1
  6924  002802  CFDD F013          	movff	postdec2,??_DCmotors_setPWM+2
  6925  002806  5007               	movf	?___awdiv^0,w,c
  6926  002808  5C12               	subwf	(??_DCmotors_setPWM+1)^0,w,c
  6927  00280A  6E18               	movwf	DCmotors_setPWM@PWMduty^0,c
  6928  00280C  5008               	movf	(?___awdiv+1)^0,w,c
  6929  00280E  5813               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  6930  002810  6E19               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  6931                           
  6932                           ;DC_motors.c: 57:  } else {
  6933  002812  EF2E  F014         	goto	l2941
  6934  002816                     l2939:
  6935                           
  6936                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  6937  002816  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  6938  00281A  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  6939  00281E  50DF               	movf	indf2,w,c
  6940  002820  6E11               	movwf	??_DCmotors_setPWM^0,c
  6941  002822  5011               	movf	??_DCmotors_setPWM^0,w,c
  6942  002824  6E01               	movwf	___wmul@multiplier^0,c
  6943  002826  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6944  002828  EE20 F007          	lfsr	2,7
  6945  00282C  500F               	movf	DCmotors_setPWM@m^0,w,c
  6946  00282E  26D9               	addwf	fsr2l,f,c
  6947  002830  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6948  002832  22DA               	addwfc	fsr2h,f,c
  6949  002834  CFDE F003          	movff	postinc2,___wmul@multiplicand
  6950  002838  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  6951  00283C  EC05  F01B         	call	___wmul	;wreg free
  6952  002840  C001  F007         	movff	?___wmul,___awdiv@dividend
  6953  002844  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  6954  002848  0E00               	movlw	0
  6955  00284A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6956  00284C  0E64               	movlw	100
  6957  00284E  6E09               	movwf	___awdiv@divisor^0,c
  6958  002850  EC1E  F018         	call	___awdiv	;wreg free
  6959  002854  C007  F018         	movff	?___awdiv,DCmotors_setPWM@PWMduty
  6960  002858  C008  F019         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  6961  00285C                     l2941:
  6962                           
  6963                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  6964  00285C  EE20 F002          	lfsr	2,2
  6965  002860  500F               	movf	DCmotors_setPWM@m^0,w,c
  6966  002862  26D9               	addwf	fsr2l,f,c
  6967  002864  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6968  002866  22DA               	addwfc	fsr2h,f,c
  6969  002868  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
  6970  00286C  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
  6971  002870  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  6972  002874  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  6973  002878  C018  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  6974  00287C                     
  6975                           ;DC_motors.c: 63:  if (m->direction){
  6976  00287C  EE20 F001          	lfsr	2,1
  6977  002880  500F               	movf	DCmotors_setPWM@m^0,w,c
  6978  002882  26D9               	addwf	fsr2l,f,c
  6979  002884  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6980  002886  22DA               	addwfc	fsr2h,f,c
  6981  002888  50DF               	movf	indf2,w,c
  6982  00288A  B4D8               	btfsc	status,2,c
  6983  00288C  EF4A  F014         	goto	u2531
  6984  002890  EF4C  F014         	goto	u2530
  6985  002894                     u2531:
  6986  002894  EF81  F014         	goto	l2947
  6987  002898                     u2530:
  6988  002898                     
  6989                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  6990  002898  EE20 F004          	lfsr	2,4
  6991  00289C  500F               	movf	DCmotors_setPWM@m^0,w,c
  6992  00289E  26D9               	addwf	fsr2l,f,c
  6993  0028A0  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6994  0028A2  22DA               	addwfc	fsr2h,f,c
  6995  0028A4  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
  6996  0028A8  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
  6997  0028AC  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  6998  0028B0  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  6999  0028B4  EE10 F004          	lfsr	1,4
  7000  0028B8  500F               	movf	DCmotors_setPWM@m^0,w,c
  7001  0028BA  26E1               	addwf	fsr1l,f,c
  7002  0028BC  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7003  0028BE  22E2               	addwfc	fsr1h,f,c
  7004  0028C0  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
  7005  0028C4  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
  7006  0028C8  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  7007  0028CC  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  7008  0028D0  50E7               	movf	indf1,w,c
  7009  0028D2  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
  7010  0028D4  EE10 F006          	lfsr	1,6
  7011  0028D8  500F               	movf	DCmotors_setPWM@m^0,w,c
  7012  0028DA  26E1               	addwf	fsr1l,f,c
  7013  0028DC  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7014  0028DE  22E2               	addwfc	fsr1h,f,c
  7015  0028E0  50E7               	movf	indf1,w,c
  7016  0028E2  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
  7017  0028E4  0E01               	movlw	1
  7018  0028E6  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
  7019  0028E8  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
  7020  0028EA  EF79  F014         	goto	u2544
  7021  0028EE                     u2545:
  7022  0028EE  90D8               	bcf	status,0,c
  7023  0028F0  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  7024  0028F2                     u2544:
  7025  0028F2  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  7026  0028F4  EF77  F014         	goto	u2545
  7027  0028F8  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
  7028  0028FA  1015               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  7029  0028FC  6EDF               	movwf	indf2,c
  7030                           
  7031                           ;DC_motors.c: 65:  } else {
  7032  0028FE  EFB5  F014         	goto	l559
  7033  002902                     l2947:
  7034                           
  7035                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
  7036  002902  EE20 F004          	lfsr	2,4
  7037  002906  500F               	movf	DCmotors_setPWM@m^0,w,c
  7038  002908  26D9               	addwf	fsr2l,f,c
  7039  00290A  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7040  00290C  22DA               	addwfc	fsr2h,f,c
  7041  00290E  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
  7042  002912  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
  7043  002916  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  7044  00291A  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  7045  00291E  EE10 F004          	lfsr	1,4
  7046  002922  500F               	movf	DCmotors_setPWM@m^0,w,c
  7047  002924  26E1               	addwf	fsr1l,f,c
  7048  002926  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7049  002928  22E2               	addwfc	fsr1h,f,c
  7050  00292A  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
  7051  00292E  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
  7052  002932  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  7053  002936  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  7054  00293A  50E7               	movf	indf1,w,c
  7055  00293C  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
  7056  00293E  EE10 F006          	lfsr	1,6
  7057  002942  500F               	movf	DCmotors_setPWM@m^0,w,c
  7058  002944  26E1               	addwf	fsr1l,f,c
  7059  002946  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7060  002948  22E2               	addwfc	fsr1h,f,c
  7061  00294A  50E7               	movf	indf1,w,c
  7062  00294C  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
  7063  00294E  0E01               	movlw	1
  7064  002950  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
  7065  002952  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
  7066  002954  EFAE  F014         	goto	u2554
  7067  002958                     u2555:
  7068  002958  90D8               	bcf	status,0,c
  7069  00295A  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  7070  00295C                     u2554:
  7071  00295C  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  7072  00295E  EFAC  F014         	goto	u2555
  7073  002962  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
  7074  002964  0AFF               	xorlw	255
  7075  002966  1415               	andwf	(??_DCmotors_setPWM+4)^0,w,c
  7076  002968  6EDF               	movwf	indf2,c
  7077  00296A                     l559:
  7078  00296A  0012               	return		;funcret
  7079  00296C                     __end_of_DCmotors_setPWM:
  7080                           	callstack 0
  7081                           
  7082 ;; *************** function ___wmul *****************
  7083 ;; Defined at:
  7084 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  multiplier      2    0[COMRAM] unsigned int 
  7087 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  product         2    4[COMRAM] unsigned int 
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  2    0[COMRAM] unsigned int 
  7092 ;; Registers used:
  7093 ;;		wreg, status,2, status,0, prodl, prodh
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;Total ram usage:        6 bytes
  7104 ;; Hardware stack levels used: 1
  7105 ;; This function calls:
  7106 ;;		Nothing
  7107 ;; This function is called by:
  7108 ;;		_DCmotors_setPWM
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text35
  7113  00360A                     __ptext35:
  7114                           	callstack 0
  7115  00360A                     ___wmul:
  7116                           	callstack 28
  7117  00360A  5001               	movf	___wmul@multiplier^0,w,c
  7118  00360C  0203               	mulwf	___wmul@multiplicand^0,c
  7119  00360E  CFF3 F005          	movff	prodl,___wmul@product
  7120  003612  CFF4 F006          	movff	prodh,___wmul@product+1
  7121  003616  5001               	movf	___wmul@multiplier^0,w,c
  7122  003618  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7123  00361A  50F3               	movf	243,w,c
  7124  00361C  2606               	addwf	(___wmul@product+1)^0,f,c
  7125  00361E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7126  003620  0203               	mulwf	___wmul@multiplicand^0,c
  7127  003622  50F3               	movf	243,w,c
  7128  003624  2606               	addwf	(___wmul@product+1)^0,f,c
  7129  003626  C005  F001         	movff	___wmul@product,?___wmul
  7130  00362A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7131  00362E  0012               	return		;funcret
  7132  003630                     __end_of___wmul:
  7133                           	callstack 0
  7134                           
  7135 ;; *************** function ___awdiv *****************
  7136 ;; Defined at:
  7137 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  dividend        2    6[COMRAM] int 
  7140 ;;  divisor         2    8[COMRAM] int 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  quotient        2   12[COMRAM] int 
  7143 ;;  sign            1   11[COMRAM] unsigned char 
  7144 ;;  counter         1   10[COMRAM] unsigned char 
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  2    6[COMRAM] int 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2, status,0
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7155 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7157 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7158 ;;Total ram usage:        8 bytes
  7159 ;; Hardware stack levels used: 1
  7160 ;; This function calls:
  7161 ;;		Nothing
  7162 ;; This function is called by:
  7163 ;;		_DCmotors_setPWM
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           	psect	text36
  7168  00303C                     __ptext36:
  7169                           	callstack 0
  7170  00303C                     ___awdiv:
  7171                           	callstack 28
  7172  00303C  0E00               	movlw	0
  7173  00303E  6E0C               	movwf	___awdiv@sign^0,c
  7174  003040  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  7175  003042  EF27  F018         	goto	u2440
  7176  003046  EF25  F018         	goto	u2441
  7177  00304A                     u2441:
  7178  00304A  EF2D  F018         	goto	l2869
  7179  00304E                     u2440:
  7180  00304E  6C09               	negf	___awdiv@divisor^0,c
  7181  003050  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  7182  003052  B0D8               	btfsc	status,0,c
  7183  003054  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  7184  003056  0E01               	movlw	1
  7185  003058  6E0C               	movwf	___awdiv@sign^0,c
  7186  00305A                     l2869:
  7187  00305A  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  7188  00305C  EF34  F018         	goto	u2450
  7189  003060  EF32  F018         	goto	u2451
  7190  003064                     u2451:
  7191  003064  EF3A  F018         	goto	l2875
  7192  003068                     u2450:
  7193  003068  6C07               	negf	___awdiv@dividend^0,c
  7194  00306A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  7195  00306C  B0D8               	btfsc	status,0,c
  7196  00306E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  7197  003070  0E01               	movlw	1
  7198  003072  1A0C               	xorwf	___awdiv@sign^0,f,c
  7199  003074                     l2875:
  7200  003074  0E00               	movlw	0
  7201  003076  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  7202  003078  0E00               	movlw	0
  7203  00307A  6E0D               	movwf	___awdiv@quotient^0,c
  7204  00307C  5009               	movf	___awdiv@divisor^0,w,c
  7205  00307E  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  7206  003080  B4D8               	btfsc	status,2,c
  7207  003082  EF45  F018         	goto	u2461
  7208  003086  EF47  F018         	goto	u2460
  7209  00308A                     u2461:
  7210  00308A  EF6F  F018         	goto	l2897
  7211  00308E                     u2460:
  7212  00308E  0E01               	movlw	1
  7213  003090  6E0B               	movwf	___awdiv@counter^0,c
  7214  003092  EF4F  F018         	goto	l2883
  7215  003096                     l2881:
  7216  003096  90D8               	bcf	status,0,c
  7217  003098  3609               	rlcf	___awdiv@divisor^0,f,c
  7218  00309A  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  7219  00309C  2A0B               	incf	___awdiv@counter^0,f,c
  7220  00309E                     l2883:
  7221  00309E  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  7222  0030A0  EF54  F018         	goto	u2471
  7223  0030A4  EF56  F018         	goto	u2470
  7224  0030A8                     u2471:
  7225  0030A8  EF4B  F018         	goto	l2881
  7226  0030AC                     u2470:
  7227  0030AC                     l2885:
  7228  0030AC  90D8               	bcf	status,0,c
  7229  0030AE  360D               	rlcf	___awdiv@quotient^0,f,c
  7230  0030B0  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  7231  0030B2  5009               	movf	___awdiv@divisor^0,w,c
  7232  0030B4  5C07               	subwf	___awdiv@dividend^0,w,c
  7233  0030B6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7234  0030B8  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  7235  0030BA  A0D8               	btfss	status,0,c
  7236  0030BC  EF62  F018         	goto	u2481
  7237  0030C0  EF64  F018         	goto	u2480
  7238  0030C4                     u2481:
  7239  0030C4  EF69  F018         	goto	l2893
  7240  0030C8                     u2480:
  7241  0030C8  5009               	movf	___awdiv@divisor^0,w,c
  7242  0030CA  5E07               	subwf	___awdiv@dividend^0,f,c
  7243  0030CC  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7244  0030CE  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  7245  0030D0  800D               	bsf	___awdiv@quotient^0,0,c
  7246  0030D2                     l2893:
  7247  0030D2  90D8               	bcf	status,0,c
  7248  0030D4  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  7249  0030D6  3209               	rrcf	___awdiv@divisor^0,f,c
  7250  0030D8  2E0B               	decfsz	___awdiv@counter^0,f,c
  7251  0030DA  EF56  F018         	goto	l2885
  7252  0030DE                     l2897:
  7253  0030DE  500C               	movf	___awdiv@sign^0,w,c
  7254  0030E0  B4D8               	btfsc	status,2,c
  7255  0030E2  EF75  F018         	goto	u2491
  7256  0030E6  EF77  F018         	goto	u2490
  7257  0030EA                     u2491:
  7258  0030EA  EF7B  F018         	goto	l2901
  7259  0030EE                     u2490:
  7260  0030EE  6C0D               	negf	___awdiv@quotient^0,c
  7261  0030F0  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  7262  0030F2  B0D8               	btfsc	status,0,c
  7263  0030F4  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  7264  0030F6                     l2901:
  7265  0030F6  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  7266  0030FA  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  7267  0030FE  0012               	return		;funcret
  7268  003100                     __end_of___awdiv:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _DCmotors_init *****************
  7272 ;; Defined at:
  7273 ;;		line 10 in file "DC_motors.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  PWMperiod       1    wreg     unsigned char 
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;  PWMperiod       1    0[COMRAM] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, cstack
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;Total ram usage:        1 bytes
  7292 ;; Hardware stack levels used: 1
  7293 ;; Hardware stack levels required when called: 1
  7294 ;; This function calls:
  7295 ;;		_buggyLEDs_init
  7296 ;;		_clicker2LEDs_init
  7297 ;;		_clicker2buttons_init
  7298 ;; This function is called by:
  7299 ;;		_main
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text37
  7304  00342C                     __ptext37:
  7305                           	callstack 0
  7306  00342C                     _DCmotors_init:
  7307                           	callstack 29
  7308                           
  7309                           ;incstack = 0
  7310                           ;DCmotors_init@PWMperiod stored from wreg
  7311  00342C  6E01               	movwf	DCmotors_init@PWMperiod^0,c
  7312  00342E                     
  7313                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
  7314  00342E  50BD               	movf	189,w,c	;volatile
  7315  003430  0B8F               	andlw	-113
  7316  003432  0940               	iorlw	64
  7317  003434  6EBD               	movwf	189,c	;volatile
  7318                           
  7319                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
  7320  003436  0EE0               	movlw	-32
  7321  003438  16BE               	andwf	190,f,c	;volatile
  7322                           
  7323                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
  7324  00343A  50BF               	movf	191,w,c	;volatile
  7325  00343C  0BF0               	andlw	-16
  7326  00343E  0901               	iorlw	1
  7327  003440  6EBF               	movwf	191,c	;volatile
  7328  003442                     
  7329                           ;DC_motors.c: 18:     T2PR=PWMperiod;
  7330  003442  C001  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  7331  003446                     
  7332                           ;DC_motors.c: 19:     T2CONbits.ON=1;
  7333  003446  8EBD               	bsf	189,7,c	;volatile
  7334  003448                     
  7335                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
  7336  003448  9485               	bcf	133,2,c	;volatile
  7337  00344A                     
  7338                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
  7339  00344A  9885               	bcf	133,4,c	;volatile
  7340  00344C                     
  7341                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
  7342  00344C  9E83               	bcf	131,7,c	;volatile
  7343  00344E                     
  7344                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
  7345  00344E  9C87               	bcf	135,6,c	;volatile
  7346  003450                     
  7347                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
  7348  003450  947D               	bcf	125,2,c	;volatile
  7349  003452                     
  7350                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
  7351  003452  987D               	bcf	125,4,c	;volatile
  7352  003454                     
  7353                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
  7354  003454  9E7B               	bcf	123,7,c	;volatile
  7355  003456                     
  7356                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
  7357  003456  9C7F               	bcf	127,6,c	;volatile
  7358                           
  7359                           ;DC_motors.c: 32:     PWM6DCH=0;
  7360  003458  0E00               	movlw	0
  7361  00345A  6EA3               	movwf	163,c	;volatile
  7362                           
  7363                           ;DC_motors.c: 33:     PWM7DCH=0;
  7364  00345C  0E00               	movlw	0
  7365  00345E  6EA0               	movwf	160,c	;volatile
  7366  003460                     
  7367                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
  7368  003460  8EA4               	bsf	164,7,c	;volatile
  7369  003462                     
  7370                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
  7371  003462  8EA1               	bsf	161,7,c	;volatile
  7372                           
  7373                           ;DC_motors.c: 38:     RE2PPS=0x0A;
  7374  003464  0E0A               	movlw	10
  7375  003466  010E               	movlb	14	; () banked
  7376  003468  6F74               	movwf	116,b	;volatile
  7377                           
  7378                           ;DC_motors.c: 39:     RC7PPS=0x0B;
  7379  00346A  0E0B               	movlw	11
  7380  00346C  6F69               	movwf	105,b	;volatile
  7381  00346E                     
  7382                           ; BSR set to: 14
  7383                           ;DC_motors.c: 42:     clicker2buttons_init();
  7384  00346E  EC8A  F01B         	call	_clicker2buttons_init	;wreg free
  7385  003472                     
  7386                           ;DC_motors.c: 43:     clicker2LEDs_init();
  7387  003472  EC9F  F01B         	call	_clicker2LEDs_init	;wreg free
  7388  003476                     
  7389                           ;DC_motors.c: 44:     buggyLEDs_init();
  7390  003476  EC72  F01B         	call	_buggyLEDs_init	;wreg free
  7391  00347A  0012               	return		;funcret
  7392  00347C                     __end_of_DCmotors_init:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _clicker2buttons_init *****************
  7396 ;; Defined at:
  7397 ;;		line 7 in file "buttons_n_LEDs.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;		None
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;		None
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  1    wreg      void 
  7404 ;; Registers used:
  7405 ;;		None
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7415 ;;Total ram usage:        0 bytes
  7416 ;; Hardware stack levels used: 1
  7417 ;; This function calls:
  7418 ;;		Nothing
  7419 ;; This function is called by:
  7420 ;;		_DCmotors_init
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text38
  7425  003714                     __ptext38:
  7426                           	callstack 0
  7427  003714                     _clicker2buttons_init:
  7428                           	callstack 29
  7429  003714                     
  7430                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
  7431  003714  8486               	bsf	134,2,c	;volatile
  7432                           
  7433                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
  7434  003716  8686               	bsf	134,3,c	;volatile
  7435                           
  7436                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  7437  003718  010E               	movlb	14	; () banked
  7438  00371A  95B4               	bcf	180,2,b	;volatile
  7439                           
  7440                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  7441  00371C  97B4               	bcf	180,3,b	;volatile
  7442  00371E                     
  7443                           ; BSR set to: 14
  7444  00371E  0012               	return		;funcret
  7445  003720                     __end_of_clicker2buttons_init:
  7446                           	callstack 0
  7447                           
  7448 ;; *************** function _clicker2LEDs_init *****************
  7449 ;; Defined at:
  7450 ;;		line 19 in file "buttons_n_LEDs.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      void 
  7457 ;; Registers used:
  7458 ;;		None
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7468 ;;Total ram usage:        0 bytes
  7469 ;; Hardware stack levels used: 1
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_DCmotors_init
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text39
  7478  00373E                     __ptext39:
  7479                           	callstack 0
  7480  00373E                     _clicker2LEDs_init:
  7481                           	callstack 29
  7482  00373E                     
  7483                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
  7484  00373E  9E84               	bcf	132,7,c	;volatile
  7485                           
  7486                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
  7487  003740  9688               	bcf	136,3,c	;volatile
  7488                           
  7489                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
  7490  003742  9E7C               	bcf	124,7,c	;volatile
  7491                           
  7492                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
  7493  003744  9680               	bcf	128,3,c	;volatile
  7494  003746  0012               	return		;funcret
  7495  003748                     __end_of_clicker2LEDs_init:
  7496                           	callstack 0
  7497                           
  7498 ;; *************** function _buggyLEDs_init *****************
  7499 ;; Defined at:
  7500 ;;		line 31 in file "buttons_n_LEDs.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;		None
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;		None
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  1    wreg      void 
  7507 ;; Registers used:
  7508 ;;		None
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;Total ram usage:        0 bytes
  7519 ;; Hardware stack levels used: 1
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		_DCmotors_init
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text40
  7528  0036E4                     __ptext40:
  7529                           	callstack 0
  7530  0036E4                     _buggyLEDs_init:
  7531                           	callstack 29
  7532  0036E4                     
  7533                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
  7534  0036E4  9288               	bcf	136,1,c	;volatile
  7535                           
  7536                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
  7537  0036E6  9684               	bcf	132,3,c	;volatile
  7538                           
  7539                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
  7540  0036E8  9884               	bcf	132,4,c	;volatile
  7541                           
  7542                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
  7543  0036EA  9086               	bcf	134,0,c	;volatile
  7544                           
  7545                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
  7546  0036EC  9088               	bcf	136,0,c	;volatile
  7547                           
  7548                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
  7549  0036EE  9280               	bcf	128,1,c	;volatile
  7550                           
  7551                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
  7552  0036F0  967C               	bcf	124,3,c	;volatile
  7553                           
  7554                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
  7555  0036F2  987C               	bcf	124,4,c	;volatile
  7556                           
  7557                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
  7558  0036F4  907E               	bcf	126,0,c	;volatile
  7559                           
  7560                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
  7561  0036F6  9080               	bcf	128,0,c	;volatile
  7562  0036F8  0012               	return		;funcret
  7563  0036FA                     __end_of_buggyLEDs_init:
  7564                           	callstack 0
  7565                           
  7566 ;; *************** function _ADC_init *****************
  7567 ;; Defined at:
  7568 ;;		line 8 in file "ADC.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      void 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7586 ;;Total ram usage:        0 bytes
  7587 ;; Hardware stack levels used: 1
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_main
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text41
  7596  0036B2                     __ptext41:
  7597                           	callstack 0
  7598  0036B2                     _ADC_init:
  7599                           	callstack 30
  7600  0036B2                     
  7601                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  7602  0036B2  8C86               	bsf	134,6,c	;volatile
  7603                           
  7604                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  7605  0036B4  010E               	movlb	14	; () banked
  7606  0036B6  8DB4               	bsf	180,6,b	;volatile
  7607                           
  7608                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  7609  0036B8  010F               	movlb	15	; () banked
  7610  0036BA  9958               	bcf	88,4,b	;volatile
  7611  0036BC                     
  7612                           ; BSR set to: 15
  7613                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  7614  0036BC  0EFC               	movlw	-4
  7615  0036BE  1758               	andwf	88,f,b	;volatile
  7616                           
  7617                           ;ADC.c: 16:     ADPCH=0b101110;
  7618  0036C0  0E2E               	movlw	46
  7619  0036C2  6F5F               	movwf	95,b	;volatile
  7620  0036C4                     
  7621                           ; BSR set to: 15
  7622                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  7623  0036C4  9460               	bcf	96,2,c	;volatile
  7624  0036C6                     
  7625                           ; BSR set to: 15
  7626                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  7627  0036C6  8860               	bsf	96,4,c	;volatile
  7628  0036C8                     
  7629                           ; BSR set to: 15
  7630                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  7631  0036C8  8E60               	bsf	96,7,c	;volatile
  7632  0036CA                     
  7633                           ; BSR set to: 15
  7634  0036CA  0012               	return		;funcret
  7635  0036CC                     __end_of_ADC_init:
  7636                           	callstack 0
  7637                           
  7638                           	psect	rparam
  7639  0000                     
  7640                           	psect	idloc
  7641                           
  7642                           ;Config register IDLOC0 @ 0x200000
  7643                           ;	unspecified, using default values
  7644  200000                     	org	2097152
  7645  200000  0FFF               	dw	4095
  7646                           
  7647                           ;Config register IDLOC1 @ 0x200002
  7648                           ;	unspecified, using default values
  7649  200002                     	org	2097154
  7650  200002  0FFF               	dw	4095
  7651                           
  7652                           ;Config register IDLOC2 @ 0x200004
  7653                           ;	unspecified, using default values
  7654  200004                     	org	2097156
  7655  200004  0FFF               	dw	4095
  7656                           
  7657                           ;Config register IDLOC3 @ 0x200006
  7658                           ;	unspecified, using default values
  7659  200006                     	org	2097158
  7660  200006  0FFF               	dw	4095
  7661                           
  7662                           ;Config register IDLOC4 @ 0x200008
  7663                           ;	unspecified, using default values
  7664  200008                     	org	2097160
  7665  200008  0FFF               	dw	4095
  7666                           
  7667                           ;Config register IDLOC5 @ 0x20000A
  7668                           ;	unspecified, using default values
  7669  20000A                     	org	2097162
  7670  20000A  0FFF               	dw	4095
  7671                           
  7672                           ;Config register IDLOC6 @ 0x20000C
  7673                           ;	unspecified, using default values
  7674  20000C                     	org	2097164
  7675  20000C  0FFF               	dw	4095
  7676                           
  7677                           ;Config register IDLOC7 @ 0x20000E
  7678                           ;	unspecified, using default values
  7679  20000E                     	org	2097166
  7680  20000E  0FFF               	dw	4095
  7681                           
  7682                           	psect	config
  7683                           
  7684                           ;Config register CONFIG1L @ 0x300000
  7685                           ;	External Oscillator mode Selection bits
  7686                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7687                           ;	Power-up default value for COSC bits
  7688                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7689  300000                     	org	3145728
  7690  300000  AA                 	db	170
  7691                           
  7692                           ;Config register CONFIG1H @ 0x300001
  7693                           ;	unspecified, using default values
  7694                           ;	Clock Out Enable bit
  7695                           ;	CLKOUTEN = 0x1, unprogrammed default
  7696                           ;	Clock Switch Enable bit
  7697                           ;	CSWEN = 0x1, unprogrammed default
  7698                           ;	Fail-Safe Clock Monitor Enable bit
  7699                           ;	FCMEN = 0x1, unprogrammed default
  7700  300001                     	org	3145729
  7701  300001  FF                 	db	255
  7702                           
  7703                           ;Config register CONFIG2L @ 0x300002
  7704                           ;	unspecified, using default values
  7705                           ;	Master Clear Enable bit
  7706                           ;	MCLRE = 0x1, unprogrammed default
  7707                           ;	Power-up Timer Enable bit
  7708                           ;	PWRTE = 0x1, unprogrammed default
  7709                           ;	Low-power BOR enable bit
  7710                           ;	LPBOREN = 0x1, unprogrammed default
  7711                           ;	Brown-out Reset Enable bits
  7712                           ;	BOREN = 0x3, unprogrammed default
  7713  300002                     	org	3145730
  7714  300002  FF                 	db	255
  7715                           
  7716                           ;Config register CONFIG2H @ 0x300003
  7717                           ;	unspecified, using default values
  7718                           ;	Brown Out Reset Voltage selection bits
  7719                           ;	BORV = 0x3, unprogrammed default
  7720                           ;	ZCD Disable bit
  7721                           ;	ZCD = 0x1, unprogrammed default
  7722                           ;	PPSLOCK bit One-Way Set Enable bit
  7723                           ;	PPS1WAY = 0x1, unprogrammed default
  7724                           ;	Stack Full/Underflow Reset Enable bit
  7725                           ;	STVREN = 0x1, unprogrammed default
  7726                           ;	Debugger Enable bit
  7727                           ;	DEBUG = 0x1, unprogrammed default
  7728                           ;	Extended Instruction Set Enable bit
  7729                           ;	XINST = 0x1, unprogrammed default
  7730  300003                     	org	3145731
  7731  300003  FF                 	db	255
  7732                           
  7733                           ;Config register CONFIG3L @ 0x300004
  7734                           ;	WDT Period Select bits
  7735                           ;	WDTCPS = 0x1F, unprogrammed default
  7736                           ;	WDT operating mode
  7737                           ;	WDTE = OFF, WDT Disabled
  7738  300004                     	org	3145732
  7739  300004  9F                 	db	159
  7740                           
  7741                           ;Config register CONFIG3H @ 0x300005
  7742                           ;	unspecified, using default values
  7743                           ;	WDT Window Select bits
  7744                           ;	WDTCWS = 0x7, unprogrammed default
  7745                           ;	WDT input clock selector
  7746                           ;	WDTCCS = 0x7, unprogrammed default
  7747  300005                     	org	3145733
  7748  300005  FF                 	db	255
  7749                           
  7750                           ;Config register CONFIG4L @ 0x300006
  7751                           ;	unspecified, using default values
  7752                           ;	Write Protection Block 0
  7753                           ;	WRT0 = 0x1, unprogrammed default
  7754                           ;	Write Protection Block 1
  7755                           ;	WRT1 = 0x1, unprogrammed default
  7756                           ;	Write Protection Block 2
  7757                           ;	WRT2 = 0x1, unprogrammed default
  7758                           ;	Write Protection Block 3
  7759                           ;	WRT3 = 0x1, unprogrammed default
  7760                           ;	Write Protection Block 3
  7761                           ;	WRT4 = 0x1, unprogrammed default
  7762                           ;	Write Protection Block 3
  7763                           ;	WRT5 = 0x1, unprogrammed default
  7764                           ;	Write Protection Block 3
  7765                           ;	WRT6 = 0x1, unprogrammed default
  7766                           ;	Write Protection Block 3
  7767                           ;	WRT7 = 0x1, unprogrammed default
  7768  300006                     	org	3145734
  7769  300006  FF                 	db	255
  7770                           
  7771                           ;Config register CONFIG4H @ 0x300007
  7772                           ;	unspecified, using default values
  7773                           ;	Configuration Register Write Protection bit
  7774                           ;	WRTC = 0x1, unprogrammed default
  7775                           ;	Boot Block Write Protection bit
  7776                           ;	WRTB = 0x1, unprogrammed default
  7777                           ;	Data EEPROM Write Protection bit
  7778                           ;	WRTD = 0x1, unprogrammed default
  7779                           ;	Scanner Enable bit
  7780                           ;	SCANE = 0x1, unprogrammed default
  7781                           ;	Low Voltage Programming Enable bit
  7782                           ;	LVP = 0x1, unprogrammed default
  7783  300007                     	org	3145735
  7784  300007  FF                 	db	255
  7785                           
  7786                           ;Config register CONFIG5L @ 0x300008
  7787                           ;	unspecified, using default values
  7788                           ;	UserNVM Program Memory Code Protection bit
  7789                           ;	CP = 0x1, unprogrammed default
  7790                           ;	DataNVM Memory Code Protection bit
  7791                           ;	CPD = 0x1, unprogrammed default
  7792  300008                     	org	3145736
  7793  300008  FF                 	db	255
  7794                           
  7795                           ;Config register CONFIG5H @ 0x300009
  7796                           ;	unspecified, using default values
  7797  300009                     	org	3145737
  7798  300009  FF                 	db	255
  7799                           
  7800                           ;Config register CONFIG6L @ 0x30000A
  7801                           ;	unspecified, using default values
  7802                           ;	Table Read Protection Block 0
  7803                           ;	EBTR0 = 0x1, unprogrammed default
  7804                           ;	Table Read Protection Block 1
  7805                           ;	EBTR1 = 0x1, unprogrammed default
  7806                           ;	Table Read Protection Block 2
  7807                           ;	EBTR2 = 0x1, unprogrammed default
  7808                           ;	Table Read Protection Block 3
  7809                           ;	EBTR3 = 0x1, unprogrammed default
  7810                           ;	Table Read Protection Block 4
  7811                           ;	EBTR4 = 0x1, unprogrammed default
  7812                           ;	Table Read Protection Block 5
  7813                           ;	EBTR5 = 0x1, unprogrammed default
  7814                           ;	Table Read Protection Block 6
  7815                           ;	EBTR6 = 0x1, unprogrammed default
  7816                           ;	Table Read Protection Block 7
  7817                           ;	EBTR7 = 0x1, unprogrammed default
  7818  30000A                     	org	3145738
  7819  30000A  FF                 	db	255
  7820                           
  7821                           ;Config register CONFIG6H @ 0x30000B
  7822                           ;	unspecified, using default values
  7823                           ;	Boot Block Table Read Protection bit
  7824                           ;	EBTRB = 0x1, unprogrammed default
  7825  30000B                     	org	3145739
  7826  30000B  FF                 	db	255
  7827                           tosu	equ	0xFFF
  7828                           tosh	equ	0xFFE
  7829                           tosl	equ	0xFFD
  7830                           stkptr	equ	0xFFC
  7831                           pclatu	equ	0xFFB
  7832                           pclath	equ	0xFFA
  7833                           pcl	equ	0xFF9
  7834                           tblptru	equ	0xFF8
  7835                           tblptrh	equ	0xFF7
  7836                           tblptrl	equ	0xFF6
  7837                           tablat	equ	0xFF5
  7838                           prodh	equ	0xFF4
  7839                           prodl	equ	0xFF3
  7840                           indf0	equ	0xFEF
  7841                           postinc0	equ	0xFEE
  7842                           postdec0	equ	0xFED
  7843                           preinc0	equ	0xFEC
  7844                           plusw0	equ	0xFEB
  7845                           fsr0h	equ	0xFEA
  7846                           fsr0l	equ	0xFE9
  7847                           wreg	equ	0xFE8
  7848                           indf1	equ	0xFE7
  7849                           postinc1	equ	0xFE6
  7850                           postdec1	equ	0xFE5
  7851                           preinc1	equ	0xFE4
  7852                           plusw1	equ	0xFE3
  7853                           fsr1h	equ	0xFE2
  7854                           fsr1l	equ	0xFE1
  7855                           bsr	equ	0xFE0
  7856                           indf2	equ	0xFDF
  7857                           postinc2	equ	0xFDE
  7858                           postdec2	equ	0xFDD
  7859                           preinc2	equ	0xFDC
  7860                           plusw2	equ	0xFDB
  7861                           fsr2h	equ	0xFDA
  7862                           fsr2l	equ	0xFD9
  7863                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         93
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      94
    BANK0           160     38     127
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2888_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(COMRAM[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(COMRAM[20]), 

    DCmotors_testing@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    DCmotors_testing@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(COMRAM[8]), colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC@tmpval(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_colourcards_readRGBC
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _checkbatterylevel->_ADC_getval
    _DCmotors_testing->_turnleft
    _DCmotors_testing->_turnright
    _turnright->_left
    _turnleft->_left
    _right->_DCmotors_setPWM
    _left->___fladd
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_colourcards_readRGBC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0  120806
                                             84 COMRAM     2     2      0
                                             12 BANK0     26    26      0
                           _ADC_init
                      _DCmotors_init
                   _DCmotors_testing
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
                   _colourclick_init
                            _forward
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     360
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colourclick_writetoaddr                              2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                22    16      6   65043
                                             74 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                            ___fldiv
                             ___flge
                           ___xxtofl
               _colourclick_readRGBC
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC                                 2     0      2     920
                                             11 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (3) _colourclick_readR                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readG                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readC                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readB                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                              1 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_testing                                     6     2      4   52137
                                             74 COMRAM     6     2      4
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6   20774
                                             68 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6   20090
                                             68 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                               12     6      6    2688
                                             25 COMRAM    12     6      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                13     7      6   15674
                                             55 COMRAM    13     7      6
                    _DCmotors_setPWM
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1224
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    7630
                                             14 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2388
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    5267
                                             25 COMRAM     4     0      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    2575
                                             25 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              5     1      4    2575
                                             25 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    1943
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              0 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _DCmotors_testing
     _forward
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _reverse
       _DCmotors_setPWM
     _stop
       _DCmotors_setPWM
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___xxtofl (ARG)
         ___flmul
         ___xxtofl
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _reverse
     _stop
     _turnleft
     _turnright
   _colourclickLEDs_C
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     26      7F       5       79.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     56      5E       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DD       8        0.0%
DATA                 0      0      DD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 23:02:06 2021

                    ___fldiv@aexp 0027                      ___fldiv@bexp 0026  
                    ___fldiv@sign 001F                                l61 2EAC  
                              l65 2EC8             __end_of_DCmotors_init 347C  
                    ___awdiv@sign 000C               ___wmul@multiplicand 0003  
                             l310 36CE                               l312 36DC  
                             l313 36E2                               l402 3712  
                             l154 1760                               l307 36CA  
                             l260 333A                               l405 3558  
                             l157 17CE                               l342 371E  
                             l254 3590                               l263 338A  
                             l351 3706                               l272 32EA  
                             l345 3746                               l257 3670  
                             l610 2E14                               l266 342A  
                             l348 36F8                               l620 34C8  
                             l444 36B0                               l269 33DA  
                             l357 3650                               l390 35E2  
                             l607 2DEC                               l615 3516  
                             l552 347A                               l384 35BA  
                             l393 3732                               l562 368E  
                             l387 35BC                               l572 321A  
                             l580 318C                               l564 3690  
                             l396 373C                               l717 362E  
                             l654 2456                               l559 296A  
                             l399 3728                               l664 253C  
                             l674 2604                               l587 328A  
                             l659 24CA                               l588 328C  
                             l684 26CC                               l669 25A0  
                             l598 2CC8                               l694 2796  
                             l599 2CCA                               l679 2668  
                             l689 2730                               l948 30FE  
                             l982 2FF4                               l987 303A  
                             wreg 000FE8                      ___flmul@aexp 0020  
                    ___flmul@bexp 0021                      ___flmul@sign 001B  
                    ___flmul@temp 0026             ?_colourclick_readRGBC 000C  
                    ___flmul@prod 0022               __size_of_ADC_getval 0018  
      colourcards_readRGBC@tmpval 004B                              l1301 22B2  
                            l1310 22F8                              l1312 2370  
                            l1304 2276                              l3001 18DC  
                            l1313 235E                              l3011 18F0  
                            l3003 18E0                              l1331 1D54  
                            l1340 1FC2                              l3101 1B42  
                            l1245 19BE                              l3021 1904  
                            l3013 18F4                              l3005 18E4  
                            l1341 1FB0                              l1262 1AD8  
                            l1254 1C8E                              l1246 19AC  
                            l1271 1BA8                              l3111 1B6A  
                            l3103 1B46                              l1247 1972  
                            l3031 193E                              l3023 1908  
                            l3015 18F8                              l3007 18E8  
                            l1335 20B8                              l1272 1B96  
                            l3121 1BC4                              l3113 1B78  
                            l3105 1B56                              l3041 1990  
                            l3033 195A                              l3025 190C  
                            l3017 18FC                              l3009 18EC  
                            l3201 1DD8                              l1338 1F4A  
                            l3131 1C2E                              l3123 1BD2  
                            l3115 1B8E                              l3107 1B58  
                            l3051 19DC                              l3043 199E  
                            l3035 196A                              l3019 1900  
                            l3027 1910                              l3211 1E1A  
                            l3203 1DE4                              l1348 207A  
                            l1372 29C2                              l3141 1C68  
                            l3133 1C4E                              l3125 1C0C  
                            l3061 1A1C                              l3109 1B66  
                            l3045 19A0                              l3037 1980  
                            l3029 1914                              l3221 1E7C  
                            l3213 1E26                              l3205 1DF0  
                            l3143 1C6E                              l3135 1C52  
                            l3119 1BB8                              l3127 1C0E  
                            l3071 1A46                              l3063 1A28  
                            l3055 19F0                              l3047 19AA  
                            l3039 198C                              l3231 1F12  
                            l3223 1E88                              l3215 1E36  
                            l3207 1DFE                              l3151 1C90  
                            l1375 2B1E                              l3311 29E8  
                            l3303 296E                              l3145 1C7C  
                            l3137 1C60                              l3129 1C1E  
                            l3081 1AB8                              l3065 1A2C  
                            l3057 1A00                              l3049 19CC  
                            l3073 1A4C                              l3241 1F68  
                            l3233 1F30                              l3225 1EA4  
                            l3217 1E50                              l3209 1E0A  
                            l3161 1CCC                              l3153 1C9C  
                            l3321 2A42                              l3305 297E  
                            l3401 2C64                              l1386 2AB6  
                            l3147 1C7E                              l3139 1C66  
                            l3091 1B12                              l3075 1A72  
                            l3083 1AC8                              l3067 1A3A  
                            l3059 1A0E                              l3251 1FD2  
                            l3243 1F6C                              l3235 1F3A  
                            l3227 1ECE                              l3219 1E60  
                            l3171 1CFE                              l3163 1CDC  
                            l3155 1CAA                              l3331 2AA6  
                            l3323 2A44                              l1379 2A5A  
                            l3315 29FC                              l3307 298C  
                            l3403 2C70                              l3411 2CF2  
                            l1299 2452                              l3093 1B1C  
                            l3085 1AEE                              l3077 1AA6  
                            l3069 1A3C                              l3261 2034  
                            l3253 1FDE                              l3245 1F7A  
                            l3237 1F48                              l3229 1F04  
                            l3181 1D3E                              l3173 1D0C  
                            l3165 1CE2                              l3157 1CAC  
                            l3341 2AFE                              l3333 2AC4  
                            l3325 2A50                              l3317 2A04  
                            l3309 29D2                              l3405 2C80  
                            l3421 2D58                              l3413 2D02  
                            l3501 3592                              l3095 1B2A  
                            l3087 1AFE                              l3079 1AA8  
                            l3271 209C                              l3263 2048  
                            l3255 1FEC                              l3247 1FA8  
                            l3239 1F5A                              l3191 1D88  
                            l3183 1D44                              l3175 1D0E  
                            l3167 1CF2                              l3159 1CBC  
                            l3343 2B0C                              l3335 2AC6  
                            l3327 2A8C                              l3319 2A10  
                            l3407 2C84                              l3423 2D70  
                            l3415 2D16                              l3431 2D9C  
                            l3351 32EC                              l3511 35A8  
                            l3503 359C                              l3097 1B2C  
                            l3281 2F38                              l3273 209E  
                            l3265 2062                              l3257 2016  
                            l3193 1D94                              l3185 1D64  
                            l3177 1D1E                              l3169 1CF8  
                            l3345 2B0E                              l3337 2ACA  
                            l3329 2A98                              l3441 2E02  
                            l3433 2DB4                              l3425 2D7C  
                            l3417 2D34                              l3409 2CCC  
                            l3521 36E0                              l3601 2252  
                            l3353 3332                              l3505 35A2  
                            l3513 3654                              l3451 31D6  
                            l3099 1B3A                              l3291 2FC2  
                            l3283 2F66                              l3267 207E  
                            l3275 20A4                              l3259 201A  
                            l3195 1D9E                              l3187 1D74  
                            l3179 1D2E                              l3339 2AEE  
                            l3443 2E12                              l3435 2DCC  
                            l3427 2D88                              l3419 2D4C  
                            l3611 22A0                              l3603 2266  
                            l3531 20BA                              l3363 33DC  
                            l3371 33D2                              l3507 35A4  
                            l3515 36FA                              l3525 3714  
                            l3701 344C                              l2901 30F6  
                            l3453 31E2                              l3445 318E  
                            l3293 2FD4                              l3285 2F76  
                            l3277 20A8                              l3269 208E  
                            l3197 1DB4                              l3381 2BAE  
                            l3437 2DD8                              l3429 2D94  
                            l3461 347C                              l3621 22E8  
                            l3613 22B0                              l3605 2274  
                            l3541 20F6                              l3533 20C6  
                            l3365 3422                              l3357 333C  
                            l3509 35A6                              l3349 3632  
                            l3517 3700                              l3527 373E  
                            l3711 3456                              l3703 344E  
                            l3447 31B2                              l3455 31EA  
                            l3471 323A                              l3295 2FE2  
                            l3287 2FA4                              l3199 1DC0  
                            l3391 2C14                              l3383 2BCC  
                            l3375 2B20                              l3439 2DE8  
                            l3463 348C                              l3519 36CC  
                            l3631 2328                              l3623 22F6  
                            l3615 22C2                              l3607 2280  
                            l3551 2126                              l3543 2106  
                            l3535 20D4                              l2911 370E  
                            l3359 3382                              l3529 36E4  
                            l3721 3476                              l3713 3460  
                            l3705 3450                              l3457 3202  
                            l3449 31CA                              l3473 3246  
                            l3297 3032                              l3289 2FB4  
                            l3393 2C20                              l3385 2BE4  
                            l3377 2B8A                              l3481 34CA  
                            l3465 34AC                              l3641 239A  
                            l3633 2356                              l3617 22D8  
                            l3625 2308                              l3609 229E  
                            l3561 215C                              l3553 212C  
                            l3545 2108                              l3537 20D6  
                            l2921 351A                              l2905 372A  
                            l2913 3720                              l3369 338C  
                            l3801 0EA8                              l3715 3462  
                            l3707 3452                              l3491 313C  
                            l3475 3252                              l3467 321C  
                            l3299 3038                              l3395 2C2C  
                            l3387 2BF0                              l3379 2B9A  
                            l3483 34DA                              l3731 36AA  
                            l3723 3692                              l3651 2412  
                            l3643 23C4                              l3627 2316  
                            l3619 22DE                              l3571 219C  
                            l3563 216C                              l3555 213A  
                            l3539 20E6                              l3547 2110  
                            l2851 35BC                              l2931 3556  
                            l2923 351E                              l2907 372E  
                            l2915 3724                              l3459 328E  
                            l3811 10F6                              l3803 1030  
                            l3717 346E                              l3709 3454  
                            l2861 303C                              l2941 285C  
                            l3493 3148                              l3469 3222  
                            l3477 325A                              l3389 2C08  
                            l3397 2C34                              l3485 34FA  
                            l3733 36AC                              l3725 369C  
                            l3741 3688                              l3661 2448  
                            l3653 242E                              l3637 2380  
                            l3645 23C8                              l3629 231A  
                            l3573 21AC                              l3581 21CC  
                            l3565 216E                              l3557 213C  
                            l3549 2120                              l2853 35CC  
                            l2925 3526                              l2917 3734  
                            l2909 370A                              l3901 1792  
                            l3805 1062                              l3813 10FE  
                            l3671 36BC                              l3719 3472  
                            l2871 3068                              l2863 3040  
                            l2855 360A                              l2943 287C  
                            l2935 2798                              l3495 3154  
                            l3487 3100                              l3479 3272  
                            l2951 17DC                              l3399 2C4C  
                            l3751 249E                              l3743 2454  
                            l3735 36AE                              l3727 369E  
                            l3655 2432                              l3647 23E2  
                            l3639 238C                              l3591 220A  
                            l3583 21DC                              l3575 21B4  
                            l3559 214C                              l3567 2176  
                            l2927 352E                              l2919 3738  
                            l3911 17CA                              l3815 1130  
                            l3823 11C8                              l3807 1094  
                            l3673 36C4                              l2881 3096  
                            l2873 3070                              l2865 304E  
                            l2857 3626                              l2945 2898  
                            l2937 27B4                              l3489 3124  
                            l3497 315C                              l2961 181C  
                            l2953 17EA                              l3761 254A  
                            l3753 24D8                              l3745 2464  
                            l3729 36A0                              l3737 3672  
                            l3657 2440                              l3649 23F8  
                            l3593 221A                              l3585 21DC  
                            l3577 21B8                              l3569 2186  
                            l2929 3554                              l3905 17AC  
                            l3825 11FA                              l3833 1292  
                            l3817 1162                              l3809 10C6  
                            l3681 355E                              l3921 2E4A  
                            l3675 36C6                              l3691 342E  
                            l2891 30D0                              l2883 309E  
                            l2875 3074                              l2867 3056  
                            l2947 2902                              l2939 2816  
                            l3499 3174                              l2971 184E  
                            l2963 181E                              l2955 17EC  
                            l3771 25EC                              l3763 2558  
                            l3755 24E6                              l3747 2472  
                            l3739 3678                              l3659 2446  
                            l3595 222A                              l3835 12C4  
                            l3843 1384                              l3827 122C  
                            l3819 1194                              l3683 3568  
                            l3931 2E82                              l3923 2E56  
                            l3677 36C8                              l3669 36B2  
                            l3693 3442                              l2893 30D2  
                            l2885 30AC                              l2877 307C  
                            l2869 305A                              l2981 1876  
                            l2973 1850                              l2957 17FC  
                            l2965 1826                              l2949 17D0  
                            l3781 2684                              l3773 2612  
                            l3765 2588                              l3757 24FA  
                            l3749 2486                              l3597 223A  
                            l3589 21F0                              l3845 13B6  
                            l3853 1476                              l3837 12F6  
                            l3829 125E                              l3909 17C4  
                            l3685 3578                              l3941 2E98  
                            l3933 2E86                              l3925 2E66  
                            l3917 2E16                              l3695 3446  
                            l2895 30D8                              l2887 30B2  
                            l2879 308E                              l2991 18B0  
                            l2983 1886                              l2975 1856  
                            l2967 1836                              l2959 180C  
                            l3791 273E                              l3783 26B4  
                            l3775 2620                              l3767 25AE  
                            l3759 2510                              l3599 2242  
                            l3855 14A8                              l3863 1540  
                            l3847 13E8                              l3839 1328  
                            l3687 3582                              l3679 355A  
                            l3951 2EFC                              l3943 2EBA  
                            l3935 2E8A                              l3927 2E6E  
                            l3919 2E42                              l3697 3448  
                            l2889 30C8                              l2897 30DE  
                            l2993 18C2                              l2985 1896  
                            l2977 1864                              l2969 183C  
                            l3793 274C                              l3785 26DA  
                            l3777 2650                              l3769 25BC  
                            l3881 16D0                              l3865 1572  
                            l3873 160A                              l3857 14DA  
                            l3849 141A                              l3689 358C  
                            l3953 2F0E                              l3945 2ECA  
                            l3937 2E90                              l3929 2E7A  
                            l3699 344A                              l2899 30EE  
                            l2995 18D0                              l2987 1898  
                            l2979 1866                              l3795 277C  
                            l3787 26E8                              l3779 2676  
                            l3891 1722                              l3883 16D4  
                            l3875 163C                              l3867 15A4  
                            l3859 150C                              l3955 2F2A  
                            l3947 2ED0                              l3939 2E94  
                            l2997 18D4                              l2989 18A0  
                            l3797 2794                              l3789 2718  
                            l3893 1746                              l3877 166E  
                            l3885 16DC                              l3869 15D6  
                            l3949 2EE8                              l2999 18D8  
                            l3895 1756                              l3887 16F4  
                            l3879 16A0                              l3799 0EA4  
                            l3897 175A                              l3889 1700  
                            l3899 1762                              STR_1 0E01  
                            STR_2 0E9F                              STR_4 0E94  
                            STR_8 0E87                              u3000 1D2E  
                            u3001 1D2A                              u3010 1D64  
                            u3011 1D60                              u3100 1FEC  
                            u3020 1D74                              u3101 1FE8  
                            u3021 1D70                              u3110 2034  
                            u3030 1EEE                              u3111 2030  
                            u3120 2062                              u3040 1F48  
                            u3200 298C                              u4000 1194  
                    _BAUD4CONbits 000EE9                              u3121 205E  
                            u3041 1F44                              u3201 2988  
                            u4001 1190                              _LATE 000F7D  
                            u3130 209C                              u3050 1F68  
                            u3210 29E8                              u4010 11FA  
                            u3131 2098                              u3051 1F64  
                            u3035 1EE4                              u3211 29E4  
                            u4011 11F6                              _LATG 000F7F  
                            u3140 2F66                              u3060 1F7A  
                            u3220 2A3E                              u2420 35CC  
                            u2500 3542                              u4100 14A8  
                            u4020 122C                              u3141 2F62  
                            u3061 1F76                              u3221 2A3A  
                            u2421 35C8                              u2501 353A  
                            u4101 14A4                              u4021 1228  
                            u3150 2FA4                              u3070 1FA8  
                            u3230 2A88                              u2430 35E2  
                            u4110 14DA                              u4030 125E  
                            u3151 2FA0                              u3071 1FA4  
                            u3231 2A84                              u2431 35DE  
                            u4111 14D6                              u4031 125A  
                            u2440 304E                              u2520 27B4  
                            u2600 1864                              u3160 2FC2  
                            u3080 1FBE                              u3240 2AA6  
                            u3320 2BC0                              u4200 1746  
                            u4120 150C                              u4040 12C4  
                            u2441 304A                              u2521 27B0  
                            u2601 1860                              u3161 2FBE  
                            u3081 1FBA                              u3241 2AA2  
                            u3321 2BB8                              u4201 1742  
                            u4121 1508                              u4041 12C0  
                            u3305 3644                              u2450 3068  
                            u2530 2898                              u2610 1876  
                            u3170 2FE2                              u3090 1FD2  
                            u3250 2AB6                              u3410 2D4C  
                            u4210 1756                              u4130 1572  
                            u4050 12F6                              u3306 3646  
                            _T2PR 000FBC                              u2451 3064  
                            u2531 2894                              u2611 1872  
                            u3171 2FDE                              u3091 1FCE  
                            u3251 2AB2                              u3411 2D48  
                            u4211 1752                              u4131 156E  
                            u4051 12F2                              u3315 364E  
                            u2460 308E                              u3500 328A  
                            u2700 19BE                              u2620 1886  
                            u3180 3032                              u3260 2AC4  
                            u3340 2BE4                              u3420 2D70  
                            u4220 17A4                              u4140 15A4  
                            u4060 1328                              u3316 3650  
                            u2461 308A                              u3501 3286  
                            u2701 19BA                              u2621 1882  
                            u3181 302E                              u3261 2AC0  
                            u3341 2BE0                              u3421 2D6C  
                            u4221 179E                              u4141 15A0  
                            u4061 1324                              u2470 30AC  
                            u2710 19CC                              u2630 18C2  
                            u3270 2AFE                              u3190 297E  
                            u3350 2C08                              u3430 2DB4  
                            u3510 34DA                              u2518 3544  
                            u4230 17A6                              u4150 15D6  
                            u4070 13B6                              u2471 30A8  
                            u2711 19C8                              u2631 18BE  
                            u3271 2AFA                              u3191 297A  
                            u3351 2C04                              u3431 2DB0  
                            u3511 34D6                              u4151 15D2  
                            u4071 13B2                              u2480 30C8  
                            u2544 28F2                              u3520 3174  
                            u2800 1B2A                              u2720 19DC  
                            u2640 18D0                              u2560 17EA  
                            u3280 2B0C                              u3360 2C4C  
                            u3440 2DCC                              u3408 2D2A  
                            u3600 215C                              u4160 163C  
                            u4080 13E8                              u2481 30C4  
                            u2545 28EE                              u3521 3170  
                            u2801 1B26                              u2721 19D8  
                            u2641 18CC                              u2561 17E6  
                            u3281 2B08                              u3361 2C48  
                            u3441 2DC8                              u3601 2158  
                            u4161 1638                              u4081 13E4  
                            u2490 30EE                              u2554 295C  
                            u3530 318C                              u2810 1B3A  
                            u2730 1A0E                              u2650 193E  
                            u2570 17FC                              u3370 2C64  
                            u3338 2BC2                              u3450 2E02  
                            u3610 219C                              u4170 166E  
                            u4090 141A                              u4250 2EBA  
                            u2491 30EA                              u2555 2958  
                            u3531 3188                              u2811 1B36  
                            u2731 1A0A                              u2651 193A  
                            u2571 17F8                              u3371 2C60  
                            u3451 2DFE                              u3611 2198  
                            u4171 166A                              u4091 1416  
                            u4251 2EB6                              u3460 3202  
                            u2900 1C1E                              u2820 1B56  
                            u2740 1A1C                              u2660 1956  
                            u2580 180C                              u3380 2CC8  
                            u3540 36DC                              u3700 2328  
                            u3620 21DC                              u4180 16A0  
                            u4260 2EC8                              u3461 31FE  
                            u2901 1C1A                              u2821 1B52  
                            u2741 1A18                              u2661 1950  
                            u2581 1808                              u3381 2CC4  
                            u3541 36D8                              u3701 2324  
                            u3621 21D8                              u4181 169C  
                            u4261 2EC4                              u3470 321A  
                            u2910 1C2E                              u2830 1B66  
                            u2750 1A3A                              u2670 1958  
                            u2590 184E                              u3390 2D28  
                            u3710 2356                              u3630 2252  
                            u3550 20D4                              u4190 1722  
                            u4270 2F0E                              u3471 3216  
                            u2911 1C2A                              u2831 1B62  
                            u2751 1A36                              u2591 184A  
                            u3391 2D20                              u3711 2352  
                            u3631 224E                              u3551 20D0  
                            u4191 171E                              u3295 363A  
                            u4271 2F0A                              u2920 1C4E  
                            u2840 1B78                              u2760 1A72  
                            u2680 1980                              u3480 348C  
                            u3800 2472                              u3720 236C  
                            u3640 2274                              u3560 20E6  
                            u3296 363C                              u2921 1C4A  
                            u2841 1B74                              u2761 1A6E  
                            u2681 197C                              u3481 3488  
                            u3801 246E                              u3721 2368  
                            u3641 2270                              u3561 20E2  
                            u3490 3272                              u2930 1C60  
                            u2850 1B8E                              u2770 1AB8  
                            u2690 199E                              u3810 24D8  
                            u3730 2380                              u3650 229E  
                            u3570 20F6                              u3491 326E  
                            u2931 1C5C                              u2851 1B8A  
                            u2771 1AB4                              u2691 199A  
                            u3811 24D4                              u3731 237C  
                            u3651 229A                              u3571 20F2  
                            u2940 1C7C                              u2860 1BA4  
                            u2780 1AEE                              u3900 2684  
                            u3820 24E6                              u3740 239A  
                            u3660 22C2                              u3580 213A  
                            u2941 1C78                              u2861 1BA0  
                            u2781 1AEA                              u3901 2680  
                            u3821 24E2                              u3741 2396  
                            u3661 22BE                              u3581 2136  
                            u2870 1BB8                              u2790 1AFE  
                            u2950 1CAA                              u3910 26DA  
                            u3830 254A                              u3750 23E2  
                            u3670 22D8                              u3590 214C  
                            u2871 1BB4                              u2791 1AFA  
                            u2951 1CA6                              u3911 26D6  
                            u3831 2546                              u3751 23DE  
                            u3671 22D4                              u3591 2148  
                            u2880 1BD2                              u2960 1CBC  
                            u3920 26E8                              u3840 2558  
                            u3760 2412                              u3680 22F6  
                            u2881 1BCE                              u2961 1CB8  
                            u3921 26E4                              u3841 2554  
                            u3761 240E                              u3681 22F2  
                            u2890 1C0C                              u2970 1CCC  
                            u3930 273E                              u3850 25AE  
                            u3770 2440                              u3690 2316  
                            u2891 1C08                              u2971 1CC8  
                            u3931 273A                              u3851 25AA  
                            u3771 243C                              u3691 2312  
                            u2980 1D0C                              u3940 274C  
                            u3860 25BC                              u3780 3688  
                            u2981 1D08                              u3941 2748  
                            u3861 25B8                              u3781 3684  
                            u2990 1D1E                              u3870 2612  
                            u3790 2464                              u3950 1062  
                            u2991 1D1A                              u3871 260E  
                            u3791 2460                              u3951 105E  
                            u4807 356E                              u3880 2620  
                            u3960 1094                              u3881 261C  
                            u4817 16E6                              u3961 1090  
                            u3890 2676                              u3970 10C6  
                            u4907 2722                              u3891 2672  
                            u4827 2490                              u3971 10C2  
                            u3980 1130                              u4917 2786  
                            u4837 24BC                              u3981 112C  
                            u3990 1162                              u4927 2D96  
                            u4847 2504                              u3991 115E  
                            u4937 2DDE                              u4857 252E  
                            u4947 2E08                              u4867 2592  
                            u4957 2C2E                              u4877 25F6  
                            u4797 2EDA                              u4967 2C76  
                            u4887 265A                              u4977 3254  
                            u4897 26BE                              u4987 3156  
                            u4997 31E4                       main@current 00C1  
         __end_of_DCmotors_setPWM 296C                              _main 2E16  
                            _left 2B20                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              _stop 321C  
                            prodh 000FF4                              prodl 000FF3  
                            start 0000                  __end_of_ADC_init 36CC  
                 ___fldiv@new_exp 0020                      ___param_bank 000000  
          ??_clicker2buttons_init 0001                   __end_of___fladd 1C90  
                           ?_main 0001                             ?_left 0038  
                           _ADPCH 000F5F                   __end_of___fldiv 2454  
                 __end_of___awdiv 3100                             STR_10 0E9A  
                           STR_12 0E80                             STR_14 0E6D  
                           STR_16 0E8E                             STR_18 0E78  
                           STR_19 0E41                   __end_of___flmul 20BA  
                           ?_stop 001A                   ___awdiv@divisor 0009  
         _colourclick_writetoaddr 3652                   ___awdiv@counter 000B  
      __end_of_I2C_2_Master_Start 3734        __end_of_I2C_2_Master_Write 3714  
        __end_of_DCmotors_testing 2798                   __end_of_forward 321C  
            colourclickLEDs_C@tog 0001                             _right 2CCC  
               _clicker2LEDs_init 373E                             left@i 0043  
                 __end_of_reverse 318E            DCmotors_init@PWMperiod 0001  
              ?_clicker2LEDs_init 0001                             status 000FD8  
           _I2C_2_Master_RepStart 3734                   __initialization 35E4  
             ??_clicker2LEDs_init 0001                      __end_of_main 2F38  
                    __end_of_left 2CCC                      __end_of_stop 328E  
   __size_of_colourcards_readRGBC 092C                            ??_main 0055  
                          ??_left 003E                            ??_stop 001E  
                   __activetblptr 000001            ??_colourclick_readRGBC 000E  
       __end_of_clicker2LEDs_init 3748                   _colourcard_flag 00B4  
                          _ADRESH 000F64         __size_of_colourclick_init 0038  
                          ?_right 001A                  ___awdiv@dividend 0007  
                          _RC0PPS 000E62                            _RC4REG 000EE3  
                          _RE2PPS 000E74                            _RD5PPS 000E6F  
                          _RC7PPS 000E69                            _RD6PPS 000E70  
                ?_DCmotors_setPWM 000F                            _RX4PPS 000E15  
                          _TX4REG 000EE4                  __end_of___xxtofl 2B20  
                    ??_ADC_getval 0001                            ___flge 2F38  
          colourcards_readRGBC@mL 004D            colourcards_readRGBC@mR 004F  
                       ??___fladd 0030                            ___wmul 360A  
                       ??___fldiv 0017                         ??___awdiv 000B  
                       ??___flmul 0017                  ??_buggyLEDs_init 0001  
       colourcards_readRGBC@B_rel 00BD         colourcards_readRGBC@G_rel 00B9  
       ??_colourclick_writetoaddr 0004                            clear_0 35EA  
                          clear_1 35F6         colourcards_readRGBC@R_rel 00B5  
                ___awdiv@quotient 000D                            isa$std 000001  
                          left@mL 0038                            left@mR 003A  
                       ??_forward 001E                            right@i 0024  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptru 000FF8                         ?_ADC_init 0001  
                       ??_reverse 001E                            stop@mL 001A  
                          stop@mR 001C                __end_of_ADC_getval 36E4  
                    ?_USART4_init 0001                        ___flge@ff1 000F  
                      ___flge@ff2 0013                      ___xxtofl@arg 000B  
                    ___xxtofl@exp 000A                      ___xxtofl@val 0001  
                __end_of_turnleft 3518                        __accesstop 0060  
         __end_of__initialization 35FC            ?_I2C_2_Master_RepStart 0001  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
                   __end_of_right 2E16     checkbatterylevel@batterylevel 0002  
                      ??_ADC_init 0001        __size_of_clicker2LEDs_init 000A  
                         ??_right 0020     __size_of_colourclickLEDs_init 000E  
 __end_of_colourclick_writetoaddr 3672                        __pbssBANK0 0060  
               _checkbatterylevel 3672                ?_checkbatterylevel 0001  
                    _T2CLKCONbits 000FBF                           ?___flge 000F  
                         ?___wmul 0001               ??_checkbatterylevel 0002  
                       ?___xxtofl 0001                           _SP4BRGH 000EE6  
                         _SP4BRGL 000EE5                           _PWM6DCH 000FA3  
                         _PWM7DCH 000FA0                           _SSP2ADD 000ED6  
                         _SSP2BUF 000ED5                  _colourclick_init 355A  
               ?_DCmotors_testing 004B         __end_of_checkbatterylevel 3692  
              ??_DCmotors_testing 004F            __size_of_DCmotors_init 0050  
                       _ADREFbits 000F58                _I2C_2_Master_Start 372A  
              _I2C_2_Master_Write 3708                           __Hparam 0000  
              __size_of_turnright 004E                           __Lparam 0000  
                 __size_of___flge 0104                           ___fladd 17D0  
                         ___fldiv 20BA                           ___awdiv 303C  
                         ___flmul 1C90                   __size_of___wmul 0026  
             ?_I2C_2_Master_Start 0001               ?_I2C_2_Master_Write 0001  
                    __psmallconst 0E00                           __pcinit 35E4  
                         __ramtop 0E00                           __ptext0 2E16  
                         __ptext1 355A                           __ptext2 3652  
                         __ptext3 36FA                           __ptext4 3630  
                         __ptext5 3592                           __ptext6 0EA4  
                         __ptext7 328E                           __ptext8 32EC  
                         __ptext9 333C     __size_of_clicker2buttons_init 000C  
                       ?_turnleft 0045                         _T2CONbits 000FBD  
                         _forward 318E                        ??___xxtofl 0005  
                       _T2HLTbits 000FBE                           _reverse 3100  
                   _RxBufWriteCnt 005E              ??_I2C_2_Master_Start 0002  
                         left@deg 003C              ??_I2C_2_Master_Write 0002  
            end_of_initialization 35FC      __end_of_colourcards_readRGBC 17D0  
                ADC_getval@tmpval 0001              __size_of_USART4_init 0020  
                         right@mL 001A                           right@mR 001C  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE      colourclick_writetoaddr@value 0003  
                   _DCmotors_init 342C                         _PORTFbits 000F8E  
                      ??_turnleft 004B                       ___fladd@grs 0037  
                   ___xxtofl@sign 0009                         _TRISAbits 000F81  
                       _TRISCbits 000F83                         _TRISDbits 000F84  
                       _TRISEbits 000F85                 __end_of_turnright 34CA  
                       _TRISFbits 000F86                         _TRISGbits 000F87  
                       _TRISHbits 000F88                       ___fldiv@grs 0022  
                     ___fldiv@rem 001B     __size_of_colourclick_readRGBC 005E  
               __size_of_ADC_init 001A           ??_I2C_2_Master_RepStart 0002  
            colourclick_readB@tmp 000A              colourclick_readC@tmp 000A  
      __size_of_checkbatterylevel 0020              colourclick_readG@tmp 000A  
                     _CM1CON0bits 000ED0                       _CM1CON1bits 000ED1  
            colourclick_readR@tmp 000A                       ___flmul@grs 001C  
                    _EUSART4RXbuf 009C                      _EUSART4TXbuf 0060  
                      main@motorL 00C9                        main@motorR 00D2  
        __size_of_DCmotors_setPWM 01D4                    __end_of___flge 303C  
      colourclick_readRGBC@tmpval 000C                    ?_DCmotors_init 0001  
                  __end_of___wmul 3630               start_initialization 35E4  
                   _TxBufWriteCnt 005C                  _unknowncard_flag 005A  
                 _returnhome_flag 0059                      turnright@deg 0049  
        ?_colourclick_writetoaddr 0003                          ??___flge 0017  
    __end_of_colourclickLEDs_init 3708                          ??___wmul 0005  
        __end_of_colourclick_init 3592                DCmotors_testing@mL 004B  
              DCmotors_testing@mR 004D              _colourcards_readRGBC 0EA4  
                       ___fladd@a 002C                         ___fladd@b 0028  
                       ___fldiv@a 0013                         ___fldiv@b 000F  
                       ___flmul@a 0013                         ___flmul@b 000F  
                     __pbssCOMRAM 0057                     __pcstackBANK0 00B5  
         __size_of_buggyLEDs_init 0016                 __size_of___xxtofl 01B4  
                       __pnvBANK0 00DB                       _clear_lower 00B2  
                     _clear_upper 00B0                   ??_DCmotors_init 0001  
       __size_of_DCmotors_testing 0344                          ?___fladd 0028  
                        ?___fldiv 000F                          ?___awdiv 0007  
                        ?___flmul 000F             ?_colourcards_readRGBC 004B  
                      right@delay 0022              I2C_2_Master_Read@ack 0003  
               ??_DCmotors_setPWM 0011              I2C_2_Master_Read@tmp 0004  
           _interrupts_lowerbound 0057                       __smallconst 0E00  
                        ?_forward 001A                 _I2C_2_Master_Idle 35BC  
               _I2C_2_Master_Init 3592                 _I2C_2_Master_Read 3518  
               _I2C_2_Master_Stop 3720                 __size_of_turnleft 004E  
                    _RxBufReadCnt 005D                          _ADC_init 36B2  
                        ?_reverse 001A                ?_I2C_2_Master_Idle 0001  
              ?_I2C_2_Master_Init 0001                ?_I2C_2_Master_Read 0001  
              ?_I2C_2_Master_Stop 0001                    __size_of_right 014A  
    __end_of_clicker2buttons_init 3720               ??_I2C_2_Master_Idle 0001  
             ??_I2C_2_Master_Init 0001               ??_I2C_2_Master_Read 0002  
                  ___wmul@product 0005                          _LATAbits 000F79  
             ??_I2C_2_Master_Stop 0002                          _LATCbits 000F7B  
               _colourclickLEDs_C 3630                          _LATDbits 000F7C  
                        _LATEbits 000F7D                          _LATFbits 000F7E  
                        _LATGbits 000F7F                          _LATHbits 000F80  
                        _PIE0bits 000E29                          _PIE4bits 000E2D  
              ?_colourclickLEDs_C 0001                          _PIR0bits 000E33  
                        _PIR4bits 000E37                          _SSP2CON2 000EDA  
          DCmotors_setPWM@PWMduty 0018                          _SSP2STAT 000ED8  
             ??_colourclickLEDs_C 0001                 _colourclick_readB 33DC  
               _colourclick_readC 338C                 _colourclick_readG 333C  
               _colourclick_readR 32EC                        _ADCON0bits 000F60  
       __end_of_I2C_2_Master_Idle 35E4         __end_of_I2C_2_Master_Init 35BC  
       __end_of_I2C_2_Master_Read 355A                 ___wmul@multiplier 0001  
              ?_colourclick_readB 0005                ?_colourclick_readC 0005  
              ?_colourclick_readG 0005                ?_colourclick_readR 0005  
       __end_of_I2C_2_Master_Stop 372A             _interrupts_upperbound 00DB  
     I2C_2_Master_Write@data_byte 0002                 _DCmotors_turntime 00DD  
                       left@delay 003F                      _TxBufReadCnt 005B  
                      _CM1NCHbits 000ED2               ??_colourclick_readB 0007  
             ??_colourclick_readC 0007               ??_colourclick_readG 0007  
             ??_colourclick_readR 0007                        _CM1PCHbits 000ED3  
                   ??_USART4_init 0001       __size_of_I2C_2_Master_Start 000A  
            _colourclickLEDs_init 36FA       __size_of_I2C_2_Master_Write 000C  
                       _turnright 347C         __end_of_colourclickLEDs_C 3652  
                     turnleft@deg 0049    __size_of_I2C_2_Master_RepStart 000A  
   __end_of_I2C_2_Master_RepStart 373E                          __Hrparam 0000  
                     turnright@mL 0045                       turnright@mR 0047  
                      _ADC_getval 36CC      __end_of_colourclick_readRGBC 32EC  
                        __Lrparam 0000                      __Lsmallconst 0E00  
       __end_of_colourclick_readB 342C         __end_of_colourclick_readC 33DC  
       __end_of_colourclick_readG 338C         __end_of_colourclick_readR 333C  
                       forward@mL 001A                         forward@mR 001C  
          ??_colourcards_readRGBC 0051                  __size_of___fladd 04C0  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flmul 042A                        _ANSELDbits 000EA7  
                      _ANSELFbits 000EB4                          ___xxtofl 296C  
                  _buggyLEDs_init 36E4                  __size_of_forward 008E  
                        __ptext10 338C                          __ptext11 33DC  
                        __ptext20 36CC                          __ptext12 3708  
                        __ptext21 3692                          __ptext13 3720  
                        __ptext30 17D0                          __ptext22 2454  
                        __ptext14 372A                          __ptext31 321C  
                        __ptext23 347C                          __ptext15 3734  
                        __ptext40 36E4                          __ptext32 3100  
                        __ptext24 34CA                          __ptext16 3518  
                        __ptext41 36B2                          __ptext33 318E  
                        __ptext25 2CCC                          __ptext17 35BC  
                        __ptext34 2798                          __ptext26 2B20  
                        __ptext18 20BA                          __ptext35 360A  
                        __ptext27 296C                          __ptext19 3672  
                        __ptext36 303C                          __ptext28 1C90  
                        __ptext37 342C                          __ptext29 2F38  
                        __ptext38 3714                          __ptext39 373E  
                __size_of_reverse 008E             ?_colourclickLEDs_init 0001  
                    _SSP2CON1bits 000ED9                      _SSP2CON2bits 000EDA  
                      ?_turnright 0045                     __size_of_main 0122  
                   __size_of_left 01AC                     __size_of_stop 0072  
             __end_of_USART4_init 36B2                         reverse@mL 001A  
                       reverse@mR 001C                          isa$xinst 000000  
                _DCmotors_testing 2454                        _RC4STAbits 000EE7  
               ?_colourclick_init 0001                ??_colourclick_init 0005  
      __size_of_I2C_2_Master_Idle 0028        __size_of_I2C_2_Master_Init 002A  
      __size_of_I2C_2_Master_Read 0042                  DCmotors_setPWM@m 000F  
            _clicker2buttons_init 3714        __size_of_I2C_2_Master_Stop 000A  
                        _turnleft 34CA                        turnleft@mL 0045  
                      turnleft@mR 0047            __end_of_buggyLEDs_init 36FA  
                      _INTCONbits 000FF2  __size_of_colourclick_writetoaddr 0020  
  colourclick_writetoaddr@address 0004                       _PWM6CONbits 000FA4  
                     _PWM7CONbits 000FA1        __size_of_colourclickLEDs_C 0022  
                    _DAC1CON0bits 000EC6                      _DAC1CON1bits 000EC7  
                        right@deg 001E                   _DCmotors_setPWM 2798  
                     ?_ADC_getval 0001        __size_of_colourclick_readB 0050  
      __size_of_colourclick_readC 0050        __size_of_colourclick_readG 0050  
      __size_of_colourclick_readR 0050             ?_clicker2buttons_init 0001  
                 ?_buggyLEDs_init 0001                        _SSP2DATPPS 000E1D  
                      _SSP2CLKPPS 000E1C            ??_colourclickLEDs_init 0002  
            _colourclick_readRGBC 328E                     ___fladd@signs 0034  
                     _USART4_init 3692                        _TX4STAbits 000EE8  
                     ??_turnright 004B                      ___fladd@aexp 0035  
                    ___fladd@bexp 0036  
